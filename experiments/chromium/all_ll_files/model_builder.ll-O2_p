; ModuleID = '../../third_party/tflite/src/tensorflow/lite/model_builder.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/model_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.tflite::FlatBufferModel" = type { %"struct.tflite::Model"*, %"class.tflite::ErrorReporter"*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.tflite::Allocation"* }
%"class.tflite::Allocation" = type <{ i32 (...)**, %"class.tflite::ErrorReporter"*, i32, [4 x i8] }>
%"struct.tflite::Model" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.tflite::ErrorReporter" = type { i32 (...)** }
%"class.tflite::MMAPAllocation" = type { %"class.tflite::Allocation.base", i32, i8*, i64 }
%"class.tflite::Allocation.base" = type <{ i32 (...)**, %"class.tflite::ErrorReporter"*, i32 }>
%"class.tflite::FileCopyAllocation" = type { %"class.tflite::Allocation.base", %"class.std::__1::unique_ptr.1", i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.tflite::TfLiteVerifier" = type { i32 (...)** }
%"class.flatbuffers::Verifier" = type <{ i8*, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%"class.tflite::MemoryAllocation" = type { %"class.tflite::Allocation.base", i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.flatbuffers::Vector" = type { i32 }
%"struct.tflite::Metadata" = type { %"class.flatbuffers::Table" }
%"struct.flatbuffers::String" = type { %"class.flatbuffers::Vector.16" }
%"class.flatbuffers::Vector.16" = type { i32 }
%"class.flatbuffers::Vector.17" = type { i32 }
%"struct.tflite::Buffer" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Vector.18" = type { i32 }
%"struct.tflite::OperatorCode" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SubGraph" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Tensor" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Operator" = type { %"class.flatbuffers::Table" }
%"struct.tflite::QuantizationParameters" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SparsityParameters" = type { %"class.flatbuffers::Table" }
%"struct.tflite::CustomQuantization" = type { %"class.flatbuffers::Table" }
%"struct.tflite::DimensionMetadata" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Int32Vector" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Uint16Vector" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Uint8Vector" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Conv2DOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::DepthwiseConv2DOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ConcatEmbeddingsOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::LSHProjectionOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::Pool2DOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SVDFOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::RNNOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::FullyConnectedOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SoftmaxOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ConcatenationOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::AddOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::L2NormOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::LocalResponseNormalizationOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::LSTMOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ResizeBilinearOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::CallOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ReshapeOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SkipGramOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SpaceToDepthOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::EmbeddingLookupSparseOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::MulOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::GatherOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ReducerOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SubOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::DivOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SqueezeOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SequenceRNNOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::StridedSliceOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SplitOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::CastOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ArgMaxOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::TransposeConvOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SparseToDenseOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ShapeOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ArgMinOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::FakeQuantOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::PackOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::OneHotOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::UnpackOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::BidirectionalSequenceLSTMOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::BidirectionalSequenceRNNOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::UnidirectionalSequenceLSTMOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ResizeNearestNeighborOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::LeakyReluOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::MirrorPadOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::SplitVOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::UniqueOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::ReverseSequenceOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::IfOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::WhileOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::DepthToSpaceOptions" = type { %"class.flatbuffers::Table" }
%"struct.tflite::BatchMatMulOptions" = type { %"class.flatbuffers::Table" }

$_ZNK6tflite5Model6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite12OperatorCode6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite8SubGraph6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite6Tensor6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite22QuantizationParameters6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite18CustomQuantization6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite18SparsityParameters6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite17DimensionMetadata6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite11Int32Vector6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite12Uint16Vector6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite11Uint8Vector6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite8Operator6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZN6tflite20VerifyBuiltinOptionsERN11flatbuffers8VerifierEPKvNS_14BuiltinOptionsE = comdat any

$_ZNK6tflite13Conv2DOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite22DepthwiseConv2DOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite23ConcatEmbeddingsOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite13Pool2DOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite11SVDFOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite21FullyConnectedOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite33LocalResponseNormalizationOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite11LSTMOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite14ReshapeOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite15SkipGramOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite14SqueezeOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite18SequenceRNNOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite19StridedSliceOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite20TransposeConvOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite16FakeQuantOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite32BidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite31BidirectionalSequenceRNNOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite33UnidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite6Buffer6VerifyERN11flatbuffers8VerifierE = comdat any

$_ZNK6tflite8Metadata6VerifyERN11flatbuffers8VerifierE = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@.str.1 = private unnamed_addr constant [41 x i8] c"The model is not a valid Flatbuffer file\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"The model is not a valid Flatbuffer buffer\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"min_runtime_version\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"Min_runtime_version in model metadata is malformed\00", align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"Model provided has model identifier '%c%c%c%c', should be '%s'\0A\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"TFL3\00", align 1

@_ZN6tflite15FlatBufferModelC1EPKNS_5ModelEPNS_13ErrorReporterE = hidden unnamed_addr alias void (%"class.tflite::FlatBufferModel"*, %"struct.tflite::Model"*, %"class.tflite::ErrorReporter"*), void (%"class.tflite::FlatBufferModel"*, %"struct.tflite::Model"*, %"class.tflite::ErrorReporter"*)* @_ZN6tflite15FlatBufferModelC2EPKNS_5ModelEPNS_13ErrorReporterE
@_ZN6tflite15FlatBufferModelC1ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE = hidden unnamed_addr alias void (%"class.tflite::FlatBufferModel"*, %"class.tflite::Allocation"*, %"class.tflite::ErrorReporter"*), void (%"class.tflite::FlatBufferModel"*, %"class.tflite::Allocation"*, %"class.tflite::ErrorReporter"*)* @_ZN6tflite15FlatBufferModelC2ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE
@_ZN6tflite15FlatBufferModelD1Ev = hidden unnamed_addr alias void (%"class.tflite::FlatBufferModel"*), void (%"class.tflite::FlatBufferModel"*)* @_ZN6tflite15FlatBufferModelD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::Allocation"* @_ZN6tflite21GetAllocationFromFileEPKcbPNS_13ErrorReporterEb(i8*, i1 zeroext, %"class.tflite::ErrorReporter"*, i1 zeroext) local_unnamed_addr #0 {
  br i1 %1, label %5, label %10

5:                                                ; preds = %4
  %6 = tail call zeroext i1 @_ZN6tflite14MMAPAllocation11IsSupportedEv() #7
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call i8* @_Znwm(i64 40) #8
  %9 = bitcast i8* %8 to %"class.tflite::MMAPAllocation"*
  tail call void @_ZN6tflite14MMAPAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::MMAPAllocation"* nonnull %9, i8* %0, %"class.tflite::ErrorReporter"* %2) #7
  br label %13

10:                                               ; preds = %4, %5
  %11 = tail call i8* @_Znwm(i64 40) #8
  %12 = bitcast i8* %11 to %"class.tflite::FileCopyAllocation"*
  tail call void @_ZN6tflite18FileCopyAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::FileCopyAllocation"* nonnull %12, i8* %0, %"class.tflite::ErrorReporter"* %2) #7
  br label %13

13:                                               ; preds = %7, %10
  %14 = phi i8* [ %8, %7 ], [ %11, %10 ]
  %15 = bitcast i8* %14 to %"class.tflite::Allocation"*
  ret %"class.tflite::Allocation"* %15
}

declare zeroext i1 @_ZN6tflite14MMAPAllocation11IsSupportedEv() local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN6tflite14MMAPAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::MMAPAllocation"*, i8*, %"class.tflite::ErrorReporter"*) unnamed_addr #1

declare void @_ZN6tflite18FileCopyAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::FileCopyAllocation"*, i8*, %"class.tflite::ErrorReporter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel13BuildFromFileEPKcPNS_13ErrorReporterE(i8*, %"class.tflite::ErrorReporter"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.tflite::ErrorReporter"* %1, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi %"class.tflite::ErrorReporter"* [ %5, %4 ], [ %1, %2 ]
  %8 = tail call zeroext i1 @_ZN6tflite14MMAPAllocation11IsSupportedEv() #7
  %9 = tail call i8* @_Znwm(i64 40) #8
  br i1 %8, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast i8* %9 to %"class.tflite::MMAPAllocation"*
  tail call void @_ZN6tflite14MMAPAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::MMAPAllocation"* nonnull %11, i8* %0, %"class.tflite::ErrorReporter"* %7) #7
  br label %14

12:                                               ; preds = %6
  %13 = bitcast i8* %9 to %"class.tflite::FileCopyAllocation"*
  tail call void @_ZN6tflite18FileCopyAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::FileCopyAllocation"* nonnull %13, i8* %0, %"class.tflite::ErrorReporter"* %7) #7
  br label %14

14:                                               ; preds = %12, %10
  %15 = bitcast i8* %9 to %"class.tflite::Allocation"*
  %16 = tail call i8* @_Znwm(i64 24) #8
  %17 = bitcast i8* %16 to %"class.tflite::FlatBufferModel"*
  tail call void @_ZN6tflite15FlatBufferModelC2ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE(%"class.tflite::FlatBufferModel"* nonnull %17, %"class.tflite::Allocation"* nonnull %15, %"class.tflite::ErrorReporter"* %7)
  %18 = ptrtoint i8* %16 to i64
  %19 = bitcast i8* %16 to %"struct.tflite::Model"**
  %20 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %19, align 8
  %21 = icmp eq %"struct.tflite::Model"* %20, null
  br i1 %21, label %22, label %33

22:                                               ; preds = %14
  %23 = getelementptr inbounds i8, i8* %16, i64 16
  %24 = bitcast i8* %23 to %"class.tflite::Allocation"**
  %25 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %24, align 8
  store %"class.tflite::Allocation"* null, %"class.tflite::Allocation"** %24, align 8
  %26 = icmp eq %"class.tflite::Allocation"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.tflite::Allocation"* %25 to void (%"class.tflite::Allocation"*)***
  %29 = load void (%"class.tflite::Allocation"*)**, void (%"class.tflite::Allocation"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %29, i64 1
  %31 = load void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %30, align 8
  tail call void %31(%"class.tflite::Allocation"* nonnull %25) #7
  br label %32

32:                                               ; preds = %22, %27
  tail call void @_ZdlPv(i8* nonnull %16) #8
  br label %33

33:                                               ; preds = %14, %32
  %34 = phi i64 [ %18, %14 ], [ 0, %32 ]
  %35 = inttoptr i64 %34 to %"class.tflite::FlatBufferModel"*
  ret %"class.tflite::FlatBufferModel"* %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel22VerifyAndBuildFromFileEPKcPNS_14TfLiteVerifierEPNS_13ErrorReporterE(i8*, %"class.tflite::TfLiteVerifier"*, %"class.tflite::ErrorReporter"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.flatbuffers::Verifier", align 8
  %5 = icmp eq %"class.tflite::ErrorReporter"* %2, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi %"class.tflite::ErrorReporter"* [ %7, %6 ], [ %2, %3 ]
  %10 = tail call zeroext i1 @_ZN6tflite14MMAPAllocation11IsSupportedEv() #7
  %11 = tail call i8* @_Znwm(i64 40) #8
  br i1 %10, label %12, label %14

12:                                               ; preds = %8
  %13 = bitcast i8* %11 to %"class.tflite::MMAPAllocation"*
  tail call void @_ZN6tflite14MMAPAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::MMAPAllocation"* nonnull %13, i8* %0, %"class.tflite::ErrorReporter"* %9) #7
  br label %16

14:                                               ; preds = %8
  %15 = bitcast i8* %11 to %"class.tflite::FileCopyAllocation"*
  tail call void @_ZN6tflite18FileCopyAllocationC1EPKcPNS_13ErrorReporterE(%"class.tflite::FileCopyAllocation"* nonnull %15, i8* %0, %"class.tflite::ErrorReporter"* %9) #7
  br label %16

16:                                               ; preds = %12, %14
  %17 = bitcast i8* %11 to %"class.tflite::Allocation"*
  %18 = bitcast %"class.flatbuffers::Verifier"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 2
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = bitcast i8* %11 to i8* (%"class.tflite::Allocation"*)***
  %22 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %21, align 8
  %23 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %22, i64 2
  %24 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %23, align 8
  %25 = tail call i8* %24(%"class.tflite::Allocation"* nonnull %17) #7
  %26 = bitcast i8* %11 to i64 (%"class.tflite::Allocation"*)***
  %27 = load i64 (%"class.tflite::Allocation"*)**, i64 (%"class.tflite::Allocation"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.tflite::Allocation"*)*, i64 (%"class.tflite::Allocation"*)** %27, i64 3
  %29 = load i64 (%"class.tflite::Allocation"*)*, i64 (%"class.tflite::Allocation"*)** %28, align 8
  %30 = tail call i64 %29(%"class.tflite::Allocation"* nonnull %17) #7
  %31 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 0
  store i8* %25, i8** %31, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 1
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 2
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 0, i32 1000000>, <4 x i32>* %34, align 8
  %35 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 6
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %4, i64 0, i32 7
  store i8 1, i8* %36, align 8
  %37 = icmp ult i64 %30, 8
  br i1 %37, label %54, label %38

38:                                               ; preds = %16
  %39 = getelementptr inbounds i8, i8* %25, i64 4
  %40 = tail call i32 @strncmp(i8* %39, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = bitcast i8* %25 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  %48 = add i64 %30, -1
  %49 = icmp ult i64 %48, %47
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds i8, i8* %25, i64 %47
  %52 = bitcast i8* %51 to %"struct.tflite::Model"*
  %53 = call zeroext i1 @_ZNK6tflite5Model6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Model"* %52, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %4) #7
  br i1 %53, label %56, label %54

54:                                               ; preds = %46, %42, %16, %38, %50
  %55 = call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %92

56:                                               ; preds = %50
  %57 = icmp eq %"class.tflite::TfLiteVerifier"* %1, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %56
  %59 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %21, align 8
  %60 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %59, i64 2
  %61 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %60, align 8
  %62 = call i8* %61(%"class.tflite::Allocation"* nonnull %17) #7
  %63 = load i64 (%"class.tflite::Allocation"*)**, i64 (%"class.tflite::Allocation"*)*** %26, align 8
  %64 = getelementptr inbounds i64 (%"class.tflite::Allocation"*)*, i64 (%"class.tflite::Allocation"*)** %63, i64 3
  %65 = load i64 (%"class.tflite::Allocation"*)*, i64 (%"class.tflite::Allocation"*)** %64, align 8
  %66 = call i64 %65(%"class.tflite::Allocation"* nonnull %17) #7
  %67 = trunc i64 %66 to i32
  %68 = bitcast %"class.tflite::TfLiteVerifier"* %1 to i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)***
  %69 = load i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)**, i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)*** %68, align 8
  %70 = load i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)*, i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)** %69, align 8
  %71 = call zeroext i1 %70(%"class.tflite::TfLiteVerifier"* nonnull %1, i8* %62, i32 %67, %"class.tflite::ErrorReporter"* %9) #7
  br i1 %71, label %72, label %92

72:                                               ; preds = %58, %56
  %73 = call i8* @_Znwm(i64 24) #8
  %74 = bitcast i8* %73 to %"class.tflite::FlatBufferModel"*
  call void @_ZN6tflite15FlatBufferModelC2ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE(%"class.tflite::FlatBufferModel"* nonnull %74, %"class.tflite::Allocation"* nonnull %17, %"class.tflite::ErrorReporter"* %9)
  %75 = ptrtoint i8* %73 to i64
  %76 = bitcast i8* %73 to %"struct.tflite::Model"**
  %77 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %76, align 8
  %78 = icmp eq %"struct.tflite::Model"* %77, null
  br i1 %78, label %79, label %90

79:                                               ; preds = %72
  %80 = getelementptr inbounds i8, i8* %73, i64 16
  %81 = bitcast i8* %80 to %"class.tflite::Allocation"**
  %82 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %81, align 8
  store %"class.tflite::Allocation"* null, %"class.tflite::Allocation"** %81, align 8
  %83 = icmp eq %"class.tflite::Allocation"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %79
  %85 = bitcast %"class.tflite::Allocation"* %82 to void (%"class.tflite::Allocation"*)***
  %86 = load void (%"class.tflite::Allocation"*)**, void (%"class.tflite::Allocation"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %86, i64 1
  %88 = load void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %87, align 8
  call void %88(%"class.tflite::Allocation"* nonnull %82) #7
  br label %89

89:                                               ; preds = %79, %84
  call void @_ZdlPv(i8* nonnull %73) #8
  br label %90

90:                                               ; preds = %72, %89
  %91 = phi i64 [ 0, %89 ], [ %75, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #7
  br label %97

92:                                               ; preds = %58, %54
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #7
  %93 = bitcast i8* %11 to void (%"class.tflite::Allocation"*)***
  %94 = load void (%"class.tflite::Allocation"*)**, void (%"class.tflite::Allocation"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %94, i64 1
  %96 = load void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %95, align 8
  call void %96(%"class.tflite::Allocation"* nonnull %17) #7
  br label %97

97:                                               ; preds = %92, %90
  %98 = phi i64 [ %91, %90 ], [ 0, %92 ]
  %99 = inttoptr i64 %98 to %"class.tflite::FlatBufferModel"*
  ret %"class.tflite::FlatBufferModel"* %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel15BuildFromBufferEPKcmPNS_13ErrorReporterE(i8*, i64, %"class.tflite::ErrorReporter"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.tflite::ErrorReporter"* %2, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi %"class.tflite::ErrorReporter"* [ %6, %5 ], [ %2, %3 ]
  %9 = tail call i8* @_Znwm(i64 40) #8
  %10 = bitcast i8* %9 to %"class.tflite::MemoryAllocation"*
  tail call void @_ZN6tflite16MemoryAllocationC1EPKvmPNS_13ErrorReporterE(%"class.tflite::MemoryAllocation"* nonnull %10, i8* %0, i64 %1, %"class.tflite::ErrorReporter"* %8) #7
  %11 = bitcast i8* %9 to %"class.tflite::Allocation"*
  %12 = tail call i8* @_Znwm(i64 24) #8
  %13 = bitcast i8* %12 to %"class.tflite::FlatBufferModel"*
  tail call void @_ZN6tflite15FlatBufferModelC2ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE(%"class.tflite::FlatBufferModel"* nonnull %13, %"class.tflite::Allocation"* nonnull %11, %"class.tflite::ErrorReporter"* %8)
  %14 = ptrtoint i8* %12 to i64
  %15 = bitcast i8* %12 to %"struct.tflite::Model"**
  %16 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %15, align 8
  %17 = icmp eq %"struct.tflite::Model"* %16, null
  br i1 %17, label %18, label %29

18:                                               ; preds = %7
  %19 = getelementptr inbounds i8, i8* %12, i64 16
  %20 = bitcast i8* %19 to %"class.tflite::Allocation"**
  %21 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %20, align 8
  store %"class.tflite::Allocation"* null, %"class.tflite::Allocation"** %20, align 8
  %22 = icmp eq %"class.tflite::Allocation"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.tflite::Allocation"* %21 to void (%"class.tflite::Allocation"*)***
  %25 = load void (%"class.tflite::Allocation"*)**, void (%"class.tflite::Allocation"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %25, i64 1
  %27 = load void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %26, align 8
  tail call void %27(%"class.tflite::Allocation"* nonnull %21) #7
  br label %28

28:                                               ; preds = %18, %23
  tail call void @_ZdlPv(i8* nonnull %12) #8
  br label %29

29:                                               ; preds = %7, %28
  %30 = phi i64 [ %14, %7 ], [ 0, %28 ]
  %31 = inttoptr i64 %30 to %"class.tflite::FlatBufferModel"*
  ret %"class.tflite::FlatBufferModel"* %31
}

declare void @_ZN6tflite16MemoryAllocationC1EPKvmPNS_13ErrorReporterE(%"class.tflite::MemoryAllocation"*, i8*, i64, %"class.tflite::ErrorReporter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel24VerifyAndBuildFromBufferEPKcmPNS_14TfLiteVerifierEPNS_13ErrorReporterE(i8*, i64, %"class.tflite::TfLiteVerifier"*, %"class.tflite::ErrorReporter"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.flatbuffers::Verifier", align 8
  %6 = icmp eq %"class.tflite::ErrorReporter"* %3, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %9

9:                                                ; preds = %4, %7
  %10 = phi %"class.tflite::ErrorReporter"* [ %8, %7 ], [ %3, %4 ]
  %11 = bitcast %"class.flatbuffers::Verifier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  %12 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 0
  store i8* %0, i8** %12, align 8
  %13 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 1
  store i64 %1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 2
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 64, i32 0, i32 1000000>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 6
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %5, i64 0, i32 7
  store i8 1, i8* %17, align 8
  %18 = icmp ult i64 %1, 8
  br i1 %18, label %35, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds i8, i8* %0, i64 4
  %21 = tail call i32 @strncmp(i8* %20, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = bitcast i8* %0 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  %29 = add i64 %1, -1
  %30 = icmp ult i64 %29, %28
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %0, i64 %28
  %33 = bitcast i8* %32 to %"struct.tflite::Model"*
  %34 = call zeroext i1 @_ZNK6tflite5Model6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Model"* %33, %"class.flatbuffers::Verifier"* nonnull dereferenceable(48) %5) #7
  br i1 %34, label %37, label %35

35:                                               ; preds = %27, %23, %9, %19, %31
  %36 = call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %10, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %47

37:                                               ; preds = %31
  %38 = icmp eq %"class.tflite::TfLiteVerifier"* %2, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %37
  %40 = trunc i64 %1 to i32
  %41 = bitcast %"class.tflite::TfLiteVerifier"* %2 to i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)***
  %42 = load i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)**, i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)*** %41, align 8
  %43 = load i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)*, i1 (%"class.tflite::TfLiteVerifier"*, i8*, i32, %"class.tflite::ErrorReporter"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.tflite::TfLiteVerifier"* nonnull %2, i8* %0, i32 %40, %"class.tflite::ErrorReporter"* %10) #7
  br i1 %44, label %45, label %47

45:                                               ; preds = %37, %39
  %46 = call %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel15BuildFromBufferEPKcmPNS_13ErrorReporterE(i8* %0, i64 %1, %"class.tflite::ErrorReporter"* %10)
  br label %47

47:                                               ; preds = %39, %45, %35
  %48 = phi %"class.tflite::FlatBufferModel"* [ %46, %45 ], [ null, %35 ], [ null, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #7
  ret %"class.tflite::FlatBufferModel"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.tflite::FlatBufferModel"* @_ZN6tflite15FlatBufferModel14BuildFromModelEPKNS_5ModelEPNS_13ErrorReporterE(%"struct.tflite::Model"*, %"class.tflite::ErrorReporter"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.tflite::ErrorReporter"* %1, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi %"class.tflite::ErrorReporter"* [ %5, %4 ], [ %1, %2 ]
  %8 = tail call i8* @_Znwm(i64 24) #8
  %9 = bitcast i8* %8 to %"struct.tflite::Model"**
  store %"struct.tflite::Model"* %0, %"struct.tflite::Model"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to %"class.tflite::ErrorReporter"**
  %12 = icmp eq %"class.tflite::ErrorReporter"* %7, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %6
  %14 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  %15 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %9, align 8
  br label %16

16:                                               ; preds = %13, %6
  %17 = phi %"struct.tflite::Model"* [ %15, %13 ], [ %0, %6 ]
  %18 = phi %"class.tflite::ErrorReporter"* [ %14, %13 ], [ %7, %6 ]
  store %"class.tflite::ErrorReporter"* %18, %"class.tflite::ErrorReporter"** %11, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 16
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = ptrtoint i8* %8 to i64
  %22 = icmp eq %"struct.tflite::Model"* %17, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %16
  tail call void @_ZdlPv(i8* nonnull %8) #8
  br label %24

24:                                               ; preds = %16, %23
  %25 = phi i64 [ %21, %16 ], [ 0, %23 ]
  %26 = inttoptr i64 %25 to %"class.tflite::FlatBufferModel"*
  ret %"class.tflite::FlatBufferModel"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6tflite15FlatBufferModel17GetMinimumRuntimeEv(%"class.std::__1::basic_string"* noalias sret, %"class.tflite::FlatBufferModel"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %1, i64 0, i32 0
  %5 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %4, align 8
  %6 = icmp eq %"struct.tflite::Model"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.tflite::Model"* %5 to i32*
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = sub nsw i64 0, %10
  %12 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %5, i64 0, i32 0, i32 0, i64 %11
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = icmp ugt i16 %14, 16
  br i1 %15, label %16, label %36

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %12, i64 16
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i64
  %21 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %5, i64 0, i32 0, i32 0, i64 %20
  %22 = icmp eq i16 %19, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %16
  %24 = bitcast i8* %21 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %21, i64 %26
  %28 = icmp eq i8* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  br label %40

36:                                               ; preds = %7, %16, %23, %2
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 0, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %39, align 8
  br label %280

40:                                               ; preds = %152, %29
  %41 = phi i32 [ %156, %152 ], [ %9, %29 ]
  %42 = phi %"struct.tflite::Model"* [ %154, %152 ], [ %5, %29 ]
  %43 = phi i64 [ %153, %152 ], [ 0, %29 ]
  %44 = sext i32 %41 to i64
  %45 = sub nsw i64 0, %44
  %46 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %42, i64 0, i32 0, i32 0, i64 %45
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp ugt i16 %48, 16
  br i1 %49, label %50, label %63

50:                                               ; preds = %40
  %51 = getelementptr inbounds i8, i8* %46, i64 16
  %52 = bitcast i8* %51 to i16*
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %42, i64 0, i32 0, i32 0, i64 %54
  %56 = icmp eq i16 %53, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %50
  %58 = bitcast i8* %55 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %55, i64 %60
  %62 = bitcast i8* %61 to %"class.flatbuffers::Vector"*
  br label %63

63:                                               ; preds = %40, %50, %57
  %64 = phi %"class.flatbuffers::Vector"* [ %62, %57 ], [ null, %50 ], [ null, %40 ]
  %65 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %43, %67
  br i1 %68, label %69, label %276

69:                                               ; preds = %63
  br i1 %49, label %70, label %83

70:                                               ; preds = %69
  %71 = getelementptr inbounds i8, i8* %46, i64 16
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %42, i64 0, i32 0, i32 0, i64 %74
  %76 = icmp eq i16 %73, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %70
  %78 = bitcast i8* %75 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %75, i64 %80
  %82 = bitcast i8* %81 to %"class.flatbuffers::Vector"*
  br label %83

83:                                               ; preds = %69, %70, %77
  %84 = phi %"class.flatbuffers::Vector"* [ %82, %77 ], [ null, %70 ], [ null, %69 ]
  %85 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %84, i64 1, i32 0
  %86 = getelementptr inbounds i32, i32* %85, i64 %43
  %87 = bitcast i32* %86 to i8*
  %88 = load i32, i32* %86, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = bitcast i8* %90 to %"struct.tflite::Metadata"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7
  %92 = bitcast i8* %90 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %91, i64 0, i32 0, i32 0, i64 %95
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp ugt i16 %98, 4
  br i1 %99, label %100, label %113

100:                                              ; preds = %83
  %101 = getelementptr inbounds i8, i8* %96, i64 4
  %102 = bitcast i8* %101 to i16*
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  %105 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %91, i64 0, i32 0, i32 0, i64 %104
  %106 = icmp eq i16 %103, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %100
  %108 = bitcast i8* %105 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %105, i64 %110
  %112 = bitcast i8* %111 to %"struct.flatbuffers::String"*
  br label %113

113:                                              ; preds = %83, %100, %107
  %114 = phi %"struct.flatbuffers::String"* [ %112, %107 ], [ null, %100 ], [ null, %83 ]
  %115 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %114, i64 0, i32 0
  %116 = getelementptr inbounds %"class.flatbuffers::Vector.16", %"class.flatbuffers::Vector.16"* %115, i64 1, i32 0
  %117 = bitcast i32* %116 to i8*
  %118 = getelementptr inbounds %"struct.flatbuffers::String", %"struct.flatbuffers::String"* %114, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4, !noalias !2
  %120 = zext i32 %119 to i64
  %121 = icmp ult i32 %119, 23
  br i1 %121, label %127, label %122

122:                                              ; preds = %113
  %123 = add nuw nsw i64 %120, 16
  %124 = and i64 %123, 8589934576
  %125 = call i8* @_Znwm(i64 %124) #8, !noalias !2
  store i8* %125, i8** %31, align 8, !alias.scope !2
  %126 = or i64 %124, -9223372036854775808
  store i64 %126, i64* %32, align 8, !alias.scope !2
  store i64 %120, i64* %33, align 8, !alias.scope !2
  br label %130

127:                                              ; preds = %113
  %128 = trunc i32 %119 to i8
  store i8 %128, i8* %35, align 1, !alias.scope !2
  %129 = icmp eq i32 %119, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127, %122
  %131 = phi i8* [ %125, %122 ], [ %30, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* align 1 %117, i64 %120, i1 false) #7
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i8* [ %30, %127 ], [ %131, %130 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %120
  store i8 0, i8* %134, align 1
  %135 = load i8, i8* %35, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i64, i64* %33, align 8
  %138 = zext i8 %135 to i64
  %139 = select i1 %136, i64 %137, i64 %138
  %140 = icmp eq i64 %139, 19
  br i1 %140, label %141, label %145

141:                                              ; preds = %132
  %142 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 19) #7
  %143 = icmp eq i32 %142, 0
  %144 = load i8, i8* %35, align 1
  br label %145

145:                                              ; preds = %132, %141
  %146 = phi i8 [ %144, %141 ], [ %135, %132 ]
  %147 = phi i1 [ %143, %141 ], [ false, %132 ]
  %148 = icmp slt i8 %146, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %145
  %150 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %150) #8
  br label %151

151:                                              ; preds = %145, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7
  br i1 %147, label %157, label %152

152:                                              ; preds = %151
  %153 = add nuw nsw i64 %43, 1
  %154 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %4, align 8
  %155 = bitcast %"struct.tflite::Model"* %154 to i32*
  %156 = load i32, i32* %155, align 4
  br label %40

157:                                              ; preds = %151
  %158 = bitcast i8* %90 to %"struct.tflite::Metadata"*
  %159 = bitcast i8* %90 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %158, i64 0, i32 0, i32 0, i64 %162
  %164 = bitcast i8* %163 to i16*
  %165 = load i16, i16* %164, align 2
  %166 = icmp ugt i16 %165, 6
  br i1 %166, label %167, label %178

167:                                              ; preds = %157
  %168 = getelementptr inbounds i8, i8* %163, i64 6
  %169 = bitcast i8* %168 to i16*
  %170 = load i16, i16* %169, align 2
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %167
  %173 = zext i16 %170 to i64
  %174 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %158, i64 0, i32 0, i32 0, i64 %173
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  br label %178

178:                                              ; preds = %157, %167, %172
  %179 = phi i64 [ %177, %172 ], [ 0, %167 ], [ 0, %157 ]
  %180 = load %"struct.tflite::Model"*, %"struct.tflite::Model"** %4, align 8
  %181 = bitcast %"struct.tflite::Model"* %180 to i32*
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = sub nsw i64 0, %183
  %185 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %180, i64 0, i32 0, i32 0, i64 %184
  %186 = bitcast i8* %185 to i16*
  %187 = load i16, i16* %186, align 2
  %188 = icmp ugt i16 %187, 12
  br i1 %188, label %189, label %202

189:                                              ; preds = %178
  %190 = getelementptr inbounds i8, i8* %185, i64 12
  %191 = bitcast i8* %190 to i16*
  %192 = load i16, i16* %191, align 2
  %193 = zext i16 %192 to i64
  %194 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %180, i64 0, i32 0, i32 0, i64 %193
  %195 = icmp eq i16 %192, 0
  br i1 %195, label %202, label %196

196:                                              ; preds = %189
  %197 = bitcast i8* %194 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %194, i64 %199
  %201 = bitcast i8* %200 to %"class.flatbuffers::Vector.17"*
  br label %202

202:                                              ; preds = %178, %189, %196
  %203 = phi %"class.flatbuffers::Vector.17"* [ %201, %196 ], [ null, %189 ], [ null, %178 ]
  %204 = getelementptr inbounds %"class.flatbuffers::Vector.17", %"class.flatbuffers::Vector.17"* %203, i64 1, i32 0
  %205 = getelementptr inbounds i32, i32* %204, i64 %179
  %206 = bitcast i32* %205 to i8*
  %207 = load i32, i32* %205, align 4
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds i8, i8* %206, i64 %208
  %210 = bitcast i8* %209 to %"struct.tflite::Buffer"*
  %211 = bitcast i8* %209 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds %"struct.tflite::Buffer", %"struct.tflite::Buffer"* %210, i64 0, i32 0, i32 0, i64 %214
  %216 = bitcast i8* %215 to i16*
  %217 = load i16, i16* %216, align 2
  %218 = icmp ugt i16 %217, 4
  br i1 %218, label %219, label %232

219:                                              ; preds = %202
  %220 = getelementptr inbounds i8, i8* %215, i64 4
  %221 = bitcast i8* %220 to i16*
  %222 = load i16, i16* %221, align 2
  %223 = zext i16 %222 to i64
  %224 = getelementptr inbounds %"struct.tflite::Buffer", %"struct.tflite::Buffer"* %210, i64 0, i32 0, i32 0, i64 %223
  %225 = icmp eq i16 %222, 0
  br i1 %225, label %232, label %226

226:                                              ; preds = %219
  %227 = bitcast i8* %224 to i32*
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %224, i64 %229
  %231 = bitcast i8* %230 to %"class.flatbuffers::Vector.18"*
  br label %232

232:                                              ; preds = %202, %219, %226
  %233 = phi %"class.flatbuffers::Vector.18"* [ %231, %226 ], [ null, %219 ], [ null, %202 ]
  %234 = getelementptr inbounds %"class.flatbuffers::Vector.18", %"class.flatbuffers::Vector.18"* %233, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %269, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.flatbuffers::Vector.18", %"class.flatbuffers::Vector.18"* %233, i64 1, i32 0
  %239 = bitcast i32* %238 to i8*
  %240 = zext i32 %235 to i64
  br label %241

241:                                              ; preds = %237, %266
  %242 = phi i64 [ 0, %237 ], [ %267, %266 ]
  %243 = getelementptr inbounds i8, i8* %239, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %246, label %266

246:                                              ; preds = %241
  %247 = trunc i64 %242 to i32
  %248 = and i64 %242, 4294967295
  %249 = icmp ult i32 %247, 23
  br i1 %249, label %258, label %250

250:                                              ; preds = %246
  %251 = add nuw i64 %242, 16
  %252 = and i64 %251, 4294967280
  %253 = call i8* @_Znwm(i64 %252) #8
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %253, i8** %254, align 8
  %255 = or i64 %252, -9223372036854775808
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %248, i64* %257, align 8
  br label %264

258:                                              ; preds = %246
  %259 = trunc i64 %242 to i8
  %260 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  store i8 %259, i8* %261, align 1
  %262 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %263 = icmp eq i32 %247, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %258, %250
  %265 = phi i8* [ %253, %250 ], [ %262, %258 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %265, i8* align 1 %239, i64 %248, i1 false) #7
  br label %273

266:                                              ; preds = %241
  %267 = add nuw nsw i64 %242, 1
  %268 = icmp ult i64 %267, %240
  br i1 %268, label %241, label %269

269:                                              ; preds = %266, %232
  %270 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %1, i64 0, i32 1
  %271 = load %"class.tflite::ErrorReporter"*, %"class.tflite::ErrorReporter"** %270, align 8
  %272 = call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %271, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %276

273:                                              ; preds = %258, %264
  %274 = phi i8* [ %262, %258 ], [ %265, %264 ]
  %275 = getelementptr inbounds i8, i8* %274, i64 %248
  store i8 0, i8* %275, align 1
  br label %280

276:                                              ; preds = %63, %269
  %277 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  store i8 0, i8* %278, align 1
  %279 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %279, align 8
  br label %280

280:                                              ; preds = %273, %276, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite15FlatBufferModel20CheckModelIdentifierEv(%"class.tflite::FlatBufferModel"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %2, align 8
  %4 = bitcast %"class.tflite::Allocation"* %3 to i8* (%"class.tflite::Allocation"*)***
  %5 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %4, align 8
  %6 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %5, i64 2
  %7 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %6, align 8
  %8 = tail call i8* %7(%"class.tflite::Allocation"* %3) #7
  %9 = getelementptr inbounds i8, i8* %8, i64 4
  %10 = tail call i32 @strncmp(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %1
  %13 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %2, align 8
  %14 = bitcast %"class.tflite::Allocation"* %13 to i8* (%"class.tflite::Allocation"*)***
  %15 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %15, i64 2
  %17 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %16, align 8
  %18 = tail call i8* %17(%"class.tflite::Allocation"* %13) #7
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  %20 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 1
  %21 = load %"class.tflite::ErrorReporter"*, %"class.tflite::ErrorReporter"** %20, align 8
  %22 = load i8, i8* %19, align 1
  %23 = sext i8 %22 to i32
  %24 = getelementptr inbounds i8, i8* %18, i64 5
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = getelementptr inbounds i8, i8* %18, i64 6
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = getelementptr inbounds i8, i8* %18, i64 7
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = tail call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %21, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 %23, i32 %26, i32 %29, i32 %32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %34

34:                                               ; preds = %1, %12
  %35 = phi i1 [ false, %12 ], [ true, %1 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite15FlatBufferModelC2EPKNS_5ModelEPNS_13ErrorReporterE(%"class.tflite::FlatBufferModel"* nocapture, %"struct.tflite::Model"*, %"class.tflite::ErrorReporter"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 0
  store %"struct.tflite::Model"* %1, %"struct.tflite::Model"** %4, align 8
  %5 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 1
  %6 = icmp eq %"class.tflite::ErrorReporter"* %2, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.tflite::ErrorReporter"* [ %8, %7 ], [ %2, %3 ]
  store %"class.tflite::ErrorReporter"* %10, %"class.tflite::ErrorReporter"** %5, align 8
  %11 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 2
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite15FlatBufferModelC2ENSt3__110unique_ptrINS_10AllocationENS1_14default_deleteIS3_EEEEPNS_13ErrorReporterE(%"class.tflite::FlatBufferModel"* nocapture, %"class.tflite::Allocation"*, %"class.tflite::ErrorReporter"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.tflite::Allocation"* %1 to i64
  %5 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 0
  store %"struct.tflite::Model"* null, %"struct.tflite::Model"** %5, align 8
  %6 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 1
  %7 = icmp eq %"class.tflite::ErrorReporter"* %2, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = tail call %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() #7
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi %"class.tflite::ErrorReporter"* [ %9, %8 ], [ %2, %3 ]
  store %"class.tflite::ErrorReporter"* %11, %"class.tflite::ErrorReporter"** %6, align 8
  %12 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.tflite::Allocation"* %1 to i1 (%"class.tflite::Allocation"*)***
  %16 = load i1 (%"class.tflite::Allocation"*)**, i1 (%"class.tflite::Allocation"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.tflite::Allocation"*)*, i1 (%"class.tflite::Allocation"*)** %16, i64 4
  %18 = load i1 (%"class.tflite::Allocation"*)*, i1 (%"class.tflite::Allocation"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.tflite::Allocation"* %1) #7
  br i1 %19, label %20, label %64

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %21, align 8
  %23 = bitcast %"class.tflite::Allocation"* %22 to i8* (%"class.tflite::Allocation"*)***
  %24 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %24, i64 2
  %26 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %25, align 8
  %27 = tail call i8* %26(%"class.tflite::Allocation"* %22) #7
  %28 = getelementptr inbounds i8, i8* %27, i64 4
  %29 = tail call i32 @strncmp(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %52, label %31

31:                                               ; preds = %20
  %32 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %21, align 8
  %33 = bitcast %"class.tflite::Allocation"* %32 to i8* (%"class.tflite::Allocation"*)***
  %34 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %33, align 8
  %35 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %34, i64 2
  %36 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %35, align 8
  %37 = tail call i8* %36(%"class.tflite::Allocation"* %32) #7
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  %39 = load %"class.tflite::ErrorReporter"*, %"class.tflite::ErrorReporter"** %6, align 8
  %40 = load i8, i8* %38, align 1
  %41 = sext i8 %40 to i32
  %42 = getelementptr inbounds i8, i8* %37, i64 5
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = getelementptr inbounds i8, i8* %37, i64 6
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = getelementptr inbounds i8, i8* %37, i64 7
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = tail call i32 (%"class.tflite::ErrorReporter"*, i8*, ...) @_ZN6tflite13ErrorReporter6ReportEPKcz(%"class.tflite::ErrorReporter"* %39, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 %41, i32 %44, i32 %47, i32 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %64

52:                                               ; preds = %20
  %53 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %14, align 8
  %54 = bitcast %"class.tflite::Allocation"* %53 to i8* (%"class.tflite::Allocation"*)***
  %55 = load i8* (%"class.tflite::Allocation"*)**, i8* (%"class.tflite::Allocation"*)*** %54, align 8
  %56 = getelementptr inbounds i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %55, i64 2
  %57 = load i8* (%"class.tflite::Allocation"*)*, i8* (%"class.tflite::Allocation"*)** %56, align 8
  %58 = tail call i8* %57(%"class.tflite::Allocation"* %53) #7
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %58, i64 %61
  %63 = bitcast %"class.tflite::FlatBufferModel"* %0 to i8**
  store i8* %62, i8** %63, align 8
  br label %64

64:                                               ; preds = %52, %10, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite15FlatBufferModelD2Ev(%"class.tflite::FlatBufferModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::FlatBufferModel", %"class.tflite::FlatBufferModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.tflite::Allocation"*, %"class.tflite::Allocation"** %2, align 8
  store %"class.tflite::Allocation"* null, %"class.tflite::Allocation"** %2, align 8
  %4 = icmp eq %"class.tflite::Allocation"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.tflite::Allocation"* %3 to void (%"class.tflite::Allocation"*)***
  %7 = load void (%"class.tflite::Allocation"*)**, void (%"class.tflite::Allocation"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %7, i64 1
  %9 = load void (%"class.tflite::Allocation"*)*, void (%"class.tflite::Allocation"*)** %8, align 8
  tail call void %9(%"class.tflite::Allocation"* nonnull %3) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

declare %"class.tflite::ErrorReporter"* @_ZN6tflite20DefaultErrorReporterEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite5Model6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Model"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Model"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %673

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %673

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Model"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %673, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %673, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %673

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %673, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %673

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %673

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %181

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %673, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %181

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %96 = load i8, i8* %95, align 8, !range !5
  %97 = icmp ne i8 %96, 0
  %98 = icmp ult i64 %18, %91
  %99 = or i1 %97, %98
  br i1 %99, label %673, label %102

100:                                              ; preds = %89
  %101 = icmp ult i64 %18, %91
  br i1 %101, label %673, label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds i8, i8* %9, i64 %91
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %673

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = add i64 %91, %108
  %110 = add i64 %16, -1
  %111 = icmp ult i64 %110, %109
  br i1 %111, label %673, label %112

112:                                              ; preds = %107, %84
  %113 = getelementptr inbounds i8, i8* %69, i64 6
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %181, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %119
  %126 = ptrtoint i8* %123 to i64
  %127 = sub i64 %126, %4
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %132 = load i8, i8* %131, align 8, !range !5
  %133 = icmp ne i8 %132, 0
  %134 = icmp ult i64 %18, %127
  %135 = or i1 %133, %134
  br i1 %135, label %673, label %138

136:                                              ; preds = %125
  %137 = icmp ult i64 %18, %127
  br i1 %137, label %673, label %138

138:                                              ; preds = %130, %136
  %139 = bitcast i8* %123 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, 536870911
  br i1 %141, label %142, label %673

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = add nuw nsw i64 %144, 4
  %146 = icmp ugt i64 %16, %145
  %147 = sub i64 %16, %145
  %148 = icmp uge i64 %147, %127
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %673

150:                                              ; preds = %142, %119
  %151 = bitcast i8* %117 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %117, i64 %153
  %155 = icmp eq i8* %154, null
  br i1 %155, label %181, label %156

156:                                              ; preds = %150
  %157 = bitcast i8* %154 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %181, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %154, i64 4
  %162 = bitcast i8* %161 to i32*
  br label %167

163:                                              ; preds = %167
  %164 = load i32, i32* %157, align 4
  %165 = zext i32 %164 to i64
  %166 = icmp ult i64 %176, %165
  br i1 %166, label %167, label %177

167:                                              ; preds = %163, %160
  %168 = phi i64 [ 0, %160 ], [ %176, %163 ]
  %169 = getelementptr inbounds i32, i32* %162, i64 %168
  %170 = bitcast i32* %169 to i8*
  %171 = load i32, i32* %169, align 4
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = bitcast i8* %173 to %"struct.tflite::OperatorCode"*
  %175 = tail call zeroext i1 @_ZNK6tflite12OperatorCode6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::OperatorCode"* %174, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %176 = add nuw nsw i64 %168, 1
  br i1 %175, label %163, label %673

177:                                              ; preds = %163
  %178 = load i32, i32* %22, align 4
  %179 = sext i32 %178 to i64
  %180 = sub nsw i64 0, %179
  br label %181

181:                                              ; preds = %112, %82, %65, %177, %150, %156
  %182 = phi i64 [ %180, %177 ], [ %68, %150 ], [ %68, %156 ], [ %68, %65 ], [ %68, %82 ], [ %68, %112 ]
  %183 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %182
  %184 = bitcast i8* %183 to i16*
  %185 = load i16, i16* %184, align 2
  %186 = icmp ugt i16 %185, 8
  br i1 %186, label %187, label %292

187:                                              ; preds = %181
  %188 = getelementptr inbounds i8, i8* %183, i64 8
  %189 = bitcast i8* %188 to i16*
  %190 = load i16, i16* %189, align 2
  %191 = icmp eq i16 %190, 0
  br i1 %191, label %220, label %192

192:                                              ; preds = %187
  %193 = load i64, i64* %3, align 8
  %194 = sub i64 %5, %193
  %195 = zext i16 %190 to i64
  %196 = add i64 %194, %195
  %197 = and i64 %196, 3
  %198 = icmp eq i64 %197, 0
  %199 = inttoptr i64 %193 to i8*
  br i1 %198, label %204, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %202 = load i8, i8* %201, align 8, !range !5
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %673

204:                                              ; preds = %200, %192
  %205 = load i64, i64* %15, align 8
  %206 = icmp ugt i64 %205, 4
  %207 = add i64 %205, -4
  %208 = icmp uge i64 %207, %196
  %209 = and i1 %206, %208
  br i1 %209, label %210, label %673

210:                                              ; preds = %204
  %211 = getelementptr inbounds i8, i8* %199, i64 %196
  %212 = bitcast i8* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %673

215:                                              ; preds = %210
  %216 = zext i32 %213 to i64
  %217 = add i64 %196, %216
  %218 = add i64 %205, -1
  %219 = icmp ult i64 %218, %217
  br i1 %219, label %673, label %220

220:                                              ; preds = %215, %187
  %221 = getelementptr inbounds i8, i8* %183, i64 8
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 2
  %224 = zext i16 %223 to i64
  %225 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %224
  %226 = icmp eq i16 %223, 0
  br i1 %226, label %292, label %227

227:                                              ; preds = %220
  %228 = bitcast i8* %225 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %225, i64 %230
  %232 = icmp eq i8* %231, null
  br i1 %232, label %261, label %233

233:                                              ; preds = %227
  %234 = load i64, i64* %3, align 8
  %235 = ptrtoint i8* %231 to i64
  %236 = sub i64 %235, %234
  %237 = and i64 %236, 3
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %243, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %241 = load i8, i8* %240, align 8, !range !5
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %673

243:                                              ; preds = %239, %233
  %244 = load i64, i64* %15, align 8
  %245 = icmp ugt i64 %244, 4
  %246 = add i64 %244, -4
  %247 = icmp uge i64 %246, %236
  %248 = and i1 %245, %247
  br i1 %248, label %249, label %673

249:                                              ; preds = %243
  %250 = bitcast i8* %231 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = icmp ult i32 %251, 536870911
  br i1 %252, label %253, label %673

253:                                              ; preds = %249
  %254 = zext i32 %251 to i64
  %255 = shl nuw nsw i64 %254, 2
  %256 = add nuw nsw i64 %255, 4
  %257 = icmp ugt i64 %244, %256
  %258 = sub i64 %244, %256
  %259 = icmp uge i64 %258, %236
  %260 = and i1 %257, %259
  br i1 %260, label %261, label %673

261:                                              ; preds = %253, %227
  %262 = bitcast i8* %225 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds i8, i8* %225, i64 %264
  %266 = icmp eq i8* %265, null
  br i1 %266, label %292, label %267

267:                                              ; preds = %261
  %268 = bitcast i8* %265 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %292, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds i8, i8* %265, i64 4
  %273 = bitcast i8* %272 to i32*
  br label %278

274:                                              ; preds = %278
  %275 = load i32, i32* %268, align 4
  %276 = zext i32 %275 to i64
  %277 = icmp ult i64 %287, %276
  br i1 %277, label %278, label %288

278:                                              ; preds = %274, %271
  %279 = phi i64 [ 0, %271 ], [ %287, %274 ]
  %280 = getelementptr inbounds i32, i32* %273, i64 %279
  %281 = bitcast i32* %280 to i8*
  %282 = load i32, i32* %280, align 4
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %281, i64 %283
  %285 = bitcast i8* %284 to %"struct.tflite::SubGraph"*
  %286 = tail call zeroext i1 @_ZNK6tflite8SubGraph6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SubGraph"* %285, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %287 = add nuw nsw i64 %279, 1
  br i1 %286, label %274, label %673

288:                                              ; preds = %274
  %289 = load i32, i32* %22, align 4
  %290 = sext i32 %289 to i64
  %291 = sub nsw i64 0, %290
  br label %292

292:                                              ; preds = %220, %181, %288, %261, %267
  %293 = phi i64 [ %291, %288 ], [ %182, %261 ], [ %182, %267 ], [ %182, %181 ], [ %182, %220 ]
  %294 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %293
  %295 = bitcast i8* %294 to i16*
  %296 = load i16, i16* %295, align 2
  %297 = icmp ugt i16 %296, 10
  br i1 %297, label %298, label %487

298:                                              ; preds = %292
  %299 = getelementptr inbounds i8, i8* %294, i64 10
  %300 = bitcast i8* %299 to i16*
  %301 = load i16, i16* %300, align 2
  %302 = icmp eq i16 %301, 0
  br i1 %302, label %331, label %303

303:                                              ; preds = %298
  %304 = load i64, i64* %3, align 8
  %305 = sub i64 %5, %304
  %306 = zext i16 %301 to i64
  %307 = add i64 %305, %306
  %308 = and i64 %307, 3
  %309 = icmp eq i64 %308, 0
  %310 = inttoptr i64 %304 to i8*
  br i1 %309, label %315, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %313 = load i8, i8* %312, align 8, !range !5
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %315, label %673

315:                                              ; preds = %311, %303
  %316 = load i64, i64* %15, align 8
  %317 = icmp ugt i64 %316, 4
  %318 = add i64 %316, -4
  %319 = icmp uge i64 %318, %307
  %320 = and i1 %317, %319
  br i1 %320, label %321, label %673

321:                                              ; preds = %315
  %322 = getelementptr inbounds i8, i8* %310, i64 %307
  %323 = bitcast i8* %322 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = icmp sgt i32 %324, 0
  br i1 %325, label %326, label %673

326:                                              ; preds = %321
  %327 = zext i32 %324 to i64
  %328 = add i64 %307, %327
  %329 = add i64 %316, -1
  %330 = icmp ult i64 %329, %328
  br i1 %330, label %673, label %331

331:                                              ; preds = %326, %298
  %332 = getelementptr inbounds i8, i8* %294, i64 10
  %333 = bitcast i8* %332 to i16*
  %334 = load i16, i16* %333, align 2
  %335 = zext i16 %334 to i64
  %336 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %335
  %337 = icmp eq i16 %334, 0
  br i1 %337, label %380, label %338

338:                                              ; preds = %331
  %339 = bitcast i8* %336 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i64
  %342 = getelementptr inbounds i8, i8* %336, i64 %341
  %343 = icmp eq i8* %342, null
  br i1 %343, label %380, label %344

344:                                              ; preds = %338
  %345 = load i64, i64* %3, align 8
  %346 = ptrtoint i8* %342 to i64
  %347 = sub i64 %346, %345
  %348 = and i64 %347, 3
  %349 = icmp eq i64 %348, 0
  %350 = inttoptr i64 %345 to i8*
  br i1 %349, label %355, label %351

351:                                              ; preds = %344
  %352 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %353 = load i8, i8* %352, align 8, !range !5
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %673

355:                                              ; preds = %351, %344
  %356 = load i64, i64* %15, align 8
  %357 = icmp ugt i64 %356, 4
  %358 = add i64 %356, -4
  %359 = icmp uge i64 %358, %347
  %360 = and i1 %357, %359
  br i1 %360, label %361, label %673

361:                                              ; preds = %355
  %362 = bitcast i8* %342 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = icmp ult i32 %363, 2147483647
  br i1 %364, label %365, label %673

365:                                              ; preds = %361
  %366 = zext i32 %363 to i64
  %367 = add nuw nsw i64 %366, 4
  %368 = add i64 %367, %347
  %369 = icmp ule i64 %356, %367
  %370 = sub i64 %356, %367
  %371 = icmp ult i64 %370, %347
  %372 = or i1 %369, %371
  %373 = add i64 %356, -1
  %374 = icmp ult i64 %373, %368
  %375 = or i1 %374, %372
  br i1 %375, label %673, label %376

376:                                              ; preds = %365
  %377 = getelementptr inbounds i8, i8* %350, i64 %368
  %378 = load i8, i8* %377, align 1
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %380, label %673

380:                                              ; preds = %331, %338, %376
  %381 = icmp ugt i16 %296, 12
  br i1 %381, label %382, label %487

382:                                              ; preds = %380
  %383 = getelementptr inbounds i8, i8* %294, i64 12
  %384 = bitcast i8* %383 to i16*
  %385 = load i16, i16* %384, align 2
  %386 = icmp eq i16 %385, 0
  br i1 %386, label %415, label %387

387:                                              ; preds = %382
  %388 = load i64, i64* %3, align 8
  %389 = sub i64 %5, %388
  %390 = zext i16 %385 to i64
  %391 = add i64 %389, %390
  %392 = and i64 %391, 3
  %393 = icmp eq i64 %392, 0
  %394 = inttoptr i64 %388 to i8*
  br i1 %393, label %399, label %395

395:                                              ; preds = %387
  %396 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %397 = load i8, i8* %396, align 8, !range !5
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %673

399:                                              ; preds = %395, %387
  %400 = load i64, i64* %15, align 8
  %401 = icmp ugt i64 %400, 4
  %402 = add i64 %400, -4
  %403 = icmp uge i64 %402, %391
  %404 = and i1 %401, %403
  br i1 %404, label %405, label %673

405:                                              ; preds = %399
  %406 = getelementptr inbounds i8, i8* %394, i64 %391
  %407 = bitcast i8* %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %410, label %673

410:                                              ; preds = %405
  %411 = zext i32 %408 to i64
  %412 = add i64 %391, %411
  %413 = add i64 %400, -1
  %414 = icmp ult i64 %413, %412
  br i1 %414, label %673, label %415

415:                                              ; preds = %410, %382
  %416 = getelementptr inbounds i8, i8* %294, i64 12
  %417 = bitcast i8* %416 to i16*
  %418 = load i16, i16* %417, align 2
  %419 = zext i16 %418 to i64
  %420 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %419
  %421 = icmp eq i16 %418, 0
  br i1 %421, label %487, label %422

422:                                              ; preds = %415
  %423 = bitcast i8* %420 to i32*
  %424 = load i32, i32* %423, align 4
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds i8, i8* %420, i64 %425
  %427 = icmp eq i8* %426, null
  br i1 %427, label %456, label %428

428:                                              ; preds = %422
  %429 = load i64, i64* %3, align 8
  %430 = ptrtoint i8* %426 to i64
  %431 = sub i64 %430, %429
  %432 = and i64 %431, 3
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %438, label %434

434:                                              ; preds = %428
  %435 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %436 = load i8, i8* %435, align 8, !range !5
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %673

438:                                              ; preds = %434, %428
  %439 = load i64, i64* %15, align 8
  %440 = icmp ugt i64 %439, 4
  %441 = add i64 %439, -4
  %442 = icmp uge i64 %441, %431
  %443 = and i1 %440, %442
  br i1 %443, label %444, label %673

444:                                              ; preds = %438
  %445 = bitcast i8* %426 to i32*
  %446 = load i32, i32* %445, align 4
  %447 = icmp ult i32 %446, 536870911
  br i1 %447, label %448, label %673

448:                                              ; preds = %444
  %449 = zext i32 %446 to i64
  %450 = shl nuw nsw i64 %449, 2
  %451 = add nuw nsw i64 %450, 4
  %452 = icmp ugt i64 %439, %451
  %453 = sub i64 %439, %451
  %454 = icmp uge i64 %453, %431
  %455 = and i1 %452, %454
  br i1 %455, label %456, label %673

456:                                              ; preds = %448, %422
  %457 = bitcast i8* %420 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds i8, i8* %420, i64 %459
  %461 = icmp eq i8* %460, null
  br i1 %461, label %487, label %462

462:                                              ; preds = %456
  %463 = bitcast i8* %460 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %487, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds i8, i8* %460, i64 4
  %468 = bitcast i8* %467 to i32*
  br label %473

469:                                              ; preds = %473
  %470 = load i32, i32* %463, align 4
  %471 = zext i32 %470 to i64
  %472 = icmp ult i64 %482, %471
  br i1 %472, label %473, label %483

473:                                              ; preds = %469, %466
  %474 = phi i64 [ 0, %466 ], [ %482, %469 ]
  %475 = getelementptr inbounds i32, i32* %468, i64 %474
  %476 = bitcast i32* %475 to i8*
  %477 = load i32, i32* %475, align 4
  %478 = zext i32 %477 to i64
  %479 = getelementptr inbounds i8, i8* %476, i64 %478
  %480 = bitcast i8* %479 to %"struct.tflite::Buffer"*
  %481 = tail call zeroext i1 @_ZNK6tflite6Buffer6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Buffer"* %480, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %482 = add nuw nsw i64 %474, 1
  br i1 %481, label %469, label %673

483:                                              ; preds = %469
  %484 = load i32, i32* %22, align 4
  %485 = sext i32 %484 to i64
  %486 = sub nsw i64 0, %485
  br label %487

487:                                              ; preds = %380, %415, %292, %483, %456, %462
  %488 = phi i64 [ %486, %483 ], [ %293, %456 ], [ %293, %462 ], [ %293, %292 ], [ %293, %415 ], [ %293, %380 ]
  %489 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %488
  %490 = bitcast i8* %489 to i16*
  %491 = load i16, i16* %490, align 2
  %492 = icmp ugt i16 %491, 14
  br i1 %492, label %493, label %670

493:                                              ; preds = %487
  %494 = getelementptr inbounds i8, i8* %489, i64 14
  %495 = bitcast i8* %494 to i16*
  %496 = load i16, i16* %495, align 2
  %497 = icmp eq i16 %496, 0
  br i1 %497, label %526, label %498

498:                                              ; preds = %493
  %499 = load i64, i64* %3, align 8
  %500 = sub i64 %5, %499
  %501 = zext i16 %496 to i64
  %502 = add i64 %500, %501
  %503 = and i64 %502, 3
  %504 = icmp eq i64 %503, 0
  %505 = inttoptr i64 %499 to i8*
  br i1 %504, label %510, label %506

506:                                              ; preds = %498
  %507 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %508 = load i8, i8* %507, align 8, !range !5
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %510, label %673

510:                                              ; preds = %506, %498
  %511 = load i64, i64* %15, align 8
  %512 = icmp ugt i64 %511, 4
  %513 = add i64 %511, -4
  %514 = icmp uge i64 %513, %502
  %515 = and i1 %512, %514
  br i1 %515, label %516, label %673

516:                                              ; preds = %510
  %517 = getelementptr inbounds i8, i8* %505, i64 %502
  %518 = bitcast i8* %517 to i32*
  %519 = load i32, i32* %518, align 4
  %520 = icmp sgt i32 %519, 0
  br i1 %520, label %521, label %673

521:                                              ; preds = %516
  %522 = zext i32 %519 to i64
  %523 = add i64 %502, %522
  %524 = add i64 %511, -1
  %525 = icmp ult i64 %524, %523
  br i1 %525, label %673, label %526

526:                                              ; preds = %521, %493
  %527 = getelementptr inbounds i8, i8* %489, i64 14
  %528 = bitcast i8* %527 to i16*
  %529 = load i16, i16* %528, align 2
  %530 = zext i16 %529 to i64
  %531 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %530
  %532 = icmp eq i16 %529, 0
  br i1 %532, label %567, label %533

533:                                              ; preds = %526
  %534 = bitcast i8* %531 to i32*
  %535 = load i32, i32* %534, align 4
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds i8, i8* %531, i64 %536
  %538 = icmp eq i8* %537, null
  br i1 %538, label %567, label %539

539:                                              ; preds = %533
  %540 = load i64, i64* %3, align 8
  %541 = ptrtoint i8* %537 to i64
  %542 = sub i64 %541, %540
  %543 = and i64 %542, 3
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %549, label %545

545:                                              ; preds = %539
  %546 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %547 = load i8, i8* %546, align 8, !range !5
  %548 = icmp eq i8 %547, 0
  br i1 %548, label %549, label %673

549:                                              ; preds = %545, %539
  %550 = load i64, i64* %15, align 8
  %551 = icmp ugt i64 %550, 4
  %552 = add i64 %550, -4
  %553 = icmp uge i64 %552, %542
  %554 = and i1 %551, %553
  br i1 %554, label %555, label %673

555:                                              ; preds = %549
  %556 = bitcast i8* %537 to i32*
  %557 = load i32, i32* %556, align 4
  %558 = icmp ult i32 %557, 536870911
  br i1 %558, label %559, label %673

559:                                              ; preds = %555
  %560 = zext i32 %557 to i64
  %561 = shl nuw nsw i64 %560, 2
  %562 = add nuw nsw i64 %561, 4
  %563 = icmp ugt i64 %550, %562
  %564 = sub i64 %550, %562
  %565 = icmp uge i64 %564, %542
  %566 = and i1 %563, %565
  br i1 %566, label %567, label %673

567:                                              ; preds = %526, %533, %559
  %568 = icmp ugt i16 %491, 16
  br i1 %568, label %569, label %670

569:                                              ; preds = %567
  %570 = getelementptr inbounds i8, i8* %489, i64 16
  %571 = bitcast i8* %570 to i16*
  %572 = load i16, i16* %571, align 2
  %573 = icmp eq i16 %572, 0
  br i1 %573, label %602, label %574

574:                                              ; preds = %569
  %575 = load i64, i64* %3, align 8
  %576 = sub i64 %5, %575
  %577 = zext i16 %572 to i64
  %578 = add i64 %576, %577
  %579 = and i64 %578, 3
  %580 = icmp eq i64 %579, 0
  %581 = inttoptr i64 %575 to i8*
  br i1 %580, label %586, label %582

582:                                              ; preds = %574
  %583 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %584 = load i8, i8* %583, align 8, !range !5
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %586, label %673

586:                                              ; preds = %582, %574
  %587 = load i64, i64* %15, align 8
  %588 = icmp ugt i64 %587, 4
  %589 = add i64 %587, -4
  %590 = icmp uge i64 %589, %578
  %591 = and i1 %588, %590
  br i1 %591, label %592, label %673

592:                                              ; preds = %586
  %593 = getelementptr inbounds i8, i8* %581, i64 %578
  %594 = bitcast i8* %593 to i32*
  %595 = load i32, i32* %594, align 4
  %596 = icmp sgt i32 %595, 0
  br i1 %596, label %597, label %673

597:                                              ; preds = %592
  %598 = zext i32 %595 to i64
  %599 = add i64 %578, %598
  %600 = add i64 %587, -1
  %601 = icmp ult i64 %600, %599
  br i1 %601, label %673, label %602

602:                                              ; preds = %597, %569
  %603 = getelementptr inbounds i8, i8* %489, i64 16
  %604 = bitcast i8* %603 to i16*
  %605 = load i16, i16* %604, align 2
  %606 = zext i16 %605 to i64
  %607 = getelementptr inbounds %"struct.tflite::Model", %"struct.tflite::Model"* %0, i64 0, i32 0, i32 0, i64 %606
  %608 = icmp eq i16 %605, 0
  br i1 %608, label %670, label %609

609:                                              ; preds = %602
  %610 = bitcast i8* %607 to i32*
  %611 = load i32, i32* %610, align 4
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds i8, i8* %607, i64 %612
  %614 = icmp eq i8* %613, null
  br i1 %614, label %643, label %615

615:                                              ; preds = %609
  %616 = load i64, i64* %3, align 8
  %617 = ptrtoint i8* %613 to i64
  %618 = sub i64 %617, %616
  %619 = and i64 %618, 3
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %625, label %621

621:                                              ; preds = %615
  %622 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %623 = load i8, i8* %622, align 8, !range !5
  %624 = icmp eq i8 %623, 0
  br i1 %624, label %625, label %673

625:                                              ; preds = %621, %615
  %626 = load i64, i64* %15, align 8
  %627 = icmp ugt i64 %626, 4
  %628 = add i64 %626, -4
  %629 = icmp uge i64 %628, %618
  %630 = and i1 %627, %629
  br i1 %630, label %631, label %673

631:                                              ; preds = %625
  %632 = bitcast i8* %613 to i32*
  %633 = load i32, i32* %632, align 4
  %634 = icmp ult i32 %633, 536870911
  br i1 %634, label %635, label %673

635:                                              ; preds = %631
  %636 = zext i32 %633 to i64
  %637 = shl nuw nsw i64 %636, 2
  %638 = add nuw nsw i64 %637, 4
  %639 = icmp ugt i64 %626, %638
  %640 = sub i64 %626, %638
  %641 = icmp uge i64 %640, %618
  %642 = and i1 %639, %641
  br i1 %642, label %643, label %673

643:                                              ; preds = %635, %609
  %644 = bitcast i8* %607 to i32*
  %645 = load i32, i32* %644, align 4
  %646 = zext i32 %645 to i64
  %647 = getelementptr inbounds i8, i8* %607, i64 %646
  %648 = icmp eq i8* %647, null
  br i1 %648, label %670, label %649

649:                                              ; preds = %643
  %650 = bitcast i8* %647 to i32*
  %651 = load i32, i32* %650, align 4
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %670, label %653

653:                                              ; preds = %649
  %654 = getelementptr inbounds i8, i8* %647, i64 4
  %655 = bitcast i8* %654 to i32*
  br label %660

656:                                              ; preds = %660
  %657 = load i32, i32* %650, align 4
  %658 = zext i32 %657 to i64
  %659 = icmp ult i64 %669, %658
  br i1 %659, label %660, label %670

660:                                              ; preds = %656, %653
  %661 = phi i64 [ 0, %653 ], [ %669, %656 ]
  %662 = getelementptr inbounds i32, i32* %655, i64 %661
  %663 = bitcast i32* %662 to i8*
  %664 = load i32, i32* %662, align 4
  %665 = zext i32 %664 to i64
  %666 = getelementptr inbounds i8, i8* %663, i64 %665
  %667 = bitcast i8* %666 to %"struct.tflite::Metadata"*
  %668 = tail call zeroext i1 @_ZNK6tflite8Metadata6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Metadata"* %667, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %669 = add nuw nsw i64 %661, 1
  br i1 %668, label %656, label %673

670:                                              ; preds = %656, %567, %602, %487, %643, %649
  %671 = load i32, i32* %26, align 8
  %672 = add i32 %671, -1
  store i32 %672, i32* %26, align 8
  br label %673

673:                                              ; preds = %167, %278, %473, %660, %130, %94, %100, %78, %136, %107, %215, %326, %410, %521, %597, %365, %621, %631, %625, %582, %592, %586, %545, %555, %549, %506, %516, %510, %434, %444, %438, %395, %405, %399, %351, %361, %355, %311, %321, %315, %239, %249, %243, %200, %210, %204, %138, %102, %42, %21, %10, %35, %46, %56, %14, %670, %635, %559, %448, %376, %253, %142, %60
  %674 = phi i1 [ false, %635 ], [ false, %597 ], [ false, %559 ], [ false, %521 ], [ false, %448 ], [ false, %410 ], [ false, %376 ], [ false, %326 ], [ false, %253 ], [ false, %215 ], [ false, %142 ], [ false, %107 ], [ false, %78 ], [ false, %60 ], [ true, %670 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %100 ], [ false, %102 ], [ false, %94 ], [ false, %136 ], [ false, %138 ], [ false, %130 ], [ false, %204 ], [ false, %210 ], [ false, %200 ], [ false, %243 ], [ false, %249 ], [ false, %239 ], [ false, %315 ], [ false, %321 ], [ false, %311 ], [ false, %365 ], [ false, %355 ], [ false, %361 ], [ false, %351 ], [ false, %399 ], [ false, %405 ], [ false, %395 ], [ false, %438 ], [ false, %444 ], [ false, %434 ], [ false, %510 ], [ false, %516 ], [ false, %506 ], [ false, %549 ], [ false, %555 ], [ false, %545 ], [ false, %586 ], [ false, %592 ], [ false, %582 ], [ false, %625 ], [ false, %631 ], [ false, %621 ], [ false, %660 ], [ false, %473 ], [ false, %278 ], [ false, %167 ]
  ret i1 %674
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite12OperatorCode6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::OperatorCode"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::OperatorCode"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %170

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %170

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::OperatorCode"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %170, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %170, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %170

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %170, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %170

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %170

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::OperatorCode", %"struct.tflite::OperatorCode"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %169

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %170, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %169

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %113, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %97 = load i8, i8* %96, align 8, !range !5
  %98 = icmp ne i8 %97, 0
  %99 = icmp ult i64 %18, %92
  %100 = or i1 %98, %99
  br i1 %100, label %170, label %103

101:                                              ; preds = %90
  %102 = icmp ult i64 %18, %92
  br i1 %102, label %170, label %103

103:                                              ; preds = %95, %101
  %104 = getelementptr inbounds i8, i8* %9, i64 %92
  %105 = bitcast i8* %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %170

108:                                              ; preds = %103
  %109 = zext i32 %106 to i64
  %110 = add i64 %92, %109
  %111 = add i64 %16, -1
  %112 = icmp ult i64 %111, %110
  br i1 %112, label %170, label %113

113:                                              ; preds = %108, %85
  %114 = getelementptr inbounds i8, i8* %69, i64 6
  %115 = bitcast i8* %114 to i16*
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i64
  %118 = getelementptr inbounds %"struct.tflite::OperatorCode", %"struct.tflite::OperatorCode"* %0, i64 0, i32 0, i32 0, i64 %117
  %119 = icmp eq i16 %116, 0
  br i1 %119, label %158, label %120

120:                                              ; preds = %113
  %121 = bitcast i8* %118 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %118, i64 %123
  %125 = icmp eq i8* %124, null
  br i1 %125, label %158, label %126

126:                                              ; preds = %120
  %127 = ptrtoint i8* %124 to i64
  %128 = sub i64 %127, %4
  %129 = and i64 %128, 3
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %133 = load i8, i8* %132, align 8, !range !5
  %134 = icmp ne i8 %133, 0
  %135 = icmp ult i64 %18, %128
  %136 = or i1 %134, %135
  br i1 %136, label %170, label %139

137:                                              ; preds = %126
  %138 = icmp ult i64 %18, %128
  br i1 %138, label %170, label %139

139:                                              ; preds = %131, %137
  %140 = bitcast i8* %124 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = icmp ult i32 %141, 2147483647
  br i1 %142, label %143, label %170

143:                                              ; preds = %139
  %144 = zext i32 %141 to i64
  %145 = add nuw nsw i64 %144, 4
  %146 = add i64 %145, %128
  %147 = icmp ule i64 %16, %145
  %148 = sub i64 %16, %145
  %149 = icmp ult i64 %148, %128
  %150 = or i1 %147, %149
  %151 = add i64 %16, -1
  %152 = icmp ult i64 %151, %146
  %153 = or i1 %152, %150
  br i1 %153, label %170, label %154

154:                                              ; preds = %143
  %155 = getelementptr inbounds i8, i8* %9, i64 %146
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %113, %120, %154
  %159 = icmp ugt i16 %71, 8
  br i1 %159, label %160, label %169

160:                                              ; preds = %158
  %161 = getelementptr inbounds i8, i8* %69, i64 8
  %162 = bitcast i8* %161 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = icmp eq i16 %163, 0
  br i1 %164, label %169, label %165

165:                                              ; preds = %160
  %166 = zext i16 %163 to i64
  %167 = add i64 %6, %166
  %168 = icmp ult i64 %18, %167
  br i1 %168, label %170, label %169

169:                                              ; preds = %65, %83, %165, %158, %160
  store i32 %27, i32* %26, align 8
  br label %170

170:                                              ; preds = %78, %131, %95, %101, %137, %165, %108, %143, %139, %103, %42, %21, %10, %35, %46, %56, %14, %169, %154, %60
  %171 = phi i1 [ false, %165 ], [ false, %154 ], [ false, %108 ], [ false, %78 ], [ false, %60 ], [ true, %169 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %101 ], [ false, %103 ], [ false, %95 ], [ false, %143 ], [ false, %137 ], [ false, %139 ], [ false, %131 ]
  ret i1 %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite8SubGraph6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SubGraph"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SubGraph"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %524

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %524

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SubGraph"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %524, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %524, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %524

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %524, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %524

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %524

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %170

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %524, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %524, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %524

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %524, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %170, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %524, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %524, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %524

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %524

139:                                              ; preds = %131, %108
  %140 = bitcast i8* %106 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %106, i64 %142
  %144 = icmp eq i8* %143, null
  br i1 %144, label %170, label %145

145:                                              ; preds = %139
  %146 = bitcast i8* %143 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %170, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i8, i8* %143, i64 4
  %151 = bitcast i8* %150 to i32*
  br label %156

152:                                              ; preds = %156
  %153 = load i32, i32* %146, align 4
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %165, %154
  br i1 %155, label %156, label %166

156:                                              ; preds = %152, %149
  %157 = phi i64 [ 0, %149 ], [ %165, %152 ]
  %158 = getelementptr inbounds i32, i32* %151, i64 %157
  %159 = bitcast i32* %158 to i8*
  %160 = load i32, i32* %158, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = bitcast i8* %162 to %"struct.tflite::Tensor"*
  %164 = tail call zeroext i1 @_ZNK6tflite6Tensor6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Tensor"* %163, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %165 = add nuw nsw i64 %157, 1
  br i1 %164, label %152, label %524

166:                                              ; preds = %152
  %167 = load i32, i32* %22, align 4
  %168 = sext i32 %167 to i64
  %169 = sub nsw i64 0, %168
  br label %170

170:                                              ; preds = %101, %65, %166, %139, %145
  %171 = phi i64 [ %169, %166 ], [ %68, %139 ], [ %68, %145 ], [ %68, %65 ], [ %68, %101 ]
  %172 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %171
  %173 = bitcast i8* %172 to i16*
  %174 = load i16, i16* %173, align 2
  %175 = icmp ugt i16 %174, 6
  br i1 %175, label %176, label %433

176:                                              ; preds = %170
  %177 = getelementptr inbounds i8, i8* %172, i64 6
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 2
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %209, label %181

181:                                              ; preds = %176
  %182 = load i64, i64* %3, align 8
  %183 = sub i64 %5, %182
  %184 = zext i16 %179 to i64
  %185 = add i64 %183, %184
  %186 = and i64 %185, 3
  %187 = icmp eq i64 %186, 0
  %188 = inttoptr i64 %182 to i8*
  br i1 %187, label %193, label %189

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %191 = load i8, i8* %190, align 8, !range !5
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %524

193:                                              ; preds = %189, %181
  %194 = load i64, i64* %15, align 8
  %195 = icmp ugt i64 %194, 4
  %196 = add i64 %194, -4
  %197 = icmp uge i64 %196, %185
  %198 = and i1 %195, %197
  br i1 %198, label %199, label %524

199:                                              ; preds = %193
  %200 = getelementptr inbounds i8, i8* %188, i64 %185
  %201 = bitcast i8* %200 to i32*
  %202 = load i32, i32* %201, align 4
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %524

204:                                              ; preds = %199
  %205 = zext i32 %202 to i64
  %206 = add i64 %185, %205
  %207 = add i64 %194, -1
  %208 = icmp ult i64 %207, %206
  br i1 %208, label %524, label %209

209:                                              ; preds = %204, %176
  %210 = getelementptr inbounds i8, i8* %172, i64 6
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = zext i16 %212 to i64
  %214 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %213
  %215 = icmp eq i16 %212, 0
  br i1 %215, label %250, label %216

216:                                              ; preds = %209
  %217 = bitcast i8* %214 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %214, i64 %219
  %221 = icmp eq i8* %220, null
  br i1 %221, label %250, label %222

222:                                              ; preds = %216
  %223 = load i64, i64* %3, align 8
  %224 = ptrtoint i8* %220 to i64
  %225 = sub i64 %224, %223
  %226 = and i64 %225, 3
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %232, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %230 = load i8, i8* %229, align 8, !range !5
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %524

232:                                              ; preds = %228, %222
  %233 = load i64, i64* %15, align 8
  %234 = icmp ugt i64 %233, 4
  %235 = add i64 %233, -4
  %236 = icmp uge i64 %235, %225
  %237 = and i1 %234, %236
  br i1 %237, label %238, label %524

238:                                              ; preds = %232
  %239 = bitcast i8* %220 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = icmp ult i32 %240, 536870911
  br i1 %241, label %242, label %524

242:                                              ; preds = %238
  %243 = zext i32 %240 to i64
  %244 = shl nuw nsw i64 %243, 2
  %245 = add nuw nsw i64 %244, 4
  %246 = icmp ugt i64 %233, %245
  %247 = sub i64 %233, %245
  %248 = icmp uge i64 %247, %225
  %249 = and i1 %246, %248
  br i1 %249, label %250, label %524

250:                                              ; preds = %209, %216, %242
  %251 = icmp ugt i16 %174, 8
  br i1 %251, label %252, label %433

252:                                              ; preds = %250
  %253 = getelementptr inbounds i8, i8* %172, i64 8
  %254 = bitcast i8* %253 to i16*
  %255 = load i16, i16* %254, align 2
  %256 = icmp eq i16 %255, 0
  br i1 %256, label %285, label %257

257:                                              ; preds = %252
  %258 = load i64, i64* %3, align 8
  %259 = sub i64 %5, %258
  %260 = zext i16 %255 to i64
  %261 = add i64 %259, %260
  %262 = and i64 %261, 3
  %263 = icmp eq i64 %262, 0
  %264 = inttoptr i64 %258 to i8*
  br i1 %263, label %269, label %265

265:                                              ; preds = %257
  %266 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %267 = load i8, i8* %266, align 8, !range !5
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %524

269:                                              ; preds = %265, %257
  %270 = load i64, i64* %15, align 8
  %271 = icmp ugt i64 %270, 4
  %272 = add i64 %270, -4
  %273 = icmp uge i64 %272, %261
  %274 = and i1 %271, %273
  br i1 %274, label %275, label %524

275:                                              ; preds = %269
  %276 = getelementptr inbounds i8, i8* %264, i64 %261
  %277 = bitcast i8* %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = icmp sgt i32 %278, 0
  br i1 %279, label %280, label %524

280:                                              ; preds = %275
  %281 = zext i32 %278 to i64
  %282 = add i64 %261, %281
  %283 = add i64 %270, -1
  %284 = icmp ult i64 %283, %282
  br i1 %284, label %524, label %285

285:                                              ; preds = %280, %252
  %286 = getelementptr inbounds i8, i8* %172, i64 8
  %287 = bitcast i8* %286 to i16*
  %288 = load i16, i16* %287, align 2
  %289 = zext i16 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %289
  %291 = icmp eq i16 %288, 0
  br i1 %291, label %326, label %292

292:                                              ; preds = %285
  %293 = bitcast i8* %290 to i32*
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %290, i64 %295
  %297 = icmp eq i8* %296, null
  br i1 %297, label %326, label %298

298:                                              ; preds = %292
  %299 = load i64, i64* %3, align 8
  %300 = ptrtoint i8* %296 to i64
  %301 = sub i64 %300, %299
  %302 = and i64 %301, 3
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %308, label %304

304:                                              ; preds = %298
  %305 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %306 = load i8, i8* %305, align 8, !range !5
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %308, label %524

308:                                              ; preds = %304, %298
  %309 = load i64, i64* %15, align 8
  %310 = icmp ugt i64 %309, 4
  %311 = add i64 %309, -4
  %312 = icmp uge i64 %311, %301
  %313 = and i1 %310, %312
  br i1 %313, label %314, label %524

314:                                              ; preds = %308
  %315 = bitcast i8* %296 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = icmp ult i32 %316, 536870911
  br i1 %317, label %318, label %524

318:                                              ; preds = %314
  %319 = zext i32 %316 to i64
  %320 = shl nuw nsw i64 %319, 2
  %321 = add nuw nsw i64 %320, 4
  %322 = icmp ugt i64 %309, %321
  %323 = sub i64 %309, %321
  %324 = icmp uge i64 %323, %301
  %325 = and i1 %322, %324
  br i1 %325, label %326, label %524

326:                                              ; preds = %285, %292, %318
  %327 = icmp ugt i16 %174, 10
  br i1 %327, label %328, label %433

328:                                              ; preds = %326
  %329 = getelementptr inbounds i8, i8* %172, i64 10
  %330 = bitcast i8* %329 to i16*
  %331 = load i16, i16* %330, align 2
  %332 = icmp eq i16 %331, 0
  br i1 %332, label %361, label %333

333:                                              ; preds = %328
  %334 = load i64, i64* %3, align 8
  %335 = sub i64 %5, %334
  %336 = zext i16 %331 to i64
  %337 = add i64 %335, %336
  %338 = and i64 %337, 3
  %339 = icmp eq i64 %338, 0
  %340 = inttoptr i64 %334 to i8*
  br i1 %339, label %345, label %341

341:                                              ; preds = %333
  %342 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %343 = load i8, i8* %342, align 8, !range !5
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %345, label %524

345:                                              ; preds = %341, %333
  %346 = load i64, i64* %15, align 8
  %347 = icmp ugt i64 %346, 4
  %348 = add i64 %346, -4
  %349 = icmp uge i64 %348, %337
  %350 = and i1 %347, %349
  br i1 %350, label %351, label %524

351:                                              ; preds = %345
  %352 = getelementptr inbounds i8, i8* %340, i64 %337
  %353 = bitcast i8* %352 to i32*
  %354 = load i32, i32* %353, align 4
  %355 = icmp sgt i32 %354, 0
  br i1 %355, label %356, label %524

356:                                              ; preds = %351
  %357 = zext i32 %354 to i64
  %358 = add i64 %337, %357
  %359 = add i64 %346, -1
  %360 = icmp ult i64 %359, %358
  br i1 %360, label %524, label %361

361:                                              ; preds = %356, %328
  %362 = getelementptr inbounds i8, i8* %172, i64 10
  %363 = bitcast i8* %362 to i16*
  %364 = load i16, i16* %363, align 2
  %365 = zext i16 %364 to i64
  %366 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %365
  %367 = icmp eq i16 %364, 0
  br i1 %367, label %433, label %368

368:                                              ; preds = %361
  %369 = bitcast i8* %366 to i32*
  %370 = load i32, i32* %369, align 4
  %371 = zext i32 %370 to i64
  %372 = getelementptr inbounds i8, i8* %366, i64 %371
  %373 = icmp eq i8* %372, null
  br i1 %373, label %402, label %374

374:                                              ; preds = %368
  %375 = load i64, i64* %3, align 8
  %376 = ptrtoint i8* %372 to i64
  %377 = sub i64 %376, %375
  %378 = and i64 %377, 3
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %384, label %380

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %382 = load i8, i8* %381, align 8, !range !5
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %524

384:                                              ; preds = %380, %374
  %385 = load i64, i64* %15, align 8
  %386 = icmp ugt i64 %385, 4
  %387 = add i64 %385, -4
  %388 = icmp uge i64 %387, %377
  %389 = and i1 %386, %388
  br i1 %389, label %390, label %524

390:                                              ; preds = %384
  %391 = bitcast i8* %372 to i32*
  %392 = load i32, i32* %391, align 4
  %393 = icmp ult i32 %392, 536870911
  br i1 %393, label %394, label %524

394:                                              ; preds = %390
  %395 = zext i32 %392 to i64
  %396 = shl nuw nsw i64 %395, 2
  %397 = add nuw nsw i64 %396, 4
  %398 = icmp ugt i64 %385, %397
  %399 = sub i64 %385, %397
  %400 = icmp uge i64 %399, %377
  %401 = and i1 %398, %400
  br i1 %401, label %402, label %524

402:                                              ; preds = %394, %368
  %403 = bitcast i8* %366 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds i8, i8* %366, i64 %405
  %407 = icmp eq i8* %406, null
  br i1 %407, label %433, label %408

408:                                              ; preds = %402
  %409 = bitcast i8* %406 to i32*
  %410 = load i32, i32* %409, align 4
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %433, label %412

412:                                              ; preds = %408
  %413 = getelementptr inbounds i8, i8* %406, i64 4
  %414 = bitcast i8* %413 to i32*
  br label %419

415:                                              ; preds = %419
  %416 = load i32, i32* %409, align 4
  %417 = zext i32 %416 to i64
  %418 = icmp ult i64 %428, %417
  br i1 %418, label %419, label %429

419:                                              ; preds = %415, %412
  %420 = phi i64 [ 0, %412 ], [ %428, %415 ]
  %421 = getelementptr inbounds i32, i32* %414, i64 %420
  %422 = bitcast i32* %421 to i8*
  %423 = load i32, i32* %421, align 4
  %424 = zext i32 %423 to i64
  %425 = getelementptr inbounds i8, i8* %422, i64 %424
  %426 = bitcast i8* %425 to %"struct.tflite::Operator"*
  %427 = tail call zeroext i1 @_ZNK6tflite8Operator6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Operator"* %426, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %428 = add nuw nsw i64 %420, 1
  br i1 %427, label %415, label %524

429:                                              ; preds = %415
  %430 = load i32, i32* %22, align 4
  %431 = sext i32 %430 to i64
  %432 = sub nsw i64 0, %431
  br label %433

433:                                              ; preds = %326, %250, %361, %170, %429, %402, %408
  %434 = phi i64 [ %432, %429 ], [ %171, %402 ], [ %171, %408 ], [ %171, %170 ], [ %171, %361 ], [ %171, %250 ], [ %171, %326 ]
  %435 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %434
  %436 = bitcast i8* %435 to i16*
  %437 = load i16, i16* %436, align 2
  %438 = icmp ugt i16 %437, 12
  br i1 %438, label %439, label %521

439:                                              ; preds = %433
  %440 = getelementptr inbounds i8, i8* %435, i64 12
  %441 = bitcast i8* %440 to i16*
  %442 = load i16, i16* %441, align 2
  %443 = icmp eq i16 %442, 0
  br i1 %443, label %472, label %444

444:                                              ; preds = %439
  %445 = load i64, i64* %3, align 8
  %446 = sub i64 %5, %445
  %447 = zext i16 %442 to i64
  %448 = add i64 %446, %447
  %449 = and i64 %448, 3
  %450 = icmp eq i64 %449, 0
  %451 = inttoptr i64 %445 to i8*
  br i1 %450, label %456, label %452

452:                                              ; preds = %444
  %453 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %454 = load i8, i8* %453, align 8, !range !5
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %456, label %524

456:                                              ; preds = %452, %444
  %457 = load i64, i64* %15, align 8
  %458 = icmp ugt i64 %457, 4
  %459 = add i64 %457, -4
  %460 = icmp uge i64 %459, %448
  %461 = and i1 %458, %460
  br i1 %461, label %462, label %524

462:                                              ; preds = %456
  %463 = getelementptr inbounds i8, i8* %451, i64 %448
  %464 = bitcast i8* %463 to i32*
  %465 = load i32, i32* %464, align 4
  %466 = icmp sgt i32 %465, 0
  br i1 %466, label %467, label %524

467:                                              ; preds = %462
  %468 = zext i32 %465 to i64
  %469 = add i64 %448, %468
  %470 = add i64 %457, -1
  %471 = icmp ult i64 %470, %469
  br i1 %471, label %524, label %472

472:                                              ; preds = %467, %439
  %473 = getelementptr inbounds i8, i8* %435, i64 12
  %474 = bitcast i8* %473 to i16*
  %475 = load i16, i16* %474, align 2
  %476 = zext i16 %475 to i64
  %477 = getelementptr inbounds %"struct.tflite::SubGraph", %"struct.tflite::SubGraph"* %0, i64 0, i32 0, i32 0, i64 %476
  %478 = icmp eq i16 %475, 0
  br i1 %478, label %521, label %479

479:                                              ; preds = %472
  %480 = bitcast i8* %477 to i32*
  %481 = load i32, i32* %480, align 4
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds i8, i8* %477, i64 %482
  %484 = icmp eq i8* %483, null
  br i1 %484, label %521, label %485

485:                                              ; preds = %479
  %486 = load i64, i64* %3, align 8
  %487 = ptrtoint i8* %483 to i64
  %488 = sub i64 %487, %486
  %489 = and i64 %488, 3
  %490 = icmp eq i64 %489, 0
  %491 = inttoptr i64 %486 to i8*
  br i1 %490, label %496, label %492

492:                                              ; preds = %485
  %493 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %494 = load i8, i8* %493, align 8, !range !5
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %524

496:                                              ; preds = %492, %485
  %497 = load i64, i64* %15, align 8
  %498 = icmp ugt i64 %497, 4
  %499 = add i64 %497, -4
  %500 = icmp uge i64 %499, %488
  %501 = and i1 %498, %500
  br i1 %501, label %502, label %524

502:                                              ; preds = %496
  %503 = bitcast i8* %483 to i32*
  %504 = load i32, i32* %503, align 4
  %505 = icmp ult i32 %504, 2147483647
  br i1 %505, label %506, label %524

506:                                              ; preds = %502
  %507 = zext i32 %504 to i64
  %508 = add nuw nsw i64 %507, 4
  %509 = add i64 %508, %488
  %510 = icmp ule i64 %497, %508
  %511 = sub i64 %497, %508
  %512 = icmp ult i64 %511, %488
  %513 = or i1 %510, %512
  %514 = add i64 %497, -1
  %515 = icmp ult i64 %514, %509
  %516 = or i1 %515, %513
  br i1 %516, label %524, label %517

517:                                              ; preds = %506
  %518 = getelementptr inbounds i8, i8* %491, i64 %509
  %519 = load i8, i8* %518, align 1
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %521, label %524

521:                                              ; preds = %433, %472, %479, %517
  %522 = load i32, i32* %26, align 8
  %523 = add i32 %522, -1
  store i32 %523, i32* %26, align 8
  br label %524

524:                                              ; preds = %156, %419, %119, %83, %89, %125, %96, %204, %280, %356, %467, %506, %492, %502, %496, %452, %462, %456, %380, %390, %384, %341, %351, %345, %304, %314, %308, %265, %275, %269, %228, %238, %232, %189, %199, %193, %127, %91, %42, %21, %10, %35, %46, %56, %14, %521, %517, %394, %318, %242, %131, %60
  %525 = phi i1 [ false, %517 ], [ false, %467 ], [ false, %394 ], [ false, %356 ], [ false, %318 ], [ false, %280 ], [ false, %242 ], [ false, %204 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %521 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %193 ], [ false, %199 ], [ false, %189 ], [ false, %232 ], [ false, %238 ], [ false, %228 ], [ false, %269 ], [ false, %275 ], [ false, %265 ], [ false, %308 ], [ false, %314 ], [ false, %304 ], [ false, %345 ], [ false, %351 ], [ false, %341 ], [ false, %384 ], [ false, %390 ], [ false, %380 ], [ false, %456 ], [ false, %462 ], [ false, %452 ], [ false, %506 ], [ false, %496 ], [ false, %502 ], [ false, %492 ], [ false, %419 ], [ false, %156 ]
  ret i1 %525
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite6Tensor6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Tensor"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Tensor"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %446

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %446

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Tensor"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %446, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %446, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %446

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %446, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %446

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %446

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %287

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %446, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %446, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %446

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %446, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %446, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %446, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %446

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %446

139:                                              ; preds = %101, %108, %131
  %140 = icmp ugt i16 %71, 6
  br i1 %140, label %141, label %287

141:                                              ; preds = %139
  %142 = getelementptr inbounds i8, i8* %69, i64 6
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = add i64 %6, %147
  %149 = add i64 %16, -1
  %150 = icmp ult i64 %149, %148
  br i1 %150, label %446, label %151

151:                                              ; preds = %146, %141
  %152 = icmp ugt i16 %71, 8
  br i1 %152, label %153, label %287

153:                                              ; preds = %151
  %154 = getelementptr inbounds i8, i8* %69, i64 8
  %155 = bitcast i8* %154 to i16*
  %156 = load i16, i16* %155, align 2
  %157 = icmp eq i16 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %153
  %159 = zext i16 %156 to i64
  %160 = add i64 %6, %159
  %161 = icmp ult i64 %18, %160
  br i1 %161, label %446, label %162

162:                                              ; preds = %158, %153
  %163 = icmp ugt i16 %71, 10
  br i1 %163, label %164, label %287

164:                                              ; preds = %162
  %165 = getelementptr inbounds i8, i8* %69, i64 10
  %166 = bitcast i8* %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 0
  br i1 %168, label %192, label %169

169:                                              ; preds = %164
  %170 = zext i16 %167 to i64
  %171 = add i64 %6, %170
  %172 = and i64 %171, 3
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %176 = load i8, i8* %175, align 8, !range !5
  %177 = icmp ne i8 %176, 0
  %178 = icmp ult i64 %18, %171
  %179 = or i1 %177, %178
  br i1 %179, label %446, label %182

180:                                              ; preds = %169
  %181 = icmp ult i64 %18, %171
  br i1 %181, label %446, label %182

182:                                              ; preds = %174, %180
  %183 = getelementptr inbounds i8, i8* %9, i64 %171
  %184 = bitcast i8* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %446

187:                                              ; preds = %182
  %188 = zext i32 %185 to i64
  %189 = add i64 %171, %188
  %190 = add i64 %16, -1
  %191 = icmp ult i64 %190, %189
  br i1 %191, label %446, label %192

192:                                              ; preds = %164, %187
  %193 = getelementptr inbounds i8, i8* %69, i64 10
  %194 = bitcast i8* %193 to i16*
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i64
  %197 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %196
  %198 = icmp eq i16 %195, 0
  br i1 %198, label %237, label %199

199:                                              ; preds = %192
  %200 = bitcast i8* %197 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds i8, i8* %197, i64 %202
  %204 = icmp eq i8* %203, null
  br i1 %204, label %237, label %205

205:                                              ; preds = %199
  %206 = ptrtoint i8* %203 to i64
  %207 = sub i64 %206, %4
  %208 = and i64 %207, 3
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %216, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %212 = load i8, i8* %211, align 8, !range !5
  %213 = icmp ne i8 %212, 0
  %214 = icmp ult i64 %18, %207
  %215 = or i1 %213, %214
  br i1 %215, label %446, label %218

216:                                              ; preds = %205
  %217 = icmp ult i64 %18, %207
  br i1 %217, label %446, label %218

218:                                              ; preds = %210, %216
  %219 = bitcast i8* %203 to i32*
  %220 = load i32, i32* %219, align 4
  %221 = icmp ult i32 %220, 2147483647
  br i1 %221, label %222, label %446

222:                                              ; preds = %218
  %223 = zext i32 %220 to i64
  %224 = add nuw nsw i64 %223, 4
  %225 = add i64 %224, %207
  %226 = icmp ule i64 %16, %224
  %227 = sub i64 %16, %224
  %228 = icmp ult i64 %227, %207
  %229 = or i1 %226, %228
  %230 = add i64 %16, -1
  %231 = icmp ult i64 %230, %225
  %232 = or i1 %231, %229
  br i1 %232, label %446, label %233

233:                                              ; preds = %222
  %234 = getelementptr inbounds i8, i8* %9, i64 %225
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %446

237:                                              ; preds = %192, %199, %233
  %238 = icmp ugt i16 %71, 12
  br i1 %238, label %239, label %287

239:                                              ; preds = %237
  %240 = getelementptr inbounds i8, i8* %69, i64 12
  %241 = bitcast i8* %240 to i16*
  %242 = load i16, i16* %241, align 2
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %267, label %244

244:                                              ; preds = %239
  %245 = zext i16 %242 to i64
  %246 = add i64 %6, %245
  %247 = and i64 %246, 3
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %251 = load i8, i8* %250, align 8, !range !5
  %252 = icmp ne i8 %251, 0
  %253 = icmp ult i64 %18, %246
  %254 = or i1 %252, %253
  br i1 %254, label %446, label %257

255:                                              ; preds = %244
  %256 = icmp ult i64 %18, %246
  br i1 %256, label %446, label %257

257:                                              ; preds = %249, %255
  %258 = getelementptr inbounds i8, i8* %9, i64 %246
  %259 = bitcast i8* %258 to i32*
  %260 = load i32, i32* %259, align 4
  %261 = icmp sgt i32 %260, 0
  br i1 %261, label %262, label %446

262:                                              ; preds = %257
  %263 = zext i32 %260 to i64
  %264 = add i64 %246, %263
  %265 = add i64 %16, -1
  %266 = icmp ult i64 %265, %264
  br i1 %266, label %446, label %267

267:                                              ; preds = %262, %239
  %268 = getelementptr inbounds i8, i8* %69, i64 12
  %269 = bitcast i8* %268 to i16*
  %270 = load i16, i16* %269, align 2
  %271 = zext i16 %270 to i64
  %272 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %271
  %273 = icmp eq i16 %270, 0
  br i1 %273, label %287, label %274

274:                                              ; preds = %267
  %275 = bitcast i8* %272 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %272, i64 %277
  %279 = icmp eq i8* %278, null
  br i1 %279, label %287, label %280

280:                                              ; preds = %274
  %281 = bitcast i8* %278 to %"struct.tflite::QuantizationParameters"*
  %282 = tail call zeroext i1 @_ZNK6tflite22QuantizationParameters6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::QuantizationParameters"* nonnull %281, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %282, label %283, label %446

283:                                              ; preds = %280
  %284 = load i32, i32* %22, align 4
  %285 = sext i32 %284 to i64
  %286 = sub nsw i64 0, %285
  br label %287

287:                                              ; preds = %237, %65, %162, %151, %139, %283, %267, %274
  %288 = phi i64 [ %286, %283 ], [ %68, %267 ], [ %68, %274 ], [ %68, %139 ], [ %68, %151 ], [ %68, %162 ], [ %68, %65 ], [ %68, %237 ]
  %289 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %288
  %290 = bitcast i8* %289 to i16*
  %291 = load i16, i16* %290, align 2
  %292 = icmp ugt i16 %291, 14
  br i1 %292, label %293, label %363

293:                                              ; preds = %287
  %294 = getelementptr inbounds i8, i8* %289, i64 14
  %295 = bitcast i8* %294 to i16*
  %296 = load i16, i16* %295, align 2
  %297 = icmp eq i16 %296, 0
  br i1 %297, label %308, label %298

298:                                              ; preds = %293
  %299 = load i64, i64* %3, align 8
  %300 = zext i16 %296 to i64
  %301 = add i64 %300, %5
  %302 = sub i64 %301, %299
  %303 = load i64, i64* %15, align 8
  %304 = icmp ugt i64 %303, 1
  %305 = add i64 %303, -1
  %306 = icmp uge i64 %305, %302
  %307 = and i1 %304, %306
  br i1 %307, label %308, label %446

308:                                              ; preds = %293, %298
  %309 = icmp ugt i16 %291, 16
  br i1 %309, label %310, label %363

310:                                              ; preds = %308
  %311 = getelementptr inbounds i8, i8* %289, i64 16
  %312 = bitcast i8* %311 to i16*
  %313 = load i16, i16* %312, align 2
  %314 = icmp eq i16 %313, 0
  br i1 %314, label %343, label %315

315:                                              ; preds = %310
  %316 = load i64, i64* %3, align 8
  %317 = sub i64 %5, %316
  %318 = zext i16 %313 to i64
  %319 = add i64 %317, %318
  %320 = and i64 %319, 3
  %321 = icmp eq i64 %320, 0
  %322 = inttoptr i64 %316 to i8*
  br i1 %321, label %327, label %323

323:                                              ; preds = %315
  %324 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %325 = load i8, i8* %324, align 8, !range !5
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %327, label %446

327:                                              ; preds = %323, %315
  %328 = load i64, i64* %15, align 8
  %329 = icmp ugt i64 %328, 4
  %330 = add i64 %328, -4
  %331 = icmp uge i64 %330, %319
  %332 = and i1 %329, %331
  br i1 %332, label %333, label %446

333:                                              ; preds = %327
  %334 = getelementptr inbounds i8, i8* %322, i64 %319
  %335 = bitcast i8* %334 to i32*
  %336 = load i32, i32* %335, align 4
  %337 = icmp sgt i32 %336, 0
  br i1 %337, label %338, label %446

338:                                              ; preds = %333
  %339 = zext i32 %336 to i64
  %340 = add i64 %319, %339
  %341 = add i64 %328, -1
  %342 = icmp ult i64 %341, %340
  br i1 %342, label %446, label %343

343:                                              ; preds = %338, %310
  %344 = getelementptr inbounds i8, i8* %289, i64 16
  %345 = bitcast i8* %344 to i16*
  %346 = load i16, i16* %345, align 2
  %347 = zext i16 %346 to i64
  %348 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %347
  %349 = icmp eq i16 %346, 0
  br i1 %349, label %363, label %350

350:                                              ; preds = %343
  %351 = bitcast i8* %348 to i32*
  %352 = load i32, i32* %351, align 4
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds i8, i8* %348, i64 %353
  %355 = icmp eq i8* %354, null
  br i1 %355, label %363, label %356

356:                                              ; preds = %350
  %357 = bitcast i8* %354 to %"struct.tflite::SparsityParameters"*
  %358 = tail call zeroext i1 @_ZNK6tflite18SparsityParameters6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SparsityParameters"* nonnull %357, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %358, label %359, label %446

359:                                              ; preds = %356
  %360 = load i32, i32* %22, align 4
  %361 = sext i32 %360 to i64
  %362 = sub nsw i64 0, %361
  br label %363

363:                                              ; preds = %308, %287, %359, %343, %350
  %364 = phi i64 [ %362, %359 ], [ %288, %343 ], [ %288, %350 ], [ %288, %287 ], [ %288, %308 ]
  %365 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %364
  %366 = bitcast i8* %365 to i16*
  %367 = load i16, i16* %366, align 2
  %368 = icmp ugt i16 %367, 18
  br i1 %368, label %369, label %443

369:                                              ; preds = %363
  %370 = getelementptr inbounds i8, i8* %365, i64 18
  %371 = bitcast i8* %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp eq i16 %372, 0
  br i1 %373, label %402, label %374

374:                                              ; preds = %369
  %375 = load i64, i64* %3, align 8
  %376 = sub i64 %5, %375
  %377 = zext i16 %372 to i64
  %378 = add i64 %376, %377
  %379 = and i64 %378, 3
  %380 = icmp eq i64 %379, 0
  %381 = inttoptr i64 %375 to i8*
  br i1 %380, label %386, label %382

382:                                              ; preds = %374
  %383 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %384 = load i8, i8* %383, align 8, !range !5
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %386, label %446

386:                                              ; preds = %382, %374
  %387 = load i64, i64* %15, align 8
  %388 = icmp ugt i64 %387, 4
  %389 = add i64 %387, -4
  %390 = icmp uge i64 %389, %378
  %391 = and i1 %388, %390
  br i1 %391, label %392, label %446

392:                                              ; preds = %386
  %393 = getelementptr inbounds i8, i8* %381, i64 %378
  %394 = bitcast i8* %393 to i32*
  %395 = load i32, i32* %394, align 4
  %396 = icmp sgt i32 %395, 0
  br i1 %396, label %397, label %446

397:                                              ; preds = %392
  %398 = zext i32 %395 to i64
  %399 = add i64 %378, %398
  %400 = add i64 %387, -1
  %401 = icmp ult i64 %400, %399
  br i1 %401, label %446, label %402

402:                                              ; preds = %397, %369
  %403 = getelementptr inbounds i8, i8* %365, i64 18
  %404 = bitcast i8* %403 to i16*
  %405 = load i16, i16* %404, align 2
  %406 = zext i16 %405 to i64
  %407 = getelementptr inbounds %"struct.tflite::Tensor", %"struct.tflite::Tensor"* %0, i64 0, i32 0, i32 0, i64 %406
  %408 = icmp eq i16 %405, 0
  br i1 %408, label %443, label %409

409:                                              ; preds = %402
  %410 = bitcast i8* %407 to i32*
  %411 = load i32, i32* %410, align 4
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %407, i64 %412
  %414 = icmp eq i8* %413, null
  br i1 %414, label %443, label %415

415:                                              ; preds = %409
  %416 = load i64, i64* %3, align 8
  %417 = ptrtoint i8* %413 to i64
  %418 = sub i64 %417, %416
  %419 = and i64 %418, 3
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %425, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %423 = load i8, i8* %422, align 8, !range !5
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %425, label %446

425:                                              ; preds = %421, %415
  %426 = load i64, i64* %15, align 8
  %427 = icmp ugt i64 %426, 4
  %428 = add i64 %426, -4
  %429 = icmp uge i64 %428, %418
  %430 = and i1 %427, %429
  br i1 %430, label %431, label %446

431:                                              ; preds = %425
  %432 = bitcast i8* %413 to i32*
  %433 = load i32, i32* %432, align 4
  %434 = icmp ult i32 %433, 536870911
  br i1 %434, label %435, label %446

435:                                              ; preds = %431
  %436 = zext i32 %433 to i64
  %437 = shl nuw nsw i64 %436, 2
  %438 = add nuw nsw i64 %437, 4
  %439 = icmp ugt i64 %426, %438
  %440 = sub i64 %426, %438
  %441 = icmp uge i64 %440, %418
  %442 = and i1 %439, %441
  br i1 %442, label %443, label %446

443:                                              ; preds = %363, %402, %409, %435
  %444 = load i32, i32* %26, align 8
  %445 = add i32 %444, -1
  store i32 %445, i32* %26, align 8
  br label %446

446:                                              ; preds = %146, %249, %210, %174, %119, %83, %89, %125, %180, %158, %216, %255, %96, %187, %262, %338, %397, %222, %421, %431, %425, %382, %392, %386, %323, %333, %327, %257, %218, %182, %127, %91, %42, %21, %10, %35, %46, %56, %14, %443, %435, %356, %298, %280, %233, %131, %60
  %447 = phi i1 [ false, %435 ], [ false, %397 ], [ false, %356 ], [ false, %338 ], [ false, %298 ], [ false, %280 ], [ false, %262 ], [ false, %233 ], [ false, %187 ], [ false, %158 ], [ false, %146 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %443 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %180 ], [ false, %182 ], [ false, %174 ], [ false, %222 ], [ false, %216 ], [ false, %218 ], [ false, %210 ], [ false, %255 ], [ false, %257 ], [ false, %249 ], [ false, %327 ], [ false, %333 ], [ false, %323 ], [ false, %386 ], [ false, %392 ], [ false, %382 ], [ false, %425 ], [ false, %431 ], [ false, %421 ]
  ret i1 %447
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite22QuantizationParameters6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::QuantizationParameters"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::QuantizationParameters"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %441

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %441

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::QuantizationParameters"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %441, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %441, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %441

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %441, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %441

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %441

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %417

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %441, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %441, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %441

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %441, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %441, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %441, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %441

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %441

139:                                              ; preds = %101, %108, %131
  %140 = icmp ugt i16 %71, 6
  br i1 %140, label %141, label %417

141:                                              ; preds = %139
  %142 = getelementptr inbounds i8, i8* %69, i64 6
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %169, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = add i64 %6, %147
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %153 = load i8, i8* %152, align 8, !range !5
  %154 = icmp ne i8 %153, 0
  %155 = icmp ult i64 %18, %148
  %156 = or i1 %154, %155
  br i1 %156, label %441, label %159

157:                                              ; preds = %146
  %158 = icmp ult i64 %18, %148
  br i1 %158, label %441, label %159

159:                                              ; preds = %151, %157
  %160 = getelementptr inbounds i8, i8* %9, i64 %148
  %161 = bitcast i8* %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %441

164:                                              ; preds = %159
  %165 = zext i32 %162 to i64
  %166 = add i64 %148, %165
  %167 = add i64 %16, -1
  %168 = icmp ult i64 %167, %166
  br i1 %168, label %441, label %169

169:                                              ; preds = %164, %141
  %170 = getelementptr inbounds i8, i8* %69, i64 6
  %171 = bitcast i8* %170 to i16*
  %172 = load i16, i16* %171, align 2
  %173 = zext i16 %172 to i64
  %174 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %173
  %175 = icmp eq i16 %172, 0
  br i1 %175, label %207, label %176

176:                                              ; preds = %169
  %177 = bitcast i8* %174 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %174, i64 %179
  %181 = icmp eq i8* %180, null
  br i1 %181, label %207, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = sub i64 %183, %4
  %185 = and i64 %184, 3
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %193, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %189 = load i8, i8* %188, align 8, !range !5
  %190 = icmp ne i8 %189, 0
  %191 = icmp ult i64 %18, %184
  %192 = or i1 %190, %191
  br i1 %192, label %441, label %195

193:                                              ; preds = %182
  %194 = icmp ult i64 %18, %184
  br i1 %194, label %441, label %195

195:                                              ; preds = %187, %193
  %196 = bitcast i8* %180 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %197, 536870911
  br i1 %198, label %199, label %441

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  %201 = shl nuw nsw i64 %200, 2
  %202 = add nuw nsw i64 %201, 4
  %203 = icmp ugt i64 %16, %202
  %204 = sub i64 %16, %202
  %205 = icmp uge i64 %204, %184
  %206 = and i1 %203, %205
  br i1 %206, label %207, label %441

207:                                              ; preds = %169, %176, %199
  %208 = icmp ugt i16 %71, 8
  br i1 %208, label %209, label %417

209:                                              ; preds = %207
  %210 = getelementptr inbounds i8, i8* %69, i64 8
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %237, label %214

214:                                              ; preds = %209
  %215 = zext i16 %212 to i64
  %216 = add i64 %6, %215
  %217 = and i64 %216, 3
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %225, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %221 = load i8, i8* %220, align 8, !range !5
  %222 = icmp ne i8 %221, 0
  %223 = icmp ult i64 %18, %216
  %224 = or i1 %222, %223
  br i1 %224, label %441, label %227

225:                                              ; preds = %214
  %226 = icmp ult i64 %18, %216
  br i1 %226, label %441, label %227

227:                                              ; preds = %219, %225
  %228 = getelementptr inbounds i8, i8* %9, i64 %216
  %229 = bitcast i8* %228 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %441

232:                                              ; preds = %227
  %233 = zext i32 %230 to i64
  %234 = add i64 %216, %233
  %235 = add i64 %16, -1
  %236 = icmp ult i64 %235, %234
  br i1 %236, label %441, label %237

237:                                              ; preds = %232, %209
  %238 = getelementptr inbounds i8, i8* %69, i64 8
  %239 = bitcast i8* %238 to i16*
  %240 = load i16, i16* %239, align 2
  %241 = zext i16 %240 to i64
  %242 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %241
  %243 = icmp eq i16 %240, 0
  br i1 %243, label %275, label %244

244:                                              ; preds = %237
  %245 = bitcast i8* %242 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds i8, i8* %242, i64 %247
  %249 = icmp eq i8* %248, null
  br i1 %249, label %275, label %250

250:                                              ; preds = %244
  %251 = ptrtoint i8* %248 to i64
  %252 = sub i64 %251, %4
  %253 = and i64 %252, 3
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %257 = load i8, i8* %256, align 8, !range !5
  %258 = icmp ne i8 %257, 0
  %259 = icmp ult i64 %18, %252
  %260 = or i1 %258, %259
  br i1 %260, label %441, label %263

261:                                              ; preds = %250
  %262 = icmp ult i64 %18, %252
  br i1 %262, label %441, label %263

263:                                              ; preds = %255, %261
  %264 = bitcast i8* %248 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = icmp ult i32 %265, 536870911
  br i1 %266, label %267, label %441

267:                                              ; preds = %263
  %268 = zext i32 %265 to i64
  %269 = shl nuw nsw i64 %268, 2
  %270 = add nuw nsw i64 %269, 4
  %271 = icmp ugt i64 %16, %270
  %272 = sub i64 %16, %270
  %273 = icmp uge i64 %272, %252
  %274 = and i1 %271, %273
  br i1 %274, label %275, label %441

275:                                              ; preds = %237, %244, %267
  %276 = icmp ugt i16 %71, 10
  br i1 %276, label %277, label %417

277:                                              ; preds = %275
  %278 = getelementptr inbounds i8, i8* %69, i64 10
  %279 = bitcast i8* %278 to i16*
  %280 = load i16, i16* %279, align 2
  %281 = icmp eq i16 %280, 0
  br i1 %281, label %305, label %282

282:                                              ; preds = %277
  %283 = zext i16 %280 to i64
  %284 = add i64 %6, %283
  %285 = and i64 %284, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %293, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %289 = load i8, i8* %288, align 8, !range !5
  %290 = icmp ne i8 %289, 0
  %291 = icmp ult i64 %18, %284
  %292 = or i1 %290, %291
  br i1 %292, label %441, label %295

293:                                              ; preds = %282
  %294 = icmp ult i64 %18, %284
  br i1 %294, label %441, label %295

295:                                              ; preds = %287, %293
  %296 = getelementptr inbounds i8, i8* %9, i64 %284
  %297 = bitcast i8* %296 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = icmp sgt i32 %298, 0
  br i1 %299, label %300, label %441

300:                                              ; preds = %295
  %301 = zext i32 %298 to i64
  %302 = add i64 %284, %301
  %303 = add i64 %16, -1
  %304 = icmp ult i64 %303, %302
  br i1 %304, label %441, label %305

305:                                              ; preds = %300, %277
  %306 = getelementptr inbounds i8, i8* %69, i64 10
  %307 = bitcast i8* %306 to i16*
  %308 = load i16, i16* %307, align 2
  %309 = zext i16 %308 to i64
  %310 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %309
  %311 = icmp eq i16 %308, 0
  br i1 %311, label %343, label %312

312:                                              ; preds = %305
  %313 = bitcast i8* %310 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %310, i64 %315
  %317 = icmp eq i8* %316, null
  br i1 %317, label %343, label %318

318:                                              ; preds = %312
  %319 = ptrtoint i8* %316 to i64
  %320 = sub i64 %319, %4
  %321 = and i64 %320, 3
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %329, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %325 = load i8, i8* %324, align 8, !range !5
  %326 = icmp ne i8 %325, 0
  %327 = icmp ult i64 %18, %320
  %328 = or i1 %326, %327
  br i1 %328, label %441, label %331

329:                                              ; preds = %318
  %330 = icmp ult i64 %18, %320
  br i1 %330, label %441, label %331

331:                                              ; preds = %323, %329
  %332 = bitcast i8* %316 to i32*
  %333 = load i32, i32* %332, align 4
  %334 = icmp ult i32 %333, 268435455
  br i1 %334, label %335, label %441

335:                                              ; preds = %331
  %336 = zext i32 %333 to i64
  %337 = shl nuw nsw i64 %336, 3
  %338 = or i64 %337, 4
  %339 = icmp ugt i64 %16, %338
  %340 = sub i64 %16, %338
  %341 = icmp uge i64 %340, %320
  %342 = and i1 %339, %341
  br i1 %342, label %343, label %441

343:                                              ; preds = %305, %312, %335
  %344 = icmp ugt i16 %71, 12
  br i1 %344, label %345, label %417

345:                                              ; preds = %343
  %346 = getelementptr inbounds i8, i8* %69, i64 12
  %347 = bitcast i8* %346 to i16*
  %348 = load i16, i16* %347, align 2
  %349 = icmp eq i16 %348, 0
  br i1 %349, label %355, label %350

350:                                              ; preds = %345
  %351 = zext i16 %348 to i64
  %352 = add i64 %6, %351
  %353 = add i64 %16, -1
  %354 = icmp ult i64 %353, %352
  br i1 %354, label %441, label %355

355:                                              ; preds = %350, %345
  %356 = icmp ugt i16 %71, 14
  br i1 %356, label %357, label %397

357:                                              ; preds = %355
  %358 = getelementptr inbounds i8, i8* %69, i64 14
  %359 = bitcast i8* %358 to i16*
  %360 = load i16, i16* %359, align 2
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %385, label %362

362:                                              ; preds = %357
  %363 = zext i16 %360 to i64
  %364 = add i64 %6, %363
  %365 = and i64 %364, 3
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %373, label %367

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %369 = load i8, i8* %368, align 8, !range !5
  %370 = icmp ne i8 %369, 0
  %371 = icmp ult i64 %18, %364
  %372 = or i1 %370, %371
  br i1 %372, label %441, label %375

373:                                              ; preds = %362
  %374 = icmp ult i64 %18, %364
  br i1 %374, label %441, label %375

375:                                              ; preds = %367, %373
  %376 = getelementptr inbounds i8, i8* %9, i64 %364
  %377 = bitcast i8* %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, 0
  br i1 %379, label %380, label %441

380:                                              ; preds = %375
  %381 = zext i32 %378 to i64
  %382 = add i64 %364, %381
  %383 = add i64 %16, -1
  %384 = icmp ult i64 %383, %382
  br i1 %384, label %441, label %385

385:                                              ; preds = %357, %380
  %386 = getelementptr inbounds i8, i8* %69, i64 14
  %387 = bitcast i8* %386 to i16*
  %388 = load i16, i16* %387, align 2
  %389 = zext i16 %388 to i64
  %390 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %389
  %391 = icmp eq i16 %388, 0
  br i1 %391, label %397, label %392

392:                                              ; preds = %385
  %393 = bitcast i8* %390 to i32*
  %394 = load i32, i32* %393, align 4
  %395 = zext i32 %394 to i64
  %396 = getelementptr inbounds i8, i8* %390, i64 %395
  br label %397

397:                                              ; preds = %355, %392, %385
  %398 = phi i8* [ null, %385 ], [ %396, %392 ], [ null, %355 ]
  %399 = getelementptr inbounds i8, i8* %69, i64 12
  %400 = bitcast i8* %399 to i16*
  %401 = load i16, i16* %400, align 2
  %402 = icmp eq i16 %401, 0
  br i1 %402, label %417, label %403

403:                                              ; preds = %397
  %404 = zext i16 %401 to i64
  %405 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %404
  %406 = load i8, i8* %405, align 1
  %407 = icmp ne i8 %406, 1
  %408 = icmp eq i8* %398, null
  %409 = or i1 %408, %407
  br i1 %409, label %417, label %410

410:                                              ; preds = %403
  %411 = bitcast i8* %398 to %"struct.tflite::CustomQuantization"*
  %412 = tail call zeroext i1 @_ZNK6tflite18CustomQuantization6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::CustomQuantization"* nonnull %411, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %412, label %413, label %441

413:                                              ; preds = %410
  %414 = load i32, i32* %22, align 4
  %415 = sext i32 %414 to i64
  %416 = sub nsw i64 0, %415
  br label %417

417:                                              ; preds = %343, %275, %207, %139, %65, %413, %397, %403
  %418 = phi i64 [ %416, %413 ], [ %68, %397 ], [ %68, %403 ], [ %68, %65 ], [ %68, %139 ], [ %68, %207 ], [ %68, %275 ], [ %68, %343 ]
  %419 = getelementptr inbounds %"struct.tflite::QuantizationParameters", %"struct.tflite::QuantizationParameters"* %0, i64 0, i32 0, i32 0, i64 %418
  %420 = bitcast i8* %419 to i16*
  %421 = load i16, i16* %420, align 2
  %422 = icmp ugt i16 %421, 16
  br i1 %422, label %423, label %438

423:                                              ; preds = %417
  %424 = getelementptr inbounds i8, i8* %419, i64 16
  %425 = bitcast i8* %424 to i16*
  %426 = load i16, i16* %425, align 2
  %427 = icmp eq i16 %426, 0
  br i1 %427, label %438, label %428

428:                                              ; preds = %423
  %429 = load i64, i64* %3, align 8
  %430 = zext i16 %426 to i64
  %431 = add i64 %430, %5
  %432 = sub i64 %431, %429
  %433 = load i64, i64* %15, align 8
  %434 = icmp ugt i64 %433, 4
  %435 = add i64 %433, -4
  %436 = icmp uge i64 %435, %432
  %437 = and i1 %434, %436
  br i1 %437, label %438, label %441

438:                                              ; preds = %417, %423, %428
  %439 = load i32, i32* %26, align 8
  %440 = add i32 %439, -1
  store i32 %440, i32* %26, align 8
  br label %441

441:                                              ; preds = %350, %367, %323, %287, %255, %219, %187, %151, %119, %83, %89, %125, %157, %193, %225, %261, %293, %329, %373, %96, %164, %232, %300, %380, %375, %331, %295, %263, %227, %195, %159, %127, %91, %42, %21, %10, %35, %46, %56, %14, %438, %428, %410, %335, %267, %199, %131, %60
  %442 = phi i1 [ false, %428 ], [ false, %410 ], [ false, %380 ], [ false, %350 ], [ false, %335 ], [ false, %300 ], [ false, %267 ], [ false, %232 ], [ false, %199 ], [ false, %164 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %438 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %157 ], [ false, %159 ], [ false, %151 ], [ false, %193 ], [ false, %195 ], [ false, %187 ], [ false, %225 ], [ false, %227 ], [ false, %219 ], [ false, %261 ], [ false, %263 ], [ false, %255 ], [ false, %293 ], [ false, %295 ], [ false, %287 ], [ false, %329 ], [ false, %331 ], [ false, %323 ], [ false, %373 ], [ false, %375 ], [ false, %367 ]
  ret i1 %442
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite18CustomQuantization6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::CustomQuantization"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::CustomQuantization"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %139

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %139

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::CustomQuantization"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %139, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %139, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %139

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %139, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %139

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %139

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::CustomQuantization", %"struct.tflite::CustomQuantization"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %138

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %139, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %139, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %139

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %139, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::CustomQuantization", %"struct.tflite::CustomQuantization"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %138, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %139, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %139, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = icmp ugt i64 %16, %133
  %135 = sub i64 %16, %133
  %136 = icmp uge i64 %135, %116
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %139

139:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %138, %131, %60
  %140 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %138 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite18SparsityParameters6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SparsityParameters"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SparsityParameters"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %307

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %307

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SparsityParameters"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %307, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %307, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %307

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %307, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %307

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %307

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SparsityParameters", %"struct.tflite::SparsityParameters"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %304

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %307, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %307, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %307

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %307, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::SparsityParameters", %"struct.tflite::SparsityParameters"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %307, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %307, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %307

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %307

139:                                              ; preds = %101, %108, %131
  %140 = icmp ugt i16 %71, 6
  br i1 %140, label %141, label %304

141:                                              ; preds = %139
  %142 = getelementptr inbounds i8, i8* %69, i64 6
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %169, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = add i64 %6, %147
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %153 = load i8, i8* %152, align 8, !range !5
  %154 = icmp ne i8 %153, 0
  %155 = icmp ult i64 %18, %148
  %156 = or i1 %154, %155
  br i1 %156, label %307, label %159

157:                                              ; preds = %146
  %158 = icmp ult i64 %18, %148
  br i1 %158, label %307, label %159

159:                                              ; preds = %151, %157
  %160 = getelementptr inbounds i8, i8* %9, i64 %148
  %161 = bitcast i8* %160 to i32*
  %162 = load i32, i32* %161, align 4
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %164, label %307

164:                                              ; preds = %159
  %165 = zext i32 %162 to i64
  %166 = add i64 %148, %165
  %167 = add i64 %16, -1
  %168 = icmp ult i64 %167, %166
  br i1 %168, label %307, label %169

169:                                              ; preds = %164, %141
  %170 = getelementptr inbounds i8, i8* %69, i64 6
  %171 = bitcast i8* %170 to i16*
  %172 = load i16, i16* %171, align 2
  %173 = zext i16 %172 to i64
  %174 = getelementptr inbounds %"struct.tflite::SparsityParameters", %"struct.tflite::SparsityParameters"* %0, i64 0, i32 0, i32 0, i64 %173
  %175 = icmp eq i16 %172, 0
  br i1 %175, label %207, label %176

176:                                              ; preds = %169
  %177 = bitcast i8* %174 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %174, i64 %179
  %181 = icmp eq i8* %180, null
  br i1 %181, label %207, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = sub i64 %183, %4
  %185 = and i64 %184, 3
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %193, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %189 = load i8, i8* %188, align 8, !range !5
  %190 = icmp ne i8 %189, 0
  %191 = icmp ult i64 %18, %184
  %192 = or i1 %190, %191
  br i1 %192, label %307, label %195

193:                                              ; preds = %182
  %194 = icmp ult i64 %18, %184
  br i1 %194, label %307, label %195

195:                                              ; preds = %187, %193
  %196 = bitcast i8* %180 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = icmp ult i32 %197, 536870911
  br i1 %198, label %199, label %307

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  %201 = shl nuw nsw i64 %200, 2
  %202 = add nuw nsw i64 %201, 4
  %203 = icmp ugt i64 %16, %202
  %204 = sub i64 %16, %202
  %205 = icmp uge i64 %204, %184
  %206 = and i1 %203, %205
  br i1 %206, label %207, label %307

207:                                              ; preds = %169, %176, %199
  %208 = icmp ugt i16 %71, 8
  br i1 %208, label %209, label %304

209:                                              ; preds = %207
  %210 = getelementptr inbounds i8, i8* %69, i64 8
  %211 = bitcast i8* %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %237, label %214

214:                                              ; preds = %209
  %215 = zext i16 %212 to i64
  %216 = add i64 %6, %215
  %217 = and i64 %216, 3
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %225, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %221 = load i8, i8* %220, align 8, !range !5
  %222 = icmp ne i8 %221, 0
  %223 = icmp ult i64 %18, %216
  %224 = or i1 %222, %223
  br i1 %224, label %307, label %227

225:                                              ; preds = %214
  %226 = icmp ult i64 %18, %216
  br i1 %226, label %307, label %227

227:                                              ; preds = %219, %225
  %228 = getelementptr inbounds i8, i8* %9, i64 %216
  %229 = bitcast i8* %228 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %307

232:                                              ; preds = %227
  %233 = zext i32 %230 to i64
  %234 = add i64 %216, %233
  %235 = add i64 %16, -1
  %236 = icmp ult i64 %235, %234
  br i1 %236, label %307, label %237

237:                                              ; preds = %232, %209
  %238 = getelementptr inbounds i8, i8* %69, i64 8
  %239 = bitcast i8* %238 to i16*
  %240 = load i16, i16* %239, align 2
  %241 = zext i16 %240 to i64
  %242 = getelementptr inbounds %"struct.tflite::SparsityParameters", %"struct.tflite::SparsityParameters"* %0, i64 0, i32 0, i32 0, i64 %241
  %243 = icmp eq i16 %240, 0
  br i1 %243, label %304, label %244

244:                                              ; preds = %237
  %245 = bitcast i8* %242 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds i8, i8* %242, i64 %247
  %249 = icmp eq i8* %248, null
  br i1 %249, label %275, label %250

250:                                              ; preds = %244
  %251 = ptrtoint i8* %248 to i64
  %252 = sub i64 %251, %4
  %253 = and i64 %252, 3
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %257 = load i8, i8* %256, align 8, !range !5
  %258 = icmp ne i8 %257, 0
  %259 = icmp ult i64 %18, %252
  %260 = or i1 %258, %259
  br i1 %260, label %307, label %263

261:                                              ; preds = %250
  %262 = icmp ult i64 %18, %252
  br i1 %262, label %307, label %263

263:                                              ; preds = %255, %261
  %264 = bitcast i8* %248 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = icmp ult i32 %265, 536870911
  br i1 %266, label %267, label %307

267:                                              ; preds = %263
  %268 = zext i32 %265 to i64
  %269 = shl nuw nsw i64 %268, 2
  %270 = add nuw nsw i64 %269, 4
  %271 = icmp ugt i64 %16, %270
  %272 = sub i64 %16, %270
  %273 = icmp uge i64 %272, %252
  %274 = and i1 %271, %273
  br i1 %274, label %275, label %307

275:                                              ; preds = %267, %244
  %276 = bitcast i8* %242 to i32*
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %242, i64 %278
  %280 = icmp eq i8* %279, null
  br i1 %280, label %304, label %281

281:                                              ; preds = %275
  %282 = bitcast i8* %279 to i32*
  %283 = load i32, i32* %282, align 4
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %304, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds i8, i8* %279, i64 4
  %287 = bitcast i8* %286 to i32*
  br label %292

288:                                              ; preds = %292
  %289 = load i32, i32* %282, align 4
  %290 = zext i32 %289 to i64
  %291 = icmp ult i64 %301, %290
  br i1 %291, label %292, label %302

292:                                              ; preds = %288, %285
  %293 = phi i64 [ 0, %285 ], [ %301, %288 ]
  %294 = getelementptr inbounds i32, i32* %287, i64 %293
  %295 = bitcast i32* %294 to i8*
  %296 = load i32, i32* %294, align 4
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds i8, i8* %295, i64 %297
  %299 = bitcast i8* %298 to %"struct.tflite::DimensionMetadata"*
  %300 = tail call zeroext i1 @_ZNK6tflite17DimensionMetadata6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::DimensionMetadata"* %299, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  %301 = add nuw nsw i64 %293, 1
  br i1 %300, label %288, label %307

302:                                              ; preds = %288
  %303 = load i32, i32* %26, align 8
  br label %304

304:                                              ; preds = %207, %139, %237, %65, %302, %275, %281
  %305 = phi i32 [ %303, %302 ], [ %28, %275 ], [ %28, %281 ], [ %28, %65 ], [ %28, %237 ], [ %28, %139 ], [ %28, %207 ]
  %306 = add i32 %305, -1
  store i32 %306, i32* %26, align 8
  br label %307

307:                                              ; preds = %292, %255, %219, %187, %151, %119, %83, %89, %125, %157, %193, %225, %261, %96, %164, %232, %263, %227, %195, %159, %127, %91, %42, %21, %10, %35, %46, %56, %14, %304, %267, %199, %131, %60
  %308 = phi i1 [ false, %267 ], [ false, %232 ], [ false, %199 ], [ false, %164 ], [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %304 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ], [ false, %157 ], [ false, %159 ], [ false, %151 ], [ false, %193 ], [ false, %195 ], [ false, %187 ], [ false, %225 ], [ false, %227 ], [ false, %219 ], [ false, %261 ], [ false, %263 ], [ false, %255 ], [ false, %292 ]
  ret i1 %308
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite17DimensionMetadata6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::DimensionMetadata"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::DimensionMetadata"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %271

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %271

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::DimensionMetadata"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %271, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %271, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %271

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %271, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %271

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %271

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %173

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %271, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %173

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %271, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %173

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = add i64 %16, -1
  %105 = icmp ult i64 %104, %103
  br i1 %105, label %271, label %106

106:                                              ; preds = %101, %96
  %107 = icmp ugt i16 %71, 10
  br i1 %107, label %108, label %148

108:                                              ; preds = %106
  %109 = getelementptr inbounds i8, i8* %69, i64 10
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %111, 0
  br i1 %112, label %136, label %113

113:                                              ; preds = %108
  %114 = zext i16 %111 to i64
  %115 = add i64 %6, %114
  %116 = and i64 %115, 3
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %120 = load i8, i8* %119, align 8, !range !5
  %121 = icmp ne i8 %120, 0
  %122 = icmp ult i64 %18, %115
  %123 = or i1 %121, %122
  br i1 %123, label %271, label %126

124:                                              ; preds = %113
  %125 = icmp ult i64 %18, %115
  br i1 %125, label %271, label %126

126:                                              ; preds = %118, %124
  %127 = getelementptr inbounds i8, i8* %9, i64 %115
  %128 = bitcast i8* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %271

131:                                              ; preds = %126
  %132 = zext i32 %129 to i64
  %133 = add i64 %115, %132
  %134 = add i64 %16, -1
  %135 = icmp ult i64 %134, %133
  br i1 %135, label %271, label %136

136:                                              ; preds = %108, %131
  %137 = getelementptr inbounds i8, i8* %69, i64 10
  %138 = bitcast i8* %137 to i16*
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i64
  %141 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %140
  %142 = icmp eq i16 %139, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %136
  %144 = bitcast i8* %141 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %141, i64 %146
  br label %148

148:                                              ; preds = %106, %143, %136
  %149 = phi i8* [ null, %136 ], [ %147, %143 ], [ null, %106 ]
  %150 = getelementptr inbounds i8, i8* %69, i64 8
  %151 = bitcast i8* %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %173, label %154

154:                                              ; preds = %148
  %155 = zext i16 %152 to i64
  %156 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %155
  %157 = load i8, i8* %156, align 1
  switch i8 %157, label %173 [
    i8 3, label %168
    i8 1, label %158
    i8 2, label %163
  ]

158:                                              ; preds = %154
  %159 = icmp eq i8* %149, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %158
  %161 = bitcast i8* %149 to %"struct.tflite::Int32Vector"*
  %162 = tail call zeroext i1 @_ZNK6tflite11Int32Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Int32Vector"* nonnull %161, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %162, label %173, label %271

163:                                              ; preds = %154
  %164 = icmp eq i8* %149, null
  br i1 %164, label %173, label %165

165:                                              ; preds = %163
  %166 = bitcast i8* %149 to %"struct.tflite::Uint16Vector"*
  %167 = tail call zeroext i1 @_ZNK6tflite12Uint16Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint16Vector"* nonnull %166, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %167, label %173, label %271

168:                                              ; preds = %154
  %169 = icmp eq i8* %149, null
  br i1 %169, label %173, label %170

170:                                              ; preds = %168
  %171 = bitcast i8* %149 to %"struct.tflite::Uint8Vector"*
  %172 = tail call zeroext i1 @_ZNK6tflite11Uint8Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint8Vector"* nonnull %171, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %172, label %173, label %271

173:                                              ; preds = %94, %83, %65, %148, %168, %163, %158, %154, %165, %160, %170
  %174 = load i32, i32* %22, align 4
  %175 = sext i32 %174 to i64
  %176 = sub nsw i64 0, %175
  %177 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %176
  %178 = bitcast i8* %177 to i16*
  %179 = load i16, i16* %178, align 2
  %180 = icmp ugt i16 %179, 12
  br i1 %180, label %181, label %268

181:                                              ; preds = %173
  %182 = getelementptr inbounds i8, i8* %177, i64 12
  %183 = bitcast i8* %182 to i16*
  %184 = load i16, i16* %183, align 2
  %185 = icmp eq i16 %184, 0
  br i1 %185, label %196, label %186

186:                                              ; preds = %181
  %187 = load i64, i64* %3, align 8
  %188 = zext i16 %184 to i64
  %189 = add i64 %188, %5
  %190 = sub i64 %189, %187
  %191 = load i64, i64* %15, align 8
  %192 = icmp ugt i64 %191, 1
  %193 = add i64 %191, -1
  %194 = icmp uge i64 %193, %190
  %195 = and i1 %192, %194
  br i1 %195, label %196, label %271

196:                                              ; preds = %181, %186
  %197 = icmp ugt i16 %179, 14
  br i1 %197, label %198, label %243

198:                                              ; preds = %196
  %199 = getelementptr inbounds i8, i8* %177, i64 14
  %200 = bitcast i8* %199 to i16*
  %201 = load i16, i16* %200, align 2
  %202 = icmp eq i16 %201, 0
  br i1 %202, label %231, label %203

203:                                              ; preds = %198
  %204 = load i64, i64* %3, align 8
  %205 = sub i64 %5, %204
  %206 = zext i16 %201 to i64
  %207 = add i64 %205, %206
  %208 = and i64 %207, 3
  %209 = icmp eq i64 %208, 0
  %210 = inttoptr i64 %204 to i8*
  br i1 %209, label %215, label %211

211:                                              ; preds = %203
  %212 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %213 = load i8, i8* %212, align 8, !range !5
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %271

215:                                              ; preds = %211, %203
  %216 = load i64, i64* %15, align 8
  %217 = icmp ugt i64 %216, 4
  %218 = add i64 %216, -4
  %219 = icmp uge i64 %218, %207
  %220 = and i1 %217, %219
  br i1 %220, label %221, label %271

221:                                              ; preds = %215
  %222 = getelementptr inbounds i8, i8* %210, i64 %207
  %223 = bitcast i8* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %271

226:                                              ; preds = %221
  %227 = zext i32 %224 to i64
  %228 = add i64 %207, %227
  %229 = add i64 %216, -1
  %230 = icmp ult i64 %229, %228
  br i1 %230, label %271, label %231

231:                                              ; preds = %226, %198
  %232 = getelementptr inbounds i8, i8* %177, i64 14
  %233 = bitcast i8* %232 to i16*
  %234 = load i16, i16* %233, align 2
  %235 = zext i16 %234 to i64
  %236 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %235
  %237 = icmp eq i16 %234, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %231
  %239 = bitcast i8* %236 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8, i8* %236, i64 %241
  br label %243

243:                                              ; preds = %196, %238, %231
  %244 = phi i8* [ null, %231 ], [ %242, %238 ], [ null, %196 ]
  %245 = getelementptr inbounds i8, i8* %177, i64 12
  %246 = bitcast i8* %245 to i16*
  %247 = load i16, i16* %246, align 2
  %248 = icmp eq i16 %247, 0
  br i1 %248, label %268, label %249

249:                                              ; preds = %243
  %250 = zext i16 %247 to i64
  %251 = getelementptr inbounds %"struct.tflite::DimensionMetadata", %"struct.tflite::DimensionMetadata"* %0, i64 0, i32 0, i32 0, i64 %250
  %252 = load i8, i8* %251, align 1
  switch i8 %252, label %268 [
    i8 3, label %263
    i8 1, label %253
    i8 2, label %258
  ]

253:                                              ; preds = %249
  %254 = icmp eq i8* %244, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %253
  %256 = bitcast i8* %244 to %"struct.tflite::Int32Vector"*
  %257 = tail call zeroext i1 @_ZNK6tflite11Int32Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Int32Vector"* nonnull %256, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %257, label %268, label %271

258:                                              ; preds = %249
  %259 = icmp eq i8* %244, null
  br i1 %259, label %268, label %260

260:                                              ; preds = %258
  %261 = bitcast i8* %244 to %"struct.tflite::Uint16Vector"*
  %262 = tail call zeroext i1 @_ZNK6tflite12Uint16Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint16Vector"* nonnull %261, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %262, label %268, label %271

263:                                              ; preds = %249
  %264 = icmp eq i8* %244, null
  br i1 %264, label %268, label %265

265:                                              ; preds = %263
  %266 = bitcast i8* %244 to %"struct.tflite::Uint8Vector"*
  %267 = tail call zeroext i1 @_ZNK6tflite11Uint8Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint8Vector"* nonnull %266, %"class.flatbuffers::Verifier"* dereferenceable(48) %1) #7
  br i1 %267, label %268, label %271

268:                                              ; preds = %173, %243, %263, %258, %253, %249, %260, %255, %265
  %269 = load i32, i32* %26, align 8
  %270 = add i32 %269, -1
  store i32 %270, i32* %26, align 8
  br label %271

271:                                              ; preds = %101, %78, %118, %124, %90, %131, %226, %211, %221, %215, %126, %42, %21, %10, %35, %46, %56, %14, %260, %255, %165, %160, %268, %265, %186, %170, %60
  %272 = phi i1 [ false, %265 ], [ false, %226 ], [ false, %186 ], [ false, %170 ], [ false, %131 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %268 ], [ false, %160 ], [ false, %165 ], [ false, %255 ], [ false, %260 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %124 ], [ false, %126 ], [ false, %118 ], [ false, %215 ], [ false, %221 ], [ false, %211 ]
  ret i1 %272
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite11Int32Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Int32Vector"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Int32Vector"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Int32Vector"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Int32Vector", %"struct.tflite::Int32Vector"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %140, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %140, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %140

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %140, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Int32Vector", %"struct.tflite::Int32Vector"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %140, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %140, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %140

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %139, %131, %60
  %141 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite12Uint16Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint16Vector"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Uint16Vector"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Uint16Vector"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Uint16Vector", %"struct.tflite::Uint16Vector"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %140, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %140, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %140

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %140, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Uint16Vector", %"struct.tflite::Uint16Vector"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %140, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %140, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 1073741823
  br i1 %130, label %131, label %140

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 1
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %139, %131, %60
  %141 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite11Uint8Vector6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Uint8Vector"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Uint8Vector"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %139

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %139

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Uint8Vector"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %139, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %139, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %139

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %139, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %139

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %139

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Uint8Vector", %"struct.tflite::Uint8Vector"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %138

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %139, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %139, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %139

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %139, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Uint8Vector", %"struct.tflite::Uint8Vector"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %138, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %139, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %139, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = icmp ugt i64 %16, %133
  %135 = sub i64 %16, %133
  %136 = icmp uge i64 %135, %116
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %139

139:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %138, %131, %60
  %140 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %138 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite8Operator6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Operator"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Operator"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %539

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %539

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Operator"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %539, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %539, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %539

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %539, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %539

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %539

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %283

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %539, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %283

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %96 = load i8, i8* %95, align 8, !range !5
  %97 = icmp ne i8 %96, 0
  %98 = icmp ult i64 %18, %91
  %99 = or i1 %97, %98
  br i1 %99, label %539, label %102

100:                                              ; preds = %89
  %101 = icmp ult i64 %18, %91
  br i1 %101, label %539, label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds i8, i8* %9, i64 %91
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %539

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = add i64 %91, %108
  %110 = add i64 %16, -1
  %111 = icmp ult i64 %110, %109
  br i1 %111, label %539, label %112

112:                                              ; preds = %107, %84
  %113 = getelementptr inbounds i8, i8* %69, i64 6
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %150, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %119
  %126 = ptrtoint i8* %123 to i64
  %127 = sub i64 %126, %4
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %132 = load i8, i8* %131, align 8, !range !5
  %133 = icmp ne i8 %132, 0
  %134 = icmp ult i64 %18, %127
  %135 = or i1 %133, %134
  br i1 %135, label %539, label %138

136:                                              ; preds = %125
  %137 = icmp ult i64 %18, %127
  br i1 %137, label %539, label %138

138:                                              ; preds = %130, %136
  %139 = bitcast i8* %123 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, 536870911
  br i1 %141, label %142, label %539

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = add nuw nsw i64 %144, 4
  %146 = icmp ugt i64 %16, %145
  %147 = sub i64 %16, %145
  %148 = icmp uge i64 %147, %127
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %539

150:                                              ; preds = %112, %119, %142
  %151 = icmp ugt i16 %71, 8
  br i1 %151, label %152, label %283

152:                                              ; preds = %150
  %153 = getelementptr inbounds i8, i8* %69, i64 8
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %180, label %157

157:                                              ; preds = %152
  %158 = zext i16 %155 to i64
  %159 = add i64 %6, %158
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %164 = load i8, i8* %163, align 8, !range !5
  %165 = icmp ne i8 %164, 0
  %166 = icmp ult i64 %18, %159
  %167 = or i1 %165, %166
  br i1 %167, label %539, label %170

168:                                              ; preds = %157
  %169 = icmp ult i64 %18, %159
  br i1 %169, label %539, label %170

170:                                              ; preds = %162, %168
  %171 = getelementptr inbounds i8, i8* %9, i64 %159
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %175, label %539

175:                                              ; preds = %170
  %176 = zext i32 %173 to i64
  %177 = add i64 %159, %176
  %178 = add i64 %16, -1
  %179 = icmp ult i64 %178, %177
  br i1 %179, label %539, label %180

180:                                              ; preds = %175, %152
  %181 = getelementptr inbounds i8, i8* %69, i64 8
  %182 = bitcast i8* %181 to i16*
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i64
  %185 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %184
  %186 = icmp eq i16 %183, 0
  br i1 %186, label %218, label %187

187:                                              ; preds = %180
  %188 = bitcast i8* %185 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %185, i64 %190
  %192 = icmp eq i8* %191, null
  br i1 %192, label %218, label %193

193:                                              ; preds = %187
  %194 = ptrtoint i8* %191 to i64
  %195 = sub i64 %194, %4
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %200 = load i8, i8* %199, align 8, !range !5
  %201 = icmp ne i8 %200, 0
  %202 = icmp ult i64 %18, %195
  %203 = or i1 %201, %202
  br i1 %203, label %539, label %206

204:                                              ; preds = %193
  %205 = icmp ult i64 %18, %195
  br i1 %205, label %539, label %206

206:                                              ; preds = %198, %204
  %207 = bitcast i8* %191 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = icmp ult i32 %208, 536870911
  br i1 %209, label %210, label %539

210:                                              ; preds = %206
  %211 = zext i32 %208 to i64
  %212 = shl nuw nsw i64 %211, 2
  %213 = add nuw nsw i64 %212, 4
  %214 = icmp ugt i64 %16, %213
  %215 = sub i64 %16, %213
  %216 = icmp uge i64 %215, %195
  %217 = and i1 %214, %216
  br i1 %217, label %218, label %539

218:                                              ; preds = %180, %187, %210
  %219 = icmp ugt i16 %71, 10
  br i1 %219, label %220, label %283

220:                                              ; preds = %218
  %221 = getelementptr inbounds i8, i8* %69, i64 10
  %222 = bitcast i8* %221 to i16*
  %223 = load i16, i16* %222, align 2
  %224 = icmp eq i16 %223, 0
  br i1 %224, label %230, label %225

225:                                              ; preds = %220
  %226 = zext i16 %223 to i64
  %227 = add i64 %6, %226
  %228 = add i64 %16, -1
  %229 = icmp ult i64 %228, %227
  br i1 %229, label %539, label %230

230:                                              ; preds = %225, %220
  %231 = icmp ugt i16 %71, 12
  br i1 %231, label %232, label %272

232:                                              ; preds = %230
  %233 = getelementptr inbounds i8, i8* %69, i64 12
  %234 = bitcast i8* %233 to i16*
  %235 = load i16, i16* %234, align 2
  %236 = icmp eq i16 %235, 0
  br i1 %236, label %260, label %237

237:                                              ; preds = %232
  %238 = zext i16 %235 to i64
  %239 = add i64 %6, %238
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %248, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %244 = load i8, i8* %243, align 8, !range !5
  %245 = icmp ne i8 %244, 0
  %246 = icmp ult i64 %18, %239
  %247 = or i1 %245, %246
  br i1 %247, label %539, label %250

248:                                              ; preds = %237
  %249 = icmp ult i64 %18, %239
  br i1 %249, label %539, label %250

250:                                              ; preds = %242, %248
  %251 = getelementptr inbounds i8, i8* %9, i64 %239
  %252 = bitcast i8* %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %539

255:                                              ; preds = %250
  %256 = zext i32 %253 to i64
  %257 = add i64 %239, %256
  %258 = add i64 %16, -1
  %259 = icmp ult i64 %258, %257
  br i1 %259, label %539, label %260

260:                                              ; preds = %232, %255
  %261 = getelementptr inbounds i8, i8* %69, i64 12
  %262 = bitcast i8* %261 to i16*
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i64
  %265 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %264
  %266 = icmp eq i16 %263, 0
  br i1 %266, label %272, label %267

267:                                              ; preds = %260
  %268 = bitcast i8* %265 to i32*
  %269 = load i32, i32* %268, align 4
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds i8, i8* %265, i64 %270
  br label %272

272:                                              ; preds = %230, %267, %260
  %273 = phi i8* [ null, %260 ], [ %271, %267 ], [ null, %230 ]
  %274 = getelementptr inbounds i8, i8* %69, i64 10
  %275 = bitcast i8* %274 to i16*
  %276 = load i16, i16* %275, align 2
  %277 = icmp eq i16 %276, 0
  br i1 %277, label %283, label %278

278:                                              ; preds = %272
  %279 = zext i16 %276 to i64
  %280 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i32
  br label %283

283:                                              ; preds = %218, %150, %82, %65, %272, %278
  %284 = phi i8* [ %273, %278 ], [ %273, %272 ], [ null, %65 ], [ null, %82 ], [ null, %150 ], [ null, %218 ]
  %285 = phi i32 [ %282, %278 ], [ 0, %272 ], [ 0, %65 ], [ 0, %82 ], [ 0, %150 ], [ 0, %218 ]
  %286 = tail call zeroext i1 @_ZN6tflite20VerifyBuiltinOptionsERN11flatbuffers8VerifierEPKvNS_14BuiltinOptionsE(%"class.flatbuffers::Verifier"* dereferenceable(48) %1, i8* %284, i32 %285)
  br i1 %286, label %287, label %539

287:                                              ; preds = %283
  %288 = load i32, i32* %22, align 4
  %289 = sext i32 %288 to i64
  %290 = sub nsw i64 0, %289
  %291 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %290
  %292 = bitcast i8* %291 to i16*
  %293 = load i16, i16* %292, align 2
  %294 = icmp ugt i16 %293, 14
  br i1 %294, label %295, label %536

295:                                              ; preds = %287
  %296 = getelementptr inbounds i8, i8* %291, i64 14
  %297 = bitcast i8* %296 to i16*
  %298 = load i16, i16* %297, align 2
  %299 = icmp eq i16 %298, 0
  br i1 %299, label %328, label %300

300:                                              ; preds = %295
  %301 = load i64, i64* %3, align 8
  %302 = sub i64 %5, %301
  %303 = zext i16 %298 to i64
  %304 = add i64 %302, %303
  %305 = and i64 %304, 3
  %306 = icmp eq i64 %305, 0
  %307 = inttoptr i64 %301 to i8*
  br i1 %306, label %312, label %308

308:                                              ; preds = %300
  %309 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %310 = load i8, i8* %309, align 8, !range !5
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %539

312:                                              ; preds = %308, %300
  %313 = load i64, i64* %15, align 8
  %314 = icmp ugt i64 %313, 4
  %315 = add i64 %313, -4
  %316 = icmp uge i64 %315, %304
  %317 = and i1 %314, %316
  br i1 %317, label %318, label %539

318:                                              ; preds = %312
  %319 = getelementptr inbounds i8, i8* %307, i64 %304
  %320 = bitcast i8* %319 to i32*
  %321 = load i32, i32* %320, align 4
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %323, label %539

323:                                              ; preds = %318
  %324 = zext i32 %321 to i64
  %325 = add i64 %304, %324
  %326 = add i64 %313, -1
  %327 = icmp ult i64 %326, %325
  br i1 %327, label %539, label %328

328:                                              ; preds = %323, %295
  %329 = getelementptr inbounds i8, i8* %291, i64 14
  %330 = bitcast i8* %329 to i16*
  %331 = load i16, i16* %330, align 2
  %332 = zext i16 %331 to i64
  %333 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %332
  %334 = icmp eq i16 %331, 0
  br i1 %334, label %368, label %335

335:                                              ; preds = %328
  %336 = bitcast i8* %333 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = zext i32 %337 to i64
  %339 = getelementptr inbounds i8, i8* %333, i64 %338
  %340 = icmp eq i8* %339, null
  br i1 %340, label %368, label %341

341:                                              ; preds = %335
  %342 = load i64, i64* %3, align 8
  %343 = ptrtoint i8* %339 to i64
  %344 = sub i64 %343, %342
  %345 = and i64 %344, 3
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %351, label %347

347:                                              ; preds = %341
  %348 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %349 = load i8, i8* %348, align 8, !range !5
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %351, label %539

351:                                              ; preds = %347, %341
  %352 = load i64, i64* %15, align 8
  %353 = icmp ugt i64 %352, 4
  %354 = add i64 %352, -4
  %355 = icmp uge i64 %354, %344
  %356 = and i1 %353, %355
  br i1 %356, label %357, label %539

357:                                              ; preds = %351
  %358 = bitcast i8* %339 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = icmp ult i32 %359, 2147483647
  br i1 %360, label %361, label %539

361:                                              ; preds = %357
  %362 = zext i32 %359 to i64
  %363 = add nuw nsw i64 %362, 4
  %364 = icmp ugt i64 %352, %363
  %365 = sub i64 %352, %363
  %366 = icmp uge i64 %365, %344
  %367 = and i1 %364, %366
  br i1 %367, label %368, label %539

368:                                              ; preds = %328, %335, %361
  %369 = icmp ugt i16 %293, 16
  br i1 %369, label %370, label %536

370:                                              ; preds = %368
  %371 = getelementptr inbounds i8, i8* %291, i64 16
  %372 = bitcast i8* %371 to i16*
  %373 = load i16, i16* %372, align 2
  %374 = icmp eq i16 %373, 0
  br i1 %374, label %385, label %375

375:                                              ; preds = %370
  %376 = load i64, i64* %3, align 8
  %377 = zext i16 %373 to i64
  %378 = add i64 %377, %5
  %379 = sub i64 %378, %376
  %380 = load i64, i64* %15, align 8
  %381 = icmp ugt i64 %380, 1
  %382 = add i64 %380, -1
  %383 = icmp uge i64 %382, %379
  %384 = and i1 %381, %383
  br i1 %384, label %385, label %539

385:                                              ; preds = %370, %375
  %386 = icmp ugt i16 %293, 18
  br i1 %386, label %387, label %536

387:                                              ; preds = %385
  %388 = getelementptr inbounds i8, i8* %291, i64 18
  %389 = bitcast i8* %388 to i16*
  %390 = load i16, i16* %389, align 2
  %391 = icmp eq i16 %390, 0
  br i1 %391, label %420, label %392

392:                                              ; preds = %387
  %393 = load i64, i64* %3, align 8
  %394 = sub i64 %5, %393
  %395 = zext i16 %390 to i64
  %396 = add i64 %394, %395
  %397 = and i64 %396, 3
  %398 = icmp eq i64 %397, 0
  %399 = inttoptr i64 %393 to i8*
  br i1 %398, label %404, label %400

400:                                              ; preds = %392
  %401 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %402 = load i8, i8* %401, align 8, !range !5
  %403 = icmp eq i8 %402, 0
  br i1 %403, label %404, label %539

404:                                              ; preds = %400, %392
  %405 = load i64, i64* %15, align 8
  %406 = icmp ugt i64 %405, 4
  %407 = add i64 %405, -4
  %408 = icmp uge i64 %407, %396
  %409 = and i1 %406, %408
  br i1 %409, label %410, label %539

410:                                              ; preds = %404
  %411 = getelementptr inbounds i8, i8* %399, i64 %396
  %412 = bitcast i8* %411 to i32*
  %413 = load i32, i32* %412, align 4
  %414 = icmp sgt i32 %413, 0
  br i1 %414, label %415, label %539

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = add i64 %396, %416
  %418 = add i64 %405, -1
  %419 = icmp ult i64 %418, %417
  br i1 %419, label %539, label %420

420:                                              ; preds = %387, %415
  %421 = getelementptr inbounds i8, i8* %291, i64 18
  %422 = bitcast i8* %421 to i16*
  %423 = load i16, i16* %422, align 2
  %424 = zext i16 %423 to i64
  %425 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %424
  %426 = icmp eq i16 %423, 0
  br i1 %426, label %460, label %427

427:                                              ; preds = %420
  %428 = bitcast i8* %425 to i32*
  %429 = load i32, i32* %428, align 4
  %430 = zext i32 %429 to i64
  %431 = getelementptr inbounds i8, i8* %425, i64 %430
  %432 = icmp eq i8* %431, null
  br i1 %432, label %460, label %433

433:                                              ; preds = %427
  %434 = load i64, i64* %3, align 8
  %435 = ptrtoint i8* %431 to i64
  %436 = sub i64 %435, %434
  %437 = and i64 %436, 3
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %443, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %441 = load i8, i8* %440, align 8, !range !5
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %443, label %539

443:                                              ; preds = %439, %433
  %444 = load i64, i64* %15, align 8
  %445 = icmp ugt i64 %444, 4
  %446 = add i64 %444, -4
  %447 = icmp uge i64 %446, %436
  %448 = and i1 %445, %447
  br i1 %448, label %449, label %539

449:                                              ; preds = %443
  %450 = bitcast i8* %431 to i32*
  %451 = load i32, i32* %450, align 4
  %452 = icmp ult i32 %451, 2147483647
  br i1 %452, label %453, label %539

453:                                              ; preds = %449
  %454 = zext i32 %451 to i64
  %455 = add nuw nsw i64 %454, 4
  %456 = icmp ugt i64 %444, %455
  %457 = sub i64 %444, %455
  %458 = icmp uge i64 %457, %436
  %459 = and i1 %456, %458
  br i1 %459, label %460, label %539

460:                                              ; preds = %420, %427, %453
  %461 = icmp ugt i16 %293, 20
  br i1 %461, label %462, label %536

462:                                              ; preds = %460
  %463 = getelementptr inbounds i8, i8* %291, i64 20
  %464 = bitcast i8* %463 to i16*
  %465 = load i16, i16* %464, align 2
  %466 = icmp eq i16 %465, 0
  br i1 %466, label %495, label %467

467:                                              ; preds = %462
  %468 = load i64, i64* %3, align 8
  %469 = sub i64 %5, %468
  %470 = zext i16 %465 to i64
  %471 = add i64 %469, %470
  %472 = and i64 %471, 3
  %473 = icmp eq i64 %472, 0
  %474 = inttoptr i64 %468 to i8*
  br i1 %473, label %479, label %475

475:                                              ; preds = %467
  %476 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %477 = load i8, i8* %476, align 8, !range !5
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %479, label %539

479:                                              ; preds = %475, %467
  %480 = load i64, i64* %15, align 8
  %481 = icmp ugt i64 %480, 4
  %482 = add i64 %480, -4
  %483 = icmp uge i64 %482, %471
  %484 = and i1 %481, %483
  br i1 %484, label %485, label %539

485:                                              ; preds = %479
  %486 = getelementptr inbounds i8, i8* %474, i64 %471
  %487 = bitcast i8* %486 to i32*
  %488 = load i32, i32* %487, align 4
  %489 = icmp sgt i32 %488, 0
  br i1 %489, label %490, label %539

490:                                              ; preds = %485
  %491 = zext i32 %488 to i64
  %492 = add i64 %471, %491
  %493 = add i64 %480, -1
  %494 = icmp ult i64 %493, %492
  br i1 %494, label %539, label %495

495:                                              ; preds = %490, %462
  %496 = getelementptr inbounds i8, i8* %291, i64 20
  %497 = bitcast i8* %496 to i16*
  %498 = load i16, i16* %497, align 2
  %499 = zext i16 %498 to i64
  %500 = getelementptr inbounds %"struct.tflite::Operator", %"struct.tflite::Operator"* %0, i64 0, i32 0, i32 0, i64 %499
  %501 = icmp eq i16 %498, 0
  br i1 %501, label %536, label %502

502:                                              ; preds = %495
  %503 = bitcast i8* %500 to i32*
  %504 = load i32, i32* %503, align 4
  %505 = zext i32 %504 to i64
  %506 = getelementptr inbounds i8, i8* %500, i64 %505
  %507 = icmp eq i8* %506, null
  br i1 %507, label %536, label %508

508:                                              ; preds = %502
  %509 = load i64, i64* %3, align 8
  %510 = ptrtoint i8* %506 to i64
  %511 = sub i64 %510, %509
  %512 = and i64 %511, 3
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %518, label %514

514:                                              ; preds = %508
  %515 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %516 = load i8, i8* %515, align 8, !range !5
  %517 = icmp eq i8 %516, 0
  br i1 %517, label %518, label %539

518:                                              ; preds = %514, %508
  %519 = load i64, i64* %15, align 8
  %520 = icmp ugt i64 %519, 4
  %521 = add i64 %519, -4
  %522 = icmp uge i64 %521, %511
  %523 = and i1 %520, %522
  br i1 %523, label %524, label %539

524:                                              ; preds = %518
  %525 = bitcast i8* %506 to i32*
  %526 = load i32, i32* %525, align 4
  %527 = icmp ult i32 %526, 536870911
  br i1 %527, label %528, label %539

528:                                              ; preds = %524
  %529 = zext i32 %526 to i64
  %530 = shl nuw nsw i64 %529, 2
  %531 = add nuw nsw i64 %530, 4
  %532 = icmp ugt i64 %519, %531
  %533 = sub i64 %519, %531
  %534 = icmp uge i64 %533, %511
  %535 = and i1 %532, %534
  br i1 %535, label %536, label %539

536:                                              ; preds = %460, %287, %385, %368, %495, %502, %528
  %537 = load i32, i32* %26, align 8
  %538 = add i32 %537, -1
  store i32 %538, i32* %26, align 8
  br label %539

539:                                              ; preds = %225, %242, %198, %162, %130, %94, %100, %78, %136, %168, %204, %248, %107, %175, %255, %323, %415, %490, %514, %524, %518, %475, %485, %479, %439, %449, %443, %400, %410, %404, %347, %357, %351, %308, %318, %312, %250, %206, %170, %138, %102, %42, %21, %10, %35, %46, %56, %14, %536, %528, %453, %375, %361, %283, %210, %142, %60
  %540 = phi i1 [ false, %528 ], [ false, %490 ], [ false, %453 ], [ false, %415 ], [ false, %375 ], [ false, %361 ], [ false, %323 ], [ false, %283 ], [ false, %255 ], [ false, %225 ], [ false, %210 ], [ false, %175 ], [ false, %142 ], [ false, %107 ], [ false, %78 ], [ false, %60 ], [ true, %536 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %100 ], [ false, %102 ], [ false, %94 ], [ false, %136 ], [ false, %138 ], [ false, %130 ], [ false, %168 ], [ false, %170 ], [ false, %162 ], [ false, %204 ], [ false, %206 ], [ false, %198 ], [ false, %248 ], [ false, %250 ], [ false, %242 ], [ false, %312 ], [ false, %318 ], [ false, %308 ], [ false, %351 ], [ false, %357 ], [ false, %347 ], [ false, %404 ], [ false, %410 ], [ false, %400 ], [ false, %443 ], [ false, %449 ], [ false, %439 ], [ false, %479 ], [ false, %485 ], [ false, %475 ], [ false, %518 ], [ false, %524 ], [ false, %514 ]
  ret i1 %540
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite20VerifyBuiltinOptionsERN11flatbuffers8VerifierEPKvNS_14BuiltinOptionsE(%"class.flatbuffers::Verifier"* dereferenceable(48), i8*, i32) local_unnamed_addr #5 comdat {
  switch i32 %2, label %6330 [
    i32 101, label %6233
    i32 1, label %4
    i32 2, label %9
    i32 3, label %14
    i32 4, label %19
    i32 5, label %104
    i32 6, label %109
    i32 7, label %114
    i32 8, label %211
    i32 9, label %216
    i32 10, label %300
    i32 11, label %396
    i32 12, label %481
    i32 13, label %566
    i32 14, label %571
    i32 15, label %576
    i32 16, label %673
    i32 17, label %757
    i32 18, label %762
    i32 19, label %767
    i32 20, label %851
    i32 21, label %936
    i32 22, label %1021
    i32 23, label %1087
    i32 24, label %1171
    i32 25, label %1237
    i32 26, label %1303
    i32 27, label %1369
    i32 28, label %1454
    i32 29, label %1539
    i32 30, label %1624
    i32 31, label %1629
    i32 32, label %1634
    i32 33, label %1639
    i32 34, label %1705
    i32 35, label %1771
    i32 36, label %1855
    i32 37, label %1921
    i32 38, label %2018
    i32 39, label %2084
    i32 40, label %2150
    i32 41, label %2235
    i32 42, label %2301
    i32 43, label %2367
    i32 44, label %2433
    i32 45, label %2499
    i32 46, label %2565
    i32 47, label %2631
    i32 48, label %2697
    i32 49, label %2763
    i32 50, label %2768
    i32 51, label %2853
    i32 52, label %2919
    i32 53, label %2985
    i32 54, label %3051
    i32 55, label %3117
    i32 56, label %3202
    i32 57, label %3268
    i32 58, label %3353
    i32 59, label %3358
    i32 60, label %3453
    i32 61, label %3519
    i32 62, label %3603
    i32 63, label %3669
    i32 64, label %3735
    i32 65, label %3830
    i32 66, label %3896
    i32 67, label %3962
    i32 68, label %4028
    i32 69, label %4094
    i32 70, label %4099
    i32 71, label %4104
    i32 72, label %4109
    i32 73, label %4175
    i32 74, label %4241
    i32 75, label %4338
    i32 76, label %4422
    i32 77, label %4488
    i32 78, label %4573
    i32 79, label %4639
    i32 80, label %4723
    i32 81, label %4808
    i32 82, label %4874
    i32 83, label %4940
    i32 84, label %5006
    i32 85, label %5072
    i32 86, label %5138
    i32 87, label %5204
    i32 88, label %5299
    i32 89, label %5365
    i32 90, label %5431
    i32 91, label %5497
    i32 92, label %5563
    i32 93, label %5658
    i32 94, label %5753
    i32 95, label %5837
    i32 96, label %5903
    i32 97, label %5969
    i32 98, label %6035
    i32 99, label %6101
    i32 100, label %6167
  ]

4:                                                ; preds = %3
  %5 = icmp eq i8* %1, null
  br i1 %5, label %6330, label %6

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to %"struct.tflite::Conv2DOptions"*
  %8 = tail call zeroext i1 @_ZNK6tflite13Conv2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Conv2DOptions"* nonnull %7, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null
  br i1 %10, label %6330, label %11

11:                                               ; preds = %9
  %12 = bitcast i8* %1 to %"struct.tflite::DepthwiseConv2DOptions"*
  %13 = tail call zeroext i1 @_ZNK6tflite22DepthwiseConv2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::DepthwiseConv2DOptions"* nonnull %12, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

14:                                               ; preds = %3
  %15 = icmp eq i8* %1, null
  br i1 %15, label %6330, label %16

16:                                               ; preds = %14
  %17 = bitcast i8* %1 to %"struct.tflite::ConcatEmbeddingsOptions"*
  %18 = tail call zeroext i1 @_ZNK6tflite23ConcatEmbeddingsOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::ConcatEmbeddingsOptions"* nonnull %17, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

19:                                               ; preds = %3
  %20 = bitcast i8* %1 to %"struct.tflite::LSHProjectionOptions"*
  %21 = icmp eq i8* %1, null
  br i1 %21, label %6330, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = ptrtoint i8* %1 to i64
  %26 = sub i64 %25, %24
  %27 = and i64 %26, 3
  %28 = icmp eq i64 %27, 0
  %29 = inttoptr i64 %24 to i8*
  br i1 %28, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %32 = load i8, i8* %31, align 8, !range !5
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %6330

34:                                               ; preds = %30, %22
  %35 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ugt i64 %36, 4
  %38 = add i64 %36, -4
  %39 = icmp uge i64 %38, %26
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %6330

41:                                               ; preds = %34
  %42 = bitcast i8* %1 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = sub i64 %26, %44
  %46 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = icmp ugt i32 %48, %53
  br i1 %54, label %6330, label %55

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %51, %57
  br i1 %58, label %6330, label %59

59:                                               ; preds = %55
  %60 = and i64 %45, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %64 = load i8, i8* %63, align 8, !range !5
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %6330

66:                                               ; preds = %62, %59
  %67 = add i64 %36, -2
  %68 = icmp ult i64 %67, %45
  br i1 %68, label %6330, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds i8, i8* %29, i64 %45
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i64
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %78 = load i8, i8* %77, align 8, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %6330

80:                                               ; preds = %69, %76
  %81 = icmp ugt i64 %36, %73
  %82 = sub i64 %36, %73
  %83 = icmp uge i64 %82, %45
  %84 = and i1 %81, %83
  br i1 %84, label %85, label %6330

85:                                               ; preds = %80
  %86 = load i32, i32* %42, align 4
  %87 = sext i32 %86 to i64
  %88 = sub nsw i64 0, %87
  %89 = getelementptr inbounds %"struct.tflite::LSHProjectionOptions", %"struct.tflite::LSHProjectionOptions"* %20, i64 0, i32 0, i32 0, i64 %88
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 2
  %92 = icmp ugt i16 %91, 4
  br i1 %92, label %93, label %103

93:                                               ; preds = %85
  %94 = getelementptr inbounds i8, i8* %89, i64 4
  %95 = bitcast i8* %94 to i16*
  %96 = load i16, i16* %95, align 2
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = zext i16 %96 to i64
  %100 = add i64 %26, %99
  %101 = add i64 %36, -1
  %102 = icmp ult i64 %101, %100
  br i1 %102, label %6330, label %103

103:                                              ; preds = %98, %93, %85
  store i32 %47, i32* %46, align 8
  br label %6330

104:                                              ; preds = %3
  %105 = icmp eq i8* %1, null
  br i1 %105, label %6330, label %106

106:                                              ; preds = %104
  %107 = bitcast i8* %1 to %"struct.tflite::Pool2DOptions"*
  %108 = tail call zeroext i1 @_ZNK6tflite13Pool2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Pool2DOptions"* nonnull %107, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

109:                                              ; preds = %3
  %110 = icmp eq i8* %1, null
  br i1 %110, label %6330, label %111

111:                                              ; preds = %109
  %112 = bitcast i8* %1 to %"struct.tflite::SVDFOptions"*
  %113 = tail call zeroext i1 @_ZNK6tflite11SVDFOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SVDFOptions"* nonnull %112, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

114:                                              ; preds = %3
  %115 = bitcast i8* %1 to %"struct.tflite::RNNOptions"*
  %116 = icmp eq i8* %1, null
  br i1 %116, label %6330, label %117

117:                                              ; preds = %114
  %118 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = ptrtoint i8* %1 to i64
  %121 = sub i64 %120, %119
  %122 = and i64 %121, 3
  %123 = icmp eq i64 %122, 0
  %124 = inttoptr i64 %119 to i8*
  br i1 %123, label %129, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %127 = load i8, i8* %126, align 8, !range !5
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %6330

129:                                              ; preds = %125, %117
  %130 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = icmp ugt i64 %131, 4
  %133 = add i64 %131, -4
  %134 = icmp uge i64 %133, %121
  %135 = and i1 %132, %134
  br i1 %135, label %136, label %6330

136:                                              ; preds = %129
  %137 = bitcast i8* %1 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = sub i64 %121, %139
  %141 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 8
  %144 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, 1
  store i32 %146, i32* %144, align 8
  %147 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %148 = load i32, i32* %147, align 4
  %149 = icmp ugt i32 %143, %148
  br i1 %149, label %6330, label %150

150:                                              ; preds = %136
  %151 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %152 = load i32, i32* %151, align 4
  %153 = icmp ugt i32 %146, %152
  br i1 %153, label %6330, label %154

154:                                              ; preds = %150
  %155 = and i64 %140, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %159 = load i8, i8* %158, align 8, !range !5
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %6330

161:                                              ; preds = %157, %154
  %162 = add i64 %131, -2
  %163 = icmp ult i64 %162, %140
  br i1 %163, label %6330, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds i8, i8* %124, i64 %140
  %166 = bitcast i8* %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i64
  %169 = and i64 %168, 1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %175, label %171

171:                                              ; preds = %164
  %172 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %173 = load i8, i8* %172, align 8, !range !5
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %6330

175:                                              ; preds = %164, %171
  %176 = icmp ugt i64 %131, %168
  %177 = sub i64 %131, %168
  %178 = icmp uge i64 %177, %140
  %179 = and i1 %176, %178
  br i1 %179, label %180, label %6330

180:                                              ; preds = %175
  %181 = load i32, i32* %137, align 4
  %182 = sext i32 %181 to i64
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds %"struct.tflite::RNNOptions", %"struct.tflite::RNNOptions"* %115, i64 0, i32 0, i32 0, i64 %183
  %185 = bitcast i8* %184 to i16*
  %186 = load i16, i16* %185, align 2
  %187 = icmp ugt i16 %186, 4
  br i1 %187, label %188, label %210

188:                                              ; preds = %180
  %189 = getelementptr inbounds i8, i8* %184, i64 4
  %190 = bitcast i8* %189 to i16*
  %191 = load i16, i16* %190, align 2
  %192 = icmp eq i16 %191, 0
  br i1 %192, label %198, label %193

193:                                              ; preds = %188
  %194 = zext i16 %191 to i64
  %195 = add i64 %121, %194
  %196 = add i64 %131, -1
  %197 = icmp ult i64 %196, %195
  br i1 %197, label %6330, label %198

198:                                              ; preds = %193, %188
  %199 = icmp ugt i16 %186, 6
  br i1 %199, label %200, label %210

200:                                              ; preds = %198
  %201 = getelementptr inbounds i8, i8* %184, i64 6
  %202 = bitcast i8* %201 to i16*
  %203 = load i16, i16* %202, align 2
  %204 = icmp eq i16 %203, 0
  br i1 %204, label %210, label %205

205:                                              ; preds = %200
  %206 = zext i16 %203 to i64
  %207 = add i64 %121, %206
  %208 = add i64 %131, -1
  %209 = icmp ult i64 %208, %207
  br i1 %209, label %6330, label %210

210:                                              ; preds = %205, %200, %198, %180
  store i32 %142, i32* %141, align 8
  br label %6330

211:                                              ; preds = %3
  %212 = icmp eq i8* %1, null
  br i1 %212, label %6330, label %213

213:                                              ; preds = %211
  %214 = bitcast i8* %1 to %"struct.tflite::FullyConnectedOptions"*
  %215 = tail call zeroext i1 @_ZNK6tflite21FullyConnectedOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::FullyConnectedOptions"* nonnull %214, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

216:                                              ; preds = %3
  %217 = bitcast i8* %1 to %"struct.tflite::SoftmaxOptions"*
  %218 = icmp eq i8* %1, null
  br i1 %218, label %6330, label %219

219:                                              ; preds = %216
  %220 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = ptrtoint i8* %1 to i64
  %223 = sub i64 %222, %221
  %224 = and i64 %223, 3
  %225 = icmp eq i64 %224, 0
  %226 = inttoptr i64 %221 to i8*
  br i1 %225, label %231, label %227

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %229 = load i8, i8* %228, align 8, !range !5
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %6330

231:                                              ; preds = %227, %219
  %232 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = icmp ugt i64 %233, 4
  %235 = add i64 %233, -4
  %236 = icmp uge i64 %235, %223
  %237 = and i1 %234, %236
  br i1 %237, label %238, label %6330

238:                                              ; preds = %231
  %239 = bitcast i8* %1 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = sub i64 %223, %241
  %243 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %244 = load i32, i32* %243, align 8
  %245 = add i32 %244, 1
  store i32 %245, i32* %243, align 8
  %246 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %247 = load i32, i32* %246, align 8
  %248 = add i32 %247, 1
  store i32 %248, i32* %246, align 8
  %249 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = icmp ugt i32 %245, %250
  br i1 %251, label %6330, label %252

252:                                              ; preds = %238
  %253 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %254 = load i32, i32* %253, align 4
  %255 = icmp ugt i32 %248, %254
  br i1 %255, label %6330, label %256

256:                                              ; preds = %252
  %257 = and i64 %242, 1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %263, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %261 = load i8, i8* %260, align 8, !range !5
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %263, label %6330

263:                                              ; preds = %259, %256
  %264 = add i64 %233, -2
  %265 = icmp ult i64 %264, %242
  br i1 %265, label %6330, label %266

266:                                              ; preds = %263
  %267 = getelementptr inbounds i8, i8* %226, i64 %242
  %268 = bitcast i8* %267 to i16*
  %269 = load i16, i16* %268, align 2
  %270 = zext i16 %269 to i64
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %277, label %273

273:                                              ; preds = %266
  %274 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %275 = load i8, i8* %274, align 8, !range !5
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %6330

277:                                              ; preds = %266, %273
  %278 = icmp ugt i64 %233, %270
  %279 = sub i64 %233, %270
  %280 = icmp uge i64 %279, %242
  %281 = and i1 %278, %280
  br i1 %281, label %282, label %6330

282:                                              ; preds = %277
  %283 = load i32, i32* %239, align 4
  %284 = sext i32 %283 to i64
  %285 = sub nsw i64 0, %284
  %286 = getelementptr inbounds %"struct.tflite::SoftmaxOptions", %"struct.tflite::SoftmaxOptions"* %217, i64 0, i32 0, i32 0, i64 %285
  %287 = bitcast i8* %286 to i16*
  %288 = load i16, i16* %287, align 2
  %289 = icmp ugt i16 %288, 4
  br i1 %289, label %290, label %299

290:                                              ; preds = %282
  %291 = getelementptr inbounds i8, i8* %286, i64 4
  %292 = bitcast i8* %291 to i16*
  %293 = load i16, i16* %292, align 2
  %294 = icmp eq i16 %293, 0
  br i1 %294, label %299, label %295

295:                                              ; preds = %290
  %296 = zext i16 %293 to i64
  %297 = add i64 %223, %296
  %298 = icmp ult i64 %235, %297
  br i1 %298, label %6330, label %299

299:                                              ; preds = %295, %290, %282
  store i32 %244, i32* %243, align 8
  br label %6330

300:                                              ; preds = %3
  %301 = bitcast i8* %1 to %"struct.tflite::ConcatenationOptions"*
  %302 = icmp eq i8* %1, null
  br i1 %302, label %6330, label %303

303:                                              ; preds = %300
  %304 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = ptrtoint i8* %1 to i64
  %307 = sub i64 %306, %305
  %308 = and i64 %307, 3
  %309 = icmp eq i64 %308, 0
  %310 = inttoptr i64 %305 to i8*
  br i1 %309, label %315, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %313 = load i8, i8* %312, align 8, !range !5
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %315, label %6330

315:                                              ; preds = %311, %303
  %316 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = icmp ugt i64 %317, 4
  %319 = add i64 %317, -4
  %320 = icmp uge i64 %319, %307
  %321 = and i1 %318, %320
  br i1 %321, label %322, label %6330

322:                                              ; preds = %315
  %323 = bitcast i8* %1 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = sext i32 %324 to i64
  %326 = sub i64 %307, %325
  %327 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %328 = load i32, i32* %327, align 8
  %329 = add i32 %328, 1
  store i32 %329, i32* %327, align 8
  %330 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %331 = load i32, i32* %330, align 8
  %332 = add i32 %331, 1
  store i32 %332, i32* %330, align 8
  %333 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %334 = load i32, i32* %333, align 4
  %335 = icmp ugt i32 %329, %334
  br i1 %335, label %6330, label %336

336:                                              ; preds = %322
  %337 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %338 = load i32, i32* %337, align 4
  %339 = icmp ugt i32 %332, %338
  br i1 %339, label %6330, label %340

340:                                              ; preds = %336
  %341 = and i64 %326, 1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %347, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %345 = load i8, i8* %344, align 8, !range !5
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %347, label %6330

347:                                              ; preds = %343, %340
  %348 = add i64 %317, -2
  %349 = icmp ult i64 %348, %326
  br i1 %349, label %6330, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds i8, i8* %310, i64 %326
  %352 = bitcast i8* %351 to i16*
  %353 = load i16, i16* %352, align 2
  %354 = zext i16 %353 to i64
  %355 = and i64 %354, 1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %350
  %358 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %359 = load i8, i8* %358, align 8, !range !5
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %361, label %6330

361:                                              ; preds = %350, %357
  %362 = icmp ugt i64 %317, %354
  %363 = sub i64 %317, %354
  %364 = icmp uge i64 %363, %326
  %365 = and i1 %362, %364
  br i1 %365, label %366, label %6330

366:                                              ; preds = %361
  %367 = load i32, i32* %323, align 4
  %368 = sext i32 %367 to i64
  %369 = sub nsw i64 0, %368
  %370 = getelementptr inbounds %"struct.tflite::ConcatenationOptions", %"struct.tflite::ConcatenationOptions"* %301, i64 0, i32 0, i32 0, i64 %369
  %371 = bitcast i8* %370 to i16*
  %372 = load i16, i16* %371, align 2
  %373 = icmp ugt i16 %372, 4
  br i1 %373, label %374, label %395

374:                                              ; preds = %366
  %375 = getelementptr inbounds i8, i8* %370, i64 4
  %376 = bitcast i8* %375 to i16*
  %377 = load i16, i16* %376, align 2
  %378 = icmp eq i16 %377, 0
  br i1 %378, label %383, label %379

379:                                              ; preds = %374
  %380 = zext i16 %377 to i64
  %381 = add i64 %307, %380
  %382 = icmp ult i64 %319, %381
  br i1 %382, label %6330, label %383

383:                                              ; preds = %379, %374
  %384 = icmp ugt i16 %372, 6
  br i1 %384, label %385, label %395

385:                                              ; preds = %383
  %386 = getelementptr inbounds i8, i8* %370, i64 6
  %387 = bitcast i8* %386 to i16*
  %388 = load i16, i16* %387, align 2
  %389 = icmp eq i16 %388, 0
  br i1 %389, label %395, label %390

390:                                              ; preds = %385
  %391 = zext i16 %388 to i64
  %392 = add i64 %307, %391
  %393 = add i64 %317, -1
  %394 = icmp ult i64 %393, %392
  br i1 %394, label %6330, label %395

395:                                              ; preds = %390, %385, %383, %366
  store i32 %328, i32* %327, align 8
  br label %6330

396:                                              ; preds = %3
  %397 = bitcast i8* %1 to %"struct.tflite::AddOptions"*
  %398 = icmp eq i8* %1, null
  br i1 %398, label %6330, label %399

399:                                              ; preds = %396
  %400 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = ptrtoint i8* %1 to i64
  %403 = sub i64 %402, %401
  %404 = and i64 %403, 3
  %405 = icmp eq i64 %404, 0
  %406 = inttoptr i64 %401 to i8*
  br i1 %405, label %411, label %407

407:                                              ; preds = %399
  %408 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %409 = load i8, i8* %408, align 8, !range !5
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %411, label %6330

411:                                              ; preds = %407, %399
  %412 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = icmp ugt i64 %413, 4
  %415 = add i64 %413, -4
  %416 = icmp uge i64 %415, %403
  %417 = and i1 %414, %416
  br i1 %417, label %418, label %6330

418:                                              ; preds = %411
  %419 = bitcast i8* %1 to i32*
  %420 = load i32, i32* %419, align 4
  %421 = sext i32 %420 to i64
  %422 = sub i64 %403, %421
  %423 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %424 = load i32, i32* %423, align 8
  %425 = add i32 %424, 1
  store i32 %425, i32* %423, align 8
  %426 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %427 = load i32, i32* %426, align 8
  %428 = add i32 %427, 1
  store i32 %428, i32* %426, align 8
  %429 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %430 = load i32, i32* %429, align 4
  %431 = icmp ugt i32 %425, %430
  br i1 %431, label %6330, label %432

432:                                              ; preds = %418
  %433 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %434 = load i32, i32* %433, align 4
  %435 = icmp ugt i32 %428, %434
  br i1 %435, label %6330, label %436

436:                                              ; preds = %432
  %437 = and i64 %422, 1
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %443, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %441 = load i8, i8* %440, align 8, !range !5
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %443, label %6330

443:                                              ; preds = %439, %436
  %444 = add i64 %413, -2
  %445 = icmp ult i64 %444, %422
  br i1 %445, label %6330, label %446

446:                                              ; preds = %443
  %447 = getelementptr inbounds i8, i8* %406, i64 %422
  %448 = bitcast i8* %447 to i16*
  %449 = load i16, i16* %448, align 2
  %450 = zext i16 %449 to i64
  %451 = and i64 %450, 1
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %457, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %455 = load i8, i8* %454, align 8, !range !5
  %456 = icmp eq i8 %455, 0
  br i1 %456, label %457, label %6330

457:                                              ; preds = %446, %453
  %458 = icmp ugt i64 %413, %450
  %459 = sub i64 %413, %450
  %460 = icmp uge i64 %459, %422
  %461 = and i1 %458, %460
  br i1 %461, label %462, label %6330

462:                                              ; preds = %457
  %463 = load i32, i32* %419, align 4
  %464 = sext i32 %463 to i64
  %465 = sub nsw i64 0, %464
  %466 = getelementptr inbounds %"struct.tflite::AddOptions", %"struct.tflite::AddOptions"* %397, i64 0, i32 0, i32 0, i64 %465
  %467 = bitcast i8* %466 to i16*
  %468 = load i16, i16* %467, align 2
  %469 = icmp ugt i16 %468, 4
  br i1 %469, label %470, label %480

470:                                              ; preds = %462
  %471 = getelementptr inbounds i8, i8* %466, i64 4
  %472 = bitcast i8* %471 to i16*
  %473 = load i16, i16* %472, align 2
  %474 = icmp eq i16 %473, 0
  br i1 %474, label %480, label %475

475:                                              ; preds = %470
  %476 = zext i16 %473 to i64
  %477 = add i64 %403, %476
  %478 = add i64 %413, -1
  %479 = icmp ult i64 %478, %477
  br i1 %479, label %6330, label %480

480:                                              ; preds = %475, %470, %462
  store i32 %424, i32* %423, align 8
  br label %6330

481:                                              ; preds = %3
  %482 = bitcast i8* %1 to %"struct.tflite::L2NormOptions"*
  %483 = icmp eq i8* %1, null
  br i1 %483, label %6330, label %484

484:                                              ; preds = %481
  %485 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %486 = load i64, i64* %485, align 8
  %487 = ptrtoint i8* %1 to i64
  %488 = sub i64 %487, %486
  %489 = and i64 %488, 3
  %490 = icmp eq i64 %489, 0
  %491 = inttoptr i64 %486 to i8*
  br i1 %490, label %496, label %492

492:                                              ; preds = %484
  %493 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %494 = load i8, i8* %493, align 8, !range !5
  %495 = icmp eq i8 %494, 0
  br i1 %495, label %496, label %6330

496:                                              ; preds = %492, %484
  %497 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %498 = load i64, i64* %497, align 8
  %499 = icmp ugt i64 %498, 4
  %500 = add i64 %498, -4
  %501 = icmp uge i64 %500, %488
  %502 = and i1 %499, %501
  br i1 %502, label %503, label %6330

503:                                              ; preds = %496
  %504 = bitcast i8* %1 to i32*
  %505 = load i32, i32* %504, align 4
  %506 = sext i32 %505 to i64
  %507 = sub i64 %488, %506
  %508 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %509 = load i32, i32* %508, align 8
  %510 = add i32 %509, 1
  store i32 %510, i32* %508, align 8
  %511 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %512 = load i32, i32* %511, align 8
  %513 = add i32 %512, 1
  store i32 %513, i32* %511, align 8
  %514 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %515 = load i32, i32* %514, align 4
  %516 = icmp ugt i32 %510, %515
  br i1 %516, label %6330, label %517

517:                                              ; preds = %503
  %518 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %519 = load i32, i32* %518, align 4
  %520 = icmp ugt i32 %513, %519
  br i1 %520, label %6330, label %521

521:                                              ; preds = %517
  %522 = and i64 %507, 1
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %528, label %524

524:                                              ; preds = %521
  %525 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %526 = load i8, i8* %525, align 8, !range !5
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %528, label %6330

528:                                              ; preds = %524, %521
  %529 = add i64 %498, -2
  %530 = icmp ult i64 %529, %507
  br i1 %530, label %6330, label %531

531:                                              ; preds = %528
  %532 = getelementptr inbounds i8, i8* %491, i64 %507
  %533 = bitcast i8* %532 to i16*
  %534 = load i16, i16* %533, align 2
  %535 = zext i16 %534 to i64
  %536 = and i64 %535, 1
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %542, label %538

538:                                              ; preds = %531
  %539 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %540 = load i8, i8* %539, align 8, !range !5
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %542, label %6330

542:                                              ; preds = %531, %538
  %543 = icmp ugt i64 %498, %535
  %544 = sub i64 %498, %535
  %545 = icmp uge i64 %544, %507
  %546 = and i1 %543, %545
  br i1 %546, label %547, label %6330

547:                                              ; preds = %542
  %548 = load i32, i32* %504, align 4
  %549 = sext i32 %548 to i64
  %550 = sub nsw i64 0, %549
  %551 = getelementptr inbounds %"struct.tflite::L2NormOptions", %"struct.tflite::L2NormOptions"* %482, i64 0, i32 0, i32 0, i64 %550
  %552 = bitcast i8* %551 to i16*
  %553 = load i16, i16* %552, align 2
  %554 = icmp ugt i16 %553, 4
  br i1 %554, label %555, label %565

555:                                              ; preds = %547
  %556 = getelementptr inbounds i8, i8* %551, i64 4
  %557 = bitcast i8* %556 to i16*
  %558 = load i16, i16* %557, align 2
  %559 = icmp eq i16 %558, 0
  br i1 %559, label %565, label %560

560:                                              ; preds = %555
  %561 = zext i16 %558 to i64
  %562 = add i64 %488, %561
  %563 = add i64 %498, -1
  %564 = icmp ult i64 %563, %562
  br i1 %564, label %6330, label %565

565:                                              ; preds = %560, %555, %547
  store i32 %509, i32* %508, align 8
  br label %6330

566:                                              ; preds = %3
  %567 = icmp eq i8* %1, null
  br i1 %567, label %6330, label %568

568:                                              ; preds = %566
  %569 = bitcast i8* %1 to %"struct.tflite::LocalResponseNormalizationOptions"*
  %570 = tail call zeroext i1 @_ZNK6tflite33LocalResponseNormalizationOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::LocalResponseNormalizationOptions"* nonnull %569, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

571:                                              ; preds = %3
  %572 = icmp eq i8* %1, null
  br i1 %572, label %6330, label %573

573:                                              ; preds = %571
  %574 = bitcast i8* %1 to %"struct.tflite::LSTMOptions"*
  %575 = tail call zeroext i1 @_ZNK6tflite11LSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::LSTMOptions"* nonnull %574, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

576:                                              ; preds = %3
  %577 = bitcast i8* %1 to %"struct.tflite::ResizeBilinearOptions"*
  %578 = icmp eq i8* %1, null
  br i1 %578, label %6330, label %579

579:                                              ; preds = %576
  %580 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = ptrtoint i8* %1 to i64
  %583 = sub i64 %582, %581
  %584 = and i64 %583, 3
  %585 = icmp eq i64 %584, 0
  %586 = inttoptr i64 %581 to i8*
  br i1 %585, label %591, label %587

587:                                              ; preds = %579
  %588 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %589 = load i8, i8* %588, align 8, !range !5
  %590 = icmp eq i8 %589, 0
  br i1 %590, label %591, label %6330

591:                                              ; preds = %587, %579
  %592 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %593 = load i64, i64* %592, align 8
  %594 = icmp ugt i64 %593, 4
  %595 = add i64 %593, -4
  %596 = icmp uge i64 %595, %583
  %597 = and i1 %594, %596
  br i1 %597, label %598, label %6330

598:                                              ; preds = %591
  %599 = bitcast i8* %1 to i32*
  %600 = load i32, i32* %599, align 4
  %601 = sext i32 %600 to i64
  %602 = sub i64 %583, %601
  %603 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %604 = load i32, i32* %603, align 8
  %605 = add i32 %604, 1
  store i32 %605, i32* %603, align 8
  %606 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %607 = load i32, i32* %606, align 8
  %608 = add i32 %607, 1
  store i32 %608, i32* %606, align 8
  %609 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %610 = load i32, i32* %609, align 4
  %611 = icmp ugt i32 %605, %610
  br i1 %611, label %6330, label %612

612:                                              ; preds = %598
  %613 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %614 = load i32, i32* %613, align 4
  %615 = icmp ugt i32 %608, %614
  br i1 %615, label %6330, label %616

616:                                              ; preds = %612
  %617 = and i64 %602, 1
  %618 = icmp eq i64 %617, 0
  br i1 %618, label %623, label %619

619:                                              ; preds = %616
  %620 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %621 = load i8, i8* %620, align 8, !range !5
  %622 = icmp eq i8 %621, 0
  br i1 %622, label %623, label %6330

623:                                              ; preds = %619, %616
  %624 = add i64 %593, -2
  %625 = icmp ult i64 %624, %602
  br i1 %625, label %6330, label %626

626:                                              ; preds = %623
  %627 = getelementptr inbounds i8, i8* %586, i64 %602
  %628 = bitcast i8* %627 to i16*
  %629 = load i16, i16* %628, align 2
  %630 = zext i16 %629 to i64
  %631 = and i64 %630, 1
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %637, label %633

633:                                              ; preds = %626
  %634 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %635 = load i8, i8* %634, align 8, !range !5
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %637, label %6330

637:                                              ; preds = %626, %633
  %638 = icmp ugt i64 %593, %630
  %639 = sub i64 %593, %630
  %640 = icmp uge i64 %639, %602
  %641 = and i1 %638, %640
  br i1 %641, label %642, label %6330

642:                                              ; preds = %637
  %643 = load i32, i32* %599, align 4
  %644 = sext i32 %643 to i64
  %645 = sub nsw i64 0, %644
  %646 = getelementptr inbounds %"struct.tflite::ResizeBilinearOptions", %"struct.tflite::ResizeBilinearOptions"* %577, i64 0, i32 0, i32 0, i64 %645
  %647 = bitcast i8* %646 to i16*
  %648 = load i16, i16* %647, align 2
  %649 = icmp ugt i16 %648, 8
  br i1 %649, label %650, label %672

650:                                              ; preds = %642
  %651 = getelementptr inbounds i8, i8* %646, i64 8
  %652 = bitcast i8* %651 to i16*
  %653 = load i16, i16* %652, align 2
  %654 = icmp eq i16 %653, 0
  br i1 %654, label %660, label %655

655:                                              ; preds = %650
  %656 = zext i16 %653 to i64
  %657 = add i64 %583, %656
  %658 = add i64 %593, -1
  %659 = icmp ult i64 %658, %657
  br i1 %659, label %6330, label %660

660:                                              ; preds = %655, %650
  %661 = icmp ugt i16 %648, 10
  br i1 %661, label %662, label %672

662:                                              ; preds = %660
  %663 = getelementptr inbounds i8, i8* %646, i64 10
  %664 = bitcast i8* %663 to i16*
  %665 = load i16, i16* %664, align 2
  %666 = icmp eq i16 %665, 0
  br i1 %666, label %672, label %667

667:                                              ; preds = %662
  %668 = zext i16 %665 to i64
  %669 = add i64 %583, %668
  %670 = add i64 %593, -1
  %671 = icmp ult i64 %670, %669
  br i1 %671, label %6330, label %672

672:                                              ; preds = %667, %662, %660, %642
  store i32 %604, i32* %603, align 8
  br label %6330

673:                                              ; preds = %3
  %674 = bitcast i8* %1 to %"struct.tflite::CallOptions"*
  %675 = icmp eq i8* %1, null
  br i1 %675, label %6330, label %676

676:                                              ; preds = %673
  %677 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = ptrtoint i8* %1 to i64
  %680 = sub i64 %679, %678
  %681 = and i64 %680, 3
  %682 = icmp eq i64 %681, 0
  %683 = inttoptr i64 %678 to i8*
  br i1 %682, label %688, label %684

684:                                              ; preds = %676
  %685 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %686 = load i8, i8* %685, align 8, !range !5
  %687 = icmp eq i8 %686, 0
  br i1 %687, label %688, label %6330

688:                                              ; preds = %684, %676
  %689 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %690 = load i64, i64* %689, align 8
  %691 = icmp ugt i64 %690, 4
  %692 = add i64 %690, -4
  %693 = icmp uge i64 %692, %680
  %694 = and i1 %691, %693
  br i1 %694, label %695, label %6330

695:                                              ; preds = %688
  %696 = bitcast i8* %1 to i32*
  %697 = load i32, i32* %696, align 4
  %698 = sext i32 %697 to i64
  %699 = sub i64 %680, %698
  %700 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %701 = load i32, i32* %700, align 8
  %702 = add i32 %701, 1
  store i32 %702, i32* %700, align 8
  %703 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %704 = load i32, i32* %703, align 8
  %705 = add i32 %704, 1
  store i32 %705, i32* %703, align 8
  %706 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %707 = load i32, i32* %706, align 4
  %708 = icmp ugt i32 %702, %707
  br i1 %708, label %6330, label %709

709:                                              ; preds = %695
  %710 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %711 = load i32, i32* %710, align 4
  %712 = icmp ugt i32 %705, %711
  br i1 %712, label %6330, label %713

713:                                              ; preds = %709
  %714 = and i64 %699, 1
  %715 = icmp eq i64 %714, 0
  br i1 %715, label %720, label %716

716:                                              ; preds = %713
  %717 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %718 = load i8, i8* %717, align 8, !range !5
  %719 = icmp eq i8 %718, 0
  br i1 %719, label %720, label %6330

720:                                              ; preds = %716, %713
  %721 = add i64 %690, -2
  %722 = icmp ult i64 %721, %699
  br i1 %722, label %6330, label %723

723:                                              ; preds = %720
  %724 = getelementptr inbounds i8, i8* %683, i64 %699
  %725 = bitcast i8* %724 to i16*
  %726 = load i16, i16* %725, align 2
  %727 = zext i16 %726 to i64
  %728 = and i64 %727, 1
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %734, label %730

730:                                              ; preds = %723
  %731 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %732 = load i8, i8* %731, align 8, !range !5
  %733 = icmp eq i8 %732, 0
  br i1 %733, label %734, label %6330

734:                                              ; preds = %723, %730
  %735 = icmp ugt i64 %690, %727
  %736 = sub i64 %690, %727
  %737 = icmp uge i64 %736, %699
  %738 = and i1 %735, %737
  br i1 %738, label %739, label %6330

739:                                              ; preds = %734
  %740 = load i32, i32* %696, align 4
  %741 = sext i32 %740 to i64
  %742 = sub nsw i64 0, %741
  %743 = getelementptr inbounds %"struct.tflite::CallOptions", %"struct.tflite::CallOptions"* %674, i64 0, i32 0, i32 0, i64 %742
  %744 = bitcast i8* %743 to i16*
  %745 = load i16, i16* %744, align 2
  %746 = icmp ugt i16 %745, 4
  br i1 %746, label %747, label %756

747:                                              ; preds = %739
  %748 = getelementptr inbounds i8, i8* %743, i64 4
  %749 = bitcast i8* %748 to i16*
  %750 = load i16, i16* %749, align 2
  %751 = icmp eq i16 %750, 0
  br i1 %751, label %756, label %752

752:                                              ; preds = %747
  %753 = zext i16 %750 to i64
  %754 = add i64 %680, %753
  %755 = icmp ult i64 %692, %754
  br i1 %755, label %6330, label %756

756:                                              ; preds = %752, %747, %739
  store i32 %701, i32* %700, align 8
  br label %6330

757:                                              ; preds = %3
  %758 = icmp eq i8* %1, null
  br i1 %758, label %6330, label %759

759:                                              ; preds = %757
  %760 = bitcast i8* %1 to %"struct.tflite::ReshapeOptions"*
  %761 = tail call zeroext i1 @_ZNK6tflite14ReshapeOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::ReshapeOptions"* nonnull %760, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

762:                                              ; preds = %3
  %763 = icmp eq i8* %1, null
  br i1 %763, label %6330, label %764

764:                                              ; preds = %762
  %765 = bitcast i8* %1 to %"struct.tflite::SkipGramOptions"*
  %766 = tail call zeroext i1 @_ZNK6tflite15SkipGramOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SkipGramOptions"* nonnull %765, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

767:                                              ; preds = %3
  %768 = bitcast i8* %1 to %"struct.tflite::SpaceToDepthOptions"*
  %769 = icmp eq i8* %1, null
  br i1 %769, label %6330, label %770

770:                                              ; preds = %767
  %771 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = ptrtoint i8* %1 to i64
  %774 = sub i64 %773, %772
  %775 = and i64 %774, 3
  %776 = icmp eq i64 %775, 0
  %777 = inttoptr i64 %772 to i8*
  br i1 %776, label %782, label %778

778:                                              ; preds = %770
  %779 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %780 = load i8, i8* %779, align 8, !range !5
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %782, label %6330

782:                                              ; preds = %778, %770
  %783 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %784 = load i64, i64* %783, align 8
  %785 = icmp ugt i64 %784, 4
  %786 = add i64 %784, -4
  %787 = icmp uge i64 %786, %774
  %788 = and i1 %785, %787
  br i1 %788, label %789, label %6330

789:                                              ; preds = %782
  %790 = bitcast i8* %1 to i32*
  %791 = load i32, i32* %790, align 4
  %792 = sext i32 %791 to i64
  %793 = sub i64 %774, %792
  %794 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %795 = load i32, i32* %794, align 8
  %796 = add i32 %795, 1
  store i32 %796, i32* %794, align 8
  %797 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %798 = load i32, i32* %797, align 8
  %799 = add i32 %798, 1
  store i32 %799, i32* %797, align 8
  %800 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %801 = load i32, i32* %800, align 4
  %802 = icmp ugt i32 %796, %801
  br i1 %802, label %6330, label %803

803:                                              ; preds = %789
  %804 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %805 = load i32, i32* %804, align 4
  %806 = icmp ugt i32 %799, %805
  br i1 %806, label %6330, label %807

807:                                              ; preds = %803
  %808 = and i64 %793, 1
  %809 = icmp eq i64 %808, 0
  br i1 %809, label %814, label %810

810:                                              ; preds = %807
  %811 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %812 = load i8, i8* %811, align 8, !range !5
  %813 = icmp eq i8 %812, 0
  br i1 %813, label %814, label %6330

814:                                              ; preds = %810, %807
  %815 = add i64 %784, -2
  %816 = icmp ult i64 %815, %793
  br i1 %816, label %6330, label %817

817:                                              ; preds = %814
  %818 = getelementptr inbounds i8, i8* %777, i64 %793
  %819 = bitcast i8* %818 to i16*
  %820 = load i16, i16* %819, align 2
  %821 = zext i16 %820 to i64
  %822 = and i64 %821, 1
  %823 = icmp eq i64 %822, 0
  br i1 %823, label %828, label %824

824:                                              ; preds = %817
  %825 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %826 = load i8, i8* %825, align 8, !range !5
  %827 = icmp eq i8 %826, 0
  br i1 %827, label %828, label %6330

828:                                              ; preds = %817, %824
  %829 = icmp ugt i64 %784, %821
  %830 = sub i64 %784, %821
  %831 = icmp uge i64 %830, %793
  %832 = and i1 %829, %831
  br i1 %832, label %833, label %6330

833:                                              ; preds = %828
  %834 = load i32, i32* %790, align 4
  %835 = sext i32 %834 to i64
  %836 = sub nsw i64 0, %835
  %837 = getelementptr inbounds %"struct.tflite::SpaceToDepthOptions", %"struct.tflite::SpaceToDepthOptions"* %768, i64 0, i32 0, i32 0, i64 %836
  %838 = bitcast i8* %837 to i16*
  %839 = load i16, i16* %838, align 2
  %840 = icmp ugt i16 %839, 4
  br i1 %840, label %841, label %850

841:                                              ; preds = %833
  %842 = getelementptr inbounds i8, i8* %837, i64 4
  %843 = bitcast i8* %842 to i16*
  %844 = load i16, i16* %843, align 2
  %845 = icmp eq i16 %844, 0
  br i1 %845, label %850, label %846

846:                                              ; preds = %841
  %847 = zext i16 %844 to i64
  %848 = add i64 %774, %847
  %849 = icmp ult i64 %786, %848
  br i1 %849, label %6330, label %850

850:                                              ; preds = %846, %841, %833
  store i32 %795, i32* %794, align 8
  br label %6330

851:                                              ; preds = %3
  %852 = bitcast i8* %1 to %"struct.tflite::EmbeddingLookupSparseOptions"*
  %853 = icmp eq i8* %1, null
  br i1 %853, label %6330, label %854

854:                                              ; preds = %851
  %855 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %856 = load i64, i64* %855, align 8
  %857 = ptrtoint i8* %1 to i64
  %858 = sub i64 %857, %856
  %859 = and i64 %858, 3
  %860 = icmp eq i64 %859, 0
  %861 = inttoptr i64 %856 to i8*
  br i1 %860, label %866, label %862

862:                                              ; preds = %854
  %863 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %864 = load i8, i8* %863, align 8, !range !5
  %865 = icmp eq i8 %864, 0
  br i1 %865, label %866, label %6330

866:                                              ; preds = %862, %854
  %867 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %868 = load i64, i64* %867, align 8
  %869 = icmp ugt i64 %868, 4
  %870 = add i64 %868, -4
  %871 = icmp uge i64 %870, %858
  %872 = and i1 %869, %871
  br i1 %872, label %873, label %6330

873:                                              ; preds = %866
  %874 = bitcast i8* %1 to i32*
  %875 = load i32, i32* %874, align 4
  %876 = sext i32 %875 to i64
  %877 = sub i64 %858, %876
  %878 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %879 = load i32, i32* %878, align 8
  %880 = add i32 %879, 1
  store i32 %880, i32* %878, align 8
  %881 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %882 = load i32, i32* %881, align 8
  %883 = add i32 %882, 1
  store i32 %883, i32* %881, align 8
  %884 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %885 = load i32, i32* %884, align 4
  %886 = icmp ugt i32 %880, %885
  br i1 %886, label %6330, label %887

887:                                              ; preds = %873
  %888 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %889 = load i32, i32* %888, align 4
  %890 = icmp ugt i32 %883, %889
  br i1 %890, label %6330, label %891

891:                                              ; preds = %887
  %892 = and i64 %877, 1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %898, label %894

894:                                              ; preds = %891
  %895 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %896 = load i8, i8* %895, align 8, !range !5
  %897 = icmp eq i8 %896, 0
  br i1 %897, label %898, label %6330

898:                                              ; preds = %894, %891
  %899 = add i64 %868, -2
  %900 = icmp ult i64 %899, %877
  br i1 %900, label %6330, label %901

901:                                              ; preds = %898
  %902 = getelementptr inbounds i8, i8* %861, i64 %877
  %903 = bitcast i8* %902 to i16*
  %904 = load i16, i16* %903, align 2
  %905 = zext i16 %904 to i64
  %906 = and i64 %905, 1
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %912, label %908

908:                                              ; preds = %901
  %909 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %910 = load i8, i8* %909, align 8, !range !5
  %911 = icmp eq i8 %910, 0
  br i1 %911, label %912, label %6330

912:                                              ; preds = %901, %908
  %913 = icmp ugt i64 %868, %905
  %914 = sub i64 %868, %905
  %915 = icmp uge i64 %914, %877
  %916 = and i1 %913, %915
  br i1 %916, label %917, label %6330

917:                                              ; preds = %912
  %918 = load i32, i32* %874, align 4
  %919 = sext i32 %918 to i64
  %920 = sub nsw i64 0, %919
  %921 = getelementptr inbounds %"struct.tflite::EmbeddingLookupSparseOptions", %"struct.tflite::EmbeddingLookupSparseOptions"* %852, i64 0, i32 0, i32 0, i64 %920
  %922 = bitcast i8* %921 to i16*
  %923 = load i16, i16* %922, align 2
  %924 = icmp ugt i16 %923, 4
  br i1 %924, label %925, label %935

925:                                              ; preds = %917
  %926 = getelementptr inbounds i8, i8* %921, i64 4
  %927 = bitcast i8* %926 to i16*
  %928 = load i16, i16* %927, align 2
  %929 = icmp eq i16 %928, 0
  br i1 %929, label %935, label %930

930:                                              ; preds = %925
  %931 = zext i16 %928 to i64
  %932 = add i64 %858, %931
  %933 = add i64 %868, -1
  %934 = icmp ult i64 %933, %932
  br i1 %934, label %6330, label %935

935:                                              ; preds = %930, %925, %917
  store i32 %879, i32* %878, align 8
  br label %6330

936:                                              ; preds = %3
  %937 = bitcast i8* %1 to %"struct.tflite::MulOptions"*
  %938 = icmp eq i8* %1, null
  br i1 %938, label %6330, label %939

939:                                              ; preds = %936
  %940 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %941 = load i64, i64* %940, align 8
  %942 = ptrtoint i8* %1 to i64
  %943 = sub i64 %942, %941
  %944 = and i64 %943, 3
  %945 = icmp eq i64 %944, 0
  %946 = inttoptr i64 %941 to i8*
  br i1 %945, label %951, label %947

947:                                              ; preds = %939
  %948 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %949 = load i8, i8* %948, align 8, !range !5
  %950 = icmp eq i8 %949, 0
  br i1 %950, label %951, label %6330

951:                                              ; preds = %947, %939
  %952 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %953 = load i64, i64* %952, align 8
  %954 = icmp ugt i64 %953, 4
  %955 = add i64 %953, -4
  %956 = icmp uge i64 %955, %943
  %957 = and i1 %954, %956
  br i1 %957, label %958, label %6330

958:                                              ; preds = %951
  %959 = bitcast i8* %1 to i32*
  %960 = load i32, i32* %959, align 4
  %961 = sext i32 %960 to i64
  %962 = sub i64 %943, %961
  %963 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %964 = load i32, i32* %963, align 8
  %965 = add i32 %964, 1
  store i32 %965, i32* %963, align 8
  %966 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %967 = load i32, i32* %966, align 8
  %968 = add i32 %967, 1
  store i32 %968, i32* %966, align 8
  %969 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %970 = load i32, i32* %969, align 4
  %971 = icmp ugt i32 %965, %970
  br i1 %971, label %6330, label %972

972:                                              ; preds = %958
  %973 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %974 = load i32, i32* %973, align 4
  %975 = icmp ugt i32 %968, %974
  br i1 %975, label %6330, label %976

976:                                              ; preds = %972
  %977 = and i64 %962, 1
  %978 = icmp eq i64 %977, 0
  br i1 %978, label %983, label %979

979:                                              ; preds = %976
  %980 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %981 = load i8, i8* %980, align 8, !range !5
  %982 = icmp eq i8 %981, 0
  br i1 %982, label %983, label %6330

983:                                              ; preds = %979, %976
  %984 = add i64 %953, -2
  %985 = icmp ult i64 %984, %962
  br i1 %985, label %6330, label %986

986:                                              ; preds = %983
  %987 = getelementptr inbounds i8, i8* %946, i64 %962
  %988 = bitcast i8* %987 to i16*
  %989 = load i16, i16* %988, align 2
  %990 = zext i16 %989 to i64
  %991 = and i64 %990, 1
  %992 = icmp eq i64 %991, 0
  br i1 %992, label %997, label %993

993:                                              ; preds = %986
  %994 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %995 = load i8, i8* %994, align 8, !range !5
  %996 = icmp eq i8 %995, 0
  br i1 %996, label %997, label %6330

997:                                              ; preds = %986, %993
  %998 = icmp ugt i64 %953, %990
  %999 = sub i64 %953, %990
  %1000 = icmp uge i64 %999, %962
  %1001 = and i1 %998, %1000
  br i1 %1001, label %1002, label %6330

1002:                                             ; preds = %997
  %1003 = load i32, i32* %959, align 4
  %1004 = sext i32 %1003 to i64
  %1005 = sub nsw i64 0, %1004
  %1006 = getelementptr inbounds %"struct.tflite::MulOptions", %"struct.tflite::MulOptions"* %937, i64 0, i32 0, i32 0, i64 %1005
  %1007 = bitcast i8* %1006 to i16*
  %1008 = load i16, i16* %1007, align 2
  %1009 = icmp ugt i16 %1008, 4
  br i1 %1009, label %1010, label %1020

1010:                                             ; preds = %1002
  %1011 = getelementptr inbounds i8, i8* %1006, i64 4
  %1012 = bitcast i8* %1011 to i16*
  %1013 = load i16, i16* %1012, align 2
  %1014 = icmp eq i16 %1013, 0
  br i1 %1014, label %1020, label %1015

1015:                                             ; preds = %1010
  %1016 = zext i16 %1013 to i64
  %1017 = add i64 %943, %1016
  %1018 = add i64 %953, -1
  %1019 = icmp ult i64 %1018, %1017
  br i1 %1019, label %6330, label %1020

1020:                                             ; preds = %1015, %1010, %1002
  store i32 %964, i32* %963, align 8
  br label %6330

1021:                                             ; preds = %3
  %1022 = icmp eq i8* %1, null
  br i1 %1022, label %6330, label %1023

1023:                                             ; preds = %1021
  %1024 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = ptrtoint i8* %1 to i64
  %1027 = sub i64 %1026, %1025
  %1028 = and i64 %1027, 3
  %1029 = icmp eq i64 %1028, 0
  %1030 = inttoptr i64 %1025 to i8*
  br i1 %1029, label %1035, label %1031

1031:                                             ; preds = %1023
  %1032 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1033 = load i8, i8* %1032, align 8, !range !5
  %1034 = icmp eq i8 %1033, 0
  br i1 %1034, label %1035, label %6330

1035:                                             ; preds = %1031, %1023
  %1036 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1037 = load i64, i64* %1036, align 8
  %1038 = icmp ugt i64 %1037, 4
  %1039 = add i64 %1037, -4
  %1040 = icmp uge i64 %1039, %1027
  %1041 = and i1 %1038, %1040
  br i1 %1041, label %1042, label %6330

1042:                                             ; preds = %1035
  %1043 = bitcast i8* %1 to i32*
  %1044 = load i32, i32* %1043, align 4
  %1045 = sext i32 %1044 to i64
  %1046 = sub i64 %1027, %1045
  %1047 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1048 = load i32, i32* %1047, align 8
  %1049 = add i32 %1048, 1
  store i32 %1049, i32* %1047, align 8
  %1050 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1051 = load i32, i32* %1050, align 8
  %1052 = add i32 %1051, 1
  store i32 %1052, i32* %1050, align 8
  %1053 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1054 = load i32, i32* %1053, align 4
  %1055 = icmp ugt i32 %1049, %1054
  br i1 %1055, label %6330, label %1056

1056:                                             ; preds = %1042
  %1057 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1058 = load i32, i32* %1057, align 4
  %1059 = icmp ugt i32 %1052, %1058
  br i1 %1059, label %6330, label %1060

1060:                                             ; preds = %1056
  %1061 = and i64 %1046, 1
  %1062 = icmp eq i64 %1061, 0
  br i1 %1062, label %1067, label %1063

1063:                                             ; preds = %1060
  %1064 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1065 = load i8, i8* %1064, align 8, !range !5
  %1066 = icmp eq i8 %1065, 0
  br i1 %1066, label %1067, label %6330

1067:                                             ; preds = %1063, %1060
  %1068 = add i64 %1037, -2
  %1069 = icmp ult i64 %1068, %1046
  br i1 %1069, label %6330, label %1070

1070:                                             ; preds = %1067
  %1071 = getelementptr inbounds i8, i8* %1030, i64 %1046
  %1072 = bitcast i8* %1071 to i16*
  %1073 = load i16, i16* %1072, align 2
  %1074 = zext i16 %1073 to i64
  %1075 = and i64 %1074, 1
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1081, label %1077

1077:                                             ; preds = %1070
  %1078 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1079 = load i8, i8* %1078, align 8, !range !5
  %1080 = icmp eq i8 %1079, 0
  br i1 %1080, label %1081, label %6330

1081:                                             ; preds = %1077, %1070
  %1082 = icmp ugt i64 %1037, %1074
  %1083 = sub i64 %1037, %1074
  %1084 = icmp uge i64 %1083, %1046
  %1085 = and i1 %1082, %1084
  br i1 %1085, label %1086, label %6330

1086:                                             ; preds = %1081
  store i32 %1048, i32* %1047, align 8
  br label %6330

1087:                                             ; preds = %3
  %1088 = bitcast i8* %1 to %"struct.tflite::GatherOptions"*
  %1089 = icmp eq i8* %1, null
  br i1 %1089, label %6330, label %1090

1090:                                             ; preds = %1087
  %1091 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1092 = load i64, i64* %1091, align 8
  %1093 = ptrtoint i8* %1 to i64
  %1094 = sub i64 %1093, %1092
  %1095 = and i64 %1094, 3
  %1096 = icmp eq i64 %1095, 0
  %1097 = inttoptr i64 %1092 to i8*
  br i1 %1096, label %1102, label %1098

1098:                                             ; preds = %1090
  %1099 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1100 = load i8, i8* %1099, align 8, !range !5
  %1101 = icmp eq i8 %1100, 0
  br i1 %1101, label %1102, label %6330

1102:                                             ; preds = %1098, %1090
  %1103 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1104 = load i64, i64* %1103, align 8
  %1105 = icmp ugt i64 %1104, 4
  %1106 = add i64 %1104, -4
  %1107 = icmp uge i64 %1106, %1094
  %1108 = and i1 %1105, %1107
  br i1 %1108, label %1109, label %6330

1109:                                             ; preds = %1102
  %1110 = bitcast i8* %1 to i32*
  %1111 = load i32, i32* %1110, align 4
  %1112 = sext i32 %1111 to i64
  %1113 = sub i64 %1094, %1112
  %1114 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1115 = load i32, i32* %1114, align 8
  %1116 = add i32 %1115, 1
  store i32 %1116, i32* %1114, align 8
  %1117 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1118 = load i32, i32* %1117, align 8
  %1119 = add i32 %1118, 1
  store i32 %1119, i32* %1117, align 8
  %1120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1121 = load i32, i32* %1120, align 4
  %1122 = icmp ugt i32 %1116, %1121
  br i1 %1122, label %6330, label %1123

1123:                                             ; preds = %1109
  %1124 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1125 = load i32, i32* %1124, align 4
  %1126 = icmp ugt i32 %1119, %1125
  br i1 %1126, label %6330, label %1127

1127:                                             ; preds = %1123
  %1128 = and i64 %1113, 1
  %1129 = icmp eq i64 %1128, 0
  br i1 %1129, label %1134, label %1130

1130:                                             ; preds = %1127
  %1131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1132 = load i8, i8* %1131, align 8, !range !5
  %1133 = icmp eq i8 %1132, 0
  br i1 %1133, label %1134, label %6330

1134:                                             ; preds = %1130, %1127
  %1135 = add i64 %1104, -2
  %1136 = icmp ult i64 %1135, %1113
  br i1 %1136, label %6330, label %1137

1137:                                             ; preds = %1134
  %1138 = getelementptr inbounds i8, i8* %1097, i64 %1113
  %1139 = bitcast i8* %1138 to i16*
  %1140 = load i16, i16* %1139, align 2
  %1141 = zext i16 %1140 to i64
  %1142 = and i64 %1141, 1
  %1143 = icmp eq i64 %1142, 0
  br i1 %1143, label %1148, label %1144

1144:                                             ; preds = %1137
  %1145 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1146 = load i8, i8* %1145, align 8, !range !5
  %1147 = icmp eq i8 %1146, 0
  br i1 %1147, label %1148, label %6330

1148:                                             ; preds = %1137, %1144
  %1149 = icmp ugt i64 %1104, %1141
  %1150 = sub i64 %1104, %1141
  %1151 = icmp uge i64 %1150, %1113
  %1152 = and i1 %1149, %1151
  br i1 %1152, label %1153, label %6330

1153:                                             ; preds = %1148
  %1154 = load i32, i32* %1110, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = sub nsw i64 0, %1155
  %1157 = getelementptr inbounds %"struct.tflite::GatherOptions", %"struct.tflite::GatherOptions"* %1088, i64 0, i32 0, i32 0, i64 %1156
  %1158 = bitcast i8* %1157 to i16*
  %1159 = load i16, i16* %1158, align 2
  %1160 = icmp ugt i16 %1159, 4
  br i1 %1160, label %1161, label %1170

1161:                                             ; preds = %1153
  %1162 = getelementptr inbounds i8, i8* %1157, i64 4
  %1163 = bitcast i8* %1162 to i16*
  %1164 = load i16, i16* %1163, align 2
  %1165 = icmp eq i16 %1164, 0
  br i1 %1165, label %1170, label %1166

1166:                                             ; preds = %1161
  %1167 = zext i16 %1164 to i64
  %1168 = add i64 %1094, %1167
  %1169 = icmp ult i64 %1106, %1168
  br i1 %1169, label %6330, label %1170

1170:                                             ; preds = %1166, %1161, %1153
  store i32 %1115, i32* %1114, align 8
  br label %6330

1171:                                             ; preds = %3
  %1172 = icmp eq i8* %1, null
  br i1 %1172, label %6330, label %1173

1173:                                             ; preds = %1171
  %1174 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1175 = load i64, i64* %1174, align 8
  %1176 = ptrtoint i8* %1 to i64
  %1177 = sub i64 %1176, %1175
  %1178 = and i64 %1177, 3
  %1179 = icmp eq i64 %1178, 0
  %1180 = inttoptr i64 %1175 to i8*
  br i1 %1179, label %1185, label %1181

1181:                                             ; preds = %1173
  %1182 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1183 = load i8, i8* %1182, align 8, !range !5
  %1184 = icmp eq i8 %1183, 0
  br i1 %1184, label %1185, label %6330

1185:                                             ; preds = %1181, %1173
  %1186 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1187 = load i64, i64* %1186, align 8
  %1188 = icmp ugt i64 %1187, 4
  %1189 = add i64 %1187, -4
  %1190 = icmp uge i64 %1189, %1177
  %1191 = and i1 %1188, %1190
  br i1 %1191, label %1192, label %6330

1192:                                             ; preds = %1185
  %1193 = bitcast i8* %1 to i32*
  %1194 = load i32, i32* %1193, align 4
  %1195 = sext i32 %1194 to i64
  %1196 = sub i64 %1177, %1195
  %1197 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1198 = load i32, i32* %1197, align 8
  %1199 = add i32 %1198, 1
  store i32 %1199, i32* %1197, align 8
  %1200 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1201 = load i32, i32* %1200, align 8
  %1202 = add i32 %1201, 1
  store i32 %1202, i32* %1200, align 8
  %1203 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1204 = load i32, i32* %1203, align 4
  %1205 = icmp ugt i32 %1199, %1204
  br i1 %1205, label %6330, label %1206

1206:                                             ; preds = %1192
  %1207 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1208 = load i32, i32* %1207, align 4
  %1209 = icmp ugt i32 %1202, %1208
  br i1 %1209, label %6330, label %1210

1210:                                             ; preds = %1206
  %1211 = and i64 %1196, 1
  %1212 = icmp eq i64 %1211, 0
  br i1 %1212, label %1217, label %1213

1213:                                             ; preds = %1210
  %1214 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1215 = load i8, i8* %1214, align 8, !range !5
  %1216 = icmp eq i8 %1215, 0
  br i1 %1216, label %1217, label %6330

1217:                                             ; preds = %1213, %1210
  %1218 = add i64 %1187, -2
  %1219 = icmp ult i64 %1218, %1196
  br i1 %1219, label %6330, label %1220

1220:                                             ; preds = %1217
  %1221 = getelementptr inbounds i8, i8* %1180, i64 %1196
  %1222 = bitcast i8* %1221 to i16*
  %1223 = load i16, i16* %1222, align 2
  %1224 = zext i16 %1223 to i64
  %1225 = and i64 %1224, 1
  %1226 = icmp eq i64 %1225, 0
  br i1 %1226, label %1231, label %1227

1227:                                             ; preds = %1220
  %1228 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1229 = load i8, i8* %1228, align 8, !range !5
  %1230 = icmp eq i8 %1229, 0
  br i1 %1230, label %1231, label %6330

1231:                                             ; preds = %1227, %1220
  %1232 = icmp ugt i64 %1187, %1224
  %1233 = sub i64 %1187, %1224
  %1234 = icmp uge i64 %1233, %1196
  %1235 = and i1 %1232, %1234
  br i1 %1235, label %1236, label %6330

1236:                                             ; preds = %1231
  store i32 %1198, i32* %1197, align 8
  br label %6330

1237:                                             ; preds = %3
  %1238 = icmp eq i8* %1, null
  br i1 %1238, label %6330, label %1239

1239:                                             ; preds = %1237
  %1240 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1241 = load i64, i64* %1240, align 8
  %1242 = ptrtoint i8* %1 to i64
  %1243 = sub i64 %1242, %1241
  %1244 = and i64 %1243, 3
  %1245 = icmp eq i64 %1244, 0
  %1246 = inttoptr i64 %1241 to i8*
  br i1 %1245, label %1251, label %1247

1247:                                             ; preds = %1239
  %1248 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1249 = load i8, i8* %1248, align 8, !range !5
  %1250 = icmp eq i8 %1249, 0
  br i1 %1250, label %1251, label %6330

1251:                                             ; preds = %1247, %1239
  %1252 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1253 = load i64, i64* %1252, align 8
  %1254 = icmp ugt i64 %1253, 4
  %1255 = add i64 %1253, -4
  %1256 = icmp uge i64 %1255, %1243
  %1257 = and i1 %1254, %1256
  br i1 %1257, label %1258, label %6330

1258:                                             ; preds = %1251
  %1259 = bitcast i8* %1 to i32*
  %1260 = load i32, i32* %1259, align 4
  %1261 = sext i32 %1260 to i64
  %1262 = sub i64 %1243, %1261
  %1263 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1264 = load i32, i32* %1263, align 8
  %1265 = add i32 %1264, 1
  store i32 %1265, i32* %1263, align 8
  %1266 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1267 = load i32, i32* %1266, align 8
  %1268 = add i32 %1267, 1
  store i32 %1268, i32* %1266, align 8
  %1269 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1270 = load i32, i32* %1269, align 4
  %1271 = icmp ugt i32 %1265, %1270
  br i1 %1271, label %6330, label %1272

1272:                                             ; preds = %1258
  %1273 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1274 = load i32, i32* %1273, align 4
  %1275 = icmp ugt i32 %1268, %1274
  br i1 %1275, label %6330, label %1276

1276:                                             ; preds = %1272
  %1277 = and i64 %1262, 1
  %1278 = icmp eq i64 %1277, 0
  br i1 %1278, label %1283, label %1279

1279:                                             ; preds = %1276
  %1280 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1281 = load i8, i8* %1280, align 8, !range !5
  %1282 = icmp eq i8 %1281, 0
  br i1 %1282, label %1283, label %6330

1283:                                             ; preds = %1279, %1276
  %1284 = add i64 %1253, -2
  %1285 = icmp ult i64 %1284, %1262
  br i1 %1285, label %6330, label %1286

1286:                                             ; preds = %1283
  %1287 = getelementptr inbounds i8, i8* %1246, i64 %1262
  %1288 = bitcast i8* %1287 to i16*
  %1289 = load i16, i16* %1288, align 2
  %1290 = zext i16 %1289 to i64
  %1291 = and i64 %1290, 1
  %1292 = icmp eq i64 %1291, 0
  br i1 %1292, label %1297, label %1293

1293:                                             ; preds = %1286
  %1294 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1295 = load i8, i8* %1294, align 8, !range !5
  %1296 = icmp eq i8 %1295, 0
  br i1 %1296, label %1297, label %6330

1297:                                             ; preds = %1293, %1286
  %1298 = icmp ugt i64 %1253, %1290
  %1299 = sub i64 %1253, %1290
  %1300 = icmp uge i64 %1299, %1262
  %1301 = and i1 %1298, %1300
  br i1 %1301, label %1302, label %6330

1302:                                             ; preds = %1297
  store i32 %1264, i32* %1263, align 8
  br label %6330

1303:                                             ; preds = %3
  %1304 = icmp eq i8* %1, null
  br i1 %1304, label %6330, label %1305

1305:                                             ; preds = %1303
  %1306 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1307 = load i64, i64* %1306, align 8
  %1308 = ptrtoint i8* %1 to i64
  %1309 = sub i64 %1308, %1307
  %1310 = and i64 %1309, 3
  %1311 = icmp eq i64 %1310, 0
  %1312 = inttoptr i64 %1307 to i8*
  br i1 %1311, label %1317, label %1313

1313:                                             ; preds = %1305
  %1314 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1315 = load i8, i8* %1314, align 8, !range !5
  %1316 = icmp eq i8 %1315, 0
  br i1 %1316, label %1317, label %6330

1317:                                             ; preds = %1313, %1305
  %1318 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1319 = load i64, i64* %1318, align 8
  %1320 = icmp ugt i64 %1319, 4
  %1321 = add i64 %1319, -4
  %1322 = icmp uge i64 %1321, %1309
  %1323 = and i1 %1320, %1322
  br i1 %1323, label %1324, label %6330

1324:                                             ; preds = %1317
  %1325 = bitcast i8* %1 to i32*
  %1326 = load i32, i32* %1325, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = sub i64 %1309, %1327
  %1329 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1330 = load i32, i32* %1329, align 8
  %1331 = add i32 %1330, 1
  store i32 %1331, i32* %1329, align 8
  %1332 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1333 = load i32, i32* %1332, align 8
  %1334 = add i32 %1333, 1
  store i32 %1334, i32* %1332, align 8
  %1335 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1336 = load i32, i32* %1335, align 4
  %1337 = icmp ugt i32 %1331, %1336
  br i1 %1337, label %6330, label %1338

1338:                                             ; preds = %1324
  %1339 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1340 = load i32, i32* %1339, align 4
  %1341 = icmp ugt i32 %1334, %1340
  br i1 %1341, label %6330, label %1342

1342:                                             ; preds = %1338
  %1343 = and i64 %1328, 1
  %1344 = icmp eq i64 %1343, 0
  br i1 %1344, label %1349, label %1345

1345:                                             ; preds = %1342
  %1346 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1347 = load i8, i8* %1346, align 8, !range !5
  %1348 = icmp eq i8 %1347, 0
  br i1 %1348, label %1349, label %6330

1349:                                             ; preds = %1345, %1342
  %1350 = add i64 %1319, -2
  %1351 = icmp ult i64 %1350, %1328
  br i1 %1351, label %6330, label %1352

1352:                                             ; preds = %1349
  %1353 = getelementptr inbounds i8, i8* %1312, i64 %1328
  %1354 = bitcast i8* %1353 to i16*
  %1355 = load i16, i16* %1354, align 2
  %1356 = zext i16 %1355 to i64
  %1357 = and i64 %1356, 1
  %1358 = icmp eq i64 %1357, 0
  br i1 %1358, label %1363, label %1359

1359:                                             ; preds = %1352
  %1360 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1361 = load i8, i8* %1360, align 8, !range !5
  %1362 = icmp eq i8 %1361, 0
  br i1 %1362, label %1363, label %6330

1363:                                             ; preds = %1359, %1352
  %1364 = icmp ugt i64 %1319, %1356
  %1365 = sub i64 %1319, %1356
  %1366 = icmp uge i64 %1365, %1328
  %1367 = and i1 %1364, %1366
  br i1 %1367, label %1368, label %6330

1368:                                             ; preds = %1363
  store i32 %1330, i32* %1329, align 8
  br label %6330

1369:                                             ; preds = %3
  %1370 = bitcast i8* %1 to %"struct.tflite::ReducerOptions"*
  %1371 = icmp eq i8* %1, null
  br i1 %1371, label %6330, label %1372

1372:                                             ; preds = %1369
  %1373 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1374 = load i64, i64* %1373, align 8
  %1375 = ptrtoint i8* %1 to i64
  %1376 = sub i64 %1375, %1374
  %1377 = and i64 %1376, 3
  %1378 = icmp eq i64 %1377, 0
  %1379 = inttoptr i64 %1374 to i8*
  br i1 %1378, label %1384, label %1380

1380:                                             ; preds = %1372
  %1381 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1382 = load i8, i8* %1381, align 8, !range !5
  %1383 = icmp eq i8 %1382, 0
  br i1 %1383, label %1384, label %6330

1384:                                             ; preds = %1380, %1372
  %1385 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1386 = load i64, i64* %1385, align 8
  %1387 = icmp ugt i64 %1386, 4
  %1388 = add i64 %1386, -4
  %1389 = icmp uge i64 %1388, %1376
  %1390 = and i1 %1387, %1389
  br i1 %1390, label %1391, label %6330

1391:                                             ; preds = %1384
  %1392 = bitcast i8* %1 to i32*
  %1393 = load i32, i32* %1392, align 4
  %1394 = sext i32 %1393 to i64
  %1395 = sub i64 %1376, %1394
  %1396 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1397 = load i32, i32* %1396, align 8
  %1398 = add i32 %1397, 1
  store i32 %1398, i32* %1396, align 8
  %1399 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1400 = load i32, i32* %1399, align 8
  %1401 = add i32 %1400, 1
  store i32 %1401, i32* %1399, align 8
  %1402 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1403 = load i32, i32* %1402, align 4
  %1404 = icmp ugt i32 %1398, %1403
  br i1 %1404, label %6330, label %1405

1405:                                             ; preds = %1391
  %1406 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1407 = load i32, i32* %1406, align 4
  %1408 = icmp ugt i32 %1401, %1407
  br i1 %1408, label %6330, label %1409

1409:                                             ; preds = %1405
  %1410 = and i64 %1395, 1
  %1411 = icmp eq i64 %1410, 0
  br i1 %1411, label %1416, label %1412

1412:                                             ; preds = %1409
  %1413 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1414 = load i8, i8* %1413, align 8, !range !5
  %1415 = icmp eq i8 %1414, 0
  br i1 %1415, label %1416, label %6330

1416:                                             ; preds = %1412, %1409
  %1417 = add i64 %1386, -2
  %1418 = icmp ult i64 %1417, %1395
  br i1 %1418, label %6330, label %1419

1419:                                             ; preds = %1416
  %1420 = getelementptr inbounds i8, i8* %1379, i64 %1395
  %1421 = bitcast i8* %1420 to i16*
  %1422 = load i16, i16* %1421, align 2
  %1423 = zext i16 %1422 to i64
  %1424 = and i64 %1423, 1
  %1425 = icmp eq i64 %1424, 0
  br i1 %1425, label %1430, label %1426

1426:                                             ; preds = %1419
  %1427 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1428 = load i8, i8* %1427, align 8, !range !5
  %1429 = icmp eq i8 %1428, 0
  br i1 %1429, label %1430, label %6330

1430:                                             ; preds = %1419, %1426
  %1431 = icmp ugt i64 %1386, %1423
  %1432 = sub i64 %1386, %1423
  %1433 = icmp uge i64 %1432, %1395
  %1434 = and i1 %1431, %1433
  br i1 %1434, label %1435, label %6330

1435:                                             ; preds = %1430
  %1436 = load i32, i32* %1392, align 4
  %1437 = sext i32 %1436 to i64
  %1438 = sub nsw i64 0, %1437
  %1439 = getelementptr inbounds %"struct.tflite::ReducerOptions", %"struct.tflite::ReducerOptions"* %1370, i64 0, i32 0, i32 0, i64 %1438
  %1440 = bitcast i8* %1439 to i16*
  %1441 = load i16, i16* %1440, align 2
  %1442 = icmp ugt i16 %1441, 4
  br i1 %1442, label %1443, label %1453

1443:                                             ; preds = %1435
  %1444 = getelementptr inbounds i8, i8* %1439, i64 4
  %1445 = bitcast i8* %1444 to i16*
  %1446 = load i16, i16* %1445, align 2
  %1447 = icmp eq i16 %1446, 0
  br i1 %1447, label %1453, label %1448

1448:                                             ; preds = %1443
  %1449 = zext i16 %1446 to i64
  %1450 = add i64 %1376, %1449
  %1451 = add i64 %1386, -1
  %1452 = icmp ult i64 %1451, %1450
  br i1 %1452, label %6330, label %1453

1453:                                             ; preds = %1448, %1443, %1435
  store i32 %1397, i32* %1396, align 8
  br label %6330

1454:                                             ; preds = %3
  %1455 = bitcast i8* %1 to %"struct.tflite::SubOptions"*
  %1456 = icmp eq i8* %1, null
  br i1 %1456, label %6330, label %1457

1457:                                             ; preds = %1454
  %1458 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1459 = load i64, i64* %1458, align 8
  %1460 = ptrtoint i8* %1 to i64
  %1461 = sub i64 %1460, %1459
  %1462 = and i64 %1461, 3
  %1463 = icmp eq i64 %1462, 0
  %1464 = inttoptr i64 %1459 to i8*
  br i1 %1463, label %1469, label %1465

1465:                                             ; preds = %1457
  %1466 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1467 = load i8, i8* %1466, align 8, !range !5
  %1468 = icmp eq i8 %1467, 0
  br i1 %1468, label %1469, label %6330

1469:                                             ; preds = %1465, %1457
  %1470 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1471 = load i64, i64* %1470, align 8
  %1472 = icmp ugt i64 %1471, 4
  %1473 = add i64 %1471, -4
  %1474 = icmp uge i64 %1473, %1461
  %1475 = and i1 %1472, %1474
  br i1 %1475, label %1476, label %6330

1476:                                             ; preds = %1469
  %1477 = bitcast i8* %1 to i32*
  %1478 = load i32, i32* %1477, align 4
  %1479 = sext i32 %1478 to i64
  %1480 = sub i64 %1461, %1479
  %1481 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1482 = load i32, i32* %1481, align 8
  %1483 = add i32 %1482, 1
  store i32 %1483, i32* %1481, align 8
  %1484 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1485 = load i32, i32* %1484, align 8
  %1486 = add i32 %1485, 1
  store i32 %1486, i32* %1484, align 8
  %1487 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1488 = load i32, i32* %1487, align 4
  %1489 = icmp ugt i32 %1483, %1488
  br i1 %1489, label %6330, label %1490

1490:                                             ; preds = %1476
  %1491 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1492 = load i32, i32* %1491, align 4
  %1493 = icmp ugt i32 %1486, %1492
  br i1 %1493, label %6330, label %1494

1494:                                             ; preds = %1490
  %1495 = and i64 %1480, 1
  %1496 = icmp eq i64 %1495, 0
  br i1 %1496, label %1501, label %1497

1497:                                             ; preds = %1494
  %1498 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1499 = load i8, i8* %1498, align 8, !range !5
  %1500 = icmp eq i8 %1499, 0
  br i1 %1500, label %1501, label %6330

1501:                                             ; preds = %1497, %1494
  %1502 = add i64 %1471, -2
  %1503 = icmp ult i64 %1502, %1480
  br i1 %1503, label %6330, label %1504

1504:                                             ; preds = %1501
  %1505 = getelementptr inbounds i8, i8* %1464, i64 %1480
  %1506 = bitcast i8* %1505 to i16*
  %1507 = load i16, i16* %1506, align 2
  %1508 = zext i16 %1507 to i64
  %1509 = and i64 %1508, 1
  %1510 = icmp eq i64 %1509, 0
  br i1 %1510, label %1515, label %1511

1511:                                             ; preds = %1504
  %1512 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1513 = load i8, i8* %1512, align 8, !range !5
  %1514 = icmp eq i8 %1513, 0
  br i1 %1514, label %1515, label %6330

1515:                                             ; preds = %1504, %1511
  %1516 = icmp ugt i64 %1471, %1508
  %1517 = sub i64 %1471, %1508
  %1518 = icmp uge i64 %1517, %1480
  %1519 = and i1 %1516, %1518
  br i1 %1519, label %1520, label %6330

1520:                                             ; preds = %1515
  %1521 = load i32, i32* %1477, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = sub nsw i64 0, %1522
  %1524 = getelementptr inbounds %"struct.tflite::SubOptions", %"struct.tflite::SubOptions"* %1455, i64 0, i32 0, i32 0, i64 %1523
  %1525 = bitcast i8* %1524 to i16*
  %1526 = load i16, i16* %1525, align 2
  %1527 = icmp ugt i16 %1526, 4
  br i1 %1527, label %1528, label %1538

1528:                                             ; preds = %1520
  %1529 = getelementptr inbounds i8, i8* %1524, i64 4
  %1530 = bitcast i8* %1529 to i16*
  %1531 = load i16, i16* %1530, align 2
  %1532 = icmp eq i16 %1531, 0
  br i1 %1532, label %1538, label %1533

1533:                                             ; preds = %1528
  %1534 = zext i16 %1531 to i64
  %1535 = add i64 %1461, %1534
  %1536 = add i64 %1471, -1
  %1537 = icmp ult i64 %1536, %1535
  br i1 %1537, label %6330, label %1538

1538:                                             ; preds = %1533, %1528, %1520
  store i32 %1482, i32* %1481, align 8
  br label %6330

1539:                                             ; preds = %3
  %1540 = bitcast i8* %1 to %"struct.tflite::DivOptions"*
  %1541 = icmp eq i8* %1, null
  br i1 %1541, label %6330, label %1542

1542:                                             ; preds = %1539
  %1543 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1544 = load i64, i64* %1543, align 8
  %1545 = ptrtoint i8* %1 to i64
  %1546 = sub i64 %1545, %1544
  %1547 = and i64 %1546, 3
  %1548 = icmp eq i64 %1547, 0
  %1549 = inttoptr i64 %1544 to i8*
  br i1 %1548, label %1554, label %1550

1550:                                             ; preds = %1542
  %1551 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1552 = load i8, i8* %1551, align 8, !range !5
  %1553 = icmp eq i8 %1552, 0
  br i1 %1553, label %1554, label %6330

1554:                                             ; preds = %1550, %1542
  %1555 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1556 = load i64, i64* %1555, align 8
  %1557 = icmp ugt i64 %1556, 4
  %1558 = add i64 %1556, -4
  %1559 = icmp uge i64 %1558, %1546
  %1560 = and i1 %1557, %1559
  br i1 %1560, label %1561, label %6330

1561:                                             ; preds = %1554
  %1562 = bitcast i8* %1 to i32*
  %1563 = load i32, i32* %1562, align 4
  %1564 = sext i32 %1563 to i64
  %1565 = sub i64 %1546, %1564
  %1566 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1567 = load i32, i32* %1566, align 8
  %1568 = add i32 %1567, 1
  store i32 %1568, i32* %1566, align 8
  %1569 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1570 = load i32, i32* %1569, align 8
  %1571 = add i32 %1570, 1
  store i32 %1571, i32* %1569, align 8
  %1572 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1573 = load i32, i32* %1572, align 4
  %1574 = icmp ugt i32 %1568, %1573
  br i1 %1574, label %6330, label %1575

1575:                                             ; preds = %1561
  %1576 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1577 = load i32, i32* %1576, align 4
  %1578 = icmp ugt i32 %1571, %1577
  br i1 %1578, label %6330, label %1579

1579:                                             ; preds = %1575
  %1580 = and i64 %1565, 1
  %1581 = icmp eq i64 %1580, 0
  br i1 %1581, label %1586, label %1582

1582:                                             ; preds = %1579
  %1583 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1584 = load i8, i8* %1583, align 8, !range !5
  %1585 = icmp eq i8 %1584, 0
  br i1 %1585, label %1586, label %6330

1586:                                             ; preds = %1582, %1579
  %1587 = add i64 %1556, -2
  %1588 = icmp ult i64 %1587, %1565
  br i1 %1588, label %6330, label %1589

1589:                                             ; preds = %1586
  %1590 = getelementptr inbounds i8, i8* %1549, i64 %1565
  %1591 = bitcast i8* %1590 to i16*
  %1592 = load i16, i16* %1591, align 2
  %1593 = zext i16 %1592 to i64
  %1594 = and i64 %1593, 1
  %1595 = icmp eq i64 %1594, 0
  br i1 %1595, label %1600, label %1596

1596:                                             ; preds = %1589
  %1597 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1598 = load i8, i8* %1597, align 8, !range !5
  %1599 = icmp eq i8 %1598, 0
  br i1 %1599, label %1600, label %6330

1600:                                             ; preds = %1589, %1596
  %1601 = icmp ugt i64 %1556, %1593
  %1602 = sub i64 %1556, %1593
  %1603 = icmp uge i64 %1602, %1565
  %1604 = and i1 %1601, %1603
  br i1 %1604, label %1605, label %6330

1605:                                             ; preds = %1600
  %1606 = load i32, i32* %1562, align 4
  %1607 = sext i32 %1606 to i64
  %1608 = sub nsw i64 0, %1607
  %1609 = getelementptr inbounds %"struct.tflite::DivOptions", %"struct.tflite::DivOptions"* %1540, i64 0, i32 0, i32 0, i64 %1608
  %1610 = bitcast i8* %1609 to i16*
  %1611 = load i16, i16* %1610, align 2
  %1612 = icmp ugt i16 %1611, 4
  br i1 %1612, label %1613, label %1623

1613:                                             ; preds = %1605
  %1614 = getelementptr inbounds i8, i8* %1609, i64 4
  %1615 = bitcast i8* %1614 to i16*
  %1616 = load i16, i16* %1615, align 2
  %1617 = icmp eq i16 %1616, 0
  br i1 %1617, label %1623, label %1618

1618:                                             ; preds = %1613
  %1619 = zext i16 %1616 to i64
  %1620 = add i64 %1546, %1619
  %1621 = add i64 %1556, -1
  %1622 = icmp ult i64 %1621, %1620
  br i1 %1622, label %6330, label %1623

1623:                                             ; preds = %1618, %1613, %1605
  store i32 %1567, i32* %1566, align 8
  br label %6330

1624:                                             ; preds = %3
  %1625 = icmp eq i8* %1, null
  br i1 %1625, label %6330, label %1626

1626:                                             ; preds = %1624
  %1627 = bitcast i8* %1 to %"struct.tflite::SqueezeOptions"*
  %1628 = tail call zeroext i1 @_ZNK6tflite14SqueezeOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SqueezeOptions"* nonnull %1627, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

1629:                                             ; preds = %3
  %1630 = icmp eq i8* %1, null
  br i1 %1630, label %6330, label %1631

1631:                                             ; preds = %1629
  %1632 = bitcast i8* %1 to %"struct.tflite::SequenceRNNOptions"*
  %1633 = tail call zeroext i1 @_ZNK6tflite18SequenceRNNOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SequenceRNNOptions"* nonnull %1632, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

1634:                                             ; preds = %3
  %1635 = icmp eq i8* %1, null
  br i1 %1635, label %6330, label %1636

1636:                                             ; preds = %1634
  %1637 = bitcast i8* %1 to %"struct.tflite::StridedSliceOptions"*
  %1638 = tail call zeroext i1 @_ZNK6tflite19StridedSliceOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::StridedSliceOptions"* nonnull %1637, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

1639:                                             ; preds = %3
  %1640 = icmp eq i8* %1, null
  br i1 %1640, label %6330, label %1641

1641:                                             ; preds = %1639
  %1642 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1643 = load i64, i64* %1642, align 8
  %1644 = ptrtoint i8* %1 to i64
  %1645 = sub i64 %1644, %1643
  %1646 = and i64 %1645, 3
  %1647 = icmp eq i64 %1646, 0
  %1648 = inttoptr i64 %1643 to i8*
  br i1 %1647, label %1653, label %1649

1649:                                             ; preds = %1641
  %1650 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1651 = load i8, i8* %1650, align 8, !range !5
  %1652 = icmp eq i8 %1651, 0
  br i1 %1652, label %1653, label %6330

1653:                                             ; preds = %1649, %1641
  %1654 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1655 = load i64, i64* %1654, align 8
  %1656 = icmp ugt i64 %1655, 4
  %1657 = add i64 %1655, -4
  %1658 = icmp uge i64 %1657, %1645
  %1659 = and i1 %1656, %1658
  br i1 %1659, label %1660, label %6330

1660:                                             ; preds = %1653
  %1661 = bitcast i8* %1 to i32*
  %1662 = load i32, i32* %1661, align 4
  %1663 = sext i32 %1662 to i64
  %1664 = sub i64 %1645, %1663
  %1665 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1666 = load i32, i32* %1665, align 8
  %1667 = add i32 %1666, 1
  store i32 %1667, i32* %1665, align 8
  %1668 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1669 = load i32, i32* %1668, align 8
  %1670 = add i32 %1669, 1
  store i32 %1670, i32* %1668, align 8
  %1671 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1672 = load i32, i32* %1671, align 4
  %1673 = icmp ugt i32 %1667, %1672
  br i1 %1673, label %6330, label %1674

1674:                                             ; preds = %1660
  %1675 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1676 = load i32, i32* %1675, align 4
  %1677 = icmp ugt i32 %1670, %1676
  br i1 %1677, label %6330, label %1678

1678:                                             ; preds = %1674
  %1679 = and i64 %1664, 1
  %1680 = icmp eq i64 %1679, 0
  br i1 %1680, label %1685, label %1681

1681:                                             ; preds = %1678
  %1682 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1683 = load i8, i8* %1682, align 8, !range !5
  %1684 = icmp eq i8 %1683, 0
  br i1 %1684, label %1685, label %6330

1685:                                             ; preds = %1681, %1678
  %1686 = add i64 %1655, -2
  %1687 = icmp ult i64 %1686, %1664
  br i1 %1687, label %6330, label %1688

1688:                                             ; preds = %1685
  %1689 = getelementptr inbounds i8, i8* %1648, i64 %1664
  %1690 = bitcast i8* %1689 to i16*
  %1691 = load i16, i16* %1690, align 2
  %1692 = zext i16 %1691 to i64
  %1693 = and i64 %1692, 1
  %1694 = icmp eq i64 %1693, 0
  br i1 %1694, label %1699, label %1695

1695:                                             ; preds = %1688
  %1696 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1697 = load i8, i8* %1696, align 8, !range !5
  %1698 = icmp eq i8 %1697, 0
  br i1 %1698, label %1699, label %6330

1699:                                             ; preds = %1695, %1688
  %1700 = icmp ugt i64 %1655, %1692
  %1701 = sub i64 %1655, %1692
  %1702 = icmp uge i64 %1701, %1664
  %1703 = and i1 %1700, %1702
  br i1 %1703, label %1704, label %6330

1704:                                             ; preds = %1699
  store i32 %1666, i32* %1665, align 8
  br label %6330

1705:                                             ; preds = %3
  %1706 = icmp eq i8* %1, null
  br i1 %1706, label %6330, label %1707

1707:                                             ; preds = %1705
  %1708 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1709 = load i64, i64* %1708, align 8
  %1710 = ptrtoint i8* %1 to i64
  %1711 = sub i64 %1710, %1709
  %1712 = and i64 %1711, 3
  %1713 = icmp eq i64 %1712, 0
  %1714 = inttoptr i64 %1709 to i8*
  br i1 %1713, label %1719, label %1715

1715:                                             ; preds = %1707
  %1716 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1717 = load i8, i8* %1716, align 8, !range !5
  %1718 = icmp eq i8 %1717, 0
  br i1 %1718, label %1719, label %6330

1719:                                             ; preds = %1715, %1707
  %1720 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1721 = load i64, i64* %1720, align 8
  %1722 = icmp ugt i64 %1721, 4
  %1723 = add i64 %1721, -4
  %1724 = icmp uge i64 %1723, %1711
  %1725 = and i1 %1722, %1724
  br i1 %1725, label %1726, label %6330

1726:                                             ; preds = %1719
  %1727 = bitcast i8* %1 to i32*
  %1728 = load i32, i32* %1727, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = sub i64 %1711, %1729
  %1731 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1732 = load i32, i32* %1731, align 8
  %1733 = add i32 %1732, 1
  store i32 %1733, i32* %1731, align 8
  %1734 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1735 = load i32, i32* %1734, align 8
  %1736 = add i32 %1735, 1
  store i32 %1736, i32* %1734, align 8
  %1737 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1738 = load i32, i32* %1737, align 4
  %1739 = icmp ugt i32 %1733, %1738
  br i1 %1739, label %6330, label %1740

1740:                                             ; preds = %1726
  %1741 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1742 = load i32, i32* %1741, align 4
  %1743 = icmp ugt i32 %1736, %1742
  br i1 %1743, label %6330, label %1744

1744:                                             ; preds = %1740
  %1745 = and i64 %1730, 1
  %1746 = icmp eq i64 %1745, 0
  br i1 %1746, label %1751, label %1747

1747:                                             ; preds = %1744
  %1748 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1749 = load i8, i8* %1748, align 8, !range !5
  %1750 = icmp eq i8 %1749, 0
  br i1 %1750, label %1751, label %6330

1751:                                             ; preds = %1747, %1744
  %1752 = add i64 %1721, -2
  %1753 = icmp ult i64 %1752, %1730
  br i1 %1753, label %6330, label %1754

1754:                                             ; preds = %1751
  %1755 = getelementptr inbounds i8, i8* %1714, i64 %1730
  %1756 = bitcast i8* %1755 to i16*
  %1757 = load i16, i16* %1756, align 2
  %1758 = zext i16 %1757 to i64
  %1759 = and i64 %1758, 1
  %1760 = icmp eq i64 %1759, 0
  br i1 %1760, label %1765, label %1761

1761:                                             ; preds = %1754
  %1762 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1763 = load i8, i8* %1762, align 8, !range !5
  %1764 = icmp eq i8 %1763, 0
  br i1 %1764, label %1765, label %6330

1765:                                             ; preds = %1761, %1754
  %1766 = icmp ugt i64 %1721, %1758
  %1767 = sub i64 %1721, %1758
  %1768 = icmp uge i64 %1767, %1730
  %1769 = and i1 %1766, %1768
  br i1 %1769, label %1770, label %6330

1770:                                             ; preds = %1765
  store i32 %1732, i32* %1731, align 8
  br label %6330

1771:                                             ; preds = %3
  %1772 = bitcast i8* %1 to %"struct.tflite::SplitOptions"*
  %1773 = icmp eq i8* %1, null
  br i1 %1773, label %6330, label %1774

1774:                                             ; preds = %1771
  %1775 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1776 = load i64, i64* %1775, align 8
  %1777 = ptrtoint i8* %1 to i64
  %1778 = sub i64 %1777, %1776
  %1779 = and i64 %1778, 3
  %1780 = icmp eq i64 %1779, 0
  %1781 = inttoptr i64 %1776 to i8*
  br i1 %1780, label %1786, label %1782

1782:                                             ; preds = %1774
  %1783 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1784 = load i8, i8* %1783, align 8, !range !5
  %1785 = icmp eq i8 %1784, 0
  br i1 %1785, label %1786, label %6330

1786:                                             ; preds = %1782, %1774
  %1787 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1788 = load i64, i64* %1787, align 8
  %1789 = icmp ugt i64 %1788, 4
  %1790 = add i64 %1788, -4
  %1791 = icmp uge i64 %1790, %1778
  %1792 = and i1 %1789, %1791
  br i1 %1792, label %1793, label %6330

1793:                                             ; preds = %1786
  %1794 = bitcast i8* %1 to i32*
  %1795 = load i32, i32* %1794, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = sub i64 %1778, %1796
  %1798 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1799 = load i32, i32* %1798, align 8
  %1800 = add i32 %1799, 1
  store i32 %1800, i32* %1798, align 8
  %1801 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1802 = load i32, i32* %1801, align 8
  %1803 = add i32 %1802, 1
  store i32 %1803, i32* %1801, align 8
  %1804 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1805 = load i32, i32* %1804, align 4
  %1806 = icmp ugt i32 %1800, %1805
  br i1 %1806, label %6330, label %1807

1807:                                             ; preds = %1793
  %1808 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1809 = load i32, i32* %1808, align 4
  %1810 = icmp ugt i32 %1803, %1809
  br i1 %1810, label %6330, label %1811

1811:                                             ; preds = %1807
  %1812 = and i64 %1797, 1
  %1813 = icmp eq i64 %1812, 0
  br i1 %1813, label %1818, label %1814

1814:                                             ; preds = %1811
  %1815 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1816 = load i8, i8* %1815, align 8, !range !5
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1818, label %6330

1818:                                             ; preds = %1814, %1811
  %1819 = add i64 %1788, -2
  %1820 = icmp ult i64 %1819, %1797
  br i1 %1820, label %6330, label %1821

1821:                                             ; preds = %1818
  %1822 = getelementptr inbounds i8, i8* %1781, i64 %1797
  %1823 = bitcast i8* %1822 to i16*
  %1824 = load i16, i16* %1823, align 2
  %1825 = zext i16 %1824 to i64
  %1826 = and i64 %1825, 1
  %1827 = icmp eq i64 %1826, 0
  br i1 %1827, label %1832, label %1828

1828:                                             ; preds = %1821
  %1829 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1830 = load i8, i8* %1829, align 8, !range !5
  %1831 = icmp eq i8 %1830, 0
  br i1 %1831, label %1832, label %6330

1832:                                             ; preds = %1821, %1828
  %1833 = icmp ugt i64 %1788, %1825
  %1834 = sub i64 %1788, %1825
  %1835 = icmp uge i64 %1834, %1797
  %1836 = and i1 %1833, %1835
  br i1 %1836, label %1837, label %6330

1837:                                             ; preds = %1832
  %1838 = load i32, i32* %1794, align 4
  %1839 = sext i32 %1838 to i64
  %1840 = sub nsw i64 0, %1839
  %1841 = getelementptr inbounds %"struct.tflite::SplitOptions", %"struct.tflite::SplitOptions"* %1772, i64 0, i32 0, i32 0, i64 %1840
  %1842 = bitcast i8* %1841 to i16*
  %1843 = load i16, i16* %1842, align 2
  %1844 = icmp ugt i16 %1843, 4
  br i1 %1844, label %1845, label %1854

1845:                                             ; preds = %1837
  %1846 = getelementptr inbounds i8, i8* %1841, i64 4
  %1847 = bitcast i8* %1846 to i16*
  %1848 = load i16, i16* %1847, align 2
  %1849 = icmp eq i16 %1848, 0
  br i1 %1849, label %1854, label %1850

1850:                                             ; preds = %1845
  %1851 = zext i16 %1848 to i64
  %1852 = add i64 %1778, %1851
  %1853 = icmp ult i64 %1790, %1852
  br i1 %1853, label %6330, label %1854

1854:                                             ; preds = %1850, %1845, %1837
  store i32 %1799, i32* %1798, align 8
  br label %6330

1855:                                             ; preds = %3
  %1856 = icmp eq i8* %1, null
  br i1 %1856, label %6330, label %1857

1857:                                             ; preds = %1855
  %1858 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1859 = load i64, i64* %1858, align 8
  %1860 = ptrtoint i8* %1 to i64
  %1861 = sub i64 %1860, %1859
  %1862 = and i64 %1861, 3
  %1863 = icmp eq i64 %1862, 0
  %1864 = inttoptr i64 %1859 to i8*
  br i1 %1863, label %1869, label %1865

1865:                                             ; preds = %1857
  %1866 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1867 = load i8, i8* %1866, align 8, !range !5
  %1868 = icmp eq i8 %1867, 0
  br i1 %1868, label %1869, label %6330

1869:                                             ; preds = %1865, %1857
  %1870 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1871 = load i64, i64* %1870, align 8
  %1872 = icmp ugt i64 %1871, 4
  %1873 = add i64 %1871, -4
  %1874 = icmp uge i64 %1873, %1861
  %1875 = and i1 %1872, %1874
  br i1 %1875, label %1876, label %6330

1876:                                             ; preds = %1869
  %1877 = bitcast i8* %1 to i32*
  %1878 = load i32, i32* %1877, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = sub i64 %1861, %1879
  %1881 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1882 = load i32, i32* %1881, align 8
  %1883 = add i32 %1882, 1
  store i32 %1883, i32* %1881, align 8
  %1884 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1885 = load i32, i32* %1884, align 8
  %1886 = add i32 %1885, 1
  store i32 %1886, i32* %1884, align 8
  %1887 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1888 = load i32, i32* %1887, align 4
  %1889 = icmp ugt i32 %1883, %1888
  br i1 %1889, label %6330, label %1890

1890:                                             ; preds = %1876
  %1891 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1892 = load i32, i32* %1891, align 4
  %1893 = icmp ugt i32 %1886, %1892
  br i1 %1893, label %6330, label %1894

1894:                                             ; preds = %1890
  %1895 = and i64 %1880, 1
  %1896 = icmp eq i64 %1895, 0
  br i1 %1896, label %1901, label %1897

1897:                                             ; preds = %1894
  %1898 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1899 = load i8, i8* %1898, align 8, !range !5
  %1900 = icmp eq i8 %1899, 0
  br i1 %1900, label %1901, label %6330

1901:                                             ; preds = %1897, %1894
  %1902 = add i64 %1871, -2
  %1903 = icmp ult i64 %1902, %1880
  br i1 %1903, label %6330, label %1904

1904:                                             ; preds = %1901
  %1905 = getelementptr inbounds i8, i8* %1864, i64 %1880
  %1906 = bitcast i8* %1905 to i16*
  %1907 = load i16, i16* %1906, align 2
  %1908 = zext i16 %1907 to i64
  %1909 = and i64 %1908, 1
  %1910 = icmp eq i64 %1909, 0
  br i1 %1910, label %1915, label %1911

1911:                                             ; preds = %1904
  %1912 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1913 = load i8, i8* %1912, align 8, !range !5
  %1914 = icmp eq i8 %1913, 0
  br i1 %1914, label %1915, label %6330

1915:                                             ; preds = %1911, %1904
  %1916 = icmp ugt i64 %1871, %1908
  %1917 = sub i64 %1871, %1908
  %1918 = icmp uge i64 %1917, %1880
  %1919 = and i1 %1916, %1918
  br i1 %1919, label %1920, label %6330

1920:                                             ; preds = %1915
  store i32 %1882, i32* %1881, align 8
  br label %6330

1921:                                             ; preds = %3
  %1922 = bitcast i8* %1 to %"struct.tflite::CastOptions"*
  %1923 = icmp eq i8* %1, null
  br i1 %1923, label %6330, label %1924

1924:                                             ; preds = %1921
  %1925 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %1926 = load i64, i64* %1925, align 8
  %1927 = ptrtoint i8* %1 to i64
  %1928 = sub i64 %1927, %1926
  %1929 = and i64 %1928, 3
  %1930 = icmp eq i64 %1929, 0
  %1931 = inttoptr i64 %1926 to i8*
  br i1 %1930, label %1936, label %1932

1932:                                             ; preds = %1924
  %1933 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1934 = load i8, i8* %1933, align 8, !range !5
  %1935 = icmp eq i8 %1934, 0
  br i1 %1935, label %1936, label %6330

1936:                                             ; preds = %1932, %1924
  %1937 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %1938 = load i64, i64* %1937, align 8
  %1939 = icmp ugt i64 %1938, 4
  %1940 = add i64 %1938, -4
  %1941 = icmp uge i64 %1940, %1928
  %1942 = and i1 %1939, %1941
  br i1 %1942, label %1943, label %6330

1943:                                             ; preds = %1936
  %1944 = bitcast i8* %1 to i32*
  %1945 = load i32, i32* %1944, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = sub i64 %1928, %1946
  %1948 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %1949 = load i32, i32* %1948, align 8
  %1950 = add i32 %1949, 1
  store i32 %1950, i32* %1948, align 8
  %1951 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %1952 = load i32, i32* %1951, align 8
  %1953 = add i32 %1952, 1
  store i32 %1953, i32* %1951, align 8
  %1954 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %1955 = load i32, i32* %1954, align 4
  %1956 = icmp ugt i32 %1950, %1955
  br i1 %1956, label %6330, label %1957

1957:                                             ; preds = %1943
  %1958 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %1959 = load i32, i32* %1958, align 4
  %1960 = icmp ugt i32 %1953, %1959
  br i1 %1960, label %6330, label %1961

1961:                                             ; preds = %1957
  %1962 = and i64 %1947, 1
  %1963 = icmp eq i64 %1962, 0
  br i1 %1963, label %1968, label %1964

1964:                                             ; preds = %1961
  %1965 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1966 = load i8, i8* %1965, align 8, !range !5
  %1967 = icmp eq i8 %1966, 0
  br i1 %1967, label %1968, label %6330

1968:                                             ; preds = %1964, %1961
  %1969 = add i64 %1938, -2
  %1970 = icmp ult i64 %1969, %1947
  br i1 %1970, label %6330, label %1971

1971:                                             ; preds = %1968
  %1972 = getelementptr inbounds i8, i8* %1931, i64 %1947
  %1973 = bitcast i8* %1972 to i16*
  %1974 = load i16, i16* %1973, align 2
  %1975 = zext i16 %1974 to i64
  %1976 = and i64 %1975, 1
  %1977 = icmp eq i64 %1976, 0
  br i1 %1977, label %1982, label %1978

1978:                                             ; preds = %1971
  %1979 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %1980 = load i8, i8* %1979, align 8, !range !5
  %1981 = icmp eq i8 %1980, 0
  br i1 %1981, label %1982, label %6330

1982:                                             ; preds = %1971, %1978
  %1983 = icmp ugt i64 %1938, %1975
  %1984 = sub i64 %1938, %1975
  %1985 = icmp uge i64 %1984, %1947
  %1986 = and i1 %1983, %1985
  br i1 %1986, label %1987, label %6330

1987:                                             ; preds = %1982
  %1988 = load i32, i32* %1944, align 4
  %1989 = sext i32 %1988 to i64
  %1990 = sub nsw i64 0, %1989
  %1991 = getelementptr inbounds %"struct.tflite::CastOptions", %"struct.tflite::CastOptions"* %1922, i64 0, i32 0, i32 0, i64 %1990
  %1992 = bitcast i8* %1991 to i16*
  %1993 = load i16, i16* %1992, align 2
  %1994 = icmp ugt i16 %1993, 4
  br i1 %1994, label %1995, label %2017

1995:                                             ; preds = %1987
  %1996 = getelementptr inbounds i8, i8* %1991, i64 4
  %1997 = bitcast i8* %1996 to i16*
  %1998 = load i16, i16* %1997, align 2
  %1999 = icmp eq i16 %1998, 0
  br i1 %1999, label %2005, label %2000

2000:                                             ; preds = %1995
  %2001 = zext i16 %1998 to i64
  %2002 = add i64 %1928, %2001
  %2003 = add i64 %1938, -1
  %2004 = icmp ult i64 %2003, %2002
  br i1 %2004, label %6330, label %2005

2005:                                             ; preds = %2000, %1995
  %2006 = icmp ugt i16 %1993, 6
  br i1 %2006, label %2007, label %2017

2007:                                             ; preds = %2005
  %2008 = getelementptr inbounds i8, i8* %1991, i64 6
  %2009 = bitcast i8* %2008 to i16*
  %2010 = load i16, i16* %2009, align 2
  %2011 = icmp eq i16 %2010, 0
  br i1 %2011, label %2017, label %2012

2012:                                             ; preds = %2007
  %2013 = zext i16 %2010 to i64
  %2014 = add i64 %1928, %2013
  %2015 = add i64 %1938, -1
  %2016 = icmp ult i64 %2015, %2014
  br i1 %2016, label %6330, label %2017

2017:                                             ; preds = %2012, %2007, %2005, %1987
  store i32 %1949, i32* %1948, align 8
  br label %6330

2018:                                             ; preds = %3
  %2019 = icmp eq i8* %1, null
  br i1 %2019, label %6330, label %2020

2020:                                             ; preds = %2018
  %2021 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2022 = load i64, i64* %2021, align 8
  %2023 = ptrtoint i8* %1 to i64
  %2024 = sub i64 %2023, %2022
  %2025 = and i64 %2024, 3
  %2026 = icmp eq i64 %2025, 0
  %2027 = inttoptr i64 %2022 to i8*
  br i1 %2026, label %2032, label %2028

2028:                                             ; preds = %2020
  %2029 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2030 = load i8, i8* %2029, align 8, !range !5
  %2031 = icmp eq i8 %2030, 0
  br i1 %2031, label %2032, label %6330

2032:                                             ; preds = %2028, %2020
  %2033 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2034 = load i64, i64* %2033, align 8
  %2035 = icmp ugt i64 %2034, 4
  %2036 = add i64 %2034, -4
  %2037 = icmp uge i64 %2036, %2024
  %2038 = and i1 %2035, %2037
  br i1 %2038, label %2039, label %6330

2039:                                             ; preds = %2032
  %2040 = bitcast i8* %1 to i32*
  %2041 = load i32, i32* %2040, align 4
  %2042 = sext i32 %2041 to i64
  %2043 = sub i64 %2024, %2042
  %2044 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2045 = load i32, i32* %2044, align 8
  %2046 = add i32 %2045, 1
  store i32 %2046, i32* %2044, align 8
  %2047 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2048 = load i32, i32* %2047, align 8
  %2049 = add i32 %2048, 1
  store i32 %2049, i32* %2047, align 8
  %2050 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2051 = load i32, i32* %2050, align 4
  %2052 = icmp ugt i32 %2046, %2051
  br i1 %2052, label %6330, label %2053

2053:                                             ; preds = %2039
  %2054 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2055 = load i32, i32* %2054, align 4
  %2056 = icmp ugt i32 %2049, %2055
  br i1 %2056, label %6330, label %2057

2057:                                             ; preds = %2053
  %2058 = and i64 %2043, 1
  %2059 = icmp eq i64 %2058, 0
  br i1 %2059, label %2064, label %2060

2060:                                             ; preds = %2057
  %2061 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2062 = load i8, i8* %2061, align 8, !range !5
  %2063 = icmp eq i8 %2062, 0
  br i1 %2063, label %2064, label %6330

2064:                                             ; preds = %2060, %2057
  %2065 = add i64 %2034, -2
  %2066 = icmp ult i64 %2065, %2043
  br i1 %2066, label %6330, label %2067

2067:                                             ; preds = %2064
  %2068 = getelementptr inbounds i8, i8* %2027, i64 %2043
  %2069 = bitcast i8* %2068 to i16*
  %2070 = load i16, i16* %2069, align 2
  %2071 = zext i16 %2070 to i64
  %2072 = and i64 %2071, 1
  %2073 = icmp eq i64 %2072, 0
  br i1 %2073, label %2078, label %2074

2074:                                             ; preds = %2067
  %2075 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2076 = load i8, i8* %2075, align 8, !range !5
  %2077 = icmp eq i8 %2076, 0
  br i1 %2077, label %2078, label %6330

2078:                                             ; preds = %2074, %2067
  %2079 = icmp ugt i64 %2034, %2071
  %2080 = sub i64 %2034, %2071
  %2081 = icmp uge i64 %2080, %2043
  %2082 = and i1 %2079, %2081
  br i1 %2082, label %2083, label %6330

2083:                                             ; preds = %2078
  store i32 %2045, i32* %2044, align 8
  br label %6330

2084:                                             ; preds = %3
  %2085 = icmp eq i8* %1, null
  br i1 %2085, label %6330, label %2086

2086:                                             ; preds = %2084
  %2087 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2088 = load i64, i64* %2087, align 8
  %2089 = ptrtoint i8* %1 to i64
  %2090 = sub i64 %2089, %2088
  %2091 = and i64 %2090, 3
  %2092 = icmp eq i64 %2091, 0
  %2093 = inttoptr i64 %2088 to i8*
  br i1 %2092, label %2098, label %2094

2094:                                             ; preds = %2086
  %2095 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2096 = load i8, i8* %2095, align 8, !range !5
  %2097 = icmp eq i8 %2096, 0
  br i1 %2097, label %2098, label %6330

2098:                                             ; preds = %2094, %2086
  %2099 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2100 = load i64, i64* %2099, align 8
  %2101 = icmp ugt i64 %2100, 4
  %2102 = add i64 %2100, -4
  %2103 = icmp uge i64 %2102, %2090
  %2104 = and i1 %2101, %2103
  br i1 %2104, label %2105, label %6330

2105:                                             ; preds = %2098
  %2106 = bitcast i8* %1 to i32*
  %2107 = load i32, i32* %2106, align 4
  %2108 = sext i32 %2107 to i64
  %2109 = sub i64 %2090, %2108
  %2110 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2111 = load i32, i32* %2110, align 8
  %2112 = add i32 %2111, 1
  store i32 %2112, i32* %2110, align 8
  %2113 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2114 = load i32, i32* %2113, align 8
  %2115 = add i32 %2114, 1
  store i32 %2115, i32* %2113, align 8
  %2116 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2117 = load i32, i32* %2116, align 4
  %2118 = icmp ugt i32 %2112, %2117
  br i1 %2118, label %6330, label %2119

2119:                                             ; preds = %2105
  %2120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2121 = load i32, i32* %2120, align 4
  %2122 = icmp ugt i32 %2115, %2121
  br i1 %2122, label %6330, label %2123

2123:                                             ; preds = %2119
  %2124 = and i64 %2109, 1
  %2125 = icmp eq i64 %2124, 0
  br i1 %2125, label %2130, label %2126

2126:                                             ; preds = %2123
  %2127 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2128 = load i8, i8* %2127, align 8, !range !5
  %2129 = icmp eq i8 %2128, 0
  br i1 %2129, label %2130, label %6330

2130:                                             ; preds = %2126, %2123
  %2131 = add i64 %2100, -2
  %2132 = icmp ult i64 %2131, %2109
  br i1 %2132, label %6330, label %2133

2133:                                             ; preds = %2130
  %2134 = getelementptr inbounds i8, i8* %2093, i64 %2109
  %2135 = bitcast i8* %2134 to i16*
  %2136 = load i16, i16* %2135, align 2
  %2137 = zext i16 %2136 to i64
  %2138 = and i64 %2137, 1
  %2139 = icmp eq i64 %2138, 0
  br i1 %2139, label %2144, label %2140

2140:                                             ; preds = %2133
  %2141 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2142 = load i8, i8* %2141, align 8, !range !5
  %2143 = icmp eq i8 %2142, 0
  br i1 %2143, label %2144, label %6330

2144:                                             ; preds = %2140, %2133
  %2145 = icmp ugt i64 %2100, %2137
  %2146 = sub i64 %2100, %2137
  %2147 = icmp uge i64 %2146, %2109
  %2148 = and i1 %2145, %2147
  br i1 %2148, label %2149, label %6330

2149:                                             ; preds = %2144
  store i32 %2111, i32* %2110, align 8
  br label %6330

2150:                                             ; preds = %3
  %2151 = bitcast i8* %1 to %"struct.tflite::ArgMaxOptions"*
  %2152 = icmp eq i8* %1, null
  br i1 %2152, label %6330, label %2153

2153:                                             ; preds = %2150
  %2154 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2155 = load i64, i64* %2154, align 8
  %2156 = ptrtoint i8* %1 to i64
  %2157 = sub i64 %2156, %2155
  %2158 = and i64 %2157, 3
  %2159 = icmp eq i64 %2158, 0
  %2160 = inttoptr i64 %2155 to i8*
  br i1 %2159, label %2165, label %2161

2161:                                             ; preds = %2153
  %2162 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2163 = load i8, i8* %2162, align 8, !range !5
  %2164 = icmp eq i8 %2163, 0
  br i1 %2164, label %2165, label %6330

2165:                                             ; preds = %2161, %2153
  %2166 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2167 = load i64, i64* %2166, align 8
  %2168 = icmp ugt i64 %2167, 4
  %2169 = add i64 %2167, -4
  %2170 = icmp uge i64 %2169, %2157
  %2171 = and i1 %2168, %2170
  br i1 %2171, label %2172, label %6330

2172:                                             ; preds = %2165
  %2173 = bitcast i8* %1 to i32*
  %2174 = load i32, i32* %2173, align 4
  %2175 = sext i32 %2174 to i64
  %2176 = sub i64 %2157, %2175
  %2177 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2178 = load i32, i32* %2177, align 8
  %2179 = add i32 %2178, 1
  store i32 %2179, i32* %2177, align 8
  %2180 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2181 = load i32, i32* %2180, align 8
  %2182 = add i32 %2181, 1
  store i32 %2182, i32* %2180, align 8
  %2183 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2184 = load i32, i32* %2183, align 4
  %2185 = icmp ugt i32 %2179, %2184
  br i1 %2185, label %6330, label %2186

2186:                                             ; preds = %2172
  %2187 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2188 = load i32, i32* %2187, align 4
  %2189 = icmp ugt i32 %2182, %2188
  br i1 %2189, label %6330, label %2190

2190:                                             ; preds = %2186
  %2191 = and i64 %2176, 1
  %2192 = icmp eq i64 %2191, 0
  br i1 %2192, label %2197, label %2193

2193:                                             ; preds = %2190
  %2194 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2195 = load i8, i8* %2194, align 8, !range !5
  %2196 = icmp eq i8 %2195, 0
  br i1 %2196, label %2197, label %6330

2197:                                             ; preds = %2193, %2190
  %2198 = add i64 %2167, -2
  %2199 = icmp ult i64 %2198, %2176
  br i1 %2199, label %6330, label %2200

2200:                                             ; preds = %2197
  %2201 = getelementptr inbounds i8, i8* %2160, i64 %2176
  %2202 = bitcast i8* %2201 to i16*
  %2203 = load i16, i16* %2202, align 2
  %2204 = zext i16 %2203 to i64
  %2205 = and i64 %2204, 1
  %2206 = icmp eq i64 %2205, 0
  br i1 %2206, label %2211, label %2207

2207:                                             ; preds = %2200
  %2208 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2209 = load i8, i8* %2208, align 8, !range !5
  %2210 = icmp eq i8 %2209, 0
  br i1 %2210, label %2211, label %6330

2211:                                             ; preds = %2200, %2207
  %2212 = icmp ugt i64 %2167, %2204
  %2213 = sub i64 %2167, %2204
  %2214 = icmp uge i64 %2213, %2176
  %2215 = and i1 %2212, %2214
  br i1 %2215, label %2216, label %6330

2216:                                             ; preds = %2211
  %2217 = load i32, i32* %2173, align 4
  %2218 = sext i32 %2217 to i64
  %2219 = sub nsw i64 0, %2218
  %2220 = getelementptr inbounds %"struct.tflite::ArgMaxOptions", %"struct.tflite::ArgMaxOptions"* %2151, i64 0, i32 0, i32 0, i64 %2219
  %2221 = bitcast i8* %2220 to i16*
  %2222 = load i16, i16* %2221, align 2
  %2223 = icmp ugt i16 %2222, 4
  br i1 %2223, label %2224, label %2234

2224:                                             ; preds = %2216
  %2225 = getelementptr inbounds i8, i8* %2220, i64 4
  %2226 = bitcast i8* %2225 to i16*
  %2227 = load i16, i16* %2226, align 2
  %2228 = icmp eq i16 %2227, 0
  br i1 %2228, label %2234, label %2229

2229:                                             ; preds = %2224
  %2230 = zext i16 %2227 to i64
  %2231 = add i64 %2157, %2230
  %2232 = add i64 %2167, -1
  %2233 = icmp ult i64 %2232, %2231
  br i1 %2233, label %6330, label %2234

2234:                                             ; preds = %2229, %2224, %2216
  store i32 %2178, i32* %2177, align 8
  br label %6330

2235:                                             ; preds = %3
  %2236 = icmp eq i8* %1, null
  br i1 %2236, label %6330, label %2237

2237:                                             ; preds = %2235
  %2238 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2239 = load i64, i64* %2238, align 8
  %2240 = ptrtoint i8* %1 to i64
  %2241 = sub i64 %2240, %2239
  %2242 = and i64 %2241, 3
  %2243 = icmp eq i64 %2242, 0
  %2244 = inttoptr i64 %2239 to i8*
  br i1 %2243, label %2249, label %2245

2245:                                             ; preds = %2237
  %2246 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2247 = load i8, i8* %2246, align 8, !range !5
  %2248 = icmp eq i8 %2247, 0
  br i1 %2248, label %2249, label %6330

2249:                                             ; preds = %2245, %2237
  %2250 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2251 = load i64, i64* %2250, align 8
  %2252 = icmp ugt i64 %2251, 4
  %2253 = add i64 %2251, -4
  %2254 = icmp uge i64 %2253, %2241
  %2255 = and i1 %2252, %2254
  br i1 %2255, label %2256, label %6330

2256:                                             ; preds = %2249
  %2257 = bitcast i8* %1 to i32*
  %2258 = load i32, i32* %2257, align 4
  %2259 = sext i32 %2258 to i64
  %2260 = sub i64 %2241, %2259
  %2261 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2262 = load i32, i32* %2261, align 8
  %2263 = add i32 %2262, 1
  store i32 %2263, i32* %2261, align 8
  %2264 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2265 = load i32, i32* %2264, align 8
  %2266 = add i32 %2265, 1
  store i32 %2266, i32* %2264, align 8
  %2267 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2268 = load i32, i32* %2267, align 4
  %2269 = icmp ugt i32 %2263, %2268
  br i1 %2269, label %6330, label %2270

2270:                                             ; preds = %2256
  %2271 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2272 = load i32, i32* %2271, align 4
  %2273 = icmp ugt i32 %2266, %2272
  br i1 %2273, label %6330, label %2274

2274:                                             ; preds = %2270
  %2275 = and i64 %2260, 1
  %2276 = icmp eq i64 %2275, 0
  br i1 %2276, label %2281, label %2277

2277:                                             ; preds = %2274
  %2278 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2279 = load i8, i8* %2278, align 8, !range !5
  %2280 = icmp eq i8 %2279, 0
  br i1 %2280, label %2281, label %6330

2281:                                             ; preds = %2277, %2274
  %2282 = add i64 %2251, -2
  %2283 = icmp ult i64 %2282, %2260
  br i1 %2283, label %6330, label %2284

2284:                                             ; preds = %2281
  %2285 = getelementptr inbounds i8, i8* %2244, i64 %2260
  %2286 = bitcast i8* %2285 to i16*
  %2287 = load i16, i16* %2286, align 2
  %2288 = zext i16 %2287 to i64
  %2289 = and i64 %2288, 1
  %2290 = icmp eq i64 %2289, 0
  br i1 %2290, label %2295, label %2291

2291:                                             ; preds = %2284
  %2292 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2293 = load i8, i8* %2292, align 8, !range !5
  %2294 = icmp eq i8 %2293, 0
  br i1 %2294, label %2295, label %6330

2295:                                             ; preds = %2291, %2284
  %2296 = icmp ugt i64 %2251, %2288
  %2297 = sub i64 %2251, %2288
  %2298 = icmp uge i64 %2297, %2260
  %2299 = and i1 %2296, %2298
  br i1 %2299, label %2300, label %6330

2300:                                             ; preds = %2295
  store i32 %2262, i32* %2261, align 8
  br label %6330

2301:                                             ; preds = %3
  %2302 = icmp eq i8* %1, null
  br i1 %2302, label %6330, label %2303

2303:                                             ; preds = %2301
  %2304 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2305 = load i64, i64* %2304, align 8
  %2306 = ptrtoint i8* %1 to i64
  %2307 = sub i64 %2306, %2305
  %2308 = and i64 %2307, 3
  %2309 = icmp eq i64 %2308, 0
  %2310 = inttoptr i64 %2305 to i8*
  br i1 %2309, label %2315, label %2311

2311:                                             ; preds = %2303
  %2312 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2313 = load i8, i8* %2312, align 8, !range !5
  %2314 = icmp eq i8 %2313, 0
  br i1 %2314, label %2315, label %6330

2315:                                             ; preds = %2311, %2303
  %2316 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2317 = load i64, i64* %2316, align 8
  %2318 = icmp ugt i64 %2317, 4
  %2319 = add i64 %2317, -4
  %2320 = icmp uge i64 %2319, %2307
  %2321 = and i1 %2318, %2320
  br i1 %2321, label %2322, label %6330

2322:                                             ; preds = %2315
  %2323 = bitcast i8* %1 to i32*
  %2324 = load i32, i32* %2323, align 4
  %2325 = sext i32 %2324 to i64
  %2326 = sub i64 %2307, %2325
  %2327 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2328 = load i32, i32* %2327, align 8
  %2329 = add i32 %2328, 1
  store i32 %2329, i32* %2327, align 8
  %2330 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2331 = load i32, i32* %2330, align 8
  %2332 = add i32 %2331, 1
  store i32 %2332, i32* %2330, align 8
  %2333 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2334 = load i32, i32* %2333, align 4
  %2335 = icmp ugt i32 %2329, %2334
  br i1 %2335, label %6330, label %2336

2336:                                             ; preds = %2322
  %2337 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2338 = load i32, i32* %2337, align 4
  %2339 = icmp ugt i32 %2332, %2338
  br i1 %2339, label %6330, label %2340

2340:                                             ; preds = %2336
  %2341 = and i64 %2326, 1
  %2342 = icmp eq i64 %2341, 0
  br i1 %2342, label %2347, label %2343

2343:                                             ; preds = %2340
  %2344 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2345 = load i8, i8* %2344, align 8, !range !5
  %2346 = icmp eq i8 %2345, 0
  br i1 %2346, label %2347, label %6330

2347:                                             ; preds = %2343, %2340
  %2348 = add i64 %2317, -2
  %2349 = icmp ult i64 %2348, %2326
  br i1 %2349, label %6330, label %2350

2350:                                             ; preds = %2347
  %2351 = getelementptr inbounds i8, i8* %2310, i64 %2326
  %2352 = bitcast i8* %2351 to i16*
  %2353 = load i16, i16* %2352, align 2
  %2354 = zext i16 %2353 to i64
  %2355 = and i64 %2354, 1
  %2356 = icmp eq i64 %2355, 0
  br i1 %2356, label %2361, label %2357

2357:                                             ; preds = %2350
  %2358 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2359 = load i8, i8* %2358, align 8, !range !5
  %2360 = icmp eq i8 %2359, 0
  br i1 %2360, label %2361, label %6330

2361:                                             ; preds = %2357, %2350
  %2362 = icmp ugt i64 %2317, %2354
  %2363 = sub i64 %2317, %2354
  %2364 = icmp uge i64 %2363, %2326
  %2365 = and i1 %2362, %2364
  br i1 %2365, label %2366, label %6330

2366:                                             ; preds = %2361
  store i32 %2328, i32* %2327, align 8
  br label %6330

2367:                                             ; preds = %3
  %2368 = icmp eq i8* %1, null
  br i1 %2368, label %6330, label %2369

2369:                                             ; preds = %2367
  %2370 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2371 = load i64, i64* %2370, align 8
  %2372 = ptrtoint i8* %1 to i64
  %2373 = sub i64 %2372, %2371
  %2374 = and i64 %2373, 3
  %2375 = icmp eq i64 %2374, 0
  %2376 = inttoptr i64 %2371 to i8*
  br i1 %2375, label %2381, label %2377

2377:                                             ; preds = %2369
  %2378 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2379 = load i8, i8* %2378, align 8, !range !5
  %2380 = icmp eq i8 %2379, 0
  br i1 %2380, label %2381, label %6330

2381:                                             ; preds = %2377, %2369
  %2382 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2383 = load i64, i64* %2382, align 8
  %2384 = icmp ugt i64 %2383, 4
  %2385 = add i64 %2383, -4
  %2386 = icmp uge i64 %2385, %2373
  %2387 = and i1 %2384, %2386
  br i1 %2387, label %2388, label %6330

2388:                                             ; preds = %2381
  %2389 = bitcast i8* %1 to i32*
  %2390 = load i32, i32* %2389, align 4
  %2391 = sext i32 %2390 to i64
  %2392 = sub i64 %2373, %2391
  %2393 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2394 = load i32, i32* %2393, align 8
  %2395 = add i32 %2394, 1
  store i32 %2395, i32* %2393, align 8
  %2396 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2397 = load i32, i32* %2396, align 8
  %2398 = add i32 %2397, 1
  store i32 %2398, i32* %2396, align 8
  %2399 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2400 = load i32, i32* %2399, align 4
  %2401 = icmp ugt i32 %2395, %2400
  br i1 %2401, label %6330, label %2402

2402:                                             ; preds = %2388
  %2403 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2404 = load i32, i32* %2403, align 4
  %2405 = icmp ugt i32 %2398, %2404
  br i1 %2405, label %6330, label %2406

2406:                                             ; preds = %2402
  %2407 = and i64 %2392, 1
  %2408 = icmp eq i64 %2407, 0
  br i1 %2408, label %2413, label %2409

2409:                                             ; preds = %2406
  %2410 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2411 = load i8, i8* %2410, align 8, !range !5
  %2412 = icmp eq i8 %2411, 0
  br i1 %2412, label %2413, label %6330

2413:                                             ; preds = %2409, %2406
  %2414 = add i64 %2383, -2
  %2415 = icmp ult i64 %2414, %2392
  br i1 %2415, label %6330, label %2416

2416:                                             ; preds = %2413
  %2417 = getelementptr inbounds i8, i8* %2376, i64 %2392
  %2418 = bitcast i8* %2417 to i16*
  %2419 = load i16, i16* %2418, align 2
  %2420 = zext i16 %2419 to i64
  %2421 = and i64 %2420, 1
  %2422 = icmp eq i64 %2421, 0
  br i1 %2422, label %2427, label %2423

2423:                                             ; preds = %2416
  %2424 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2425 = load i8, i8* %2424, align 8, !range !5
  %2426 = icmp eq i8 %2425, 0
  br i1 %2426, label %2427, label %6330

2427:                                             ; preds = %2423, %2416
  %2428 = icmp ugt i64 %2383, %2420
  %2429 = sub i64 %2383, %2420
  %2430 = icmp uge i64 %2429, %2392
  %2431 = and i1 %2428, %2430
  br i1 %2431, label %2432, label %6330

2432:                                             ; preds = %2427
  store i32 %2394, i32* %2393, align 8
  br label %6330

2433:                                             ; preds = %3
  %2434 = icmp eq i8* %1, null
  br i1 %2434, label %6330, label %2435

2435:                                             ; preds = %2433
  %2436 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2437 = load i64, i64* %2436, align 8
  %2438 = ptrtoint i8* %1 to i64
  %2439 = sub i64 %2438, %2437
  %2440 = and i64 %2439, 3
  %2441 = icmp eq i64 %2440, 0
  %2442 = inttoptr i64 %2437 to i8*
  br i1 %2441, label %2447, label %2443

2443:                                             ; preds = %2435
  %2444 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2445 = load i8, i8* %2444, align 8, !range !5
  %2446 = icmp eq i8 %2445, 0
  br i1 %2446, label %2447, label %6330

2447:                                             ; preds = %2443, %2435
  %2448 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2449 = load i64, i64* %2448, align 8
  %2450 = icmp ugt i64 %2449, 4
  %2451 = add i64 %2449, -4
  %2452 = icmp uge i64 %2451, %2439
  %2453 = and i1 %2450, %2452
  br i1 %2453, label %2454, label %6330

2454:                                             ; preds = %2447
  %2455 = bitcast i8* %1 to i32*
  %2456 = load i32, i32* %2455, align 4
  %2457 = sext i32 %2456 to i64
  %2458 = sub i64 %2439, %2457
  %2459 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2460 = load i32, i32* %2459, align 8
  %2461 = add i32 %2460, 1
  store i32 %2461, i32* %2459, align 8
  %2462 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2463 = load i32, i32* %2462, align 8
  %2464 = add i32 %2463, 1
  store i32 %2464, i32* %2462, align 8
  %2465 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2466 = load i32, i32* %2465, align 4
  %2467 = icmp ugt i32 %2461, %2466
  br i1 %2467, label %6330, label %2468

2468:                                             ; preds = %2454
  %2469 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2470 = load i32, i32* %2469, align 4
  %2471 = icmp ugt i32 %2464, %2470
  br i1 %2471, label %6330, label %2472

2472:                                             ; preds = %2468
  %2473 = and i64 %2458, 1
  %2474 = icmp eq i64 %2473, 0
  br i1 %2474, label %2479, label %2475

2475:                                             ; preds = %2472
  %2476 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2477 = load i8, i8* %2476, align 8, !range !5
  %2478 = icmp eq i8 %2477, 0
  br i1 %2478, label %2479, label %6330

2479:                                             ; preds = %2475, %2472
  %2480 = add i64 %2449, -2
  %2481 = icmp ult i64 %2480, %2458
  br i1 %2481, label %6330, label %2482

2482:                                             ; preds = %2479
  %2483 = getelementptr inbounds i8, i8* %2442, i64 %2458
  %2484 = bitcast i8* %2483 to i16*
  %2485 = load i16, i16* %2484, align 2
  %2486 = zext i16 %2485 to i64
  %2487 = and i64 %2486, 1
  %2488 = icmp eq i64 %2487, 0
  br i1 %2488, label %2493, label %2489

2489:                                             ; preds = %2482
  %2490 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2491 = load i8, i8* %2490, align 8, !range !5
  %2492 = icmp eq i8 %2491, 0
  br i1 %2492, label %2493, label %6330

2493:                                             ; preds = %2489, %2482
  %2494 = icmp ugt i64 %2449, %2486
  %2495 = sub i64 %2449, %2486
  %2496 = icmp uge i64 %2495, %2458
  %2497 = and i1 %2494, %2496
  br i1 %2497, label %2498, label %6330

2498:                                             ; preds = %2493
  store i32 %2460, i32* %2459, align 8
  br label %6330

2499:                                             ; preds = %3
  %2500 = icmp eq i8* %1, null
  br i1 %2500, label %6330, label %2501

2501:                                             ; preds = %2499
  %2502 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2503 = load i64, i64* %2502, align 8
  %2504 = ptrtoint i8* %1 to i64
  %2505 = sub i64 %2504, %2503
  %2506 = and i64 %2505, 3
  %2507 = icmp eq i64 %2506, 0
  %2508 = inttoptr i64 %2503 to i8*
  br i1 %2507, label %2513, label %2509

2509:                                             ; preds = %2501
  %2510 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2511 = load i8, i8* %2510, align 8, !range !5
  %2512 = icmp eq i8 %2511, 0
  br i1 %2512, label %2513, label %6330

2513:                                             ; preds = %2509, %2501
  %2514 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2515 = load i64, i64* %2514, align 8
  %2516 = icmp ugt i64 %2515, 4
  %2517 = add i64 %2515, -4
  %2518 = icmp uge i64 %2517, %2505
  %2519 = and i1 %2516, %2518
  br i1 %2519, label %2520, label %6330

2520:                                             ; preds = %2513
  %2521 = bitcast i8* %1 to i32*
  %2522 = load i32, i32* %2521, align 4
  %2523 = sext i32 %2522 to i64
  %2524 = sub i64 %2505, %2523
  %2525 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2526 = load i32, i32* %2525, align 8
  %2527 = add i32 %2526, 1
  store i32 %2527, i32* %2525, align 8
  %2528 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2529 = load i32, i32* %2528, align 8
  %2530 = add i32 %2529, 1
  store i32 %2530, i32* %2528, align 8
  %2531 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2532 = load i32, i32* %2531, align 4
  %2533 = icmp ugt i32 %2527, %2532
  br i1 %2533, label %6330, label %2534

2534:                                             ; preds = %2520
  %2535 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2536 = load i32, i32* %2535, align 4
  %2537 = icmp ugt i32 %2530, %2536
  br i1 %2537, label %6330, label %2538

2538:                                             ; preds = %2534
  %2539 = and i64 %2524, 1
  %2540 = icmp eq i64 %2539, 0
  br i1 %2540, label %2545, label %2541

2541:                                             ; preds = %2538
  %2542 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2543 = load i8, i8* %2542, align 8, !range !5
  %2544 = icmp eq i8 %2543, 0
  br i1 %2544, label %2545, label %6330

2545:                                             ; preds = %2541, %2538
  %2546 = add i64 %2515, -2
  %2547 = icmp ult i64 %2546, %2524
  br i1 %2547, label %6330, label %2548

2548:                                             ; preds = %2545
  %2549 = getelementptr inbounds i8, i8* %2508, i64 %2524
  %2550 = bitcast i8* %2549 to i16*
  %2551 = load i16, i16* %2550, align 2
  %2552 = zext i16 %2551 to i64
  %2553 = and i64 %2552, 1
  %2554 = icmp eq i64 %2553, 0
  br i1 %2554, label %2559, label %2555

2555:                                             ; preds = %2548
  %2556 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2557 = load i8, i8* %2556, align 8, !range !5
  %2558 = icmp eq i8 %2557, 0
  br i1 %2558, label %2559, label %6330

2559:                                             ; preds = %2555, %2548
  %2560 = icmp ugt i64 %2515, %2552
  %2561 = sub i64 %2515, %2552
  %2562 = icmp uge i64 %2561, %2524
  %2563 = and i1 %2560, %2562
  br i1 %2563, label %2564, label %6330

2564:                                             ; preds = %2559
  store i32 %2526, i32* %2525, align 8
  br label %6330

2565:                                             ; preds = %3
  %2566 = icmp eq i8* %1, null
  br i1 %2566, label %6330, label %2567

2567:                                             ; preds = %2565
  %2568 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2569 = load i64, i64* %2568, align 8
  %2570 = ptrtoint i8* %1 to i64
  %2571 = sub i64 %2570, %2569
  %2572 = and i64 %2571, 3
  %2573 = icmp eq i64 %2572, 0
  %2574 = inttoptr i64 %2569 to i8*
  br i1 %2573, label %2579, label %2575

2575:                                             ; preds = %2567
  %2576 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2577 = load i8, i8* %2576, align 8, !range !5
  %2578 = icmp eq i8 %2577, 0
  br i1 %2578, label %2579, label %6330

2579:                                             ; preds = %2575, %2567
  %2580 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2581 = load i64, i64* %2580, align 8
  %2582 = icmp ugt i64 %2581, 4
  %2583 = add i64 %2581, -4
  %2584 = icmp uge i64 %2583, %2571
  %2585 = and i1 %2582, %2584
  br i1 %2585, label %2586, label %6330

2586:                                             ; preds = %2579
  %2587 = bitcast i8* %1 to i32*
  %2588 = load i32, i32* %2587, align 4
  %2589 = sext i32 %2588 to i64
  %2590 = sub i64 %2571, %2589
  %2591 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2592 = load i32, i32* %2591, align 8
  %2593 = add i32 %2592, 1
  store i32 %2593, i32* %2591, align 8
  %2594 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2595 = load i32, i32* %2594, align 8
  %2596 = add i32 %2595, 1
  store i32 %2596, i32* %2594, align 8
  %2597 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2598 = load i32, i32* %2597, align 4
  %2599 = icmp ugt i32 %2593, %2598
  br i1 %2599, label %6330, label %2600

2600:                                             ; preds = %2586
  %2601 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2602 = load i32, i32* %2601, align 4
  %2603 = icmp ugt i32 %2596, %2602
  br i1 %2603, label %6330, label %2604

2604:                                             ; preds = %2600
  %2605 = and i64 %2590, 1
  %2606 = icmp eq i64 %2605, 0
  br i1 %2606, label %2611, label %2607

2607:                                             ; preds = %2604
  %2608 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2609 = load i8, i8* %2608, align 8, !range !5
  %2610 = icmp eq i8 %2609, 0
  br i1 %2610, label %2611, label %6330

2611:                                             ; preds = %2607, %2604
  %2612 = add i64 %2581, -2
  %2613 = icmp ult i64 %2612, %2590
  br i1 %2613, label %6330, label %2614

2614:                                             ; preds = %2611
  %2615 = getelementptr inbounds i8, i8* %2574, i64 %2590
  %2616 = bitcast i8* %2615 to i16*
  %2617 = load i16, i16* %2616, align 2
  %2618 = zext i16 %2617 to i64
  %2619 = and i64 %2618, 1
  %2620 = icmp eq i64 %2619, 0
  br i1 %2620, label %2625, label %2621

2621:                                             ; preds = %2614
  %2622 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2623 = load i8, i8* %2622, align 8, !range !5
  %2624 = icmp eq i8 %2623, 0
  br i1 %2624, label %2625, label %6330

2625:                                             ; preds = %2621, %2614
  %2626 = icmp ugt i64 %2581, %2618
  %2627 = sub i64 %2581, %2618
  %2628 = icmp uge i64 %2627, %2590
  %2629 = and i1 %2626, %2628
  br i1 %2629, label %2630, label %6330

2630:                                             ; preds = %2625
  store i32 %2592, i32* %2591, align 8
  br label %6330

2631:                                             ; preds = %3
  %2632 = icmp eq i8* %1, null
  br i1 %2632, label %6330, label %2633

2633:                                             ; preds = %2631
  %2634 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2635 = load i64, i64* %2634, align 8
  %2636 = ptrtoint i8* %1 to i64
  %2637 = sub i64 %2636, %2635
  %2638 = and i64 %2637, 3
  %2639 = icmp eq i64 %2638, 0
  %2640 = inttoptr i64 %2635 to i8*
  br i1 %2639, label %2645, label %2641

2641:                                             ; preds = %2633
  %2642 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2643 = load i8, i8* %2642, align 8, !range !5
  %2644 = icmp eq i8 %2643, 0
  br i1 %2644, label %2645, label %6330

2645:                                             ; preds = %2641, %2633
  %2646 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2647 = load i64, i64* %2646, align 8
  %2648 = icmp ugt i64 %2647, 4
  %2649 = add i64 %2647, -4
  %2650 = icmp uge i64 %2649, %2637
  %2651 = and i1 %2648, %2650
  br i1 %2651, label %2652, label %6330

2652:                                             ; preds = %2645
  %2653 = bitcast i8* %1 to i32*
  %2654 = load i32, i32* %2653, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = sub i64 %2637, %2655
  %2657 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2658 = load i32, i32* %2657, align 8
  %2659 = add i32 %2658, 1
  store i32 %2659, i32* %2657, align 8
  %2660 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2661 = load i32, i32* %2660, align 8
  %2662 = add i32 %2661, 1
  store i32 %2662, i32* %2660, align 8
  %2663 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2664 = load i32, i32* %2663, align 4
  %2665 = icmp ugt i32 %2659, %2664
  br i1 %2665, label %6330, label %2666

2666:                                             ; preds = %2652
  %2667 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2668 = load i32, i32* %2667, align 4
  %2669 = icmp ugt i32 %2662, %2668
  br i1 %2669, label %6330, label %2670

2670:                                             ; preds = %2666
  %2671 = and i64 %2656, 1
  %2672 = icmp eq i64 %2671, 0
  br i1 %2672, label %2677, label %2673

2673:                                             ; preds = %2670
  %2674 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2675 = load i8, i8* %2674, align 8, !range !5
  %2676 = icmp eq i8 %2675, 0
  br i1 %2676, label %2677, label %6330

2677:                                             ; preds = %2673, %2670
  %2678 = add i64 %2647, -2
  %2679 = icmp ult i64 %2678, %2656
  br i1 %2679, label %6330, label %2680

2680:                                             ; preds = %2677
  %2681 = getelementptr inbounds i8, i8* %2640, i64 %2656
  %2682 = bitcast i8* %2681 to i16*
  %2683 = load i16, i16* %2682, align 2
  %2684 = zext i16 %2683 to i64
  %2685 = and i64 %2684, 1
  %2686 = icmp eq i64 %2685, 0
  br i1 %2686, label %2691, label %2687

2687:                                             ; preds = %2680
  %2688 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2689 = load i8, i8* %2688, align 8, !range !5
  %2690 = icmp eq i8 %2689, 0
  br i1 %2690, label %2691, label %6330

2691:                                             ; preds = %2687, %2680
  %2692 = icmp ugt i64 %2647, %2684
  %2693 = sub i64 %2647, %2684
  %2694 = icmp uge i64 %2693, %2656
  %2695 = and i1 %2692, %2694
  br i1 %2695, label %2696, label %6330

2696:                                             ; preds = %2691
  store i32 %2658, i32* %2657, align 8
  br label %6330

2697:                                             ; preds = %3
  %2698 = icmp eq i8* %1, null
  br i1 %2698, label %6330, label %2699

2699:                                             ; preds = %2697
  %2700 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2701 = load i64, i64* %2700, align 8
  %2702 = ptrtoint i8* %1 to i64
  %2703 = sub i64 %2702, %2701
  %2704 = and i64 %2703, 3
  %2705 = icmp eq i64 %2704, 0
  %2706 = inttoptr i64 %2701 to i8*
  br i1 %2705, label %2711, label %2707

2707:                                             ; preds = %2699
  %2708 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2709 = load i8, i8* %2708, align 8, !range !5
  %2710 = icmp eq i8 %2709, 0
  br i1 %2710, label %2711, label %6330

2711:                                             ; preds = %2707, %2699
  %2712 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2713 = load i64, i64* %2712, align 8
  %2714 = icmp ugt i64 %2713, 4
  %2715 = add i64 %2713, -4
  %2716 = icmp uge i64 %2715, %2703
  %2717 = and i1 %2714, %2716
  br i1 %2717, label %2718, label %6330

2718:                                             ; preds = %2711
  %2719 = bitcast i8* %1 to i32*
  %2720 = load i32, i32* %2719, align 4
  %2721 = sext i32 %2720 to i64
  %2722 = sub i64 %2703, %2721
  %2723 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2724 = load i32, i32* %2723, align 8
  %2725 = add i32 %2724, 1
  store i32 %2725, i32* %2723, align 8
  %2726 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2727 = load i32, i32* %2726, align 8
  %2728 = add i32 %2727, 1
  store i32 %2728, i32* %2726, align 8
  %2729 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2730 = load i32, i32* %2729, align 4
  %2731 = icmp ugt i32 %2725, %2730
  br i1 %2731, label %6330, label %2732

2732:                                             ; preds = %2718
  %2733 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2734 = load i32, i32* %2733, align 4
  %2735 = icmp ugt i32 %2728, %2734
  br i1 %2735, label %6330, label %2736

2736:                                             ; preds = %2732
  %2737 = and i64 %2722, 1
  %2738 = icmp eq i64 %2737, 0
  br i1 %2738, label %2743, label %2739

2739:                                             ; preds = %2736
  %2740 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2741 = load i8, i8* %2740, align 8, !range !5
  %2742 = icmp eq i8 %2741, 0
  br i1 %2742, label %2743, label %6330

2743:                                             ; preds = %2739, %2736
  %2744 = add i64 %2713, -2
  %2745 = icmp ult i64 %2744, %2722
  br i1 %2745, label %6330, label %2746

2746:                                             ; preds = %2743
  %2747 = getelementptr inbounds i8, i8* %2706, i64 %2722
  %2748 = bitcast i8* %2747 to i16*
  %2749 = load i16, i16* %2748, align 2
  %2750 = zext i16 %2749 to i64
  %2751 = and i64 %2750, 1
  %2752 = icmp eq i64 %2751, 0
  br i1 %2752, label %2757, label %2753

2753:                                             ; preds = %2746
  %2754 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2755 = load i8, i8* %2754, align 8, !range !5
  %2756 = icmp eq i8 %2755, 0
  br i1 %2756, label %2757, label %6330

2757:                                             ; preds = %2753, %2746
  %2758 = icmp ugt i64 %2713, %2750
  %2759 = sub i64 %2713, %2750
  %2760 = icmp uge i64 %2759, %2722
  %2761 = and i1 %2758, %2760
  br i1 %2761, label %2762, label %6330

2762:                                             ; preds = %2757
  store i32 %2724, i32* %2723, align 8
  br label %6330

2763:                                             ; preds = %3
  %2764 = icmp eq i8* %1, null
  br i1 %2764, label %6330, label %2765

2765:                                             ; preds = %2763
  %2766 = bitcast i8* %1 to %"struct.tflite::TransposeConvOptions"*
  %2767 = tail call zeroext i1 @_ZNK6tflite20TransposeConvOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::TransposeConvOptions"* nonnull %2766, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

2768:                                             ; preds = %3
  %2769 = bitcast i8* %1 to %"struct.tflite::SparseToDenseOptions"*
  %2770 = icmp eq i8* %1, null
  br i1 %2770, label %6330, label %2771

2771:                                             ; preds = %2768
  %2772 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2773 = load i64, i64* %2772, align 8
  %2774 = ptrtoint i8* %1 to i64
  %2775 = sub i64 %2774, %2773
  %2776 = and i64 %2775, 3
  %2777 = icmp eq i64 %2776, 0
  %2778 = inttoptr i64 %2773 to i8*
  br i1 %2777, label %2783, label %2779

2779:                                             ; preds = %2771
  %2780 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2781 = load i8, i8* %2780, align 8, !range !5
  %2782 = icmp eq i8 %2781, 0
  br i1 %2782, label %2783, label %6330

2783:                                             ; preds = %2779, %2771
  %2784 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2785 = load i64, i64* %2784, align 8
  %2786 = icmp ugt i64 %2785, 4
  %2787 = add i64 %2785, -4
  %2788 = icmp uge i64 %2787, %2775
  %2789 = and i1 %2786, %2788
  br i1 %2789, label %2790, label %6330

2790:                                             ; preds = %2783
  %2791 = bitcast i8* %1 to i32*
  %2792 = load i32, i32* %2791, align 4
  %2793 = sext i32 %2792 to i64
  %2794 = sub i64 %2775, %2793
  %2795 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2796 = load i32, i32* %2795, align 8
  %2797 = add i32 %2796, 1
  store i32 %2797, i32* %2795, align 8
  %2798 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2799 = load i32, i32* %2798, align 8
  %2800 = add i32 %2799, 1
  store i32 %2800, i32* %2798, align 8
  %2801 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2802 = load i32, i32* %2801, align 4
  %2803 = icmp ugt i32 %2797, %2802
  br i1 %2803, label %6330, label %2804

2804:                                             ; preds = %2790
  %2805 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2806 = load i32, i32* %2805, align 4
  %2807 = icmp ugt i32 %2800, %2806
  br i1 %2807, label %6330, label %2808

2808:                                             ; preds = %2804
  %2809 = and i64 %2794, 1
  %2810 = icmp eq i64 %2809, 0
  br i1 %2810, label %2815, label %2811

2811:                                             ; preds = %2808
  %2812 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2813 = load i8, i8* %2812, align 8, !range !5
  %2814 = icmp eq i8 %2813, 0
  br i1 %2814, label %2815, label %6330

2815:                                             ; preds = %2811, %2808
  %2816 = add i64 %2785, -2
  %2817 = icmp ult i64 %2816, %2794
  br i1 %2817, label %6330, label %2818

2818:                                             ; preds = %2815
  %2819 = getelementptr inbounds i8, i8* %2778, i64 %2794
  %2820 = bitcast i8* %2819 to i16*
  %2821 = load i16, i16* %2820, align 2
  %2822 = zext i16 %2821 to i64
  %2823 = and i64 %2822, 1
  %2824 = icmp eq i64 %2823, 0
  br i1 %2824, label %2829, label %2825

2825:                                             ; preds = %2818
  %2826 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2827 = load i8, i8* %2826, align 8, !range !5
  %2828 = icmp eq i8 %2827, 0
  br i1 %2828, label %2829, label %6330

2829:                                             ; preds = %2818, %2825
  %2830 = icmp ugt i64 %2785, %2822
  %2831 = sub i64 %2785, %2822
  %2832 = icmp uge i64 %2831, %2794
  %2833 = and i1 %2830, %2832
  br i1 %2833, label %2834, label %6330

2834:                                             ; preds = %2829
  %2835 = load i32, i32* %2791, align 4
  %2836 = sext i32 %2835 to i64
  %2837 = sub nsw i64 0, %2836
  %2838 = getelementptr inbounds %"struct.tflite::SparseToDenseOptions", %"struct.tflite::SparseToDenseOptions"* %2769, i64 0, i32 0, i32 0, i64 %2837
  %2839 = bitcast i8* %2838 to i16*
  %2840 = load i16, i16* %2839, align 2
  %2841 = icmp ugt i16 %2840, 4
  br i1 %2841, label %2842, label %2852

2842:                                             ; preds = %2834
  %2843 = getelementptr inbounds i8, i8* %2838, i64 4
  %2844 = bitcast i8* %2843 to i16*
  %2845 = load i16, i16* %2844, align 2
  %2846 = icmp eq i16 %2845, 0
  br i1 %2846, label %2852, label %2847

2847:                                             ; preds = %2842
  %2848 = zext i16 %2845 to i64
  %2849 = add i64 %2775, %2848
  %2850 = add i64 %2785, -1
  %2851 = icmp ult i64 %2850, %2849
  br i1 %2851, label %6330, label %2852

2852:                                             ; preds = %2847, %2842, %2834
  store i32 %2796, i32* %2795, align 8
  br label %6330

2853:                                             ; preds = %3
  %2854 = icmp eq i8* %1, null
  br i1 %2854, label %6330, label %2855

2855:                                             ; preds = %2853
  %2856 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2857 = load i64, i64* %2856, align 8
  %2858 = ptrtoint i8* %1 to i64
  %2859 = sub i64 %2858, %2857
  %2860 = and i64 %2859, 3
  %2861 = icmp eq i64 %2860, 0
  %2862 = inttoptr i64 %2857 to i8*
  br i1 %2861, label %2867, label %2863

2863:                                             ; preds = %2855
  %2864 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2865 = load i8, i8* %2864, align 8, !range !5
  %2866 = icmp eq i8 %2865, 0
  br i1 %2866, label %2867, label %6330

2867:                                             ; preds = %2863, %2855
  %2868 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2869 = load i64, i64* %2868, align 8
  %2870 = icmp ugt i64 %2869, 4
  %2871 = add i64 %2869, -4
  %2872 = icmp uge i64 %2871, %2859
  %2873 = and i1 %2870, %2872
  br i1 %2873, label %2874, label %6330

2874:                                             ; preds = %2867
  %2875 = bitcast i8* %1 to i32*
  %2876 = load i32, i32* %2875, align 4
  %2877 = sext i32 %2876 to i64
  %2878 = sub i64 %2859, %2877
  %2879 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2880 = load i32, i32* %2879, align 8
  %2881 = add i32 %2880, 1
  store i32 %2881, i32* %2879, align 8
  %2882 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2883 = load i32, i32* %2882, align 8
  %2884 = add i32 %2883, 1
  store i32 %2884, i32* %2882, align 8
  %2885 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2886 = load i32, i32* %2885, align 4
  %2887 = icmp ugt i32 %2881, %2886
  br i1 %2887, label %6330, label %2888

2888:                                             ; preds = %2874
  %2889 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2890 = load i32, i32* %2889, align 4
  %2891 = icmp ugt i32 %2884, %2890
  br i1 %2891, label %6330, label %2892

2892:                                             ; preds = %2888
  %2893 = and i64 %2878, 1
  %2894 = icmp eq i64 %2893, 0
  br i1 %2894, label %2899, label %2895

2895:                                             ; preds = %2892
  %2896 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2897 = load i8, i8* %2896, align 8, !range !5
  %2898 = icmp eq i8 %2897, 0
  br i1 %2898, label %2899, label %6330

2899:                                             ; preds = %2895, %2892
  %2900 = add i64 %2869, -2
  %2901 = icmp ult i64 %2900, %2878
  br i1 %2901, label %6330, label %2902

2902:                                             ; preds = %2899
  %2903 = getelementptr inbounds i8, i8* %2862, i64 %2878
  %2904 = bitcast i8* %2903 to i16*
  %2905 = load i16, i16* %2904, align 2
  %2906 = zext i16 %2905 to i64
  %2907 = and i64 %2906, 1
  %2908 = icmp eq i64 %2907, 0
  br i1 %2908, label %2913, label %2909

2909:                                             ; preds = %2902
  %2910 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2911 = load i8, i8* %2910, align 8, !range !5
  %2912 = icmp eq i8 %2911, 0
  br i1 %2912, label %2913, label %6330

2913:                                             ; preds = %2909, %2902
  %2914 = icmp ugt i64 %2869, %2906
  %2915 = sub i64 %2869, %2906
  %2916 = icmp uge i64 %2915, %2878
  %2917 = and i1 %2914, %2916
  br i1 %2917, label %2918, label %6330

2918:                                             ; preds = %2913
  store i32 %2880, i32* %2879, align 8
  br label %6330

2919:                                             ; preds = %3
  %2920 = icmp eq i8* %1, null
  br i1 %2920, label %6330, label %2921

2921:                                             ; preds = %2919
  %2922 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2923 = load i64, i64* %2922, align 8
  %2924 = ptrtoint i8* %1 to i64
  %2925 = sub i64 %2924, %2923
  %2926 = and i64 %2925, 3
  %2927 = icmp eq i64 %2926, 0
  %2928 = inttoptr i64 %2923 to i8*
  br i1 %2927, label %2933, label %2929

2929:                                             ; preds = %2921
  %2930 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2931 = load i8, i8* %2930, align 8, !range !5
  %2932 = icmp eq i8 %2931, 0
  br i1 %2932, label %2933, label %6330

2933:                                             ; preds = %2929, %2921
  %2934 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %2935 = load i64, i64* %2934, align 8
  %2936 = icmp ugt i64 %2935, 4
  %2937 = add i64 %2935, -4
  %2938 = icmp uge i64 %2937, %2925
  %2939 = and i1 %2936, %2938
  br i1 %2939, label %2940, label %6330

2940:                                             ; preds = %2933
  %2941 = bitcast i8* %1 to i32*
  %2942 = load i32, i32* %2941, align 4
  %2943 = sext i32 %2942 to i64
  %2944 = sub i64 %2925, %2943
  %2945 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %2946 = load i32, i32* %2945, align 8
  %2947 = add i32 %2946, 1
  store i32 %2947, i32* %2945, align 8
  %2948 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %2949 = load i32, i32* %2948, align 8
  %2950 = add i32 %2949, 1
  store i32 %2950, i32* %2948, align 8
  %2951 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %2952 = load i32, i32* %2951, align 4
  %2953 = icmp ugt i32 %2947, %2952
  br i1 %2953, label %6330, label %2954

2954:                                             ; preds = %2940
  %2955 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %2956 = load i32, i32* %2955, align 4
  %2957 = icmp ugt i32 %2950, %2956
  br i1 %2957, label %6330, label %2958

2958:                                             ; preds = %2954
  %2959 = and i64 %2944, 1
  %2960 = icmp eq i64 %2959, 0
  br i1 %2960, label %2965, label %2961

2961:                                             ; preds = %2958
  %2962 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2963 = load i8, i8* %2962, align 8, !range !5
  %2964 = icmp eq i8 %2963, 0
  br i1 %2964, label %2965, label %6330

2965:                                             ; preds = %2961, %2958
  %2966 = add i64 %2935, -2
  %2967 = icmp ult i64 %2966, %2944
  br i1 %2967, label %6330, label %2968

2968:                                             ; preds = %2965
  %2969 = getelementptr inbounds i8, i8* %2928, i64 %2944
  %2970 = bitcast i8* %2969 to i16*
  %2971 = load i16, i16* %2970, align 2
  %2972 = zext i16 %2971 to i64
  %2973 = and i64 %2972, 1
  %2974 = icmp eq i64 %2973, 0
  br i1 %2974, label %2979, label %2975

2975:                                             ; preds = %2968
  %2976 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2977 = load i8, i8* %2976, align 8, !range !5
  %2978 = icmp eq i8 %2977, 0
  br i1 %2978, label %2979, label %6330

2979:                                             ; preds = %2975, %2968
  %2980 = icmp ugt i64 %2935, %2972
  %2981 = sub i64 %2935, %2972
  %2982 = icmp uge i64 %2981, %2944
  %2983 = and i1 %2980, %2982
  br i1 %2983, label %2984, label %6330

2984:                                             ; preds = %2979
  store i32 %2946, i32* %2945, align 8
  br label %6330

2985:                                             ; preds = %3
  %2986 = icmp eq i8* %1, null
  br i1 %2986, label %6330, label %2987

2987:                                             ; preds = %2985
  %2988 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %2989 = load i64, i64* %2988, align 8
  %2990 = ptrtoint i8* %1 to i64
  %2991 = sub i64 %2990, %2989
  %2992 = and i64 %2991, 3
  %2993 = icmp eq i64 %2992, 0
  %2994 = inttoptr i64 %2989 to i8*
  br i1 %2993, label %2999, label %2995

2995:                                             ; preds = %2987
  %2996 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %2997 = load i8, i8* %2996, align 8, !range !5
  %2998 = icmp eq i8 %2997, 0
  br i1 %2998, label %2999, label %6330

2999:                                             ; preds = %2995, %2987
  %3000 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3001 = load i64, i64* %3000, align 8
  %3002 = icmp ugt i64 %3001, 4
  %3003 = add i64 %3001, -4
  %3004 = icmp uge i64 %3003, %2991
  %3005 = and i1 %3002, %3004
  br i1 %3005, label %3006, label %6330

3006:                                             ; preds = %2999
  %3007 = bitcast i8* %1 to i32*
  %3008 = load i32, i32* %3007, align 4
  %3009 = sext i32 %3008 to i64
  %3010 = sub i64 %2991, %3009
  %3011 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3012 = load i32, i32* %3011, align 8
  %3013 = add i32 %3012, 1
  store i32 %3013, i32* %3011, align 8
  %3014 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3015 = load i32, i32* %3014, align 8
  %3016 = add i32 %3015, 1
  store i32 %3016, i32* %3014, align 8
  %3017 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3018 = load i32, i32* %3017, align 4
  %3019 = icmp ugt i32 %3013, %3018
  br i1 %3019, label %6330, label %3020

3020:                                             ; preds = %3006
  %3021 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3022 = load i32, i32* %3021, align 4
  %3023 = icmp ugt i32 %3016, %3022
  br i1 %3023, label %6330, label %3024

3024:                                             ; preds = %3020
  %3025 = and i64 %3010, 1
  %3026 = icmp eq i64 %3025, 0
  br i1 %3026, label %3031, label %3027

3027:                                             ; preds = %3024
  %3028 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3029 = load i8, i8* %3028, align 8, !range !5
  %3030 = icmp eq i8 %3029, 0
  br i1 %3030, label %3031, label %6330

3031:                                             ; preds = %3027, %3024
  %3032 = add i64 %3001, -2
  %3033 = icmp ult i64 %3032, %3010
  br i1 %3033, label %6330, label %3034

3034:                                             ; preds = %3031
  %3035 = getelementptr inbounds i8, i8* %2994, i64 %3010
  %3036 = bitcast i8* %3035 to i16*
  %3037 = load i16, i16* %3036, align 2
  %3038 = zext i16 %3037 to i64
  %3039 = and i64 %3038, 1
  %3040 = icmp eq i64 %3039, 0
  br i1 %3040, label %3045, label %3041

3041:                                             ; preds = %3034
  %3042 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3043 = load i8, i8* %3042, align 8, !range !5
  %3044 = icmp eq i8 %3043, 0
  br i1 %3044, label %3045, label %6330

3045:                                             ; preds = %3041, %3034
  %3046 = icmp ugt i64 %3001, %3038
  %3047 = sub i64 %3001, %3038
  %3048 = icmp uge i64 %3047, %3010
  %3049 = and i1 %3046, %3048
  br i1 %3049, label %3050, label %6330

3050:                                             ; preds = %3045
  store i32 %3012, i32* %3011, align 8
  br label %6330

3051:                                             ; preds = %3
  %3052 = icmp eq i8* %1, null
  br i1 %3052, label %6330, label %3053

3053:                                             ; preds = %3051
  %3054 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3055 = load i64, i64* %3054, align 8
  %3056 = ptrtoint i8* %1 to i64
  %3057 = sub i64 %3056, %3055
  %3058 = and i64 %3057, 3
  %3059 = icmp eq i64 %3058, 0
  %3060 = inttoptr i64 %3055 to i8*
  br i1 %3059, label %3065, label %3061

3061:                                             ; preds = %3053
  %3062 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3063 = load i8, i8* %3062, align 8, !range !5
  %3064 = icmp eq i8 %3063, 0
  br i1 %3064, label %3065, label %6330

3065:                                             ; preds = %3061, %3053
  %3066 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3067 = load i64, i64* %3066, align 8
  %3068 = icmp ugt i64 %3067, 4
  %3069 = add i64 %3067, -4
  %3070 = icmp uge i64 %3069, %3057
  %3071 = and i1 %3068, %3070
  br i1 %3071, label %3072, label %6330

3072:                                             ; preds = %3065
  %3073 = bitcast i8* %1 to i32*
  %3074 = load i32, i32* %3073, align 4
  %3075 = sext i32 %3074 to i64
  %3076 = sub i64 %3057, %3075
  %3077 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3078 = load i32, i32* %3077, align 8
  %3079 = add i32 %3078, 1
  store i32 %3079, i32* %3077, align 8
  %3080 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3081 = load i32, i32* %3080, align 8
  %3082 = add i32 %3081, 1
  store i32 %3082, i32* %3080, align 8
  %3083 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3084 = load i32, i32* %3083, align 4
  %3085 = icmp ugt i32 %3079, %3084
  br i1 %3085, label %6330, label %3086

3086:                                             ; preds = %3072
  %3087 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3088 = load i32, i32* %3087, align 4
  %3089 = icmp ugt i32 %3082, %3088
  br i1 %3089, label %6330, label %3090

3090:                                             ; preds = %3086
  %3091 = and i64 %3076, 1
  %3092 = icmp eq i64 %3091, 0
  br i1 %3092, label %3097, label %3093

3093:                                             ; preds = %3090
  %3094 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3095 = load i8, i8* %3094, align 8, !range !5
  %3096 = icmp eq i8 %3095, 0
  br i1 %3096, label %3097, label %6330

3097:                                             ; preds = %3093, %3090
  %3098 = add i64 %3067, -2
  %3099 = icmp ult i64 %3098, %3076
  br i1 %3099, label %6330, label %3100

3100:                                             ; preds = %3097
  %3101 = getelementptr inbounds i8, i8* %3060, i64 %3076
  %3102 = bitcast i8* %3101 to i16*
  %3103 = load i16, i16* %3102, align 2
  %3104 = zext i16 %3103 to i64
  %3105 = and i64 %3104, 1
  %3106 = icmp eq i64 %3105, 0
  br i1 %3106, label %3111, label %3107

3107:                                             ; preds = %3100
  %3108 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3109 = load i8, i8* %3108, align 8, !range !5
  %3110 = icmp eq i8 %3109, 0
  br i1 %3110, label %3111, label %6330

3111:                                             ; preds = %3107, %3100
  %3112 = icmp ugt i64 %3067, %3104
  %3113 = sub i64 %3067, %3104
  %3114 = icmp uge i64 %3113, %3076
  %3115 = and i1 %3112, %3114
  br i1 %3115, label %3116, label %6330

3116:                                             ; preds = %3111
  store i32 %3078, i32* %3077, align 8
  br label %6330

3117:                                             ; preds = %3
  %3118 = bitcast i8* %1 to %"struct.tflite::ShapeOptions"*
  %3119 = icmp eq i8* %1, null
  br i1 %3119, label %6330, label %3120

3120:                                             ; preds = %3117
  %3121 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3122 = load i64, i64* %3121, align 8
  %3123 = ptrtoint i8* %1 to i64
  %3124 = sub i64 %3123, %3122
  %3125 = and i64 %3124, 3
  %3126 = icmp eq i64 %3125, 0
  %3127 = inttoptr i64 %3122 to i8*
  br i1 %3126, label %3132, label %3128

3128:                                             ; preds = %3120
  %3129 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3130 = load i8, i8* %3129, align 8, !range !5
  %3131 = icmp eq i8 %3130, 0
  br i1 %3131, label %3132, label %6330

3132:                                             ; preds = %3128, %3120
  %3133 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3134 = load i64, i64* %3133, align 8
  %3135 = icmp ugt i64 %3134, 4
  %3136 = add i64 %3134, -4
  %3137 = icmp uge i64 %3136, %3124
  %3138 = and i1 %3135, %3137
  br i1 %3138, label %3139, label %6330

3139:                                             ; preds = %3132
  %3140 = bitcast i8* %1 to i32*
  %3141 = load i32, i32* %3140, align 4
  %3142 = sext i32 %3141 to i64
  %3143 = sub i64 %3124, %3142
  %3144 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3145 = load i32, i32* %3144, align 8
  %3146 = add i32 %3145, 1
  store i32 %3146, i32* %3144, align 8
  %3147 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3148 = load i32, i32* %3147, align 8
  %3149 = add i32 %3148, 1
  store i32 %3149, i32* %3147, align 8
  %3150 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3151 = load i32, i32* %3150, align 4
  %3152 = icmp ugt i32 %3146, %3151
  br i1 %3152, label %6330, label %3153

3153:                                             ; preds = %3139
  %3154 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3155 = load i32, i32* %3154, align 4
  %3156 = icmp ugt i32 %3149, %3155
  br i1 %3156, label %6330, label %3157

3157:                                             ; preds = %3153
  %3158 = and i64 %3143, 1
  %3159 = icmp eq i64 %3158, 0
  br i1 %3159, label %3164, label %3160

3160:                                             ; preds = %3157
  %3161 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3162 = load i8, i8* %3161, align 8, !range !5
  %3163 = icmp eq i8 %3162, 0
  br i1 %3163, label %3164, label %6330

3164:                                             ; preds = %3160, %3157
  %3165 = add i64 %3134, -2
  %3166 = icmp ult i64 %3165, %3143
  br i1 %3166, label %6330, label %3167

3167:                                             ; preds = %3164
  %3168 = getelementptr inbounds i8, i8* %3127, i64 %3143
  %3169 = bitcast i8* %3168 to i16*
  %3170 = load i16, i16* %3169, align 2
  %3171 = zext i16 %3170 to i64
  %3172 = and i64 %3171, 1
  %3173 = icmp eq i64 %3172, 0
  br i1 %3173, label %3178, label %3174

3174:                                             ; preds = %3167
  %3175 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3176 = load i8, i8* %3175, align 8, !range !5
  %3177 = icmp eq i8 %3176, 0
  br i1 %3177, label %3178, label %6330

3178:                                             ; preds = %3167, %3174
  %3179 = icmp ugt i64 %3134, %3171
  %3180 = sub i64 %3134, %3171
  %3181 = icmp uge i64 %3180, %3143
  %3182 = and i1 %3179, %3181
  br i1 %3182, label %3183, label %6330

3183:                                             ; preds = %3178
  %3184 = load i32, i32* %3140, align 4
  %3185 = sext i32 %3184 to i64
  %3186 = sub nsw i64 0, %3185
  %3187 = getelementptr inbounds %"struct.tflite::ShapeOptions", %"struct.tflite::ShapeOptions"* %3118, i64 0, i32 0, i32 0, i64 %3186
  %3188 = bitcast i8* %3187 to i16*
  %3189 = load i16, i16* %3188, align 2
  %3190 = icmp ugt i16 %3189, 4
  br i1 %3190, label %3191, label %3201

3191:                                             ; preds = %3183
  %3192 = getelementptr inbounds i8, i8* %3187, i64 4
  %3193 = bitcast i8* %3192 to i16*
  %3194 = load i16, i16* %3193, align 2
  %3195 = icmp eq i16 %3194, 0
  br i1 %3195, label %3201, label %3196

3196:                                             ; preds = %3191
  %3197 = zext i16 %3194 to i64
  %3198 = add i64 %3124, %3197
  %3199 = add i64 %3134, -1
  %3200 = icmp ult i64 %3199, %3198
  br i1 %3200, label %6330, label %3201

3201:                                             ; preds = %3196, %3191, %3183
  store i32 %3145, i32* %3144, align 8
  br label %6330

3202:                                             ; preds = %3
  %3203 = icmp eq i8* %1, null
  br i1 %3203, label %6330, label %3204

3204:                                             ; preds = %3202
  %3205 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3206 = load i64, i64* %3205, align 8
  %3207 = ptrtoint i8* %1 to i64
  %3208 = sub i64 %3207, %3206
  %3209 = and i64 %3208, 3
  %3210 = icmp eq i64 %3209, 0
  %3211 = inttoptr i64 %3206 to i8*
  br i1 %3210, label %3216, label %3212

3212:                                             ; preds = %3204
  %3213 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3214 = load i8, i8* %3213, align 8, !range !5
  %3215 = icmp eq i8 %3214, 0
  br i1 %3215, label %3216, label %6330

3216:                                             ; preds = %3212, %3204
  %3217 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3218 = load i64, i64* %3217, align 8
  %3219 = icmp ugt i64 %3218, 4
  %3220 = add i64 %3218, -4
  %3221 = icmp uge i64 %3220, %3208
  %3222 = and i1 %3219, %3221
  br i1 %3222, label %3223, label %6330

3223:                                             ; preds = %3216
  %3224 = bitcast i8* %1 to i32*
  %3225 = load i32, i32* %3224, align 4
  %3226 = sext i32 %3225 to i64
  %3227 = sub i64 %3208, %3226
  %3228 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3229 = load i32, i32* %3228, align 8
  %3230 = add i32 %3229, 1
  store i32 %3230, i32* %3228, align 8
  %3231 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3232 = load i32, i32* %3231, align 8
  %3233 = add i32 %3232, 1
  store i32 %3233, i32* %3231, align 8
  %3234 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3235 = load i32, i32* %3234, align 4
  %3236 = icmp ugt i32 %3230, %3235
  br i1 %3236, label %6330, label %3237

3237:                                             ; preds = %3223
  %3238 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3239 = load i32, i32* %3238, align 4
  %3240 = icmp ugt i32 %3233, %3239
  br i1 %3240, label %6330, label %3241

3241:                                             ; preds = %3237
  %3242 = and i64 %3227, 1
  %3243 = icmp eq i64 %3242, 0
  br i1 %3243, label %3248, label %3244

3244:                                             ; preds = %3241
  %3245 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3246 = load i8, i8* %3245, align 8, !range !5
  %3247 = icmp eq i8 %3246, 0
  br i1 %3247, label %3248, label %6330

3248:                                             ; preds = %3244, %3241
  %3249 = add i64 %3218, -2
  %3250 = icmp ult i64 %3249, %3227
  br i1 %3250, label %6330, label %3251

3251:                                             ; preds = %3248
  %3252 = getelementptr inbounds i8, i8* %3211, i64 %3227
  %3253 = bitcast i8* %3252 to i16*
  %3254 = load i16, i16* %3253, align 2
  %3255 = zext i16 %3254 to i64
  %3256 = and i64 %3255, 1
  %3257 = icmp eq i64 %3256, 0
  br i1 %3257, label %3262, label %3258

3258:                                             ; preds = %3251
  %3259 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3260 = load i8, i8* %3259, align 8, !range !5
  %3261 = icmp eq i8 %3260, 0
  br i1 %3261, label %3262, label %6330

3262:                                             ; preds = %3258, %3251
  %3263 = icmp ugt i64 %3218, %3255
  %3264 = sub i64 %3218, %3255
  %3265 = icmp uge i64 %3264, %3227
  %3266 = and i1 %3263, %3265
  br i1 %3266, label %3267, label %6330

3267:                                             ; preds = %3262
  store i32 %3229, i32* %3228, align 8
  br label %6330

3268:                                             ; preds = %3
  %3269 = bitcast i8* %1 to %"struct.tflite::ArgMinOptions"*
  %3270 = icmp eq i8* %1, null
  br i1 %3270, label %6330, label %3271

3271:                                             ; preds = %3268
  %3272 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3273 = load i64, i64* %3272, align 8
  %3274 = ptrtoint i8* %1 to i64
  %3275 = sub i64 %3274, %3273
  %3276 = and i64 %3275, 3
  %3277 = icmp eq i64 %3276, 0
  %3278 = inttoptr i64 %3273 to i8*
  br i1 %3277, label %3283, label %3279

3279:                                             ; preds = %3271
  %3280 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3281 = load i8, i8* %3280, align 8, !range !5
  %3282 = icmp eq i8 %3281, 0
  br i1 %3282, label %3283, label %6330

3283:                                             ; preds = %3279, %3271
  %3284 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3285 = load i64, i64* %3284, align 8
  %3286 = icmp ugt i64 %3285, 4
  %3287 = add i64 %3285, -4
  %3288 = icmp uge i64 %3287, %3275
  %3289 = and i1 %3286, %3288
  br i1 %3289, label %3290, label %6330

3290:                                             ; preds = %3283
  %3291 = bitcast i8* %1 to i32*
  %3292 = load i32, i32* %3291, align 4
  %3293 = sext i32 %3292 to i64
  %3294 = sub i64 %3275, %3293
  %3295 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3296 = load i32, i32* %3295, align 8
  %3297 = add i32 %3296, 1
  store i32 %3297, i32* %3295, align 8
  %3298 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3299 = load i32, i32* %3298, align 8
  %3300 = add i32 %3299, 1
  store i32 %3300, i32* %3298, align 8
  %3301 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3302 = load i32, i32* %3301, align 4
  %3303 = icmp ugt i32 %3297, %3302
  br i1 %3303, label %6330, label %3304

3304:                                             ; preds = %3290
  %3305 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3306 = load i32, i32* %3305, align 4
  %3307 = icmp ugt i32 %3300, %3306
  br i1 %3307, label %6330, label %3308

3308:                                             ; preds = %3304
  %3309 = and i64 %3294, 1
  %3310 = icmp eq i64 %3309, 0
  br i1 %3310, label %3315, label %3311

3311:                                             ; preds = %3308
  %3312 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3313 = load i8, i8* %3312, align 8, !range !5
  %3314 = icmp eq i8 %3313, 0
  br i1 %3314, label %3315, label %6330

3315:                                             ; preds = %3311, %3308
  %3316 = add i64 %3285, -2
  %3317 = icmp ult i64 %3316, %3294
  br i1 %3317, label %6330, label %3318

3318:                                             ; preds = %3315
  %3319 = getelementptr inbounds i8, i8* %3278, i64 %3294
  %3320 = bitcast i8* %3319 to i16*
  %3321 = load i16, i16* %3320, align 2
  %3322 = zext i16 %3321 to i64
  %3323 = and i64 %3322, 1
  %3324 = icmp eq i64 %3323, 0
  br i1 %3324, label %3329, label %3325

3325:                                             ; preds = %3318
  %3326 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3327 = load i8, i8* %3326, align 8, !range !5
  %3328 = icmp eq i8 %3327, 0
  br i1 %3328, label %3329, label %6330

3329:                                             ; preds = %3318, %3325
  %3330 = icmp ugt i64 %3285, %3322
  %3331 = sub i64 %3285, %3322
  %3332 = icmp uge i64 %3331, %3294
  %3333 = and i1 %3330, %3332
  br i1 %3333, label %3334, label %6330

3334:                                             ; preds = %3329
  %3335 = load i32, i32* %3291, align 4
  %3336 = sext i32 %3335 to i64
  %3337 = sub nsw i64 0, %3336
  %3338 = getelementptr inbounds %"struct.tflite::ArgMinOptions", %"struct.tflite::ArgMinOptions"* %3269, i64 0, i32 0, i32 0, i64 %3337
  %3339 = bitcast i8* %3338 to i16*
  %3340 = load i16, i16* %3339, align 2
  %3341 = icmp ugt i16 %3340, 4
  br i1 %3341, label %3342, label %3352

3342:                                             ; preds = %3334
  %3343 = getelementptr inbounds i8, i8* %3338, i64 4
  %3344 = bitcast i8* %3343 to i16*
  %3345 = load i16, i16* %3344, align 2
  %3346 = icmp eq i16 %3345, 0
  br i1 %3346, label %3352, label %3347

3347:                                             ; preds = %3342
  %3348 = zext i16 %3345 to i64
  %3349 = add i64 %3275, %3348
  %3350 = add i64 %3285, -1
  %3351 = icmp ult i64 %3350, %3349
  br i1 %3351, label %6330, label %3352

3352:                                             ; preds = %3347, %3342, %3334
  store i32 %3296, i32* %3295, align 8
  br label %6330

3353:                                             ; preds = %3
  %3354 = icmp eq i8* %1, null
  br i1 %3354, label %6330, label %3355

3355:                                             ; preds = %3353
  %3356 = bitcast i8* %1 to %"struct.tflite::FakeQuantOptions"*
  %3357 = tail call zeroext i1 @_ZNK6tflite16FakeQuantOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::FakeQuantOptions"* nonnull %3356, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

3358:                                             ; preds = %3
  %3359 = bitcast i8* %1 to %"struct.tflite::PackOptions"*
  %3360 = icmp eq i8* %1, null
  br i1 %3360, label %6330, label %3361

3361:                                             ; preds = %3358
  %3362 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3363 = load i64, i64* %3362, align 8
  %3364 = ptrtoint i8* %1 to i64
  %3365 = sub i64 %3364, %3363
  %3366 = and i64 %3365, 3
  %3367 = icmp eq i64 %3366, 0
  %3368 = inttoptr i64 %3363 to i8*
  br i1 %3367, label %3373, label %3369

3369:                                             ; preds = %3361
  %3370 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3371 = load i8, i8* %3370, align 8, !range !5
  %3372 = icmp eq i8 %3371, 0
  br i1 %3372, label %3373, label %6330

3373:                                             ; preds = %3369, %3361
  %3374 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3375 = load i64, i64* %3374, align 8
  %3376 = icmp ugt i64 %3375, 4
  %3377 = add i64 %3375, -4
  %3378 = icmp uge i64 %3377, %3365
  %3379 = and i1 %3376, %3378
  br i1 %3379, label %3380, label %6330

3380:                                             ; preds = %3373
  %3381 = bitcast i8* %1 to i32*
  %3382 = load i32, i32* %3381, align 4
  %3383 = sext i32 %3382 to i64
  %3384 = sub i64 %3365, %3383
  %3385 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3386 = load i32, i32* %3385, align 8
  %3387 = add i32 %3386, 1
  store i32 %3387, i32* %3385, align 8
  %3388 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3389 = load i32, i32* %3388, align 8
  %3390 = add i32 %3389, 1
  store i32 %3390, i32* %3388, align 8
  %3391 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3392 = load i32, i32* %3391, align 4
  %3393 = icmp ugt i32 %3387, %3392
  br i1 %3393, label %6330, label %3394

3394:                                             ; preds = %3380
  %3395 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3396 = load i32, i32* %3395, align 4
  %3397 = icmp ugt i32 %3390, %3396
  br i1 %3397, label %6330, label %3398

3398:                                             ; preds = %3394
  %3399 = and i64 %3384, 1
  %3400 = icmp eq i64 %3399, 0
  br i1 %3400, label %3405, label %3401

3401:                                             ; preds = %3398
  %3402 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3403 = load i8, i8* %3402, align 8, !range !5
  %3404 = icmp eq i8 %3403, 0
  br i1 %3404, label %3405, label %6330

3405:                                             ; preds = %3401, %3398
  %3406 = add i64 %3375, -2
  %3407 = icmp ult i64 %3406, %3384
  br i1 %3407, label %6330, label %3408

3408:                                             ; preds = %3405
  %3409 = getelementptr inbounds i8, i8* %3368, i64 %3384
  %3410 = bitcast i8* %3409 to i16*
  %3411 = load i16, i16* %3410, align 2
  %3412 = zext i16 %3411 to i64
  %3413 = and i64 %3412, 1
  %3414 = icmp eq i64 %3413, 0
  br i1 %3414, label %3419, label %3415

3415:                                             ; preds = %3408
  %3416 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3417 = load i8, i8* %3416, align 8, !range !5
  %3418 = icmp eq i8 %3417, 0
  br i1 %3418, label %3419, label %6330

3419:                                             ; preds = %3408, %3415
  %3420 = icmp ugt i64 %3375, %3412
  %3421 = sub i64 %3375, %3412
  %3422 = icmp uge i64 %3421, %3384
  %3423 = and i1 %3420, %3422
  br i1 %3423, label %3424, label %6330

3424:                                             ; preds = %3419
  %3425 = load i32, i32* %3381, align 4
  %3426 = sext i32 %3425 to i64
  %3427 = sub nsw i64 0, %3426
  %3428 = getelementptr inbounds %"struct.tflite::PackOptions", %"struct.tflite::PackOptions"* %3359, i64 0, i32 0, i32 0, i64 %3427
  %3429 = bitcast i8* %3428 to i16*
  %3430 = load i16, i16* %3429, align 2
  %3431 = icmp ugt i16 %3430, 4
  br i1 %3431, label %3432, label %3452

3432:                                             ; preds = %3424
  %3433 = getelementptr inbounds i8, i8* %3428, i64 4
  %3434 = bitcast i8* %3433 to i16*
  %3435 = load i16, i16* %3434, align 2
  %3436 = icmp eq i16 %3435, 0
  br i1 %3436, label %3441, label %3437

3437:                                             ; preds = %3432
  %3438 = zext i16 %3435 to i64
  %3439 = add i64 %3365, %3438
  %3440 = icmp ult i64 %3377, %3439
  br i1 %3440, label %6330, label %3441

3441:                                             ; preds = %3437, %3432
  %3442 = icmp ugt i16 %3430, 6
  br i1 %3442, label %3443, label %3452

3443:                                             ; preds = %3441
  %3444 = getelementptr inbounds i8, i8* %3428, i64 6
  %3445 = bitcast i8* %3444 to i16*
  %3446 = load i16, i16* %3445, align 2
  %3447 = icmp eq i16 %3446, 0
  br i1 %3447, label %3452, label %3448

3448:                                             ; preds = %3443
  %3449 = zext i16 %3446 to i64
  %3450 = add i64 %3365, %3449
  %3451 = icmp ult i64 %3377, %3450
  br i1 %3451, label %6330, label %3452

3452:                                             ; preds = %3448, %3443, %3441, %3424
  store i32 %3386, i32* %3385, align 8
  br label %6330

3453:                                             ; preds = %3
  %3454 = icmp eq i8* %1, null
  br i1 %3454, label %6330, label %3455

3455:                                             ; preds = %3453
  %3456 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3457 = load i64, i64* %3456, align 8
  %3458 = ptrtoint i8* %1 to i64
  %3459 = sub i64 %3458, %3457
  %3460 = and i64 %3459, 3
  %3461 = icmp eq i64 %3460, 0
  %3462 = inttoptr i64 %3457 to i8*
  br i1 %3461, label %3467, label %3463

3463:                                             ; preds = %3455
  %3464 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3465 = load i8, i8* %3464, align 8, !range !5
  %3466 = icmp eq i8 %3465, 0
  br i1 %3466, label %3467, label %6330

3467:                                             ; preds = %3463, %3455
  %3468 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3469 = load i64, i64* %3468, align 8
  %3470 = icmp ugt i64 %3469, 4
  %3471 = add i64 %3469, -4
  %3472 = icmp uge i64 %3471, %3459
  %3473 = and i1 %3470, %3472
  br i1 %3473, label %3474, label %6330

3474:                                             ; preds = %3467
  %3475 = bitcast i8* %1 to i32*
  %3476 = load i32, i32* %3475, align 4
  %3477 = sext i32 %3476 to i64
  %3478 = sub i64 %3459, %3477
  %3479 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3480 = load i32, i32* %3479, align 8
  %3481 = add i32 %3480, 1
  store i32 %3481, i32* %3479, align 8
  %3482 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3483 = load i32, i32* %3482, align 8
  %3484 = add i32 %3483, 1
  store i32 %3484, i32* %3482, align 8
  %3485 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3486 = load i32, i32* %3485, align 4
  %3487 = icmp ugt i32 %3481, %3486
  br i1 %3487, label %6330, label %3488

3488:                                             ; preds = %3474
  %3489 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3490 = load i32, i32* %3489, align 4
  %3491 = icmp ugt i32 %3484, %3490
  br i1 %3491, label %6330, label %3492

3492:                                             ; preds = %3488
  %3493 = and i64 %3478, 1
  %3494 = icmp eq i64 %3493, 0
  br i1 %3494, label %3499, label %3495

3495:                                             ; preds = %3492
  %3496 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3497 = load i8, i8* %3496, align 8, !range !5
  %3498 = icmp eq i8 %3497, 0
  br i1 %3498, label %3499, label %6330

3499:                                             ; preds = %3495, %3492
  %3500 = add i64 %3469, -2
  %3501 = icmp ult i64 %3500, %3478
  br i1 %3501, label %6330, label %3502

3502:                                             ; preds = %3499
  %3503 = getelementptr inbounds i8, i8* %3462, i64 %3478
  %3504 = bitcast i8* %3503 to i16*
  %3505 = load i16, i16* %3504, align 2
  %3506 = zext i16 %3505 to i64
  %3507 = and i64 %3506, 1
  %3508 = icmp eq i64 %3507, 0
  br i1 %3508, label %3513, label %3509

3509:                                             ; preds = %3502
  %3510 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3511 = load i8, i8* %3510, align 8, !range !5
  %3512 = icmp eq i8 %3511, 0
  br i1 %3512, label %3513, label %6330

3513:                                             ; preds = %3509, %3502
  %3514 = icmp ugt i64 %3469, %3506
  %3515 = sub i64 %3469, %3506
  %3516 = icmp uge i64 %3515, %3478
  %3517 = and i1 %3514, %3516
  br i1 %3517, label %3518, label %6330

3518:                                             ; preds = %3513
  store i32 %3480, i32* %3479, align 8
  br label %6330

3519:                                             ; preds = %3
  %3520 = bitcast i8* %1 to %"struct.tflite::OneHotOptions"*
  %3521 = icmp eq i8* %1, null
  br i1 %3521, label %6330, label %3522

3522:                                             ; preds = %3519
  %3523 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3524 = load i64, i64* %3523, align 8
  %3525 = ptrtoint i8* %1 to i64
  %3526 = sub i64 %3525, %3524
  %3527 = and i64 %3526, 3
  %3528 = icmp eq i64 %3527, 0
  %3529 = inttoptr i64 %3524 to i8*
  br i1 %3528, label %3534, label %3530

3530:                                             ; preds = %3522
  %3531 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3532 = load i8, i8* %3531, align 8, !range !5
  %3533 = icmp eq i8 %3532, 0
  br i1 %3533, label %3534, label %6330

3534:                                             ; preds = %3530, %3522
  %3535 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3536 = load i64, i64* %3535, align 8
  %3537 = icmp ugt i64 %3536, 4
  %3538 = add i64 %3536, -4
  %3539 = icmp uge i64 %3538, %3526
  %3540 = and i1 %3537, %3539
  br i1 %3540, label %3541, label %6330

3541:                                             ; preds = %3534
  %3542 = bitcast i8* %1 to i32*
  %3543 = load i32, i32* %3542, align 4
  %3544 = sext i32 %3543 to i64
  %3545 = sub i64 %3526, %3544
  %3546 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3547 = load i32, i32* %3546, align 8
  %3548 = add i32 %3547, 1
  store i32 %3548, i32* %3546, align 8
  %3549 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3550 = load i32, i32* %3549, align 8
  %3551 = add i32 %3550, 1
  store i32 %3551, i32* %3549, align 8
  %3552 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3553 = load i32, i32* %3552, align 4
  %3554 = icmp ugt i32 %3548, %3553
  br i1 %3554, label %6330, label %3555

3555:                                             ; preds = %3541
  %3556 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3557 = load i32, i32* %3556, align 4
  %3558 = icmp ugt i32 %3551, %3557
  br i1 %3558, label %6330, label %3559

3559:                                             ; preds = %3555
  %3560 = and i64 %3545, 1
  %3561 = icmp eq i64 %3560, 0
  br i1 %3561, label %3566, label %3562

3562:                                             ; preds = %3559
  %3563 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3564 = load i8, i8* %3563, align 8, !range !5
  %3565 = icmp eq i8 %3564, 0
  br i1 %3565, label %3566, label %6330

3566:                                             ; preds = %3562, %3559
  %3567 = add i64 %3536, -2
  %3568 = icmp ult i64 %3567, %3545
  br i1 %3568, label %6330, label %3569

3569:                                             ; preds = %3566
  %3570 = getelementptr inbounds i8, i8* %3529, i64 %3545
  %3571 = bitcast i8* %3570 to i16*
  %3572 = load i16, i16* %3571, align 2
  %3573 = zext i16 %3572 to i64
  %3574 = and i64 %3573, 1
  %3575 = icmp eq i64 %3574, 0
  br i1 %3575, label %3580, label %3576

3576:                                             ; preds = %3569
  %3577 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3578 = load i8, i8* %3577, align 8, !range !5
  %3579 = icmp eq i8 %3578, 0
  br i1 %3579, label %3580, label %6330

3580:                                             ; preds = %3569, %3576
  %3581 = icmp ugt i64 %3536, %3573
  %3582 = sub i64 %3536, %3573
  %3583 = icmp uge i64 %3582, %3545
  %3584 = and i1 %3581, %3583
  br i1 %3584, label %3585, label %6330

3585:                                             ; preds = %3580
  %3586 = load i32, i32* %3542, align 4
  %3587 = sext i32 %3586 to i64
  %3588 = sub nsw i64 0, %3587
  %3589 = getelementptr inbounds %"struct.tflite::OneHotOptions", %"struct.tflite::OneHotOptions"* %3520, i64 0, i32 0, i32 0, i64 %3588
  %3590 = bitcast i8* %3589 to i16*
  %3591 = load i16, i16* %3590, align 2
  %3592 = icmp ugt i16 %3591, 4
  br i1 %3592, label %3593, label %3602

3593:                                             ; preds = %3585
  %3594 = getelementptr inbounds i8, i8* %3589, i64 4
  %3595 = bitcast i8* %3594 to i16*
  %3596 = load i16, i16* %3595, align 2
  %3597 = icmp eq i16 %3596, 0
  br i1 %3597, label %3602, label %3598

3598:                                             ; preds = %3593
  %3599 = zext i16 %3596 to i64
  %3600 = add i64 %3526, %3599
  %3601 = icmp ult i64 %3538, %3600
  br i1 %3601, label %6330, label %3602

3602:                                             ; preds = %3598, %3593, %3585
  store i32 %3547, i32* %3546, align 8
  br label %6330

3603:                                             ; preds = %3
  %3604 = icmp eq i8* %1, null
  br i1 %3604, label %6330, label %3605

3605:                                             ; preds = %3603
  %3606 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3607 = load i64, i64* %3606, align 8
  %3608 = ptrtoint i8* %1 to i64
  %3609 = sub i64 %3608, %3607
  %3610 = and i64 %3609, 3
  %3611 = icmp eq i64 %3610, 0
  %3612 = inttoptr i64 %3607 to i8*
  br i1 %3611, label %3617, label %3613

3613:                                             ; preds = %3605
  %3614 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3615 = load i8, i8* %3614, align 8, !range !5
  %3616 = icmp eq i8 %3615, 0
  br i1 %3616, label %3617, label %6330

3617:                                             ; preds = %3613, %3605
  %3618 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3619 = load i64, i64* %3618, align 8
  %3620 = icmp ugt i64 %3619, 4
  %3621 = add i64 %3619, -4
  %3622 = icmp uge i64 %3621, %3609
  %3623 = and i1 %3620, %3622
  br i1 %3623, label %3624, label %6330

3624:                                             ; preds = %3617
  %3625 = bitcast i8* %1 to i32*
  %3626 = load i32, i32* %3625, align 4
  %3627 = sext i32 %3626 to i64
  %3628 = sub i64 %3609, %3627
  %3629 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3630 = load i32, i32* %3629, align 8
  %3631 = add i32 %3630, 1
  store i32 %3631, i32* %3629, align 8
  %3632 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3633 = load i32, i32* %3632, align 8
  %3634 = add i32 %3633, 1
  store i32 %3634, i32* %3632, align 8
  %3635 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3636 = load i32, i32* %3635, align 4
  %3637 = icmp ugt i32 %3631, %3636
  br i1 %3637, label %6330, label %3638

3638:                                             ; preds = %3624
  %3639 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3640 = load i32, i32* %3639, align 4
  %3641 = icmp ugt i32 %3634, %3640
  br i1 %3641, label %6330, label %3642

3642:                                             ; preds = %3638
  %3643 = and i64 %3628, 1
  %3644 = icmp eq i64 %3643, 0
  br i1 %3644, label %3649, label %3645

3645:                                             ; preds = %3642
  %3646 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3647 = load i8, i8* %3646, align 8, !range !5
  %3648 = icmp eq i8 %3647, 0
  br i1 %3648, label %3649, label %6330

3649:                                             ; preds = %3645, %3642
  %3650 = add i64 %3619, -2
  %3651 = icmp ult i64 %3650, %3628
  br i1 %3651, label %6330, label %3652

3652:                                             ; preds = %3649
  %3653 = getelementptr inbounds i8, i8* %3612, i64 %3628
  %3654 = bitcast i8* %3653 to i16*
  %3655 = load i16, i16* %3654, align 2
  %3656 = zext i16 %3655 to i64
  %3657 = and i64 %3656, 1
  %3658 = icmp eq i64 %3657, 0
  br i1 %3658, label %3663, label %3659

3659:                                             ; preds = %3652
  %3660 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3661 = load i8, i8* %3660, align 8, !range !5
  %3662 = icmp eq i8 %3661, 0
  br i1 %3662, label %3663, label %6330

3663:                                             ; preds = %3659, %3652
  %3664 = icmp ugt i64 %3619, %3656
  %3665 = sub i64 %3619, %3656
  %3666 = icmp uge i64 %3665, %3628
  %3667 = and i1 %3664, %3666
  br i1 %3667, label %3668, label %6330

3668:                                             ; preds = %3663
  store i32 %3630, i32* %3629, align 8
  br label %6330

3669:                                             ; preds = %3
  %3670 = icmp eq i8* %1, null
  br i1 %3670, label %6330, label %3671

3671:                                             ; preds = %3669
  %3672 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3673 = load i64, i64* %3672, align 8
  %3674 = ptrtoint i8* %1 to i64
  %3675 = sub i64 %3674, %3673
  %3676 = and i64 %3675, 3
  %3677 = icmp eq i64 %3676, 0
  %3678 = inttoptr i64 %3673 to i8*
  br i1 %3677, label %3683, label %3679

3679:                                             ; preds = %3671
  %3680 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3681 = load i8, i8* %3680, align 8, !range !5
  %3682 = icmp eq i8 %3681, 0
  br i1 %3682, label %3683, label %6330

3683:                                             ; preds = %3679, %3671
  %3684 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3685 = load i64, i64* %3684, align 8
  %3686 = icmp ugt i64 %3685, 4
  %3687 = add i64 %3685, -4
  %3688 = icmp uge i64 %3687, %3675
  %3689 = and i1 %3686, %3688
  br i1 %3689, label %3690, label %6330

3690:                                             ; preds = %3683
  %3691 = bitcast i8* %1 to i32*
  %3692 = load i32, i32* %3691, align 4
  %3693 = sext i32 %3692 to i64
  %3694 = sub i64 %3675, %3693
  %3695 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3696 = load i32, i32* %3695, align 8
  %3697 = add i32 %3696, 1
  store i32 %3697, i32* %3695, align 8
  %3698 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3699 = load i32, i32* %3698, align 8
  %3700 = add i32 %3699, 1
  store i32 %3700, i32* %3698, align 8
  %3701 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3702 = load i32, i32* %3701, align 4
  %3703 = icmp ugt i32 %3697, %3702
  br i1 %3703, label %6330, label %3704

3704:                                             ; preds = %3690
  %3705 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3706 = load i32, i32* %3705, align 4
  %3707 = icmp ugt i32 %3700, %3706
  br i1 %3707, label %6330, label %3708

3708:                                             ; preds = %3704
  %3709 = and i64 %3694, 1
  %3710 = icmp eq i64 %3709, 0
  br i1 %3710, label %3715, label %3711

3711:                                             ; preds = %3708
  %3712 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3713 = load i8, i8* %3712, align 8, !range !5
  %3714 = icmp eq i8 %3713, 0
  br i1 %3714, label %3715, label %6330

3715:                                             ; preds = %3711, %3708
  %3716 = add i64 %3685, -2
  %3717 = icmp ult i64 %3716, %3694
  br i1 %3717, label %6330, label %3718

3718:                                             ; preds = %3715
  %3719 = getelementptr inbounds i8, i8* %3678, i64 %3694
  %3720 = bitcast i8* %3719 to i16*
  %3721 = load i16, i16* %3720, align 2
  %3722 = zext i16 %3721 to i64
  %3723 = and i64 %3722, 1
  %3724 = icmp eq i64 %3723, 0
  br i1 %3724, label %3729, label %3725

3725:                                             ; preds = %3718
  %3726 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3727 = load i8, i8* %3726, align 8, !range !5
  %3728 = icmp eq i8 %3727, 0
  br i1 %3728, label %3729, label %6330

3729:                                             ; preds = %3725, %3718
  %3730 = icmp ugt i64 %3685, %3722
  %3731 = sub i64 %3685, %3722
  %3732 = icmp uge i64 %3731, %3694
  %3733 = and i1 %3730, %3732
  br i1 %3733, label %3734, label %6330

3734:                                             ; preds = %3729
  store i32 %3696, i32* %3695, align 8
  br label %6330

3735:                                             ; preds = %3
  %3736 = bitcast i8* %1 to %"struct.tflite::UnpackOptions"*
  %3737 = icmp eq i8* %1, null
  br i1 %3737, label %6330, label %3738

3738:                                             ; preds = %3735
  %3739 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3740 = load i64, i64* %3739, align 8
  %3741 = ptrtoint i8* %1 to i64
  %3742 = sub i64 %3741, %3740
  %3743 = and i64 %3742, 3
  %3744 = icmp eq i64 %3743, 0
  %3745 = inttoptr i64 %3740 to i8*
  br i1 %3744, label %3750, label %3746

3746:                                             ; preds = %3738
  %3747 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3748 = load i8, i8* %3747, align 8, !range !5
  %3749 = icmp eq i8 %3748, 0
  br i1 %3749, label %3750, label %6330

3750:                                             ; preds = %3746, %3738
  %3751 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3752 = load i64, i64* %3751, align 8
  %3753 = icmp ugt i64 %3752, 4
  %3754 = add i64 %3752, -4
  %3755 = icmp uge i64 %3754, %3742
  %3756 = and i1 %3753, %3755
  br i1 %3756, label %3757, label %6330

3757:                                             ; preds = %3750
  %3758 = bitcast i8* %1 to i32*
  %3759 = load i32, i32* %3758, align 4
  %3760 = sext i32 %3759 to i64
  %3761 = sub i64 %3742, %3760
  %3762 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3763 = load i32, i32* %3762, align 8
  %3764 = add i32 %3763, 1
  store i32 %3764, i32* %3762, align 8
  %3765 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3766 = load i32, i32* %3765, align 8
  %3767 = add i32 %3766, 1
  store i32 %3767, i32* %3765, align 8
  %3768 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3769 = load i32, i32* %3768, align 4
  %3770 = icmp ugt i32 %3764, %3769
  br i1 %3770, label %6330, label %3771

3771:                                             ; preds = %3757
  %3772 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3773 = load i32, i32* %3772, align 4
  %3774 = icmp ugt i32 %3767, %3773
  br i1 %3774, label %6330, label %3775

3775:                                             ; preds = %3771
  %3776 = and i64 %3761, 1
  %3777 = icmp eq i64 %3776, 0
  br i1 %3777, label %3782, label %3778

3778:                                             ; preds = %3775
  %3779 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3780 = load i8, i8* %3779, align 8, !range !5
  %3781 = icmp eq i8 %3780, 0
  br i1 %3781, label %3782, label %6330

3782:                                             ; preds = %3778, %3775
  %3783 = add i64 %3752, -2
  %3784 = icmp ult i64 %3783, %3761
  br i1 %3784, label %6330, label %3785

3785:                                             ; preds = %3782
  %3786 = getelementptr inbounds i8, i8* %3745, i64 %3761
  %3787 = bitcast i8* %3786 to i16*
  %3788 = load i16, i16* %3787, align 2
  %3789 = zext i16 %3788 to i64
  %3790 = and i64 %3789, 1
  %3791 = icmp eq i64 %3790, 0
  br i1 %3791, label %3796, label %3792

3792:                                             ; preds = %3785
  %3793 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3794 = load i8, i8* %3793, align 8, !range !5
  %3795 = icmp eq i8 %3794, 0
  br i1 %3795, label %3796, label %6330

3796:                                             ; preds = %3785, %3792
  %3797 = icmp ugt i64 %3752, %3789
  %3798 = sub i64 %3752, %3789
  %3799 = icmp uge i64 %3798, %3761
  %3800 = and i1 %3797, %3799
  br i1 %3800, label %3801, label %6330

3801:                                             ; preds = %3796
  %3802 = load i32, i32* %3758, align 4
  %3803 = sext i32 %3802 to i64
  %3804 = sub nsw i64 0, %3803
  %3805 = getelementptr inbounds %"struct.tflite::UnpackOptions", %"struct.tflite::UnpackOptions"* %3736, i64 0, i32 0, i32 0, i64 %3804
  %3806 = bitcast i8* %3805 to i16*
  %3807 = load i16, i16* %3806, align 2
  %3808 = icmp ugt i16 %3807, 4
  br i1 %3808, label %3809, label %3829

3809:                                             ; preds = %3801
  %3810 = getelementptr inbounds i8, i8* %3805, i64 4
  %3811 = bitcast i8* %3810 to i16*
  %3812 = load i16, i16* %3811, align 2
  %3813 = icmp eq i16 %3812, 0
  br i1 %3813, label %3818, label %3814

3814:                                             ; preds = %3809
  %3815 = zext i16 %3812 to i64
  %3816 = add i64 %3742, %3815
  %3817 = icmp ult i64 %3754, %3816
  br i1 %3817, label %6330, label %3818

3818:                                             ; preds = %3814, %3809
  %3819 = icmp ugt i16 %3807, 6
  br i1 %3819, label %3820, label %3829

3820:                                             ; preds = %3818
  %3821 = getelementptr inbounds i8, i8* %3805, i64 6
  %3822 = bitcast i8* %3821 to i16*
  %3823 = load i16, i16* %3822, align 2
  %3824 = icmp eq i16 %3823, 0
  br i1 %3824, label %3829, label %3825

3825:                                             ; preds = %3820
  %3826 = zext i16 %3823 to i64
  %3827 = add i64 %3742, %3826
  %3828 = icmp ult i64 %3754, %3827
  br i1 %3828, label %6330, label %3829

3829:                                             ; preds = %3825, %3820, %3818, %3801
  store i32 %3763, i32* %3762, align 8
  br label %6330

3830:                                             ; preds = %3
  %3831 = icmp eq i8* %1, null
  br i1 %3831, label %6330, label %3832

3832:                                             ; preds = %3830
  %3833 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3834 = load i64, i64* %3833, align 8
  %3835 = ptrtoint i8* %1 to i64
  %3836 = sub i64 %3835, %3834
  %3837 = and i64 %3836, 3
  %3838 = icmp eq i64 %3837, 0
  %3839 = inttoptr i64 %3834 to i8*
  br i1 %3838, label %3844, label %3840

3840:                                             ; preds = %3832
  %3841 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3842 = load i8, i8* %3841, align 8, !range !5
  %3843 = icmp eq i8 %3842, 0
  br i1 %3843, label %3844, label %6330

3844:                                             ; preds = %3840, %3832
  %3845 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3846 = load i64, i64* %3845, align 8
  %3847 = icmp ugt i64 %3846, 4
  %3848 = add i64 %3846, -4
  %3849 = icmp uge i64 %3848, %3836
  %3850 = and i1 %3847, %3849
  br i1 %3850, label %3851, label %6330

3851:                                             ; preds = %3844
  %3852 = bitcast i8* %1 to i32*
  %3853 = load i32, i32* %3852, align 4
  %3854 = sext i32 %3853 to i64
  %3855 = sub i64 %3836, %3854
  %3856 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3857 = load i32, i32* %3856, align 8
  %3858 = add i32 %3857, 1
  store i32 %3858, i32* %3856, align 8
  %3859 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3860 = load i32, i32* %3859, align 8
  %3861 = add i32 %3860, 1
  store i32 %3861, i32* %3859, align 8
  %3862 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3863 = load i32, i32* %3862, align 4
  %3864 = icmp ugt i32 %3858, %3863
  br i1 %3864, label %6330, label %3865

3865:                                             ; preds = %3851
  %3866 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3867 = load i32, i32* %3866, align 4
  %3868 = icmp ugt i32 %3861, %3867
  br i1 %3868, label %6330, label %3869

3869:                                             ; preds = %3865
  %3870 = and i64 %3855, 1
  %3871 = icmp eq i64 %3870, 0
  br i1 %3871, label %3876, label %3872

3872:                                             ; preds = %3869
  %3873 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3874 = load i8, i8* %3873, align 8, !range !5
  %3875 = icmp eq i8 %3874, 0
  br i1 %3875, label %3876, label %6330

3876:                                             ; preds = %3872, %3869
  %3877 = add i64 %3846, -2
  %3878 = icmp ult i64 %3877, %3855
  br i1 %3878, label %6330, label %3879

3879:                                             ; preds = %3876
  %3880 = getelementptr inbounds i8, i8* %3839, i64 %3855
  %3881 = bitcast i8* %3880 to i16*
  %3882 = load i16, i16* %3881, align 2
  %3883 = zext i16 %3882 to i64
  %3884 = and i64 %3883, 1
  %3885 = icmp eq i64 %3884, 0
  br i1 %3885, label %3890, label %3886

3886:                                             ; preds = %3879
  %3887 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3888 = load i8, i8* %3887, align 8, !range !5
  %3889 = icmp eq i8 %3888, 0
  br i1 %3889, label %3890, label %6330

3890:                                             ; preds = %3886, %3879
  %3891 = icmp ugt i64 %3846, %3883
  %3892 = sub i64 %3846, %3883
  %3893 = icmp uge i64 %3892, %3855
  %3894 = and i1 %3891, %3893
  br i1 %3894, label %3895, label %6330

3895:                                             ; preds = %3890
  store i32 %3857, i32* %3856, align 8
  br label %6330

3896:                                             ; preds = %3
  %3897 = icmp eq i8* %1, null
  br i1 %3897, label %6330, label %3898

3898:                                             ; preds = %3896
  %3899 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3900 = load i64, i64* %3899, align 8
  %3901 = ptrtoint i8* %1 to i64
  %3902 = sub i64 %3901, %3900
  %3903 = and i64 %3902, 3
  %3904 = icmp eq i64 %3903, 0
  %3905 = inttoptr i64 %3900 to i8*
  br i1 %3904, label %3910, label %3906

3906:                                             ; preds = %3898
  %3907 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3908 = load i8, i8* %3907, align 8, !range !5
  %3909 = icmp eq i8 %3908, 0
  br i1 %3909, label %3910, label %6330

3910:                                             ; preds = %3906, %3898
  %3911 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3912 = load i64, i64* %3911, align 8
  %3913 = icmp ugt i64 %3912, 4
  %3914 = add i64 %3912, -4
  %3915 = icmp uge i64 %3914, %3902
  %3916 = and i1 %3913, %3915
  br i1 %3916, label %3917, label %6330

3917:                                             ; preds = %3910
  %3918 = bitcast i8* %1 to i32*
  %3919 = load i32, i32* %3918, align 4
  %3920 = sext i32 %3919 to i64
  %3921 = sub i64 %3902, %3920
  %3922 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3923 = load i32, i32* %3922, align 8
  %3924 = add i32 %3923, 1
  store i32 %3924, i32* %3922, align 8
  %3925 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3926 = load i32, i32* %3925, align 8
  %3927 = add i32 %3926, 1
  store i32 %3927, i32* %3925, align 8
  %3928 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3929 = load i32, i32* %3928, align 4
  %3930 = icmp ugt i32 %3924, %3929
  br i1 %3930, label %6330, label %3931

3931:                                             ; preds = %3917
  %3932 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3933 = load i32, i32* %3932, align 4
  %3934 = icmp ugt i32 %3927, %3933
  br i1 %3934, label %6330, label %3935

3935:                                             ; preds = %3931
  %3936 = and i64 %3921, 1
  %3937 = icmp eq i64 %3936, 0
  br i1 %3937, label %3942, label %3938

3938:                                             ; preds = %3935
  %3939 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3940 = load i8, i8* %3939, align 8, !range !5
  %3941 = icmp eq i8 %3940, 0
  br i1 %3941, label %3942, label %6330

3942:                                             ; preds = %3938, %3935
  %3943 = add i64 %3912, -2
  %3944 = icmp ult i64 %3943, %3921
  br i1 %3944, label %6330, label %3945

3945:                                             ; preds = %3942
  %3946 = getelementptr inbounds i8, i8* %3905, i64 %3921
  %3947 = bitcast i8* %3946 to i16*
  %3948 = load i16, i16* %3947, align 2
  %3949 = zext i16 %3948 to i64
  %3950 = and i64 %3949, 1
  %3951 = icmp eq i64 %3950, 0
  br i1 %3951, label %3956, label %3952

3952:                                             ; preds = %3945
  %3953 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3954 = load i8, i8* %3953, align 8, !range !5
  %3955 = icmp eq i8 %3954, 0
  br i1 %3955, label %3956, label %6330

3956:                                             ; preds = %3952, %3945
  %3957 = icmp ugt i64 %3912, %3949
  %3958 = sub i64 %3912, %3949
  %3959 = icmp uge i64 %3958, %3921
  %3960 = and i1 %3957, %3959
  br i1 %3960, label %3961, label %6330

3961:                                             ; preds = %3956
  store i32 %3923, i32* %3922, align 8
  br label %6330

3962:                                             ; preds = %3
  %3963 = icmp eq i8* %1, null
  br i1 %3963, label %6330, label %3964

3964:                                             ; preds = %3962
  %3965 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %3966 = load i64, i64* %3965, align 8
  %3967 = ptrtoint i8* %1 to i64
  %3968 = sub i64 %3967, %3966
  %3969 = and i64 %3968, 3
  %3970 = icmp eq i64 %3969, 0
  %3971 = inttoptr i64 %3966 to i8*
  br i1 %3970, label %3976, label %3972

3972:                                             ; preds = %3964
  %3973 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %3974 = load i8, i8* %3973, align 8, !range !5
  %3975 = icmp eq i8 %3974, 0
  br i1 %3975, label %3976, label %6330

3976:                                             ; preds = %3972, %3964
  %3977 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %3978 = load i64, i64* %3977, align 8
  %3979 = icmp ugt i64 %3978, 4
  %3980 = add i64 %3978, -4
  %3981 = icmp uge i64 %3980, %3968
  %3982 = and i1 %3979, %3981
  br i1 %3982, label %3983, label %6330

3983:                                             ; preds = %3976
  %3984 = bitcast i8* %1 to i32*
  %3985 = load i32, i32* %3984, align 4
  %3986 = sext i32 %3985 to i64
  %3987 = sub i64 %3968, %3986
  %3988 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %3989 = load i32, i32* %3988, align 8
  %3990 = add i32 %3989, 1
  store i32 %3990, i32* %3988, align 8
  %3991 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %3992 = load i32, i32* %3991, align 8
  %3993 = add i32 %3992, 1
  store i32 %3993, i32* %3991, align 8
  %3994 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %3995 = load i32, i32* %3994, align 4
  %3996 = icmp ugt i32 %3990, %3995
  br i1 %3996, label %6330, label %3997

3997:                                             ; preds = %3983
  %3998 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %3999 = load i32, i32* %3998, align 4
  %4000 = icmp ugt i32 %3993, %3999
  br i1 %4000, label %6330, label %4001

4001:                                             ; preds = %3997
  %4002 = and i64 %3987, 1
  %4003 = icmp eq i64 %4002, 0
  br i1 %4003, label %4008, label %4004

4004:                                             ; preds = %4001
  %4005 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4006 = load i8, i8* %4005, align 8, !range !5
  %4007 = icmp eq i8 %4006, 0
  br i1 %4007, label %4008, label %6330

4008:                                             ; preds = %4004, %4001
  %4009 = add i64 %3978, -2
  %4010 = icmp ult i64 %4009, %3987
  br i1 %4010, label %6330, label %4011

4011:                                             ; preds = %4008
  %4012 = getelementptr inbounds i8, i8* %3971, i64 %3987
  %4013 = bitcast i8* %4012 to i16*
  %4014 = load i16, i16* %4013, align 2
  %4015 = zext i16 %4014 to i64
  %4016 = and i64 %4015, 1
  %4017 = icmp eq i64 %4016, 0
  br i1 %4017, label %4022, label %4018

4018:                                             ; preds = %4011
  %4019 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4020 = load i8, i8* %4019, align 8, !range !5
  %4021 = icmp eq i8 %4020, 0
  br i1 %4021, label %4022, label %6330

4022:                                             ; preds = %4018, %4011
  %4023 = icmp ugt i64 %3978, %4015
  %4024 = sub i64 %3978, %4015
  %4025 = icmp uge i64 %4024, %3987
  %4026 = and i1 %4023, %4025
  br i1 %4026, label %4027, label %6330

4027:                                             ; preds = %4022
  store i32 %3989, i32* %3988, align 8
  br label %6330

4028:                                             ; preds = %3
  %4029 = icmp eq i8* %1, null
  br i1 %4029, label %6330, label %4030

4030:                                             ; preds = %4028
  %4031 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4032 = load i64, i64* %4031, align 8
  %4033 = ptrtoint i8* %1 to i64
  %4034 = sub i64 %4033, %4032
  %4035 = and i64 %4034, 3
  %4036 = icmp eq i64 %4035, 0
  %4037 = inttoptr i64 %4032 to i8*
  br i1 %4036, label %4042, label %4038

4038:                                             ; preds = %4030
  %4039 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4040 = load i8, i8* %4039, align 8, !range !5
  %4041 = icmp eq i8 %4040, 0
  br i1 %4041, label %4042, label %6330

4042:                                             ; preds = %4038, %4030
  %4043 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4044 = load i64, i64* %4043, align 8
  %4045 = icmp ugt i64 %4044, 4
  %4046 = add i64 %4044, -4
  %4047 = icmp uge i64 %4046, %4034
  %4048 = and i1 %4045, %4047
  br i1 %4048, label %4049, label %6330

4049:                                             ; preds = %4042
  %4050 = bitcast i8* %1 to i32*
  %4051 = load i32, i32* %4050, align 4
  %4052 = sext i32 %4051 to i64
  %4053 = sub i64 %4034, %4052
  %4054 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4055 = load i32, i32* %4054, align 8
  %4056 = add i32 %4055, 1
  store i32 %4056, i32* %4054, align 8
  %4057 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4058 = load i32, i32* %4057, align 8
  %4059 = add i32 %4058, 1
  store i32 %4059, i32* %4057, align 8
  %4060 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4061 = load i32, i32* %4060, align 4
  %4062 = icmp ugt i32 %4056, %4061
  br i1 %4062, label %6330, label %4063

4063:                                             ; preds = %4049
  %4064 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4065 = load i32, i32* %4064, align 4
  %4066 = icmp ugt i32 %4059, %4065
  br i1 %4066, label %6330, label %4067

4067:                                             ; preds = %4063
  %4068 = and i64 %4053, 1
  %4069 = icmp eq i64 %4068, 0
  br i1 %4069, label %4074, label %4070

4070:                                             ; preds = %4067
  %4071 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4072 = load i8, i8* %4071, align 8, !range !5
  %4073 = icmp eq i8 %4072, 0
  br i1 %4073, label %4074, label %6330

4074:                                             ; preds = %4070, %4067
  %4075 = add i64 %4044, -2
  %4076 = icmp ult i64 %4075, %4053
  br i1 %4076, label %6330, label %4077

4077:                                             ; preds = %4074
  %4078 = getelementptr inbounds i8, i8* %4037, i64 %4053
  %4079 = bitcast i8* %4078 to i16*
  %4080 = load i16, i16* %4079, align 2
  %4081 = zext i16 %4080 to i64
  %4082 = and i64 %4081, 1
  %4083 = icmp eq i64 %4082, 0
  br i1 %4083, label %4088, label %4084

4084:                                             ; preds = %4077
  %4085 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4086 = load i8, i8* %4085, align 8, !range !5
  %4087 = icmp eq i8 %4086, 0
  br i1 %4087, label %4088, label %6330

4088:                                             ; preds = %4084, %4077
  %4089 = icmp ugt i64 %4044, %4081
  %4090 = sub i64 %4044, %4081
  %4091 = icmp uge i64 %4090, %4053
  %4092 = and i1 %4089, %4091
  br i1 %4092, label %4093, label %6330

4093:                                             ; preds = %4088
  store i32 %4055, i32* %4054, align 8
  br label %6330

4094:                                             ; preds = %3
  %4095 = icmp eq i8* %1, null
  br i1 %4095, label %6330, label %4096

4096:                                             ; preds = %4094
  %4097 = bitcast i8* %1 to %"struct.tflite::BidirectionalSequenceLSTMOptions"*
  %4098 = tail call zeroext i1 @_ZNK6tflite32BidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::BidirectionalSequenceLSTMOptions"* nonnull %4097, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

4099:                                             ; preds = %3
  %4100 = icmp eq i8* %1, null
  br i1 %4100, label %6330, label %4101

4101:                                             ; preds = %4099
  %4102 = bitcast i8* %1 to %"struct.tflite::BidirectionalSequenceRNNOptions"*
  %4103 = tail call zeroext i1 @_ZNK6tflite31BidirectionalSequenceRNNOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::BidirectionalSequenceRNNOptions"* nonnull %4102, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

4104:                                             ; preds = %3
  %4105 = icmp eq i8* %1, null
  br i1 %4105, label %6330, label %4106

4106:                                             ; preds = %4104
  %4107 = bitcast i8* %1 to %"struct.tflite::UnidirectionalSequenceLSTMOptions"*
  %4108 = tail call zeroext i1 @_ZNK6tflite33UnidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::UnidirectionalSequenceLSTMOptions"* nonnull %4107, %"class.flatbuffers::Verifier"* dereferenceable(48) %0) #7
  br label %6330

4109:                                             ; preds = %3
  %4110 = icmp eq i8* %1, null
  br i1 %4110, label %6330, label %4111

4111:                                             ; preds = %4109
  %4112 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4113 = load i64, i64* %4112, align 8
  %4114 = ptrtoint i8* %1 to i64
  %4115 = sub i64 %4114, %4113
  %4116 = and i64 %4115, 3
  %4117 = icmp eq i64 %4116, 0
  %4118 = inttoptr i64 %4113 to i8*
  br i1 %4117, label %4123, label %4119

4119:                                             ; preds = %4111
  %4120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4121 = load i8, i8* %4120, align 8, !range !5
  %4122 = icmp eq i8 %4121, 0
  br i1 %4122, label %4123, label %6330

4123:                                             ; preds = %4119, %4111
  %4124 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4125 = load i64, i64* %4124, align 8
  %4126 = icmp ugt i64 %4125, 4
  %4127 = add i64 %4125, -4
  %4128 = icmp uge i64 %4127, %4115
  %4129 = and i1 %4126, %4128
  br i1 %4129, label %4130, label %6330

4130:                                             ; preds = %4123
  %4131 = bitcast i8* %1 to i32*
  %4132 = load i32, i32* %4131, align 4
  %4133 = sext i32 %4132 to i64
  %4134 = sub i64 %4115, %4133
  %4135 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4136 = load i32, i32* %4135, align 8
  %4137 = add i32 %4136, 1
  store i32 %4137, i32* %4135, align 8
  %4138 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4139 = load i32, i32* %4138, align 8
  %4140 = add i32 %4139, 1
  store i32 %4140, i32* %4138, align 8
  %4141 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4142 = load i32, i32* %4141, align 4
  %4143 = icmp ugt i32 %4137, %4142
  br i1 %4143, label %6330, label %4144

4144:                                             ; preds = %4130
  %4145 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4146 = load i32, i32* %4145, align 4
  %4147 = icmp ugt i32 %4140, %4146
  br i1 %4147, label %6330, label %4148

4148:                                             ; preds = %4144
  %4149 = and i64 %4134, 1
  %4150 = icmp eq i64 %4149, 0
  br i1 %4150, label %4155, label %4151

4151:                                             ; preds = %4148
  %4152 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4153 = load i8, i8* %4152, align 8, !range !5
  %4154 = icmp eq i8 %4153, 0
  br i1 %4154, label %4155, label %6330

4155:                                             ; preds = %4151, %4148
  %4156 = add i64 %4125, -2
  %4157 = icmp ult i64 %4156, %4134
  br i1 %4157, label %6330, label %4158

4158:                                             ; preds = %4155
  %4159 = getelementptr inbounds i8, i8* %4118, i64 %4134
  %4160 = bitcast i8* %4159 to i16*
  %4161 = load i16, i16* %4160, align 2
  %4162 = zext i16 %4161 to i64
  %4163 = and i64 %4162, 1
  %4164 = icmp eq i64 %4163, 0
  br i1 %4164, label %4169, label %4165

4165:                                             ; preds = %4158
  %4166 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4167 = load i8, i8* %4166, align 8, !range !5
  %4168 = icmp eq i8 %4167, 0
  br i1 %4168, label %4169, label %6330

4169:                                             ; preds = %4165, %4158
  %4170 = icmp ugt i64 %4125, %4162
  %4171 = sub i64 %4125, %4162
  %4172 = icmp uge i64 %4171, %4134
  %4173 = and i1 %4170, %4172
  br i1 %4173, label %4174, label %6330

4174:                                             ; preds = %4169
  store i32 %4136, i32* %4135, align 8
  br label %6330

4175:                                             ; preds = %3
  %4176 = icmp eq i8* %1, null
  br i1 %4176, label %6330, label %4177

4177:                                             ; preds = %4175
  %4178 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4179 = load i64, i64* %4178, align 8
  %4180 = ptrtoint i8* %1 to i64
  %4181 = sub i64 %4180, %4179
  %4182 = and i64 %4181, 3
  %4183 = icmp eq i64 %4182, 0
  %4184 = inttoptr i64 %4179 to i8*
  br i1 %4183, label %4189, label %4185

4185:                                             ; preds = %4177
  %4186 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4187 = load i8, i8* %4186, align 8, !range !5
  %4188 = icmp eq i8 %4187, 0
  br i1 %4188, label %4189, label %6330

4189:                                             ; preds = %4185, %4177
  %4190 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4191 = load i64, i64* %4190, align 8
  %4192 = icmp ugt i64 %4191, 4
  %4193 = add i64 %4191, -4
  %4194 = icmp uge i64 %4193, %4181
  %4195 = and i1 %4192, %4194
  br i1 %4195, label %4196, label %6330

4196:                                             ; preds = %4189
  %4197 = bitcast i8* %1 to i32*
  %4198 = load i32, i32* %4197, align 4
  %4199 = sext i32 %4198 to i64
  %4200 = sub i64 %4181, %4199
  %4201 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4202 = load i32, i32* %4201, align 8
  %4203 = add i32 %4202, 1
  store i32 %4203, i32* %4201, align 8
  %4204 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4205 = load i32, i32* %4204, align 8
  %4206 = add i32 %4205, 1
  store i32 %4206, i32* %4204, align 8
  %4207 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4208 = load i32, i32* %4207, align 4
  %4209 = icmp ugt i32 %4203, %4208
  br i1 %4209, label %6330, label %4210

4210:                                             ; preds = %4196
  %4211 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4212 = load i32, i32* %4211, align 4
  %4213 = icmp ugt i32 %4206, %4212
  br i1 %4213, label %6330, label %4214

4214:                                             ; preds = %4210
  %4215 = and i64 %4200, 1
  %4216 = icmp eq i64 %4215, 0
  br i1 %4216, label %4221, label %4217

4217:                                             ; preds = %4214
  %4218 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4219 = load i8, i8* %4218, align 8, !range !5
  %4220 = icmp eq i8 %4219, 0
  br i1 %4220, label %4221, label %6330

4221:                                             ; preds = %4217, %4214
  %4222 = add i64 %4191, -2
  %4223 = icmp ult i64 %4222, %4200
  br i1 %4223, label %6330, label %4224

4224:                                             ; preds = %4221
  %4225 = getelementptr inbounds i8, i8* %4184, i64 %4200
  %4226 = bitcast i8* %4225 to i16*
  %4227 = load i16, i16* %4226, align 2
  %4228 = zext i16 %4227 to i64
  %4229 = and i64 %4228, 1
  %4230 = icmp eq i64 %4229, 0
  br i1 %4230, label %4235, label %4231

4231:                                             ; preds = %4224
  %4232 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4233 = load i8, i8* %4232, align 8, !range !5
  %4234 = icmp eq i8 %4233, 0
  br i1 %4234, label %4235, label %6330

4235:                                             ; preds = %4231, %4224
  %4236 = icmp ugt i64 %4191, %4228
  %4237 = sub i64 %4191, %4228
  %4238 = icmp uge i64 %4237, %4200
  %4239 = and i1 %4236, %4238
  br i1 %4239, label %4240, label %6330

4240:                                             ; preds = %4235
  store i32 %4202, i32* %4201, align 8
  br label %6330

4241:                                             ; preds = %3
  %4242 = bitcast i8* %1 to %"struct.tflite::ResizeNearestNeighborOptions"*
  %4243 = icmp eq i8* %1, null
  br i1 %4243, label %6330, label %4244

4244:                                             ; preds = %4241
  %4245 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4246 = load i64, i64* %4245, align 8
  %4247 = ptrtoint i8* %1 to i64
  %4248 = sub i64 %4247, %4246
  %4249 = and i64 %4248, 3
  %4250 = icmp eq i64 %4249, 0
  %4251 = inttoptr i64 %4246 to i8*
  br i1 %4250, label %4256, label %4252

4252:                                             ; preds = %4244
  %4253 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4254 = load i8, i8* %4253, align 8, !range !5
  %4255 = icmp eq i8 %4254, 0
  br i1 %4255, label %4256, label %6330

4256:                                             ; preds = %4252, %4244
  %4257 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4258 = load i64, i64* %4257, align 8
  %4259 = icmp ugt i64 %4258, 4
  %4260 = add i64 %4258, -4
  %4261 = icmp uge i64 %4260, %4248
  %4262 = and i1 %4259, %4261
  br i1 %4262, label %4263, label %6330

4263:                                             ; preds = %4256
  %4264 = bitcast i8* %1 to i32*
  %4265 = load i32, i32* %4264, align 4
  %4266 = sext i32 %4265 to i64
  %4267 = sub i64 %4248, %4266
  %4268 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4269 = load i32, i32* %4268, align 8
  %4270 = add i32 %4269, 1
  store i32 %4270, i32* %4268, align 8
  %4271 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4272 = load i32, i32* %4271, align 8
  %4273 = add i32 %4272, 1
  store i32 %4273, i32* %4271, align 8
  %4274 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4275 = load i32, i32* %4274, align 4
  %4276 = icmp ugt i32 %4270, %4275
  br i1 %4276, label %6330, label %4277

4277:                                             ; preds = %4263
  %4278 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4279 = load i32, i32* %4278, align 4
  %4280 = icmp ugt i32 %4273, %4279
  br i1 %4280, label %6330, label %4281

4281:                                             ; preds = %4277
  %4282 = and i64 %4267, 1
  %4283 = icmp eq i64 %4282, 0
  br i1 %4283, label %4288, label %4284

4284:                                             ; preds = %4281
  %4285 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4286 = load i8, i8* %4285, align 8, !range !5
  %4287 = icmp eq i8 %4286, 0
  br i1 %4287, label %4288, label %6330

4288:                                             ; preds = %4284, %4281
  %4289 = add i64 %4258, -2
  %4290 = icmp ult i64 %4289, %4267
  br i1 %4290, label %6330, label %4291

4291:                                             ; preds = %4288
  %4292 = getelementptr inbounds i8, i8* %4251, i64 %4267
  %4293 = bitcast i8* %4292 to i16*
  %4294 = load i16, i16* %4293, align 2
  %4295 = zext i16 %4294 to i64
  %4296 = and i64 %4295, 1
  %4297 = icmp eq i64 %4296, 0
  br i1 %4297, label %4302, label %4298

4298:                                             ; preds = %4291
  %4299 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4300 = load i8, i8* %4299, align 8, !range !5
  %4301 = icmp eq i8 %4300, 0
  br i1 %4301, label %4302, label %6330

4302:                                             ; preds = %4291, %4298
  %4303 = icmp ugt i64 %4258, %4295
  %4304 = sub i64 %4258, %4295
  %4305 = icmp uge i64 %4304, %4267
  %4306 = and i1 %4303, %4305
  br i1 %4306, label %4307, label %6330

4307:                                             ; preds = %4302
  %4308 = load i32, i32* %4264, align 4
  %4309 = sext i32 %4308 to i64
  %4310 = sub nsw i64 0, %4309
  %4311 = getelementptr inbounds %"struct.tflite::ResizeNearestNeighborOptions", %"struct.tflite::ResizeNearestNeighborOptions"* %4242, i64 0, i32 0, i32 0, i64 %4310
  %4312 = bitcast i8* %4311 to i16*
  %4313 = load i16, i16* %4312, align 2
  %4314 = icmp ugt i16 %4313, 4
  br i1 %4314, label %4315, label %4337

4315:                                             ; preds = %4307
  %4316 = getelementptr inbounds i8, i8* %4311, i64 4
  %4317 = bitcast i8* %4316 to i16*
  %4318 = load i16, i16* %4317, align 2
  %4319 = icmp eq i16 %4318, 0
  br i1 %4319, label %4325, label %4320

4320:                                             ; preds = %4315
  %4321 = zext i16 %4318 to i64
  %4322 = add i64 %4248, %4321
  %4323 = add i64 %4258, -1
  %4324 = icmp ult i64 %4323, %4322
  br i1 %4324, label %6330, label %4325

4325:                                             ; preds = %4320, %4315
  %4326 = icmp ugt i16 %4313, 6
  br i1 %4326, label %4327, label %4337

4327:                                             ; preds = %4325
  %4328 = getelementptr inbounds i8, i8* %4311, i64 6
  %4329 = bitcast i8* %4328 to i16*
  %4330 = load i16, i16* %4329, align 2
  %4331 = icmp eq i16 %4330, 0
  br i1 %4331, label %4337, label %4332

4332:                                             ; preds = %4327
  %4333 = zext i16 %4330 to i64
  %4334 = add i64 %4248, %4333
  %4335 = add i64 %4258, -1
  %4336 = icmp ult i64 %4335, %4334
  br i1 %4336, label %6330, label %4337

4337:                                             ; preds = %4332, %4327, %4325, %4307
  store i32 %4269, i32* %4268, align 8
  br label %6330

4338:                                             ; preds = %3
  %4339 = bitcast i8* %1 to %"struct.tflite::LeakyReluOptions"*
  %4340 = icmp eq i8* %1, null
  br i1 %4340, label %6330, label %4341

4341:                                             ; preds = %4338
  %4342 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4343 = load i64, i64* %4342, align 8
  %4344 = ptrtoint i8* %1 to i64
  %4345 = sub i64 %4344, %4343
  %4346 = and i64 %4345, 3
  %4347 = icmp eq i64 %4346, 0
  %4348 = inttoptr i64 %4343 to i8*
  br i1 %4347, label %4353, label %4349

4349:                                             ; preds = %4341
  %4350 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4351 = load i8, i8* %4350, align 8, !range !5
  %4352 = icmp eq i8 %4351, 0
  br i1 %4352, label %4353, label %6330

4353:                                             ; preds = %4349, %4341
  %4354 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4355 = load i64, i64* %4354, align 8
  %4356 = icmp ugt i64 %4355, 4
  %4357 = add i64 %4355, -4
  %4358 = icmp uge i64 %4357, %4345
  %4359 = and i1 %4356, %4358
  br i1 %4359, label %4360, label %6330

4360:                                             ; preds = %4353
  %4361 = bitcast i8* %1 to i32*
  %4362 = load i32, i32* %4361, align 4
  %4363 = sext i32 %4362 to i64
  %4364 = sub i64 %4345, %4363
  %4365 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4366 = load i32, i32* %4365, align 8
  %4367 = add i32 %4366, 1
  store i32 %4367, i32* %4365, align 8
  %4368 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4369 = load i32, i32* %4368, align 8
  %4370 = add i32 %4369, 1
  store i32 %4370, i32* %4368, align 8
  %4371 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4372 = load i32, i32* %4371, align 4
  %4373 = icmp ugt i32 %4367, %4372
  br i1 %4373, label %6330, label %4374

4374:                                             ; preds = %4360
  %4375 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4376 = load i32, i32* %4375, align 4
  %4377 = icmp ugt i32 %4370, %4376
  br i1 %4377, label %6330, label %4378

4378:                                             ; preds = %4374
  %4379 = and i64 %4364, 1
  %4380 = icmp eq i64 %4379, 0
  br i1 %4380, label %4385, label %4381

4381:                                             ; preds = %4378
  %4382 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4383 = load i8, i8* %4382, align 8, !range !5
  %4384 = icmp eq i8 %4383, 0
  br i1 %4384, label %4385, label %6330

4385:                                             ; preds = %4381, %4378
  %4386 = add i64 %4355, -2
  %4387 = icmp ult i64 %4386, %4364
  br i1 %4387, label %6330, label %4388

4388:                                             ; preds = %4385
  %4389 = getelementptr inbounds i8, i8* %4348, i64 %4364
  %4390 = bitcast i8* %4389 to i16*
  %4391 = load i16, i16* %4390, align 2
  %4392 = zext i16 %4391 to i64
  %4393 = and i64 %4392, 1
  %4394 = icmp eq i64 %4393, 0
  br i1 %4394, label %4399, label %4395

4395:                                             ; preds = %4388
  %4396 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4397 = load i8, i8* %4396, align 8, !range !5
  %4398 = icmp eq i8 %4397, 0
  br i1 %4398, label %4399, label %6330

4399:                                             ; preds = %4388, %4395
  %4400 = icmp ugt i64 %4355, %4392
  %4401 = sub i64 %4355, %4392
  %4402 = icmp uge i64 %4401, %4364
  %4403 = and i1 %4400, %4402
  br i1 %4403, label %4404, label %6330

4404:                                             ; preds = %4399
  %4405 = load i32, i32* %4361, align 4
  %4406 = sext i32 %4405 to i64
  %4407 = sub nsw i64 0, %4406
  %4408 = getelementptr inbounds %"struct.tflite::LeakyReluOptions", %"struct.tflite::LeakyReluOptions"* %4339, i64 0, i32 0, i32 0, i64 %4407
  %4409 = bitcast i8* %4408 to i16*
  %4410 = load i16, i16* %4409, align 2
  %4411 = icmp ugt i16 %4410, 4
  br i1 %4411, label %4412, label %4421

4412:                                             ; preds = %4404
  %4413 = getelementptr inbounds i8, i8* %4408, i64 4
  %4414 = bitcast i8* %4413 to i16*
  %4415 = load i16, i16* %4414, align 2
  %4416 = icmp eq i16 %4415, 0
  br i1 %4416, label %4421, label %4417

4417:                                             ; preds = %4412
  %4418 = zext i16 %4415 to i64
  %4419 = add i64 %4345, %4418
  %4420 = icmp ult i64 %4357, %4419
  br i1 %4420, label %6330, label %4421

4421:                                             ; preds = %4417, %4412, %4404
  store i32 %4366, i32* %4365, align 8
  br label %6330

4422:                                             ; preds = %3
  %4423 = icmp eq i8* %1, null
  br i1 %4423, label %6330, label %4424

4424:                                             ; preds = %4422
  %4425 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4426 = load i64, i64* %4425, align 8
  %4427 = ptrtoint i8* %1 to i64
  %4428 = sub i64 %4427, %4426
  %4429 = and i64 %4428, 3
  %4430 = icmp eq i64 %4429, 0
  %4431 = inttoptr i64 %4426 to i8*
  br i1 %4430, label %4436, label %4432

4432:                                             ; preds = %4424
  %4433 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4434 = load i8, i8* %4433, align 8, !range !5
  %4435 = icmp eq i8 %4434, 0
  br i1 %4435, label %4436, label %6330

4436:                                             ; preds = %4432, %4424
  %4437 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4438 = load i64, i64* %4437, align 8
  %4439 = icmp ugt i64 %4438, 4
  %4440 = add i64 %4438, -4
  %4441 = icmp uge i64 %4440, %4428
  %4442 = and i1 %4439, %4441
  br i1 %4442, label %4443, label %6330

4443:                                             ; preds = %4436
  %4444 = bitcast i8* %1 to i32*
  %4445 = load i32, i32* %4444, align 4
  %4446 = sext i32 %4445 to i64
  %4447 = sub i64 %4428, %4446
  %4448 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4449 = load i32, i32* %4448, align 8
  %4450 = add i32 %4449, 1
  store i32 %4450, i32* %4448, align 8
  %4451 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4452 = load i32, i32* %4451, align 8
  %4453 = add i32 %4452, 1
  store i32 %4453, i32* %4451, align 8
  %4454 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4455 = load i32, i32* %4454, align 4
  %4456 = icmp ugt i32 %4450, %4455
  br i1 %4456, label %6330, label %4457

4457:                                             ; preds = %4443
  %4458 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4459 = load i32, i32* %4458, align 4
  %4460 = icmp ugt i32 %4453, %4459
  br i1 %4460, label %6330, label %4461

4461:                                             ; preds = %4457
  %4462 = and i64 %4447, 1
  %4463 = icmp eq i64 %4462, 0
  br i1 %4463, label %4468, label %4464

4464:                                             ; preds = %4461
  %4465 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4466 = load i8, i8* %4465, align 8, !range !5
  %4467 = icmp eq i8 %4466, 0
  br i1 %4467, label %4468, label %6330

4468:                                             ; preds = %4464, %4461
  %4469 = add i64 %4438, -2
  %4470 = icmp ult i64 %4469, %4447
  br i1 %4470, label %6330, label %4471

4471:                                             ; preds = %4468
  %4472 = getelementptr inbounds i8, i8* %4431, i64 %4447
  %4473 = bitcast i8* %4472 to i16*
  %4474 = load i16, i16* %4473, align 2
  %4475 = zext i16 %4474 to i64
  %4476 = and i64 %4475, 1
  %4477 = icmp eq i64 %4476, 0
  br i1 %4477, label %4482, label %4478

4478:                                             ; preds = %4471
  %4479 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4480 = load i8, i8* %4479, align 8, !range !5
  %4481 = icmp eq i8 %4480, 0
  br i1 %4481, label %4482, label %6330

4482:                                             ; preds = %4478, %4471
  %4483 = icmp ugt i64 %4438, %4475
  %4484 = sub i64 %4438, %4475
  %4485 = icmp uge i64 %4484, %4447
  %4486 = and i1 %4483, %4485
  br i1 %4486, label %4487, label %6330

4487:                                             ; preds = %4482
  store i32 %4449, i32* %4448, align 8
  br label %6330

4488:                                             ; preds = %3
  %4489 = bitcast i8* %1 to %"struct.tflite::MirrorPadOptions"*
  %4490 = icmp eq i8* %1, null
  br i1 %4490, label %6330, label %4491

4491:                                             ; preds = %4488
  %4492 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4493 = load i64, i64* %4492, align 8
  %4494 = ptrtoint i8* %1 to i64
  %4495 = sub i64 %4494, %4493
  %4496 = and i64 %4495, 3
  %4497 = icmp eq i64 %4496, 0
  %4498 = inttoptr i64 %4493 to i8*
  br i1 %4497, label %4503, label %4499

4499:                                             ; preds = %4491
  %4500 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4501 = load i8, i8* %4500, align 8, !range !5
  %4502 = icmp eq i8 %4501, 0
  br i1 %4502, label %4503, label %6330

4503:                                             ; preds = %4499, %4491
  %4504 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4505 = load i64, i64* %4504, align 8
  %4506 = icmp ugt i64 %4505, 4
  %4507 = add i64 %4505, -4
  %4508 = icmp uge i64 %4507, %4495
  %4509 = and i1 %4506, %4508
  br i1 %4509, label %4510, label %6330

4510:                                             ; preds = %4503
  %4511 = bitcast i8* %1 to i32*
  %4512 = load i32, i32* %4511, align 4
  %4513 = sext i32 %4512 to i64
  %4514 = sub i64 %4495, %4513
  %4515 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4516 = load i32, i32* %4515, align 8
  %4517 = add i32 %4516, 1
  store i32 %4517, i32* %4515, align 8
  %4518 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4519 = load i32, i32* %4518, align 8
  %4520 = add i32 %4519, 1
  store i32 %4520, i32* %4518, align 8
  %4521 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4522 = load i32, i32* %4521, align 4
  %4523 = icmp ugt i32 %4517, %4522
  br i1 %4523, label %6330, label %4524

4524:                                             ; preds = %4510
  %4525 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4526 = load i32, i32* %4525, align 4
  %4527 = icmp ugt i32 %4520, %4526
  br i1 %4527, label %6330, label %4528

4528:                                             ; preds = %4524
  %4529 = and i64 %4514, 1
  %4530 = icmp eq i64 %4529, 0
  br i1 %4530, label %4535, label %4531

4531:                                             ; preds = %4528
  %4532 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4533 = load i8, i8* %4532, align 8, !range !5
  %4534 = icmp eq i8 %4533, 0
  br i1 %4534, label %4535, label %6330

4535:                                             ; preds = %4531, %4528
  %4536 = add i64 %4505, -2
  %4537 = icmp ult i64 %4536, %4514
  br i1 %4537, label %6330, label %4538

4538:                                             ; preds = %4535
  %4539 = getelementptr inbounds i8, i8* %4498, i64 %4514
  %4540 = bitcast i8* %4539 to i16*
  %4541 = load i16, i16* %4540, align 2
  %4542 = zext i16 %4541 to i64
  %4543 = and i64 %4542, 1
  %4544 = icmp eq i64 %4543, 0
  br i1 %4544, label %4549, label %4545

4545:                                             ; preds = %4538
  %4546 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4547 = load i8, i8* %4546, align 8, !range !5
  %4548 = icmp eq i8 %4547, 0
  br i1 %4548, label %4549, label %6330

4549:                                             ; preds = %4538, %4545
  %4550 = icmp ugt i64 %4505, %4542
  %4551 = sub i64 %4505, %4542
  %4552 = icmp uge i64 %4551, %4514
  %4553 = and i1 %4550, %4552
  br i1 %4553, label %4554, label %6330

4554:                                             ; preds = %4549
  %4555 = load i32, i32* %4511, align 4
  %4556 = sext i32 %4555 to i64
  %4557 = sub nsw i64 0, %4556
  %4558 = getelementptr inbounds %"struct.tflite::MirrorPadOptions", %"struct.tflite::MirrorPadOptions"* %4489, i64 0, i32 0, i32 0, i64 %4557
  %4559 = bitcast i8* %4558 to i16*
  %4560 = load i16, i16* %4559, align 2
  %4561 = icmp ugt i16 %4560, 4
  br i1 %4561, label %4562, label %4572

4562:                                             ; preds = %4554
  %4563 = getelementptr inbounds i8, i8* %4558, i64 4
  %4564 = bitcast i8* %4563 to i16*
  %4565 = load i16, i16* %4564, align 2
  %4566 = icmp eq i16 %4565, 0
  br i1 %4566, label %4572, label %4567

4567:                                             ; preds = %4562
  %4568 = zext i16 %4565 to i64
  %4569 = add i64 %4495, %4568
  %4570 = add i64 %4505, -1
  %4571 = icmp ult i64 %4570, %4569
  br i1 %4571, label %6330, label %4572

4572:                                             ; preds = %4567, %4562, %4554
  store i32 %4516, i32* %4515, align 8
  br label %6330

4573:                                             ; preds = %3
  %4574 = icmp eq i8* %1, null
  br i1 %4574, label %6330, label %4575

4575:                                             ; preds = %4573
  %4576 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4577 = load i64, i64* %4576, align 8
  %4578 = ptrtoint i8* %1 to i64
  %4579 = sub i64 %4578, %4577
  %4580 = and i64 %4579, 3
  %4581 = icmp eq i64 %4580, 0
  %4582 = inttoptr i64 %4577 to i8*
  br i1 %4581, label %4587, label %4583

4583:                                             ; preds = %4575
  %4584 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4585 = load i8, i8* %4584, align 8, !range !5
  %4586 = icmp eq i8 %4585, 0
  br i1 %4586, label %4587, label %6330

4587:                                             ; preds = %4583, %4575
  %4588 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4589 = load i64, i64* %4588, align 8
  %4590 = icmp ugt i64 %4589, 4
  %4591 = add i64 %4589, -4
  %4592 = icmp uge i64 %4591, %4579
  %4593 = and i1 %4590, %4592
  br i1 %4593, label %4594, label %6330

4594:                                             ; preds = %4587
  %4595 = bitcast i8* %1 to i32*
  %4596 = load i32, i32* %4595, align 4
  %4597 = sext i32 %4596 to i64
  %4598 = sub i64 %4579, %4597
  %4599 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4600 = load i32, i32* %4599, align 8
  %4601 = add i32 %4600, 1
  store i32 %4601, i32* %4599, align 8
  %4602 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4603 = load i32, i32* %4602, align 8
  %4604 = add i32 %4603, 1
  store i32 %4604, i32* %4602, align 8
  %4605 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4606 = load i32, i32* %4605, align 4
  %4607 = icmp ugt i32 %4601, %4606
  br i1 %4607, label %6330, label %4608

4608:                                             ; preds = %4594
  %4609 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4610 = load i32, i32* %4609, align 4
  %4611 = icmp ugt i32 %4604, %4610
  br i1 %4611, label %6330, label %4612

4612:                                             ; preds = %4608
  %4613 = and i64 %4598, 1
  %4614 = icmp eq i64 %4613, 0
  br i1 %4614, label %4619, label %4615

4615:                                             ; preds = %4612
  %4616 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4617 = load i8, i8* %4616, align 8, !range !5
  %4618 = icmp eq i8 %4617, 0
  br i1 %4618, label %4619, label %6330

4619:                                             ; preds = %4615, %4612
  %4620 = add i64 %4589, -2
  %4621 = icmp ult i64 %4620, %4598
  br i1 %4621, label %6330, label %4622

4622:                                             ; preds = %4619
  %4623 = getelementptr inbounds i8, i8* %4582, i64 %4598
  %4624 = bitcast i8* %4623 to i16*
  %4625 = load i16, i16* %4624, align 2
  %4626 = zext i16 %4625 to i64
  %4627 = and i64 %4626, 1
  %4628 = icmp eq i64 %4627, 0
  br i1 %4628, label %4633, label %4629

4629:                                             ; preds = %4622
  %4630 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4631 = load i8, i8* %4630, align 8, !range !5
  %4632 = icmp eq i8 %4631, 0
  br i1 %4632, label %4633, label %6330

4633:                                             ; preds = %4629, %4622
  %4634 = icmp ugt i64 %4589, %4626
  %4635 = sub i64 %4589, %4626
  %4636 = icmp uge i64 %4635, %4598
  %4637 = and i1 %4634, %4636
  br i1 %4637, label %4638, label %6330

4638:                                             ; preds = %4633
  store i32 %4600, i32* %4599, align 8
  br label %6330

4639:                                             ; preds = %3
  %4640 = bitcast i8* %1 to %"struct.tflite::SplitVOptions"*
  %4641 = icmp eq i8* %1, null
  br i1 %4641, label %6330, label %4642

4642:                                             ; preds = %4639
  %4643 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4644 = load i64, i64* %4643, align 8
  %4645 = ptrtoint i8* %1 to i64
  %4646 = sub i64 %4645, %4644
  %4647 = and i64 %4646, 3
  %4648 = icmp eq i64 %4647, 0
  %4649 = inttoptr i64 %4644 to i8*
  br i1 %4648, label %4654, label %4650

4650:                                             ; preds = %4642
  %4651 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4652 = load i8, i8* %4651, align 8, !range !5
  %4653 = icmp eq i8 %4652, 0
  br i1 %4653, label %4654, label %6330

4654:                                             ; preds = %4650, %4642
  %4655 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4656 = load i64, i64* %4655, align 8
  %4657 = icmp ugt i64 %4656, 4
  %4658 = add i64 %4656, -4
  %4659 = icmp uge i64 %4658, %4646
  %4660 = and i1 %4657, %4659
  br i1 %4660, label %4661, label %6330

4661:                                             ; preds = %4654
  %4662 = bitcast i8* %1 to i32*
  %4663 = load i32, i32* %4662, align 4
  %4664 = sext i32 %4663 to i64
  %4665 = sub i64 %4646, %4664
  %4666 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4667 = load i32, i32* %4666, align 8
  %4668 = add i32 %4667, 1
  store i32 %4668, i32* %4666, align 8
  %4669 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4670 = load i32, i32* %4669, align 8
  %4671 = add i32 %4670, 1
  store i32 %4671, i32* %4669, align 8
  %4672 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4673 = load i32, i32* %4672, align 4
  %4674 = icmp ugt i32 %4668, %4673
  br i1 %4674, label %6330, label %4675

4675:                                             ; preds = %4661
  %4676 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4677 = load i32, i32* %4676, align 4
  %4678 = icmp ugt i32 %4671, %4677
  br i1 %4678, label %6330, label %4679

4679:                                             ; preds = %4675
  %4680 = and i64 %4665, 1
  %4681 = icmp eq i64 %4680, 0
  br i1 %4681, label %4686, label %4682

4682:                                             ; preds = %4679
  %4683 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4684 = load i8, i8* %4683, align 8, !range !5
  %4685 = icmp eq i8 %4684, 0
  br i1 %4685, label %4686, label %6330

4686:                                             ; preds = %4682, %4679
  %4687 = add i64 %4656, -2
  %4688 = icmp ult i64 %4687, %4665
  br i1 %4688, label %6330, label %4689

4689:                                             ; preds = %4686
  %4690 = getelementptr inbounds i8, i8* %4649, i64 %4665
  %4691 = bitcast i8* %4690 to i16*
  %4692 = load i16, i16* %4691, align 2
  %4693 = zext i16 %4692 to i64
  %4694 = and i64 %4693, 1
  %4695 = icmp eq i64 %4694, 0
  br i1 %4695, label %4700, label %4696

4696:                                             ; preds = %4689
  %4697 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4698 = load i8, i8* %4697, align 8, !range !5
  %4699 = icmp eq i8 %4698, 0
  br i1 %4699, label %4700, label %6330

4700:                                             ; preds = %4689, %4696
  %4701 = icmp ugt i64 %4656, %4693
  %4702 = sub i64 %4656, %4693
  %4703 = icmp uge i64 %4702, %4665
  %4704 = and i1 %4701, %4703
  br i1 %4704, label %4705, label %6330

4705:                                             ; preds = %4700
  %4706 = load i32, i32* %4662, align 4
  %4707 = sext i32 %4706 to i64
  %4708 = sub nsw i64 0, %4707
  %4709 = getelementptr inbounds %"struct.tflite::SplitVOptions", %"struct.tflite::SplitVOptions"* %4640, i64 0, i32 0, i32 0, i64 %4708
  %4710 = bitcast i8* %4709 to i16*
  %4711 = load i16, i16* %4710, align 2
  %4712 = icmp ugt i16 %4711, 4
  br i1 %4712, label %4713, label %4722

4713:                                             ; preds = %4705
  %4714 = getelementptr inbounds i8, i8* %4709, i64 4
  %4715 = bitcast i8* %4714 to i16*
  %4716 = load i16, i16* %4715, align 2
  %4717 = icmp eq i16 %4716, 0
  br i1 %4717, label %4722, label %4718

4718:                                             ; preds = %4713
  %4719 = zext i16 %4716 to i64
  %4720 = add i64 %4646, %4719
  %4721 = icmp ult i64 %4658, %4720
  br i1 %4721, label %6330, label %4722

4722:                                             ; preds = %4718, %4713, %4705
  store i32 %4667, i32* %4666, align 8
  br label %6330

4723:                                             ; preds = %3
  %4724 = bitcast i8* %1 to %"struct.tflite::UniqueOptions"*
  %4725 = icmp eq i8* %1, null
  br i1 %4725, label %6330, label %4726

4726:                                             ; preds = %4723
  %4727 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4728 = load i64, i64* %4727, align 8
  %4729 = ptrtoint i8* %1 to i64
  %4730 = sub i64 %4729, %4728
  %4731 = and i64 %4730, 3
  %4732 = icmp eq i64 %4731, 0
  %4733 = inttoptr i64 %4728 to i8*
  br i1 %4732, label %4738, label %4734

4734:                                             ; preds = %4726
  %4735 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4736 = load i8, i8* %4735, align 8, !range !5
  %4737 = icmp eq i8 %4736, 0
  br i1 %4737, label %4738, label %6330

4738:                                             ; preds = %4734, %4726
  %4739 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4740 = load i64, i64* %4739, align 8
  %4741 = icmp ugt i64 %4740, 4
  %4742 = add i64 %4740, -4
  %4743 = icmp uge i64 %4742, %4730
  %4744 = and i1 %4741, %4743
  br i1 %4744, label %4745, label %6330

4745:                                             ; preds = %4738
  %4746 = bitcast i8* %1 to i32*
  %4747 = load i32, i32* %4746, align 4
  %4748 = sext i32 %4747 to i64
  %4749 = sub i64 %4730, %4748
  %4750 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4751 = load i32, i32* %4750, align 8
  %4752 = add i32 %4751, 1
  store i32 %4752, i32* %4750, align 8
  %4753 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4754 = load i32, i32* %4753, align 8
  %4755 = add i32 %4754, 1
  store i32 %4755, i32* %4753, align 8
  %4756 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4757 = load i32, i32* %4756, align 4
  %4758 = icmp ugt i32 %4752, %4757
  br i1 %4758, label %6330, label %4759

4759:                                             ; preds = %4745
  %4760 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4761 = load i32, i32* %4760, align 4
  %4762 = icmp ugt i32 %4755, %4761
  br i1 %4762, label %6330, label %4763

4763:                                             ; preds = %4759
  %4764 = and i64 %4749, 1
  %4765 = icmp eq i64 %4764, 0
  br i1 %4765, label %4770, label %4766

4766:                                             ; preds = %4763
  %4767 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4768 = load i8, i8* %4767, align 8, !range !5
  %4769 = icmp eq i8 %4768, 0
  br i1 %4769, label %4770, label %6330

4770:                                             ; preds = %4766, %4763
  %4771 = add i64 %4740, -2
  %4772 = icmp ult i64 %4771, %4749
  br i1 %4772, label %6330, label %4773

4773:                                             ; preds = %4770
  %4774 = getelementptr inbounds i8, i8* %4733, i64 %4749
  %4775 = bitcast i8* %4774 to i16*
  %4776 = load i16, i16* %4775, align 2
  %4777 = zext i16 %4776 to i64
  %4778 = and i64 %4777, 1
  %4779 = icmp eq i64 %4778, 0
  br i1 %4779, label %4784, label %4780

4780:                                             ; preds = %4773
  %4781 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4782 = load i8, i8* %4781, align 8, !range !5
  %4783 = icmp eq i8 %4782, 0
  br i1 %4783, label %4784, label %6330

4784:                                             ; preds = %4773, %4780
  %4785 = icmp ugt i64 %4740, %4777
  %4786 = sub i64 %4740, %4777
  %4787 = icmp uge i64 %4786, %4749
  %4788 = and i1 %4785, %4787
  br i1 %4788, label %4789, label %6330

4789:                                             ; preds = %4784
  %4790 = load i32, i32* %4746, align 4
  %4791 = sext i32 %4790 to i64
  %4792 = sub nsw i64 0, %4791
  %4793 = getelementptr inbounds %"struct.tflite::UniqueOptions", %"struct.tflite::UniqueOptions"* %4724, i64 0, i32 0, i32 0, i64 %4792
  %4794 = bitcast i8* %4793 to i16*
  %4795 = load i16, i16* %4794, align 2
  %4796 = icmp ugt i16 %4795, 4
  br i1 %4796, label %4797, label %4807

4797:                                             ; preds = %4789
  %4798 = getelementptr inbounds i8, i8* %4793, i64 4
  %4799 = bitcast i8* %4798 to i16*
  %4800 = load i16, i16* %4799, align 2
  %4801 = icmp eq i16 %4800, 0
  br i1 %4801, label %4807, label %4802

4802:                                             ; preds = %4797
  %4803 = zext i16 %4800 to i64
  %4804 = add i64 %4730, %4803
  %4805 = add i64 %4740, -1
  %4806 = icmp ult i64 %4805, %4804
  br i1 %4806, label %6330, label %4807

4807:                                             ; preds = %4802, %4797, %4789
  store i32 %4751, i32* %4750, align 8
  br label %6330

4808:                                             ; preds = %3
  %4809 = icmp eq i8* %1, null
  br i1 %4809, label %6330, label %4810

4810:                                             ; preds = %4808
  %4811 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4812 = load i64, i64* %4811, align 8
  %4813 = ptrtoint i8* %1 to i64
  %4814 = sub i64 %4813, %4812
  %4815 = and i64 %4814, 3
  %4816 = icmp eq i64 %4815, 0
  %4817 = inttoptr i64 %4812 to i8*
  br i1 %4816, label %4822, label %4818

4818:                                             ; preds = %4810
  %4819 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4820 = load i8, i8* %4819, align 8, !range !5
  %4821 = icmp eq i8 %4820, 0
  br i1 %4821, label %4822, label %6330

4822:                                             ; preds = %4818, %4810
  %4823 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4824 = load i64, i64* %4823, align 8
  %4825 = icmp ugt i64 %4824, 4
  %4826 = add i64 %4824, -4
  %4827 = icmp uge i64 %4826, %4814
  %4828 = and i1 %4825, %4827
  br i1 %4828, label %4829, label %6330

4829:                                             ; preds = %4822
  %4830 = bitcast i8* %1 to i32*
  %4831 = load i32, i32* %4830, align 4
  %4832 = sext i32 %4831 to i64
  %4833 = sub i64 %4814, %4832
  %4834 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4835 = load i32, i32* %4834, align 8
  %4836 = add i32 %4835, 1
  store i32 %4836, i32* %4834, align 8
  %4837 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4838 = load i32, i32* %4837, align 8
  %4839 = add i32 %4838, 1
  store i32 %4839, i32* %4837, align 8
  %4840 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4841 = load i32, i32* %4840, align 4
  %4842 = icmp ugt i32 %4836, %4841
  br i1 %4842, label %6330, label %4843

4843:                                             ; preds = %4829
  %4844 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4845 = load i32, i32* %4844, align 4
  %4846 = icmp ugt i32 %4839, %4845
  br i1 %4846, label %6330, label %4847

4847:                                             ; preds = %4843
  %4848 = and i64 %4833, 1
  %4849 = icmp eq i64 %4848, 0
  br i1 %4849, label %4854, label %4850

4850:                                             ; preds = %4847
  %4851 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4852 = load i8, i8* %4851, align 8, !range !5
  %4853 = icmp eq i8 %4852, 0
  br i1 %4853, label %4854, label %6330

4854:                                             ; preds = %4850, %4847
  %4855 = add i64 %4824, -2
  %4856 = icmp ult i64 %4855, %4833
  br i1 %4856, label %6330, label %4857

4857:                                             ; preds = %4854
  %4858 = getelementptr inbounds i8, i8* %4817, i64 %4833
  %4859 = bitcast i8* %4858 to i16*
  %4860 = load i16, i16* %4859, align 2
  %4861 = zext i16 %4860 to i64
  %4862 = and i64 %4861, 1
  %4863 = icmp eq i64 %4862, 0
  br i1 %4863, label %4868, label %4864

4864:                                             ; preds = %4857
  %4865 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4866 = load i8, i8* %4865, align 8, !range !5
  %4867 = icmp eq i8 %4866, 0
  br i1 %4867, label %4868, label %6330

4868:                                             ; preds = %4864, %4857
  %4869 = icmp ugt i64 %4824, %4861
  %4870 = sub i64 %4824, %4861
  %4871 = icmp uge i64 %4870, %4833
  %4872 = and i1 %4869, %4871
  br i1 %4872, label %4873, label %6330

4873:                                             ; preds = %4868
  store i32 %4835, i32* %4834, align 8
  br label %6330

4874:                                             ; preds = %3
  %4875 = icmp eq i8* %1, null
  br i1 %4875, label %6330, label %4876

4876:                                             ; preds = %4874
  %4877 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4878 = load i64, i64* %4877, align 8
  %4879 = ptrtoint i8* %1 to i64
  %4880 = sub i64 %4879, %4878
  %4881 = and i64 %4880, 3
  %4882 = icmp eq i64 %4881, 0
  %4883 = inttoptr i64 %4878 to i8*
  br i1 %4882, label %4888, label %4884

4884:                                             ; preds = %4876
  %4885 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4886 = load i8, i8* %4885, align 8, !range !5
  %4887 = icmp eq i8 %4886, 0
  br i1 %4887, label %4888, label %6330

4888:                                             ; preds = %4884, %4876
  %4889 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4890 = load i64, i64* %4889, align 8
  %4891 = icmp ugt i64 %4890, 4
  %4892 = add i64 %4890, -4
  %4893 = icmp uge i64 %4892, %4880
  %4894 = and i1 %4891, %4893
  br i1 %4894, label %4895, label %6330

4895:                                             ; preds = %4888
  %4896 = bitcast i8* %1 to i32*
  %4897 = load i32, i32* %4896, align 4
  %4898 = sext i32 %4897 to i64
  %4899 = sub i64 %4880, %4898
  %4900 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4901 = load i32, i32* %4900, align 8
  %4902 = add i32 %4901, 1
  store i32 %4902, i32* %4900, align 8
  %4903 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4904 = load i32, i32* %4903, align 8
  %4905 = add i32 %4904, 1
  store i32 %4905, i32* %4903, align 8
  %4906 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4907 = load i32, i32* %4906, align 4
  %4908 = icmp ugt i32 %4902, %4907
  br i1 %4908, label %6330, label %4909

4909:                                             ; preds = %4895
  %4910 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4911 = load i32, i32* %4910, align 4
  %4912 = icmp ugt i32 %4905, %4911
  br i1 %4912, label %6330, label %4913

4913:                                             ; preds = %4909
  %4914 = and i64 %4899, 1
  %4915 = icmp eq i64 %4914, 0
  br i1 %4915, label %4920, label %4916

4916:                                             ; preds = %4913
  %4917 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4918 = load i8, i8* %4917, align 8, !range !5
  %4919 = icmp eq i8 %4918, 0
  br i1 %4919, label %4920, label %6330

4920:                                             ; preds = %4916, %4913
  %4921 = add i64 %4890, -2
  %4922 = icmp ult i64 %4921, %4899
  br i1 %4922, label %6330, label %4923

4923:                                             ; preds = %4920
  %4924 = getelementptr inbounds i8, i8* %4883, i64 %4899
  %4925 = bitcast i8* %4924 to i16*
  %4926 = load i16, i16* %4925, align 2
  %4927 = zext i16 %4926 to i64
  %4928 = and i64 %4927, 1
  %4929 = icmp eq i64 %4928, 0
  br i1 %4929, label %4934, label %4930

4930:                                             ; preds = %4923
  %4931 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4932 = load i8, i8* %4931, align 8, !range !5
  %4933 = icmp eq i8 %4932, 0
  br i1 %4933, label %4934, label %6330

4934:                                             ; preds = %4930, %4923
  %4935 = icmp ugt i64 %4890, %4927
  %4936 = sub i64 %4890, %4927
  %4937 = icmp uge i64 %4936, %4899
  %4938 = and i1 %4935, %4937
  br i1 %4938, label %4939, label %6330

4939:                                             ; preds = %4934
  store i32 %4901, i32* %4900, align 8
  br label %6330

4940:                                             ; preds = %3
  %4941 = icmp eq i8* %1, null
  br i1 %4941, label %6330, label %4942

4942:                                             ; preds = %4940
  %4943 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %4944 = load i64, i64* %4943, align 8
  %4945 = ptrtoint i8* %1 to i64
  %4946 = sub i64 %4945, %4944
  %4947 = and i64 %4946, 3
  %4948 = icmp eq i64 %4947, 0
  %4949 = inttoptr i64 %4944 to i8*
  br i1 %4948, label %4954, label %4950

4950:                                             ; preds = %4942
  %4951 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4952 = load i8, i8* %4951, align 8, !range !5
  %4953 = icmp eq i8 %4952, 0
  br i1 %4953, label %4954, label %6330

4954:                                             ; preds = %4950, %4942
  %4955 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %4956 = load i64, i64* %4955, align 8
  %4957 = icmp ugt i64 %4956, 4
  %4958 = add i64 %4956, -4
  %4959 = icmp uge i64 %4958, %4946
  %4960 = and i1 %4957, %4959
  br i1 %4960, label %4961, label %6330

4961:                                             ; preds = %4954
  %4962 = bitcast i8* %1 to i32*
  %4963 = load i32, i32* %4962, align 4
  %4964 = sext i32 %4963 to i64
  %4965 = sub i64 %4946, %4964
  %4966 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %4967 = load i32, i32* %4966, align 8
  %4968 = add i32 %4967, 1
  store i32 %4968, i32* %4966, align 8
  %4969 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %4970 = load i32, i32* %4969, align 8
  %4971 = add i32 %4970, 1
  store i32 %4971, i32* %4969, align 8
  %4972 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %4973 = load i32, i32* %4972, align 4
  %4974 = icmp ugt i32 %4968, %4973
  br i1 %4974, label %6330, label %4975

4975:                                             ; preds = %4961
  %4976 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %4977 = load i32, i32* %4976, align 4
  %4978 = icmp ugt i32 %4971, %4977
  br i1 %4978, label %6330, label %4979

4979:                                             ; preds = %4975
  %4980 = and i64 %4965, 1
  %4981 = icmp eq i64 %4980, 0
  br i1 %4981, label %4986, label %4982

4982:                                             ; preds = %4979
  %4983 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4984 = load i8, i8* %4983, align 8, !range !5
  %4985 = icmp eq i8 %4984, 0
  br i1 %4985, label %4986, label %6330

4986:                                             ; preds = %4982, %4979
  %4987 = add i64 %4956, -2
  %4988 = icmp ult i64 %4987, %4965
  br i1 %4988, label %6330, label %4989

4989:                                             ; preds = %4986
  %4990 = getelementptr inbounds i8, i8* %4949, i64 %4965
  %4991 = bitcast i8* %4990 to i16*
  %4992 = load i16, i16* %4991, align 2
  %4993 = zext i16 %4992 to i64
  %4994 = and i64 %4993, 1
  %4995 = icmp eq i64 %4994, 0
  br i1 %4995, label %5000, label %4996

4996:                                             ; preds = %4989
  %4997 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %4998 = load i8, i8* %4997, align 8, !range !5
  %4999 = icmp eq i8 %4998, 0
  br i1 %4999, label %5000, label %6330

5000:                                             ; preds = %4996, %4989
  %5001 = icmp ugt i64 %4956, %4993
  %5002 = sub i64 %4956, %4993
  %5003 = icmp uge i64 %5002, %4965
  %5004 = and i1 %5001, %5003
  br i1 %5004, label %5005, label %6330

5005:                                             ; preds = %5000
  store i32 %4967, i32* %4966, align 8
  br label %6330

5006:                                             ; preds = %3
  %5007 = icmp eq i8* %1, null
  br i1 %5007, label %6330, label %5008

5008:                                             ; preds = %5006
  %5009 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5010 = load i64, i64* %5009, align 8
  %5011 = ptrtoint i8* %1 to i64
  %5012 = sub i64 %5011, %5010
  %5013 = and i64 %5012, 3
  %5014 = icmp eq i64 %5013, 0
  %5015 = inttoptr i64 %5010 to i8*
  br i1 %5014, label %5020, label %5016

5016:                                             ; preds = %5008
  %5017 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5018 = load i8, i8* %5017, align 8, !range !5
  %5019 = icmp eq i8 %5018, 0
  br i1 %5019, label %5020, label %6330

5020:                                             ; preds = %5016, %5008
  %5021 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5022 = load i64, i64* %5021, align 8
  %5023 = icmp ugt i64 %5022, 4
  %5024 = add i64 %5022, -4
  %5025 = icmp uge i64 %5024, %5012
  %5026 = and i1 %5023, %5025
  br i1 %5026, label %5027, label %6330

5027:                                             ; preds = %5020
  %5028 = bitcast i8* %1 to i32*
  %5029 = load i32, i32* %5028, align 4
  %5030 = sext i32 %5029 to i64
  %5031 = sub i64 %5012, %5030
  %5032 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5033 = load i32, i32* %5032, align 8
  %5034 = add i32 %5033, 1
  store i32 %5034, i32* %5032, align 8
  %5035 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5036 = load i32, i32* %5035, align 8
  %5037 = add i32 %5036, 1
  store i32 %5037, i32* %5035, align 8
  %5038 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5039 = load i32, i32* %5038, align 4
  %5040 = icmp ugt i32 %5034, %5039
  br i1 %5040, label %6330, label %5041

5041:                                             ; preds = %5027
  %5042 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5043 = load i32, i32* %5042, align 4
  %5044 = icmp ugt i32 %5037, %5043
  br i1 %5044, label %6330, label %5045

5045:                                             ; preds = %5041
  %5046 = and i64 %5031, 1
  %5047 = icmp eq i64 %5046, 0
  br i1 %5047, label %5052, label %5048

5048:                                             ; preds = %5045
  %5049 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5050 = load i8, i8* %5049, align 8, !range !5
  %5051 = icmp eq i8 %5050, 0
  br i1 %5051, label %5052, label %6330

5052:                                             ; preds = %5048, %5045
  %5053 = add i64 %5022, -2
  %5054 = icmp ult i64 %5053, %5031
  br i1 %5054, label %6330, label %5055

5055:                                             ; preds = %5052
  %5056 = getelementptr inbounds i8, i8* %5015, i64 %5031
  %5057 = bitcast i8* %5056 to i16*
  %5058 = load i16, i16* %5057, align 2
  %5059 = zext i16 %5058 to i64
  %5060 = and i64 %5059, 1
  %5061 = icmp eq i64 %5060, 0
  br i1 %5061, label %5066, label %5062

5062:                                             ; preds = %5055
  %5063 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5064 = load i8, i8* %5063, align 8, !range !5
  %5065 = icmp eq i8 %5064, 0
  br i1 %5065, label %5066, label %6330

5066:                                             ; preds = %5062, %5055
  %5067 = icmp ugt i64 %5022, %5059
  %5068 = sub i64 %5022, %5059
  %5069 = icmp uge i64 %5068, %5031
  %5070 = and i1 %5067, %5069
  br i1 %5070, label %5071, label %6330

5071:                                             ; preds = %5066
  store i32 %5033, i32* %5032, align 8
  br label %6330

5072:                                             ; preds = %3
  %5073 = icmp eq i8* %1, null
  br i1 %5073, label %6330, label %5074

5074:                                             ; preds = %5072
  %5075 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5076 = load i64, i64* %5075, align 8
  %5077 = ptrtoint i8* %1 to i64
  %5078 = sub i64 %5077, %5076
  %5079 = and i64 %5078, 3
  %5080 = icmp eq i64 %5079, 0
  %5081 = inttoptr i64 %5076 to i8*
  br i1 %5080, label %5086, label %5082

5082:                                             ; preds = %5074
  %5083 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5084 = load i8, i8* %5083, align 8, !range !5
  %5085 = icmp eq i8 %5084, 0
  br i1 %5085, label %5086, label %6330

5086:                                             ; preds = %5082, %5074
  %5087 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5088 = load i64, i64* %5087, align 8
  %5089 = icmp ugt i64 %5088, 4
  %5090 = add i64 %5088, -4
  %5091 = icmp uge i64 %5090, %5078
  %5092 = and i1 %5089, %5091
  br i1 %5092, label %5093, label %6330

5093:                                             ; preds = %5086
  %5094 = bitcast i8* %1 to i32*
  %5095 = load i32, i32* %5094, align 4
  %5096 = sext i32 %5095 to i64
  %5097 = sub i64 %5078, %5096
  %5098 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5099 = load i32, i32* %5098, align 8
  %5100 = add i32 %5099, 1
  store i32 %5100, i32* %5098, align 8
  %5101 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5102 = load i32, i32* %5101, align 8
  %5103 = add i32 %5102, 1
  store i32 %5103, i32* %5101, align 8
  %5104 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5105 = load i32, i32* %5104, align 4
  %5106 = icmp ugt i32 %5100, %5105
  br i1 %5106, label %6330, label %5107

5107:                                             ; preds = %5093
  %5108 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5109 = load i32, i32* %5108, align 4
  %5110 = icmp ugt i32 %5103, %5109
  br i1 %5110, label %6330, label %5111

5111:                                             ; preds = %5107
  %5112 = and i64 %5097, 1
  %5113 = icmp eq i64 %5112, 0
  br i1 %5113, label %5118, label %5114

5114:                                             ; preds = %5111
  %5115 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5116 = load i8, i8* %5115, align 8, !range !5
  %5117 = icmp eq i8 %5116, 0
  br i1 %5117, label %5118, label %6330

5118:                                             ; preds = %5114, %5111
  %5119 = add i64 %5088, -2
  %5120 = icmp ult i64 %5119, %5097
  br i1 %5120, label %6330, label %5121

5121:                                             ; preds = %5118
  %5122 = getelementptr inbounds i8, i8* %5081, i64 %5097
  %5123 = bitcast i8* %5122 to i16*
  %5124 = load i16, i16* %5123, align 2
  %5125 = zext i16 %5124 to i64
  %5126 = and i64 %5125, 1
  %5127 = icmp eq i64 %5126, 0
  br i1 %5127, label %5132, label %5128

5128:                                             ; preds = %5121
  %5129 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5130 = load i8, i8* %5129, align 8, !range !5
  %5131 = icmp eq i8 %5130, 0
  br i1 %5131, label %5132, label %6330

5132:                                             ; preds = %5128, %5121
  %5133 = icmp ugt i64 %5088, %5125
  %5134 = sub i64 %5088, %5125
  %5135 = icmp uge i64 %5134, %5097
  %5136 = and i1 %5133, %5135
  br i1 %5136, label %5137, label %6330

5137:                                             ; preds = %5132
  store i32 %5099, i32* %5098, align 8
  br label %6330

5138:                                             ; preds = %3
  %5139 = icmp eq i8* %1, null
  br i1 %5139, label %6330, label %5140

5140:                                             ; preds = %5138
  %5141 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5142 = load i64, i64* %5141, align 8
  %5143 = ptrtoint i8* %1 to i64
  %5144 = sub i64 %5143, %5142
  %5145 = and i64 %5144, 3
  %5146 = icmp eq i64 %5145, 0
  %5147 = inttoptr i64 %5142 to i8*
  br i1 %5146, label %5152, label %5148

5148:                                             ; preds = %5140
  %5149 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5150 = load i8, i8* %5149, align 8, !range !5
  %5151 = icmp eq i8 %5150, 0
  br i1 %5151, label %5152, label %6330

5152:                                             ; preds = %5148, %5140
  %5153 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5154 = load i64, i64* %5153, align 8
  %5155 = icmp ugt i64 %5154, 4
  %5156 = add i64 %5154, -4
  %5157 = icmp uge i64 %5156, %5144
  %5158 = and i1 %5155, %5157
  br i1 %5158, label %5159, label %6330

5159:                                             ; preds = %5152
  %5160 = bitcast i8* %1 to i32*
  %5161 = load i32, i32* %5160, align 4
  %5162 = sext i32 %5161 to i64
  %5163 = sub i64 %5144, %5162
  %5164 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5165 = load i32, i32* %5164, align 8
  %5166 = add i32 %5165, 1
  store i32 %5166, i32* %5164, align 8
  %5167 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5168 = load i32, i32* %5167, align 8
  %5169 = add i32 %5168, 1
  store i32 %5169, i32* %5167, align 8
  %5170 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5171 = load i32, i32* %5170, align 4
  %5172 = icmp ugt i32 %5166, %5171
  br i1 %5172, label %6330, label %5173

5173:                                             ; preds = %5159
  %5174 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5175 = load i32, i32* %5174, align 4
  %5176 = icmp ugt i32 %5169, %5175
  br i1 %5176, label %6330, label %5177

5177:                                             ; preds = %5173
  %5178 = and i64 %5163, 1
  %5179 = icmp eq i64 %5178, 0
  br i1 %5179, label %5184, label %5180

5180:                                             ; preds = %5177
  %5181 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5182 = load i8, i8* %5181, align 8, !range !5
  %5183 = icmp eq i8 %5182, 0
  br i1 %5183, label %5184, label %6330

5184:                                             ; preds = %5180, %5177
  %5185 = add i64 %5154, -2
  %5186 = icmp ult i64 %5185, %5163
  br i1 %5186, label %6330, label %5187

5187:                                             ; preds = %5184
  %5188 = getelementptr inbounds i8, i8* %5147, i64 %5163
  %5189 = bitcast i8* %5188 to i16*
  %5190 = load i16, i16* %5189, align 2
  %5191 = zext i16 %5190 to i64
  %5192 = and i64 %5191, 1
  %5193 = icmp eq i64 %5192, 0
  br i1 %5193, label %5198, label %5194

5194:                                             ; preds = %5187
  %5195 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5196 = load i8, i8* %5195, align 8, !range !5
  %5197 = icmp eq i8 %5196, 0
  br i1 %5197, label %5198, label %6330

5198:                                             ; preds = %5194, %5187
  %5199 = icmp ugt i64 %5154, %5191
  %5200 = sub i64 %5154, %5191
  %5201 = icmp uge i64 %5200, %5163
  %5202 = and i1 %5199, %5201
  br i1 %5202, label %5203, label %6330

5203:                                             ; preds = %5198
  store i32 %5165, i32* %5164, align 8
  br label %6330

5204:                                             ; preds = %3
  %5205 = bitcast i8* %1 to %"struct.tflite::ReverseSequenceOptions"*
  %5206 = icmp eq i8* %1, null
  br i1 %5206, label %6330, label %5207

5207:                                             ; preds = %5204
  %5208 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5209 = load i64, i64* %5208, align 8
  %5210 = ptrtoint i8* %1 to i64
  %5211 = sub i64 %5210, %5209
  %5212 = and i64 %5211, 3
  %5213 = icmp eq i64 %5212, 0
  %5214 = inttoptr i64 %5209 to i8*
  br i1 %5213, label %5219, label %5215

5215:                                             ; preds = %5207
  %5216 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5217 = load i8, i8* %5216, align 8, !range !5
  %5218 = icmp eq i8 %5217, 0
  br i1 %5218, label %5219, label %6330

5219:                                             ; preds = %5215, %5207
  %5220 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5221 = load i64, i64* %5220, align 8
  %5222 = icmp ugt i64 %5221, 4
  %5223 = add i64 %5221, -4
  %5224 = icmp uge i64 %5223, %5211
  %5225 = and i1 %5222, %5224
  br i1 %5225, label %5226, label %6330

5226:                                             ; preds = %5219
  %5227 = bitcast i8* %1 to i32*
  %5228 = load i32, i32* %5227, align 4
  %5229 = sext i32 %5228 to i64
  %5230 = sub i64 %5211, %5229
  %5231 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5232 = load i32, i32* %5231, align 8
  %5233 = add i32 %5232, 1
  store i32 %5233, i32* %5231, align 8
  %5234 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5235 = load i32, i32* %5234, align 8
  %5236 = add i32 %5235, 1
  store i32 %5236, i32* %5234, align 8
  %5237 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5238 = load i32, i32* %5237, align 4
  %5239 = icmp ugt i32 %5233, %5238
  br i1 %5239, label %6330, label %5240

5240:                                             ; preds = %5226
  %5241 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5242 = load i32, i32* %5241, align 4
  %5243 = icmp ugt i32 %5236, %5242
  br i1 %5243, label %6330, label %5244

5244:                                             ; preds = %5240
  %5245 = and i64 %5230, 1
  %5246 = icmp eq i64 %5245, 0
  br i1 %5246, label %5251, label %5247

5247:                                             ; preds = %5244
  %5248 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5249 = load i8, i8* %5248, align 8, !range !5
  %5250 = icmp eq i8 %5249, 0
  br i1 %5250, label %5251, label %6330

5251:                                             ; preds = %5247, %5244
  %5252 = add i64 %5221, -2
  %5253 = icmp ult i64 %5252, %5230
  br i1 %5253, label %6330, label %5254

5254:                                             ; preds = %5251
  %5255 = getelementptr inbounds i8, i8* %5214, i64 %5230
  %5256 = bitcast i8* %5255 to i16*
  %5257 = load i16, i16* %5256, align 2
  %5258 = zext i16 %5257 to i64
  %5259 = and i64 %5258, 1
  %5260 = icmp eq i64 %5259, 0
  br i1 %5260, label %5265, label %5261

5261:                                             ; preds = %5254
  %5262 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5263 = load i8, i8* %5262, align 8, !range !5
  %5264 = icmp eq i8 %5263, 0
  br i1 %5264, label %5265, label %6330

5265:                                             ; preds = %5254, %5261
  %5266 = icmp ugt i64 %5221, %5258
  %5267 = sub i64 %5221, %5258
  %5268 = icmp uge i64 %5267, %5230
  %5269 = and i1 %5266, %5268
  br i1 %5269, label %5270, label %6330

5270:                                             ; preds = %5265
  %5271 = load i32, i32* %5227, align 4
  %5272 = sext i32 %5271 to i64
  %5273 = sub nsw i64 0, %5272
  %5274 = getelementptr inbounds %"struct.tflite::ReverseSequenceOptions", %"struct.tflite::ReverseSequenceOptions"* %5205, i64 0, i32 0, i32 0, i64 %5273
  %5275 = bitcast i8* %5274 to i16*
  %5276 = load i16, i16* %5275, align 2
  %5277 = icmp ugt i16 %5276, 4
  br i1 %5277, label %5278, label %5298

5278:                                             ; preds = %5270
  %5279 = getelementptr inbounds i8, i8* %5274, i64 4
  %5280 = bitcast i8* %5279 to i16*
  %5281 = load i16, i16* %5280, align 2
  %5282 = icmp eq i16 %5281, 0
  br i1 %5282, label %5287, label %5283

5283:                                             ; preds = %5278
  %5284 = zext i16 %5281 to i64
  %5285 = add i64 %5211, %5284
  %5286 = icmp ult i64 %5223, %5285
  br i1 %5286, label %6330, label %5287

5287:                                             ; preds = %5283, %5278
  %5288 = icmp ugt i16 %5276, 6
  br i1 %5288, label %5289, label %5298

5289:                                             ; preds = %5287
  %5290 = getelementptr inbounds i8, i8* %5274, i64 6
  %5291 = bitcast i8* %5290 to i16*
  %5292 = load i16, i16* %5291, align 2
  %5293 = icmp eq i16 %5292, 0
  br i1 %5293, label %5298, label %5294

5294:                                             ; preds = %5289
  %5295 = zext i16 %5292 to i64
  %5296 = add i64 %5211, %5295
  %5297 = icmp ult i64 %5223, %5296
  br i1 %5297, label %6330, label %5298

5298:                                             ; preds = %5294, %5289, %5287, %5270
  store i32 %5232, i32* %5231, align 8
  br label %6330

5299:                                             ; preds = %3
  %5300 = icmp eq i8* %1, null
  br i1 %5300, label %6330, label %5301

5301:                                             ; preds = %5299
  %5302 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5303 = load i64, i64* %5302, align 8
  %5304 = ptrtoint i8* %1 to i64
  %5305 = sub i64 %5304, %5303
  %5306 = and i64 %5305, 3
  %5307 = icmp eq i64 %5306, 0
  %5308 = inttoptr i64 %5303 to i8*
  br i1 %5307, label %5313, label %5309

5309:                                             ; preds = %5301
  %5310 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5311 = load i8, i8* %5310, align 8, !range !5
  %5312 = icmp eq i8 %5311, 0
  br i1 %5312, label %5313, label %6330

5313:                                             ; preds = %5309, %5301
  %5314 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5315 = load i64, i64* %5314, align 8
  %5316 = icmp ugt i64 %5315, 4
  %5317 = add i64 %5315, -4
  %5318 = icmp uge i64 %5317, %5305
  %5319 = and i1 %5316, %5318
  br i1 %5319, label %5320, label %6330

5320:                                             ; preds = %5313
  %5321 = bitcast i8* %1 to i32*
  %5322 = load i32, i32* %5321, align 4
  %5323 = sext i32 %5322 to i64
  %5324 = sub i64 %5305, %5323
  %5325 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5326 = load i32, i32* %5325, align 8
  %5327 = add i32 %5326, 1
  store i32 %5327, i32* %5325, align 8
  %5328 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5329 = load i32, i32* %5328, align 8
  %5330 = add i32 %5329, 1
  store i32 %5330, i32* %5328, align 8
  %5331 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5332 = load i32, i32* %5331, align 4
  %5333 = icmp ugt i32 %5327, %5332
  br i1 %5333, label %6330, label %5334

5334:                                             ; preds = %5320
  %5335 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5336 = load i32, i32* %5335, align 4
  %5337 = icmp ugt i32 %5330, %5336
  br i1 %5337, label %6330, label %5338

5338:                                             ; preds = %5334
  %5339 = and i64 %5324, 1
  %5340 = icmp eq i64 %5339, 0
  br i1 %5340, label %5345, label %5341

5341:                                             ; preds = %5338
  %5342 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5343 = load i8, i8* %5342, align 8, !range !5
  %5344 = icmp eq i8 %5343, 0
  br i1 %5344, label %5345, label %6330

5345:                                             ; preds = %5341, %5338
  %5346 = add i64 %5315, -2
  %5347 = icmp ult i64 %5346, %5324
  br i1 %5347, label %6330, label %5348

5348:                                             ; preds = %5345
  %5349 = getelementptr inbounds i8, i8* %5308, i64 %5324
  %5350 = bitcast i8* %5349 to i16*
  %5351 = load i16, i16* %5350, align 2
  %5352 = zext i16 %5351 to i64
  %5353 = and i64 %5352, 1
  %5354 = icmp eq i64 %5353, 0
  br i1 %5354, label %5359, label %5355

5355:                                             ; preds = %5348
  %5356 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5357 = load i8, i8* %5356, align 8, !range !5
  %5358 = icmp eq i8 %5357, 0
  br i1 %5358, label %5359, label %6330

5359:                                             ; preds = %5355, %5348
  %5360 = icmp ugt i64 %5315, %5352
  %5361 = sub i64 %5315, %5352
  %5362 = icmp uge i64 %5361, %5324
  %5363 = and i1 %5360, %5362
  br i1 %5363, label %5364, label %6330

5364:                                             ; preds = %5359
  store i32 %5326, i32* %5325, align 8
  br label %6330

5365:                                             ; preds = %3
  %5366 = icmp eq i8* %1, null
  br i1 %5366, label %6330, label %5367

5367:                                             ; preds = %5365
  %5368 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5369 = load i64, i64* %5368, align 8
  %5370 = ptrtoint i8* %1 to i64
  %5371 = sub i64 %5370, %5369
  %5372 = and i64 %5371, 3
  %5373 = icmp eq i64 %5372, 0
  %5374 = inttoptr i64 %5369 to i8*
  br i1 %5373, label %5379, label %5375

5375:                                             ; preds = %5367
  %5376 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5377 = load i8, i8* %5376, align 8, !range !5
  %5378 = icmp eq i8 %5377, 0
  br i1 %5378, label %5379, label %6330

5379:                                             ; preds = %5375, %5367
  %5380 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5381 = load i64, i64* %5380, align 8
  %5382 = icmp ugt i64 %5381, 4
  %5383 = add i64 %5381, -4
  %5384 = icmp uge i64 %5383, %5371
  %5385 = and i1 %5382, %5384
  br i1 %5385, label %5386, label %6330

5386:                                             ; preds = %5379
  %5387 = bitcast i8* %1 to i32*
  %5388 = load i32, i32* %5387, align 4
  %5389 = sext i32 %5388 to i64
  %5390 = sub i64 %5371, %5389
  %5391 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5392 = load i32, i32* %5391, align 8
  %5393 = add i32 %5392, 1
  store i32 %5393, i32* %5391, align 8
  %5394 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5395 = load i32, i32* %5394, align 8
  %5396 = add i32 %5395, 1
  store i32 %5396, i32* %5394, align 8
  %5397 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5398 = load i32, i32* %5397, align 4
  %5399 = icmp ugt i32 %5393, %5398
  br i1 %5399, label %6330, label %5400

5400:                                             ; preds = %5386
  %5401 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5402 = load i32, i32* %5401, align 4
  %5403 = icmp ugt i32 %5396, %5402
  br i1 %5403, label %6330, label %5404

5404:                                             ; preds = %5400
  %5405 = and i64 %5390, 1
  %5406 = icmp eq i64 %5405, 0
  br i1 %5406, label %5411, label %5407

5407:                                             ; preds = %5404
  %5408 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5409 = load i8, i8* %5408, align 8, !range !5
  %5410 = icmp eq i8 %5409, 0
  br i1 %5410, label %5411, label %6330

5411:                                             ; preds = %5407, %5404
  %5412 = add i64 %5381, -2
  %5413 = icmp ult i64 %5412, %5390
  br i1 %5413, label %6330, label %5414

5414:                                             ; preds = %5411
  %5415 = getelementptr inbounds i8, i8* %5374, i64 %5390
  %5416 = bitcast i8* %5415 to i16*
  %5417 = load i16, i16* %5416, align 2
  %5418 = zext i16 %5417 to i64
  %5419 = and i64 %5418, 1
  %5420 = icmp eq i64 %5419, 0
  br i1 %5420, label %5425, label %5421

5421:                                             ; preds = %5414
  %5422 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5423 = load i8, i8* %5422, align 8, !range !5
  %5424 = icmp eq i8 %5423, 0
  br i1 %5424, label %5425, label %6330

5425:                                             ; preds = %5421, %5414
  %5426 = icmp ugt i64 %5381, %5418
  %5427 = sub i64 %5381, %5418
  %5428 = icmp uge i64 %5427, %5390
  %5429 = and i1 %5426, %5428
  br i1 %5429, label %5430, label %6330

5430:                                             ; preds = %5425
  store i32 %5392, i32* %5391, align 8
  br label %6330

5431:                                             ; preds = %3
  %5432 = icmp eq i8* %1, null
  br i1 %5432, label %6330, label %5433

5433:                                             ; preds = %5431
  %5434 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5435 = load i64, i64* %5434, align 8
  %5436 = ptrtoint i8* %1 to i64
  %5437 = sub i64 %5436, %5435
  %5438 = and i64 %5437, 3
  %5439 = icmp eq i64 %5438, 0
  %5440 = inttoptr i64 %5435 to i8*
  br i1 %5439, label %5445, label %5441

5441:                                             ; preds = %5433
  %5442 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5443 = load i8, i8* %5442, align 8, !range !5
  %5444 = icmp eq i8 %5443, 0
  br i1 %5444, label %5445, label %6330

5445:                                             ; preds = %5441, %5433
  %5446 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5447 = load i64, i64* %5446, align 8
  %5448 = icmp ugt i64 %5447, 4
  %5449 = add i64 %5447, -4
  %5450 = icmp uge i64 %5449, %5437
  %5451 = and i1 %5448, %5450
  br i1 %5451, label %5452, label %6330

5452:                                             ; preds = %5445
  %5453 = bitcast i8* %1 to i32*
  %5454 = load i32, i32* %5453, align 4
  %5455 = sext i32 %5454 to i64
  %5456 = sub i64 %5437, %5455
  %5457 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5458 = load i32, i32* %5457, align 8
  %5459 = add i32 %5458, 1
  store i32 %5459, i32* %5457, align 8
  %5460 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5461 = load i32, i32* %5460, align 8
  %5462 = add i32 %5461, 1
  store i32 %5462, i32* %5460, align 8
  %5463 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5464 = load i32, i32* %5463, align 4
  %5465 = icmp ugt i32 %5459, %5464
  br i1 %5465, label %6330, label %5466

5466:                                             ; preds = %5452
  %5467 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5468 = load i32, i32* %5467, align 4
  %5469 = icmp ugt i32 %5462, %5468
  br i1 %5469, label %6330, label %5470

5470:                                             ; preds = %5466
  %5471 = and i64 %5456, 1
  %5472 = icmp eq i64 %5471, 0
  br i1 %5472, label %5477, label %5473

5473:                                             ; preds = %5470
  %5474 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5475 = load i8, i8* %5474, align 8, !range !5
  %5476 = icmp eq i8 %5475, 0
  br i1 %5476, label %5477, label %6330

5477:                                             ; preds = %5473, %5470
  %5478 = add i64 %5447, -2
  %5479 = icmp ult i64 %5478, %5456
  br i1 %5479, label %6330, label %5480

5480:                                             ; preds = %5477
  %5481 = getelementptr inbounds i8, i8* %5440, i64 %5456
  %5482 = bitcast i8* %5481 to i16*
  %5483 = load i16, i16* %5482, align 2
  %5484 = zext i16 %5483 to i64
  %5485 = and i64 %5484, 1
  %5486 = icmp eq i64 %5485, 0
  br i1 %5486, label %5491, label %5487

5487:                                             ; preds = %5480
  %5488 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5489 = load i8, i8* %5488, align 8, !range !5
  %5490 = icmp eq i8 %5489, 0
  br i1 %5490, label %5491, label %6330

5491:                                             ; preds = %5487, %5480
  %5492 = icmp ugt i64 %5447, %5484
  %5493 = sub i64 %5447, %5484
  %5494 = icmp uge i64 %5493, %5456
  %5495 = and i1 %5492, %5494
  br i1 %5495, label %5496, label %6330

5496:                                             ; preds = %5491
  store i32 %5458, i32* %5457, align 8
  br label %6330

5497:                                             ; preds = %3
  %5498 = icmp eq i8* %1, null
  br i1 %5498, label %6330, label %5499

5499:                                             ; preds = %5497
  %5500 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5501 = load i64, i64* %5500, align 8
  %5502 = ptrtoint i8* %1 to i64
  %5503 = sub i64 %5502, %5501
  %5504 = and i64 %5503, 3
  %5505 = icmp eq i64 %5504, 0
  %5506 = inttoptr i64 %5501 to i8*
  br i1 %5505, label %5511, label %5507

5507:                                             ; preds = %5499
  %5508 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5509 = load i8, i8* %5508, align 8, !range !5
  %5510 = icmp eq i8 %5509, 0
  br i1 %5510, label %5511, label %6330

5511:                                             ; preds = %5507, %5499
  %5512 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5513 = load i64, i64* %5512, align 8
  %5514 = icmp ugt i64 %5513, 4
  %5515 = add i64 %5513, -4
  %5516 = icmp uge i64 %5515, %5503
  %5517 = and i1 %5514, %5516
  br i1 %5517, label %5518, label %6330

5518:                                             ; preds = %5511
  %5519 = bitcast i8* %1 to i32*
  %5520 = load i32, i32* %5519, align 4
  %5521 = sext i32 %5520 to i64
  %5522 = sub i64 %5503, %5521
  %5523 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5524 = load i32, i32* %5523, align 8
  %5525 = add i32 %5524, 1
  store i32 %5525, i32* %5523, align 8
  %5526 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5527 = load i32, i32* %5526, align 8
  %5528 = add i32 %5527, 1
  store i32 %5528, i32* %5526, align 8
  %5529 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5530 = load i32, i32* %5529, align 4
  %5531 = icmp ugt i32 %5525, %5530
  br i1 %5531, label %6330, label %5532

5532:                                             ; preds = %5518
  %5533 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5534 = load i32, i32* %5533, align 4
  %5535 = icmp ugt i32 %5528, %5534
  br i1 %5535, label %6330, label %5536

5536:                                             ; preds = %5532
  %5537 = and i64 %5522, 1
  %5538 = icmp eq i64 %5537, 0
  br i1 %5538, label %5543, label %5539

5539:                                             ; preds = %5536
  %5540 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5541 = load i8, i8* %5540, align 8, !range !5
  %5542 = icmp eq i8 %5541, 0
  br i1 %5542, label %5543, label %6330

5543:                                             ; preds = %5539, %5536
  %5544 = add i64 %5513, -2
  %5545 = icmp ult i64 %5544, %5522
  br i1 %5545, label %6330, label %5546

5546:                                             ; preds = %5543
  %5547 = getelementptr inbounds i8, i8* %5506, i64 %5522
  %5548 = bitcast i8* %5547 to i16*
  %5549 = load i16, i16* %5548, align 2
  %5550 = zext i16 %5549 to i64
  %5551 = and i64 %5550, 1
  %5552 = icmp eq i64 %5551, 0
  br i1 %5552, label %5557, label %5553

5553:                                             ; preds = %5546
  %5554 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5555 = load i8, i8* %5554, align 8, !range !5
  %5556 = icmp eq i8 %5555, 0
  br i1 %5556, label %5557, label %6330

5557:                                             ; preds = %5553, %5546
  %5558 = icmp ugt i64 %5513, %5550
  %5559 = sub i64 %5513, %5550
  %5560 = icmp uge i64 %5559, %5522
  %5561 = and i1 %5558, %5560
  br i1 %5561, label %5562, label %6330

5562:                                             ; preds = %5557
  store i32 %5524, i32* %5523, align 8
  br label %6330

5563:                                             ; preds = %3
  %5564 = bitcast i8* %1 to %"struct.tflite::IfOptions"*
  %5565 = icmp eq i8* %1, null
  br i1 %5565, label %6330, label %5566

5566:                                             ; preds = %5563
  %5567 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5568 = load i64, i64* %5567, align 8
  %5569 = ptrtoint i8* %1 to i64
  %5570 = sub i64 %5569, %5568
  %5571 = and i64 %5570, 3
  %5572 = icmp eq i64 %5571, 0
  %5573 = inttoptr i64 %5568 to i8*
  br i1 %5572, label %5578, label %5574

5574:                                             ; preds = %5566
  %5575 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5576 = load i8, i8* %5575, align 8, !range !5
  %5577 = icmp eq i8 %5576, 0
  br i1 %5577, label %5578, label %6330

5578:                                             ; preds = %5574, %5566
  %5579 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5580 = load i64, i64* %5579, align 8
  %5581 = icmp ugt i64 %5580, 4
  %5582 = add i64 %5580, -4
  %5583 = icmp uge i64 %5582, %5570
  %5584 = and i1 %5581, %5583
  br i1 %5584, label %5585, label %6330

5585:                                             ; preds = %5578
  %5586 = bitcast i8* %1 to i32*
  %5587 = load i32, i32* %5586, align 4
  %5588 = sext i32 %5587 to i64
  %5589 = sub i64 %5570, %5588
  %5590 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5591 = load i32, i32* %5590, align 8
  %5592 = add i32 %5591, 1
  store i32 %5592, i32* %5590, align 8
  %5593 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5594 = load i32, i32* %5593, align 8
  %5595 = add i32 %5594, 1
  store i32 %5595, i32* %5593, align 8
  %5596 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5597 = load i32, i32* %5596, align 4
  %5598 = icmp ugt i32 %5592, %5597
  br i1 %5598, label %6330, label %5599

5599:                                             ; preds = %5585
  %5600 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5601 = load i32, i32* %5600, align 4
  %5602 = icmp ugt i32 %5595, %5601
  br i1 %5602, label %6330, label %5603

5603:                                             ; preds = %5599
  %5604 = and i64 %5589, 1
  %5605 = icmp eq i64 %5604, 0
  br i1 %5605, label %5610, label %5606

5606:                                             ; preds = %5603
  %5607 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5608 = load i8, i8* %5607, align 8, !range !5
  %5609 = icmp eq i8 %5608, 0
  br i1 %5609, label %5610, label %6330

5610:                                             ; preds = %5606, %5603
  %5611 = add i64 %5580, -2
  %5612 = icmp ult i64 %5611, %5589
  br i1 %5612, label %6330, label %5613

5613:                                             ; preds = %5610
  %5614 = getelementptr inbounds i8, i8* %5573, i64 %5589
  %5615 = bitcast i8* %5614 to i16*
  %5616 = load i16, i16* %5615, align 2
  %5617 = zext i16 %5616 to i64
  %5618 = and i64 %5617, 1
  %5619 = icmp eq i64 %5618, 0
  br i1 %5619, label %5624, label %5620

5620:                                             ; preds = %5613
  %5621 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5622 = load i8, i8* %5621, align 8, !range !5
  %5623 = icmp eq i8 %5622, 0
  br i1 %5623, label %5624, label %6330

5624:                                             ; preds = %5613, %5620
  %5625 = icmp ugt i64 %5580, %5617
  %5626 = sub i64 %5580, %5617
  %5627 = icmp uge i64 %5626, %5589
  %5628 = and i1 %5625, %5627
  br i1 %5628, label %5629, label %6330

5629:                                             ; preds = %5624
  %5630 = load i32, i32* %5586, align 4
  %5631 = sext i32 %5630 to i64
  %5632 = sub nsw i64 0, %5631
  %5633 = getelementptr inbounds %"struct.tflite::IfOptions", %"struct.tflite::IfOptions"* %5564, i64 0, i32 0, i32 0, i64 %5632
  %5634 = bitcast i8* %5633 to i16*
  %5635 = load i16, i16* %5634, align 2
  %5636 = icmp ugt i16 %5635, 4
  br i1 %5636, label %5637, label %5657

5637:                                             ; preds = %5629
  %5638 = getelementptr inbounds i8, i8* %5633, i64 4
  %5639 = bitcast i8* %5638 to i16*
  %5640 = load i16, i16* %5639, align 2
  %5641 = icmp eq i16 %5640, 0
  br i1 %5641, label %5646, label %5642

5642:                                             ; preds = %5637
  %5643 = zext i16 %5640 to i64
  %5644 = add i64 %5570, %5643
  %5645 = icmp ult i64 %5582, %5644
  br i1 %5645, label %6330, label %5646

5646:                                             ; preds = %5642, %5637
  %5647 = icmp ugt i16 %5635, 6
  br i1 %5647, label %5648, label %5657

5648:                                             ; preds = %5646
  %5649 = getelementptr inbounds i8, i8* %5633, i64 6
  %5650 = bitcast i8* %5649 to i16*
  %5651 = load i16, i16* %5650, align 2
  %5652 = icmp eq i16 %5651, 0
  br i1 %5652, label %5657, label %5653

5653:                                             ; preds = %5648
  %5654 = zext i16 %5651 to i64
  %5655 = add i64 %5570, %5654
  %5656 = icmp ult i64 %5582, %5655
  br i1 %5656, label %6330, label %5657

5657:                                             ; preds = %5653, %5648, %5646, %5629
  store i32 %5591, i32* %5590, align 8
  br label %6330

5658:                                             ; preds = %3
  %5659 = bitcast i8* %1 to %"struct.tflite::WhileOptions"*
  %5660 = icmp eq i8* %1, null
  br i1 %5660, label %6330, label %5661

5661:                                             ; preds = %5658
  %5662 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5663 = load i64, i64* %5662, align 8
  %5664 = ptrtoint i8* %1 to i64
  %5665 = sub i64 %5664, %5663
  %5666 = and i64 %5665, 3
  %5667 = icmp eq i64 %5666, 0
  %5668 = inttoptr i64 %5663 to i8*
  br i1 %5667, label %5673, label %5669

5669:                                             ; preds = %5661
  %5670 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5671 = load i8, i8* %5670, align 8, !range !5
  %5672 = icmp eq i8 %5671, 0
  br i1 %5672, label %5673, label %6330

5673:                                             ; preds = %5669, %5661
  %5674 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5675 = load i64, i64* %5674, align 8
  %5676 = icmp ugt i64 %5675, 4
  %5677 = add i64 %5675, -4
  %5678 = icmp uge i64 %5677, %5665
  %5679 = and i1 %5676, %5678
  br i1 %5679, label %5680, label %6330

5680:                                             ; preds = %5673
  %5681 = bitcast i8* %1 to i32*
  %5682 = load i32, i32* %5681, align 4
  %5683 = sext i32 %5682 to i64
  %5684 = sub i64 %5665, %5683
  %5685 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5686 = load i32, i32* %5685, align 8
  %5687 = add i32 %5686, 1
  store i32 %5687, i32* %5685, align 8
  %5688 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5689 = load i32, i32* %5688, align 8
  %5690 = add i32 %5689, 1
  store i32 %5690, i32* %5688, align 8
  %5691 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5692 = load i32, i32* %5691, align 4
  %5693 = icmp ugt i32 %5687, %5692
  br i1 %5693, label %6330, label %5694

5694:                                             ; preds = %5680
  %5695 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5696 = load i32, i32* %5695, align 4
  %5697 = icmp ugt i32 %5690, %5696
  br i1 %5697, label %6330, label %5698

5698:                                             ; preds = %5694
  %5699 = and i64 %5684, 1
  %5700 = icmp eq i64 %5699, 0
  br i1 %5700, label %5705, label %5701

5701:                                             ; preds = %5698
  %5702 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5703 = load i8, i8* %5702, align 8, !range !5
  %5704 = icmp eq i8 %5703, 0
  br i1 %5704, label %5705, label %6330

5705:                                             ; preds = %5701, %5698
  %5706 = add i64 %5675, -2
  %5707 = icmp ult i64 %5706, %5684
  br i1 %5707, label %6330, label %5708

5708:                                             ; preds = %5705
  %5709 = getelementptr inbounds i8, i8* %5668, i64 %5684
  %5710 = bitcast i8* %5709 to i16*
  %5711 = load i16, i16* %5710, align 2
  %5712 = zext i16 %5711 to i64
  %5713 = and i64 %5712, 1
  %5714 = icmp eq i64 %5713, 0
  br i1 %5714, label %5719, label %5715

5715:                                             ; preds = %5708
  %5716 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5717 = load i8, i8* %5716, align 8, !range !5
  %5718 = icmp eq i8 %5717, 0
  br i1 %5718, label %5719, label %6330

5719:                                             ; preds = %5708, %5715
  %5720 = icmp ugt i64 %5675, %5712
  %5721 = sub i64 %5675, %5712
  %5722 = icmp uge i64 %5721, %5684
  %5723 = and i1 %5720, %5722
  br i1 %5723, label %5724, label %6330

5724:                                             ; preds = %5719
  %5725 = load i32, i32* %5681, align 4
  %5726 = sext i32 %5725 to i64
  %5727 = sub nsw i64 0, %5726
  %5728 = getelementptr inbounds %"struct.tflite::WhileOptions", %"struct.tflite::WhileOptions"* %5659, i64 0, i32 0, i32 0, i64 %5727
  %5729 = bitcast i8* %5728 to i16*
  %5730 = load i16, i16* %5729, align 2
  %5731 = icmp ugt i16 %5730, 4
  br i1 %5731, label %5732, label %5752

5732:                                             ; preds = %5724
  %5733 = getelementptr inbounds i8, i8* %5728, i64 4
  %5734 = bitcast i8* %5733 to i16*
  %5735 = load i16, i16* %5734, align 2
  %5736 = icmp eq i16 %5735, 0
  br i1 %5736, label %5741, label %5737

5737:                                             ; preds = %5732
  %5738 = zext i16 %5735 to i64
  %5739 = add i64 %5665, %5738
  %5740 = icmp ult i64 %5677, %5739
  br i1 %5740, label %6330, label %5741

5741:                                             ; preds = %5737, %5732
  %5742 = icmp ugt i16 %5730, 6
  br i1 %5742, label %5743, label %5752

5743:                                             ; preds = %5741
  %5744 = getelementptr inbounds i8, i8* %5728, i64 6
  %5745 = bitcast i8* %5744 to i16*
  %5746 = load i16, i16* %5745, align 2
  %5747 = icmp eq i16 %5746, 0
  br i1 %5747, label %5752, label %5748

5748:                                             ; preds = %5743
  %5749 = zext i16 %5746 to i64
  %5750 = add i64 %5665, %5749
  %5751 = icmp ult i64 %5677, %5750
  br i1 %5751, label %6330, label %5752

5752:                                             ; preds = %5748, %5743, %5741, %5724
  store i32 %5686, i32* %5685, align 8
  br label %6330

5753:                                             ; preds = %3
  %5754 = bitcast i8* %1 to %"struct.tflite::DepthToSpaceOptions"*
  %5755 = icmp eq i8* %1, null
  br i1 %5755, label %6330, label %5756

5756:                                             ; preds = %5753
  %5757 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5758 = load i64, i64* %5757, align 8
  %5759 = ptrtoint i8* %1 to i64
  %5760 = sub i64 %5759, %5758
  %5761 = and i64 %5760, 3
  %5762 = icmp eq i64 %5761, 0
  %5763 = inttoptr i64 %5758 to i8*
  br i1 %5762, label %5768, label %5764

5764:                                             ; preds = %5756
  %5765 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5766 = load i8, i8* %5765, align 8, !range !5
  %5767 = icmp eq i8 %5766, 0
  br i1 %5767, label %5768, label %6330

5768:                                             ; preds = %5764, %5756
  %5769 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5770 = load i64, i64* %5769, align 8
  %5771 = icmp ugt i64 %5770, 4
  %5772 = add i64 %5770, -4
  %5773 = icmp uge i64 %5772, %5760
  %5774 = and i1 %5771, %5773
  br i1 %5774, label %5775, label %6330

5775:                                             ; preds = %5768
  %5776 = bitcast i8* %1 to i32*
  %5777 = load i32, i32* %5776, align 4
  %5778 = sext i32 %5777 to i64
  %5779 = sub i64 %5760, %5778
  %5780 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5781 = load i32, i32* %5780, align 8
  %5782 = add i32 %5781, 1
  store i32 %5782, i32* %5780, align 8
  %5783 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5784 = load i32, i32* %5783, align 8
  %5785 = add i32 %5784, 1
  store i32 %5785, i32* %5783, align 8
  %5786 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5787 = load i32, i32* %5786, align 4
  %5788 = icmp ugt i32 %5782, %5787
  br i1 %5788, label %6330, label %5789

5789:                                             ; preds = %5775
  %5790 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5791 = load i32, i32* %5790, align 4
  %5792 = icmp ugt i32 %5785, %5791
  br i1 %5792, label %6330, label %5793

5793:                                             ; preds = %5789
  %5794 = and i64 %5779, 1
  %5795 = icmp eq i64 %5794, 0
  br i1 %5795, label %5800, label %5796

5796:                                             ; preds = %5793
  %5797 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5798 = load i8, i8* %5797, align 8, !range !5
  %5799 = icmp eq i8 %5798, 0
  br i1 %5799, label %5800, label %6330

5800:                                             ; preds = %5796, %5793
  %5801 = add i64 %5770, -2
  %5802 = icmp ult i64 %5801, %5779
  br i1 %5802, label %6330, label %5803

5803:                                             ; preds = %5800
  %5804 = getelementptr inbounds i8, i8* %5763, i64 %5779
  %5805 = bitcast i8* %5804 to i16*
  %5806 = load i16, i16* %5805, align 2
  %5807 = zext i16 %5806 to i64
  %5808 = and i64 %5807, 1
  %5809 = icmp eq i64 %5808, 0
  br i1 %5809, label %5814, label %5810

5810:                                             ; preds = %5803
  %5811 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5812 = load i8, i8* %5811, align 8, !range !5
  %5813 = icmp eq i8 %5812, 0
  br i1 %5813, label %5814, label %6330

5814:                                             ; preds = %5803, %5810
  %5815 = icmp ugt i64 %5770, %5807
  %5816 = sub i64 %5770, %5807
  %5817 = icmp uge i64 %5816, %5779
  %5818 = and i1 %5815, %5817
  br i1 %5818, label %5819, label %6330

5819:                                             ; preds = %5814
  %5820 = load i32, i32* %5776, align 4
  %5821 = sext i32 %5820 to i64
  %5822 = sub nsw i64 0, %5821
  %5823 = getelementptr inbounds %"struct.tflite::DepthToSpaceOptions", %"struct.tflite::DepthToSpaceOptions"* %5754, i64 0, i32 0, i32 0, i64 %5822
  %5824 = bitcast i8* %5823 to i16*
  %5825 = load i16, i16* %5824, align 2
  %5826 = icmp ugt i16 %5825, 4
  br i1 %5826, label %5827, label %5836

5827:                                             ; preds = %5819
  %5828 = getelementptr inbounds i8, i8* %5823, i64 4
  %5829 = bitcast i8* %5828 to i16*
  %5830 = load i16, i16* %5829, align 2
  %5831 = icmp eq i16 %5830, 0
  br i1 %5831, label %5836, label %5832

5832:                                             ; preds = %5827
  %5833 = zext i16 %5830 to i64
  %5834 = add i64 %5760, %5833
  %5835 = icmp ult i64 %5772, %5834
  br i1 %5835, label %6330, label %5836

5836:                                             ; preds = %5832, %5827, %5819
  store i32 %5781, i32* %5780, align 8
  br label %6330

5837:                                             ; preds = %3
  %5838 = icmp eq i8* %1, null
  br i1 %5838, label %6330, label %5839

5839:                                             ; preds = %5837
  %5840 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5841 = load i64, i64* %5840, align 8
  %5842 = ptrtoint i8* %1 to i64
  %5843 = sub i64 %5842, %5841
  %5844 = and i64 %5843, 3
  %5845 = icmp eq i64 %5844, 0
  %5846 = inttoptr i64 %5841 to i8*
  br i1 %5845, label %5851, label %5847

5847:                                             ; preds = %5839
  %5848 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5849 = load i8, i8* %5848, align 8, !range !5
  %5850 = icmp eq i8 %5849, 0
  br i1 %5850, label %5851, label %6330

5851:                                             ; preds = %5847, %5839
  %5852 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5853 = load i64, i64* %5852, align 8
  %5854 = icmp ugt i64 %5853, 4
  %5855 = add i64 %5853, -4
  %5856 = icmp uge i64 %5855, %5843
  %5857 = and i1 %5854, %5856
  br i1 %5857, label %5858, label %6330

5858:                                             ; preds = %5851
  %5859 = bitcast i8* %1 to i32*
  %5860 = load i32, i32* %5859, align 4
  %5861 = sext i32 %5860 to i64
  %5862 = sub i64 %5843, %5861
  %5863 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5864 = load i32, i32* %5863, align 8
  %5865 = add i32 %5864, 1
  store i32 %5865, i32* %5863, align 8
  %5866 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5867 = load i32, i32* %5866, align 8
  %5868 = add i32 %5867, 1
  store i32 %5868, i32* %5866, align 8
  %5869 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5870 = load i32, i32* %5869, align 4
  %5871 = icmp ugt i32 %5865, %5870
  br i1 %5871, label %6330, label %5872

5872:                                             ; preds = %5858
  %5873 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5874 = load i32, i32* %5873, align 4
  %5875 = icmp ugt i32 %5868, %5874
  br i1 %5875, label %6330, label %5876

5876:                                             ; preds = %5872
  %5877 = and i64 %5862, 1
  %5878 = icmp eq i64 %5877, 0
  br i1 %5878, label %5883, label %5879

5879:                                             ; preds = %5876
  %5880 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5881 = load i8, i8* %5880, align 8, !range !5
  %5882 = icmp eq i8 %5881, 0
  br i1 %5882, label %5883, label %6330

5883:                                             ; preds = %5879, %5876
  %5884 = add i64 %5853, -2
  %5885 = icmp ult i64 %5884, %5862
  br i1 %5885, label %6330, label %5886

5886:                                             ; preds = %5883
  %5887 = getelementptr inbounds i8, i8* %5846, i64 %5862
  %5888 = bitcast i8* %5887 to i16*
  %5889 = load i16, i16* %5888, align 2
  %5890 = zext i16 %5889 to i64
  %5891 = and i64 %5890, 1
  %5892 = icmp eq i64 %5891, 0
  br i1 %5892, label %5897, label %5893

5893:                                             ; preds = %5886
  %5894 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5895 = load i8, i8* %5894, align 8, !range !5
  %5896 = icmp eq i8 %5895, 0
  br i1 %5896, label %5897, label %6330

5897:                                             ; preds = %5893, %5886
  %5898 = icmp ugt i64 %5853, %5890
  %5899 = sub i64 %5853, %5890
  %5900 = icmp uge i64 %5899, %5862
  %5901 = and i1 %5898, %5900
  br i1 %5901, label %5902, label %6330

5902:                                             ; preds = %5897
  store i32 %5864, i32* %5863, align 8
  br label %6330

5903:                                             ; preds = %3
  %5904 = icmp eq i8* %1, null
  br i1 %5904, label %6330, label %5905

5905:                                             ; preds = %5903
  %5906 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5907 = load i64, i64* %5906, align 8
  %5908 = ptrtoint i8* %1 to i64
  %5909 = sub i64 %5908, %5907
  %5910 = and i64 %5909, 3
  %5911 = icmp eq i64 %5910, 0
  %5912 = inttoptr i64 %5907 to i8*
  br i1 %5911, label %5917, label %5913

5913:                                             ; preds = %5905
  %5914 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5915 = load i8, i8* %5914, align 8, !range !5
  %5916 = icmp eq i8 %5915, 0
  br i1 %5916, label %5917, label %6330

5917:                                             ; preds = %5913, %5905
  %5918 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5919 = load i64, i64* %5918, align 8
  %5920 = icmp ugt i64 %5919, 4
  %5921 = add i64 %5919, -4
  %5922 = icmp uge i64 %5921, %5909
  %5923 = and i1 %5920, %5922
  br i1 %5923, label %5924, label %6330

5924:                                             ; preds = %5917
  %5925 = bitcast i8* %1 to i32*
  %5926 = load i32, i32* %5925, align 4
  %5927 = sext i32 %5926 to i64
  %5928 = sub i64 %5909, %5927
  %5929 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5930 = load i32, i32* %5929, align 8
  %5931 = add i32 %5930, 1
  store i32 %5931, i32* %5929, align 8
  %5932 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5933 = load i32, i32* %5932, align 8
  %5934 = add i32 %5933, 1
  store i32 %5934, i32* %5932, align 8
  %5935 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %5936 = load i32, i32* %5935, align 4
  %5937 = icmp ugt i32 %5931, %5936
  br i1 %5937, label %6330, label %5938

5938:                                             ; preds = %5924
  %5939 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %5940 = load i32, i32* %5939, align 4
  %5941 = icmp ugt i32 %5934, %5940
  br i1 %5941, label %6330, label %5942

5942:                                             ; preds = %5938
  %5943 = and i64 %5928, 1
  %5944 = icmp eq i64 %5943, 0
  br i1 %5944, label %5949, label %5945

5945:                                             ; preds = %5942
  %5946 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5947 = load i8, i8* %5946, align 8, !range !5
  %5948 = icmp eq i8 %5947, 0
  br i1 %5948, label %5949, label %6330

5949:                                             ; preds = %5945, %5942
  %5950 = add i64 %5919, -2
  %5951 = icmp ult i64 %5950, %5928
  br i1 %5951, label %6330, label %5952

5952:                                             ; preds = %5949
  %5953 = getelementptr inbounds i8, i8* %5912, i64 %5928
  %5954 = bitcast i8* %5953 to i16*
  %5955 = load i16, i16* %5954, align 2
  %5956 = zext i16 %5955 to i64
  %5957 = and i64 %5956, 1
  %5958 = icmp eq i64 %5957, 0
  br i1 %5958, label %5963, label %5959

5959:                                             ; preds = %5952
  %5960 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5961 = load i8, i8* %5960, align 8, !range !5
  %5962 = icmp eq i8 %5961, 0
  br i1 %5962, label %5963, label %6330

5963:                                             ; preds = %5959, %5952
  %5964 = icmp ugt i64 %5919, %5956
  %5965 = sub i64 %5919, %5956
  %5966 = icmp uge i64 %5965, %5928
  %5967 = and i1 %5964, %5966
  br i1 %5967, label %5968, label %6330

5968:                                             ; preds = %5963
  store i32 %5930, i32* %5929, align 8
  br label %6330

5969:                                             ; preds = %3
  %5970 = icmp eq i8* %1, null
  br i1 %5970, label %6330, label %5971

5971:                                             ; preds = %5969
  %5972 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %5973 = load i64, i64* %5972, align 8
  %5974 = ptrtoint i8* %1 to i64
  %5975 = sub i64 %5974, %5973
  %5976 = and i64 %5975, 3
  %5977 = icmp eq i64 %5976, 0
  %5978 = inttoptr i64 %5973 to i8*
  br i1 %5977, label %5983, label %5979

5979:                                             ; preds = %5971
  %5980 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %5981 = load i8, i8* %5980, align 8, !range !5
  %5982 = icmp eq i8 %5981, 0
  br i1 %5982, label %5983, label %6330

5983:                                             ; preds = %5979, %5971
  %5984 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %5985 = load i64, i64* %5984, align 8
  %5986 = icmp ugt i64 %5985, 4
  %5987 = add i64 %5985, -4
  %5988 = icmp uge i64 %5987, %5975
  %5989 = and i1 %5986, %5988
  br i1 %5989, label %5990, label %6330

5990:                                             ; preds = %5983
  %5991 = bitcast i8* %1 to i32*
  %5992 = load i32, i32* %5991, align 4
  %5993 = sext i32 %5992 to i64
  %5994 = sub i64 %5975, %5993
  %5995 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %5996 = load i32, i32* %5995, align 8
  %5997 = add i32 %5996, 1
  store i32 %5997, i32* %5995, align 8
  %5998 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %5999 = load i32, i32* %5998, align 8
  %6000 = add i32 %5999, 1
  store i32 %6000, i32* %5998, align 8
  %6001 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %6002 = load i32, i32* %6001, align 4
  %6003 = icmp ugt i32 %5997, %6002
  br i1 %6003, label %6330, label %6004

6004:                                             ; preds = %5990
  %6005 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %6006 = load i32, i32* %6005, align 4
  %6007 = icmp ugt i32 %6000, %6006
  br i1 %6007, label %6330, label %6008

6008:                                             ; preds = %6004
  %6009 = and i64 %5994, 1
  %6010 = icmp eq i64 %6009, 0
  br i1 %6010, label %6015, label %6011

6011:                                             ; preds = %6008
  %6012 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6013 = load i8, i8* %6012, align 8, !range !5
  %6014 = icmp eq i8 %6013, 0
  br i1 %6014, label %6015, label %6330

6015:                                             ; preds = %6011, %6008
  %6016 = add i64 %5985, -2
  %6017 = icmp ult i64 %6016, %5994
  br i1 %6017, label %6330, label %6018

6018:                                             ; preds = %6015
  %6019 = getelementptr inbounds i8, i8* %5978, i64 %5994
  %6020 = bitcast i8* %6019 to i16*
  %6021 = load i16, i16* %6020, align 2
  %6022 = zext i16 %6021 to i64
  %6023 = and i64 %6022, 1
  %6024 = icmp eq i64 %6023, 0
  br i1 %6024, label %6029, label %6025

6025:                                             ; preds = %6018
  %6026 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6027 = load i8, i8* %6026, align 8, !range !5
  %6028 = icmp eq i8 %6027, 0
  br i1 %6028, label %6029, label %6330

6029:                                             ; preds = %6025, %6018
  %6030 = icmp ugt i64 %5985, %6022
  %6031 = sub i64 %5985, %6022
  %6032 = icmp uge i64 %6031, %5994
  %6033 = and i1 %6030, %6032
  br i1 %6033, label %6034, label %6330

6034:                                             ; preds = %6029
  store i32 %5996, i32* %5995, align 8
  br label %6330

6035:                                             ; preds = %3
  %6036 = icmp eq i8* %1, null
  br i1 %6036, label %6330, label %6037

6037:                                             ; preds = %6035
  %6038 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %6039 = load i64, i64* %6038, align 8
  %6040 = ptrtoint i8* %1 to i64
  %6041 = sub i64 %6040, %6039
  %6042 = and i64 %6041, 3
  %6043 = icmp eq i64 %6042, 0
  %6044 = inttoptr i64 %6039 to i8*
  br i1 %6043, label %6049, label %6045

6045:                                             ; preds = %6037
  %6046 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6047 = load i8, i8* %6046, align 8, !range !5
  %6048 = icmp eq i8 %6047, 0
  br i1 %6048, label %6049, label %6330

6049:                                             ; preds = %6045, %6037
  %6050 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %6051 = load i64, i64* %6050, align 8
  %6052 = icmp ugt i64 %6051, 4
  %6053 = add i64 %6051, -4
  %6054 = icmp uge i64 %6053, %6041
  %6055 = and i1 %6052, %6054
  br i1 %6055, label %6056, label %6330

6056:                                             ; preds = %6049
  %6057 = bitcast i8* %1 to i32*
  %6058 = load i32, i32* %6057, align 4
  %6059 = sext i32 %6058 to i64
  %6060 = sub i64 %6041, %6059
  %6061 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %6062 = load i32, i32* %6061, align 8
  %6063 = add i32 %6062, 1
  store i32 %6063, i32* %6061, align 8
  %6064 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %6065 = load i32, i32* %6064, align 8
  %6066 = add i32 %6065, 1
  store i32 %6066, i32* %6064, align 8
  %6067 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %6068 = load i32, i32* %6067, align 4
  %6069 = icmp ugt i32 %6063, %6068
  br i1 %6069, label %6330, label %6070

6070:                                             ; preds = %6056
  %6071 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %6072 = load i32, i32* %6071, align 4
  %6073 = icmp ugt i32 %6066, %6072
  br i1 %6073, label %6330, label %6074

6074:                                             ; preds = %6070
  %6075 = and i64 %6060, 1
  %6076 = icmp eq i64 %6075, 0
  br i1 %6076, label %6081, label %6077

6077:                                             ; preds = %6074
  %6078 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6079 = load i8, i8* %6078, align 8, !range !5
  %6080 = icmp eq i8 %6079, 0
  br i1 %6080, label %6081, label %6330

6081:                                             ; preds = %6077, %6074
  %6082 = add i64 %6051, -2
  %6083 = icmp ult i64 %6082, %6060
  br i1 %6083, label %6330, label %6084

6084:                                             ; preds = %6081
  %6085 = getelementptr inbounds i8, i8* %6044, i64 %6060
  %6086 = bitcast i8* %6085 to i16*
  %6087 = load i16, i16* %6086, align 2
  %6088 = zext i16 %6087 to i64
  %6089 = and i64 %6088, 1
  %6090 = icmp eq i64 %6089, 0
  br i1 %6090, label %6095, label %6091

6091:                                             ; preds = %6084
  %6092 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6093 = load i8, i8* %6092, align 8, !range !5
  %6094 = icmp eq i8 %6093, 0
  br i1 %6094, label %6095, label %6330

6095:                                             ; preds = %6091, %6084
  %6096 = icmp ugt i64 %6051, %6088
  %6097 = sub i64 %6051, %6088
  %6098 = icmp uge i64 %6097, %6060
  %6099 = and i1 %6096, %6098
  br i1 %6099, label %6100, label %6330

6100:                                             ; preds = %6095
  store i32 %6062, i32* %6061, align 8
  br label %6330

6101:                                             ; preds = %3
  %6102 = icmp eq i8* %1, null
  br i1 %6102, label %6330, label %6103

6103:                                             ; preds = %6101
  %6104 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %6105 = load i64, i64* %6104, align 8
  %6106 = ptrtoint i8* %1 to i64
  %6107 = sub i64 %6106, %6105
  %6108 = and i64 %6107, 3
  %6109 = icmp eq i64 %6108, 0
  %6110 = inttoptr i64 %6105 to i8*
  br i1 %6109, label %6115, label %6111

6111:                                             ; preds = %6103
  %6112 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6113 = load i8, i8* %6112, align 8, !range !5
  %6114 = icmp eq i8 %6113, 0
  br i1 %6114, label %6115, label %6330

6115:                                             ; preds = %6111, %6103
  %6116 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %6117 = load i64, i64* %6116, align 8
  %6118 = icmp ugt i64 %6117, 4
  %6119 = add i64 %6117, -4
  %6120 = icmp uge i64 %6119, %6107
  %6121 = and i1 %6118, %6120
  br i1 %6121, label %6122, label %6330

6122:                                             ; preds = %6115
  %6123 = bitcast i8* %1 to i32*
  %6124 = load i32, i32* %6123, align 4
  %6125 = sext i32 %6124 to i64
  %6126 = sub i64 %6107, %6125
  %6127 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %6128 = load i32, i32* %6127, align 8
  %6129 = add i32 %6128, 1
  store i32 %6129, i32* %6127, align 8
  %6130 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %6131 = load i32, i32* %6130, align 8
  %6132 = add i32 %6131, 1
  store i32 %6132, i32* %6130, align 8
  %6133 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %6134 = load i32, i32* %6133, align 4
  %6135 = icmp ugt i32 %6129, %6134
  br i1 %6135, label %6330, label %6136

6136:                                             ; preds = %6122
  %6137 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %6138 = load i32, i32* %6137, align 4
  %6139 = icmp ugt i32 %6132, %6138
  br i1 %6139, label %6330, label %6140

6140:                                             ; preds = %6136
  %6141 = and i64 %6126, 1
  %6142 = icmp eq i64 %6141, 0
  br i1 %6142, label %6147, label %6143

6143:                                             ; preds = %6140
  %6144 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6145 = load i8, i8* %6144, align 8, !range !5
  %6146 = icmp eq i8 %6145, 0
  br i1 %6146, label %6147, label %6330

6147:                                             ; preds = %6143, %6140
  %6148 = add i64 %6117, -2
  %6149 = icmp ult i64 %6148, %6126
  br i1 %6149, label %6330, label %6150

6150:                                             ; preds = %6147
  %6151 = getelementptr inbounds i8, i8* %6110, i64 %6126
  %6152 = bitcast i8* %6151 to i16*
  %6153 = load i16, i16* %6152, align 2
  %6154 = zext i16 %6153 to i64
  %6155 = and i64 %6154, 1
  %6156 = icmp eq i64 %6155, 0
  br i1 %6156, label %6161, label %6157

6157:                                             ; preds = %6150
  %6158 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6159 = load i8, i8* %6158, align 8, !range !5
  %6160 = icmp eq i8 %6159, 0
  br i1 %6160, label %6161, label %6330

6161:                                             ; preds = %6157, %6150
  %6162 = icmp ugt i64 %6117, %6154
  %6163 = sub i64 %6117, %6154
  %6164 = icmp uge i64 %6163, %6126
  %6165 = and i1 %6162, %6164
  br i1 %6165, label %6166, label %6330

6166:                                             ; preds = %6161
  store i32 %6128, i32* %6127, align 8
  br label %6330

6167:                                             ; preds = %3
  %6168 = icmp eq i8* %1, null
  br i1 %6168, label %6330, label %6169

6169:                                             ; preds = %6167
  %6170 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %6171 = load i64, i64* %6170, align 8
  %6172 = ptrtoint i8* %1 to i64
  %6173 = sub i64 %6172, %6171
  %6174 = and i64 %6173, 3
  %6175 = icmp eq i64 %6174, 0
  %6176 = inttoptr i64 %6171 to i8*
  br i1 %6175, label %6181, label %6177

6177:                                             ; preds = %6169
  %6178 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6179 = load i8, i8* %6178, align 8, !range !5
  %6180 = icmp eq i8 %6179, 0
  br i1 %6180, label %6181, label %6330

6181:                                             ; preds = %6177, %6169
  %6182 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %6183 = load i64, i64* %6182, align 8
  %6184 = icmp ugt i64 %6183, 4
  %6185 = add i64 %6183, -4
  %6186 = icmp uge i64 %6185, %6173
  %6187 = and i1 %6184, %6186
  br i1 %6187, label %6188, label %6330

6188:                                             ; preds = %6181
  %6189 = bitcast i8* %1 to i32*
  %6190 = load i32, i32* %6189, align 4
  %6191 = sext i32 %6190 to i64
  %6192 = sub i64 %6173, %6191
  %6193 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %6194 = load i32, i32* %6193, align 8
  %6195 = add i32 %6194, 1
  store i32 %6195, i32* %6193, align 8
  %6196 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %6197 = load i32, i32* %6196, align 8
  %6198 = add i32 %6197, 1
  store i32 %6198, i32* %6196, align 8
  %6199 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %6200 = load i32, i32* %6199, align 4
  %6201 = icmp ugt i32 %6195, %6200
  br i1 %6201, label %6330, label %6202

6202:                                             ; preds = %6188
  %6203 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %6204 = load i32, i32* %6203, align 4
  %6205 = icmp ugt i32 %6198, %6204
  br i1 %6205, label %6330, label %6206

6206:                                             ; preds = %6202
  %6207 = and i64 %6192, 1
  %6208 = icmp eq i64 %6207, 0
  br i1 %6208, label %6213, label %6209

6209:                                             ; preds = %6206
  %6210 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6211 = load i8, i8* %6210, align 8, !range !5
  %6212 = icmp eq i8 %6211, 0
  br i1 %6212, label %6213, label %6330

6213:                                             ; preds = %6209, %6206
  %6214 = add i64 %6183, -2
  %6215 = icmp ult i64 %6214, %6192
  br i1 %6215, label %6330, label %6216

6216:                                             ; preds = %6213
  %6217 = getelementptr inbounds i8, i8* %6176, i64 %6192
  %6218 = bitcast i8* %6217 to i16*
  %6219 = load i16, i16* %6218, align 2
  %6220 = zext i16 %6219 to i64
  %6221 = and i64 %6220, 1
  %6222 = icmp eq i64 %6221, 0
  br i1 %6222, label %6227, label %6223

6223:                                             ; preds = %6216
  %6224 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6225 = load i8, i8* %6224, align 8, !range !5
  %6226 = icmp eq i8 %6225, 0
  br i1 %6226, label %6227, label %6330

6227:                                             ; preds = %6223, %6216
  %6228 = icmp ugt i64 %6183, %6220
  %6229 = sub i64 %6183, %6220
  %6230 = icmp uge i64 %6229, %6192
  %6231 = and i1 %6228, %6230
  br i1 %6231, label %6232, label %6330

6232:                                             ; preds = %6227
  store i32 %6194, i32* %6193, align 8
  br label %6330

6233:                                             ; preds = %3
  %6234 = bitcast i8* %1 to %"struct.tflite::BatchMatMulOptions"*
  %6235 = icmp eq i8* %1, null
  br i1 %6235, label %6330, label %6236

6236:                                             ; preds = %6233
  %6237 = bitcast %"class.flatbuffers::Verifier"* %0 to i64*
  %6238 = load i64, i64* %6237, align 8
  %6239 = ptrtoint i8* %1 to i64
  %6240 = sub i64 %6239, %6238
  %6241 = and i64 %6240, 3
  %6242 = icmp eq i64 %6241, 0
  %6243 = inttoptr i64 %6238 to i8*
  br i1 %6242, label %6248, label %6244

6244:                                             ; preds = %6236
  %6245 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6246 = load i8, i8* %6245, align 8, !range !5
  %6247 = icmp eq i8 %6246, 0
  br i1 %6247, label %6248, label %6330

6248:                                             ; preds = %6244, %6236
  %6249 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 1
  %6250 = load i64, i64* %6249, align 8
  %6251 = icmp ugt i64 %6250, 4
  %6252 = add i64 %6250, -4
  %6253 = icmp uge i64 %6252, %6240
  %6254 = and i1 %6251, %6253
  br i1 %6254, label %6255, label %6330

6255:                                             ; preds = %6248
  %6256 = bitcast i8* %1 to i32*
  %6257 = load i32, i32* %6256, align 4
  %6258 = sext i32 %6257 to i64
  %6259 = sub i64 %6240, %6258
  %6260 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 2
  %6261 = load i32, i32* %6260, align 8
  %6262 = add i32 %6261, 1
  store i32 %6262, i32* %6260, align 8
  %6263 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 4
  %6264 = load i32, i32* %6263, align 8
  %6265 = add i32 %6264, 1
  store i32 %6265, i32* %6263, align 8
  %6266 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 3
  %6267 = load i32, i32* %6266, align 4
  %6268 = icmp ugt i32 %6262, %6267
  br i1 %6268, label %6330, label %6269

6269:                                             ; preds = %6255
  %6270 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 5
  %6271 = load i32, i32* %6270, align 4
  %6272 = icmp ugt i32 %6265, %6271
  br i1 %6272, label %6330, label %6273

6273:                                             ; preds = %6269
  %6274 = and i64 %6259, 1
  %6275 = icmp eq i64 %6274, 0
  br i1 %6275, label %6280, label %6276

6276:                                             ; preds = %6273
  %6277 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6278 = load i8, i8* %6277, align 8, !range !5
  %6279 = icmp eq i8 %6278, 0
  br i1 %6279, label %6280, label %6330

6280:                                             ; preds = %6276, %6273
  %6281 = add i64 %6250, -2
  %6282 = icmp ult i64 %6281, %6259
  br i1 %6282, label %6330, label %6283

6283:                                             ; preds = %6280
  %6284 = getelementptr inbounds i8, i8* %6243, i64 %6259
  %6285 = bitcast i8* %6284 to i16*
  %6286 = load i16, i16* %6285, align 2
  %6287 = zext i16 %6286 to i64
  %6288 = and i64 %6287, 1
  %6289 = icmp eq i64 %6288, 0
  br i1 %6289, label %6294, label %6290

6290:                                             ; preds = %6283
  %6291 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %0, i64 0, i32 7
  %6292 = load i8, i8* %6291, align 8, !range !5
  %6293 = icmp eq i8 %6292, 0
  br i1 %6293, label %6294, label %6330

6294:                                             ; preds = %6283, %6290
  %6295 = icmp ugt i64 %6250, %6287
  %6296 = sub i64 %6250, %6287
  %6297 = icmp uge i64 %6296, %6259
  %6298 = and i1 %6295, %6297
  br i1 %6298, label %6299, label %6330

6299:                                             ; preds = %6294
  %6300 = load i32, i32* %6256, align 4
  %6301 = sext i32 %6300 to i64
  %6302 = sub nsw i64 0, %6301
  %6303 = getelementptr inbounds %"struct.tflite::BatchMatMulOptions", %"struct.tflite::BatchMatMulOptions"* %6234, i64 0, i32 0, i32 0, i64 %6302
  %6304 = bitcast i8* %6303 to i16*
  %6305 = load i16, i16* %6304, align 2
  %6306 = icmp ugt i16 %6305, 4
  br i1 %6306, label %6307, label %6329

6307:                                             ; preds = %6299
  %6308 = getelementptr inbounds i8, i8* %6303, i64 4
  %6309 = bitcast i8* %6308 to i16*
  %6310 = load i16, i16* %6309, align 2
  %6311 = icmp eq i16 %6310, 0
  br i1 %6311, label %6317, label %6312

6312:                                             ; preds = %6307
  %6313 = zext i16 %6310 to i64
  %6314 = add i64 %6240, %6313
  %6315 = add i64 %6250, -1
  %6316 = icmp ult i64 %6315, %6314
  br i1 %6316, label %6330, label %6317

6317:                                             ; preds = %6312, %6307
  %6318 = icmp ugt i16 %6305, 6
  br i1 %6318, label %6319, label %6329

6319:                                             ; preds = %6317
  %6320 = getelementptr inbounds i8, i8* %6303, i64 6
  %6321 = bitcast i8* %6320 to i16*
  %6322 = load i16, i16* %6321, align 2
  %6323 = icmp eq i16 %6322, 0
  br i1 %6323, label %6329, label %6324

6324:                                             ; preds = %6319
  %6325 = zext i16 %6322 to i64
  %6326 = add i64 %6240, %6325
  %6327 = add i64 %6250, -1
  %6328 = icmp ult i64 %6327, %6326
  br i1 %6328, label %6330, label %6329

6329:                                             ; preds = %6324, %6319, %6317, %6299
  store i32 %6261, i32* %6260, align 8
  br label %6330

6330:                                             ; preds = %6324, %6312, %98, %205, %193, %390, %475, %560, %667, %655, %930, %1015, %1448, %1533, %1618, %2012, %2000, %2229, %2847, %3196, %3347, %4332, %4320, %4567, %4802, %295, %379, %752, %846, %1166, %1850, %3448, %3437, %3598, %3825, %3814, %4417, %4718, %5294, %5283, %5653, %5642, %5748, %5737, %5832, %6276, %6255, %6244, %6269, %6280, %6290, %6248, %5796, %5775, %5764, %5789, %5800, %5810, %5768, %5701, %5680, %5669, %5694, %5705, %5715, %5673, %5606, %5585, %5574, %5599, %5610, %5620, %5578, %5247, %5226, %5215, %5240, %5251, %5261, %5219, %4766, %4745, %4734, %4759, %4770, %4780, %4738, %4682, %4661, %4650, %4675, %4686, %4696, %4654, %4531, %4510, %4499, %4524, %4535, %4545, %4503, %4381, %4360, %4349, %4374, %4385, %4395, %4353, %4284, %4263, %4252, %4277, %4288, %4298, %4256, %3778, %3757, %3746, %3771, %3782, %3792, %3750, %3562, %3541, %3530, %3555, %3566, %3576, %3534, %3401, %3380, %3369, %3394, %3405, %3415, %3373, %3311, %3290, %3279, %3304, %3315, %3325, %3283, %3160, %3139, %3128, %3153, %3164, %3174, %3132, %2811, %2790, %2779, %2804, %2815, %2825, %2783, %2193, %2172, %2161, %2186, %2197, %2207, %2165, %1964, %1943, %1932, %1957, %1968, %1978, %1936, %1814, %1793, %1782, %1807, %1818, %1828, %1786, %1582, %1561, %1550, %1575, %1586, %1596, %1554, %1497, %1476, %1465, %1490, %1501, %1511, %1469, %1412, %1391, %1380, %1405, %1416, %1426, %1384, %1130, %1109, %1098, %1123, %1134, %1144, %1102, %979, %958, %947, %972, %983, %993, %951, %894, %873, %862, %887, %898, %908, %866, %810, %789, %778, %803, %814, %824, %782, %716, %695, %684, %709, %720, %730, %688, %619, %598, %587, %612, %623, %633, %591, %524, %503, %492, %517, %528, %538, %496, %439, %418, %407, %432, %443, %453, %411, %343, %322, %311, %336, %347, %357, %315, %259, %238, %227, %252, %263, %273, %231, %157, %136, %125, %150, %161, %171, %129, %62, %41, %30, %55, %66, %76, %34, %6329, %6294, %6233, %6232, %6227, %6223, %6213, %6209, %6202, %6188, %6181, %6177, %6167, %6166, %6161, %6157, %6147, %6143, %6136, %6122, %6115, %6111, %6101, %6100, %6095, %6091, %6081, %6077, %6070, %6056, %6049, %6045, %6035, %6034, %6029, %6025, %6015, %6011, %6004, %5990, %5983, %5979, %5969, %5968, %5963, %5959, %5949, %5945, %5938, %5924, %5917, %5913, %5903, %5902, %5897, %5893, %5883, %5879, %5872, %5858, %5851, %5847, %5837, %5836, %5814, %5753, %5752, %5719, %5658, %5657, %5624, %5563, %5562, %5557, %5553, %5543, %5539, %5532, %5518, %5511, %5507, %5497, %5496, %5491, %5487, %5477, %5473, %5466, %5452, %5445, %5441, %5431, %5430, %5425, %5421, %5411, %5407, %5400, %5386, %5379, %5375, %5365, %5364, %5359, %5355, %5345, %5341, %5334, %5320, %5313, %5309, %5299, %5298, %5265, %5204, %5203, %5198, %5194, %5184, %5180, %5173, %5159, %5152, %5148, %5138, %5137, %5132, %5128, %5118, %5114, %5107, %5093, %5086, %5082, %5072, %5071, %5066, %5062, %5052, %5048, %5041, %5027, %5020, %5016, %5006, %5005, %5000, %4996, %4986, %4982, %4975, %4961, %4954, %4950, %4940, %4939, %4934, %4930, %4920, %4916, %4909, %4895, %4888, %4884, %4874, %4873, %4868, %4864, %4854, %4850, %4843, %4829, %4822, %4818, %4808, %4807, %4784, %4723, %4722, %4700, %4639, %4638, %4633, %4629, %4619, %4615, %4608, %4594, %4587, %4583, %4573, %4572, %4549, %4488, %4487, %4482, %4478, %4468, %4464, %4457, %4443, %4436, %4432, %4422, %4421, %4399, %4338, %4337, %4302, %4241, %4240, %4235, %4231, %4221, %4217, %4210, %4196, %4189, %4185, %4175, %4174, %4169, %4165, %4155, %4151, %4144, %4130, %4123, %4119, %4109, %4106, %4104, %4101, %4099, %4096, %4094, %4093, %4088, %4084, %4074, %4070, %4063, %4049, %4042, %4038, %4028, %4027, %4022, %4018, %4008, %4004, %3997, %3983, %3976, %3972, %3962, %3961, %3956, %3952, %3942, %3938, %3931, %3917, %3910, %3906, %3896, %3895, %3890, %3886, %3876, %3872, %3865, %3851, %3844, %3840, %3830, %3829, %3796, %3735, %3734, %3729, %3725, %3715, %3711, %3704, %3690, %3683, %3679, %3669, %3668, %3663, %3659, %3649, %3645, %3638, %3624, %3617, %3613, %3603, %3602, %3580, %3519, %3518, %3513, %3509, %3499, %3495, %3488, %3474, %3467, %3463, %3453, %3452, %3419, %3358, %3355, %3353, %3352, %3329, %3268, %3267, %3262, %3258, %3248, %3244, %3237, %3223, %3216, %3212, %3202, %3201, %3178, %3117, %3116, %3111, %3107, %3097, %3093, %3086, %3072, %3065, %3061, %3051, %3050, %3045, %3041, %3031, %3027, %3020, %3006, %2999, %2995, %2985, %2984, %2979, %2975, %2965, %2961, %2954, %2940, %2933, %2929, %2919, %2918, %2913, %2909, %2899, %2895, %2888, %2874, %2867, %2863, %2853, %2852, %2829, %2768, %2765, %2763, %2762, %2757, %2753, %2743, %2739, %2732, %2718, %2711, %2707, %2697, %2696, %2691, %2687, %2677, %2673, %2666, %2652, %2645, %2641, %2631, %2630, %2625, %2621, %2611, %2607, %2600, %2586, %2579, %2575, %2565, %2564, %2559, %2555, %2545, %2541, %2534, %2520, %2513, %2509, %2499, %2498, %2493, %2489, %2479, %2475, %2468, %2454, %2447, %2443, %2433, %2432, %2427, %2423, %2413, %2409, %2402, %2388, %2381, %2377, %2367, %2366, %2361, %2357, %2347, %2343, %2336, %2322, %2315, %2311, %2301, %2300, %2295, %2291, %2281, %2277, %2270, %2256, %2249, %2245, %2235, %2234, %2211, %2150, %2149, %2144, %2140, %2130, %2126, %2119, %2105, %2098, %2094, %2084, %2083, %2078, %2074, %2064, %2060, %2053, %2039, %2032, %2028, %2018, %2017, %1982, %1921, %1920, %1915, %1911, %1901, %1897, %1890, %1876, %1869, %1865, %1855, %1854, %1832, %1771, %1770, %1765, %1761, %1751, %1747, %1740, %1726, %1719, %1715, %1705, %1704, %1699, %1695, %1685, %1681, %1674, %1660, %1653, %1649, %1639, %1636, %1634, %1631, %1629, %1626, %1624, %1623, %1600, %1539, %1538, %1515, %1454, %1453, %1430, %1369, %1368, %1363, %1359, %1349, %1345, %1338, %1324, %1317, %1313, %1303, %1302, %1297, %1293, %1283, %1279, %1272, %1258, %1251, %1247, %1237, %1236, %1231, %1227, %1217, %1213, %1206, %1192, %1185, %1181, %1171, %1170, %1148, %1087, %1086, %1081, %1077, %1067, %1063, %1056, %1042, %1035, %1031, %1021, %1020, %997, %936, %935, %912, %851, %850, %828, %767, %764, %762, %759, %757, %756, %734, %673, %672, %637, %576, %573, %571, %568, %566, %565, %542, %481, %480, %457, %396, %395, %361, %300, %299, %277, %216, %213, %211, %210, %175, %114, %111, %109, %106, %104, %103, %80, %19, %16, %14, %11, %9, %6, %4, %3
  %6331 = phi i1 [ true, %3 ], [ true, %4 ], [ %8, %6 ], [ true, %9 ], [ %13, %11 ], [ true, %14 ], [ %18, %16 ], [ true, %19 ], [ false, %98 ], [ false, %80 ], [ true, %103 ], [ true, %104 ], [ %108, %106 ], [ true, %109 ], [ %113, %111 ], [ true, %114 ], [ false, %205 ], [ false, %193 ], [ false, %175 ], [ true, %210 ], [ true, %211 ], [ %215, %213 ], [ true, %216 ], [ false, %295 ], [ false, %277 ], [ true, %299 ], [ true, %300 ], [ false, %390 ], [ false, %379 ], [ false, %361 ], [ true, %395 ], [ true, %396 ], [ false, %475 ], [ false, %457 ], [ true, %480 ], [ true, %481 ], [ false, %560 ], [ false, %542 ], [ true, %565 ], [ true, %566 ], [ %570, %568 ], [ true, %571 ], [ %575, %573 ], [ true, %576 ], [ false, %667 ], [ false, %655 ], [ false, %637 ], [ true, %672 ], [ true, %673 ], [ false, %752 ], [ false, %734 ], [ true, %756 ], [ true, %757 ], [ %761, %759 ], [ true, %762 ], [ %766, %764 ], [ true, %767 ], [ false, %846 ], [ false, %828 ], [ true, %850 ], [ true, %851 ], [ false, %930 ], [ false, %912 ], [ true, %935 ], [ true, %936 ], [ false, %1015 ], [ false, %997 ], [ true, %1020 ], [ true, %1021 ], [ false, %1081 ], [ true, %1086 ], [ false, %1035 ], [ false, %1077 ], [ false, %1067 ], [ false, %1056 ], [ false, %1031 ], [ false, %1042 ], [ false, %1063 ], [ true, %1087 ], [ false, %1166 ], [ false, %1148 ], [ true, %1170 ], [ true, %1171 ], [ false, %1231 ], [ true, %1236 ], [ false, %1185 ], [ false, %1227 ], [ false, %1217 ], [ false, %1206 ], [ false, %1181 ], [ false, %1192 ], [ false, %1213 ], [ true, %1237 ], [ false, %1297 ], [ true, %1302 ], [ false, %1251 ], [ false, %1293 ], [ false, %1283 ], [ false, %1272 ], [ false, %1247 ], [ false, %1258 ], [ false, %1279 ], [ true, %1303 ], [ false, %1363 ], [ true, %1368 ], [ false, %1317 ], [ false, %1359 ], [ false, %1349 ], [ false, %1338 ], [ false, %1313 ], [ false, %1324 ], [ false, %1345 ], [ true, %1369 ], [ false, %1448 ], [ false, %1430 ], [ true, %1453 ], [ true, %1454 ], [ false, %1533 ], [ false, %1515 ], [ true, %1538 ], [ true, %1539 ], [ false, %1618 ], [ false, %1600 ], [ true, %1623 ], [ true, %1624 ], [ %1628, %1626 ], [ true, %1629 ], [ %1633, %1631 ], [ true, %1634 ], [ %1638, %1636 ], [ true, %1639 ], [ false, %1699 ], [ true, %1704 ], [ false, %1653 ], [ false, %1695 ], [ false, %1685 ], [ false, %1674 ], [ false, %1649 ], [ false, %1660 ], [ false, %1681 ], [ true, %1705 ], [ false, %1765 ], [ true, %1770 ], [ false, %1719 ], [ false, %1761 ], [ false, %1751 ], [ false, %1740 ], [ false, %1715 ], [ false, %1726 ], [ false, %1747 ], [ true, %1771 ], [ false, %1850 ], [ false, %1832 ], [ true, %1854 ], [ true, %1855 ], [ false, %1915 ], [ true, %1920 ], [ false, %1869 ], [ false, %1911 ], [ false, %1901 ], [ false, %1890 ], [ false, %1865 ], [ false, %1876 ], [ false, %1897 ], [ true, %1921 ], [ false, %2012 ], [ false, %2000 ], [ false, %1982 ], [ true, %2017 ], [ true, %2018 ], [ false, %2078 ], [ true, %2083 ], [ false, %2032 ], [ false, %2074 ], [ false, %2064 ], [ false, %2053 ], [ false, %2028 ], [ false, %2039 ], [ false, %2060 ], [ true, %2084 ], [ false, %2144 ], [ true, %2149 ], [ false, %2098 ], [ false, %2140 ], [ false, %2130 ], [ false, %2119 ], [ false, %2094 ], [ false, %2105 ], [ false, %2126 ], [ true, %2150 ], [ false, %2229 ], [ false, %2211 ], [ true, %2234 ], [ true, %2235 ], [ false, %2295 ], [ true, %2300 ], [ false, %2249 ], [ false, %2291 ], [ false, %2281 ], [ false, %2270 ], [ false, %2245 ], [ false, %2256 ], [ false, %2277 ], [ true, %2301 ], [ false, %2361 ], [ true, %2366 ], [ false, %2315 ], [ false, %2357 ], [ false, %2347 ], [ false, %2336 ], [ false, %2311 ], [ false, %2322 ], [ false, %2343 ], [ true, %2367 ], [ false, %2427 ], [ true, %2432 ], [ false, %2381 ], [ false, %2423 ], [ false, %2413 ], [ false, %2402 ], [ false, %2377 ], [ false, %2388 ], [ false, %2409 ], [ true, %2433 ], [ false, %2493 ], [ true, %2498 ], [ false, %2447 ], [ false, %2489 ], [ false, %2479 ], [ false, %2468 ], [ false, %2443 ], [ false, %2454 ], [ false, %2475 ], [ true, %2499 ], [ false, %2559 ], [ true, %2564 ], [ false, %2513 ], [ false, %2555 ], [ false, %2545 ], [ false, %2534 ], [ false, %2509 ], [ false, %2520 ], [ false, %2541 ], [ true, %2565 ], [ false, %2625 ], [ true, %2630 ], [ false, %2579 ], [ false, %2621 ], [ false, %2611 ], [ false, %2600 ], [ false, %2575 ], [ false, %2586 ], [ false, %2607 ], [ true, %2631 ], [ false, %2691 ], [ true, %2696 ], [ false, %2645 ], [ false, %2687 ], [ false, %2677 ], [ false, %2666 ], [ false, %2641 ], [ false, %2652 ], [ false, %2673 ], [ true, %2697 ], [ false, %2757 ], [ true, %2762 ], [ false, %2711 ], [ false, %2753 ], [ false, %2743 ], [ false, %2732 ], [ false, %2707 ], [ false, %2718 ], [ false, %2739 ], [ true, %2763 ], [ %2767, %2765 ], [ true, %2768 ], [ false, %2847 ], [ false, %2829 ], [ true, %2852 ], [ true, %2853 ], [ false, %2913 ], [ true, %2918 ], [ false, %2867 ], [ false, %2909 ], [ false, %2899 ], [ false, %2888 ], [ false, %2863 ], [ false, %2874 ], [ false, %2895 ], [ true, %2919 ], [ false, %2979 ], [ true, %2984 ], [ false, %2933 ], [ false, %2975 ], [ false, %2965 ], [ false, %2954 ], [ false, %2929 ], [ false, %2940 ], [ false, %2961 ], [ true, %2985 ], [ false, %3045 ], [ true, %3050 ], [ false, %2999 ], [ false, %3041 ], [ false, %3031 ], [ false, %3020 ], [ false, %2995 ], [ false, %3006 ], [ false, %3027 ], [ true, %3051 ], [ false, %3111 ], [ true, %3116 ], [ false, %3065 ], [ false, %3107 ], [ false, %3097 ], [ false, %3086 ], [ false, %3061 ], [ false, %3072 ], [ false, %3093 ], [ true, %3117 ], [ false, %3196 ], [ false, %3178 ], [ true, %3201 ], [ true, %3202 ], [ false, %3262 ], [ true, %3267 ], [ false, %3216 ], [ false, %3258 ], [ false, %3248 ], [ false, %3237 ], [ false, %3212 ], [ false, %3223 ], [ false, %3244 ], [ true, %3268 ], [ false, %3347 ], [ false, %3329 ], [ true, %3352 ], [ true, %3353 ], [ %3357, %3355 ], [ true, %3358 ], [ false, %3448 ], [ false, %3437 ], [ false, %3419 ], [ true, %3452 ], [ true, %3453 ], [ false, %3513 ], [ true, %3518 ], [ false, %3467 ], [ false, %3509 ], [ false, %3499 ], [ false, %3488 ], [ false, %3463 ], [ false, %3474 ], [ false, %3495 ], [ true, %3519 ], [ false, %3598 ], [ false, %3580 ], [ true, %3602 ], [ true, %3603 ], [ false, %3663 ], [ true, %3668 ], [ false, %3617 ], [ false, %3659 ], [ false, %3649 ], [ false, %3638 ], [ false, %3613 ], [ false, %3624 ], [ false, %3645 ], [ true, %3669 ], [ false, %3729 ], [ true, %3734 ], [ false, %3683 ], [ false, %3725 ], [ false, %3715 ], [ false, %3704 ], [ false, %3679 ], [ false, %3690 ], [ false, %3711 ], [ true, %3735 ], [ false, %3825 ], [ false, %3814 ], [ false, %3796 ], [ true, %3829 ], [ true, %3830 ], [ false, %3890 ], [ true, %3895 ], [ false, %3844 ], [ false, %3886 ], [ false, %3876 ], [ false, %3865 ], [ false, %3840 ], [ false, %3851 ], [ false, %3872 ], [ true, %3896 ], [ false, %3956 ], [ true, %3961 ], [ false, %3910 ], [ false, %3952 ], [ false, %3942 ], [ false, %3931 ], [ false, %3906 ], [ false, %3917 ], [ false, %3938 ], [ true, %3962 ], [ false, %4022 ], [ true, %4027 ], [ false, %3976 ], [ false, %4018 ], [ false, %4008 ], [ false, %3997 ], [ false, %3972 ], [ false, %3983 ], [ false, %4004 ], [ true, %4028 ], [ false, %4088 ], [ true, %4093 ], [ false, %4042 ], [ false, %4084 ], [ false, %4074 ], [ false, %4063 ], [ false, %4038 ], [ false, %4049 ], [ false, %4070 ], [ true, %4094 ], [ %4098, %4096 ], [ true, %4099 ], [ %4103, %4101 ], [ true, %4104 ], [ %4108, %4106 ], [ true, %4109 ], [ false, %4169 ], [ true, %4174 ], [ false, %4123 ], [ false, %4165 ], [ false, %4155 ], [ false, %4144 ], [ false, %4119 ], [ false, %4130 ], [ false, %4151 ], [ true, %4175 ], [ false, %4235 ], [ true, %4240 ], [ false, %4189 ], [ false, %4231 ], [ false, %4221 ], [ false, %4210 ], [ false, %4185 ], [ false, %4196 ], [ false, %4217 ], [ true, %4241 ], [ false, %4332 ], [ false, %4320 ], [ false, %4302 ], [ true, %4337 ], [ true, %4338 ], [ false, %4417 ], [ false, %4399 ], [ true, %4421 ], [ true, %4422 ], [ false, %4482 ], [ true, %4487 ], [ false, %4436 ], [ false, %4478 ], [ false, %4468 ], [ false, %4457 ], [ false, %4432 ], [ false, %4443 ], [ false, %4464 ], [ true, %4488 ], [ false, %4567 ], [ false, %4549 ], [ true, %4572 ], [ true, %4573 ], [ false, %4633 ], [ true, %4638 ], [ false, %4587 ], [ false, %4629 ], [ false, %4619 ], [ false, %4608 ], [ false, %4583 ], [ false, %4594 ], [ false, %4615 ], [ true, %4639 ], [ false, %4718 ], [ false, %4700 ], [ true, %4722 ], [ true, %4723 ], [ false, %4802 ], [ false, %4784 ], [ true, %4807 ], [ true, %4808 ], [ false, %4868 ], [ true, %4873 ], [ false, %4822 ], [ false, %4864 ], [ false, %4854 ], [ false, %4843 ], [ false, %4818 ], [ false, %4829 ], [ false, %4850 ], [ true, %4874 ], [ false, %4934 ], [ true, %4939 ], [ false, %4888 ], [ false, %4930 ], [ false, %4920 ], [ false, %4909 ], [ false, %4884 ], [ false, %4895 ], [ false, %4916 ], [ true, %4940 ], [ false, %5000 ], [ true, %5005 ], [ false, %4954 ], [ false, %4996 ], [ false, %4986 ], [ false, %4975 ], [ false, %4950 ], [ false, %4961 ], [ false, %4982 ], [ true, %5006 ], [ false, %5066 ], [ true, %5071 ], [ false, %5020 ], [ false, %5062 ], [ false, %5052 ], [ false, %5041 ], [ false, %5016 ], [ false, %5027 ], [ false, %5048 ], [ true, %5072 ], [ false, %5132 ], [ true, %5137 ], [ false, %5086 ], [ false, %5128 ], [ false, %5118 ], [ false, %5107 ], [ false, %5082 ], [ false, %5093 ], [ false, %5114 ], [ true, %5138 ], [ false, %5198 ], [ true, %5203 ], [ false, %5152 ], [ false, %5194 ], [ false, %5184 ], [ false, %5173 ], [ false, %5148 ], [ false, %5159 ], [ false, %5180 ], [ true, %5204 ], [ false, %5294 ], [ false, %5283 ], [ false, %5265 ], [ true, %5298 ], [ true, %5299 ], [ false, %5359 ], [ true, %5364 ], [ false, %5313 ], [ false, %5355 ], [ false, %5345 ], [ false, %5334 ], [ false, %5309 ], [ false, %5320 ], [ false, %5341 ], [ true, %5365 ], [ false, %5425 ], [ true, %5430 ], [ false, %5379 ], [ false, %5421 ], [ false, %5411 ], [ false, %5400 ], [ false, %5375 ], [ false, %5386 ], [ false, %5407 ], [ true, %5431 ], [ false, %5491 ], [ true, %5496 ], [ false, %5445 ], [ false, %5487 ], [ false, %5477 ], [ false, %5466 ], [ false, %5441 ], [ false, %5452 ], [ false, %5473 ], [ true, %5497 ], [ false, %5557 ], [ true, %5562 ], [ false, %5511 ], [ false, %5553 ], [ false, %5543 ], [ false, %5532 ], [ false, %5507 ], [ false, %5518 ], [ false, %5539 ], [ true, %5563 ], [ false, %5653 ], [ false, %5642 ], [ false, %5624 ], [ true, %5657 ], [ true, %5658 ], [ false, %5748 ], [ false, %5737 ], [ false, %5719 ], [ true, %5752 ], [ true, %5753 ], [ false, %5832 ], [ false, %5814 ], [ true, %5836 ], [ true, %5837 ], [ false, %5897 ], [ true, %5902 ], [ false, %5851 ], [ false, %5893 ], [ false, %5883 ], [ false, %5872 ], [ false, %5847 ], [ false, %5858 ], [ false, %5879 ], [ true, %5903 ], [ false, %5963 ], [ true, %5968 ], [ false, %5917 ], [ false, %5959 ], [ false, %5949 ], [ false, %5938 ], [ false, %5913 ], [ false, %5924 ], [ false, %5945 ], [ true, %5969 ], [ false, %6029 ], [ true, %6034 ], [ false, %5983 ], [ false, %6025 ], [ false, %6015 ], [ false, %6004 ], [ false, %5979 ], [ false, %5990 ], [ false, %6011 ], [ true, %6035 ], [ false, %6095 ], [ true, %6100 ], [ false, %6049 ], [ false, %6091 ], [ false, %6081 ], [ false, %6070 ], [ false, %6045 ], [ false, %6056 ], [ false, %6077 ], [ true, %6101 ], [ false, %6161 ], [ true, %6166 ], [ false, %6115 ], [ false, %6157 ], [ false, %6147 ], [ false, %6136 ], [ false, %6111 ], [ false, %6122 ], [ false, %6143 ], [ true, %6167 ], [ false, %6227 ], [ true, %6232 ], [ false, %6181 ], [ false, %6223 ], [ false, %6213 ], [ false, %6202 ], [ false, %6177 ], [ false, %6188 ], [ false, %6209 ], [ true, %6233 ], [ false, %6324 ], [ false, %6312 ], [ false, %6294 ], [ true, %6329 ], [ false, %34 ], [ false, %76 ], [ false, %66 ], [ false, %55 ], [ false, %30 ], [ false, %41 ], [ false, %62 ], [ false, %129 ], [ false, %171 ], [ false, %161 ], [ false, %150 ], [ false, %125 ], [ false, %136 ], [ false, %157 ], [ false, %231 ], [ false, %273 ], [ false, %263 ], [ false, %252 ], [ false, %227 ], [ false, %238 ], [ false, %259 ], [ false, %315 ], [ false, %357 ], [ false, %347 ], [ false, %336 ], [ false, %311 ], [ false, %322 ], [ false, %343 ], [ false, %411 ], [ false, %453 ], [ false, %443 ], [ false, %432 ], [ false, %407 ], [ false, %418 ], [ false, %439 ], [ false, %496 ], [ false, %538 ], [ false, %528 ], [ false, %517 ], [ false, %492 ], [ false, %503 ], [ false, %524 ], [ false, %591 ], [ false, %633 ], [ false, %623 ], [ false, %612 ], [ false, %587 ], [ false, %598 ], [ false, %619 ], [ false, %688 ], [ false, %730 ], [ false, %720 ], [ false, %709 ], [ false, %684 ], [ false, %695 ], [ false, %716 ], [ false, %782 ], [ false, %824 ], [ false, %814 ], [ false, %803 ], [ false, %778 ], [ false, %789 ], [ false, %810 ], [ false, %866 ], [ false, %908 ], [ false, %898 ], [ false, %887 ], [ false, %862 ], [ false, %873 ], [ false, %894 ], [ false, %951 ], [ false, %993 ], [ false, %983 ], [ false, %972 ], [ false, %947 ], [ false, %958 ], [ false, %979 ], [ false, %1102 ], [ false, %1144 ], [ false, %1134 ], [ false, %1123 ], [ false, %1098 ], [ false, %1109 ], [ false, %1130 ], [ false, %1384 ], [ false, %1426 ], [ false, %1416 ], [ false, %1405 ], [ false, %1380 ], [ false, %1391 ], [ false, %1412 ], [ false, %1469 ], [ false, %1511 ], [ false, %1501 ], [ false, %1490 ], [ false, %1465 ], [ false, %1476 ], [ false, %1497 ], [ false, %1554 ], [ false, %1596 ], [ false, %1586 ], [ false, %1575 ], [ false, %1550 ], [ false, %1561 ], [ false, %1582 ], [ false, %1786 ], [ false, %1828 ], [ false, %1818 ], [ false, %1807 ], [ false, %1782 ], [ false, %1793 ], [ false, %1814 ], [ false, %1936 ], [ false, %1978 ], [ false, %1968 ], [ false, %1957 ], [ false, %1932 ], [ false, %1943 ], [ false, %1964 ], [ false, %2165 ], [ false, %2207 ], [ false, %2197 ], [ false, %2186 ], [ false, %2161 ], [ false, %2172 ], [ false, %2193 ], [ false, %2783 ], [ false, %2825 ], [ false, %2815 ], [ false, %2804 ], [ false, %2779 ], [ false, %2790 ], [ false, %2811 ], [ false, %3132 ], [ false, %3174 ], [ false, %3164 ], [ false, %3153 ], [ false, %3128 ], [ false, %3139 ], [ false, %3160 ], [ false, %3283 ], [ false, %3325 ], [ false, %3315 ], [ false, %3304 ], [ false, %3279 ], [ false, %3290 ], [ false, %3311 ], [ false, %3373 ], [ false, %3415 ], [ false, %3405 ], [ false, %3394 ], [ false, %3369 ], [ false, %3380 ], [ false, %3401 ], [ false, %3534 ], [ false, %3576 ], [ false, %3566 ], [ false, %3555 ], [ false, %3530 ], [ false, %3541 ], [ false, %3562 ], [ false, %3750 ], [ false, %3792 ], [ false, %3782 ], [ false, %3771 ], [ false, %3746 ], [ false, %3757 ], [ false, %3778 ], [ false, %4256 ], [ false, %4298 ], [ false, %4288 ], [ false, %4277 ], [ false, %4252 ], [ false, %4263 ], [ false, %4284 ], [ false, %4353 ], [ false, %4395 ], [ false, %4385 ], [ false, %4374 ], [ false, %4349 ], [ false, %4360 ], [ false, %4381 ], [ false, %4503 ], [ false, %4545 ], [ false, %4535 ], [ false, %4524 ], [ false, %4499 ], [ false, %4510 ], [ false, %4531 ], [ false, %4654 ], [ false, %4696 ], [ false, %4686 ], [ false, %4675 ], [ false, %4650 ], [ false, %4661 ], [ false, %4682 ], [ false, %4738 ], [ false, %4780 ], [ false, %4770 ], [ false, %4759 ], [ false, %4734 ], [ false, %4745 ], [ false, %4766 ], [ false, %5219 ], [ false, %5261 ], [ false, %5251 ], [ false, %5240 ], [ false, %5215 ], [ false, %5226 ], [ false, %5247 ], [ false, %5578 ], [ false, %5620 ], [ false, %5610 ], [ false, %5599 ], [ false, %5574 ], [ false, %5585 ], [ false, %5606 ], [ false, %5673 ], [ false, %5715 ], [ false, %5705 ], [ false, %5694 ], [ false, %5669 ], [ false, %5680 ], [ false, %5701 ], [ false, %5768 ], [ false, %5810 ], [ false, %5800 ], [ false, %5789 ], [ false, %5764 ], [ false, %5775 ], [ false, %5796 ], [ false, %6248 ], [ false, %6290 ], [ false, %6280 ], [ false, %6269 ], [ false, %6244 ], [ false, %6255 ], [ false, %6276 ]
  ret i1 %6331
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite13Conv2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Conv2DOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Conv2DOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Conv2DOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Conv2DOptions", %"struct.tflite::Conv2DOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %140, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %139

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %140, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %139

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %140, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %139

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = add i64 %16, -1
  %116 = icmp ult i64 %115, %114
  br i1 %116, label %140, label %117

117:                                              ; preds = %112, %107
  %118 = icmp ugt i16 %71, 12
  br i1 %118, label %119, label %139

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %69, i64 12
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = add i64 %6, %125
  %127 = icmp ult i64 %18, %126
  br i1 %127, label %140, label %128

128:                                              ; preds = %124, %119
  %129 = icmp ugt i16 %71, 14
  br i1 %129, label %130, label %139

130:                                              ; preds = %128
  %131 = getelementptr inbounds i8, i8* %69, i64 14
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = zext i16 %133 to i64
  %137 = add i64 %6, %136
  %138 = icmp ult i64 %18, %137
  br i1 %138, label %140, label %139

139:                                              ; preds = %135, %65, %83, %94, %105, %117, %128, %130
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %112, %78, %135, %124, %101, %90, %42, %21, %10, %35, %46, %56, %14, %139, %60
  %141 = phi i1 [ false, %135 ], [ false, %124 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite22DepthwiseConv2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::DepthwiseConv2DOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::DepthwiseConv2DOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %151

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %151

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::DepthwiseConv2DOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %151, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %151, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %151

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %151, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %151

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %151

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::DepthwiseConv2DOptions", %"struct.tflite::DepthwiseConv2DOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %150

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %151, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %150

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %151, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %150

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %151, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %150

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = icmp ult i64 %18, %114
  br i1 %115, label %151, label %116

116:                                              ; preds = %112, %107
  %117 = icmp ugt i16 %71, 12
  br i1 %117, label %118, label %150

118:                                              ; preds = %116
  %119 = getelementptr inbounds i8, i8* %69, i64 12
  %120 = bitcast i8* %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %118
  %124 = zext i16 %121 to i64
  %125 = add i64 %6, %124
  %126 = add i64 %16, -1
  %127 = icmp ult i64 %126, %125
  br i1 %127, label %151, label %128

128:                                              ; preds = %123, %118
  %129 = icmp ugt i16 %71, 14
  br i1 %129, label %130, label %150

130:                                              ; preds = %128
  %131 = getelementptr inbounds i8, i8* %69, i64 14
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = zext i16 %133 to i64
  %137 = add i64 %6, %136
  %138 = icmp ult i64 %18, %137
  br i1 %138, label %151, label %139

139:                                              ; preds = %135, %130
  %140 = icmp ugt i16 %71, 16
  br i1 %140, label %141, label %150

141:                                              ; preds = %139
  %142 = getelementptr inbounds i8, i8* %69, i64 16
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 2
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %150, label %146

146:                                              ; preds = %141
  %147 = zext i16 %144 to i64
  %148 = add i64 %6, %147
  %149 = icmp ult i64 %18, %148
  br i1 %149, label %151, label %150

150:                                              ; preds = %146, %65, %83, %94, %105, %116, %128, %139, %141
  store i32 %27, i32* %26, align 8
  br label %151

151:                                              ; preds = %123, %78, %146, %135, %112, %101, %90, %42, %21, %10, %35, %46, %56, %14, %150, %60
  %152 = phi i1 [ false, %146 ], [ false, %135 ], [ false, %123 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %150 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %152
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite23ConcatEmbeddingsOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::ConcatEmbeddingsOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::ConcatEmbeddingsOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %219

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %219

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::ConcatEmbeddingsOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %219, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %219, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %219

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %219, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %219

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %219

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::ConcatEmbeddingsOptions", %"struct.tflite::ConcatEmbeddingsOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %218

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %219, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %218

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = and i64 %91, 3
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %96 = load i8, i8* %95, align 8, !range !5
  %97 = icmp ne i8 %96, 0
  %98 = icmp ult i64 %18, %91
  %99 = or i1 %97, %98
  br i1 %99, label %219, label %102

100:                                              ; preds = %89
  %101 = icmp ult i64 %18, %91
  br i1 %101, label %219, label %102

102:                                              ; preds = %94, %100
  %103 = getelementptr inbounds i8, i8* %9, i64 %91
  %104 = bitcast i8* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  br i1 %106, label %107, label %219

107:                                              ; preds = %102
  %108 = zext i32 %105 to i64
  %109 = add i64 %91, %108
  %110 = add i64 %16, -1
  %111 = icmp ult i64 %110, %109
  br i1 %111, label %219, label %112

112:                                              ; preds = %107, %84
  %113 = getelementptr inbounds i8, i8* %69, i64 6
  %114 = bitcast i8* %113 to i16*
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"struct.tflite::ConcatEmbeddingsOptions", %"struct.tflite::ConcatEmbeddingsOptions"* %0, i64 0, i32 0, i32 0, i64 %116
  %118 = icmp eq i16 %115, 0
  br i1 %118, label %150, label %119

119:                                              ; preds = %112
  %120 = bitcast i8* %117 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = icmp eq i8* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %119
  %126 = ptrtoint i8* %123 to i64
  %127 = sub i64 %126, %4
  %128 = and i64 %127, 3
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %132 = load i8, i8* %131, align 8, !range !5
  %133 = icmp ne i8 %132, 0
  %134 = icmp ult i64 %18, %127
  %135 = or i1 %133, %134
  br i1 %135, label %219, label %138

136:                                              ; preds = %125
  %137 = icmp ult i64 %18, %127
  br i1 %137, label %219, label %138

138:                                              ; preds = %130, %136
  %139 = bitcast i8* %123 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp ult i32 %140, 536870911
  br i1 %141, label %142, label %219

142:                                              ; preds = %138
  %143 = zext i32 %140 to i64
  %144 = shl nuw nsw i64 %143, 2
  %145 = add nuw nsw i64 %144, 4
  %146 = icmp ugt i64 %16, %145
  %147 = sub i64 %16, %145
  %148 = icmp uge i64 %147, %127
  %149 = and i1 %146, %148
  br i1 %149, label %150, label %219

150:                                              ; preds = %112, %119, %142
  %151 = icmp ugt i16 %71, 8
  br i1 %151, label %152, label %218

152:                                              ; preds = %150
  %153 = getelementptr inbounds i8, i8* %69, i64 8
  %154 = bitcast i8* %153 to i16*
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, 0
  br i1 %156, label %180, label %157

157:                                              ; preds = %152
  %158 = zext i16 %155 to i64
  %159 = add i64 %6, %158
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %164 = load i8, i8* %163, align 8, !range !5
  %165 = icmp ne i8 %164, 0
  %166 = icmp ult i64 %18, %159
  %167 = or i1 %165, %166
  br i1 %167, label %219, label %170

168:                                              ; preds = %157
  %169 = icmp ult i64 %18, %159
  br i1 %169, label %219, label %170

170:                                              ; preds = %162, %168
  %171 = getelementptr inbounds i8, i8* %9, i64 %159
  %172 = bitcast i8* %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %175, label %219

175:                                              ; preds = %170
  %176 = zext i32 %173 to i64
  %177 = add i64 %159, %176
  %178 = add i64 %16, -1
  %179 = icmp ult i64 %178, %177
  br i1 %179, label %219, label %180

180:                                              ; preds = %175, %152
  %181 = getelementptr inbounds i8, i8* %69, i64 8
  %182 = bitcast i8* %181 to i16*
  %183 = load i16, i16* %182, align 2
  %184 = zext i16 %183 to i64
  %185 = getelementptr inbounds %"struct.tflite::ConcatEmbeddingsOptions", %"struct.tflite::ConcatEmbeddingsOptions"* %0, i64 0, i32 0, i32 0, i64 %184
  %186 = icmp eq i16 %183, 0
  br i1 %186, label %218, label %187

187:                                              ; preds = %180
  %188 = bitcast i8* %185 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %185, i64 %190
  %192 = icmp eq i8* %191, null
  br i1 %192, label %218, label %193

193:                                              ; preds = %187
  %194 = ptrtoint i8* %191 to i64
  %195 = sub i64 %194, %4
  %196 = and i64 %195, 3
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %200 = load i8, i8* %199, align 8, !range !5
  %201 = icmp ne i8 %200, 0
  %202 = icmp ult i64 %18, %195
  %203 = or i1 %201, %202
  br i1 %203, label %219, label %206

204:                                              ; preds = %193
  %205 = icmp ult i64 %18, %195
  br i1 %205, label %219, label %206

206:                                              ; preds = %198, %204
  %207 = bitcast i8* %191 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = icmp ult i32 %208, 536870911
  br i1 %209, label %210, label %219

210:                                              ; preds = %206
  %211 = zext i32 %208 to i64
  %212 = shl nuw nsw i64 %211, 2
  %213 = add nuw nsw i64 %212, 4
  %214 = icmp ugt i64 %16, %213
  %215 = sub i64 %16, %213
  %216 = icmp uge i64 %215, %195
  %217 = and i1 %214, %216
  br i1 %217, label %218, label %219

218:                                              ; preds = %150, %65, %82, %180, %187, %210
  store i32 %27, i32* %26, align 8
  br label %219

219:                                              ; preds = %198, %162, %130, %94, %100, %78, %136, %168, %204, %107, %175, %206, %170, %138, %102, %42, %21, %10, %35, %46, %56, %14, %218, %210, %142, %60
  %220 = phi i1 [ false, %210 ], [ false, %175 ], [ false, %142 ], [ false, %107 ], [ false, %78 ], [ false, %60 ], [ true, %218 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %100 ], [ false, %102 ], [ false, %94 ], [ false, %136 ], [ false, %138 ], [ false, %130 ], [ false, %168 ], [ false, %170 ], [ false, %162 ], [ false, %204 ], [ false, %206 ], [ false, %198 ]
  ret i1 %220
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite13Pool2DOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Pool2DOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Pool2DOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Pool2DOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Pool2DOptions", %"struct.tflite::Pool2DOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %140, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %139

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %140, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %139

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %140, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %139

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = icmp ult i64 %18, %114
  br i1 %115, label %140, label %116

116:                                              ; preds = %112, %107
  %117 = icmp ugt i16 %71, 12
  br i1 %117, label %118, label %139

118:                                              ; preds = %116
  %119 = getelementptr inbounds i8, i8* %69, i64 12
  %120 = bitcast i8* %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = zext i16 %121 to i64
  %125 = add i64 %6, %124
  %126 = icmp ult i64 %18, %125
  br i1 %126, label %140, label %127

127:                                              ; preds = %123, %118
  %128 = icmp ugt i16 %71, 14
  br i1 %128, label %129, label %139

129:                                              ; preds = %127
  %130 = getelementptr inbounds i8, i8* %69, i64 14
  %131 = bitcast i8* %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = zext i16 %132 to i64
  %136 = add i64 %6, %135
  %137 = add i64 %16, -1
  %138 = icmp ult i64 %137, %136
  br i1 %138, label %140, label %139

139:                                              ; preds = %134, %65, %83, %94, %105, %116, %127, %129
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %134, %78, %123, %112, %101, %90, %42, %21, %10, %35, %46, %56, %14, %139, %60
  %141 = phi i1 [ false, %134 ], [ false, %123 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite11SVDFOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SVDFOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SVDFOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %107

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %107

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SVDFOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %107, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %107, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %107

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %107, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %107

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %107

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SVDFOptions", %"struct.tflite::SVDFOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %106

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %107, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %106

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = add i64 %16, -1
  %93 = icmp ult i64 %92, %91
  br i1 %93, label %107, label %94

94:                                               ; preds = %89, %84
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %106

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = add i64 %16, -1
  %105 = icmp ult i64 %104, %103
  br i1 %105, label %107, label %106

106:                                              ; preds = %101, %65, %82, %94, %96
  store i32 %27, i32* %26, align 8
  br label %107

107:                                              ; preds = %101, %89, %78, %42, %21, %10, %35, %46, %56, %14, %106, %60
  %108 = phi i1 [ false, %101 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %106 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite21FullyConnectedOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::FullyConnectedOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::FullyConnectedOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %120

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %120

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::FullyConnectedOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %120, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %120, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %120

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %120, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %120

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %120

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::FullyConnectedOptions", %"struct.tflite::FullyConnectedOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %119

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %120, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %119

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = add i64 %16, -1
  %94 = icmp ult i64 %93, %92
  br i1 %94, label %120, label %95

95:                                               ; preds = %90, %85
  %96 = icmp ugt i16 %71, 8
  br i1 %96, label %97, label %119

97:                                               ; preds = %95
  %98 = getelementptr inbounds i8, i8* %69, i64 8
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = zext i16 %100 to i64
  %104 = add i64 %6, %103
  %105 = add i64 %16, -1
  %106 = icmp ult i64 %105, %104
  br i1 %106, label %120, label %107

107:                                              ; preds = %102, %97
  %108 = icmp ugt i16 %71, 10
  br i1 %108, label %109, label %119

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %69, i64 10
  %111 = bitcast i8* %110 to i16*
  %112 = load i16, i16* %111, align 2
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = zext i16 %112 to i64
  %116 = add i64 %6, %115
  %117 = add i64 %16, -1
  %118 = icmp ult i64 %117, %116
  br i1 %118, label %120, label %119

119:                                              ; preds = %114, %65, %83, %95, %107, %109
  store i32 %27, i32* %26, align 8
  br label %120

120:                                              ; preds = %114, %102, %90, %78, %42, %21, %10, %35, %46, %56, %14, %119, %60
  %121 = phi i1 [ false, %114 ], [ false, %102 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %119 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite33LocalResponseNormalizationOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::LocalResponseNormalizationOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::LocalResponseNormalizationOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %116

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %116

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::LocalResponseNormalizationOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %116, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %116, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %116

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %116, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %116

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %116

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::LocalResponseNormalizationOptions", %"struct.tflite::LocalResponseNormalizationOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %115

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %116, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %115

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = icmp ult i64 %18, %91
  br i1 %92, label %116, label %93

93:                                               ; preds = %89, %84
  %94 = icmp ugt i16 %71, 8
  br i1 %94, label %95, label %115

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %69, i64 8
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = add i64 %6, %101
  %103 = icmp ult i64 %18, %102
  br i1 %103, label %116, label %104

104:                                              ; preds = %100, %95
  %105 = icmp ugt i16 %71, 10
  br i1 %105, label %106, label %115

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %69, i64 10
  %108 = bitcast i8* %107 to i16*
  %109 = load i16, i16* %108, align 2
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %106
  %112 = zext i16 %109 to i64
  %113 = add i64 %6, %112
  %114 = icmp ult i64 %18, %113
  br i1 %114, label %116, label %115

115:                                              ; preds = %111, %65, %82, %93, %104, %106
  store i32 %27, i32* %26, align 8
  br label %116

116:                                              ; preds = %111, %100, %89, %78, %42, %21, %10, %35, %46, %56, %14, %115, %60
  %117 = phi i1 [ false, %111 ], [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %115 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite11LSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::LSTMOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::LSTMOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %130

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %130

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::LSTMOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %130, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %130, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %130, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %130

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %130

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::LSTMOptions", %"struct.tflite::LSTMOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %129

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %130, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %129

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %130, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %129

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %130, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %129

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = add i64 %16, -1
  %116 = icmp ult i64 %115, %114
  br i1 %116, label %130, label %117

117:                                              ; preds = %112, %107
  %118 = icmp ugt i16 %71, 12
  br i1 %118, label %119, label %129

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %69, i64 12
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = add i64 %6, %125
  %127 = add i64 %16, -1
  %128 = icmp ult i64 %127, %126
  br i1 %128, label %130, label %129

129:                                              ; preds = %124, %65, %83, %94, %105, %117, %119
  store i32 %27, i32* %26, align 8
  br label %130

130:                                              ; preds = %124, %112, %78, %101, %90, %42, %21, %10, %35, %46, %56, %14, %129, %60
  %131 = phi i1 [ false, %124 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %129 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite14ReshapeOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::ReshapeOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::ReshapeOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::ReshapeOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::ReshapeOptions", %"struct.tflite::ReshapeOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %140, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %140, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %140

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %140, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::ReshapeOptions", %"struct.tflite::ReshapeOptions"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %140, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %140, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %140

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %139, %131, %60
  %141 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite15SkipGramOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SkipGramOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SkipGramOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %106

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %106

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SkipGramOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %106, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %106, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %106

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %106, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %106

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %106

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SkipGramOptions", %"struct.tflite::SkipGramOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %105

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %106, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %105

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = icmp ult i64 %18, %91
  br i1 %92, label %106, label %93

93:                                               ; preds = %89, %84
  %94 = icmp ugt i16 %71, 8
  br i1 %94, label %95, label %105

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %69, i64 8
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = add i64 %6, %101
  %103 = add i64 %16, -1
  %104 = icmp ult i64 %103, %102
  br i1 %104, label %106, label %105

105:                                              ; preds = %100, %65, %82, %93, %95
  store i32 %27, i32* %26, align 8
  br label %106

106:                                              ; preds = %100, %89, %78, %42, %21, %10, %35, %46, %56, %14, %105, %60
  %107 = phi i1 [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %105 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite14SqueezeOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SqueezeOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SqueezeOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %140

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %140

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SqueezeOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %140, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %140, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %140

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %140, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %140

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %140

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SqueezeOptions", %"struct.tflite::SqueezeOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %139

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %140, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %140, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %140

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %140, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::SqueezeOptions", %"struct.tflite::SqueezeOptions"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %139, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %140, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %140, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 536870911
  br i1 %130, label %131, label %140

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = shl nuw nsw i64 %132, 2
  %134 = add nuw nsw i64 %133, 4
  %135 = icmp ugt i64 %16, %134
  %136 = sub i64 %16, %134
  %137 = icmp uge i64 %136, %116
  %138 = and i1 %135, %137
  br i1 %138, label %139, label %140

139:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %140

140:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %139, %131, %60
  %141 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %139 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %141
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite18SequenceRNNOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::SequenceRNNOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::SequenceRNNOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %108

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %108

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::SequenceRNNOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %108, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %108, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %108

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %108, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %108

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %108

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::SequenceRNNOptions", %"struct.tflite::SequenceRNNOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %107

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %108, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %107

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = add i64 %16, -1
  %94 = icmp ult i64 %93, %92
  br i1 %94, label %108, label %95

95:                                               ; preds = %90, %85
  %96 = icmp ugt i16 %71, 8
  br i1 %96, label %97, label %107

97:                                               ; preds = %95
  %98 = getelementptr inbounds i8, i8* %69, i64 8
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = zext i16 %100 to i64
  %104 = add i64 %6, %103
  %105 = add i64 %16, -1
  %106 = icmp ult i64 %105, %104
  br i1 %106, label %108, label %107

107:                                              ; preds = %102, %65, %83, %95, %97
  store i32 %27, i32* %26, align 8
  br label %108

108:                                              ; preds = %102, %90, %78, %42, %21, %10, %35, %46, %56, %14, %107, %60
  %109 = phi i1 [ false, %102 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %107 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite19StridedSliceOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::StridedSliceOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::StridedSliceOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %127

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %127

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::StridedSliceOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %127, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %127, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %127

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %127, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %127

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %127

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::StridedSliceOptions", %"struct.tflite::StridedSliceOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %126

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %127, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %126

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = icmp ult i64 %18, %91
  br i1 %92, label %127, label %93

93:                                               ; preds = %89, %84
  %94 = icmp ugt i16 %71, 8
  br i1 %94, label %95, label %126

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %69, i64 8
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = add i64 %6, %101
  %103 = icmp ult i64 %18, %102
  br i1 %103, label %127, label %104

104:                                              ; preds = %100, %95
  %105 = icmp ugt i16 %71, 10
  br i1 %105, label %106, label %126

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %69, i64 10
  %108 = bitcast i8* %107 to i16*
  %109 = load i16, i16* %108, align 2
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %106
  %112 = zext i16 %109 to i64
  %113 = add i64 %6, %112
  %114 = icmp ult i64 %18, %113
  br i1 %114, label %127, label %115

115:                                              ; preds = %111, %106
  %116 = icmp ugt i16 %71, 12
  br i1 %116, label %117, label %126

117:                                              ; preds = %115
  %118 = getelementptr inbounds i8, i8* %69, i64 12
  %119 = bitcast i8* %118 to i16*
  %120 = load i16, i16* %119, align 2
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %117
  %123 = zext i16 %120 to i64
  %124 = add i64 %6, %123
  %125 = icmp ult i64 %18, %124
  br i1 %125, label %127, label %126

126:                                              ; preds = %122, %65, %82, %93, %104, %115, %117
  store i32 %27, i32* %26, align 8
  br label %127

127:                                              ; preds = %122, %111, %100, %89, %78, %42, %21, %10, %35, %46, %56, %14, %126, %60
  %128 = phi i1 [ false, %122 ], [ false, %111 ], [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %126 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %128
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite20TransposeConvOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::TransposeConvOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::TransposeConvOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %106

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %106

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::TransposeConvOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %106, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %106, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %106

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %106, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %106

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %106

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::TransposeConvOptions", %"struct.tflite::TransposeConvOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %105

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %106, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %105

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %106, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %105

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %106, label %105

105:                                              ; preds = %101, %65, %83, %94, %96
  store i32 %27, i32* %26, align 8
  br label %106

106:                                              ; preds = %78, %101, %90, %42, %21, %10, %35, %46, %56, %14, %105, %60
  %107 = phi i1 [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %105 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite16FakeQuantOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::FakeQuantOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::FakeQuantOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %117

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %117

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::FakeQuantOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %117, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %117, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %117

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %117, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %117

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %117

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::FakeQuantOptions", %"struct.tflite::FakeQuantOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %116

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = icmp ult i64 %18, %80
  br i1 %81, label %117, label %82

82:                                               ; preds = %78, %73
  %83 = icmp ugt i16 %71, 6
  br i1 %83, label %84, label %116

84:                                               ; preds = %82
  %85 = getelementptr inbounds i8, i8* %69, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = zext i16 %87 to i64
  %91 = add i64 %6, %90
  %92 = icmp ult i64 %18, %91
  br i1 %92, label %117, label %93

93:                                               ; preds = %89, %84
  %94 = icmp ugt i16 %71, 8
  br i1 %94, label %95, label %116

95:                                               ; preds = %93
  %96 = getelementptr inbounds i8, i8* %69, i64 8
  %97 = bitcast i8* %96 to i16*
  %98 = load i16, i16* %97, align 2
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %95
  %101 = zext i16 %98 to i64
  %102 = add i64 %6, %101
  %103 = icmp ult i64 %18, %102
  br i1 %103, label %117, label %104

104:                                              ; preds = %100, %95
  %105 = icmp ugt i16 %71, 10
  br i1 %105, label %106, label %116

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %69, i64 10
  %108 = bitcast i8* %107 to i16*
  %109 = load i16, i16* %108, align 2
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %106
  %112 = zext i16 %109 to i64
  %113 = add i64 %6, %112
  %114 = add i64 %16, -1
  %115 = icmp ult i64 %114, %113
  br i1 %115, label %117, label %116

116:                                              ; preds = %111, %65, %82, %93, %104, %106
  store i32 %27, i32* %26, align 8
  br label %117

117:                                              ; preds = %111, %100, %89, %78, %42, %21, %10, %35, %46, %56, %14, %116, %60
  %118 = phi i1 [ false, %111 ], [ false, %100 ], [ false, %89 ], [ false, %78 ], [ false, %60 ], [ true, %116 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %118
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite32BidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::BidirectionalSequenceLSTMOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::BidirectionalSequenceLSTMOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %142

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %142

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::BidirectionalSequenceLSTMOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %142, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %142, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %142

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %142, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %142

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %142

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::BidirectionalSequenceLSTMOptions", %"struct.tflite::BidirectionalSequenceLSTMOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %141

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %142, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %141

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %142, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %141

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %142, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %141

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = add i64 %16, -1
  %116 = icmp ult i64 %115, %114
  br i1 %116, label %142, label %117

117:                                              ; preds = %112, %107
  %118 = icmp ugt i16 %71, 12
  br i1 %118, label %119, label %141

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %69, i64 12
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = add i64 %6, %125
  %127 = add i64 %16, -1
  %128 = icmp ult i64 %127, %126
  br i1 %128, label %142, label %129

129:                                              ; preds = %124, %119
  %130 = icmp ugt i16 %71, 14
  br i1 %130, label %131, label %141

131:                                              ; preds = %129
  %132 = getelementptr inbounds i8, i8* %69, i64 14
  %133 = bitcast i8* %132 to i16*
  %134 = load i16, i16* %133, align 2
  %135 = icmp eq i16 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %131
  %137 = zext i16 %134 to i64
  %138 = add i64 %6, %137
  %139 = add i64 %16, -1
  %140 = icmp ult i64 %139, %138
  br i1 %140, label %142, label %141

141:                                              ; preds = %136, %65, %83, %94, %105, %117, %129, %131
  store i32 %27, i32* %26, align 8
  br label %142

142:                                              ; preds = %136, %124, %112, %78, %101, %90, %42, %21, %10, %35, %46, %56, %14, %141, %60
  %143 = phi i1 [ false, %136 ], [ false, %124 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %141 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %143
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite31BidirectionalSequenceRNNOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::BidirectionalSequenceRNNOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::BidirectionalSequenceRNNOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %120

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %120

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::BidirectionalSequenceRNNOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %120, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %120, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %120

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %120, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %120

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %120

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::BidirectionalSequenceRNNOptions", %"struct.tflite::BidirectionalSequenceRNNOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %119

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %120, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %119

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = add i64 %16, -1
  %94 = icmp ult i64 %93, %92
  br i1 %94, label %120, label %95

95:                                               ; preds = %90, %85
  %96 = icmp ugt i16 %71, 8
  br i1 %96, label %97, label %119

97:                                               ; preds = %95
  %98 = getelementptr inbounds i8, i8* %69, i64 8
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = zext i16 %100 to i64
  %104 = add i64 %6, %103
  %105 = add i64 %16, -1
  %106 = icmp ult i64 %105, %104
  br i1 %106, label %120, label %107

107:                                              ; preds = %102, %97
  %108 = icmp ugt i16 %71, 10
  br i1 %108, label %109, label %119

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %69, i64 10
  %111 = bitcast i8* %110 to i16*
  %112 = load i16, i16* %111, align 2
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = zext i16 %112 to i64
  %116 = add i64 %6, %115
  %117 = add i64 %16, -1
  %118 = icmp ult i64 %117, %116
  br i1 %118, label %120, label %119

119:                                              ; preds = %114, %65, %83, %95, %107, %109
  store i32 %27, i32* %26, align 8
  br label %120

120:                                              ; preds = %114, %102, %90, %78, %42, %21, %10, %35, %46, %56, %14, %119, %60
  %121 = phi i1 [ false, %114 ], [ false, %102 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %119 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite33UnidirectionalSequenceLSTMOptions6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::UnidirectionalSequenceLSTMOptions"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::UnidirectionalSequenceLSTMOptions"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %130

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %130

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::UnidirectionalSequenceLSTMOptions"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %130, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %130, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %130, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %130

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %130

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::UnidirectionalSequenceLSTMOptions", %"struct.tflite::UnidirectionalSequenceLSTMOptions"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %129

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = add i64 %16, -1
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %130, label %83

83:                                               ; preds = %78, %73
  %84 = icmp ugt i16 %71, 6
  br i1 %84, label %85, label %129

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %69, i64 6
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %85
  %91 = zext i16 %88 to i64
  %92 = add i64 %6, %91
  %93 = icmp ult i64 %18, %92
  br i1 %93, label %130, label %94

94:                                               ; preds = %90, %85
  %95 = icmp ugt i16 %71, 8
  br i1 %95, label %96, label %129

96:                                               ; preds = %94
  %97 = getelementptr inbounds i8, i8* %69, i64 8
  %98 = bitcast i8* %97 to i16*
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %96
  %102 = zext i16 %99 to i64
  %103 = add i64 %6, %102
  %104 = icmp ult i64 %18, %103
  br i1 %104, label %130, label %105

105:                                              ; preds = %101, %96
  %106 = icmp ugt i16 %71, 10
  br i1 %106, label %107, label %129

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %69, i64 10
  %109 = bitcast i8* %108 to i16*
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %107
  %113 = zext i16 %110 to i64
  %114 = add i64 %6, %113
  %115 = add i64 %16, -1
  %116 = icmp ult i64 %115, %114
  br i1 %116, label %130, label %117

117:                                              ; preds = %112, %107
  %118 = icmp ugt i16 %71, 12
  br i1 %118, label %119, label %129

119:                                              ; preds = %117
  %120 = getelementptr inbounds i8, i8* %69, i64 12
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = zext i16 %122 to i64
  %126 = add i64 %6, %125
  %127 = add i64 %16, -1
  %128 = icmp ult i64 %127, %126
  br i1 %128, label %130, label %129

129:                                              ; preds = %124, %65, %83, %94, %105, %117, %119
  store i32 %27, i32* %26, align 8
  br label %130

130:                                              ; preds = %124, %112, %78, %101, %90, %42, %21, %10, %35, %46, %56, %14, %129, %60
  %131 = phi i1 [ false, %124 ], [ false, %112 ], [ false, %101 ], [ false, %90 ], [ false, %78 ], [ false, %60 ], [ true, %129 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite6Buffer6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Buffer"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Buffer"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %139

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %139

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Buffer"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %139, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %139, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %139

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %139, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %139

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %139

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Buffer", %"struct.tflite::Buffer"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %138

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %139, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %139, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %139

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %139, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Buffer", %"struct.tflite::Buffer"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %138, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %139, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %139, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = icmp ugt i64 %16, %133
  %135 = sub i64 %16, %133
  %136 = icmp uge i64 %135, %116
  %137 = and i1 %134, %136
  br i1 %137, label %138, label %139

138:                                              ; preds = %65, %101, %108, %131
  store i32 %27, i32* %26, align 8
  br label %139

139:                                              ; preds = %119, %83, %89, %125, %96, %127, %91, %42, %21, %10, %35, %46, %56, %14, %138, %131, %60
  %140 = phi i1 [ false, %131 ], [ false, %96 ], [ false, %60 ], [ true, %138 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite8Metadata6VerifyERN11flatbuffers8VerifierE(%"struct.tflite::Metadata"*, %"class.flatbuffers::Verifier"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.flatbuffers::Verifier"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = ptrtoint %"struct.tflite::Metadata"* %0 to i64
  %6 = sub i64 %5, %4
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %4 to i8*
  br i1 %8, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %158

14:                                               ; preds = %10, %2
  %15 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, 4
  %18 = add i64 %16, -4
  %19 = icmp uge i64 %18, %6
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %158

21:                                               ; preds = %14
  %22 = bitcast %"struct.tflite::Metadata"* %0 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 %6, %24
  %26 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %28, %33
  br i1 %34, label %158, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %31, %37
  br i1 %38, label %158, label %39

39:                                               ; preds = %35
  %40 = and i64 %25, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %158

46:                                               ; preds = %42, %39
  %47 = add i64 %16, -2
  %48 = icmp ult i64 %47, %25
  br i1 %48, label %158, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %9, i64 %25
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = and i64 %53, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %58 = load i8, i8* %57, align 8, !range !5
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %158

60:                                               ; preds = %49, %56
  %61 = icmp ugt i64 %16, %53
  %62 = sub i64 %16, %53
  %63 = icmp uge i64 %62, %25
  %64 = and i1 %61, %63
  br i1 %64, label %65, label %158

65:                                               ; preds = %60
  %66 = load i32, i32* %22, align 4
  %67 = sext i32 %66 to i64
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %0, i64 0, i32 0, i32 0, i64 %68
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 2
  %72 = icmp ugt i16 %71, 4
  br i1 %72, label %73, label %157

73:                                               ; preds = %65
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  %76 = load i16, i16* %75, align 2
  %77 = icmp eq i16 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %73
  %79 = zext i16 %76 to i64
  %80 = add i64 %6, %79
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %85 = load i8, i8* %84, align 8, !range !5
  %86 = icmp ne i8 %85, 0
  %87 = icmp ult i64 %18, %80
  %88 = or i1 %86, %87
  br i1 %88, label %158, label %91

89:                                               ; preds = %78
  %90 = icmp ult i64 %18, %80
  br i1 %90, label %158, label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds i8, i8* %9, i64 %80
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %158

96:                                               ; preds = %91
  %97 = zext i32 %94 to i64
  %98 = add i64 %80, %97
  %99 = add i64 %16, -1
  %100 = icmp ult i64 %99, %98
  br i1 %100, label %158, label %101

101:                                              ; preds = %96, %73
  %102 = getelementptr inbounds i8, i8* %69, i64 4
  %103 = bitcast i8* %102 to i16*
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"struct.tflite::Metadata", %"struct.tflite::Metadata"* %0, i64 0, i32 0, i32 0, i64 %105
  %107 = icmp eq i16 %104, 0
  br i1 %107, label %146, label %108

108:                                              ; preds = %101
  %109 = bitcast i8* %106 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %106, i64 %111
  %113 = icmp eq i8* %112, null
  br i1 %113, label %146, label %114

114:                                              ; preds = %108
  %115 = ptrtoint i8* %112 to i64
  %116 = sub i64 %115, %4
  %117 = and i64 %116, 3
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.flatbuffers::Verifier", %"class.flatbuffers::Verifier"* %1, i64 0, i32 7
  %121 = load i8, i8* %120, align 8, !range !5
  %122 = icmp ne i8 %121, 0
  %123 = icmp ult i64 %18, %116
  %124 = or i1 %122, %123
  br i1 %124, label %158, label %127

125:                                              ; preds = %114
  %126 = icmp ult i64 %18, %116
  br i1 %126, label %158, label %127

127:                                              ; preds = %119, %125
  %128 = bitcast i8* %112 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp ult i32 %129, 2147483647
  br i1 %130, label %131, label %158

131:                                              ; preds = %127
  %132 = zext i32 %129 to i64
  %133 = add nuw nsw i64 %132, 4
  %134 = add i64 %133, %116
  %135 = icmp ule i64 %16, %133
  %136 = sub i64 %16, %133
  %137 = icmp ult i64 %136, %116
  %138 = or i1 %135, %137
  %139 = add i64 %16, -1
  %140 = icmp ult i64 %139, %134
  %141 = or i1 %140, %138
  br i1 %141, label %158, label %142

142:                                              ; preds = %131
  %143 = getelementptr inbounds i8, i8* %9, i64 %134
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %158

146:                                              ; preds = %101, %108, %142
  %147 = icmp ugt i16 %71, 6
  br i1 %147, label %148, label %157

148:                                              ; preds = %146
  %149 = getelementptr inbounds i8, i8* %69, i64 6
  %150 = bitcast i8* %149 to i16*
  %151 = load i16, i16* %150, align 2
  %152 = icmp eq i16 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %148
  %154 = zext i16 %151 to i64
  %155 = add i64 %6, %154
  %156 = icmp ult i64 %18, %155
  br i1 %156, label %158, label %157

157:                                              ; preds = %65, %153, %146, %148
  store i32 %27, i32* %26, align 8
  br label %158

158:                                              ; preds = %119, %83, %89, %125, %153, %96, %131, %127, %91, %42, %21, %10, %35, %46, %56, %14, %157, %142, %60
  %159 = phi i1 [ false, %153 ], [ false, %142 ], [ false, %96 ], [ false, %60 ], [ true, %157 ], [ false, %14 ], [ false, %56 ], [ false, %46 ], [ false, %35 ], [ false, %10 ], [ false, %21 ], [ false, %42 ], [ false, %89 ], [ false, %91 ], [ false, %83 ], [ false, %131 ], [ false, %125 ], [ false, %127 ], [ false, %119 ]
  ret i1 %159
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11flatbuffers6String3strEv: argument 0"}
!4 = distinct !{!4, !"_ZNK11flatbuffers6String3strEv"}
!5 = !{i8 0, i8 2}
