; ModuleID = '../../components/reporting/client/report_queue.cc'
source_filename = "../../components/reporting/client/report_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.reporting::ReportQueue" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.1" }
%"union.absl::variant_internal::DestructibleUnionImpl.1" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.reporting::Status" = type { i32, %"class.std::__1::basic_string" }
%"class.reporting::StatusOr" = type { %"class.reporting::Status", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }

@_ZTVN9reporting11ReportQueueE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.reporting::ReportQueue"*)* @_ZN9reporting11ReportQueueD2Ev to i8*), i8* bitcast (void (%"class.reporting::ReportQueue"*)* @_ZN9reporting11ReportQueueD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [53 x i8] c"Provided record was not convertable to a std::string\00", align 1
@.str.3 = private unnamed_addr constant [81 x i8] c"Unabled to serialize record to string. Most likely due to unset required fields.\00", align 1

@_ZN9reporting11ReportQueueD1Ev = hidden unnamed_addr alias void (%"class.reporting::ReportQueue"*), void (%"class.reporting::ReportQueue"*)* @_ZN9reporting11ReportQueueD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9reporting11ReportQueueD2Ev(%"class.reporting::ReportQueue"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9reporting11ReportQueueD0Ev(%"class.reporting::ReportQueue"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9reporting11ReportQueue7EnqueueEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_8PriorityENS1_12OnceCallbackIFvNS_6StatusEEEE(%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #3 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = bitcast %"class.reporting::ReportQueue"* %0 to void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)***
  %12 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)**, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %12, i64 3
  %14 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %13, align 8
  call void %14(%"class.reporting::ReportQueue"* %0, i8* %1, i64 %2, i32 %3, %"class.base::OnceCallback"* nonnull %6) #10
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9reporting11ReportQueue7EnqueueERKN4base5ValueENS_8PriorityENS1_12OnceCallbackIFvNS_6StatusEEEE(%"class.reporting::ReportQueue"*, %"class.base::Value"* dereferenceable(32), i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.reporting::Status", align 8
  %8 = alloca %"class.reporting::StatusOr", align 8
  %9 = alloca %"class.reporting::StatusOr", align 8
  %10 = alloca %"class.reporting::Status", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = bitcast %"class.reporting::StatusOr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 64, i1 false)
  %14 = bitcast %"class.reporting::StatusOr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #10
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10, !noalias !2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10, !noalias !2
  %17 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32) %1, %"class.std::__1::basic_string"* nonnull %6, i64 200) #10, !noalias !2
  br i1 %17, label %37, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.reporting::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10, !noalias !2
  call void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"* nonnull %7, i32 3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i64 52) #10
  %20 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %20, %"class.reporting::Status"* nonnull dereferenceable(32) %7) #10
  %21 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8, !alias.scope !2
  %22 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %union.anon.29* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10, !alias.scope !2
  %24 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %7, i64 0, i32 0
  %25 = load i32, i32* %24, align 8, !noalias !2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  call void @_ZN9reporting8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.reporting::Status"* nonnull dereferenceable(32) %7) #10
  br label %28

28:                                               ; preds = %27, %18
  %29 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %7, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !2
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !2
  call void @_ZdlPv(i8* %36) #11
  br label %43

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  %39 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6Status8StatusOKEv() #10
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %38, %"class.reporting::Status"* dereferenceable(32) %39) #10
  %40 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %40, align 8, !alias.scope !2
  %41 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %15, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10, !noalias !2
  br label %50

43:                                               ; preds = %34, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10, !noalias !2
  %44 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1, !noalias !2
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load i8*, i8** %16, align 8, !noalias !2
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %37, %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10, !noalias !2
  %51 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0
  %52 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %51, %"class.reporting::Status"* nonnull dereferenceable(32) %52) #10
  %53 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #10
  %55 = load i8, i8* %54, align 8, !range !5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %53, align 8
  br label %62

62:                                               ; preds = %50, %57
  %63 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting8internal14StatusOrHelper14MovedOutStatusEv() #10
  %64 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6StatusaSERKS0_(%"class.reporting::Status"* nonnull %52, %"class.reporting::Status"* dereferenceable(32) %63) #10
  %65 = load i8, i8* %54, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %73, %67
  store i8 0, i8* %54, align 8
  br label %77

77:                                               ; preds = %76, %62
  %78 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %77, %83
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #10
  %87 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %109, label %90, !prof !6

90:                                               ; preds = %86
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %10, %"class.reporting::Status"* nonnull dereferenceable(32) %51) #10
  %91 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #10
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %92, align 8
  %96 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %97 = inttoptr i64 %94 to %"class.base::internal::BindStateBase"*
  %98 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %97, i64 0, i32 1
  %99 = bitcast void ()** %98 to void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)**
  %100 = load void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)*, void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)** %99, align 8
  call void %100(%"class.base::internal::BindStateBase"* %97, %"class.reporting::Status"* nonnull dereferenceable(32) %10) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #10
  %101 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %10, i64 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %154

106:                                              ; preds = %90
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #11
  br label %154

109:                                              ; preds = %86
  %110 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false)
  %114 = load i8, i8* %53, align 8, !range !5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %124, i64 24, i1 false) #10
  br label %130

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %127, i64 %129) #10
  br label %130

130:                                              ; preds = %123, %125
  %131 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = load i8*, i8** %111, align 8
  %136 = select i1 %134, i8* %135, i8* %110
  %137 = load i64, i64* %112, align 8
  %138 = zext i8 %133 to i64
  %139 = select i1 %134, i64 %137, i64 %138
  %140 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.base::OnceCallback"* %12 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %140, align 8
  %144 = bitcast %"class.reporting::ReportQueue"* %0 to void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)***
  %145 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)**, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %145, i64 3
  %147 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %146, align 8
  call void %147(%"class.reporting::ReportQueue"* %0, i8* %136, i64 %139, i32 %2, %"class.base::OnceCallback"* nonnull %12) #10
  %148 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %148) #10
  %149 = load i8, i8* %132, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %130
  %152 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %130, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  br label %154

154:                                              ; preds = %106, %90, %153
  %155 = load i8, i8* %53, align 8, !range !5
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #11
  br label %166

166:                                              ; preds = %163, %157
  store i8 0, i8* %53, align 8
  br label %167

167:                                              ; preds = %166, %154
  %168 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #11
  br label %176

176:                                              ; preds = %167, %173
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9reporting11ReportQueue7EnqueueEPKN6google8protobuf11MessageLiteENS_8PriorityEN4base12OnceCallbackIFvNS_6StatusEEEE(%"class.reporting::ReportQueue"*, %"class.google::protobuf::MessageLite"*, i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.reporting::Status", align 8
  %8 = alloca %"class.reporting::StatusOr", align 8
  %9 = alloca %"class.reporting::StatusOr", align 8
  %10 = alloca %"class.reporting::Status", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = bitcast %"class.reporting::StatusOr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 64, i1 false)
  %14 = bitcast %"class.reporting::StatusOr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #10
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10, !noalias !7
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10, !noalias !7
  %17 = call zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"* %1, %"class.std::__1::basic_string"* nonnull %6) #10, !noalias !7
  br i1 %17, label %37, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.reporting::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10, !noalias !7
  call void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"* nonnull %7, i32 3, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3, i64 0, i64 0), i64 80) #10
  %20 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %20, %"class.reporting::Status"* nonnull dereferenceable(32) %7) #10
  %21 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 8, !alias.scope !7
  %22 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %union.anon.29* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10, !alias.scope !7
  %24 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %7, i64 0, i32 0
  %25 = load i32, i32* %24, align 8, !noalias !7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  call void @_ZN9reporting8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.reporting::Status"* nonnull dereferenceable(32) %7) #10
  br label %28

28:                                               ; preds = %27, %18
  %29 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %7, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !7
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !7
  call void @_ZdlPv(i8* %36) #11
  br label %43

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  %39 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6Status8StatusOKEv() #10
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %38, %"class.reporting::Status"* dereferenceable(32) %39) #10
  %40 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %40, align 8, !alias.scope !7
  %41 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %15, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #10, !noalias !7
  br label %50

43:                                               ; preds = %34, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10, !noalias !7
  %44 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1, !noalias !7
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = load i8*, i8** %16, align 8, !noalias !7
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %37, %43, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10, !noalias !7
  %51 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0
  %52 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %51, %"class.reporting::Status"* nonnull dereferenceable(32) %52) #10
  %53 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #10
  %55 = load i8, i8* %54, align 8, !range !5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %53, align 8
  br label %62

62:                                               ; preds = %50, %57
  %63 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting8internal14StatusOrHelper14MovedOutStatusEv() #10
  %64 = call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6StatusaSERKS0_(%"class.reporting::Status"* nonnull %52, %"class.reporting::Status"* dereferenceable(32) %63) #10
  %65 = load i8, i8* %54, align 8, !range !5
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %73, %67
  store i8 0, i8* %54, align 8
  br label %77

77:                                               ; preds = %76, %62
  %78 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %9, i64 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %77, %83
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #10
  %87 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %109, label %90, !prof !6

90:                                               ; preds = %86
  call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* nonnull %10, %"class.reporting::Status"* nonnull dereferenceable(32) %51) #10
  %91 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #10
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %92, align 8
  %96 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %97 = inttoptr i64 %94 to %"class.base::internal::BindStateBase"*
  %98 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %97, i64 0, i32 1
  %99 = bitcast void ()** %98 to void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)**
  %100 = load void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)*, void (%"class.base::internal::BindStateBase"*, %"class.reporting::Status"*)** %99, align 8
  call void %100(%"class.base::internal::BindStateBase"* %97, %"class.reporting::Status"* nonnull dereferenceable(32) %10) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #10
  %101 = getelementptr inbounds %"class.reporting::Status", %"class.reporting::Status"* %10, i64 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %154

106:                                              ; preds = %90
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #11
  br label %154

109:                                              ; preds = %86
  %110 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #10
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false)
  %114 = load i8, i8* %53, align 8, !range !5
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %109
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #9
  unreachable

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %124, i64 24, i1 false) #10
  br label %130

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %11, i8* %127, i64 %129) #10
  br label %130

130:                                              ; preds = %123, %125
  %131 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %131, i64 0, i32 1, i32 0
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  %135 = load i8*, i8** %111, align 8
  %136 = select i1 %134, i8* %135, i8* %110
  %137 = load i64, i64* %112, align 8
  %138 = zext i8 %133 to i64
  %139 = select i1 %134, i64 %137, i64 %138
  %140 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.base::OnceCallback"* %12 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %140, align 8
  %144 = bitcast %"class.reporting::ReportQueue"* %0 to void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)***
  %145 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)**, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %145, i64 3
  %147 = load void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)*, void (%"class.reporting::ReportQueue"*, i8*, i64, i32, %"class.base::OnceCallback"*)** %146, align 8
  call void %147(%"class.reporting::ReportQueue"* %0, i8* %136, i64 %139, i32 %2, %"class.base::OnceCallback"* nonnull %12) #10
  %148 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %148) #10
  %149 = load i8, i8* %132, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %130
  %152 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %152) #11
  br label %153

153:                                              ; preds = %130, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #10
  br label %154

154:                                              ; preds = %106, %90, %153
  %155 = load i8, i8* %53, align 8, !range !5
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %167, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %159 = bitcast %"class.std::__1::basic_string"* %158 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void @_ZdlPv(i8* %165) #11
  br label %166

166:                                              ; preds = %163, %157
  store i8 0, i8* %53, align 8
  br label %167

167:                                              ; preds = %166, %154
  %168 = getelementptr inbounds %"class.reporting::StatusOr", %"class.reporting::StatusOr"* %8, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::basic_string"* %168 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %169, i64 0, i32 1, i32 0
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #11
  br label %176

176:                                              ; preds = %167, %173
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #10
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #6

declare void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"*, i32, i8*, i64) unnamed_addr #6

declare void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"*, %"class.reporting::Status"* dereferenceable(32)) unnamed_addr #6

declare void @_ZN9reporting8internal14StatusOrHelper5CrashERKNS_6StatusE(%"class.reporting::Status"* dereferenceable(32)) local_unnamed_addr #6

declare dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6Status8StatusOKEv() local_unnamed_addr #6

declare zeroext i1 @_ZNK6google8protobuf11MessageLite17SerializeToStringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.google::protobuf::MessageLite"*, %"class.std::__1::basic_string"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #6

declare dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting8internal14StatusOrHelper14MovedOutStatusEv() local_unnamed_addr #6

declare dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6StatusaSERKS0_(%"class.reporting::Status"*, %"class.reporting::Status"* dereferenceable(32)) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9reporting12_GLOBAL__N_111ValueToJsonERKN4base5ValueE: argument 0"}
!4 = distinct !{!4, !"_ZN9reporting12_GLOBAL__N_111ValueToJsonERKN4base5ValueE"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN9reporting12_GLOBAL__N_113ProtoToStringEPKN6google8protobuf11MessageLiteE: argument 0"}
!9 = distinct !{!9, !"_ZN9reporting12_GLOBAL__N_113ProtoToStringEPKN6google8protobuf11MessageLiteE"}
