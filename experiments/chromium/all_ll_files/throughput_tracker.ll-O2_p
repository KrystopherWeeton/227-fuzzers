; ModuleID = '../../ui/compositor/throughput_tracker.cc'
source_filename = "../../ui/compositor/throughput_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::ThroughputTracker" = type <{ i64, %"class.base::WeakPtr", i8, [7 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.ui::ThroughputTrackerHost" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN2ui17ThroughputTrackerC1EmN4base7WeakPtrINS_21ThroughputTrackerHostEEE = hidden unnamed_addr alias void (%"class.ui::ThroughputTracker"*, i64, %"class.base::WeakPtr"*), void (%"class.ui::ThroughputTracker"*, i64, %"class.base::WeakPtr"*)* @_ZN2ui17ThroughputTrackerC2EmN4base7WeakPtrINS_21ThroughputTrackerHostEEE
@_ZN2ui17ThroughputTrackerC1EOS0_ = hidden unnamed_addr alias void (%"class.ui::ThroughputTracker"*, %"class.ui::ThroughputTracker"*), void (%"class.ui::ThroughputTracker"*, %"class.ui::ThroughputTracker"*)* @_ZN2ui17ThroughputTrackerC2EOS0_
@_ZN2ui17ThroughputTrackerD1Ev = hidden unnamed_addr alias void (%"class.ui::ThroughputTracker"*), void (%"class.ui::ThroughputTracker"*)* @_ZN2ui17ThroughputTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ThroughputTrackerC2EmN4base7WeakPtrINS_21ThroughputTrackerHostEEE(%"class.ui::ThroughputTracker"*, i64, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %5, %"class.base::internal::WeakReference"* dereferenceable(8) %6) #5
  %7 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ThroughputTrackerC2EOS0_(%"class.ui::ThroughputTracker"*, %"class.ui::ThroughputTracker"* nocapture dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %4) #5
  %5 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = tail call dereferenceable(32) %"class.ui::ThroughputTracker"* @_ZN2ui17ThroughputTrackeraSEOS0_(%"class.ui::ThroughputTracker"* %0, %"class.ui::ThroughputTracker"* dereferenceable(32) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.ui::ThroughputTracker"* @_ZN2ui17ThroughputTrackeraSEOS0_(%"class.ui::ThroughputTracker"* returned, %"class.ui::ThroughputTracker"* nocapture dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::WeakPtr"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %9, align 8
  %12 = bitcast %"class.base::WeakPtr"* %8 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %13, align 8
  store i64 %11, i64* %12, align 8
  %15 = icmp eq %"class.base::internal::WeakReference::Flag"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %14) #5
  %21 = bitcast %"class.base::internal::WeakReference::Flag"* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #6
  br label %22

22:                                               ; preds = %2, %16, %20
  %23 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %1, i64 0, i32 1, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %1, i64 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  store i8 %27, i8* %28, align 8
  store i64 0, i64* %4, align 8
  %29 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  %30 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %3, i64 0, i32 0, i32 0
  %31 = bitcast %"class.base::internal::WeakReference"* %3 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %30, align 8
  %33 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %9, align 8
  store i64 %32, i64* %10, align 8
  %34 = icmp eq %"class.base::internal::WeakReference::Flag"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw sub i32* %36, i32 1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %33) #5
  %40 = bitcast %"class.base::internal::WeakReference::Flag"* %33 to i8*
  call void @_ZdlPv(i8* %40) #6
  br label %41

41:                                               ; preds = %22, %35, %39
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  store i64 0, i64* %23, align 8
  store i8 0, i8* %26, align 8
  ret %"class.ui::ThroughputTracker"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ThroughputTrackerD2Ev(%"class.ui::ThroughputTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN2ui17ThroughputTracker6CancelEv(%"class.ui::ThroughputTracker"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ThroughputTracker6CancelEv(%"class.ui::ThroughputTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 8
  %7 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #5
  br i1 %8, label %9, label %32

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast i64* %10 to %"class.ui::ThroughputTrackerHost"**
  %12 = load %"class.ui::ThroughputTrackerHost"*, %"class.ui::ThroughputTrackerHost"** %11, align 8
  %13 = icmp eq %"class.ui::ThroughputTrackerHost"* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %9
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #5
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %16, %14
  %20 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #5
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = load %"class.ui::ThroughputTrackerHost"*, %"class.ui::ThroughputTrackerHost"** %11, align 8
  %23 = bitcast %"class.ui::ThroughputTrackerHost"* %22 to void (%"class.ui::ThroughputTrackerHost"*, i64)***
  br label %24

24:                                               ; preds = %19, %21
  %25 = phi void (%"class.ui::ThroughputTrackerHost"*, i64)*** [ %23, %21 ], [ null, %19 ]
  %26 = phi %"class.ui::ThroughputTrackerHost"* [ %22, %21 ], [ null, %19 ]
  %27 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load void (%"class.ui::ThroughputTrackerHost"*, i64)**, void (%"class.ui::ThroughputTrackerHost"*, i64)*** %25, align 8
  %30 = getelementptr inbounds void (%"class.ui::ThroughputTrackerHost"*, i64)*, void (%"class.ui::ThroughputTrackerHost"*, i64)** %29, i64 4
  %31 = load void (%"class.ui::ThroughputTrackerHost"*, i64)*, void (%"class.ui::ThroughputTrackerHost"*, i64)** %30, align 8
  call void %31(%"class.ui::ThroughputTrackerHost"* %26, i64 %28) #5
  br label %32

32:                                               ; preds = %9, %6, %1, %24
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17ThroughputTracker5StartEN4base12OnceCallbackIFvRKN2cc20FrameSequenceMetrics16CustomReportDataEEEE(%"class.ui::ThroughputTracker"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #5
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  br label %11

11:                                               ; preds = %8, %2
  %12 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #5
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast i64* %14 to %"class.ui::ThroughputTrackerHost"**
  %16 = load %"class.ui::ThroughputTrackerHost"*, %"class.ui::ThroughputTrackerHost"** %15, align 8
  %17 = bitcast %"class.ui::ThroughputTrackerHost"* %16 to void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)***
  br label %18

18:                                               ; preds = %11, %13
  %19 = phi void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)*** [ %17, %13 ], [ null, %11 ]
  %20 = phi %"class.ui::ThroughputTrackerHost"* [ %16, %13 ], [ null, %11 ]
  %21 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = load void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)**, void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)*** %19, align 8
  %28 = getelementptr inbounds void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)*, void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)** %27, i64 2
  %29 = load void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)*, void (%"class.ui::ThroughputTrackerHost"*, i64, %"class.base::OnceCallback"*)** %28, align 8
  call void %29(%"class.ui::ThroughputTrackerHost"* %20, i64 %22, %"class.base::OnceCallback"* nonnull %4) #5
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui17ThroughputTracker4StopEv(%"class.ui::ThroughputTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #5
  br i1 %5, label %6, label %30

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i64* %7 to %"class.ui::ThroughputTrackerHost"**
  %9 = load %"class.ui::ThroughputTrackerHost"*, %"class.ui::ThroughputTrackerHost"** %8, align 8
  %10 = icmp eq %"class.ui::ThroughputTrackerHost"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #5
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #5
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  br label %16

16:                                               ; preds = %13, %11
  %17 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #5
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = load %"class.ui::ThroughputTrackerHost"*, %"class.ui::ThroughputTrackerHost"** %8, align 8
  %20 = bitcast %"class.ui::ThroughputTrackerHost"* %19 to i1 (%"class.ui::ThroughputTrackerHost"*, i64)***
  br label %21

21:                                               ; preds = %16, %18
  %22 = phi i1 (%"class.ui::ThroughputTrackerHost"*, i64)*** [ %20, %18 ], [ null, %16 ]
  %23 = phi %"class.ui::ThroughputTrackerHost"* [ %19, %18 ], [ null, %16 ]
  %24 = getelementptr inbounds %"class.ui::ThroughputTracker", %"class.ui::ThroughputTracker"* %0, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = load i1 (%"class.ui::ThroughputTrackerHost"*, i64)**, i1 (%"class.ui::ThroughputTrackerHost"*, i64)*** %22, align 8
  %27 = getelementptr inbounds i1 (%"class.ui::ThroughputTrackerHost"*, i64)*, i1 (%"class.ui::ThroughputTrackerHost"*, i64)** %26, i64 3
  %28 = load i1 (%"class.ui::ThroughputTrackerHost"*, i64)*, i1 (%"class.ui::ThroughputTrackerHost"*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%"class.ui::ThroughputTrackerHost"* %23, i64 %25) #5
  br label %30

30:                                               ; preds = %6, %1, %21
  %31 = phi i1 [ %29, %21 ], [ false, %6 ], [ false, %1 ]
  ret i1 %31
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
