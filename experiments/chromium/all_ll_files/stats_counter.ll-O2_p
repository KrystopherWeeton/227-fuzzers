; ModuleID = '../../third_party/webrtc/video/stats_counter.cc'
source_filename = "../../third_party/webrtc/video/stats_counter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::StatsCounter" = type { i32 (...)**, i8, i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.webrtc::Clock"*, %"class.std::__1::unique_ptr.18", i64, i8, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::AggregatedCounter"* }
%"class.webrtc::AggregatedCounter" = type { i32, i64, %"struct.webrtc::AggregatedStats" }
%"struct.webrtc::AggregatedStats" = type <{ i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.webrtc::Samples"* }
%"class.webrtc::Samples" = type { i64, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.webrtc::StatsCounterObserver"* }
%"class.webrtc::StatsCounterObserver" = type { i32 (...)** }
%"class.webrtc::AvgCounter" = type { %"class.webrtc::StatsCounter" }
%"class.webrtc::MaxCounter" = type { %"class.webrtc::StatsCounter" }
%"class.webrtc::PercentCounter" = type { %"class.webrtc::StatsCounter" }
%"class.webrtc::PermilleCounter" = type { %"class.webrtc::StatsCounter" }
%"class.webrtc::RateCounter" = type { %"class.webrtc::StatsCounter" }
%"class.webrtc::RateAccCounter" = type { %"class.webrtc::StatsCounter" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rtc::StringBuilder" = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.25" }
%"struct.std::__1::pair.25" = type { i32, %"struct.webrtc::Samples::Stats" }
%"struct.webrtc::Samples::Stats" = type { i32, i64, i64, i64 }

$_ZN6webrtc7Samples3AddEij = comdat any

$_ZN6webrtc7Samples3SetElj = comdat any

$_ZN6webrtc10AvgCounterD0Ev = comdat any

$_ZN6webrtc10MaxCounterD0Ev = comdat any

$_ZN6webrtc14PercentCounterD0Ev = comdat any

$_ZN6webrtc15PermilleCounterD0Ev = comdat any

$_ZN6webrtc11RateCounterD0Ev = comdat any

$_ZN6webrtc14RateAccCounterD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"periodic_samples:\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c", {\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"min:\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"avg:\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"max:\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZTVN6webrtc12StatsCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6webrtc10AvgCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AvgCounter"*)* @_ZN6webrtc10AvgCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::AvgCounter"*, i32*)* @_ZNK6webrtc10AvgCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::AvgCounter"*)* @_ZNK6webrtc10AvgCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc10MaxCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::MaxCounter"*)* @_ZN6webrtc10MaxCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::MaxCounter"*, i32*)* @_ZNK6webrtc10MaxCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::MaxCounter"*)* @_ZNK6webrtc10MaxCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc14PercentCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::PercentCounter"*)* @_ZN6webrtc14PercentCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::PercentCounter"*, i32*)* @_ZNK6webrtc14PercentCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::PercentCounter"*)* @_ZNK6webrtc14PercentCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc15PermilleCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::PermilleCounter"*)* @_ZN6webrtc15PermilleCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::PermilleCounter"*, i32*)* @_ZNK6webrtc15PermilleCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::PermilleCounter"*)* @_ZNK6webrtc15PermilleCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc11RateCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RateCounter"*)* @_ZN6webrtc11RateCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::RateCounter"*, i32*)* @_ZNK6webrtc11RateCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::RateCounter"*)* @_ZNK6webrtc11RateCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8
@_ZTVN6webrtc14RateAccCounterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::RateAccCounter"*)* @_ZN6webrtc14RateAccCounterD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::RateAccCounter"*, i32*)* @_ZNK6webrtc14RateAccCounter9GetMetricEPi to i8*), i8* bitcast (i32 (%"class.webrtc::RateAccCounter"*)* @_ZNK6webrtc14RateAccCounter24GetValueForEmptyIntervalEv to i8*)] }, align 8

@_ZN6webrtc12StatsCounterD1Ev = hidden unnamed_addr alias void (%"class.webrtc::StatsCounter"*), void (%"class.webrtc::StatsCounter"*)* @_ZN6webrtc12StatsCounterD2Ev
@_ZN6webrtc10AvgCounterC1EPNS_5ClockEPNS_20StatsCounterObserverEb = hidden unnamed_addr alias void (%"class.webrtc::AvgCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1), void (%"class.webrtc::AvgCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1)* @_ZN6webrtc10AvgCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb
@_ZN6webrtc10MaxCounterC1EPNS_5ClockEPNS_20StatsCounterObserverEl = hidden unnamed_addr alias void (%"class.webrtc::MaxCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i64), void (%"class.webrtc::MaxCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i64)* @_ZN6webrtc10MaxCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEl
@_ZN6webrtc14PercentCounterC1EPNS_5ClockEPNS_20StatsCounterObserverE = hidden unnamed_addr alias void (%"class.webrtc::PercentCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*), void (%"class.webrtc::PercentCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*)* @_ZN6webrtc14PercentCounterC2EPNS_5ClockEPNS_20StatsCounterObserverE
@_ZN6webrtc15PermilleCounterC1EPNS_5ClockEPNS_20StatsCounterObserverE = hidden unnamed_addr alias void (%"class.webrtc::PermilleCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*), void (%"class.webrtc::PermilleCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*)* @_ZN6webrtc15PermilleCounterC2EPNS_5ClockEPNS_20StatsCounterObserverE
@_ZN6webrtc11RateCounterC1EPNS_5ClockEPNS_20StatsCounterObserverEb = hidden unnamed_addr alias void (%"class.webrtc::RateCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1), void (%"class.webrtc::RateCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1)* @_ZN6webrtc11RateCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb
@_ZN6webrtc14RateAccCounterC1EPNS_5ClockEPNS_20StatsCounterObserverEb = hidden unnamed_addr alias void (%"class.webrtc::RateAccCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1), void (%"class.webrtc::RateAccCounter"*, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1)* @_ZN6webrtc14RateAccCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15AggregatedStats8ToStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"struct.webrtc::AggregatedStats"* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK6webrtc15AggregatedStats22ToStringWithMultiplierEi(%"class.std::__1::basic_string"* sret %0, %"struct.webrtc::AggregatedStats"* %1, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc15AggregatedStats22ToStringWithMultiplierEi(%"class.std::__1::basic_string"* noalias nocapture sret, %"struct.webrtc::AggregatedStats"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.rtc::StringBuilder", align 8
  %9 = bitcast %"class.rtc::StringBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %"class.rtc::StringBuilder", %"class.rtc::StringBuilder"* %8, i64 0, i32 0
  %11 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i64 17) #11
  %12 = getelementptr inbounds %"struct.webrtc::AggregatedStats", %"struct.webrtc::AggregatedStats"* %1, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @_ZN3rtc8ToStringEl(%"class.std::__1::basic_string"* nonnull sret %7, i64 %13) #11
  %15 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %17 to i64
  %24 = select i1 %18, i8* %20, i8* %14
  %25 = select i1 %18, i64 %22, i64 %23
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %24, i64 %25) #11
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %3
  %30 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %3, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3) #11
  %33 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #11
  %34 = getelementptr inbounds %"struct.webrtc::AggregatedStats", %"struct.webrtc::AggregatedStats"* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = mul nsw i32 %35, %2
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  call void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* nonnull sret %6, i32 %36) #11
  %38 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %40 to i64
  %47 = select i1 %41, i8* %43, i8* %37
  %48 = select i1 %41, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %47, i64 %48) #11
  %50 = load i8, i8* %39, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %31
  %53 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %31, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #11
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #11
  %57 = getelementptr inbounds %"struct.webrtc::AggregatedStats", %"struct.webrtc::AggregatedStats"* %1, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = mul nsw i32 %58, %2
  %60 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  call void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* nonnull sret %5, i32 %59) #11
  %61 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %63 to i64
  %70 = select i1 %64, i8* %66, i8* %60
  %71 = select i1 %64, i64 %68, i64 %69
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %70, i64 %71) #11
  %73 = load i8, i8* %62, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %54
  %76 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %54, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #11
  %79 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #11
  %80 = getelementptr inbounds %"struct.webrtc::AggregatedStats", %"struct.webrtc::AggregatedStats"* %1, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = mul nsw i32 %81, %2
  %83 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  call void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* nonnull sret %4, i32 %82) #11
  %84 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %86 to i64
  %93 = select i1 %87, i8* %89, i8* %83
  %94 = select i1 %87, i64 %91, i64 %92
  %95 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %93, i64 %94) #11
  %96 = load i8, i8* %85, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %77
  %99 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %77, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  %101 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #11
  %102 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 8 %9, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounterC2EPNS_5ClockElbPNS_20StatsCounterObserverE(%"class.webrtc::StatsCounter"* nocapture, %"class.webrtc::Clock"*, i64, i1 zeroext, %"class.webrtc::StatsCounterObserver"*) unnamed_addr #0 align 2 {
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 1
  store i8 %6, i8* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 2
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3
  %11 = tail call i8* @_Znwm(i64 40) #12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 28
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %11, i64 32
  %19 = bitcast i8* %18 to i32*
  store i32 -1, i32* %19, align 8
  %20 = ptrtoint i8* %11 to i64
  %21 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4
  %23 = tail call i8* @_Znwm(i64 32) #12
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 16
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #11
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = ptrtoint i8* %23 to i64
  %29 = bitcast %"class.std::__1::unique_ptr.4"* %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 6
  %32 = ptrtoint %"class.webrtc::StatsCounterObserver"* %4 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.18"* %31 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  store i64 -1, i64* %34, align 8
  %35 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  %37 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %37, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounterD0Ev(%"class.webrtc::StatsCounter"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter8GetStatsEv(%"struct.webrtc::AggregatedStats"* noalias nocapture sret, %"class.webrtc::StatsCounter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %4, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !2
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %4, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !noalias !2
  %11 = sdiv i64 %6, 2
  %12 = add nsw i64 %10, %11
  %13 = sdiv i64 %12, %6
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %4, i64 0, i32 2, i32 3
  store i32 %14, i32* %15, align 8, !noalias !2
  br label %16

16:                                               ; preds = %2, %8
  %17 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %4, i64 0, i32 2
  %18 = bitcast %"struct.webrtc::AggregatedStats"* %0 to i8*
  %19 = bitcast %"struct.webrtc::AggregatedStats"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter18ProcessAndGetStatsEv(%"struct.webrtc::AggregatedStats"* noalias nocapture sret, %"class.webrtc::StatsCounter"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %1, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %1)
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %9, i64 0, i32 2, i32 0
  %11 = load i64, i64* %10, align 8, !noalias !5
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %9, i64 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !5
  %16 = sdiv i64 %11, 2
  %17 = add nsw i64 %15, %16
  %18 = sdiv i64 %17, %11
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %9, i64 0, i32 2, i32 3
  store i32 %19, i32* %20, align 8, !noalias !5
  br label %21

21:                                               ; preds = %7, %13
  %22 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %9, i64 0, i32 2
  %23 = bitcast %"struct.webrtc::AggregatedStats"* %0 to i8*
  %24 = bitcast %"struct.webrtc::AggregatedStats"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc12StatsCounter9HasSampleEv(%"class.webrtc::StatsCounter"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %4 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %3, align 8
  %5 = bitcast %"class.webrtc::Clock"* %4 to i64 (%"class.webrtc::Clock"*)***
  %6 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %6, i64 2
  %8 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::Clock"* %4) #11
  %10 = add nsw i64 %9, 500
  %11 = sdiv i64 %10, 1000
  %12 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, -1
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  store i64 %11, i64* %12, align 8
  br label %16

16:                                               ; preds = %15, %1
  %17 = phi i64 [ %11, %15 ], [ %13, %1 ]
  %18 = sub nsw i64 %11, %17
  %19 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %189, label %22

22:                                               ; preds = %16
  %23 = sdiv i64 %18, %20
  %24 = mul nsw i64 %23, %20
  %25 = add nsw i64 %24, %17
  store i64 %25, i64* %12, align 8
  %26 = trunc i64 %23 to i32
  %27 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #11
  store i32 -1431655766, i32* %2, align 4
  %28 = bitcast %"class.webrtc::StatsCounter"* %0 to i1 (%"class.webrtc::StatsCounter"*, i32*)***
  %29 = load i1 (%"class.webrtc::StatsCounter"*, i32*)**, i1 (%"class.webrtc::StatsCounter"*, i32*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.webrtc::StatsCounter"*, i32*)*, i1 (%"class.webrtc::StatsCounter"*, i32*)** %29, i64 2
  %31 = load i1 (%"class.webrtc::StatsCounter"*, i32*)*, i1 (%"class.webrtc::StatsCounter"*, i32*)** %30, align 8
  %32 = call zeroext i1 %31(%"class.webrtc::StatsCounter"* %0, i32* nonnull %2) #11
  br i1 %32, label %33, label %68

33:                                               ; preds = %22
  %34 = load i32, i32* %2, align 4
  %35 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = sext i32 %34 to i64
  %37 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %38 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %35, align 8
  %39 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 0
  store i32 %34, i32* %39, align 8
  %40 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, %36
  store i64 %42, i64* %40, align 8
  %43 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 2, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %44, 0
  %47 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 2, i32 1
  br i1 %46, label %52, label %48

48:                                               ; preds = %33
  %49 = load i32, i32* %47, align 4
  %50 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 2, i32 2
  %51 = load i32, i32* %50, align 4
  br label %54

52:                                               ; preds = %33
  store i32 %34, i32* %47, align 8
  %53 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 2, i32 2
  store i32 %34, i32* %53, align 4
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi i32 [ %51, %48 ], [ %34, %52 ]
  %56 = phi i32 [ %49, %48 ], [ %34, %52 ]
  %57 = icmp slt i32 %56, %34
  %58 = select i1 %57, i32 %56, i32 %34
  store i32 %58, i32* %47, align 8
  %59 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %38, i64 0, i32 2, i32 2
  %60 = icmp sgt i32 %55, %34
  %61 = select i1 %60, i32 %55, i32 %34
  store i32 %61, i32* %59, align 4
  %62 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %37, align 8
  %63 = icmp eq %"class.webrtc::StatsCounterObserver"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"class.webrtc::StatsCounterObserver"* %62 to void (%"class.webrtc::StatsCounterObserver"*, i32)***
  %66 = load void (%"class.webrtc::StatsCounterObserver"*, i32)**, void (%"class.webrtc::StatsCounterObserver"*, i32)*** %65, align 8
  %67 = load void (%"class.webrtc::StatsCounterObserver"*, i32)*, void (%"class.webrtc::StatsCounterObserver"*, i32)** %66, align 8
  call void %67(%"class.webrtc::StatsCounterObserver"* nonnull %62, i32 %34) #11
  br label %68

68:                                               ; preds = %54, %64, %22
  %69 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 1
  %70 = load i8, i8* %69, align 8, !range !8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %134, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  %74 = load i8, i8* %73, align 8, !range !8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %134

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %77, align 8
  %79 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %78, i64 0, i32 2, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %134, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %84 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %83, align 8
  %85 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %84, i64 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = icmp ne i64 %86, 0
  %88 = zext i1 %87 to i32
  %89 = sub i32 %26, %88
  %90 = bitcast %"class.webrtc::StatsCounter"* %0 to i32 (%"class.webrtc::StatsCounter"*)***
  %91 = load i32 (%"class.webrtc::StatsCounter"*)**, i32 (%"class.webrtc::StatsCounter"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.webrtc::StatsCounter"*)*, i32 (%"class.webrtc::StatsCounter"*)** %91, i64 3
  %93 = load i32 (%"class.webrtc::StatsCounter"*)*, i32 (%"class.webrtc::StatsCounter"*)** %92, align 8
  %94 = call i32 %93(%"class.webrtc::StatsCounter"* %0) #11
  %95 = icmp sgt i32 %89, 0
  br i1 %95, label %96, label %134

96:                                               ; preds = %82
  %97 = sext i32 %94 to i64
  %98 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %99

99:                                               ; preds = %131, %96
  %100 = phi i32 [ 0, %96 ], [ %132, %131 ]
  %101 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %77, align 8
  %102 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 0
  store i32 %94, i32* %102, align 8
  %103 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add nsw i64 %104, %97
  store i64 %105, i64* %103, align 8
  %106 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 2, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, 1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %107, 0
  %110 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 2, i32 1
  br i1 %109, label %115, label %111

111:                                              ; preds = %99
  %112 = load i32, i32* %110, align 4
  %113 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 2, i32 2
  %114 = load i32, i32* %113, align 4
  br label %117

115:                                              ; preds = %99
  store i32 %94, i32* %110, align 8
  %116 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 2, i32 2
  store i32 %94, i32* %116, align 4
  br label %117

117:                                              ; preds = %115, %111
  %118 = phi i32 [ %114, %111 ], [ %94, %115 ]
  %119 = phi i32 [ %112, %111 ], [ %94, %115 ]
  %120 = icmp slt i32 %119, %94
  %121 = select i1 %120, i32 %119, i32 %94
  store i32 %121, i32* %110, align 8
  %122 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %101, i64 0, i32 2, i32 2
  %123 = icmp sgt i32 %118, %94
  %124 = select i1 %123, i32 %118, i32 %94
  store i32 %124, i32* %122, align 4
  %125 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %98, align 8
  %126 = icmp eq %"class.webrtc::StatsCounterObserver"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %117
  %128 = bitcast %"class.webrtc::StatsCounterObserver"* %125 to void (%"class.webrtc::StatsCounterObserver"*, i32)***
  %129 = load void (%"class.webrtc::StatsCounterObserver"*, i32)**, void (%"class.webrtc::StatsCounterObserver"*, i32)*** %128, align 8
  %130 = load void (%"class.webrtc::StatsCounterObserver"*, i32)*, void (%"class.webrtc::StatsCounterObserver"*, i32)** %129, align 8
  call void %130(%"class.webrtc::StatsCounterObserver"* nonnull %125, i32 %94) #11
  br label %131

131:                                              ; preds = %127, %117
  %132 = add nuw nsw i32 %100, 1
  %133 = icmp eq i32 %132, %89
  br i1 %133, label %134, label %99

134:                                              ; preds = %131, %76, %68, %72, %82
  %135 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %135, align 8
  %137 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %139 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %136, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %140 = icmp eq %"class.std::__1::__tree_end_node"* %138, %139
  br i1 %140, label %187, label %141

141:                                              ; preds = %134, %184
  %142 = phi %"class.std::__1::__tree_end_node"* [ %185, %184 ], [ %138, %134 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 5
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 6
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = icmp sgt i64 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 7
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 8
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i64*
  store i64 %151, i64* %153, align 8
  br label %154

154:                                              ; preds = %148, %141
  %155 = bitcast %"class.std::__1::__tree_end_node"* %143 to i32*
  %156 = bitcast %"class.std::__1::__tree_end_node"* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #11
  store i32 -2147483648, i32* %155, align 8
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = icmp eq %"class.std::__1::__tree_node_base"* %158, null
  br i1 %159, label %160, label %168

160:                                              ; preds = %154
  %161 = bitcast %"class.std::__1::__tree_end_node"* %142 to %"class.std::__1::__tree_node_base"*
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 2
  %163 = bitcast %"class.std::__1::__tree_end_node"* %162 to %"class.std::__1::__tree_end_node"**
  %164 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %163, align 8
  %165 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %164, i64 0, i32 0
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = icmp eq %"class.std::__1::__tree_node_base"* %166, %161
  br i1 %167, label %184, label %175

168:                                              ; preds = %154, %168
  %169 = phi %"class.std::__1::__tree_node_base"* [ %171, %168 ], [ %158, %154 ]
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 0, i32 0
  %171 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  %172 = icmp eq %"class.std::__1::__tree_node_base"* %171, null
  br i1 %172, label %173, label %168

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 0
  br label %184

175:                                              ; preds = %160, %175
  %176 = phi %"class.std::__1::__tree_end_node"** [ %179, %175 ], [ %163, %160 ]
  %177 = bitcast %"class.std::__1::__tree_end_node"** %176 to %"class.std::__1::__tree_node_base"**
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %178, i64 0, i32 2
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, %178
  br i1 %183, label %184, label %175

184:                                              ; preds = %175, %173, %160
  %185 = phi %"class.std::__1::__tree_end_node"* [ %174, %173 ], [ %164, %160 ], [ %180, %175 ]
  %186 = icmp eq %"class.std::__1::__tree_end_node"* %185, %139
  br i1 %186, label %187, label %141

187:                                              ; preds = %184, %134
  %188 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %136, i64 0, i32 0
  store i64 0, i64* %188, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #11
  br label %189

189:                                              ; preds = %16, %187
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter26ProcessAndPauseForDurationEl(%"class.webrtc::StatsCounter"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %0) #11
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %10 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %9, align 8
  %11 = bitcast %"class.webrtc::Clock"* %10 to i64 (%"class.webrtc::Clock"*)***
  %12 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %12, i64 2
  %14 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.webrtc::Clock"* %10) #11
  %16 = add nsw i64 %15, 500
  %17 = sdiv i64 %16, 1000
  %18 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  store i64 %1, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter15ProcessAndPauseEv(%"class.webrtc::StatsCounter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %9 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %8, align 8
  %10 = bitcast %"class.webrtc::Clock"* %9 to i64 (%"class.webrtc::Clock"*)***
  %11 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %11, i64 2
  %13 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::Clock"* %9) #11
  %15 = add nsw i64 %14, 500
  %16 = sdiv i64 %15, 1000
  %17 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  store i64 %16, i64* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter19ProcessAndStopPauseEv(%"class.webrtc::StatsCounter"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  store i64 0, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc12StatsCounter6ResumeEv(%"class.webrtc::StatsCounter"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc12StatsCounter13TimeToProcessEPi(%"class.webrtc::StatsCounter"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %4 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %3, align 8
  %5 = bitcast %"class.webrtc::Clock"* %4 to i64 (%"class.webrtc::Clock"*)***
  %6 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %6, i64 2
  %8 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::Clock"* %4) #11
  %10 = add nsw i64 %9, 500
  %11 = sdiv i64 %10, 1000
  %12 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, -1
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i64 %11, i64* %12, align 8
  br label %16

16:                                               ; preds = %15, %2
  %17 = phi i64 [ %11, %15 ], [ %13, %2 ]
  %18 = sub nsw i64 %11, %17
  %19 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = sdiv i64 %18, %20
  %24 = mul nsw i64 %23, %20
  %25 = add nsw i64 %24, %17
  store i64 %25, i64* %12, align 8
  %26 = trunc i64 %23 to i32
  store i32 %26, i32* %1, align 4
  br label %27

27:                                               ; preds = %16, %22
  %28 = phi i1 [ true, %22 ], [ false, %16 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter3AddEi(%"class.webrtc::StatsCounter"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %0)
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %4, i32 %1, i32 0)
  %5 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %10 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %9, align 8
  %11 = bitcast %"class.webrtc::Clock"* %10 to i64 (%"class.webrtc::Clock"*)***
  %12 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %12, i64 2
  %14 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %13, align 8
  %15 = tail call i64 %14(%"class.webrtc::Clock"* %10) #11
  %16 = add nsw i64 %15, 500
  %17 = sdiv i64 %16, 1000
  %18 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %17, %19
  %21 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %8
  store i8 0, i8* %5, align 8
  store i64 0, i64* %21, align 8
  br label %25

25:                                               ; preds = %2, %8, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %2
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult i32 %15, %2
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 72) #12, !noalias !9
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %2, i32* %48, align 8, !noalias !9
  %49 = getelementptr inbounds i8, i8* %46, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 2147483648, i64* %50, align 8, !noalias !9
  %51 = getelementptr inbounds i8, i8* %46, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11, !noalias !9
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %46, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %45
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %45 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #11
  %70 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %39, %66
  %74 = phi %"class.std::__1::__tree_node"* [ %52, %66 ], [ %43, %39 ]
  %75 = sext i32 %1 to i64
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %74, i64 0, i32 1, i32 0, i32 1, i32 1
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  %79 = insertelement <2 x i64> <i64 1, i64 undef>, i64 %75, i32 1
  %80 = add nsw <2 x i64> %78, %79
  %81 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %74, i64 0, i32 1, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, %1
  %85 = select i1 %84, i32 %83, i32 %1
  store i32 %85, i32* %82, align 8
  %86 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = add nsw i64 %87, 1
  store i64 %88, i64* %86, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter21ResumeIfMinTimePassedEv(%"class.webrtc::StatsCounter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %7 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %6, align 8
  %8 = bitcast %"class.webrtc::Clock"* %7 to i64 (%"class.webrtc::Clock"*)***
  %9 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %9, i64 2
  %11 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %10, align 8
  %12 = tail call i64 %11(%"class.webrtc::Clock"* %7) #11
  %13 = add nsw i64 %12, 500
  %14 = sdiv i64 %13, 1000
  %15 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %14, %16
  %18 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %22, label %21

21:                                               ; preds = %5
  store i8 0, i8* %2, align 8
  store i64 0, i64* %18, align 8
  br label %22

22:                                               ; preds = %5, %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter3SetElj(%"class.webrtc::StatsCounter"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  %5 = load i8, i8* %4, align 8, !range !8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %84, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %9, i64 0, i32 1
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %9, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %43, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %9, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %39, %15
  %18 = phi %"class.std::__1::__tree_node"* [ %42, %39 ], [ %13, %15 ]
  %19 = phi %"class.std::__1::__tree_node_base"** [ %41, %39 ], [ %16, %15 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, %2
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %45

29:                                               ; preds = %17
  %30 = icmp ult i32 %21, %2
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %45

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 0, i32 0
  br label %45

39:                                               ; preds = %31, %23
  %40 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %33, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %32, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"* %40 to %"class.std::__1::__tree_node"*
  br label %17

43:                                               ; preds = %7
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  br label %45

45:                                               ; preds = %43, %37, %35, %27
  %46 = phi %"class.std::__1::__tree_end_node"* [ %11, %43 ], [ %28, %27 ], [ %36, %35 ], [ %38, %37 ]
  %47 = phi %"class.std::__1::__tree_node_base"** [ %44, %43 ], [ %24, %27 ], [ %32, %35 ], [ %19, %37 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node"* %49, null
  br i1 %50, label %51, label %79

51:                                               ; preds = %45
  %52 = tail call i8* @_Znwm(i64 72) #12, !noalias !12
  %53 = getelementptr inbounds i8, i8* %52, i64 32
  %54 = bitcast i8* %53 to i32*
  store i32 %2, i32* %54, align 8, !noalias !12
  %55 = getelementptr inbounds i8, i8* %52, i64 40
  %56 = bitcast i8* %55 to i64*
  store i64 2147483648, i64* %56, align 8, !noalias !12
  %57 = getelementptr inbounds i8, i8* %52, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #11, !noalias !12
  %58 = bitcast i8* %52 to %"class.std::__1::__tree_node"*
  %59 = bitcast i8* %52 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %52, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %47 to i8**
  store i8* %52, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %51
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.std::__1::map"* %10 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  br label %72

72:                                               ; preds = %68, %51
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %51 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %9, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #11
  %76 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %45, %72
  %80 = phi %"class.std::__1::__tree_node"* [ %58, %72 ], [ %49, %45 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %1
  br i1 %83, label %106, label %84

84:                                               ; preds = %3, %79
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %0)
  %85 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %85, align 8
  tail call void @_ZN6webrtc7Samples3SetElj(%"class.webrtc::Samples"* %86, i64 %1, i32 %2)
  %87 = load i8, i8* %4, align 8, !range !8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %106, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 5
  %91 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %90, align 8
  %92 = bitcast %"class.webrtc::Clock"* %91 to i64 (%"class.webrtc::Clock"*)***
  %93 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %92, align 8
  %94 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %93, i64 2
  %95 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %94, align 8
  %96 = tail call i64 %95(%"class.webrtc::Clock"* %91) #11
  %97 = add nsw i64 %96, 500
  %98 = sdiv i64 %97, 1000
  %99 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 9
  %100 = load i64, i64* %99, align 8
  %101 = sub nsw i64 %98, %100
  %102 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 10
  %103 = load i64, i64* %102, align 8
  %104 = icmp slt i64 %101, %103
  br i1 %104, label %106, label %105

105:                                              ; preds = %89
  store i8 0, i8* %4, align 8
  store i64 0, i64* %102, align 8
  br label %106

106:                                              ; preds = %105, %89, %84, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc7Samples3SetElj(%"class.webrtc::Samples"*, i64, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %2
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp ult i32 %15, %2
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 72) #12, !noalias !15
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %2, i32* %48, align 8, !noalias !15
  %49 = getelementptr inbounds i8, i8* %46, i64 40
  %50 = bitcast i8* %49 to i64*
  store i64 2147483648, i64* %50, align 8, !noalias !15
  %51 = getelementptr inbounds i8, i8* %46, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11, !noalias !15
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %46, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %45
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %45 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #11
  %70 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %39, %66
  %74 = phi %"class.std::__1::__tree_node"* [ %52, %66 ], [ %43, %39 ]
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %74, i64 0, i32 1, i32 0, i32 1, i32 2
  store i64 %1, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %74, i64 0, i32 1, i32 0, i32 1, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = add nsw i64 %77, 1
  store i64 %78, i64* %76, align 8
  %79 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %0, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add nsw i64 %80, 1
  store i64 %81, i64* %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounter7SetLastElj(%"class.webrtc::StatsCounter"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult i32 %17, %2
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %75

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 72) #12, !noalias !18
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 %2, i32* %50, align 8, !noalias !18
  %51 = getelementptr inbounds i8, i8* %48, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 2147483648, i64* %52, align 8, !noalias !18
  %53 = getelementptr inbounds i8, i8* %48, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11, !noalias !18
  %54 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %55 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds i8, i8* %48, i64 16
  %57 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %57, align 8
  %58 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %47
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %66 = bitcast %"class.std::__1::map"* %6 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %68

68:                                               ; preds = %64, %47
  %69 = phi %"class.std::__1::__tree_node_base"* [ %55, %47 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %69) #11
  %72 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %41, %68
  %76 = phi %"class.std::__1::__tree_node"* [ %54, %68 ], [ %45, %41 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 1, i32 0, i32 1, i32 3
  store i64 %1, i64* %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc12StatsCounter31ReportMetricToAggregatedCounterEii(%"class.webrtc::StatsCounter"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %10

9:                                                ; preds = %42, %3
  ret void

10:                                               ; preds = %42, %5
  %11 = phi i32 [ 0, %5 ], [ %43, %42 ]
  %12 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %6, align 8
  %13 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 0
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, %7
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 2, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %18, 0
  %21 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 2, i32 1
  br i1 %20, label %26, label %22

22:                                               ; preds = %10
  %23 = load i32, i32* %21, align 4
  %24 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 2, i32 2
  %25 = load i32, i32* %24, align 4
  br label %28

26:                                               ; preds = %10
  store i32 %1, i32* %21, align 8
  %27 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 2, i32 2
  store i32 %1, i32* %27, align 4
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi i32 [ %25, %22 ], [ %1, %26 ]
  %30 = phi i32 [ %23, %22 ], [ %1, %26 ]
  %31 = icmp slt i32 %30, %1
  %32 = select i1 %31, i32 %30, i32 %1
  store i32 %32, i32* %21, align 8
  %33 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %12, i64 0, i32 2, i32 2
  %34 = icmp sgt i32 %29, %1
  %35 = select i1 %34, i32 %29, i32 %1
  store i32 %35, i32* %33, align 4
  %36 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %8, align 8
  %37 = icmp eq %"class.webrtc::StatsCounterObserver"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.webrtc::StatsCounterObserver"* %36 to void (%"class.webrtc::StatsCounterObserver"*, i32)***
  %40 = load void (%"class.webrtc::StatsCounterObserver"*, i32)**, void (%"class.webrtc::StatsCounterObserver"*, i32)*** %39, align 8
  %41 = load void (%"class.webrtc::StatsCounterObserver"*, i32)*, void (%"class.webrtc::StatsCounterObserver"*, i32)** %40, align 8
  tail call void %41(%"class.webrtc::StatsCounterObserver"* nonnull %36, i32 %1) #11
  br label %42

42:                                               ; preds = %28, %38
  %43 = add nuw nsw i32 %11, 1
  %44 = icmp eq i32 %43, %2
  br i1 %44, label %9, label %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc12StatsCounter21IncludeEmptyIntervalsEv(%"class.webrtc::StatsCounter"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %11, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp ne i64 %13, 0
  br label %15

15:                                               ; preds = %5, %1, %9
  %16 = phi i1 [ false, %5 ], [ false, %1 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10AvgCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb(%"class.webrtc::AvgCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 2
  store i64 2000, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 3
  %10 = tail call i8* @_Znwm(i64 40) #12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = getelementptr inbounds i8, i8* %10, i64 24
  %14 = bitcast i8* %13 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 28
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 8
  %19 = ptrtoint i8* %10 to i64
  %20 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 4
  %22 = tail call i8* @_Znwm(i64 32) #12
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 16
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = ptrtoint i8* %22 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 6
  %31 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.18"* %30 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 9
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc10AvgCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10AvgCounter3AddEi(%"class.webrtc::AvgCounter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %3) #11
  %4 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %4, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %5, i32 %1, i32 0) #11
  %6 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 5
  %11 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %10, align 8
  %12 = bitcast %"class.webrtc::Clock"* %11 to i64 (%"class.webrtc::Clock"*)***
  %13 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %13, i64 2
  %15 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %14, align 8
  %16 = tail call i64 %15(%"class.webrtc::Clock"* %11) #11
  %17 = add nsw i64 %16, 500
  %18 = sdiv i64 %17, 1000
  %19 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 9
  %20 = load i64, i64* %19, align 8
  %21 = sub nsw i64 %18, %20
  %22 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %9
  store i8 0, i8* %6, align 8
  store i64 0, i64* %22, align 8
  br label %26

26:                                               ; preds = %2, %9, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc10AvgCounter9GetMetricEPi(%"class.webrtc::AvgCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %56, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %50, label %13

13:                                               ; preds = %8, %47
  %14 = phi i64 [ %19, %47 ], [ 0, %8 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 7
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %13, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %13 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %36, %23
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %11
  br i1 %49, label %50, label %13

50:                                               ; preds = %47, %8
  %51 = phi i64 [ 0, %8 ], [ %19, %47 ]
  %52 = sdiv i64 %6, 2
  %53 = add nsw i64 %51, %52
  %54 = sdiv i64 %53, %6
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %1, align 4
  br label %56

56:                                               ; preds = %2, %50
  %57 = phi i1 [ true, %50 ], [ false, %2 ]
  ret i1 %57
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc10AvgCounter24GetValueForEmptyIntervalEv(%"class.webrtc::AvgCounter"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::AggregatedCounter", %"class.webrtc::AggregatedCounter"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10MaxCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEl(%"class.webrtc::MaxCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 2
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 3
  %9 = tail call i8* @_Znwm(i64 40) #12
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = getelementptr inbounds i8, i8* %9, i64 24
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 28
  %15 = bitcast i8* %14 to i32*
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 32
  %17 = bitcast i8* %16 to i32*
  store i32 -1, i32* %17, align 8
  %18 = ptrtoint i8* %9 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 4
  %21 = tail call i8* @_Znwm(i64 32) #12
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %21, i64 16
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11
  %25 = bitcast i8* %24 to i8**
  store i8* %23, i8** %25, align 8
  %26 = ptrtoint i8* %21 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.4"* %20 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 6
  %30 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.18"* %29 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 9
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc10MaxCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc10MaxCounter3AddEi(%"class.webrtc::MaxCounter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %3) #11
  %4 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %4, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %5, i32 %1, i32 0) #11
  %6 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 5
  %11 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %10, align 8
  %12 = bitcast %"class.webrtc::Clock"* %11 to i64 (%"class.webrtc::Clock"*)***
  %13 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %13, i64 2
  %15 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %14, align 8
  %16 = tail call i64 %15(%"class.webrtc::Clock"* %11) #11
  %17 = add nsw i64 %16, 500
  %18 = sdiv i64 %17, 1000
  %19 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 9
  %20 = load i64, i64* %19, align 8
  %21 = sub nsw i64 %18, %20
  %22 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %9
  store i8 0, i8* %6, align 8
  store i64 0, i64* %22, align 8
  br label %26

26:                                               ; preds = %2, %9, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc10MaxCounter9GetMetricEPi(%"class.webrtc::MaxCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %53, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %51, label %13

13:                                               ; preds = %8, %48
  %14 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %10, %8 ]
  %15 = phi i32 [ %20, %48 ], [ -2147483648, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 5
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %15
  %20 = select i1 %19, i32 %15, i32 %18
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %13
  %25 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_end_node"**
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %25
  br i1 %31, label %48, label %39

32:                                               ; preds = %13, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %22, %13 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0
  br label %48

39:                                               ; preds = %24, %39
  %40 = phi %"class.std::__1::__tree_end_node"** [ %43, %39 ], [ %27, %24 ]
  %41 = bitcast %"class.std::__1::__tree_end_node"** %40 to %"class.std::__1::__tree_node_base"**
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %42
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %37, %24
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %28, %24 ], [ %44, %39 ]
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %49, %11
  br i1 %50, label %51, label %13

51:                                               ; preds = %48, %8
  %52 = phi i32 [ -2147483648, %8 ], [ %20, %48 ]
  store i32 %52, i32* %1, align 4
  br label %53

53:                                               ; preds = %2, %51
  %54 = phi i1 [ true, %51 ], [ false, %2 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc10MaxCounter24GetValueForEmptyIntervalEv(%"class.webrtc::MaxCounter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14PercentCounterC2EPNS_5ClockEPNS_20StatsCounterObserverE(%"class.webrtc::PercentCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 2
  store i64 2000, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 3
  %8 = tail call i8* @_Znwm(i64 40) #12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 24
  %12 = bitcast i8* %11 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 28
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 32
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 8
  %17 = ptrtoint i8* %8 to i64
  %18 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 4
  %20 = tail call i8* @_Znwm(i64 32) #12
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = ptrtoint i8* %20 to i64
  %26 = bitcast %"class.std::__1::unique_ptr.4"* %19 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 6
  %29 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %30 = bitcast %"class.std::__1::unique_ptr.18"* %28 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 9
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc14PercentCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14PercentCounter3AddEb(%"class.webrtc::PercentCounter"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0
  %4 = zext i1 %1 to i32
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %3) #11
  %5 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %5, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %6, i32 %4, i32 0) #11
  %7 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 8
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 5
  %12 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %11, align 8
  %13 = bitcast %"class.webrtc::Clock"* %12 to i64 (%"class.webrtc::Clock"*)***
  %14 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %14, i64 2
  %16 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::Clock"* %12) #11
  %18 = add nsw i64 %17, 500
  %19 = sdiv i64 %18, 1000
  %20 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 9
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %19, %21
  %23 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 10
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %10
  store i8 0, i8* %7, align 8
  store i64 0, i64* %23, align 8
  br label %27

27:                                               ; preds = %2, %10, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc14PercentCounter9GetMetricEPi(%"class.webrtc::PercentCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %52, label %13

13:                                               ; preds = %8, %47
  %14 = phi i64 [ %19, %47 ], [ 0, %8 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 7
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %13, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %13 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %36, %23
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %11
  br i1 %49, label %50, label %13

50:                                               ; preds = %47
  %51 = mul i64 %19, 100
  br label %52

52:                                               ; preds = %50, %8
  %53 = phi i64 [ 0, %8 ], [ %51, %50 ]
  %54 = sdiv i64 %6, 2
  %55 = add nsw i64 %53, %54
  %56 = sdiv i64 %55, %6
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %1, align 4
  br label %58

58:                                               ; preds = %2, %52
  %59 = phi i1 [ true, %52 ], [ false, %2 ]
  ret i1 %59
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc14PercentCounter24GetValueForEmptyIntervalEv(%"class.webrtc::PercentCounter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15PermilleCounterC2EPNS_5ClockEPNS_20StatsCounterObserverE(%"class.webrtc::PermilleCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 2
  store i64 2000, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 3
  %8 = tail call i8* @_Znwm(i64 40) #12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = getelementptr inbounds i8, i8* %8, i64 24
  %12 = bitcast i8* %11 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 28
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 32
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 8
  %17 = ptrtoint i8* %8 to i64
  %18 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 4
  %20 = tail call i8* @_Znwm(i64 32) #12
  %21 = bitcast i8* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 16
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = ptrtoint i8* %20 to i64
  %26 = bitcast %"class.std::__1::unique_ptr.4"* %19 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 6
  %29 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %30 = bitcast %"class.std::__1::unique_ptr.18"* %28 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 9
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc15PermilleCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15PermilleCounter3AddEb(%"class.webrtc::PermilleCounter"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0
  %4 = zext i1 %1 to i32
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %3) #11
  %5 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %5, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %6, i32 %4, i32 0) #11
  %7 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 8
  %8 = load i8, i8* %7, align 8, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 5
  %12 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %11, align 8
  %13 = bitcast %"class.webrtc::Clock"* %12 to i64 (%"class.webrtc::Clock"*)***
  %14 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %14, i64 2
  %16 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::Clock"* %12) #11
  %18 = add nsw i64 %17, 500
  %19 = sdiv i64 %18, 1000
  %20 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 9
  %21 = load i64, i64* %20, align 8
  %22 = sub nsw i64 %19, %21
  %23 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 10
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  br i1 %25, label %27, label %26

26:                                               ; preds = %10
  store i8 0, i8* %7, align 8
  store i64 0, i64* %23, align 8
  br label %27

27:                                               ; preds = %2, %10, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc15PermilleCounter9GetMetricEPi(%"class.webrtc::PermilleCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %52, label %13

13:                                               ; preds = %8, %47
  %14 = phi i64 [ %19, %47 ], [ 0, %8 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 7
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %13, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %13 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %36, %23
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %11
  br i1 %49, label %50, label %13

50:                                               ; preds = %47
  %51 = mul i64 %19, 1000
  br label %52

52:                                               ; preds = %50, %8
  %53 = phi i64 [ 0, %8 ], [ %51, %50 ]
  %54 = sdiv i64 %6, 2
  %55 = add nsw i64 %53, %54
  %56 = sdiv i64 %55, %6
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %1, align 4
  br label %58

58:                                               ; preds = %2, %52
  %59 = phi i1 [ true, %52 ], [ false, %2 ]
  ret i1 %59
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc15PermilleCounter24GetValueForEmptyIntervalEv(%"class.webrtc::PermilleCounter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11RateCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb(%"class.webrtc::RateCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 2
  store i64 2000, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 3
  %10 = tail call i8* @_Znwm(i64 40) #12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = getelementptr inbounds i8, i8* %10, i64 24
  %14 = bitcast i8* %13 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 28
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 8
  %19 = ptrtoint i8* %10 to i64
  %20 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 4
  %22 = tail call i8* @_Znwm(i64 32) #12
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 16
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = ptrtoint i8* %22 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 6
  %31 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.18"* %30 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 9
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc11RateCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc11RateCounter3AddEi(%"class.webrtc::RateCounter"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc12StatsCounter10TryProcessEv(%"class.webrtc::StatsCounter"* %3) #11
  %4 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %4, align 8
  tail call void @_ZN6webrtc7Samples3AddEij(%"class.webrtc::Samples"* %5, i32 %1, i32 0) #11
  %6 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 8
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 5
  %11 = load %"class.webrtc::Clock"*, %"class.webrtc::Clock"** %10, align 8
  %12 = bitcast %"class.webrtc::Clock"* %11 to i64 (%"class.webrtc::Clock"*)***
  %13 = load i64 (%"class.webrtc::Clock"*)**, i64 (%"class.webrtc::Clock"*)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %13, i64 2
  %15 = load i64 (%"class.webrtc::Clock"*)*, i64 (%"class.webrtc::Clock"*)** %14, align 8
  %16 = tail call i64 %15(%"class.webrtc::Clock"* %11) #11
  %17 = add nsw i64 %16, 500
  %18 = sdiv i64 %17, 1000
  %19 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 9
  %20 = load i64, i64* %19, align 8
  %21 = sub nsw i64 %18, %20
  %22 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %9
  store i8 0, i8* %6, align 8
  store i64 0, i64* %22, align 8
  br label %26

26:                                               ; preds = %2, %9, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc11RateCounter9GetMetricEPi(%"class.webrtc::RateCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %60, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %52, label %13

13:                                               ; preds = %8, %47
  %14 = phi i64 [ %19, %47 ], [ 0, %8 ]
  %15 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %10, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 7
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %13
  %24 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %13, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %13 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %36, %23
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %11
  br i1 %49, label %50, label %13

50:                                               ; preds = %47
  %51 = mul i64 %19, 1000
  br label %52

52:                                               ; preds = %50, %8
  %53 = phi i64 [ 0, %8 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = sdiv i64 %55, 2
  %57 = add nsw i64 %56, %53
  %58 = sdiv i64 %57, %55
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %1, align 4
  br label %60

60:                                               ; preds = %2, %52
  %61 = phi i1 [ true, %52 ], [ false, %2 ]
  ret i1 %61
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc11RateCounter24GetValueForEmptyIntervalEv(%"class.webrtc::RateCounter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14RateAccCounterC2EPNS_5ClockEPNS_20StatsCounterObserverEb(%"class.webrtc::RateAccCounter"* nocapture, %"class.webrtc::Clock"*, %"class.webrtc::StatsCounterObserver"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 2
  store i64 2000, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 3
  %10 = tail call i8* @_Znwm(i64 40) #12
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = getelementptr inbounds i8, i8* %10, i64 24
  %14 = bitcast i8* %13 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 28
  %16 = bitcast i8* %15 to i32*
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 8
  %19 = ptrtoint i8* %10 to i64
  %20 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 4
  %22 = tail call i8* @_Znwm(i64 32) #12
  %23 = bitcast i8* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 16
  %25 = getelementptr inbounds i8, i8* %22, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to i8**
  store i8* %24, i8** %26, align 8
  %27 = ptrtoint i8* %22 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 5
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 6
  %31 = ptrtoint %"class.webrtc::StatsCounterObserver"* %2 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.18"* %30 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 7
  store i64 -1, i64* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 8
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 9
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc14RateAccCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14RateAccCounter3SetElj(%"class.webrtc::RateAccCounter"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc12StatsCounter3SetElj(%"class.webrtc::StatsCounter"* %4, i64 %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc14RateAccCounter7SetLastElj(%"class.webrtc::RateAccCounter"* nocapture readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1
  %7 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %2
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult i32 %17, %2
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %75

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 72) #12, !noalias !21
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 %2, i32* %50, align 8, !noalias !21
  %51 = getelementptr inbounds i8, i8* %48, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 2147483648, i64* %52, align 8, !noalias !21
  %53 = getelementptr inbounds i8, i8* %48, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11, !noalias !21
  %54 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %55 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds i8, i8* %48, i64 16
  %57 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %57, align 8
  %58 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %47
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %66 = bitcast %"class.std::__1::map"* %6 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %68

68:                                               ; preds = %64, %47
  %69 = phi %"class.std::__1::__tree_node_base"* [ %55, %47 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %69) #11
  %72 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %41, %68
  %76 = phi %"class.std::__1::__tree_node"* [ %54, %68 ], [ %45, %41 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 1, i32 0, i32 1, i32 3
  store i64 %1, i64* %77, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc14RateAccCounter9GetMetricEPi(%"class.webrtc::RateAccCounter"* nocapture readonly, i32* nocapture) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %4, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %8, label %83, label %13

9:                                                ; preds = %66
  %10 = icmp slt i32 %37, 1
  %11 = icmp slt i64 %38, 0
  %12 = or i1 %10, %11
  br i1 %12, label %83, label %69

13:                                               ; preds = %2, %66
  %14 = phi i64 [ %38, %66 ], [ 0, %2 ]
  %15 = phi i32 [ %37, %66 ], [ 0, %2 ]
  %16 = phi %"class.std::__1::__tree_end_node"* [ %67, %66 ], [ %6, %2 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 6
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 7
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 8
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub nsw i64 %24, %27
  %29 = lshr i64 %28, 63
  %30 = trunc i64 %29 to i32
  %31 = xor i32 %30, 1
  %32 = add nsw i32 %31, %15
  %33 = icmp sgt i64 %28, 0
  %34 = select i1 %33, i64 %28, i64 0
  %35 = add nsw i64 %34, %14
  br label %36

36:                                               ; preds = %21, %13
  %37 = phi i32 [ %15, %13 ], [ %32, %21 ]
  %38 = phi i64 [ %14, %13 ], [ %35, %21 ]
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %50

42:                                               ; preds = %36
  %43 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.std::__1::__tree_end_node"**
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %43
  br i1 %49, label %66, label %57

50:                                               ; preds = %36, %50
  %51 = phi %"class.std::__1::__tree_node_base"* [ %53, %50 ], [ %40, %36 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %50

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %51, i64 0, i32 0
  br label %66

57:                                               ; preds = %42, %57
  %58 = phi %"class.std::__1::__tree_end_node"** [ %61, %57 ], [ %45, %42 ]
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 2
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, %60
  br i1 %65, label %66, label %57

66:                                               ; preds = %57, %55, %42
  %67 = phi %"class.std::__1::__tree_end_node"* [ %56, %55 ], [ %46, %42 ], [ %62, %57 ]
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %67, %7
  br i1 %68, label %9, label %13

69:                                               ; preds = %9
  %70 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 1
  %71 = load i8, i8* %70, align 8, !range !8
  %72 = icmp eq i8 %71, 0
  %73 = icmp eq i64 %38, 0
  %74 = and i1 %73, %72
  br i1 %74, label %83, label %75

75:                                               ; preds = %69
  %76 = mul nsw i64 %38, 1000
  %77 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = sdiv i64 %78, 2
  %80 = add nsw i64 %79, %76
  %81 = sdiv i64 %80, %78
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %1, align 4
  br label %83

83:                                               ; preds = %9, %2, %69, %75
  %84 = phi i1 [ true, %75 ], [ false, %69 ], [ false, %9 ], [ false, %2 ]
  ret i1 %84
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc14RateAccCounter24GetValueForEmptyIntervalEv(%"class.webrtc::RateAccCounter"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc10AvgCounterD0Ev(%"class.webrtc::AvgCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::AvgCounter", %"class.webrtc::AvgCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::AvgCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12StatsCounterD2Ev(%"class.webrtc::StatsCounter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %11, %15
  %22 = getelementptr inbounds %"class.webrtc::StatsCounter", %"class.webrtc::StatsCounter"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc10MaxCounterD0Ev(%"class.webrtc::MaxCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::MaxCounter", %"class.webrtc::MaxCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::MaxCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc14PercentCounterD0Ev(%"class.webrtc::PercentCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::PercentCounter", %"class.webrtc::PercentCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::PercentCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15PermilleCounterD0Ev(%"class.webrtc::PermilleCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::PermilleCounter", %"class.webrtc::PermilleCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::PermilleCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc11RateCounterD0Ev(%"class.webrtc::RateCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::RateCounter", %"class.webrtc::RateCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::RateCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc14RateAccCounterD0Ev(%"class.webrtc::RateAccCounter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc12StatsCounterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::StatsCounterObserver"*, %"class.webrtc::StatsCounterObserver"** %3, align 8
  store %"class.webrtc::StatsCounterObserver"* null, %"class.webrtc::StatsCounterObserver"** %3, align 8
  %5 = icmp eq %"class.webrtc::StatsCounterObserver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::StatsCounterObserver"* %4 to void (%"class.webrtc::StatsCounterObserver"*)***
  %8 = load void (%"class.webrtc::StatsCounterObserver"*)**, void (%"class.webrtc::StatsCounterObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %8, i64 2
  %10 = load void (%"class.webrtc::StatsCounterObserver"*)*, void (%"class.webrtc::StatsCounterObserver"*)** %9, align 8
  tail call void %10(%"class.webrtc::StatsCounterObserver"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Samples"*, %"class.webrtc::Samples"** %12, align 8
  store %"class.webrtc::Samples"* null, %"class.webrtc::Samples"** %12, align 8
  %14 = icmp eq %"class.webrtc::Samples"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.webrtc::Samples", %"class.webrtc::Samples"* %13, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %16, %"class.std::__1::__tree_node"* %19) #11
  %20 = bitcast %"class.webrtc::Samples"* %13 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"class.webrtc::RateAccCounter", %"class.webrtc::RateAccCounter"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.webrtc::AggregatedCounter"*, %"class.webrtc::AggregatedCounter"** %22, align 8
  store %"class.webrtc::AggregatedCounter"* null, %"class.webrtc::AggregatedCounter"** %22, align 8
  %24 = icmp eq %"class.webrtc::AggregatedCounter"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.webrtc::AggregatedCounter"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #12
  br label %27

27:                                               ; preds = %21, %25
  %28 = bitcast %"class.webrtc::RateAccCounter"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #9

declare void @_ZN3rtc8ToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN3rtc8ToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6webrtc17AggregatedCounter12ComputeStatsEv: argument 0"}
!4 = distinct !{!4, !"_ZN6webrtc17AggregatedCounter12ComputeStatsEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6webrtc17AggregatedCounter12ComputeStatsEv: argument 0"}
!7 = distinct !{!7, !"_ZN6webrtc17AggregatedCounter12ComputeStatsEv"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__16__treeINS_12__value_typeIjN6webrtc7Samples5StatsEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
