; ModuleID = '../../third_party/ffmpeg/libavcodec/vp56rac.c'
source_filename = "../../third_party/ffmpeg/libavcodec/vp56rac.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VP56RangeCoder = type { i32, i32, i8*, i8*, i32, i32 }

@ff_vp56_norm_shift = hidden local_unnamed_addr constant <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\08\07\06\06\05\05\05\05\04\04\04\04\04\04\04\04\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", [128 x i8] zeroinitializer }>, align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ff_vp56_init_range_decoder(%struct.VP56RangeCoder* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 0
  store i32 255, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 1
  store i32 -16, i32* %5, align 4
  %6 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 2
  store i8* %1, i8** %6, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds i8, i8* %1, i64 %7
  %9 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 3
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = icmp slt i32 %2, 1
  br i1 %11, label %27, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %1, i64 3
  store i8* %13, i8** %6, align 8
  %14 = load i8, i8* %1, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = getelementptr inbounds i8, i8* %1, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = or i32 %20, %16
  %22 = getelementptr inbounds i8, i8* %1, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = or i32 %21, %24
  %26 = getelementptr inbounds %struct.VP56RangeCoder, %struct.VP56RangeCoder* %0, i64 0, i32 4
  store i32 %25, i32* %26, align 8
  br label %27

27:                                               ; preds = %3, %12
  %28 = phi i32 [ 0, %12 ], [ -1094995529, %3 ]
  ret i32 %28
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
