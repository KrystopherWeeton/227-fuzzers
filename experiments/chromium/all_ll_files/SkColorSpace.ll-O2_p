; ModuleID = '../../third_party/skia/src/core/SkColorSpace.cpp'
source_filename = "../../third_party/skia/src/core/SkColorSpace.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkColorSpacePrimaries = type { float, float, float, float, float, float, float, float }
%class.sk_sp = type { %class.SkColorSpace* }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.6, [8 x i8] }
%struct.anon.6 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%struct.anon = type { i32, %struct.skcms_TransferFunction }
%class.sk_sp.7 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.8, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic" }

@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZN12SkNamedGamutL5kSRGBE = internal unnamed_addr constant %struct.skcms_Matrix3x3 { [3 x [3 x float]] [[3 x float] [float 0x3FDBE88000000000, float 0x3FD8A64000000000, float 0x3FC2500000000000], [3 x float] [float 0x3FCC7A8000000000, float 0x3FE6F0A000000000, float 0x3FAF080000000000], [3 x float] [float 0x3F8C800000000000, float 0x3FB8DA0000000000, float 0x3FE6D9E000000000]] }, align 4
@_ZN17SkNamedTransferFnL5kSRGBE = internal constant %struct.skcms_TransferFunction { float 0x4003333340000000, float 0x3FEE54EDC0000000, float 0x3FAAB12320000000, float 0x3FB3D07220000000, float 0x3FA4B5DCC0000000, float 0.000000e+00, float 0.000000e+00 }, align 4
@_ZN17SkNamedTransferFnL6k2Dot2E = internal constant %struct.skcms_TransferFunction { float 0x40019999A0000000, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00 }, align 4
@_ZN17SkNamedTransferFnL7kLinearE = internal constant %struct.skcms_TransferFunction { float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00 }, align 4
@_ZZ17sk_srgb_singletonvE2cs = internal unnamed_addr global %class.SkColorSpace* null, align 8
@_ZGVZ17sk_srgb_singletonvE2cs = internal global i64 0, align 8
@_ZZ24sk_srgb_linear_singletonvE2cs = internal unnamed_addr global %class.SkColorSpace* null, align 8
@_ZGVZ24sk_srgb_linear_singletonvE2cs = internal global i64 0, align 8
@_ZN12SkNamedGamutL9kAdobeRGBE = internal constant %struct.skcms_Matrix3x3 { [3 x [3 x float]] [[3 x float] [float 0x3FE3830000000000, float 0x3FCA468000000000, float 0x3FC3188000000000], [3 x float] [float 0x3FD3E94000000000, float 0x3FE4058000000000, float 0x3FB02F0000000000], [3 x float] [float 0x3F93F00000000000, float 0x3FAF2A0000000000, float 0x3FE7D38000000000]] }, align 4

@_ZN12SkColorSpaceC1ERK22skcms_TransferFunctionRK15skcms_Matrix3x3 = hidden unnamed_addr alias void (%class.SkColorSpace*, %struct.skcms_TransferFunction*, %struct.skcms_Matrix3x3*), void (%class.SkColorSpace*, %struct.skcms_TransferFunction*, %struct.skcms_Matrix3x3*)* @_ZN12SkColorSpaceC2ERK22skcms_TransferFunctionRK15skcms_Matrix3x3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK21SkColorSpacePrimaries8toXYZD50EP15skcms_Matrix3x3(%struct.SkColorSpacePrimaries* nocapture readonly, %struct.skcms_Matrix3x3*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 3
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 5
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 6
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkColorSpacePrimaries, %struct.SkColorSpacePrimaries* %0, i64 0, i32 7
  %18 = load float, float* %17, align 4
  %19 = tail call zeroext i1 @skcms_PrimariesToXYZD50(float %4, float %6, float %8, float %10, float %12, float %14, float %16, float %18, %struct.skcms_Matrix3x3* %1) #8
  ret i1 %19
}

declare zeroext i1 @skcms_PrimariesToXYZD50(float, float, float, float, float, float, float, float, %struct.skcms_Matrix3x3*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpaceC2ERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_TransferFunction* nocapture readonly dereferenceable(28), %struct.skcms_Matrix3x3* nocapture readonly dereferenceable(36)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %6 = bitcast %struct.skcms_TransferFunction* %5 to i8*
  %7 = bitcast %struct.skcms_TransferFunction* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 28, i1 false)
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  %9 = bitcast %struct.skcms_Matrix3x3* %8 to i8*
  %10 = bitcast %struct.skcms_Matrix3x3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 36, i1 false)
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  %12 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %13 = tail call i32 %12(i8* %6, i64 28, i32 0) #8
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 1
  store i32 %13, i32* %14, align 4
  %15 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %16 = tail call i32 %15(i8* %9, i64 36, i32 0) #8
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 2
  store i32 %16, i32* %17, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* noalias nocapture sret, %struct.skcms_TransferFunction* readonly dereferenceable(28), %struct.skcms_Matrix3x3* nocapture readonly dereferenceable(36)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %5, 0.000000e+00
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = fptosi float %5 to i32
  %9 = sitofp i32 %8 to float
  %10 = fcmp oeq float %5, %9
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = add i32 %8, 4
  %13 = icmp ult i32 %12, 3
  br i1 %13, label %14, label %51

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  br label %53

17:                                               ; preds = %7, %3
  %18 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %21 = load float, float* %20, align 4
  %22 = fadd float %19, %21
  %23 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fadd float %22, %24
  %26 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %27 = load float, float* %26, align 4
  %28 = fadd float %25, %27
  %29 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %30 = load float, float* %29, align 4
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %33 = load float, float* %32, align 4
  %34 = fadd float %31, %33
  %35 = fadd float %5, %34
  %36 = bitcast float %35 to i32
  %37 = and i32 %36, 2139095040
  %38 = icmp eq i32 %37, 2139095040
  br i1 %38, label %51, label %39

39:                                               ; preds = %17
  %40 = fcmp ult float %19, 0.000000e+00
  %41 = fcmp ult float %24, 0.000000e+00
  %42 = or i1 %40, %41
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = fcmp ult float %27, 0.000000e+00
  %45 = fcmp ult float %5, 0.000000e+00
  %46 = or i1 %45, %44
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = fmul float %19, %27
  %49 = fadd float %21, %48
  %50 = fcmp ult float %49, 0.000000e+00
  br i1 %50, label %51, label %53

51:                                               ; preds = %11, %17, %39, %43, %47
  %52 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %52, align 8
  br label %258

53:                                               ; preds = %14, %47
  %54 = phi float [ %16, %14 ], [ %19, %47 ]
  %55 = fsub float 0x3FEE54EDC0000000, %54
  %56 = fcmp olt float %55, 0.000000e+00
  %57 = fsub float -0.000000e+00, %55
  %58 = select i1 %56, float %57, float %55
  %59 = fcmp olt float %58, 0x3F50624DE0000000
  br i1 %59, label %60, label %136

60:                                               ; preds = %53
  %61 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %62 = load float, float* %61, align 4
  %63 = fsub float 0x3FAAB12320000000, %62
  %64 = fcmp olt float %63, 0.000000e+00
  %65 = fsub float -0.000000e+00, %63
  %66 = select i1 %64, float %65, float %63
  %67 = fcmp olt float %66, 0x3F50624DE0000000
  br i1 %67, label %68, label %136

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %70 = load float, float* %69, align 4
  %71 = fsub float 0x3FB3D07220000000, %70
  %72 = fcmp olt float %71, 0.000000e+00
  %73 = fsub float -0.000000e+00, %71
  %74 = select i1 %72, float %73, float %71
  %75 = fcmp olt float %74, 0x3F50624DE0000000
  br i1 %75, label %76, label %136

76:                                               ; preds = %68
  %77 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %78 = load float, float* %77, align 4
  %79 = fsub float 0x3FA4B5DCC0000000, %78
  %80 = fcmp olt float %79, 0.000000e+00
  %81 = fsub float -0.000000e+00, %79
  %82 = select i1 %80, float %81, float %79
  %83 = fcmp olt float %82, 0x3F50624DE0000000
  br i1 %83, label %84, label %136

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %86 = load float, float* %85, align 4
  %87 = fsub float 0.000000e+00, %86
  %88 = fcmp olt float %87, 0.000000e+00
  %89 = fsub float -0.000000e+00, %87
  %90 = select i1 %88, float %89, float %87
  %91 = fcmp olt float %90, 0x3F50624DE0000000
  br i1 %91, label %92, label %136

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %94 = load float, float* %93, align 4
  %95 = fsub float 0.000000e+00, %94
  %96 = fcmp olt float %95, 0.000000e+00
  %97 = fsub float -0.000000e+00, %95
  %98 = select i1 %96, float %97, float %95
  %99 = fcmp olt float %98, 0x3F50624DE0000000
  br i1 %99, label %100, label %136

100:                                              ; preds = %92
  %101 = fsub float 0x4003333340000000, %5
  %102 = fcmp olt float %101, 0.000000e+00
  %103 = fsub float -0.000000e+00, %101
  %104 = select i1 %102, float %103, float %101
  %105 = fcmp olt float %104, 0x3F50624DE0000000
  br i1 %105, label %106, label %136

106:                                              ; preds = %100
  %107 = tail call fastcc zeroext i1 @_ZL16xyz_almost_equalRK15skcms_Matrix3x3S1_(%struct.skcms_Matrix3x3* dereferenceable(36) %2)
  br i1 %107, label %108, label %240

108:                                              ; preds = %106
  %109 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8, !noalias !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %128, !prof !5

111:                                              ; preds = %108
  %112 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %128, label %114

114:                                              ; preds = %111
  %115 = tail call i8* @_Znwm(i64 144) #9, !noalias !2
  %116 = bitcast i8* %115 to i32*
  store i32 1, i32* %116, align 4, !noalias !2
  %117 = getelementptr inbounds i8, i8* %115, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8, !noalias !2
  %118 = getelementptr inbounds i8, i8* %115, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8, !noalias !2
  %119 = getelementptr inbounds i8, i8* %115, i64 140
  store i8 0, i8* %119, align 1, !noalias !2
  %120 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !2
  %121 = tail call i32 %120(i8* %117, i64 28, i32 0) #8, !noalias !2
  %122 = getelementptr inbounds i8, i8* %115, i64 4
  %123 = bitcast i8* %122 to i32*
  store i32 %121, i32* %123, align 4, !noalias !2
  %124 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !2
  %125 = tail call i32 %124(i8* %118, i64 36, i32 0) #8, !noalias !2
  %126 = getelementptr inbounds i8, i8* %115, i64 8
  %127 = bitcast i8* %126 to i32*
  store i32 %125, i32* %127, align 4, !noalias !2
  store i8* %115, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8, !noalias !2
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !2
  br label %128

128:                                              ; preds = %114, %111, %108
  %129 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8, !noalias !2
  %130 = icmp eq %class.SkColorSpace* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 1 monotonic, !noalias !6
  br label %134

134:                                              ; preds = %128, %131
  %135 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %129, %class.SkColorSpace** %135, align 8, !alias.scope !6
  br label %258

136:                                              ; preds = %53, %60, %68, %76, %84, %92, %100
  %137 = fsub float 1.000000e+00, %54
  %138 = fcmp olt float %137, 0.000000e+00
  %139 = fsub float -0.000000e+00, %137
  %140 = select i1 %138, float %139, float %137
  %141 = fcmp olt float %140, 0x3F50624DE0000000
  br i1 %141, label %142, label %186

142:                                              ; preds = %136
  %143 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %144 = load float, float* %143, align 4
  %145 = fsub float 0.000000e+00, %144
  %146 = fcmp olt float %145, 0.000000e+00
  %147 = fsub float -0.000000e+00, %145
  %148 = select i1 %146, float %147, float %145
  %149 = fcmp olt float %148, 0x3F50624DE0000000
  br i1 %149, label %150, label %186

150:                                              ; preds = %142
  %151 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %152 = load float, float* %151, align 4
  %153 = fsub float 0.000000e+00, %152
  %154 = fcmp olt float %153, 0.000000e+00
  %155 = fsub float -0.000000e+00, %153
  %156 = select i1 %154, float %155, float %153
  %157 = fcmp olt float %156, 0x3F50624DE0000000
  br i1 %157, label %158, label %168

158:                                              ; preds = %150
  %159 = fsub float 0x40019999A0000000, %5
  %160 = fcmp olt float %159, 0.000000e+00
  %161 = fsub float -0.000000e+00, %159
  %162 = select i1 %160, float %161, float %159
  %163 = fcmp olt float %162, 0x3F50624DE0000000
  br i1 %163, label %164, label %168

164:                                              ; preds = %158
  %165 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %166 = load float, float* %165, align 4
  %167 = fcmp ugt float %166, 0.000000e+00
  br i1 %167, label %168, label %240

168:                                              ; preds = %164, %150, %158
  %169 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %170 = load float, float* %169, align 4
  %171 = fsub float 0.000000e+00, %170
  %172 = fcmp olt float %171, 0.000000e+00
  %173 = fsub float -0.000000e+00, %171
  %174 = select i1 %172, float %173, float %171
  %175 = fcmp olt float %174, 0x3F50624DE0000000
  br i1 %175, label %176, label %186

176:                                              ; preds = %168
  %177 = fsub float 1.000000e+00, %5
  %178 = fcmp olt float %177, 0.000000e+00
  %179 = fsub float -0.000000e+00, %177
  %180 = select i1 %178, float %179, float %177
  %181 = fcmp olt float %180, 0x3F50624DE0000000
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %184 = load float, float* %183, align 4
  %185 = fcmp ole float %184, 0.000000e+00
  br label %186

186:                                              ; preds = %142, %136, %182, %176, %168
  %187 = phi i1 [ false, %176 ], [ false, %168 ], [ %185, %182 ], [ false, %136 ], [ false, %142 ]
  %188 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %189 = load float, float* %188, align 4
  %190 = fsub float 1.000000e+00, %189
  %191 = fcmp olt float %190, 0.000000e+00
  %192 = fsub float -0.000000e+00, %190
  %193 = select i1 %191, float %192, float %190
  %194 = fcmp olt float %193, 0x3F50624DE0000000
  br i1 %194, label %195, label %207

195:                                              ; preds = %186
  %196 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %197 = load float, float* %196, align 4
  %198 = fsub float 0.000000e+00, %197
  %199 = fcmp olt float %198, 0.000000e+00
  %200 = fsub float -0.000000e+00, %198
  %201 = select i1 %199, float %200, float %198
  %202 = fcmp olt float %201, 0x3F50624DE0000000
  br i1 %202, label %203, label %207

203:                                              ; preds = %195
  %204 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %205 = load float, float* %204, align 4
  %206 = fcmp oge float %205, 1.000000e+00
  br label %207

207:                                              ; preds = %186, %195, %203
  %208 = phi i1 [ false, %195 ], [ false, %186 ], [ %206, %203 ]
  %209 = or i1 %187, %208
  br i1 %209, label %210, label %240

210:                                              ; preds = %207
  %211 = tail call fastcc zeroext i1 @_ZL16xyz_almost_equalRK15skcms_Matrix3x3S1_(%struct.skcms_Matrix3x3* dereferenceable(36) %2)
  br i1 %211, label %212, label %240

212:                                              ; preds = %210
  %213 = load atomic i8, i8* bitcast (i64* @_ZGVZ24sk_srgb_linear_singletonvE2cs to i8*) acquire, align 8, !noalias !9
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %232, !prof !5

215:                                              ; preds = %212
  %216 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8, !noalias !9
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %232, label %218

218:                                              ; preds = %215
  %219 = tail call i8* @_Znwm(i64 144) #9, !noalias !9
  %220 = bitcast i8* %219 to i32*
  store i32 1, i32* %220, align 4, !noalias !9
  %221 = getelementptr inbounds i8, i8* %219, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28, i1 false) #8, !noalias !9
  %222 = getelementptr inbounds i8, i8* %219, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8, !noalias !9
  %223 = getelementptr inbounds i8, i8* %219, i64 140
  store i8 0, i8* %223, align 1, !noalias !9
  %224 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !9
  %225 = tail call i32 %224(i8* %221, i64 28, i32 0) #8, !noalias !9
  %226 = getelementptr inbounds i8, i8* %219, i64 4
  %227 = bitcast i8* %226 to i32*
  store i32 %225, i32* %227, align 4, !noalias !9
  %228 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !9
  %229 = tail call i32 %228(i8* %222, i64 36, i32 0) #8, !noalias !9
  %230 = getelementptr inbounds i8, i8* %219, i64 8
  %231 = bitcast i8* %230 to i32*
  store i32 %229, i32* %231, align 4, !noalias !9
  store i8* %219, i8** bitcast (%class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs to i8**), align 8, !noalias !9
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8, !noalias !9
  br label %232

232:                                              ; preds = %218, %215, %212
  %233 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs, align 8, !noalias !9
  %234 = icmp eq %class.SkColorSpace* %233, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 1 monotonic, !noalias !12
  br label %238

238:                                              ; preds = %232, %235
  %239 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %233, %class.SkColorSpace** %239, align 8, !alias.scope !12
  br label %258

240:                                              ; preds = %164, %210, %106, %207
  %241 = phi %struct.skcms_TransferFunction* [ %1, %207 ], [ @_ZN17SkNamedTransferFnL5kSRGBE, %106 ], [ @_ZN17SkNamedTransferFnL6k2Dot2E, %164 ], [ @_ZN17SkNamedTransferFnL7kLinearE, %210 ]
  %242 = tail call i8* @_Znwm(i64 144) #9
  %243 = bitcast i8* %242 to i32*
  store i32 1, i32* %243, align 4
  %244 = getelementptr inbounds i8, i8* %242, i64 12
  %245 = bitcast %struct.skcms_TransferFunction* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %244, i8* align 4 %245, i64 28, i1 false) #8
  %246 = getelementptr inbounds i8, i8* %242, i64 40
  %247 = bitcast %struct.skcms_Matrix3x3* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %247, i64 36, i1 false) #8
  %248 = getelementptr inbounds i8, i8* %242, i64 140
  store i8 0, i8* %248, align 1
  %249 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %250 = tail call i32 %249(i8* %244, i64 28, i32 0) #8
  %251 = getelementptr inbounds i8, i8* %242, i64 4
  %252 = bitcast i8* %251 to i32*
  store i32 %250, i32* %252, align 4
  %253 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %254 = tail call i32 %253(i8* %246, i64 36, i32 0) #8
  %255 = getelementptr inbounds i8, i8* %242, i64 8
  %256 = bitcast i8* %255 to i32*
  store i32 %254, i32* %256, align 4
  %257 = bitcast %class.sk_sp* %0 to i8**
  store i8* %242, i8** %257, align 8
  br label %258

258:                                              ; preds = %134, %238, %240, %51
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZL16xyz_almost_equalRK15skcms_Matrix3x3S1_(%struct.skcms_Matrix3x3* nocapture readonly dereferenceable(36)) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = fadd float %3, 0xBFDBE88000000000
  %5 = fcmp olt float %4, 0.000000e+00
  %6 = fsub float -0.000000e+00, %4
  %7 = select i1 %5, float %6, float %4
  %8 = fcmp olt float %7, 0x3F847AE140000000
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 0, i64 1
  %11 = load float, float* %10, align 4
  %12 = fadd float %11, 0xBFD8A64000000000
  %13 = fcmp olt float %12, 0.000000e+00
  %14 = fsub float -0.000000e+00, %12
  %15 = select i1 %13, float %14, float %12
  %16 = fcmp olt float %15, 0x3F847AE140000000
  br i1 %16, label %19, label %17

17:                                               ; preds = %1, %9, %19, %27, %35, %43, %51, %59, %67, %75
  %18 = phi i1 [ true, %75 ], [ false, %67 ], [ false, %59 ], [ false, %51 ], [ false, %43 ], [ false, %35 ], [ false, %27 ], [ false, %19 ], [ false, %9 ], [ false, %1 ]
  ret i1 %18

19:                                               ; preds = %9
  %20 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 0, i64 2
  %21 = load float, float* %20, align 4
  %22 = fadd float %21, 0xBFC2500000000000
  %23 = fcmp olt float %22, 0.000000e+00
  %24 = fsub float -0.000000e+00, %22
  %25 = select i1 %23, float %24, float %22
  %26 = fcmp olt float %25, 0x3F847AE140000000
  br i1 %26, label %27, label %17

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 1, i64 0
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, 0xBFCC7A8000000000
  %31 = fcmp olt float %30, 0.000000e+00
  %32 = fsub float -0.000000e+00, %30
  %33 = select i1 %31, float %32, float %30
  %34 = fcmp olt float %33, 0x3F847AE140000000
  br i1 %34, label %35, label %17

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 1, i64 1
  %37 = load float, float* %36, align 4
  %38 = fadd float %37, 0xBFE6F0A000000000
  %39 = fcmp olt float %38, 0.000000e+00
  %40 = fsub float -0.000000e+00, %38
  %41 = select i1 %39, float %40, float %38
  %42 = fcmp olt float %41, 0x3F847AE140000000
  br i1 %42, label %43, label %17

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 1, i64 2
  %45 = load float, float* %44, align 4
  %46 = fadd float %45, 0xBFAF080000000000
  %47 = fcmp olt float %46, 0.000000e+00
  %48 = fsub float -0.000000e+00, %46
  %49 = select i1 %47, float %48, float %46
  %50 = fcmp olt float %49, 0x3F847AE140000000
  br i1 %50, label %51, label %17

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 2, i64 0
  %53 = load float, float* %52, align 4
  %54 = fadd float %53, 0xBF8C800000000000
  %55 = fcmp olt float %54, 0.000000e+00
  %56 = fsub float -0.000000e+00, %54
  %57 = select i1 %55, float %56, float %54
  %58 = fcmp olt float %57, 0x3F847AE140000000
  br i1 %58, label %59, label %17

59:                                               ; preds = %51
  %60 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 2, i64 1
  %61 = load float, float* %60, align 4
  %62 = fadd float %61, 0xBFB8DA0000000000
  %63 = fcmp olt float %62, 0.000000e+00
  %64 = fsub float -0.000000e+00, %62
  %65 = select i1 %63, float %64, float %62
  %66 = fcmp olt float %65, 0x3F847AE140000000
  br i1 %66, label %67, label %17

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %0, i64 0, i32 0, i64 2, i64 2
  %69 = load float, float* %68, align 4
  %70 = fadd float %69, 0xBFE6D9E000000000
  %71 = fcmp olt float %70, 0.000000e+00
  %72 = fsub float -0.000000e+00, %70
  %73 = select i1 %71, float %72, float %70
  %74 = fcmp olt float %73, 0x3F847AE140000000
  br i1 %74, label %75, label %17

75:                                               ; preds = %67
  br label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %21, !prof !5

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 144) #9
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %8, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8
  %12 = getelementptr inbounds i8, i8* %8, i64 140
  store i8 0, i8* %12, align 1
  %13 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %14 = tail call i32 %13(i8* %10, i64 28, i32 0) #8
  %15 = getelementptr inbounds i8, i8* %8, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %18 = tail call i32 %17(i8* %11, i64 36, i32 0) #8
  %19 = getelementptr inbounds i8, i8* %8, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 4
  store i8* %8, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  br label %21

21:                                               ; preds = %1, %4, %7
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic, !noalias !15
  br label %27

27:                                               ; preds = %21, %24
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %22, %class.SkColorSpace** %28, align 8, !alias.scope !15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpace14MakeSRGBLinearEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZ24sk_srgb_linear_singletonvE2cs to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %21, !prof !5

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 144) #9
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %8, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8
  %12 = getelementptr inbounds i8, i8* %8, i64 140
  store i8 0, i8* %12, align 1
  %13 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %14 = tail call i32 %13(i8* %10, i64 28, i32 0) #8
  %15 = getelementptr inbounds i8, i8* %8, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %18 = tail call i32 %17(i8* %11, i64 36, i32 0) #8
  %19 = getelementptr inbounds i8, i8* %8, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 4
  store i8* %8, i8** bitcast (%class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8
  br label %21

21:                                               ; preds = %1, %4, %7
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs, align 8
  %23 = icmp eq %class.SkColorSpace* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic, !noalias !18
  br label %27

27:                                               ; preds = %21, %24
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %22, %class.SkColorSpace** %28, align 8, !alias.scope !18
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %20, !prof !5

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 144) #9
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8
  %10 = getelementptr inbounds i8, i8* %7, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %7, i64 140
  store i8 0, i8* %11, align 1
  %12 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %13 = tail call i32 %12(i8* %9, i64 28, i32 0) #8
  %14 = getelementptr inbounds i8, i8* %7, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %17 = tail call i32 %16(i8* %10, i64 36, i32 0) #8
  %18 = getelementptr inbounds i8, i8* %7, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 4
  store i8* %7, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  br label %20

20:                                               ; preds = %3, %6, %0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8
  ret %class.SkColorSpace* %21
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZ24sk_srgb_linear_singletonvE2cs to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %20, !prof !5

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 144) #9
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28, i1 false) #8
  %10 = getelementptr inbounds i8, i8* %7, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %7, i64 140
  store i8 0, i8* %11, align 1
  %12 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %13 = tail call i32 %12(i8* %9, i64 28, i32 0) #8
  %14 = getelementptr inbounds i8, i8* %7, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %17 = tail call i32 %16(i8* %10, i64 36, i32 0) #8
  %18 = getelementptr inbounds i8, i8* %7, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 4
  store i8* %7, i8** bitcast (%class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8
  br label %20

20:                                               ; preds = %3, %6, %0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs, align 8
  ret %class.SkColorSpace* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace20computeLazyDstFieldsEv(%class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  switch i8 %3, label %4 [
    i8 2, label %28
    i8 0, label %5
  ]

4:                                                ; preds = %5, %1
  br label %25

5:                                                ; preds = %1
  %6 = cmpxchg i8* %2, i8 0, i8 1 monotonic monotonic
  %7 = extractvalue { i8, i1 } %6, 1
  br i1 %7, label %8, label %4

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 6
  %11 = tail call zeroext i1 @skcms_Matrix3x3_invert(%struct.skcms_Matrix3x3* %9, %struct.skcms_Matrix3x3* %10) #8
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = tail call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #8
  %14 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %13, i64 0, i32 8
  %15 = tail call zeroext i1 @skcms_Matrix3x3_invert(%struct.skcms_Matrix3x3* %14, %struct.skcms_Matrix3x3* %10) #8
  br label %16

16:                                               ; preds = %12, %8
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 5
  %19 = tail call zeroext i1 @skcms_TransferFunction_invert(%struct.skcms_TransferFunction* %17, %struct.skcms_TransferFunction* %18) #8
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = tail call %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() #8
  %22 = bitcast %struct.skcms_TransferFunction* %18 to i8*
  %23 = bitcast %struct.skcms_TransferFunction* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %23, i64 28, i1 false) #8
  br label %24

24:                                               ; preds = %20, %16
  store atomic i8 2, i8* %2 release, align 1
  br label %28

25:                                               ; preds = %4, %25
  %26 = load atomic i8, i8* %2 acquire, align 1
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %25

28:                                               ; preds = %25, %1, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* nocapture readonly, %struct.skcms_TransferFunction* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %4 = bitcast %struct.skcms_TransferFunction* %1 to i8*
  %5 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 28, i1 false) #8
  %6 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = fcmp olt float %7, 0.000000e+00
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = fptosi float %7 to i32
  %11 = sitofp i32 %10 to float
  %12 = fcmp oeq float %7, %11
  br i1 %12, label %48, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = fadd float %15, %17
  %19 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fadd float %18, %20
  %22 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 4
  %23 = load float, float* %22, align 4
  %24 = fadd float %21, %23
  %25 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 5
  %26 = load float, float* %25, align 4
  %27 = fadd float %24, %26
  %28 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %1, i64 0, i32 6
  %29 = load float, float* %28, align 4
  %30 = fadd float %27, %29
  %31 = fadd float %7, %30
  %32 = bitcast float %31 to i32
  %33 = and i32 %32, 2139095040
  %34 = icmp eq i32 %33, 2139095040
  br i1 %34, label %47, label %35

35:                                               ; preds = %13
  %36 = fcmp ult float %15, 0.000000e+00
  %37 = fcmp ult float %20, 0.000000e+00
  %38 = or i1 %36, %37
  br i1 %38, label %47, label %39

39:                                               ; preds = %35
  %40 = fcmp ult float %23, 0.000000e+00
  %41 = fcmp ult float %7, 0.000000e+00
  %42 = or i1 %41, %40
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = fmul float %15, %23
  %45 = fadd float %17, %44
  %46 = fcmp ult float %45, 0.000000e+00
  br i1 %46, label %47, label %48

47:                                               ; preds = %43, %39, %35, %13
  br label %48

48:                                               ; preds = %9, %43, %47
  %49 = phi i1 [ false, %47 ], [ true, %43 ], [ false, %9 ]
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace10transferFnEP22skcms_TransferFunction(%class.SkColorSpace* nocapture readonly, %struct.skcms_TransferFunction* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %4 = bitcast %struct.skcms_TransferFunction* %1 to i8*
  %5 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace10transferFnEPf(%class.SkColorSpace* nocapture readonly, float* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast float* %1 to i8*
  %4 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %5 = bitcast %struct.skcms_TransferFunction* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %5, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace13invTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK12SkColorSpace20computeLazyDstFieldsEv(%class.SkColorSpace* %0)
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 5
  %4 = bitcast %struct.skcms_TransferFunction* %1 to i8*
  %5 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* nocapture readonly, %struct.skcms_Matrix3x3* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  %4 = bitcast %struct.skcms_Matrix3x3* %1 to i8*
  %5 = bitcast %struct.skcms_Matrix3x3* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 36, i1 false)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace16gamutTransformToEPKS_P15skcms_Matrix3x3(%class.SkColorSpace*, %class.SkColorSpace*, %struct.skcms_Matrix3x3* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.skcms_Matrix3x3, align 4
  tail call void @_ZNK12SkColorSpace20computeLazyDstFieldsEv(%class.SkColorSpace* %1)
  %5 = bitcast %struct.skcms_Matrix3x3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %5) #8
  %6 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 6
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  call void @skcms_Matrix3x3_concat(%struct.skcms_Matrix3x3* nonnull sret %4, %struct.skcms_Matrix3x3* %6, %struct.skcms_Matrix3x3* %7) #8
  %8 = bitcast %struct.skcms_Matrix3x3* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* nonnull align 4 %5, i64 36, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %5) #8
  ret void
}

declare void @skcms_Matrix3x3_concat(%struct.skcms_Matrix3x3* sret, %struct.skcms_Matrix3x3*, %struct.skcms_Matrix3x3*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %21, !prof !5

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 144) #9
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8
  %11 = getelementptr inbounds i8, i8* %8, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8
  %12 = getelementptr inbounds i8, i8* %8, i64 140
  store i8 0, i8* %12, align 1
  %13 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %14 = tail call i32 %13(i8* %10, i64 28, i32 0) #8
  %15 = getelementptr inbounds i8, i8* %8, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %18 = tail call i32 %17(i8* %11, i64 36, i32 0) #8
  %19 = getelementptr inbounds i8, i8* %8, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 4
  store i8* %8, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8
  br label %21

21:                                               ; preds = %1, %4, %7
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8
  %23 = icmp eq %class.SkColorSpace* %22, %0
  ret i1 %23
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12SkColorSpace16gammaCloseToSRGBEv(%class.SkColorSpace* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %3 = bitcast %struct.skcms_TransferFunction* %2 to i8*
  %4 = tail call i32 @bcmp(i8* %3, i8* bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28)
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12SkColorSpace13gammaIsLinearEv(%class.SkColorSpace* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %3 = bitcast %struct.skcms_TransferFunction* %2 to i8*
  %4 = tail call i32 @bcmp(i8* %3, i8* bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28)
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace15makeLinearGammaEv(%class.sk_sp* noalias nocapture sret, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 3
  %4 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  %5 = tail call i32 @bcmp(i8* %4, i8* bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = icmp eq %class.SkColorSpace* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !21
  br label %12

12:                                               ; preds = %7, %9
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %1, %class.SkColorSpace** %13, align 8, !alias.scope !21
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 4
  tail call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL7kLinearE, %struct.skcms_Matrix3x3* dereferenceable(36) %15)
  br label %16

16:                                               ; preds = %14, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace13makeSRGBGammaEv(%class.sk_sp* noalias nocapture sret, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 3
  %4 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  %5 = tail call i32 @bcmp(i8* %4, i8* bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = icmp eq %class.SkColorSpace* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !24
  br label %12

12:                                               ; preds = %7, %9
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %1, %class.SkColorSpace** %13, align 8, !alias.scope !24
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 4
  tail call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL5kSRGBE, %struct.skcms_Matrix3x3* dereferenceable(36) %15)
  br label %16

16:                                               ; preds = %14, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace13makeColorSpinEv(%class.sk_sp* noalias nocapture sret, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.skcms_Matrix3x3, align 4
  %4 = alloca %struct.skcms_Matrix3x3, align 4
  %5 = bitcast %struct.skcms_Matrix3x3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 36, i1 false)
  %6 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %3, i64 0, i32 0, i64 0, i64 2
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %3, i64 0, i32 0, i64 1, i64 0
  store float 1.000000e+00, float* %7, align 4
  %8 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %3, i64 0, i32 0, i64 2, i64 1
  store float 1.000000e+00, float* %8, align 4
  %9 = bitcast %struct.skcms_Matrix3x3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -1, i64 36, i1 false)
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 4
  call void @skcms_Matrix3x3_concat(%struct.skcms_Matrix3x3* nonnull sret %4, %struct.skcms_Matrix3x3* %10, %struct.skcms_Matrix3x3* nonnull %3) #8
  %11 = call i8* @_Znwm(i64 144) #9
  %12 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 3
  %13 = bitcast i8* %11 to i32*
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %11, i64 12
  %15 = bitcast %struct.skcms_TransferFunction* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 28, i1 false) #8
  %16 = getelementptr inbounds i8, i8* %11, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %9, i64 36, i1 false) #8
  %17 = getelementptr inbounds i8, i8* %11, i64 140
  store i8 0, i8* %17, align 1
  %18 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %19 = call i32 %18(i8* %14, i64 28, i32 0) #8
  %20 = getelementptr inbounds i8, i8* %11, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 4
  %22 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %23 = call i32 %22(i8* %16, i64 36, i32 0) #8
  %24 = getelementptr inbounds i8, i8* %11, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 4
  %26 = bitcast %class.sk_sp* %0 to i8**
  store i8* %11, i8** %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace9toProfileEP16skcms_ICCProfile(%class.SkColorSpace* nocapture readonly, %struct.skcms_ICCProfile* nocapture) local_unnamed_addr #0 align 2 {
  %3 = bitcast %struct.skcms_ICCProfile* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 1008, i1 false) #8
  %4 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 2
  store i32 1380401696, i32* %4, align 4
  %5 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 3
  store i32 1482250784, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %7 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 5
  store i8 1, i8* %7, align 8
  %8 = bitcast %struct.skcms_TransferFunction* %6 to i8*
  %9 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 0
  %10 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %9, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = bitcast %union.skcms_Curve* %9 to %struct.anon*
  %12 = getelementptr inbounds %struct.anon, %struct.anon* %11, i64 0, i32 1
  %13 = bitcast %struct.skcms_TransferFunction* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %8, i64 28, i1 false) #8
  %14 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 1
  %15 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %14, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = bitcast %union.skcms_Curve* %14 to %struct.anon*
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %16, i64 0, i32 1
  %18 = bitcast %struct.skcms_TransferFunction* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %8, i64 28, i1 false) #8
  %19 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 2
  %20 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %19, i64 0, i32 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = bitcast %union.skcms_Curve* %19 to %struct.anon*
  %22 = getelementptr inbounds %struct.anon, %struct.anon* %21, i64 0, i32 1
  %23 = bitcast %struct.skcms_TransferFunction* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %23, i8* align 4 %8, i64 28, i1 false) #8
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  %25 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 7
  store i8 1, i8* %25, align 8
  %26 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 8
  %27 = bitcast %struct.skcms_Matrix3x3* %26 to i8*
  %28 = bitcast %struct.skcms_Matrix3x3* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 36, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpace4MakeERK16skcms_ICCProfile(%class.sk_sp* noalias nocapture sret, %struct.skcms_ICCProfile* dereferenceable(1008)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.skcms_Matrix3x3, align 4
  %4 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !27
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !27
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7, %2
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %12, align 8
  br label %88

13:                                               ; preds = %7
  %14 = tail call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #8
  %15 = tail call zeroext i1 @skcms_ApproximatelyEqualProfiles(%struct.skcms_ICCProfile* %1, %struct.skcms_ICCProfile* %14) #8
  br i1 %15, label %16, label %44

16:                                               ; preds = %13
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8, !noalias !28
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %36, !prof !5

19:                                               ; preds = %16
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !28
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %19
  %23 = tail call i8* @_Znwm(i64 144) #9, !noalias !28
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4, !noalias !28
  %25 = getelementptr inbounds i8, i8* %23, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8, !noalias !28
  %26 = getelementptr inbounds i8, i8* %23, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8, !noalias !28
  %27 = getelementptr inbounds i8, i8* %23, i64 140
  store i8 0, i8* %27, align 1, !noalias !28
  %28 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !28
  %29 = tail call i32 %28(i8* %25, i64 28, i32 0) #8, !noalias !28
  %30 = getelementptr inbounds i8, i8* %23, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 %29, i32* %31, align 4, !noalias !28
  %32 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !28
  %33 = tail call i32 %32(i8* %26, i64 36, i32 0) #8, !noalias !28
  %34 = getelementptr inbounds i8, i8* %23, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 4, !noalias !28
  store i8* %23, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8, !noalias !28
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !28
  br label %36

36:                                               ; preds = %22, %19, %16
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8, !noalias !28
  %38 = icmp eq %class.SkColorSpace* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic, !noalias !31
  br label %42

42:                                               ; preds = %36, %39
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %37, %class.SkColorSpace** %43, align 8, !alias.scope !31
  br label %88

44:                                               ; preds = %13
  %45 = bitcast %struct.skcms_Matrix3x3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %45) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -1, i64 36, i1 false)
  %46 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 8
  %47 = call zeroext i1 @skcms_Matrix3x3_invert(%struct.skcms_Matrix3x3* %46, %struct.skcms_Matrix3x3* nonnull %3) #8
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %49, align 8
  br label %87

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 0
  %52 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %51, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %80

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 1
  %57 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %56, i64 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %80

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %1, i64 0, i32 6, i64 2
  %62 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %61, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %80

65:                                               ; preds = %60
  %66 = bitcast %union.skcms_Curve* %51 to %struct.anon*
  %67 = getelementptr inbounds %struct.anon, %struct.anon* %66, i64 0, i32 1
  %68 = bitcast %struct.skcms_TransferFunction* %67 to i8*
  %69 = bitcast %union.skcms_Curve* %56 to %struct.anon*
  %70 = getelementptr inbounds %struct.anon, %struct.anon* %69, i64 0, i32 1
  %71 = bitcast %struct.skcms_TransferFunction* %70 to i8*
  %72 = call i32 @bcmp(i8* %68, i8* %71, i64 28)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %65
  %75 = bitcast %union.skcms_Curve* %61 to %struct.anon*
  %76 = getelementptr inbounds %struct.anon, %struct.anon* %75, i64 0, i32 1
  %77 = bitcast %struct.skcms_TransferFunction* %76 to i8*
  %78 = call i32 @bcmp(i8* %68, i8* %77, i64 28)
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %74, %65, %60, %55, %50
  %81 = call %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() #8
  %82 = call zeroext i1 @skcms_TRCs_AreApproximateInverse(%struct.skcms_ICCProfile* %1, %struct.skcms_TransferFunction* %81) #8
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL5kSRGBE, %struct.skcms_Matrix3x3* dereferenceable(36) %46)
  br label %87

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %85, align 8
  br label %87

86:                                               ; preds = %74
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* dereferenceable(28) %67, %struct.skcms_Matrix3x3* dereferenceable(36) %46)
  br label %87

87:                                               ; preds = %83, %84, %86, %48
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %45) #8
  br label %88

88:                                               ; preds = %87, %42, %11
  ret void
}

declare zeroext i1 @skcms_ApproximatelyEqualProfiles(%struct.skcms_ICCProfile*, %struct.skcms_ICCProfile*) local_unnamed_addr #1

declare %struct.skcms_ICCProfile* @skcms_sRGB_profile() local_unnamed_addr #1

declare zeroext i1 @skcms_Matrix3x3_invert(%struct.skcms_Matrix3x3*, %struct.skcms_Matrix3x3*) local_unnamed_addr #1

declare zeroext i1 @skcms_TRCs_AreApproximateInverse(%struct.skcms_ICCProfile*, %struct.skcms_TransferFunction*) local_unnamed_addr #1

declare %struct.skcms_TransferFunction* @skcms_sRGB_Inverse_TransferFunction() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to i32*
  store i32 1, i32* %5, align 1
  %6 = getelementptr inbounds i8, i8* %1, i64 4
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 3
  %8 = bitcast %struct.skcms_TransferFunction* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 4 %8, i64 28, i1 false)
  %9 = getelementptr inbounds i8, i8* %1, i64 32
  %10 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 4
  %11 = bitcast %struct.skcms_Matrix3x3* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 4 %11, i64 36, i1 false)
  br label %12

12:                                               ; preds = %2, %4
  ret i64 68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkColorSpace9serializeEv(%class.sk_sp.7* noalias sret, %class.SkColorSpace* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %3, align 8
  tail call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.7* sret %0, i64 68) #8
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %6 to i32*
  store i32 1, i32* %9, align 1
  %10 = getelementptr inbounds i8, i8* %6, i64 4
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 3
  %12 = bitcast %struct.skcms_TransferFunction* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 4 %12, i64 28, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %6, i64 32
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 4
  %15 = bitcast %struct.skcms_Matrix3x3* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 4 %15, i64 36, i1 false) #8
  br label %16

16:                                               ; preds = %2, %8
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.7* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkColorSpace11DeserializeEPKvm(%class.sk_sp* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.skcms_Matrix3x3, align 4
  %5 = alloca %struct.skcms_Matrix3x3, align 4
  %6 = alloca %struct.skcms_Matrix3x3, align 4
  %7 = alloca %struct.skcms_TransferFunction, align 4
  %8 = alloca %struct.skcms_Matrix3x3, align 4
  %9 = alloca %struct.skcms_TransferFunction, align 4
  %10 = alloca %struct.skcms_Matrix3x3, align 4
  %11 = icmp ult i64 %2, 4
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %13, align 8
  br label %174

14:                                               ; preds = %3
  %15 = load i8, i8* %1, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = getelementptr inbounds i8, i8* %1, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = getelementptr inbounds i8, i8* %1, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %1, i64 4
  %23 = add i64 %2, -4
  switch i8 %15, label %172 [
    i8 1, label %24
    i8 0, label %32
  ]

24:                                               ; preds = %14
  %25 = icmp ult i64 %23, 64
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %27, align 8
  br label %174

28:                                               ; preds = %24
  %29 = bitcast %struct.skcms_TransferFunction* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %29) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 1 %22, i64 28, i1 false)
  %30 = getelementptr inbounds i8, i8* %1, i64 32
  %31 = bitcast %struct.skcms_Matrix3x3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %31) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 1 %30, i64 36, i1 false)
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %7, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %8)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %29) #8
  br label %174

32:                                               ; preds = %14
  %33 = icmp eq i8 %21, 0
  br i1 %33, label %34, label %92

34:                                               ; preds = %32
  switch i8 %17, label %92 [
    i8 0, label %35
    i8 2, label %63
    i8 1, label %91
  ]

35:                                               ; preds = %34
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZ17sk_srgb_singletonvE2cs to i8*) acquire, align 8, !noalias !34
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %55, !prof !5

38:                                               ; preds = %35
  %39 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !34
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %38
  %42 = tail call i8* @_Znwm(i64 144) #9, !noalias !34
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4, !noalias !34
  %44 = getelementptr inbounds i8, i8* %42, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL5kSRGBE to i8*), i64 28, i1 false) #8, !noalias !34
  %45 = getelementptr inbounds i8, i8* %42, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8, !noalias !34
  %46 = getelementptr inbounds i8, i8* %42, i64 140
  store i8 0, i8* %46, align 1, !noalias !34
  %47 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !34
  %48 = tail call i32 %47(i8* %44, i64 28, i32 0) #8, !noalias !34
  %49 = getelementptr inbounds i8, i8* %42, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4, !noalias !34
  %51 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !34
  %52 = tail call i32 %51(i8* %45, i64 36, i32 0) #8, !noalias !34
  %53 = getelementptr inbounds i8, i8* %42, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 4, !noalias !34
  store i8* %42, i8** bitcast (%class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs to i8**), align 8, !noalias !34
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ17sk_srgb_singletonvE2cs) #8, !noalias !34
  br label %55

55:                                               ; preds = %41, %38, %35
  %56 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ17sk_srgb_singletonvE2cs, align 8, !noalias !34
  %57 = icmp eq %class.SkColorSpace* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic, !noalias !37
  br label %61

61:                                               ; preds = %55, %58
  %62 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %56, %class.SkColorSpace** %62, align 8, !alias.scope !37
  br label %174

63:                                               ; preds = %34
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZ24sk_srgb_linear_singletonvE2cs to i8*) acquire, align 8, !noalias !40
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %83, !prof !5

66:                                               ; preds = %63
  %67 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8, !noalias !40
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %66
  %70 = tail call i8* @_Znwm(i64 144) #9, !noalias !40
  %71 = bitcast i8* %70 to i32*
  store i32 1, i32* %71, align 4, !noalias !40
  %72 = getelementptr inbounds i8, i8* %70, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 4 bitcast (%struct.skcms_TransferFunction* @_ZN17SkNamedTransferFnL7kLinearE to i8*), i64 28, i1 false) #8, !noalias !40
  %73 = getelementptr inbounds i8, i8* %70, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 bitcast (%struct.skcms_Matrix3x3* @_ZN12SkNamedGamutL5kSRGBE to i8*), i64 36, i1 false) #8, !noalias !40
  %74 = getelementptr inbounds i8, i8* %70, i64 140
  store i8 0, i8* %74, align 1, !noalias !40
  %75 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !40
  %76 = tail call i32 %75(i8* %72, i64 28, i32 0) #8, !noalias !40
  %77 = getelementptr inbounds i8, i8* %70, i64 4
  %78 = bitcast i8* %77 to i32*
  store i32 %76, i32* %78, align 4, !noalias !40
  %79 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8, !noalias !40
  %80 = tail call i32 %79(i8* %73, i64 36, i32 0) #8, !noalias !40
  %81 = getelementptr inbounds i8, i8* %70, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 %80, i32* %82, align 4, !noalias !40
  store i8* %70, i8** bitcast (%class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs to i8**), align 8, !noalias !40
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ24sk_srgb_linear_singletonvE2cs) #8, !noalias !40
  br label %83

83:                                               ; preds = %69, %66, %63
  %84 = load %class.SkColorSpace*, %class.SkColorSpace** @_ZZ24sk_srgb_linear_singletonvE2cs, align 8, !noalias !40
  %85 = icmp eq %class.SkColorSpace* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 1 monotonic, !noalias !43
  br label %89

89:                                               ; preds = %83, %86
  %90 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* %84, %class.SkColorSpace** %90, align 8, !alias.scope !43
  br label %174

91:                                               ; preds = %34
  tail call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL6k2Dot2E, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) @_ZN12SkNamedGamutL9kAdobeRGBE)
  br label %174

92:                                               ; preds = %34, %32
  switch i8 %19, label %135 [
    i8 1, label %93
    i8 2, label %107
    i8 0, label %121
  ]

93:                                               ; preds = %92
  %94 = icmp ne i8 %21, 1
  %95 = icmp ult i64 %23, 48
  %96 = or i1 %95, %94
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %98, align 8, !alias.scope !46
  br label %174

99:                                               ; preds = %93
  %100 = bitcast %struct.skcms_Matrix3x3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %100) #8, !noalias !46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 4 %22, i64 12, i1 false) #8, !noalias !46
  %101 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %4, i64 0, i32 0, i64 1, i64 0
  %102 = bitcast float* %101 to i8*
  %103 = getelementptr inbounds i8, i8* %1, i64 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 12, i1 false) #8, !noalias !46
  %104 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %4, i64 0, i32 0, i64 2, i64 0
  %105 = bitcast float* %104 to i8*
  %106 = getelementptr inbounds i8, i8* %1, i64 36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 12, i1 false) #8, !noalias !46
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL5kSRGBE, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %100) #8, !noalias !46
  br label %174

107:                                              ; preds = %92
  %108 = icmp ne i8 %21, 1
  %109 = icmp ult i64 %23, 48
  %110 = or i1 %109, %108
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %112, align 8, !alias.scope !49
  br label %174

113:                                              ; preds = %107
  %114 = bitcast %struct.skcms_Matrix3x3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %114) #8, !noalias !49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* align 4 %22, i64 12, i1 false) #8, !noalias !49
  %115 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %5, i64 0, i32 0, i64 1, i64 0
  %116 = bitcast float* %115 to i8*
  %117 = getelementptr inbounds i8, i8* %1, i64 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 12, i1 false) #8, !noalias !49
  %118 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %5, i64 0, i32 0, i64 2, i64 0
  %119 = bitcast float* %118 to i8*
  %120 = getelementptr inbounds i8, i8* %1, i64 36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 12, i1 false) #8, !noalias !49
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL6k2Dot2E, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %114) #8, !noalias !49
  br label %174

121:                                              ; preds = %92
  %122 = icmp ne i8 %21, 1
  %123 = icmp ult i64 %23, 48
  %124 = or i1 %123, %122
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %126, align 8, !alias.scope !52
  br label %174

127:                                              ; preds = %121
  %128 = bitcast %struct.skcms_Matrix3x3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %128) #8, !noalias !52
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %128, i8* align 4 %22, i64 12, i1 false) #8, !noalias !52
  %129 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 1, i64 0
  %130 = bitcast float* %129 to i8*
  %131 = getelementptr inbounds i8, i8* %1, i64 20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %130, i8* align 4 %131, i64 12, i1 false) #8, !noalias !52
  %132 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %6, i64 0, i32 0, i64 2, i64 0
  %133 = bitcast float* %132 to i8*
  %134 = getelementptr inbounds i8, i8* %1, i64 36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 12, i1 false) #8, !noalias !52
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) @_ZN17SkNamedTransferFnL7kLinearE, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %128) #8, !noalias !52
  br label %174

135:                                              ; preds = %92
  switch i8 %21, label %170 [
    i8 2, label %136
    i8 8, label %138
  ]

136:                                              ; preds = %135
  %137 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %137, align 8
  br label %174

138:                                              ; preds = %135
  %139 = icmp ult i64 %23, 76
  br i1 %139, label %140, label %142

140:                                              ; preds = %138
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %141, align 8
  br label %174

142:                                              ; preds = %138
  %143 = bitcast %struct.skcms_TransferFunction* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %143) #8
  %144 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %9, i64 0, i32 1
  %145 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %9, i64 0, i32 5
  %146 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %9, i64 0, i32 6
  %147 = bitcast i8* %22 to <4 x i32>*
  %148 = load <4 x i32>, <4 x i32>* %147, align 4
  %149 = bitcast float* %144 to <4 x i32>*
  store <4 x i32> %148, <4 x i32>* %149, align 4
  %150 = getelementptr inbounds i8, i8* %1, i64 20
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = bitcast float* %145 to i32*
  store i32 %152, i32* %153, align 4
  %154 = getelementptr inbounds i8, i8* %1, i64 24
  %155 = bitcast i8* %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = bitcast float* %146 to i32*
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds i8, i8* %1, i64 28
  %159 = bitcast i8* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = bitcast %struct.skcms_TransferFunction* %9 to i32*
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds i8, i8* %1, i64 32
  %163 = bitcast %struct.skcms_Matrix3x3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %163) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %163, i8* align 4 %162, i64 12, i1 false)
  %164 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %10, i64 0, i32 0, i64 1, i64 0
  %165 = bitcast float* %164 to i8*
  %166 = getelementptr inbounds i8, i8* %1, i64 48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 12, i1 false)
  %167 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %10, i64 0, i32 0, i64 2, i64 0
  %168 = bitcast float* %167 to i8*
  %169 = getelementptr inbounds i8, i8* %1, i64 64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 12, i1 false)
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret %0, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %9, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %10)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %163) #8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %143) #8
  br label %174

170:                                              ; preds = %135
  %171 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %171, align 8
  br label %174

172:                                              ; preds = %14
  %173 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %173, align 8
  br label %174

174:                                              ; preds = %136, %140, %142, %170, %97, %99, %111, %113, %125, %127, %26, %28, %61, %89, %91, %172, %12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN12SkColorSpace6EqualsEPKS_S1_(%class.SkColorSpace* readonly, %class.SkColorSpace* readonly) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %class.SkColorSpace* %0, %1
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = icmp ne %class.SkColorSpace* %0, null
  %6 = icmp ne %class.SkColorSpace* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %12, %15
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw i64 %19, 32
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %20, %23
  %25 = icmp eq i64 %16, %24
  br label %26

26:                                               ; preds = %8, %4, %2
  %27 = phi i1 [ true, %2 ], [ false, %4 ], [ %25, %8 ]
  ret i1 %27
}

declare zeroext i1 @skcms_TransferFunction_invert(%struct.skcms_TransferFunction*, %struct.skcms_TransferFunction*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12SkColorSpace8MakeSRGBEv: argument 0"}
!4 = distinct !{!4, !"_ZN12SkColorSpace8MakeSRGBEv"}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7, !3}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN12SkColorSpace14MakeSRGBLinearEv: argument 0"}
!11 = distinct !{!11, !"_ZN12SkColorSpace14MakeSRGBLinearEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!14 = distinct !{!14, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!17 = distinct !{!17, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!20 = distinct !{!20, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!23 = distinct !{!23, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!26 = distinct !{!26, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!27 = !{i8 0, i8 2}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN12SkColorSpace8MakeSRGBEv: argument 0"}
!30 = distinct !{!30, !"_ZN12SkColorSpace8MakeSRGBEv"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!33 = distinct !{!33, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN12SkColorSpace8MakeSRGBEv: argument 0"}
!36 = distinct !{!36, !"_ZN12SkColorSpace8MakeSRGBEv"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!39 = distinct !{!39, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN12SkColorSpace14MakeSRGBLinearEv: argument 0"}
!42 = distinct !{!42, !"_ZN12SkColorSpace14MakeSRGBLinearEv"}
!43 = !{!44, !41}
!44 = distinct !{!44, !45, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!45 = distinct !{!45, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction: argument 0"}
!48 = distinct !{!48, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction: argument 0"}
!51 = distinct !{!51, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction: argument 0"}
!54 = distinct !{!54, !"_ZZN12SkColorSpace11DeserializeEPKvmENK3$_1clERK22skcms_TransferFunction"}
