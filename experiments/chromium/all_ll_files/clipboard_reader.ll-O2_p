; ModuleID = '../../third_party/blink/renderer/modules/clipboard/clipboard_reader.cc'
source_filename = "../../third_party/blink/renderer/modules/clipboard/clipboard_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.215" }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.190", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.133", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { float }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.136", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.171" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.251" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.189 }
%class.scoped_refptr.189 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__cxx_atomic_impl.192" }
%"struct.std::__1::__cxx_atomic_impl.192" = type { %"struct.std::__1::__cxx_atomic_base_impl.193" }
%"struct.std::__1::__cxx_atomic_base_impl.193" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ClipboardReader" = type { i32 (...)**, %class.scoped_refptr, %"class.blink::Member", %"class.blink::Member.227" }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ClipboardPromise"* }
%"class.blink::ClipboardPromise" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.7", %"class.blink::Member.198", %"class.blink::Member.210", %"class.blink::HeapMojoRemote", %"class.WTF::String", %"class.blink::HeapVector", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.6"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.6" = type opaque
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.11, %"class.blink::Member.194", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.11 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.18", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.196" }
%"class.blink::Persistent.196" = type { %"class.blink::PersistentBase.197" }
%"class.blink::PersistentBase.197" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.7", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.203", %"class.blink::SelfKeepAlive.207" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.7", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.203", %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.203" = type { %"class.v8::TracedReference.204" }
%"class.v8::TracedReference.204" = type { %"class.v8::BasicTracedReference.205" }
%"class.v8::BasicTracedReference.205" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.207" = type { %"class.blink::Persistent.208" }
%"class.blink::Persistent.208" = type { %"class.blink::PersistentBase.209" }
%"class.blink::PersistentBase.209" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::ClipboardWriter"* }
%"class.blink::ClipboardWriter" = type { %"class.blink::FileReaderLoaderClient", %"class.blink::Member", %class.scoped_refptr, %class.scoped_refptr, %"class.std::__1::unique_ptr.240", %"class.blink::Member.227", %"class.blink::Member.246", %"class.blink::SelfKeepAlive.248" }
%"class.blink::FileReaderLoaderClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::FileReaderLoader"* }
%"class.blink::FileReaderLoader" = type opaque
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::SelfKeepAlive.248" = type { %"class.blink::Persistent.249" }
%"class.blink::Persistent.249" = type { %"class.blink::PersistentBase.250" }
%"class.blink::PersistentBase.250" = type { %"class.blink::ClipboardWriter"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.212" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.214 }
%class.scoped_refptr.214 = type { %"class.WTF::StringImpl"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.222" }
%"class.WTF::Vector.222" = type { %"class.WTF::VectorBuffer.223" }
%"class.WTF::VectorBuffer.223" = type { %"class.WTF::VectorBufferBase.224" }
%"class.WTF::VectorBufferBase.224" = type { %"struct.std::__1::pair.225"*, i32, i32 }
%"struct.std::__1::pair.225" = type opaque
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type { %"class.blink::HeapMojoRemote.231", i32, i8, [3 x i8], %"class.WTF::HashSet.234" }
%"class.blink::HeapMojoRemote.231" = type { %"class.blink::Member.232" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::HashSet.234" = type { %"class.WTF::HashTable.235" }
%"class.WTF::HashTable.235" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.317", i32, i8, [3 x i8], %"class.blink::HeapVector.319", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.327", %"class.blink::Member.329", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.338", %"class.blink::Member.474", %"class.blink::Member.476", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.256" }
%"class.blink::HeapHashMap.256" = type { %"class.WTF::HashMap.259" }
%"class.WTF::HashMap.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"struct.WTF::KeyValuePair.262"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.262" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.263" }
%"class.blink::Supplementable.263" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.264" }
%"class.blink::HeapHashMap.264" = type { %"class.WTF::HashMap.267" }
%"class.WTF::HashMap.267" = type { %"class.WTF::HashTable.268" }
%"class.WTF::HashTable.268" = type <{ %"struct.WTF::KeyValuePair.270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.270" = type { i8*, %"class.blink::Member.479" }
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.481" }
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.271, %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.305", %"class.blink::Member.311", i32, [4 x i8], %"class.WTF::HashSet.313", i32, i32 }
%class.scoped_refptr.271 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.272", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.274 }
%"class.WTF::RefCounted.272" = type { %"class.base::RefCounted.273" }
%"class.base::RefCounted.273" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.274 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.292", %"class.std::__1::map.301"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.280 }
%union.anon.280 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.284", %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::map.292" = type { %"class.std::__1::__tree.293" }
%"class.std::__1::__tree.293" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::map.301" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.313" = type { %"class.WTF::HashTable.314" }
%"class.WTF::HashTable.314" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.319" = type { %"class.WTF::Vector.322" }
%"class.WTF::Vector.322" = type { %"class.WTF::VectorBuffer.323" }
%"class.WTF::VectorBuffer.323" = type { %"class.WTF::VectorBufferBase.324" }
%"class.WTF::VectorBufferBase.324" = type { %"class.blink::Member.325"*, i32, i32 }
%"class.blink::Member.325" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.331", i32, i32 }
%"class.blink::HeapHashMap.331" = type { %"class.WTF::HashMap.334" }
%"class.WTF::HashMap.334" = type { %"class.WTF::HashTable.335" }
%"class.WTF::HashTable.335" = type <{ %"struct.WTF::KeyValuePair.337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.337" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.341" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.344" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.mojo::StructPtr.347"*, i32, i32 }
%"class.mojo::StructPtr.347" = type { %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.351", %"class.WTF::HashMap.358", %"class.WTF::HashMap.363", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.368", i32, %"class.mojo::StructPtr.373", %"class.WTF::Vector.368" }
%"class.mojo::StructPtr.351" = type { %"class.std::__1::unique_ptr.352" }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.362"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.362" = type opaque
%"class.WTF::HashMap.363" = type { %"class.WTF::HashTable.364" }
%"class.WTF::HashTable.364" = type <{ %"struct.WTF::KeyValuePair.367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.367" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.373" = type { %"class.std::__1::unique_ptr.374" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.368", i8, i8, [6 x i8] }>
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.465" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.388", i32 }>
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.393", %"class.absl::optional.398", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.418", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.440", %"class.std::__1::map.451", i64, %"class.base::OnceCallback.411", %"class.base::OnceCallback.460", i8, %class.scoped_refptr.403, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.461" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.391 }
%class.scoped_refptr.391 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.392", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.392" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.393" = type { %"class.absl::optional_internal::optional_data.394" }
%"class.absl::optional_internal::optional_data.394" = type { %"class.absl::optional_internal::optional_data_base.395" }
%"class.absl::optional_internal::optional_data_base.395" = type { %"class.absl::optional_internal::optional_data_dtor_base.396" }
%"class.absl::optional_internal::optional_data_dtor_base.396" = type { i8, %union.anon.397 }
%union.anon.397 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.398" = type { %"class.absl::optional_internal::optional_data.399" }
%"class.absl::optional_internal::optional_data.399" = type { %"class.absl::optional_internal::optional_data_base.400" }
%"class.absl::optional_internal::optional_data_base.400" = type { %"class.absl::optional_internal::optional_data_dtor_base.401" }
%"class.absl::optional_internal::optional_data_dtor_base.401" = type { i8, %union.anon.402 }
%union.anon.402 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.411" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.403, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.404 }
%class.scoped_refptr.404 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.405", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.405" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.406" }
%"struct.std::__1::atomic.406" = type { %"struct.std::__1::__atomic_base.407" }
%"struct.std::__1::__atomic_base.407" = type { %"struct.std::__1::__atomic_base.408" }
%"struct.std::__1::__atomic_base.408" = type { %"struct.std::__1::__cxx_atomic_impl.409" }
%"struct.std::__1::__cxx_atomic_impl.409" = type { %"struct.std::__1::__cxx_atomic_base_impl.410" }
%"struct.std::__1::__cxx_atomic_base_impl.410" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.416 }
%class.scoped_refptr.416 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.478", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.403, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.215", [4 x i8] }>
%"class.base::RefCountedThreadSafe.478" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.421", %class.scoped_refptr.422 }
%"class.base::RepeatingCallback.421" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.422 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.423", [4 x i8] }>
%"class.base::RefCountedThreadSafe.423" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.433", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.439" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.439" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.440" = type { %"class.std::__1::__tree.441" }
%"class.std::__1::__tree.441" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::map.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::OnceCallback.411" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.460" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.403 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.411" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.461" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::(anonymous namespace)::ClipboardImageReader" = type { %"class.blink::ClipboardReader" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.506" }
%"class.blink::PersistentBase.506" = type { %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.507" }
%"struct.std::__1::atomic.507" = type { %"struct.std::__1::__atomic_base.508" }
%"struct.std::__1::__atomic_base.508" = type { %"struct.std::__1::__cxx_atomic_impl.509" }
%"struct.std::__1::__cxx_atomic_impl.509" = type { %"struct.std::__1::__cxx_atomic_base_impl.510" }
%"struct.std::__1::__cxx_atomic_base_impl.510" = type { %"class.blink::PersistentNode"* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.504 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.503, i32, i32 }
%class.sk_sp.503 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.406" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.504 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.sk_sp.505 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { i8*, i32, i32 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.411" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.530 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.530 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.531" }
%"class.base::RefCountedThreadSafe.531" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"struct.SkPngEncoder::Options" = type { i32, i32, %class.sk_sp.516 }
%class.sk_sp.516 = type { %class.SkDataTable* }
%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon.517, void (i8*)*, i8* }
%union.anon.517 = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%"class.std::__1::tuple.523" = type { %"struct.std::__1::__tuple_impl.524" }
%"struct.std::__1::__tuple_impl.524" = type { %"class.std::__1::__tuple_leaf.525", %"class.std::__1::__tuple_leaf.526" }
%"class.std::__1::__tuple_leaf.525" = type { %"class.blink::CrossThreadPersistent" }
%"class.std::__1::__tuple_leaf.526" = type { %"class.WTF::Vector.498" }
%"struct.base::internal::BindState.522" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.523" }
%"class.blink::(anonymous namespace)::ClipboardTextReader" = type { %"class.blink::ClipboardReader" }
%"class.blink::CrossThreadPersistent.532" = type { %"class.blink::PersistentBase.533" }
%"class.blink::PersistentBase.533" = type { %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::tuple.541" = type { %"struct.std::__1::__tuple_impl.542" }
%"struct.std::__1::__tuple_impl.542" = type { %"class.std::__1::__tuple_leaf.543", %"class.std::__1::__tuple_leaf.526" }
%"class.std::__1::__tuple_leaf.543" = type { %"class.blink::CrossThreadPersistent.532" }
%"struct.base::internal::BindState.540" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.541" }
%"class.blink::(anonymous namespace)::ClipboardHtmlReader" = type { %"class.blink::ClipboardReader" }
%"class.blink::CrossThreadPersistent.1518" = type { %"class.blink::PersistentBase.1519" }
%"class.blink::PersistentBase.1519" = type { %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.545" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::KURL"* }
%"class.blink::HeapHashSet.1508" = type { %"class.WTF::HashSet.1511" }
%"class.WTF::HashSet.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"class.blink::Member.1514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1047", %"class.blink::Member.1516", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.650", %"class.blink::Member.650" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.650", %"class.blink::Member.652", %"class.blink::Member.650", %"class.blink::Member.650", %"class.blink::Member.654" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.650" = type { %"class.blink::MemberBase.651" }
%"class.blink::MemberBase.651" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.898", %"class.blink::Member.900", %"class.blink::Member.652", %"class.blink::Member.902", %"class.blink::Member.902", %"class.blink::Member.924", %"class.blink::Member.926", %"class.blink::Member.928", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.933", %"class.blink::HeapVector.935" }
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.978", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.986", %"class.WTF::Vector.986", i8, i32, %"class.blink::Member.991", %"class.blink::Member.311", %"class.blink::Member.993", %"class.blink::Member.995", %"class.blink::Member.997", %"class.blink::Member.999", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1001", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::Member.941", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1011", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.917", %"class.blink::Member.648", %"class.blink::Member.1018", %"class.blink::Member.648", %"class.blink::Member.648", %"class.blink::Member.648", %"class.blink::UserActionElementSet", %"class.blink::Member.1027", double, double, i64, i64, %"class.blink::HeapHashSet.1029", %"class.blink::HeapHashSet.1036", i16, i8, %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::TextLinkColors", %"class.blink::Member.1051", i8, [7 x i8], %"class.blink::HeapHashMap.1053", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.648", %"class.WTF::Vector.1060", %"class.blink::Member.1065", %"class.blink::Member.1067", i8, %"class.blink::Member.648", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1069", %"class.blink::HeapVector.1071", %"class.std::__1::unique_ptr.1079", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1085", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1098", %"class.WTF::Vector.1100", i8, i8, %"class.std::__1::unique_ptr.1105", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.917", %"class.blink::HeapVector.1111", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1119", i8, i32, %"class.blink::Member.1121", %"class.blink::Member.1123", %"class.blink::Member.1125", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1127", %"class.WTF::HashMap.1129", %"class.blink::Member.1134", %"class.blink::Member.1136", %"class.blink::Member.1138", %"class.blink::Member.1140", %"class.blink::Member.900", %"class.blink::Member.900", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1142", i8, i32, %"class.blink::Member.1149", %"class.blink::Member.1151", i32, %"class.blink::Member.1153", %"class.blink::Member.1155", %"class.blink::Member.1157", %"class.std::__1::unique_ptr.1159", i64, %"class.std::__1::unique_ptr.1165", i32, i32, %"class.blink::Member.1171", %"class.blink::Member.1173", %"class.blink::Member.1175", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1177", %"class.WTF::Vector.1179", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1184", %"class.blink::Member.1191", %"class.std::__1::unique_ptr.1193", %"class.blink::Member.1199", i8, i8, %"class.WTF::String", %"class.blink::Member.1201", i8, [7 x i8], %"class.blink::HeapHashMap.1203", %"class.blink::HeapObserverSet.1210", %"class.blink::Member.1218", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1220", i32, i8, i8, %"class.blink::WeakMember.1222", %"class.blink::Member.1223" }
%"class.blink::Supplementable.978" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.979" }
%"class.blink::HeapHashMap.979" = type { %"class.WTF::HashMap.982" }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.985" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.986" = type { %"class.WTF::VectorBuffer.987" }
%"class.WTF::VectorBuffer.987" = type { %"class.WTF::VectorBufferBase.988" }
%"class.WTF::VectorBufferBase.988" = type { %"class.base::OnceCallback.411"*, i32, i32 }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.997" = type { %"class.blink::MemberBase.998" }
%"class.blink::MemberBase.998" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.943", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.945, %"class.WTF::Vector.946", %"class.WTF::Vector.946", %"class.blink::Member.650", %"class.blink::Member.951", %"class.blink::HeapHashSet.955", %"class.blink::Member.900", %"class.WTF::HashSet.962", %"class.WTF::TextPosition", %"class.blink::Member.966", %"class.blink::HeapVector.968", %"class.blink::Member.975" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.945 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.946" = type { %"class.WTF::VectorBuffer.947" }
%"class.WTF::VectorBuffer.947" = type { %"class.WTF::VectorBufferBase.948" }
%"class.WTF::VectorBufferBase.948" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.953" }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.955" = type { %"class.WTF::HashSet.958" }
%"class.WTF::HashSet.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"class.blink::WeakMember.961"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.961" = type { %"class.blink::MemberBase.653" }
%"class.WTF::HashSet.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.968" = type { %"class.WTF::Vector.971" }
%"class.WTF::Vector.971" = type { %"class.WTF::VectorBuffer.972" }
%"class.WTF::VectorBuffer.972" = type { %"class.WTF::VectorBufferBase.973" }
%"class.WTF::VectorBufferBase.973" = type { %"class.blink::Member.951"*, i32, i32 }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.206 }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1020" }
%"class.blink::HeapHashMap.1020" = type { %"class.WTF::HashMap.1023" }
%"class.WTF::HashMap.1023" = type { %"class.WTF::HashTable.1024" }
%"class.WTF::HashTable.1024" = type <{ %"struct.WTF::KeyValuePair.1026"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1026" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1029" = type { %"class.WTF::HashSet.1032" }
%"class.WTF::HashSet.1032" = type { %"class.WTF::HashTable.1033" }
%"class.WTF::HashTable.1033" = type <{ %"class.blink::WeakMember.1035"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1035" = type opaque
%"class.blink::HeapHashSet.1036" = type { %"class.WTF::HashSet.1039" }
%"class.WTF::HashSet.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"class.blink::WeakMember.1042"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1042" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1053" = type { %"class.WTF::HashMap.1056" }
%"class.WTF::HashMap.1056" = type { %"class.WTF::HashTable.1057" }
%"class.WTF::HashTable.1057" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%"class.WTF::Vector.1060" = type { %"class.WTF::VectorBuffer.1061" }
%"class.WTF::VectorBuffer.1061" = type { %"class.WTF::VectorBufferBase.1062" }
%"class.WTF::VectorBufferBase.1062" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1067" = type { %"class.blink::MemberBase.1068" }
%"class.blink::MemberBase.1068" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.648" = type { %"class.blink::MemberBase.649" }
%"class.blink::MemberBase.649" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.661" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.659", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.665", %"class.blink::Member.667", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.665" = type { %"class.WTF::SingleThreadedBitField.666" }
%"class.WTF::SingleThreadedBitField.666" = type { i32 }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.669 }
%class.scoped_refptr.669 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.670", %"class.WTF::AtomicString", %"class.WTF::Vector.672" }
%"class.WTF::RefCounted.670" = type { %"class.base::RefCounted.671" }
%"class.base::RefCounted.671" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674", [32 x i8] }
%"class.WTF::VectorBufferBase.674" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1069" = type { %"class.blink::MemberBase.1070" }
%"class.blink::MemberBase.1070" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1071" = type { %"class.WTF::Vector.1074" }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::Member.1077"*, i32, i32 }
%"class.blink::Member.1077" = type opaque
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1085" = type { %"class.WTF::HashSet.1088" }
%"class.WTF::HashSet.1088" = type { %"class.WTF::HashTable.1089" }
%"class.WTF::HashTable.1089" = type <{ %"class.blink::WeakMember.1091"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1091" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1092", i32, [4 x i8] }>
%"class.WTF::Vector.1092" = type { %"class.WTF::VectorBuffer.1093" }
%"class.WTF::VectorBuffer.1093" = type { %"class.WTF::VectorBufferBase.1094" }
%"class.WTF::VectorBufferBase.1094" = type { %"struct.std::__1::pair.1095"*, i32, i32 }
%"struct.std::__1::pair.1095" = type opaque
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1105" = type { %"class.std::__1::__compressed_pair.1106" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.917" = type { %"class.WTF::Vector.920" }
%"class.WTF::Vector.920" = type { %"class.WTF::VectorBuffer.921" }
%"class.WTF::VectorBuffer.921" = type { %"class.WTF::VectorBufferBase.922" }
%"class.WTF::VectorBufferBase.922" = type { %"class.blink::Member.648"*, i32, i32 }
%"class.blink::HeapVector.1111" = type { %"class.WTF::Vector.1114" }
%"class.WTF::Vector.1114" = type { %"class.WTF::VectorBuffer.1115" }
%"class.WTF::VectorBuffer.1115" = type { %"class.WTF::VectorBufferBase.1116" }
%"class.WTF::VectorBufferBase.1116" = type { %"class.blink::Member.1117"*, i32, i32 }
%"class.blink::Member.1117" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.900" }
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1129" = type { %"class.WTF::HashTable.1130" }
%"class.WTF::HashTable.1130" = type <{ %"struct.WTF::KeyValuePair.1133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1133" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1140" = type { %"class.blink::MemberBase.1141" }
%"class.blink::MemberBase.1141" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1017", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr, %"class.base::WeakPtrFactory.1016" }
%"class.base::WeakPtrFactory.1016" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1017" = type { %"class.blink::MemberBase.901" }
%"class.blink::HeapHashSet.1142" = type { %"class.WTF::HashSet.1145" }
%"class.WTF::HashSet.1145" = type { %"class.WTF::HashTable.1146" }
%"class.WTF::HashTable.1146" = type <{ %"class.blink::Member.1148"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1148" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1177" = type { %"class.blink::MemberBase.1178" }
%"class.blink::MemberBase.1178" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1184" = type { %"class.WTF::HashMap.1187" }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1199" = type { %"class.blink::MemberBase.1200" }
%"class.blink::MemberBase.1200" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1203" = type { %"class.WTF::HashMap.1206" }
%"class.WTF::HashMap.1206" = type { %"class.WTF::HashTable.1207" }
%"class.WTF::HashTable.1207" = type <{ %"struct.WTF::KeyValuePair.1209"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1209" = type opaque
%"class.blink::HeapObserverSet.1210" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1211" }
%"class.blink::HeapHashSet.1211" = type { %"class.WTF::HashSet.1214" }
%"class.WTF::HashSet.1214" = type { %"class.WTF::HashTable.1215" }
%"class.WTF::HashTable.1215" = type <{ %"class.blink::WeakMember.1217"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1217" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.900", %"class.blink::HeapHashSet.1227", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1234", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1227" = type { %"class.WTF::HashSet.1230" }
%"class.WTF::HashSet.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"class.blink::Member.1233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1233" = type opaque
%"class.blink::HeapTaskRunnerTimer.1234" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1235", { i64, i64 } }
%"class.blink::WeakMember.1235" = type { %"class.blink::MemberBase.1221" }
%"class.blink::WeakMember.1222" = type { %"class.blink::MemberBase.651" }
%"class.blink::Member.1223" = type { %"class.blink::MemberBase.1224" }
%"class.blink::MemberBase.1224" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.906" }
%"class.blink::HeapHashMap.906" = type { %"class.WTF::HashMap.909" }
%"class.WTF::HashMap.909" = type { %"class.WTF::HashTable.910" }
%"class.WTF::HashTable.910" = type <{ %"struct.WTF::KeyValuePair.912"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.912" = type { %"class.WTF::AtomicString", %"class.blink::Member.913" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.648", i32, %"class.blink::HeapVector.917" }
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.930" }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::HeapHashMap.932"* }
%"class.blink::HeapHashMap.932" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.935" = type { %"class.WTF::Vector.938" }
%"class.WTF::Vector.938" = type { %"class.WTF::VectorBuffer.939" }
%"class.WTF::VectorBuffer.939" = type { %"class.WTF::VectorBufferBase.940" }
%"class.WTF::VectorBufferBase.940" = type { %"class.blink::Member.941"*, i32, i32 }
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.652", %"class.blink::HeapVector.935" }
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.594", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.602", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.629", %"class.blink::FrameLoader", %"class.blink::Member.646", %"class.blink::Member.648", %"class.blink::Member.677", %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.683", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.685", %class.scoped_refptr.687, %"class.blink::Member.688", %"class.blink::Member.690", %"class.blink::Member.692", %"class.blink::Member.694", %"class.blink::Member.696", %"class.blink::Member.698", %"class.blink::Member.700", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.702", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.805", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.811", %"class.std::__1::unique_ptr.812", %"class.absl::optional.582", i32, [4 x i8], %"class.std::__1::unique_ptr.818", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.836", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.855", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.869", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.227", %"class.blink::Member.246", %"class.blink::Member.877", %"class.blink::Member.879", %"class.mojo::StructPtr.882", %"class.blink::Member.891", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.893", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.555", %"class.blink::Member.557", %"class.blink::Member.559", i8, i32, i8, i32, %"class.blink::Member.561", %"class.blink::Member.563", %"class.blink::FrameLifecycle", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.565", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.575", i8, %"class.base::UnguessableToken", %"class.absl::optional.577", %"class.absl::optional.582", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.553", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::Frame"* }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.553", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.567" }
%"class.std::__1::vector.567" = type { %"class.std::__1::__vector_base.568" }
%"class.std::__1::__vector_base.568" = type { %"struct.std::__1::pair.569"*, %"struct.std::__1::pair.569"*, %"class.std::__1::__compressed_pair.570" }
%"struct.std::__1::pair.569" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"struct.std::__1::pair.569"* }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.577" = type { %"class.absl::optional_internal::optional_data.578" }
%"class.absl::optional_internal::optional_data.578" = type { %"class.absl::optional_internal::optional_data_base.579" }
%"class.absl::optional_internal::optional_data_base.579" = type { %"class.absl::optional_internal::optional_data_dtor_base.580" }
%"class.absl::optional_internal::optional_data_dtor_base.580" = type { i8, %union.anon.581 }
%union.anon.581 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.587" }
%"class.blink::HeapHashSet.587" = type { %"class.WTF::HashSet.590" }
%"class.WTF::HashSet.590" = type { %"class.WTF::HashTable.591" }
%"class.WTF::HashTable.591" = type <{ %"class.blink::WeakMember.593"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.593" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.594" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.595" }
%"class.blink::HeapHashMap.595" = type { %"class.WTF::HashMap.598" }
%"class.WTF::HashMap.598" = type { %"class.WTF::HashTable.599" }
%"class.WTF::HashTable.599" = type <{ %"struct.WTF::KeyValuePair.601"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.601" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.605", %"class.base::WeakPtrFactory.610" }
%"class.WTF::HashMap.605" = type { %"class.WTF::HashTable.606" }
%"class.WTF::HashTable.606" = type <{ %"struct.WTF::KeyValuePair.609"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.609" = type opaque
%"class.base::WeakPtrFactory.610" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.614" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.618", i64, %"class.std::__1::map.619", i8*, i64, %"class.base::WeakPtrFactory.628" }
%"class.base::RepeatingCallback.618" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::WeakPtrFactory.628" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::WeakMember.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.635" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.565", %"class.blink::Member.636", %"class.blink::Member.638", %"class.std::__1::unique_ptr.640", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.234" }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.214 }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1238", %"class.blink::Member.565", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1243", i8, i32, %"class.blink::Color", %"class.absl::optional.1245", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1250", %"class.blink::Member.1252", %"class.blink::Member.1252", %"class.std::__1::unique_ptr.1255", i32, [4 x i8], %"class.WTF::HashSet.1258", %"class.blink::Member.1265", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1267", %"class.blink::HeapHashSet.1274", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1282", i8, %"class.blink::Member.1288", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1300", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1314", i8, %"class.std::__1::unique_ptr.1320", %"class.std::__1::unique_ptr.1437", %"class.WTF::Vector.1443", i32, %class.scoped_refptr.1448, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::HeapHashSet.1455", %"class.blink::HeapHashSet.1462", %"class.std::__1::unique_ptr.1469", %"class.std::__1::unique_ptr.1476", %"class.WTF::Vector.986" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %class.scoped_refptr.1242*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1242 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1243" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1244", { i64, i64 } }
%"class.blink::WeakMember.1244" = type { %"class.blink::MemberBase.647" }
%"class.absl::optional.1245" = type { %"class.absl::optional_internal::optional_data.1246" }
%"class.absl::optional_internal::optional_data.1246" = type { %"class.absl::optional_internal::optional_data_base.1247" }
%"class.absl::optional_internal::optional_data_base.1247" = type { %"class.absl::optional_internal::optional_data_dtor_base.1248" }
%"class.absl::optional_internal::optional_data_dtor_base.1248" = type { i8, %union.anon.1249 }
%union.anon.1249 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::HeapHashSet.1254"* }
%"class.blink::HeapHashSet.1254" = type opaque
%"class.std::__1::unique_ptr.1255" = type { %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"class.WTF::HashSet.1258"* }
%"class.WTF::HashSet.1258" = type { %"class.WTF::HashTable.1259" }
%"class.WTF::HashTable.1259" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1267" = type { %"class.WTF::HashSet.1270" }
%"class.WTF::HashSet.1270" = type { %"class.WTF::HashTable.1271" }
%"class.WTF::HashTable.1271" = type <{ %"class.blink::Member.1273"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1273" = type opaque
%"class.blink::HeapHashSet.1274" = type { %"class.WTF::HashSet.1277" }
%"class.WTF::HashSet.1277" = type { %"class.WTF::HashTable.1278" }
%"class.WTF::HashTable.1278" = type <{ %"class.blink::Member.1280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1292", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1292" = type { %"class.WTF::HashTable.1293" }
%"class.WTF::HashTable.1293" = type <{ %"struct.WTF::KeyValuePair.1295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1295" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1296", i32, i32 }
%"class.WTF::Vector.1296" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298" }
%"class.WTF::VectorBufferBase.1298" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1300" = type { %"class.WTF::LinkedHashSet.1303" }
%"class.WTF::LinkedHashSet.1303" = type { %"class.WTF::HashMap.1304", %"class.WTF::VectorBackedLinkedList.1308" }
%"class.WTF::HashMap.1304" = type { %"class.WTF::HashTable.1305" }
%"class.WTF::HashTable.1305" = type <{ %"struct.WTF::KeyValuePair.1307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1307" = type opaque
%"class.WTF::VectorBackedLinkedList.1308" = type { %"class.WTF::Vector.1309", i32, i32 }
%"class.WTF::Vector.1309" = type { %"class.WTF::VectorBuffer.1310" }
%"class.WTF::VectorBuffer.1310" = type { %"class.WTF::VectorBufferBase.1311" }
%"class.WTF::VectorBufferBase.1311" = type { %"class.WTF::VectorBackedLinkedListNode.1312"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1312" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1323, %class.scoped_refptr.1323, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1414", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1419", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1323 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1324", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1331" }
%"class.WTF::RefCounted.1324" = type { %"class.base::RefCounted.1325" }
%"class.base::RefCounted.1325" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1326", i32, [4 x i8] }>
%"class.WTF::Vector.1326" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328" }
%"class.WTF::VectorBufferBase.1328" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1337", %"class.std::__1::unique_ptr.1386", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1334, %class.scoped_refptr.1335, %class.scoped_refptr.1336 }
%class.scoped_refptr.1334 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1350", i8, i8, %class.scoped_refptr.1334, i32, i32 }
%"class.WTF::RefCounted.1350" = type { %"class.base::RefCounted.1351" }
%"class.base::RefCounted.1351" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1335 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1505" }
%"class.blink::PaintPropertyNode.1505" = type { %"class.WTF::RefCounted.1506", i8, i8, %class.scoped_refptr.1335, i32, i32 }
%"class.WTF::RefCounted.1506" = type { %"class.base::RefCounted.1507" }
%"class.base::RefCounted.1507" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1336 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1502" }
%"class.blink::PaintPropertyNode.1502" = type { %"class.WTF::RefCounted.1503", i8, i8, %class.scoped_refptr.1336, i32, i32 }
%"class.WTF::RefCounted.1503" = type { %"class.base::RefCounted.1504" }
%"class.base::RefCounted.1504" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1340", %"class.WTF::Vector.1345", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1340" = type { %"class.WTF::VectorBuffer.1341" }
%"class.WTF::VectorBuffer.1341" = type { %"class.WTF::VectorBufferBase.1342" }
%"class.WTF::VectorBufferBase.1342" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1365" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1358, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1359", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1352" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1358 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1487", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1487" = type { %"class.WTF::RefCounted.1488", i8, i8, %class.scoped_refptr.1358, i32, i32 }
%"class.WTF::RefCounted.1488" = type { %"class.base::RefCounted.1489" }
%"class.base::RefCounted.1489" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1490" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1490" = type { %"class.absl::optional_internal::optional_data.1491" }
%"class.absl::optional_internal::optional_data.1491" = type { %"class.absl::optional_internal::optional_data_base.1492" }
%"class.absl::optional_internal::optional_data_base.1492" = type { %"class.absl::optional_internal::optional_data_dtor_base.1493" }
%"class.absl::optional_internal::optional_data_dtor_base.1493" = type { i8, %union.anon.1494 }
%union.anon.1494 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1495", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1495" = type { %"class.std::__1::__vector_base.1496" }
%"class.std::__1::__vector_base.1496" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1497" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1365" = type { %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1368", %"class.std::__1::unique_ptr.1374", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1374" = type { %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.1376" }
%"struct.std::__1::__compressed_pair_elem.1376" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1386" = type { %"class.std::__1::__compressed_pair.1387" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1389", %"class.absl::optional.1389" }
%"class.absl::optional.1389" = type { %"class.absl::optional_internal::optional_data.1390" }
%"class.absl::optional_internal::optional_data.1390" = type { %"class.absl::optional_internal::optional_data_base.1391" }
%"class.absl::optional_internal::optional_data_base.1391" = type { %"class.absl::optional_internal::optional_data_dtor_base.1392" }
%"class.absl::optional_internal::optional_data_dtor_base.1392" = type { i8, [3 x i8], %union.anon.1393 }
%union.anon.1393 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1331"*, %"class.absl::optional.1399", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1399" = type { %"class.absl::optional_internal::optional_data.1400" }
%"class.absl::optional_internal::optional_data.1400" = type { %"class.absl::optional_internal::optional_data_base.1401" }
%"class.absl::optional_internal::optional_data_base.1401" = type { %"class.absl::optional_internal::optional_data_dtor_base.1402" }
%"class.absl::optional_internal::optional_data_dtor_base.1402" = type { i8, %union.anon.1403 }
%union.anon.1403 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1404", %"class.WTF::Vector.1409" }
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406", [128 x i8] }
%"class.WTF::VectorBufferBase.1406" = type { i32*, i32, i32 }
%"class.WTF::Vector.1409" = type { %"class.WTF::VectorBuffer.1410" }
%"class.WTF::VectorBuffer.1410" = type { %"class.WTF::VectorBufferBase.1411", [128 x i8] }
%"class.WTF::VectorBufferBase.1411" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1419" = type { %"class.WTF::HashTable.1420" }
%"class.WTF::HashTable.1420" = type <{ %"struct.WTF::KeyValuePair.1423"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1423" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1424", %"class.WTF::Vector.1429" }
%"class.WTF::HashMap.1424" = type { %"class.WTF::HashTable.1425" }
%"class.WTF::HashTable.1425" = type <{ %"struct.WTF::KeyValuePair.1428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1428" = type opaque
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1437" = type { %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.1439" }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1448 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1455" = type { %"class.WTF::HashSet.1458" }
%"class.WTF::HashSet.1458" = type { %"class.WTF::HashTable.1459" }
%"class.WTF::HashTable.1459" = type <{ %"class.blink::WeakMember.1461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1461" = type opaque
%"class.blink::HeapHashSet.1462" = type { %"class.WTF::HashSet.1465" }
%"class.WTF::HashSet.1465" = type { %"class.WTF::HashTable.1466" }
%"class.WTF::HashTable.1466" = type <{ %"class.blink::WeakMember.1468"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1468" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1472" }
%"class.base::time_internal::TimeBase.1472" = type { i64 }
%"class.std::__1::unique_ptr.1476" = type { %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.1478" }
%"struct.std::__1::__compressed_pair_elem.1478" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1479", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1479" = type { %"class.absl::optional_internal::optional_data.1480" }
%"class.absl::optional_internal::optional_data.1480" = type { %"class.absl::optional_internal::optional_data_base.1481" }
%"class.absl::optional_internal::optional_data_base.1481" = type { %"class.absl::optional_internal::optional_data_dtor_base.1482" }
%"class.absl::optional_internal::optional_data_dtor_base.1482" = type { i8, %union.anon.1483 }
%union.anon.1483 = type { %"class.base::Time" }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.687 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.702" = type { %"class.blink::Member.703" }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.799" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.707, %"class.std::__1::unique_ptr.388", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.403, i32 }>
%class.scoped_refptr.707 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.403, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.765", %"class.absl::optional.770", %"class.absl::optional.724", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.790", i8, [7 x i8], %class.scoped_refptr.403, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.423" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.411", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.403, %"class.std::__1::unique_ptr.708", %"class.absl::optional.718", %"struct.std::__1::atomic.190", i8, i8, i8, i8, i32, i32, %"class.absl::optional.724", %"class.std::__1::unique_ptr.729", i8, i64, %class.scoped_refptr.762, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.764" }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.403, i8, %"class.mojo::ScopedHandleBase.711", %class.scoped_refptr.712, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.713", i8*, %"class.base::WeakPtrFactory.714" }
%"class.mojo::ScopedHandleBase.711" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.712 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.713" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.714" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.718" = type { %"class.absl::optional_internal::optional_data.719" }
%"class.absl::optional_internal::optional_data.719" = type { %"class.absl::optional_internal::optional_data_base.720" }
%"class.absl::optional_internal::optional_data_base.720" = type { %"class.absl::optional_internal::optional_data_dtor_base.721" }
%"class.absl::optional_internal::optional_data_dtor_base.721" = type { i8, %union.anon.722 }
%union.anon.722 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.723", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.723" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.732", i8, i64, %class.scoped_refptr.733, %class.scoped_refptr.758 }
%"class.base::RepeatingCallback.732" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.733 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.734", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.736", %"class.std::__1::map.747", i8, [7 x i8] }>
%"class.base::RefCounted.734" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.735 }
%class.scoped_refptr.735 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.736" = type { %"class.std::__1::__tree.737" }
%"class.std::__1::__tree.737" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::map.747" = type { %"class.std::__1::__tree.748" }
%"class.std::__1::__tree.748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%class.scoped_refptr.758 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.762 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.764" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.765" = type { %"class.absl::optional_internal::optional_data.766" }
%"class.absl::optional_internal::optional_data.766" = type { %"class.absl::optional_internal::optional_data_base.767" }
%"class.absl::optional_internal::optional_data_base.767" = type { %"class.absl::optional_internal::optional_data_dtor_base.768" }
%"class.absl::optional_internal::optional_data_dtor_base.768" = type { i8, %union.anon.769 }
%union.anon.769 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.770" = type { %"class.absl::optional_internal::optional_data.771" }
%"class.absl::optional_internal::optional_data.771" = type { %"class.absl::optional_internal::optional_data_base.772" }
%"class.absl::optional_internal::optional_data_base.772" = type { %"class.absl::optional_internal::optional_data_dtor_base.773" }
%"class.absl::optional_internal::optional_data_dtor_base.773" = type { i8, [7 x i8], %union.anon.774 }
%union.anon.774 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.724" = type { %"class.absl::optional_internal::optional_data.725" }
%"class.absl::optional_internal::optional_data.725" = type { %"class.absl::optional_internal::optional_data_base.726" }
%"class.absl::optional_internal::optional_data_base.726" = type { %"class.absl::optional_internal::optional_data_dtor_base.727" }
%"class.absl::optional_internal::optional_data_dtor_base.727" = type { i8, %union.anon.728 }
%union.anon.728 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.775 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.775 = type { %"class.std::__1::map.778" }
%"class.std::__1::map.778" = type { %"class.std::__1::__tree.779" }
%"class.std::__1::__tree.779" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.789"*, i64 }
%"class.std::__1::unique_ptr.789" = type opaque
%"class.std::__1::map.790" = type { %"class.std::__1::__tree.791" }
%"class.std::__1::__tree.791" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.792", %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.811" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.582" = type { %"class.absl::optional_internal::optional_data.583" }
%"class.absl::optional_internal::optional_data.583" = type { %"class.absl::optional_internal::optional_data_base.584" }
%"class.absl::optional_internal::optional_data_base.584" = type { %"class.absl::optional_internal::optional_data_dtor_base.585" }
%"class.absl::optional_internal::optional_data_dtor_base.585" = type { i8, %union.anon.586 }
%union.anon.586 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.824" }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.828" }
%"class.mojo::AssociatedRemote.828" = type { %"class.mojo::internal::AssociatedInterfacePtrState.829" }
%"class.mojo::internal::AssociatedInterfacePtrState.829" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.830" }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.836" = type { %"class.blink::Member.837" }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.841" }
%"class.mojo::AssociatedRemote.841" = type { %"class.mojo::internal::AssociatedInterfacePtrState.842" }
%"class.mojo::internal::AssociatedInterfacePtrState.842" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.843" }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.849" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.853", %"class.blink::Member.565", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.853" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.854" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.388" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.854" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.855" = type { %"class.blink::Member.856" }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.860", %"class.blink::Member.565", %"class.mojo::AssociatedReceiver.861" }
%"class.blink::ThreadState::PrefinalizerRegistration.860" = type { i8 }
%"class.mojo::AssociatedReceiver.861" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.862" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.863" }
%"class.blink::Member.863" = type { %"class.blink::MemberBase.864" }
%"class.blink::MemberBase.864" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.867", %"class.blink::Member.565", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.867" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.707, %"class.std::__1::unique_ptr.388", %"class.base::WeakPtrFactory.868" }
%"class.base::WeakPtrFactory.868" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.869" = type { %"class.blink::Member.870" }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.874", %"class.blink::Member.565", %"class.mojo::AssociatedReceiver.875" }
%"class.blink::ThreadState::PrefinalizerRegistration.874" = type { i8 }
%"class.mojo::AssociatedReceiver.875" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.876" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.876" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.877" = type { %"class.blink::MemberBase.878" }
%"class.blink::MemberBase.878" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::HeapHashMap.881"* }
%"class.blink::HeapHashMap.881" = type opaque
%"class.mojo::StructPtr.882" = type { %"class.std::__1::unique_ptr.883" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.886", %"class.mojo::InlinedStructPtr.887" }
%"class.mojo::InlinedStructPtr.886" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.887" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.893" = type { %"class.absl::optional_internal::optional_data.894" }
%"class.absl::optional_internal::optional_data.894" = type { %"class.absl::optional_internal::optional_data_base.895" }
%"class.absl::optional_internal::optional_data_base.895" = type { %"class.absl::optional_internal::optional_data_dtor_base.896" }
%"class.absl::optional_internal::optional_data_dtor_base.896" = type { i8, %union.anon.897 }
%union.anon.897 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.std::__1::tuple.1526" = type { %"struct.std::__1::__tuple_impl.1527" }
%"struct.std::__1::__tuple_impl.1527" = type { %"class.std::__1::__tuple_leaf.1528", %"class.std::__1::__tuple_leaf.526" }
%"class.std::__1::__tuple_leaf.1528" = type { %"class.blink::CrossThreadPersistent.1518" }
%"struct.base::internal::BindState.1525" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.1526" }
%"class.blink::(anonymous namespace)::ClipboardSvgReader" = type { %"class.blink::ClipboardReader" }
%"class.base::OnceCallback.1530" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Persistent.1531" = type { %"class.blink::PersistentBase.1532" }
%"class.blink::PersistentBase.1532" = type { %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CrossThreadPersistent.1540" = type { %"class.blink::PersistentBase.1541" }
%"class.blink::PersistentBase.1541" = type { %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.std::__1::tuple.1548" = type { %"struct.std::__1::__tuple_impl.1549" }
%"struct.std::__1::__tuple_impl.1549" = type { %"class.std::__1::__tuple_leaf.1550", %"class.std::__1::__tuple_leaf.526" }
%"class.std::__1::__tuple_leaf.1550" = type { %"class.blink::CrossThreadPersistent.1540" }
%"struct.base::internal::BindState.1547" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.1548" }

$_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ClipboardReaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ClipboardReaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ClipboardReaderEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink17kMimeTypeImagePngE = external constant [0 x i8], align 1
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeImageSvgE = external constant [0 x i8], align 1
@_ZTVN5blink15ClipboardReaderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev to i8*), i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase25is_clipboard_svg_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ClipboardReaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ClipboardReaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ClipboardReaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink12_GLOBAL__N_120ClipboardImageReaderE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageReaderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageReader4ReadEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"Read\00", align 1
@.str.4 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/modules/clipboard/clipboard_reader.cc\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"EncodeOnBackgroundThread\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZTVN5blink12_GLOBAL__N_119ClipboardTextReaderE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextReaderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextReader4ReadEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink12_GLOBAL__N_119ClipboardHtmlReaderE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReaderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader4ReadEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_118ClipboardSvgReaderE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgReaderD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader4ReadEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [7 x i8] c"OnRead\00", align 1

@_ZN5blink15ClipboardReaderD1Ev = hidden unnamed_addr alias void (%"class.blink::ClipboardReader"*), void (%"class.blink::ClipboardReader"*)* @_ZN5blink15ClipboardReaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ClipboardReader"* @_ZN5blink15ClipboardReader6CreateEPNS_15SystemClipboardERKN3WTF6StringEPNS_16ClipboardPromiseE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ClipboardPromise"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = ptrtoint %"class.blink::SystemClipboard"* %0 to i64
  %13 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %18, align 8
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %28

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %27 = bitcast i8** %26 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %27, align 8
  br label %28

28:                                               ; preds = %21, %17
  %29 = phi i32 [ %24, %21 ], [ 0, %17 ]
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %29, i32* %30, align 8
  %31 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #10
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %28
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %28
  %36 = trunc i64 %32 to i32
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %36, i32* %40, align 8
  %41 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #9
  br i1 %41, label %42, label %59

42:                                               ; preds = %35
  %43 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm(i64 32) #9
  %44 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %46 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %45) #9
  %47 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %46, i64 0, i32 1
  %48 = bitcast %"class.blink::MojoBindingContext"* %47 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %49 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %48, align 8
  %50 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %49, i64 6
  %51 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %50, align 8
  %52 = call %"class.base::SingleThreadTaskRunner"* %51(%"class.blink::MojoBindingContext"* %47, i8 zeroext 2) #9
  %53 = getelementptr inbounds i8, i8* %43, i64 8
  %54 = bitcast i8* %53 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %52, %"class.base::SingleThreadTaskRunner"** %54, align 8
  %55 = getelementptr inbounds i8, i8* %43, i64 16
  %56 = bitcast i8* %55 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %43, i64 24
  %58 = bitcast i8* %57 to i64*
  store i64 %12, i64* %58, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120ClipboardImageReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  br label %200

59:                                               ; preds = %35
  %60 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %64, align 8
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %65, i64* %66, align 8
  br label %74

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %73, align 8
  br label %74

74:                                               ; preds = %67, %63
  %75 = phi i32 [ %70, %67 ], [ 0, %63 ]
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %75, i32* %76, align 8
  %77 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #9
  %78 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #10
  %79 = icmp ult i64 %78, 4294967296
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %74
  call void @llvm.trap() #9
  unreachable

81:                                               ; preds = %74
  %82 = trunc i64 %78 to i32
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %82, i32* %86, align 8
  %87 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  br i1 %87, label %88, label %105

88:                                               ; preds = %81
  %89 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm(i64 32) #9
  %90 = bitcast i8* %89 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %92 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %91) #9
  %93 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %92, i64 0, i32 1
  %94 = bitcast %"class.blink::MojoBindingContext"* %93 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %95 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %94, align 8
  %96 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %95, i64 6
  %97 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %96, align 8
  %98 = call %"class.base::SingleThreadTaskRunner"* %97(%"class.blink::MojoBindingContext"* %93, i8 zeroext 2) #9
  %99 = getelementptr inbounds i8, i8* %89, i64 8
  %100 = bitcast i8* %99 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %98, %"class.base::SingleThreadTaskRunner"** %100, align 8
  %101 = getelementptr inbounds i8, i8* %89, i64 16
  %102 = bitcast i8* %101 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %102, align 8
  %103 = getelementptr inbounds i8, i8* %89, i64 24
  %104 = bitcast i8* %103 to i64*
  store i64 %12, i64* %104, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119ClipboardTextReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  br label %200

105:                                              ; preds = %81
  %106 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #9
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %110, align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %111, i64* %112, align 8
  br label %120

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 1
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %119 = bitcast i8** %118 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %119, align 8
  br label %120

120:                                              ; preds = %113, %109
  %121 = phi i32 [ %116, %113 ], [ 0, %109 ]
  %122 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %121, i32* %122, align 8
  %123 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #9
  %124 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #10
  %125 = icmp ult i64 %124, 4294967296
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %120
  call void @llvm.trap() #9
  unreachable

127:                                              ; preds = %120
  %128 = trunc i64 %124 to i32
  %129 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %130 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %128, i32* %132, align 8
  %133 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #9
  br i1 %133, label %134, label %151

134:                                              ; preds = %127
  %135 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm(i64 32) #9
  %136 = bitcast i8* %135 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  %137 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %138 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %137) #9
  %139 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %138, i64 0, i32 1
  %140 = bitcast %"class.blink::MojoBindingContext"* %139 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %141 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %140, align 8
  %142 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %141, i64 6
  %143 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %142, align 8
  %144 = call %"class.base::SingleThreadTaskRunner"* %143(%"class.blink::MojoBindingContext"* %139, i8 zeroext 2) #9
  %145 = getelementptr inbounds i8, i8* %135, i64 8
  %146 = bitcast i8* %145 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %144, %"class.base::SingleThreadTaskRunner"** %146, align 8
  %147 = getelementptr inbounds i8, i8* %135, i64 16
  %148 = bitcast i8* %147 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %148, align 8
  %149 = getelementptr inbounds i8, i8* %135, i64 24
  %150 = bitcast i8* %149 to i64*
  store i64 %12, i64* %150, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_119ClipboardHtmlReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  br label %200

151:                                              ; preds = %127
  %152 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #9
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %156, align 8
  %157 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %158 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %157, i64* %158, align 8
  br label %166

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"** %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 1
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %165 = bitcast i8** %164 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %165, align 8
  br label %166

166:                                              ; preds = %159, %155
  %167 = phi i32 [ %162, %159 ], [ 0, %155 ]
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %167, i32* %168, align 8
  %169 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #9
  %170 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0)) #10
  %171 = icmp ult i64 %170, 4294967296
  br i1 %171, label %173, label %172, !prof !2

172:                                              ; preds = %166
  call void @llvm.trap() #9
  unreachable

173:                                              ; preds = %166
  %174 = trunc i64 %170 to i32
  %175 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %176 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0), i8** %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %174, i32* %178, align 8
  %179 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #9
  %180 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase25is_clipboard_svg_enabled_E, align 1
  %181 = icmp ne i8 %180, 0
  %182 = and i1 %179, %181
  br i1 %182, label %183, label %207

183:                                              ; preds = %173
  %184 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm(i64 32) #9
  %185 = bitcast i8* %184 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  %186 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %187 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %186) #9
  %188 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %187, i64 0, i32 1
  %189 = bitcast %"class.blink::MojoBindingContext"* %188 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %190 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %189, align 8
  %191 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %190, i64 6
  %192 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %191, align 8
  %193 = call %"class.base::SingleThreadTaskRunner"* %192(%"class.blink::MojoBindingContext"* %188, i8 zeroext 2) #9
  %194 = getelementptr inbounds i8, i8* %184, i64 8
  %195 = bitcast i8* %194 to %"class.base::SingleThreadTaskRunner"**
  store %"class.base::SingleThreadTaskRunner"* %193, %"class.base::SingleThreadTaskRunner"** %195, align 8
  %196 = getelementptr inbounds i8, i8* %184, i64 16
  %197 = bitcast i8* %196 to %"class.blink::ClipboardPromise"**
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %197, align 8
  %198 = getelementptr inbounds i8, i8* %184, i64 24
  %199 = bitcast i8* %198 to i64*
  store i64 %12, i64* %199, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink12_GLOBAL__N_118ClipboardSvgReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %185, align 8
  br label %200

200:                                              ; preds = %42, %88, %134, %183
  %201 = phi i8* [ %43, %42 ], [ %89, %88 ], [ %135, %134 ], [ %184, %183 ]
  %202 = getelementptr inbounds i8, i8* %201, i64 -4
  %203 = bitcast i8* %202 to i16*
  %204 = load atomic i16, i16* %203 monotonic, align 2
  %205 = or i16 %204, 1
  store atomic i16 %205, i16* %203 release, align 2
  %206 = bitcast i8* %201 to %"class.blink::ClipboardReader"*
  br label %207

207:                                              ; preds = %200, %173
  %208 = phi %"class.blink::ClipboardReader"* [ null, %173 ], [ %206, %200 ]
  ret %"class.blink::ClipboardReader"* %208
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardReaderC2EPNS_15SystemClipboardEPNS_16ClipboardPromiseE(%"class.blink::ClipboardReader"* nocapture, %"class.blink::SystemClipboard"*, %"class.blink::ClipboardPromise"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.blink::ClipboardPromise"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %5) #9
  %7 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 1
  %8 = bitcast %"class.blink::MojoBindingContext"* %7 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %9 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %8, align 8
  %10 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %9, i64 6
  %11 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %10, align 8
  %12 = tail call %"class.base::SingleThreadTaskRunner"* %11(%"class.blink::MojoBindingContext"* %7, i8 zeroext 2) #9
  %13 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 1, i32 0
  store %"class.base::SingleThreadTaskRunner"* %12, %"class.base::SingleThreadTaskRunner"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::ClipboardPromise"* %2, %"class.blink::ClipboardPromise"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::SystemClipboard"* %1, %"class.blink::SystemClipboard"** %15, align 8
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardReaderD0Ev(%"class.blink::ClipboardReader"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15ClipboardReader5TraceEPNS_7VisitorE(%"class.blink::ClipboardReader"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.227"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ClipboardReaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.215"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ClipboardReaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.215"*)) #9
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #9
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %40, i8* %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #9
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ClipboardReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ClipboardReaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ClipboardReader"*
  %3 = bitcast i8* %0 to void (%"class.blink::ClipboardReader"*)***
  %4 = load void (%"class.blink::ClipboardReader"*)**, void (%"class.blink::ClipboardReader"*)*** %3, align 8
  %5 = load void (%"class.blink::ClipboardReader"*)*, void (%"class.blink::ClipboardReader"*)** %4, align 8
  tail call void %5(%"class.blink::ClipboardReader"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ClipboardReaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.215"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageReaderD0Ev(%"class.blink::(anonymous namespace)::ClipboardImageReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageReader", %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageReader", %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageReader4ReadEv(%"class.blink::(anonymous namespace)::ClipboardImageReader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.411", align 8
  %3 = alloca %"class.base::OnceCallback.411", align 8
  %4 = alloca %"class.blink::CrossThreadPersistent", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %class.sk_sp.505, align 8
  %7 = alloca %"class.WTF::Vector.498", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.blink::CrossThreadPersistent", align 8
  %11 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageReader", %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %12, align 8
  call void @_ZN5blink15SystemClipboard9ReadImageENS_5mojom15ClipboardBufferE(%class.SkBitmap* nonnull sret %5, %"class.blink::SystemClipboard"* %13, i32 0) #9
  %14 = bitcast %class.sk_sp.505* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %class.sk_sp.505, %class.sk_sp.505* %6, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %15, align 8
  call void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.505* nonnull sret %6, %class.SkBitmap* nonnull dereferenceable(56) %5) #9
  %16 = load %class.SkImage*, %class.SkImage** %15, align 8
  %17 = icmp eq %class.SkImage* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::Vector.498"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink12_GLOBAL__N_120ClipboardImageReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, %"class.WTF::Vector.498"* nonnull %7)
  br label %120

20:                                               ; preds = %1
  %21 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 50) #9
  %22 = bitcast %"class.blink::CrossThreadPersistent"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %24, align 8, !alias.scope !4
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %10, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %26, align 8, !alias.scope !4
  %27 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0 to i64
  switch i64 %27, label %28 [
    i64 0, label %47
    i64 -1, label %47
  ]

28:                                               ; preds = %20
  %29 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !4
  %30 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %29, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %30) #9, !noalias !4
  %31 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !4
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %32, align 8, !noalias !4
  %34 = icmp eq %"class.blink::PersistentNode"* %33, null
  br i1 %34, label %35, label %38, !prof !3

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %31, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %36) #9
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %32, align 8
  br label %38

38:                                               ; preds = %35, %28
  %39 = phi %"class.blink::PersistentNode"* [ %37, %35 ], [ %33, %28 ]
  %40 = bitcast %"class.blink::PersistentNode"* %39 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !4
  %42 = bitcast %"class.blink::CrossThreadPersistentRegion"* %31 to i64*
  store i64 %41, i64* %42, align 8, !noalias !4
  %43 = bitcast %"class.blink::PersistentNode"* %39 to %"class.blink::PersistentBase.506"**
  store %"class.blink::PersistentBase.506"* %23, %"class.blink::PersistentBase.506"** %43, align 8, !noalias !4
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %39, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  %45 = ptrtoint %"class.blink::PersistentNode"* %39 to i64
  %46 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %25 to i64*
  store atomic i64 %45, i64* %46 release, align 8, !alias.scope !4
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %30) #9
  br label %47

47:                                               ; preds = %20, %20, %38
  %48 = bitcast %"class.base::OnceCallback.411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = load %class.SkImage*, %class.SkImage** %15, align 8, !noalias !7
  %50 = icmp eq %class.SkImage* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkImage, %class.SkImage* %49, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic, !noalias !7
  br label %54

54:                                               ; preds = %51, %47
  %55 = ptrtoint %class.SkImage* %49 to i64
  %56 = bitcast %"class.blink::CrossThreadPersistent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #9, !noalias !12
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent"* nonnull %4, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %10) #9, !noalias !12
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageReader", %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, i64 0, i32 0, i32 1, i32 0
  %58 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %57, align 8, !noalias !12
  %59 = icmp eq %"class.base::SingleThreadTaskRunner"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %58, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic, !noalias !12
  br label %63

63:                                               ; preds = %60, %54
  %64 = ptrtoint %"class.base::SingleThreadTaskRunner"* %58 to i64
  %65 = call i8* @_Znwm(i64 72) #12, !noalias !13
  %66 = bitcast i8* %65 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %66, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS5_NS6_21CrossThreadPersistentIS8_EESC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !13
  %67 = getelementptr inbounds i8, i8* %65, i64 32
  %68 = bitcast i8* %67 to i64*
  store i64 ptrtoint (void (%class.sk_sp.505*, %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_120ClipboardImageReader24EncodeOnBackgroundThreadE5sk_spI7SkImageEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %68, align 8, !noalias !13
  %69 = getelementptr inbounds i8, i8* %65, i64 40
  %70 = bitcast i8* %69 to i64*
  store i64 %55, i64* %70, align 8, !noalias !13
  %71 = getelementptr inbounds i8, i8* %65, i64 48
  %72 = bitcast i8* %71 to %"class.blink::CrossThreadPersistent"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent"* %72, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %4) #9, !noalias !13
  %73 = getelementptr inbounds i8, i8* %65, i64 64
  %74 = bitcast i8* %73 to i64*
  store i64 %64, i64* %74, align 8, !noalias !13
  %75 = bitcast %"class.base::OnceCallback.411"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9, !noalias !12
  %76 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0, i32 0, i32 0
  %77 = ptrtoint i8* %65 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %76, align 8, !noalias !18
  %78 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i64*
  store i64 %77, i64* %79, align 8, !alias.scope !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8, !noalias !18
  %80 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %80) #9, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9, !noalias !12
  %81 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #9, !noalias !12
  %82 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %4, i64 0, i32 0, i32 1
  %83 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %82 to i64*
  %84 = load atomic i64, i64* %83 acquire, align 8, !noalias !12
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %63
  %87 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !12
  %88 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %87, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %88) #9, !noalias !12
  %89 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !12
  %90 = load atomic i64, i64* %83 monotonic, align 8, !noalias !12
  %91 = inttoptr i64 %90 to %"class.blink::PersistentNode"*
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %89, i64 0, i32 0, i32 0
  %95 = bitcast %"class.blink::CrossThreadPersistentRegion"* %89 to i64*
  %96 = load i64, i64* %95, align 8, !noalias !12
  %97 = inttoptr i64 %90 to i64*
  store i64 %96, i64* %97, align 8, !noalias !12
  %98 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %91, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %98, align 8, !noalias !12
  store %"class.blink::PersistentNode"* %91, %"class.blink::PersistentNode"** %94, align 8, !noalias !12
  br label %99

99:                                               ; preds = %93, %86
  store atomic i64 0, i64* %83 release, align 8, !noalias !12
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %88) #9, !noalias !12
  br label %100

100:                                              ; preds = %63, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #9, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %8, %"class.WTF::CrossThreadOnceFunction"* nonnull %9) #9
  %101 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #9
  %102 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %25 to i64*
  %103 = load atomic i64, i64* %102 acquire, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %119, label %105

105:                                              ; preds = %100
  %106 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %107 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %106, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %107) #9
  %108 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %109 = load atomic i64, i64* %102 monotonic, align 8
  %110 = inttoptr i64 %109 to %"class.blink::PersistentNode"*
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %108, i64 0, i32 0, i32 0
  %114 = bitcast %"class.blink::CrossThreadPersistentRegion"* %108 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = inttoptr i64 %109 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %110, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %117, align 8
  store %"class.blink::PersistentNode"* %110, %"class.blink::PersistentNode"** %113, align 8
  br label %118

118:                                              ; preds = %112, %105
  store atomic i64 0, i64* %102 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %107) #9
  br label %119

119:                                              ; preds = %100, %118
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #9
  br label %120

120:                                              ; preds = %18, %119
  %121 = load %class.SkImage*, %class.SkImage** %15, align 8
  %122 = icmp eq %class.SkImage* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %class.SkImage, %class.SkImage* %121, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %class.SkImage* %121 to %class.SkRefCntBase*
  %129 = bitcast %class.SkImage* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  call void %132(%class.SkRefCntBase* nonnull %128) #9
  br label %133

133:                                              ; preds = %120, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardImageReader"* nocapture readonly, %"class.WTF::Vector.498"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i64 %12) #9
  %13 = call %"class.blink::Blob"* @_ZN5blink4Blob6CreateEPKhmRKN3WTF6StringE(i8* %9, i64 %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %7, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %31

31:                                               ; preds = %2, %30
  %32 = phi %"class.blink::Blob"* [ %13, %30 ], [ null, %2 ]
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardImageReader", %"class.blink::(anonymous namespace)::ClipboardImageReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %33, align 8
  call void @_ZN5blink16ClipboardPromise6OnReadEPNS_4BlobE(%"class.blink::ClipboardPromise"* %34, %"class.blink::Blob"* %32) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink15SystemClipboard9ReadImageENS_5mojom15ClipboardBufferE(%class.SkBitmap* sret, %"class.blink::SystemClipboard"*, i32) local_unnamed_addr #1

declare void @_ZN7SkImage14MakeFromBitmapERK8SkBitmap(%class.sk_sp.505* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* dereferenceable(32), %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_120ClipboardImageReader24EncodeOnBackgroundThreadE5sk_spI7SkImageEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.sk_sp.505* nocapture readonly, %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.411", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.411", align 8
  %7 = alloca %"class.base::OnceCallback.411", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent", align 8
  %9 = alloca %class.SkPixmap, align 8
  %10 = alloca %"struct.SkPngEncoder::Options", align 8
  %11 = alloca %"class.WTF::Vector.498", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent", align 8
  %15 = bitcast %class.SkPixmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 40, i1 false) #9
  %16 = getelementptr inbounds %class.sk_sp.505, %class.sk_sp.505* %0, i64 0, i32 0
  %17 = load %class.SkImage*, %class.SkImage** %16, align 8
  %18 = call zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage* %17, %class.SkPixmap* nonnull %9) #9
  %19 = bitcast %"struct.SkPngEncoder::Options"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %10, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %10, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %10, i64 0, i32 2, i32 0
  store %class.SkDataTable* null, %class.SkDataTable** %22, align 8
  store i32 1, i32* %21, align 4
  store i32 8, i32* %20, align 8
  %23 = bitcast %"class.WTF::Vector.498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 16, i1 false) #9
  %27 = call zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.498"* nonnull %11, %class.SkPixmap* nonnull dereferenceable(40) %9, %"struct.SkPngEncoder::Options"* nonnull dereferenceable(16) %10) #9
  %28 = load i32, i32* %25, align 8
  %29 = icmp eq i32 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %38, label %31

31:                                               ; preds = %3
  %32 = load i32, i32* %26, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %31
  store i32 0, i32* %26, align 4
  br label %35

35:                                               ; preds = %34, %31
  %36 = load i8*, i8** %24, align 8
  %37 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %25, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %36) #9
  br label %38

38:                                               ; preds = %35, %3
  %39 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 76) #9
  %40 = bitcast %"class.blink::CrossThreadPersistent"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageReader"* %1, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %42, align 8, !alias.scope !21
  %43 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %14, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %44, align 8, !alias.scope !21
  %45 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageReader"* %1 to i64
  switch i64 %45, label %46 [
    i64 0, label %65
    i64 -1, label %65
  ]

46:                                               ; preds = %38
  %47 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !21
  %48 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %47, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %48) #9, !noalias !21
  %49 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !21
  %50 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8, !noalias !21
  %52 = icmp eq %"class.blink::PersistentNode"* %51, null
  br i1 %52, label %53, label %56, !prof !3

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %49, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %54) #9
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  br label %56

56:                                               ; preds = %53, %46
  %57 = phi %"class.blink::PersistentNode"* [ %55, %53 ], [ %51, %46 ]
  %58 = bitcast %"class.blink::PersistentNode"* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !21
  %60 = bitcast %"class.blink::CrossThreadPersistentRegion"* %49 to i64*
  store i64 %59, i64* %60, align 8, !noalias !21
  %61 = bitcast %"class.blink::PersistentNode"* %57 to %"class.blink::PersistentBase.506"**
  store %"class.blink::PersistentBase.506"* %41, %"class.blink::PersistentBase.506"** %61, align 8, !noalias !21
  %62 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %57, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %62, align 8
  %63 = ptrtoint %"class.blink::PersistentNode"* %57 to i64
  %64 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %43 to i64*
  store atomic i64 %63, i64* %64 release, align 8, !alias.scope !21
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %48) #9
  br label %65

65:                                               ; preds = %38, %38, %56
  %66 = bitcast %"class.base::OnceCallback.411"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast %"class.blink::CrossThreadPersistent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #9, !noalias !24
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent"* nonnull %8, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %14) #9, !noalias !24
  %68 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !24
  store atomic i64 0, i64* %68 monotonic, align 8, !noalias !24
  %70 = load i32, i32* %25, align 8, !noalias !24
  store i32 0, i32* %25, align 8, !noalias !24
  %71 = load i32, i32* %26, align 4, !noalias !24
  store i32 0, i32* %26, align 4, !noalias !24
  %72 = call i8* @_Znwm(i64 80) #12, !noalias !27
  %73 = bitcast i8* %72 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %73, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !27
  %74 = getelementptr inbounds i8, i8* %72, i64 32
  %75 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> <i64 25, i64 0>, <2 x i64>* %75, align 8, !noalias !27
  %76 = getelementptr inbounds i8, i8* %72, i64 48
  %77 = bitcast i8* %76 to %"class.blink::CrossThreadPersistent"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent"* %77, %"class.blink::CrossThreadPersistent"* nonnull dereferenceable(16) %8) #9, !noalias !27
  %78 = getelementptr inbounds i8, i8* %72, i64 64
  %79 = getelementptr inbounds i8, i8* %72, i64 72
  %80 = bitcast i8* %79 to i32*
  %81 = getelementptr inbounds i8, i8* %72, i64 76
  %82 = bitcast i8* %81 to i32*
  %83 = bitcast i8* %78 to i64*
  store atomic i64 %69, i64* %83 monotonic, align 8, !noalias !27
  store i32 %70, i32* %80, align 4, !noalias !27
  store i32 %71, i32* %82, align 4, !noalias !27
  %84 = bitcast %"class.base::OnceCallback.411"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #9, !noalias !24
  %85 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0, i32 0, i32 0
  %86 = ptrtoint i8* %72 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8, !noalias !32
  %87 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  store i64 %86, i64* %88, align 8, !alias.scope !32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8, !noalias !32
  %89 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #9, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #9, !noalias !24
  %90 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %90) #9, !noalias !24
  %91 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %8, i64 0, i32 0, i32 1
  %92 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %91 to i64*
  %93 = load atomic i64, i64* %92 acquire, align 8, !noalias !24
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %65
  %96 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !24
  %97 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %96, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %97) #9, !noalias !24
  %98 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !24
  %99 = load atomic i64, i64* %92 monotonic, align 8, !noalias !24
  %100 = inttoptr i64 %99 to %"class.blink::PersistentNode"*
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %98, i64 0, i32 0, i32 0
  %104 = bitcast %"class.blink::CrossThreadPersistentRegion"* %98 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !24
  %106 = inttoptr i64 %99 to i64*
  store i64 %105, i64* %106, align 8, !noalias !24
  %107 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %100, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %107, align 8, !noalias !24
  store %"class.blink::PersistentNode"* %100, %"class.blink::PersistentNode"** %103, align 8, !noalias !24
  br label %108

108:                                              ; preds = %102, %95
  store atomic i64 0, i64* %92 release, align 8, !noalias !24
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %97) #9, !noalias !24
  br label %109

109:                                              ; preds = %65, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #9, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  %110 = bitcast %"class.base::OnceCallback.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %112 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %113 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %88, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %113, align 8
  %115 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.base::OnceCallback.411"* %4 to i64*
  store i64 %114, i64* %116, align 8, !alias.scope !35
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %115, align 8, !noalias !35
  %117 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)***
  %118 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*** %117, align 8
  %119 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)** %118, align 8
  %120 = call zeroext i1 %119(%"class.base::TaskRunner"* %112, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.411"* nonnull %4, i64 0) #9
  %121 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %121) #9
  %122 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %122) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  %123 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %123) #9
  %124 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %43 to i64*
  %125 = load atomic i64, i64* %124 acquire, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %141, label %127

127:                                              ; preds = %109
  %128 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %129 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %128, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %129) #9
  %130 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %131 = load atomic i64, i64* %124 monotonic, align 8
  %132 = inttoptr i64 %131 to %"class.blink::PersistentNode"*
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %130, i64 0, i32 0, i32 0
  %136 = bitcast %"class.blink::CrossThreadPersistentRegion"* %130 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = inttoptr i64 %131 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %139, align 8
  store %"class.blink::PersistentNode"* %132, %"class.blink::PersistentNode"** %135, align 8
  br label %140

140:                                              ; preds = %134, %127
  store atomic i64 0, i64* %124 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %129) #9
  br label %141

141:                                              ; preds = %109, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #9
  %142 = load i8*, i8** %24, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %149, label %144, !prof !2

144:                                              ; preds = %141
  %145 = load i32, i32* %26, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %144
  store i32 0, i32* %26, align 4
  br label %148

148:                                              ; preds = %147, %144
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %142) #9
  store i8* null, i8** %24, align 8
  br label %149

149:                                              ; preds = %141, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  %150 = load %class.SkDataTable*, %class.SkDataTable** %22, align 8
  %151 = icmp eq %class.SkDataTable* %150, null
  br i1 %151, label %162, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %150, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = atomicrmw add i32* %153, i32 -1 acq_rel
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %156, label %162

156:                                              ; preds = %152
  %157 = bitcast %class.SkDataTable* %150 to %class.SkRefCntBase*
  %158 = bitcast %class.SkDataTable* %150 to void (%class.SkRefCntBase*)***
  %159 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %158, align 8
  %160 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %159, i64 2
  %161 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, align 8
  call void %161(%class.SkRefCntBase* nonnull %157) #9
  br label %162

162:                                              ; preds = %149, %152, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  %163 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %164 = load %class.SkColorSpace*, %class.SkColorSpace** %163, align 8
  %165 = icmp eq %class.SkColorSpace* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 -1 acq_rel
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %172

170:                                              ; preds = %166
  %171 = bitcast %class.SkColorSpace* %164 to i8*
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %162, %166, %170
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #9
  %173 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %173, label %182, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = atomicrmw sub i32* %176, i32 1 acq_rel
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %182

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %175, i64 -2
  %181 = bitcast %"class.base::RefCountedThreadSafe"* %180 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %181) #9
  br label %182

182:                                              ; preds = %172, %174, %179
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS5_NS6_21CrossThreadPersistentIS8_EESC_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %class.sk_sp.505, align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%class.sk_sp.505*, %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.base::SingleThreadTaskRunner"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %class.sk_sp.505* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = load void (%class.sk_sp.505*, %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.base::SingleThreadTaskRunner"*)*, void (%class.sk_sp.505*, %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.base::SingleThreadTaskRunner"*)** %4, align 8
  %8 = bitcast void ()** %5 to %class.SkImage**
  %9 = bitcast void ()** %5 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkImage* null, %class.SkImage** %8, align 8
  %11 = bitcast %class.sk_sp.505* %2 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %13 = bitcast void ()** %12 to %"class.blink::(anonymous namespace)::ClipboardImageReader"**
  %14 = load %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %13, align 8
  %15 = getelementptr inbounds void ()*, void ()** %5, i64 3
  %16 = bitcast void ()** %15 to %"class.base::SingleThreadTaskRunner"**
  %17 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %16, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %16, align 8
  call void %7(%class.sk_sp.505* nonnull %2, %"class.blink::(anonymous namespace)::ClipboardImageReader"* %14, %"class.base::SingleThreadTaskRunner"* %17) #9
  %18 = getelementptr inbounds %class.sk_sp.505, %class.sk_sp.505* %2, i64 0, i32 0
  %19 = load %class.SkImage*, %class.SkImage** %18, align 8
  %20 = icmp eq %class.SkImage* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = bitcast %class.SkImage* %19 to %class.SkRefCntBase*
  %27 = bitcast %class.SkImage* %19 to void (%class.SkRefCntBase*)***
  %28 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, i64 2
  %30 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, align 8
  call void %30(%class.SkRefCntBase* nonnull %26) #9
  br label %31

31:                                               ; preds = %1, %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %18 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #9
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #9
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %37 = bitcast void ()** %36 to %class.SkImage**
  %38 = load %class.SkImage*, %class.SkImage** %37, align 8
  %39 = icmp eq %class.SkImage* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.SkImage, %class.SkImage* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkImage* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkImage* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  tail call void %49(%class.SkRefCntBase* nonnull %45) #9
  br label %50

50:                                               ; preds = %35, %40, %44
  %51 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_120ClipboardImageReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent"*, %"class.blink::CrossThreadPersistent"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardImageReader"* %8, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardImageReader"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #9
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.506"**
  store %"class.blink::PersistentBase.506"* %3, %"class.blink::PersistentBase.506"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #9
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_120ClipboardImageReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardImageReader"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.blink::(anonymous namespace)::ClipboardImageReader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardImageReader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardImageReader"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120ClipboardImageReaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_120ClipboardImageReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage10peekPixelsEP8SkPixmap(%class.SkImage*, %class.SkPixmap*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.498"*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %"class.WTF::Vector.498", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.523"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::Vector.498"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::ClipboardImageReader"*
  %17 = and i64 %8, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %8, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)**
  %25 = load void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)*, void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %8 to void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::ClipboardImageReader"*, %"class.WTF::Vector.498"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %33 = bitcast %"class.WTF::Vector.498"* %2 to i64*
  store i64 0, i64* %33, align 8
  %34 = load i64, i64* %32, align 8
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %34, i64* %33 monotonic, align 8
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %30, align 8
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.std::__1::tuple.523", %"class.std::__1::tuple.523"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %31, align 4
  store i32 0, i32* %38, align 4
  call void %29(%"class.blink::(anonymous namespace)::ClipboardImageReader"* %16, %"class.WTF::Vector.498"* nonnull %2) #9
  %40 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %48, label %43, !prof !2

43:                                               ; preds = %28
  %44 = load i32, i32* %31, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #9
  store i8* null, i8** %40, align 8
  br label %48

48:                                               ; preds = %28, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %15, label %8, !prof !2

8:                                                ; preds = %3
  %9 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.522"*
  %10 = getelementptr inbounds %"struct.base::internal::BindState.522", %"struct.base::internal::BindState.522"* %9, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store i8* null, i8** %5, align 8
  br label %15

15:                                               ; preds = %14, %3
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %17 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9
  %23 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %24 = load atomic i64, i64* %17 monotonic, align 8
  %25 = inttoptr i64 %24 to %"class.blink::PersistentNode"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CrossThreadPersistentRegion"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %24 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %27, %20
  store atomic i64 0, i64* %17 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  br label %34

34:                                               ; preds = %15, %33
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

declare %"class.blink::Blob"* @_ZN5blink4Blob6CreateEPKhmRKN3WTF6StringE(i8*, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink16ClipboardPromise6OnReadEPNS_4BlobE(%"class.blink::ClipboardPromise"*, %"class.blink::Blob"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15ClipboardReaderD2Ev(%"class.blink::ClipboardReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ClipboardReader", %"class.blink::ClipboardReader"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextReaderD0Ev(%"class.blink::(anonymous namespace)::ClipboardTextReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextReader", %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextReader", %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextReader4ReadEv(%"class.blink::(anonymous namespace)::ClipboardTextReader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.411", align 8
  %3 = alloca %"class.base::OnceCallback.411", align 8
  %4 = alloca %"class.blink::CrossThreadPersistent.532", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::Vector.498", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.blink::CrossThreadPersistent.532", align 8
  %10 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextReader", %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard13ReadPlainTextENS_5mojom15ClipboardBufferE(%"class.blink::SystemClipboard"* %13, i32 0) #9
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %11, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %1, %16
  %21 = bitcast %"class.WTF::Vector.498"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink12_GLOBAL__N_119ClipboardTextReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, %"class.WTF::Vector.498"* nonnull %6)
  br label %117

22:                                               ; preds = %16
  %23 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 115) #9
  %24 = bitcast %"class.blink::CrossThreadPersistent.532"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %9, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %9, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %26, align 8, !alias.scope !38
  %27 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %9, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %28, align 8, !alias.scope !38
  %29 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0 to i64
  switch i64 %29, label %30 [
    i64 0, label %49
    i64 -1, label %49
  ]

30:                                               ; preds = %22
  %31 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !38
  %32 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %31, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %32) #9, !noalias !38
  %33 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !38
  %34 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8, !noalias !38
  %36 = icmp eq %"class.blink::PersistentNode"* %35, null
  br i1 %36, label %37, label %40, !prof !3

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %38) #9
  %39 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  br label %40

40:                                               ; preds = %37, %30
  %41 = phi %"class.blink::PersistentNode"* [ %39, %37 ], [ %35, %30 ]
  %42 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !38
  %44 = bitcast %"class.blink::CrossThreadPersistentRegion"* %33 to i64*
  store i64 %43, i64* %44, align 8, !noalias !38
  %45 = bitcast %"class.blink::PersistentNode"* %41 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %25, %"class.blink::PersistentBase.533"** %45, align 8, !noalias !38
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  %47 = ptrtoint %"class.blink::PersistentNode"* %41 to i64
  %48 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %27 to i64*
  store atomic i64 %47, i64* %48 release, align 8, !alias.scope !38
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %32) #9
  br label %49

49:                                               ; preds = %22, %22, %40
  %50 = bitcast %"class.base::OnceCallback.411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* nonnull dereferenceable(8) %5) #9, !noalias !41
  %52 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %53 = bitcast %"class.blink::CrossThreadPersistent.532"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9, !noalias !41
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.532"* nonnull %4, %"class.blink::CrossThreadPersistent.532"* nonnull dereferenceable(16) %9) #9, !noalias !41
  %54 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextReader", %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, i64 0, i32 0, i32 1, i32 0
  %55 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %54, align 8, !noalias !41
  %56 = icmp eq %"class.base::SingleThreadTaskRunner"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %55, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic, !noalias !41
  br label %60

60:                                               ; preds = %57, %49
  %61 = ptrtoint %"class.base::SingleThreadTaskRunner"* %55 to i64
  %62 = call i8* @_Znwm(i64 72) #12, !noalias !44
  %63 = bitcast i8* %62 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %63, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !44
  %64 = getelementptr inbounds i8, i8* %62, i64 32
  %65 = bitcast i8* %64 to i64*
  store i64 ptrtoint (void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_119ClipboardTextReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %65, align 8, !noalias !44
  %66 = getelementptr inbounds i8, i8* %62, i64 40
  %67 = bitcast i8* %66 to i64*
  store i64 %52, i64* %67, align 8, !noalias !44
  %68 = getelementptr inbounds i8, i8* %62, i64 48
  %69 = bitcast i8* %68 to %"class.blink::CrossThreadPersistent.532"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.532"* %69, %"class.blink::CrossThreadPersistent.532"* nonnull dereferenceable(16) %4) #9, !noalias !44
  %70 = getelementptr inbounds i8, i8* %62, i64 64
  %71 = bitcast i8* %70 to i64*
  store i64 %61, i64* %71, align 8, !noalias !44
  %72 = bitcast %"class.base::OnceCallback.411"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #9, !noalias !41
  %73 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = ptrtoint i8* %62 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8, !noalias !49
  %75 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i64*
  store i64 %74, i64* %76, align 8, !alias.scope !49
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %75, align 8, !noalias !49
  %77 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #9, !noalias !49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #9, !noalias !41
  %78 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #9, !noalias !41
  %79 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %4, i64 0, i32 0, i32 1
  %80 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %79 to i64*
  %81 = load atomic i64, i64* %80 acquire, align 8, !noalias !41
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %60
  %84 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !41
  %85 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %84, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %85) #9, !noalias !41
  %86 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !41
  %87 = load atomic i64, i64* %80 monotonic, align 8, !noalias !41
  %88 = inttoptr i64 %87 to %"class.blink::PersistentNode"*
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %86, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::CrossThreadPersistentRegion"* %86 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !41
  %94 = inttoptr i64 %87 to i64*
  store i64 %93, i64* %94, align 8, !noalias !41
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %88, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8, !noalias !41
  store %"class.blink::PersistentNode"* %88, %"class.blink::PersistentNode"** %91, align 8, !noalias !41
  br label %96

96:                                               ; preds = %90, %83
  store atomic i64 0, i64* %80 release, align 8, !noalias !41
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %85) #9, !noalias !41
  br label %97

97:                                               ; preds = %60, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %7, %"class.WTF::CrossThreadOnceFunction"* nonnull %8) #9
  %98 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #9
  %99 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %27 to i64*
  %100 = load atomic i64, i64* %99 acquire, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %116, label %102

102:                                              ; preds = %97
  %103 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %104 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %103, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %104) #9
  %105 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %106 = load atomic i64, i64* %99 monotonic, align 8
  %107 = inttoptr i64 %106 to %"class.blink::PersistentNode"*
  %108 = icmp eq i64 %106, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %105, i64 0, i32 0, i32 0
  %111 = bitcast %"class.blink::CrossThreadPersistentRegion"* %105 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = inttoptr i64 %106 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %107, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %114, align 8
  store %"class.blink::PersistentNode"* %107, %"class.blink::PersistentNode"** %110, align 8
  br label %115

115:                                              ; preds = %109, %102
  store atomic i64 0, i64* %99 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %104) #9
  br label %116

116:                                              ; preds = %97, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  br label %117

117:                                              ; preds = %20, %116
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #9
  br label %133

133:                                              ; preds = %117, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardTextReader"* nocapture readonly, %"class.WTF::Vector.498"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %12) #9
  %13 = call %"class.blink::Blob"* @_ZN5blink4Blob6CreateEPKhmRKN3WTF6StringE(i8* %9, i64 %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %7, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %31

31:                                               ; preds = %2, %30
  %32 = phi %"class.blink::Blob"* [ %13, %30 ], [ null, %2 ]
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardTextReader", %"class.blink::(anonymous namespace)::ClipboardTextReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %33, align 8
  call void @_ZN5blink16ClipboardPromise6OnReadEPNS_4BlobE(%"class.blink::ClipboardPromise"* %34, %"class.blink::Blob"* %32) #9
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard13ReadPlainTextENS_5mojom15ClipboardBufferE(%"class.blink::SystemClipboard"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardTextReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.411", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.411", align 8
  %7 = alloca %"class.base::OnceCallback.411", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent.532", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %11 = alloca %"class.WTF::Vector.498", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent.532", align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.WTF::StringUTF8Adaptor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0) #9
  %17 = bitcast %"class.WTF::Vector.498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %3
  %25 = zext i32 %22 to i64
  %26 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %25) #9
  %27 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = trunc i64 %26 to i32
  store i32 %30, i32* %19, align 8
  %31 = load i32, i32* %21, align 8
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32 [ 0, %3 ], [ %31, %24 ]
  %34 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.498"* nonnull %11, i8* %35, i32 %33)
  %36 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 134) #9
  %37 = bitcast %"class.blink::CrossThreadPersistent.532"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %14, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %14, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextReader"* %1, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %39, align 8, !alias.scope !52
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %14, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8, !alias.scope !52
  %42 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextReader"* %1 to i64
  switch i64 %42, label %43 [
    i64 0, label %62
    i64 -1, label %62
  ]

43:                                               ; preds = %32
  %44 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !52
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #9, !noalias !52
  %46 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !52
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8, !noalias !52
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %50, label %53, !prof !3

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %51) #9
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  br label %53

53:                                               ; preds = %50, %43
  %54 = phi %"class.blink::PersistentNode"* [ %52, %50 ], [ %48, %43 ]
  %55 = bitcast %"class.blink::PersistentNode"* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !52
  %57 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  store i64 %56, i64* %57, align 8, !noalias !52
  %58 = bitcast %"class.blink::PersistentNode"* %54 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %38, %"class.blink::PersistentBase.533"** %58, align 8, !noalias !52
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  %60 = ptrtoint %"class.blink::PersistentNode"* %54 to i64
  %61 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  store atomic i64 %60, i64* %61 release, align 8, !alias.scope !52
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #9
  br label %62

62:                                               ; preds = %32, %32, %53
  %63 = bitcast %"class.base::OnceCallback.411"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.blink::CrossThreadPersistent.532"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9, !noalias !55
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.532"* nonnull %8, %"class.blink::CrossThreadPersistent.532"* nonnull dereferenceable(16) %14) #9, !noalias !55
  %65 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !55
  store atomic i64 0, i64* %65 monotonic, align 8, !noalias !55
  %67 = load i32, i32* %19, align 8, !noalias !55
  store i32 0, i32* %19, align 8, !noalias !55
  %68 = load i32, i32* %20, align 4, !noalias !55
  store i32 0, i32* %20, align 4, !noalias !55
  %69 = call i8* @_Znwm(i64 80) #12, !noalias !58
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !58
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 25, i64 0>, <2 x i64>* %72, align 8, !noalias !58
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast i8* %73 to %"class.blink::CrossThreadPersistent.532"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.532"* %74, %"class.blink::CrossThreadPersistent.532"* nonnull dereferenceable(16) %8) #9, !noalias !58
  %75 = getelementptr inbounds i8, i8* %69, i64 64
  %76 = getelementptr inbounds i8, i8* %69, i64 72
  %77 = bitcast i8* %76 to i32*
  %78 = getelementptr inbounds i8, i8* %69, i64 76
  %79 = bitcast i8* %78 to i32*
  %80 = bitcast i8* %75 to i64*
  store atomic i64 %66, i64* %80 monotonic, align 8, !noalias !58
  store i32 %67, i32* %77, align 4, !noalias !58
  store i32 %68, i32* %79, align 4, !noalias !58
  %81 = bitcast %"class.base::OnceCallback.411"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #9, !noalias !55
  %82 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0, i32 0, i32 0
  %83 = ptrtoint i8* %69 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %82, align 8, !noalias !63
  %84 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  store i64 %83, i64* %85, align 8, !alias.scope !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8, !noalias !63
  %86 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #9, !noalias !63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9, !noalias !55
  %87 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #9, !noalias !55
  %88 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %8, i64 0, i32 0, i32 1
  %89 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %88 to i64*
  %90 = load atomic i64, i64* %89 acquire, align 8, !noalias !55
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %62
  %93 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !55
  %94 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %93, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !55
  %95 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !55
  %96 = load atomic i64, i64* %89 monotonic, align 8, !noalias !55
  %97 = inttoptr i64 %96 to %"class.blink::PersistentNode"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %95, i64 0, i32 0, i32 0
  %101 = bitcast %"class.blink::CrossThreadPersistentRegion"* %95 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !55
  %103 = inttoptr i64 %96 to i64*
  store i64 %102, i64* %103, align 8, !noalias !55
  %104 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %104, align 8, !noalias !55
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %100, align 8, !noalias !55
  br label %105

105:                                              ; preds = %99, %92
  store atomic i64 0, i64* %89 release, align 8, !noalias !55
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !55
  br label %106

106:                                              ; preds = %62, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9, !noalias !55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %107 = bitcast %"class.base::OnceCallback.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %108 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %110 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %85, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8
  %112 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.base::OnceCallback.411"* %4 to i64*
  store i64 %111, i64* %113, align 8, !alias.scope !66
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %112, align 8, !noalias !66
  %114 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)***
  %115 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*** %114, align 8
  %116 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)** %115, align 8
  %117 = call zeroext i1 %116(%"class.base::TaskRunner"* %109, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.411"* nonnull %4, i64 0) #9
  %118 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #9
  %119 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  %120 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #9
  %121 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  %122 = load atomic i64, i64* %121 acquire, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %106
  %125 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %126 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %125, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %126) #9
  %127 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %128 = load atomic i64, i64* %121 monotonic, align 8
  %129 = inttoptr i64 %128 to %"class.blink::PersistentNode"*
  %130 = icmp eq i64 %128, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %127, i64 0, i32 0, i32 0
  %133 = bitcast %"class.blink::CrossThreadPersistentRegion"* %127 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = inttoptr i64 %128 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %129, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %136, align 8
  store %"class.blink::PersistentNode"* %129, %"class.blink::PersistentNode"** %132, align 8
  br label %137

137:                                              ; preds = %131, %124
  store atomic i64 0, i64* %121 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %126) #9
  br label %138

138:                                              ; preds = %106, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  %139 = load i8*, i8** %18, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %146, label %141, !prof !2

141:                                              ; preds = %138
  %142 = load i32, i32* %20, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144, !prof !3

144:                                              ; preds = %141
  store i32 0, i32* %20, align 4
  br label %145

145:                                              ; preds = %144, %141
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %139) #9
  store i8* null, i8** %18, align 8
  br label %146

146:                                              ; preds = %138, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  %147 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %147, label %156, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw sub i32* %150, i32 1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 -2
  %155 = bitcast %"class.base::RefCountedThreadSafe"* %154 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %155) #9
  br label %156

156:                                              ; preds = %146, %148, %153
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %156, %168, %171
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.base::SingleThreadTaskRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.base::SingleThreadTaskRunner"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to %"class.blink::(anonymous namespace)::ClipboardTextReader"**
  %10 = load %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %12 = bitcast void ()** %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %12, align 8
  tail call void %5(%"class.WTF::StringImpl"* %7, %"class.blink::(anonymous namespace)::ClipboardTextReader"* %10, %"class.base::SingleThreadTaskRunner"* %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %55, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %18 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #9
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #9
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %37 = bitcast void ()** %36 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %35, %49, %52
  %54 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardTextReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.532"*, %"class.blink::CrossThreadPersistent.532"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent.532"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardTextReader"* %8, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardTextReader"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent.532"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #9
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.533"**
  store %"class.blink::PersistentBase.533"* %3, %"class.blink::PersistentBase.533"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.532", %"class.blink::CrossThreadPersistent.532"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardTextReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardTextReader"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.blink::(anonymous namespace)::ClipboardTextReader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardTextReader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardTextReader"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardTextReaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardTextReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.498"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %46

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %46, !prof !2

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::Vector.498"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %10, align 8
  br label %46

33:                                               ; preds = %22
  %34 = load i8*, i8** %23, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #9
  %41 = load i8*, i8** %23, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #9
  %44 = bitcast %"class.WTF::Vector.498"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %10, align 8
  br label %46

46:                                               ; preds = %42, %30, %13, %3
  %47 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  %49 = load i32, i32* %7, align 4
  %50 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = icmp ult i32 %9, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* null, i8** %48, align 8
  br label %62

53:                                               ; preds = %46
  %54 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  %55 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %49) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %54, i8* %55) #9
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* %57, i8** %48, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #9
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #9
  br label %62

62:                                               ; preds = %52, %53, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  %63 = zext i32 %2 to i64
  %64 = getelementptr inbounds i8, i8* %1, i64 %63
  %65 = icmp eq i32 %2, 0
  br i1 %65, label %170, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = load i32, i32* %7, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = icmp ult i32 %2, 32
  br i1 %72, label %160, label %73

73:                                               ; preds = %66
  %74 = add nuw nsw i64 %70, %63
  %75 = getelementptr i8, i8* %68, i64 %74
  %76 = icmp ult i8* %71, %64
  %77 = icmp ugt i8* %75, %1
  %78 = and i1 %76, %77
  br i1 %78, label %160, label %79

79:                                               ; preds = %73
  %80 = and i64 %63, 4294967264
  %81 = getelementptr i8, i8* %71, i64 %80
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = add nsw i64 %80, -32
  %84 = lshr exact i64 %83, 5
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp ult i64 %83, 96
  br i1 %87, label %139, label %88

88:                                               ; preds = %79
  %89 = sub nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %136, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %137, %90 ]
  %93 = getelementptr i8, i8* %71, i64 %91
  %94 = getelementptr i8, i8* %1, i64 %91
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !69
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !69
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !72, !noalias !69
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !72, !noalias !69
  %103 = or i64 %91, 32
  %104 = getelementptr i8, i8* %71, i64 %103
  %105 = getelementptr i8, i8* %1, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !69
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !69
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !72, !noalias !69
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !72, !noalias !69
  %114 = or i64 %91, 64
  %115 = getelementptr i8, i8* %71, i64 %114
  %116 = getelementptr i8, i8* %1, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !69
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !69
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !72, !noalias !69
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !72, !noalias !69
  %125 = or i64 %91, 96
  %126 = getelementptr i8, i8* %71, i64 %125
  %127 = getelementptr i8, i8* %1, i64 %125
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !69
  %130 = getelementptr i8, i8* %127, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !alias.scope !69
  %133 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 1, !alias.scope !72, !noalias !69
  %134 = getelementptr i8, i8* %126, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %135, align 1, !alias.scope !72, !noalias !69
  %136 = add i64 %91, 128
  %137 = add i64 %92, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %90, !llvm.loop !74

139:                                              ; preds = %90, %79
  %140 = phi i64 [ 0, %79 ], [ %136, %90 ]
  %141 = icmp eq i64 %86, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %139, %142
  %143 = phi i64 [ %155, %142 ], [ %140, %139 ]
  %144 = phi i64 [ %156, %142 ], [ %86, %139 ]
  %145 = getelementptr i8, i8* %71, i64 %143
  %146 = getelementptr i8, i8* %1, i64 %143
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !69
  %149 = getelementptr i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !69
  %152 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !72, !noalias !69
  %153 = getelementptr i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %154, align 1, !alias.scope !72, !noalias !69
  %155 = add i64 %143, 32
  %156 = add i64 %144, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %142, !llvm.loop !76

158:                                              ; preds = %142, %139
  %159 = icmp eq i64 %80, %63
  br i1 %159, label %170, label %160

160:                                              ; preds = %158, %73, %66
  %161 = phi i8* [ %71, %73 ], [ %71, %66 ], [ %81, %158 ]
  %162 = phi i8* [ %1, %73 ], [ %1, %66 ], [ %82, %158 ]
  br label %163

163:                                              ; preds = %160, %163
  %164 = phi i8* [ %167, %163 ], [ %161, %160 ]
  %165 = phi i8* [ %168, %163 ], [ %162, %160 ]
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = getelementptr inbounds i8, i8* %164, i64 1
  %168 = getelementptr inbounds i8, i8* %165, i64 1
  %169 = icmp eq i8* %168, %64
  br i1 %169, label %170, label %163, !llvm.loop !78

170:                                              ; preds = %163, %158, %62
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %"class.WTF::Vector.498", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.541"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::Vector.498"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::ClipboardTextReader"*
  %17 = and i64 %8, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %8, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)**
  %25 = load void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)*, void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %8 to void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::ClipboardTextReader"*, %"class.WTF::Vector.498"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %33 = bitcast %"class.WTF::Vector.498"* %2 to i64*
  store i64 0, i64* %33, align 8
  %34 = load i64, i64* %32, align 8
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %34, i64* %33 monotonic, align 8
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %30, align 8
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.std::__1::tuple.541", %"class.std::__1::tuple.541"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %31, align 4
  store i32 0, i32* %38, align 4
  call void %29(%"class.blink::(anonymous namespace)::ClipboardTextReader"* %16, %"class.WTF::Vector.498"* nonnull %2) #9
  %40 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %48, label %43, !prof !2

43:                                               ; preds = %28
  %44 = load i32, i32* %31, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #9
  store i8* null, i8** %40, align 8
  br label %48

48:                                               ; preds = %28, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %15, label %8, !prof !2

8:                                                ; preds = %3
  %9 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.540"*
  %10 = getelementptr inbounds %"struct.base::internal::BindState.540", %"struct.base::internal::BindState.540"* %9, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store i8* null, i8** %5, align 8
  br label %15

15:                                               ; preds = %14, %3
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %17 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9
  %23 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %24 = load atomic i64, i64* %17 monotonic, align 8
  %25 = inttoptr i64 %24 to %"class.blink::PersistentNode"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CrossThreadPersistentRegion"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %24 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %27, %20
  store atomic i64 0, i64* %17 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  br label %34

34:                                               ; preds = %15, %33
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReaderD0Ev(%"class.blink::(anonymous namespace)::ClipboardHtmlReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader4ReadEv(%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.411", align 8
  %3 = alloca %"class.base::OnceCallback.411", align 8
  %4 = alloca %"class.blink::CrossThreadPersistent.1518", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::HeapHashSet.1508", align 8
  %11 = alloca %"class.WTF::Vector.498", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent.1518", align 8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.blink::ClipboardPromise"** %15 to %"class.blink::ExecutionContextLifecycleObserver"**
  %17 = load %"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContextLifecycleObserver"** %16, align 8
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %17) #9
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 3
  %20 = bitcast %"class.blink::UseCounter"* %19 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* %19, i32 3362) #9
  %24 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %5) #9
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 0, i32* %6, align 4
  %26 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 0, i32* %7, align 4
  %27 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %29, align 8
  %31 = call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard8ReadHTMLERNS_4KURLERjS3_(%"class.blink::SystemClipboard"* %30, %"class.blink::KURL"* nonnull dereferenceable(112) %5, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7) #9
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %28, align 8
  %32 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %15, align 8
  %33 = call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %32) #9
  %34 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %33) #9
  %35 = load i32, i32* %6, align 4
  %36 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %1, %37
  %41 = phi i32 [ %39, %37 ], [ 0, %1 ]
  %42 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4
  %43 = call %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848) %34, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 %35, i32 %41, %"class.WTF::String"* dereferenceable(8) %42) #9
  %44 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %29, align 8
  call void @_ZN5blink15SystemClipboard24RecordClipboardImageUrlsEPNS_16DocumentFragmentE(%"class.blink::SystemClipboard"* %44, %"class.blink::DocumentFragment"* %43) #9
  %45 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %43, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::HeapHashSet.1508"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 20, i1 false) #9
  %49 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %47, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.1508"* nonnull %10) #9
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %46, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %40, %51
  %56 = bitcast %"class.WTF::Vector.498"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, %"class.WTF::Vector.498"* nonnull %11)
  br label %152

57:                                               ; preds = %51
  %58 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 188) #9
  %59 = bitcast %"class.blink::CrossThreadPersistent.1518"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #9
  %60 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %61, align 8, !alias.scope !79
  %62 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %63, align 8, !alias.scope !79
  %64 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0 to i64
  switch i64 %64, label %65 [
    i64 0, label %84
    i64 -1, label %84
  ]

65:                                               ; preds = %57
  %66 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !79
  %67 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %66, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %67) #9, !noalias !79
  %68 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !79
  %69 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8, !noalias !79
  %71 = icmp eq %"class.blink::PersistentNode"* %70, null
  br i1 %71, label %72, label %75, !prof !3

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %68, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %73) #9
  %74 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %69, align 8
  br label %75

75:                                               ; preds = %72, %65
  %76 = phi %"class.blink::PersistentNode"* [ %74, %72 ], [ %70, %65 ]
  %77 = bitcast %"class.blink::PersistentNode"* %76 to i64*
  %78 = load i64, i64* %77, align 8, !noalias !79
  %79 = bitcast %"class.blink::CrossThreadPersistentRegion"* %68 to i64*
  store i64 %78, i64* %79, align 8, !noalias !79
  %80 = bitcast %"class.blink::PersistentNode"* %76 to %"class.blink::PersistentBase.1519"**
  store %"class.blink::PersistentBase.1519"* %60, %"class.blink::PersistentBase.1519"** %80, align 8, !noalias !79
  %81 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %76, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardHtmlReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %81, align 8
  %82 = ptrtoint %"class.blink::PersistentNode"* %76 to i64
  %83 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %62 to i64*
  store atomic i64 %82, i64* %83 release, align 8, !alias.scope !79
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %67) #9
  br label %84

84:                                               ; preds = %57, %57, %75
  %85 = bitcast %"class.base::OnceCallback.411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = call %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* nonnull dereferenceable(8) %9) #9, !noalias !82
  %87 = ptrtoint %"class.WTF::StringImpl"* %86 to i64
  %88 = bitcast %"class.blink::CrossThreadPersistent.1518"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #9, !noalias !82
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardHtmlReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1518"* nonnull %4, %"class.blink::CrossThreadPersistent.1518"* nonnull dereferenceable(16) %14) #9, !noalias !82
  %89 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 1, i32 0
  %90 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %89, align 8, !noalias !82
  %91 = icmp eq %"class.base::SingleThreadTaskRunner"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 1 monotonic, !noalias !82
  br label %95

95:                                               ; preds = %92, %84
  %96 = ptrtoint %"class.base::SingleThreadTaskRunner"* %90 to i64
  %97 = call i8* @_Znwm(i64 72) #12, !noalias !85
  %98 = bitcast i8* %97 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %98, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !85
  %99 = getelementptr inbounds i8, i8* %97, i64 32
  %100 = bitcast i8* %99 to i64*
  store i64 ptrtoint (void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %100, align 8, !noalias !85
  %101 = getelementptr inbounds i8, i8* %97, i64 40
  %102 = bitcast i8* %101 to i64*
  store i64 %87, i64* %102, align 8, !noalias !85
  %103 = getelementptr inbounds i8, i8* %97, i64 48
  %104 = bitcast i8* %103 to %"class.blink::CrossThreadPersistent.1518"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardHtmlReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1518"* %104, %"class.blink::CrossThreadPersistent.1518"* nonnull dereferenceable(16) %4) #9, !noalias !85
  %105 = getelementptr inbounds i8, i8* %97, i64 64
  %106 = bitcast i8* %105 to i64*
  store i64 %96, i64* %106, align 8, !noalias !85
  %107 = bitcast %"class.base::OnceCallback.411"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #9, !noalias !82
  %108 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = ptrtoint i8* %97 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %108, align 8, !noalias !90
  %110 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  store i64 %109, i64* %111, align 8, !alias.scope !90
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8, !noalias !90
  %112 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %112) #9, !noalias !90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #9, !noalias !82
  %113 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %113) #9, !noalias !82
  %114 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %4, i64 0, i32 0, i32 1
  %115 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %114 to i64*
  %116 = load atomic i64, i64* %115 acquire, align 8, !noalias !82
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %95
  %119 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !82
  %120 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %119, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %120) #9, !noalias !82
  %121 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !82
  %122 = load atomic i64, i64* %115 monotonic, align 8, !noalias !82
  %123 = inttoptr i64 %122 to %"class.blink::PersistentNode"*
  %124 = icmp eq i64 %122, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %121, i64 0, i32 0, i32 0
  %127 = bitcast %"class.blink::CrossThreadPersistentRegion"* %121 to i64*
  %128 = load i64, i64* %127, align 8, !noalias !82
  %129 = inttoptr i64 %122 to i64*
  store i64 %128, i64* %129, align 8, !noalias !82
  %130 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %123, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %130, align 8, !noalias !82
  store %"class.blink::PersistentNode"* %123, %"class.blink::PersistentNode"** %126, align 8, !noalias !82
  br label %131

131:                                              ; preds = %125, %118
  store atomic i64 0, i64* %115 release, align 8, !noalias !82
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %120) #9, !noalias !82
  br label %132

132:                                              ; preds = %95, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #9, !noalias !82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %12, %"class.WTF::CrossThreadOnceFunction"* nonnull %13) #9
  %133 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #9
  %134 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %62 to i64*
  %135 = load atomic i64, i64* %134 acquire, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %132
  %138 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %139 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %138, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %139) #9
  %140 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %141 = load atomic i64, i64* %134 monotonic, align 8
  %142 = inttoptr i64 %141 to %"class.blink::PersistentNode"*
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %140, i64 0, i32 0, i32 0
  %146 = bitcast %"class.blink::CrossThreadPersistentRegion"* %140 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = inttoptr i64 %141 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %142, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %149, align 8
  store %"class.blink::PersistentNode"* %142, %"class.blink::PersistentNode"** %145, align 8
  br label %150

150:                                              ; preds = %144, %137
  store atomic i64 0, i64* %134 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %139) #9
  br label %151

151:                                              ; preds = %132, %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #9
  br label %152

152:                                              ; preds = %55, %151
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #9
  br label %168

168:                                              ; preds = %152, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %184, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #9
  br label %184

184:                                              ; preds = %168, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardHtmlReader"* nocapture readonly, %"class.WTF::Vector.498"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i64 %12) #9
  %13 = call %"class.blink::Blob"* @_ZN5blink4Blob6CreateEPKhmRKN3WTF6StringE(i8* %9, i64 %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %7, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %31

31:                                               ; preds = %2, %30
  %32 = phi %"class.blink::Blob"* [ %13, %30 ], [ null, %2 ]
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardHtmlReader", %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %33, align 8
  call void @_ZN5blink16ClipboardPromise6OnReadEPNS_4BlobE(%"class.blink::ClipboardPromise"* %34, %"class.blink::Blob"* %32) #9
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard8ReadHTMLERNS_4KURLERjS3_(%"class.blink::SystemClipboard"*, %"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"*) local_unnamed_addr #1

declare %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink15SystemClipboard24RecordClipboardImageUrlsEPNS_16DocumentFragmentE(%"class.blink::SystemClipboard"*, %"class.blink::DocumentFragment"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.1508"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_119ClipboardHtmlReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.411", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.411", align 8
  %7 = alloca %"class.base::OnceCallback.411", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent.1518", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %11 = alloca %"class.WTF::Vector.498", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent.1518", align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.WTF::StringUTF8Adaptor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0) #9
  %17 = bitcast %"class.WTF::Vector.498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %3
  %25 = zext i32 %22 to i64
  %26 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %25) #9
  %27 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = trunc i64 %26 to i32
  store i32 %30, i32* %19, align 8
  %31 = load i32, i32* %21, align 8
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32 [ 0, %3 ], [ %31, %24 ]
  %34 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.498"* nonnull %11, i8* %35, i32 %33)
  %36 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 208) #9
  %37 = bitcast %"class.blink::CrossThreadPersistent.1518"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %1, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %39, align 8, !alias.scope !93
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %14, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8, !alias.scope !93
  %42 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %1 to i64
  switch i64 %42, label %43 [
    i64 0, label %62
    i64 -1, label %62
  ]

43:                                               ; preds = %32
  %44 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !93
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #9, !noalias !93
  %46 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !93
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8, !noalias !93
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %50, label %53, !prof !3

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %51) #9
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  br label %53

53:                                               ; preds = %50, %43
  %54 = phi %"class.blink::PersistentNode"* [ %52, %50 ], [ %48, %43 ]
  %55 = bitcast %"class.blink::PersistentNode"* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !93
  %57 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  store i64 %56, i64* %57, align 8, !noalias !93
  %58 = bitcast %"class.blink::PersistentNode"* %54 to %"class.blink::PersistentBase.1519"**
  store %"class.blink::PersistentBase.1519"* %38, %"class.blink::PersistentBase.1519"** %58, align 8, !noalias !93
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardHtmlReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  %60 = ptrtoint %"class.blink::PersistentNode"* %54 to i64
  %61 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  store atomic i64 %60, i64* %61 release, align 8, !alias.scope !93
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #9
  br label %62

62:                                               ; preds = %32, %32, %53
  %63 = bitcast %"class.base::OnceCallback.411"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.blink::CrossThreadPersistent.1518"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9, !noalias !96
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardHtmlReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1518"* nonnull %8, %"class.blink::CrossThreadPersistent.1518"* nonnull dereferenceable(16) %14) #9, !noalias !96
  %65 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !96
  store atomic i64 0, i64* %65 monotonic, align 8, !noalias !96
  %67 = load i32, i32* %19, align 8, !noalias !96
  store i32 0, i32* %19, align 8, !noalias !96
  %68 = load i32, i32* %20, align 4, !noalias !96
  store i32 0, i32* %20, align 4, !noalias !96
  %69 = call i8* @_Znwm(i64 80) #12, !noalias !99
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !99
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 25, i64 0>, <2 x i64>* %72, align 8, !noalias !99
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast i8* %73 to %"class.blink::CrossThreadPersistent.1518"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardHtmlReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1518"* %74, %"class.blink::CrossThreadPersistent.1518"* nonnull dereferenceable(16) %8) #9, !noalias !99
  %75 = getelementptr inbounds i8, i8* %69, i64 64
  %76 = getelementptr inbounds i8, i8* %69, i64 72
  %77 = bitcast i8* %76 to i32*
  %78 = getelementptr inbounds i8, i8* %69, i64 76
  %79 = bitcast i8* %78 to i32*
  %80 = bitcast i8* %75 to i64*
  store atomic i64 %66, i64* %80 monotonic, align 8, !noalias !99
  store i32 %67, i32* %77, align 4, !noalias !99
  store i32 %68, i32* %79, align 4, !noalias !99
  %81 = bitcast %"class.base::OnceCallback.411"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #9, !noalias !96
  %82 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0, i32 0, i32 0
  %83 = ptrtoint i8* %69 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %82, align 8, !noalias !104
  %84 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  store i64 %83, i64* %85, align 8, !alias.scope !104
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8, !noalias !104
  %86 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #9, !noalias !104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9, !noalias !96
  %87 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #9, !noalias !96
  %88 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %8, i64 0, i32 0, i32 1
  %89 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %88 to i64*
  %90 = load atomic i64, i64* %89 acquire, align 8, !noalias !96
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %62
  %93 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !96
  %94 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %93, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !96
  %95 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !96
  %96 = load atomic i64, i64* %89 monotonic, align 8, !noalias !96
  %97 = inttoptr i64 %96 to %"class.blink::PersistentNode"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %95, i64 0, i32 0, i32 0
  %101 = bitcast %"class.blink::CrossThreadPersistentRegion"* %95 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !96
  %103 = inttoptr i64 %96 to i64*
  store i64 %102, i64* %103, align 8, !noalias !96
  %104 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %104, align 8, !noalias !96
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %100, align 8, !noalias !96
  br label %105

105:                                              ; preds = %99, %92
  store atomic i64 0, i64* %89 release, align 8, !noalias !96
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !96
  br label %106

106:                                              ; preds = %62, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9, !noalias !96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %107 = bitcast %"class.base::OnceCallback.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %108 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %110 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %85, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8
  %112 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.base::OnceCallback.411"* %4 to i64*
  store i64 %111, i64* %113, align 8, !alias.scope !107
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %112, align 8, !noalias !107
  %114 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)***
  %115 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*** %114, align 8
  %116 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)** %115, align 8
  %117 = call zeroext i1 %116(%"class.base::TaskRunner"* %109, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.411"* nonnull %4, i64 0) #9
  %118 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #9
  %119 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  %120 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #9
  %121 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  %122 = load atomic i64, i64* %121 acquire, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %106
  %125 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %126 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %125, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %126) #9
  %127 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %128 = load atomic i64, i64* %121 monotonic, align 8
  %129 = inttoptr i64 %128 to %"class.blink::PersistentNode"*
  %130 = icmp eq i64 %128, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %127, i64 0, i32 0, i32 0
  %133 = bitcast %"class.blink::CrossThreadPersistentRegion"* %127 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = inttoptr i64 %128 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %129, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %136, align 8
  store %"class.blink::PersistentNode"* %129, %"class.blink::PersistentNode"** %132, align 8
  br label %137

137:                                              ; preds = %131, %124
  store atomic i64 0, i64* %121 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %126) #9
  br label %138

138:                                              ; preds = %106, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  %139 = load i8*, i8** %18, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %146, label %141, !prof !2

141:                                              ; preds = %138
  %142 = load i32, i32* %20, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144, !prof !3

144:                                              ; preds = %141
  store i32 0, i32* %20, align 4
  br label %145

145:                                              ; preds = %144, %141
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %139) #9
  store i8* null, i8** %18, align 8
  br label %146

146:                                              ; preds = %138, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  %147 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %147, label %156, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw sub i32* %150, i32 1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 -2
  %155 = bitcast %"class.base::RefCountedThreadSafe"* %154 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %155) #9
  br label %156

156:                                              ; preds = %146, %148, %153
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %156, %168, %171
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.base::SingleThreadTaskRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.base::SingleThreadTaskRunner"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to %"class.blink::(anonymous namespace)::ClipboardHtmlReader"**
  %10 = load %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %12 = bitcast void ()** %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %12, align 8
  tail call void %5(%"class.WTF::StringImpl"* %7, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %10, %"class.base::SingleThreadTaskRunner"* %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %55, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %18 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #9
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #9
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %37 = bitcast void ()** %36 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %35, %49, %52
  %54 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_119ClipboardHtmlReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1518"*, %"class.blink::CrossThreadPersistent.1518"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent.1518"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %8, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent.1518"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #9
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.1519"**
  store %"class.blink::PersistentBase.1519"* %3, %"class.blink::PersistentBase.1519"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardHtmlReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1518", %"class.blink::CrossThreadPersistent.1518"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_119ClipboardHtmlReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardHtmlReader"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.blink::(anonymous namespace)::ClipboardHtmlReader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardHtmlReaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_119ClipboardHtmlReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %"class.WTF::Vector.498", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.1526"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::Vector.498"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::ClipboardHtmlReader"*
  %17 = and i64 %8, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %8, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)**
  %25 = load void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)*, void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %8 to void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::ClipboardHtmlReader"*, %"class.WTF::Vector.498"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %33 = bitcast %"class.WTF::Vector.498"* %2 to i64*
  store i64 0, i64* %33, align 8
  %34 = load i64, i64* %32, align 8
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %34, i64* %33 monotonic, align 8
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %30, align 8
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.std::__1::tuple.1526", %"class.std::__1::tuple.1526"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %31, align 4
  store i32 0, i32* %38, align 4
  call void %29(%"class.blink::(anonymous namespace)::ClipboardHtmlReader"* %16, %"class.WTF::Vector.498"* nonnull %2) #9
  %40 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %48, label %43, !prof !2

43:                                               ; preds = %28
  %44 = load i32, i32* %31, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #9
  store i8* null, i8** %40, align 8
  br label %48

48:                                               ; preds = %28, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %15, label %8, !prof !2

8:                                                ; preds = %3
  %9 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.1525"*
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1525", %"struct.base::internal::BindState.1525"* %9, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store i8* null, i8** %5, align 8
  br label %15

15:                                               ; preds = %14, %3
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %17 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9
  %23 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %24 = load atomic i64, i64* %17 monotonic, align 8
  %25 = inttoptr i64 %24 to %"class.blink::PersistentNode"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CrossThreadPersistentRegion"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %24 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %27, %20
  store atomic i64 0, i64* %17 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  br label %34

34:                                               ; preds = %15, %33
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReaderD0Ev(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink15ClipboardReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 1, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #9
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader4ReadEv(%"class.blink::(anonymous namespace)::ClipboardSvgReader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.1530", align 8
  %3 = alloca %"class.blink::Persistent.1531", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %4, align 8
  %6 = bitcast %"class.blink::Persistent.1531"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::Persistent.1531", %"class.blink::Persistent.1531"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::Persistent.1531", %"class.blink::Persistent.1531"* %3, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %8, align 8, !alias.scope !110
  %9 = getelementptr inbounds %"class.blink::Persistent.1531", %"class.blink::Persistent.1531"* %3, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8, !alias.scope !110
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0 to i64
  switch i64 %10, label %11 [
    i64 0, label %37
    i64 -1, label %37
  ]

11:                                               ; preds = %1
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !110
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #9, !noalias !110
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !3

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #9
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8, !noalias !110
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8, !noalias !110
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8, !noalias !110
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !3

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #9
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %18 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !110
  %34 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8, !noalias !110
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase.1532"**
  store %"class.blink::PersistentBase.1532"* %7, %"class.blink::PersistentBase.1532"** %35, align 8, !noalias !110
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %9, align 8, !alias.scope !110
  br label %37

37:                                               ; preds = %1, %1, %30
  %38 = getelementptr inbounds %"class.base::OnceCallback.1530", %"class.base::OnceCallback.1530"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %38, align 8, !alias.scope !113
  %39 = call i8* @_Znwm(i64 64) #12, !noalias !116
  %40 = bitcast i8* %39 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %40, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::String"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS3_10PersistentIS5_EEEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseES9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS2_10PersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !116
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader6OnReadERKN3WTF6StringE to i64), i64 0>, <2 x i64>* %42, align 8, !noalias !116
  %43 = getelementptr inbounds i8, i8* %39, i64 48
  %44 = bitcast %"class.blink::Persistent.1531"* %3 to i64*
  %45 = load i64, i64* %44, align 8, !noalias !116
  %46 = bitcast i8* %43 to i64*
  store i64 %45, i64* %46, align 8, !noalias !116
  %47 = getelementptr inbounds i8, i8* %39, i64 56
  %48 = bitcast i8* %47 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %48, align 8, !noalias !116
  switch i64 %45, label %49 [
    i64 0, label %75
    i64 -1, label %75
  ]

49:                                               ; preds = %37
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !116
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #9, !noalias !116
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9, !noalias !116
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #9, !noalias !116
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8, !noalias !116
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %60, align 8, !noalias !116
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8, !noalias !116
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %65, label %68, !prof !3

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %66) #9, !noalias !116
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8, !noalias !116
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi %"class.blink::PersistentNode"* [ %67, %65 ], [ %63, %56 ]
  %70 = bitcast %"class.blink::PersistentNode"* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !116
  %72 = bitcast %"class.blink::PersistentRegion"* %61 to i64*
  store i64 %71, i64* %72, align 8, !noalias !116
  %73 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 0
  store i8* %43, i8** %73, align 8, !noalias !116
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %74, align 8, !noalias !116
  store %"class.blink::PersistentNode"* %69, %"class.blink::PersistentNode"** %48, align 8, !noalias !116
  br label %75

75:                                               ; preds = %37, %37, %68
  %76 = bitcast %"class.base::OnceCallback.1530"* %2 to i8**
  store i8* %39, i8** %76, align 8, !alias.scope !116
  call void @_ZN5blink15SystemClipboard7ReadSvgEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::SystemClipboard"* %5, %"class.base::OnceCallback.1530"* nonnull %2) #9
  %77 = getelementptr inbounds %"class.base::OnceCallback.1530", %"class.base::OnceCallback.1530"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #9
  %78 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %79 = icmp eq %"class.blink::PersistentNode"* %78, null
  br i1 %79, label %99, label %80

80:                                               ; preds = %75
  %81 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %82 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %81, i64 0, i32 1
  %83 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %82) #9
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %87, !prof !3

85:                                               ; preds = %80
  %86 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %82, i8* %86) #9
  br label %87

87:                                               ; preds = %85, %80
  %88 = phi i8* [ %86, %85 ], [ %83, %80 ]
  %89 = bitcast i8* %88 to %"class.blink::ThreadState"**
  %90 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %91, align 8
  %93 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %94 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %92, i64 0, i32 0, i32 0
  %95 = bitcast %"class.blink::PersistentRegion"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.blink::PersistentNode"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %93, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %98, align 8
  store %"class.blink::PersistentNode"* %93, %"class.blink::PersistentNode"** %94, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  br label %99

99:                                               ; preds = %75, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* nocapture readonly, %"class.WTF::Vector.498"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = zext i32 %5 to i64
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0)) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImageSvgE, i64 0, i64 0), i64 %12) #9
  %13 = call %"class.blink::Blob"* @_ZN5blink4Blob6CreateEPKhmRKN3WTF6StringE(i8* %9, i64 %10, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %30

30:                                               ; preds = %7, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %31

31:                                               ; preds = %2, %30
  %32 = phi %"class.blink::Blob"* [ %13, %30 ], [ null, %2 ]
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %33, align 8
  call void @_ZN5blink16ClipboardPromise6OnReadEPNS_4BlobE(%"class.blink::ClipboardPromise"* %34, %"class.blink::Blob"* %32) #9
  ret void
}

declare void @_ZN5blink15SystemClipboard7ReadSvgEN4base12OnceCallbackIFvRKN3WTF6StringEEEE(%"class.blink::SystemClipboard"*, %"class.base::OnceCallback.1530"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader6OnReadERKN3WTF6StringE(%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"* dereferenceable(8)) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.411", align 8
  %4 = alloca %"class.base::OnceCallback.411", align 8
  %5 = alloca %"class.blink::CrossThreadPersistent.1540", align 8
  %6 = alloca %"class.WTF::Vector.498", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::HeapHashSet.1508", align 8
  %10 = alloca %"class.WTF::Vector.498", align 8
  %11 = alloca %"class.base::Location", align 8
  %12 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %13 = alloca %"class.blink::CrossThreadPersistent.1540", align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ClipboardPromise"*, %"class.blink::ClipboardPromise"** %14, align 8
  %16 = tail call %"class.blink::LocalFrame"* @_ZNK5blink16ClipboardPromise13GetLocalFrameEv(%"class.blink::ClipboardPromise"* %15) #9
  %17 = icmp eq %"class.blink::LocalFrame"* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.WTF::Vector.498"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, %"class.WTF::Vector.498"* nonnull %6)
  br label %157

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %7) #9
  %22 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %16) #9
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  br label %29

29:                                               ; preds = %20, %26
  %30 = phi i32 [ %28, %26 ], [ 0, %20 ]
  %31 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 4
  %32 = call %"class.blink::DocumentFragment"* @_ZN5blink44CreateSanitizedFragmentFromMarkupWithContextERNS_8DocumentERKN3WTF6StringEjjS5_(%"class.blink::Document"* dereferenceable(2848) %22, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i32 %30, %"class.WTF::String"* dereferenceable(8) %31) #9
  %33 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %32, i64 0, i32 0, i32 0
  %36 = bitcast %"class.blink::HeapHashSet.1508"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 20, i1 false) #9
  %37 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %35, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.1508"* nonnull %9) #9
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %34, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %29, %39
  %44 = bitcast %"class.WTF::Vector.498"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #9
  call void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader8NextReadEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, %"class.WTF::Vector.498"* nonnull %10)
  br label %140

45:                                               ; preds = %39
  %46 = bitcast %"class.base::Location"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 265) #9
  %47 = bitcast %"class.blink::CrossThreadPersistent.1540"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9
  %48 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %13, i64 0, i32 0
  %49 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %13, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %49, align 8, !alias.scope !121
  %50 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %13, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %51, align 8, !alias.scope !121
  %52 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0 to i64
  switch i64 %52, label %53 [
    i64 0, label %72
    i64 -1, label %72
  ]

53:                                               ; preds = %45
  %54 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !121
  %55 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %54, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %55) #9, !noalias !121
  %56 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !121
  %57 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %57, align 8, !noalias !121
  %59 = icmp eq %"class.blink::PersistentNode"* %58, null
  br i1 %59, label %60, label %63, !prof !3

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %56, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %61) #9
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %57, align 8
  br label %63

63:                                               ; preds = %60, %53
  %64 = phi %"class.blink::PersistentNode"* [ %62, %60 ], [ %58, %53 ]
  %65 = bitcast %"class.blink::PersistentNode"* %64 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !121
  %67 = bitcast %"class.blink::CrossThreadPersistentRegion"* %56 to i64*
  store i64 %66, i64* %67, align 8, !noalias !121
  %68 = bitcast %"class.blink::PersistentNode"* %64 to %"class.blink::PersistentBase.1541"**
  store %"class.blink::PersistentBase.1541"* %48, %"class.blink::PersistentBase.1541"** %68, align 8, !noalias !121
  %69 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %64, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %70 = ptrtoint %"class.blink::PersistentNode"* %64 to i64
  %71 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %50 to i64*
  store atomic i64 %70, i64* %71 release, align 8, !alias.scope !121
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %55) #9
  br label %72

72:                                               ; preds = %45, %45, %63
  %73 = bitcast %"class.base::OnceCallback.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = call %"class.WTF::StringImpl"* @_ZN3WTF17CrossThreadCopierINS_6StringEE4CopyERKS1_(%"class.WTF::String"* nonnull dereferenceable(8) %8) #9, !noalias !124
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = bitcast %"class.blink::CrossThreadPersistent.1540"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9, !noalias !124
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_118ClipboardSvgReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1540"* nonnull %5, %"class.blink::CrossThreadPersistent.1540"* nonnull dereferenceable(16) %13) #9, !noalias !124
  %77 = getelementptr inbounds %"class.blink::(anonymous namespace)::ClipboardSvgReader", %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %0, i64 0, i32 0, i32 1, i32 0
  %78 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %77, align 8, !noalias !124
  %79 = icmp eq %"class.base::SingleThreadTaskRunner"* %78, null
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic, !noalias !124
  br label %83

83:                                               ; preds = %80, %72
  %84 = ptrtoint %"class.base::SingleThreadTaskRunner"* %78 to i64
  %85 = call i8* @_Znwm(i64 72) #12, !noalias !127
  %86 = bitcast i8* %85 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %86, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !127
  %87 = getelementptr inbounds i8, i8* %85, i64 32
  %88 = bitcast i8* %87 to i64*
  store i64 ptrtoint (void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i64), i64* %88, align 8, !noalias !127
  %89 = getelementptr inbounds i8, i8* %85, i64 40
  %90 = bitcast i8* %89 to i64*
  store i64 %75, i64* %90, align 8, !noalias !127
  %91 = getelementptr inbounds i8, i8* %85, i64 48
  %92 = bitcast i8* %91 to %"class.blink::CrossThreadPersistent.1540"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_118ClipboardSvgReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1540"* %92, %"class.blink::CrossThreadPersistent.1540"* nonnull dereferenceable(16) %5) #9, !noalias !127
  %93 = getelementptr inbounds i8, i8* %85, i64 64
  %94 = bitcast i8* %93 to i64*
  store i64 %84, i64* %94, align 8, !noalias !127
  %95 = bitcast %"class.base::OnceCallback.411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9, !noalias !124
  %96 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0, i32 0, i32 0
  %97 = ptrtoint i8* %85 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %96, align 8, !noalias !132
  %98 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.WTF::CrossThreadOnceFunction"* %12 to i64*
  store i64 %97, i64* %99, align 8, !alias.scope !132
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %98, align 8, !noalias !132
  %100 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %100) #9, !noalias !132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9, !noalias !124
  %101 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %101) #9, !noalias !124
  %102 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %5, i64 0, i32 0, i32 1
  %103 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %102 to i64*
  %104 = load atomic i64, i64* %103 acquire, align 8, !noalias !124
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %120, label %106

106:                                              ; preds = %83
  %107 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !124
  %108 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %107, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %108) #9, !noalias !124
  %109 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !124
  %110 = load atomic i64, i64* %103 monotonic, align 8, !noalias !124
  %111 = inttoptr i64 %110 to %"class.blink::PersistentNode"*
  %112 = icmp eq i64 %110, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %109, i64 0, i32 0, i32 0
  %115 = bitcast %"class.blink::CrossThreadPersistentRegion"* %109 to i64*
  %116 = load i64, i64* %115, align 8, !noalias !124
  %117 = inttoptr i64 %110 to i64*
  store i64 %116, i64* %117, align 8, !noalias !124
  %118 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %111, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %118, align 8, !noalias !124
  store %"class.blink::PersistentNode"* %111, %"class.blink::PersistentNode"** %114, align 8, !noalias !124
  br label %119

119:                                              ; preds = %113, %106
  store atomic i64 0, i64* %103 release, align 8, !noalias !124
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %108) #9, !noalias !124
  br label %120

120:                                              ; preds = %83, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9, !noalias !124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  call void @_ZN5blink11worker_pool8PostTaskERKN4base8LocationEN3WTF23CrossThreadOnceFunctionIFvvEEE(%"class.base::Location"* nonnull dereferenceable(32) %11, %"class.WTF::CrossThreadOnceFunction"* nonnull %12) #9
  %121 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %121) #9
  %122 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %50 to i64*
  %123 = load atomic i64, i64* %122 acquire, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %120
  %126 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %127 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %126, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %127) #9
  %128 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %129 = load atomic i64, i64* %122 monotonic, align 8
  %130 = inttoptr i64 %129 to %"class.blink::PersistentNode"*
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %138, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %128, i64 0, i32 0, i32 0
  %134 = bitcast %"class.blink::CrossThreadPersistentRegion"* %128 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = inttoptr i64 %129 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %130, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %130, %"class.blink::PersistentNode"** %133, align 8
  br label %138

138:                                              ; preds = %132, %125
  store atomic i64 0, i64* %122 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %127) #9
  br label %139

139:                                              ; preds = %120, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #9
  br label %140

140:                                              ; preds = %43, %139
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #9
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %21) #9
  br label %157

157:                                              ; preds = %18, %156
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS3_10PersistentIS5_EEEEEFvS9_EE7RunOnceEPNS0_13BindStateBaseES9_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.blink::(anonymous namespace)::ClipboardSvgReader"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)**
  %22 = load void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)*, void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::String"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* %13, %"class.WTF::String"* dereferenceable(8) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS2_10PersistentIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !3

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardSvgReader"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_118ClipboardSvgReaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink10TraceTraitINS_12_GLOBAL__N_118ClipboardSvgReaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv) #9
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_118ClipboardSvgReader24EncodeOnBackgroundThreadEN3WTF6StringEPS1_13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.base::SingleThreadTaskRunner"*) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.411", align 8
  %5 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %6 = alloca %"class.base::OnceCallback.411", align 8
  %7 = alloca %"class.base::OnceCallback.411", align 8
  %8 = alloca %"class.blink::CrossThreadPersistent.1540", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %11 = alloca %"class.WTF::Vector.498", align 8
  %12 = alloca %"class.base::Location", align 8
  %13 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %14 = alloca %"class.blink::CrossThreadPersistent.1540", align 8
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %0, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.WTF::StringUTF8Adaptor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %10, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0) #9
  %17 = bitcast %"class.WTF::Vector.498"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %3
  %25 = zext i32 %22 to i64
  %26 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %25) #9
  %27 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = trunc i64 %26 to i32
  store i32 %30, i32* %19, align 8
  %31 = load i32, i32* %21, align 8
  br label %32

32:                                               ; preds = %3, %24
  %33 = phi i32 [ 0, %3 ], [ %31, %24 ]
  %34 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %10, i64 0, i32 1
  %35 = load i8*, i8** %34, align 8
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.498"* nonnull %11, i8* %35, i32 %33)
  %36 = bitcast %"class.base::Location"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4, i64 0, i64 0), i32 284) #9
  %37 = bitcast %"class.blink::CrossThreadPersistent.1540"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %14, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %14, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %1, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %39, align 8, !alias.scope !135
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %14, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8, !alias.scope !135
  %42 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %1 to i64
  switch i64 %42, label %43 [
    i64 0, label %62
    i64 -1, label %62
  ]

43:                                               ; preds = %32
  %44 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !135
  %45 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %44, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %45) #9, !noalias !135
  %46 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !135
  %47 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8, !noalias !135
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %50, label %53, !prof !3

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %46, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %51) #9
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  br label %53

53:                                               ; preds = %50, %43
  %54 = phi %"class.blink::PersistentNode"* [ %52, %50 ], [ %48, %43 ]
  %55 = bitcast %"class.blink::PersistentNode"* %54 to i64*
  %56 = load i64, i64* %55, align 8, !noalias !135
  %57 = bitcast %"class.blink::CrossThreadPersistentRegion"* %46 to i64*
  store i64 %56, i64* %57, align 8, !noalias !135
  %58 = bitcast %"class.blink::PersistentNode"* %54 to %"class.blink::PersistentBase.1541"**
  store %"class.blink::PersistentBase.1541"* %38, %"class.blink::PersistentBase.1541"** %58, align 8, !noalias !135
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %54, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %59, align 8
  %60 = ptrtoint %"class.blink::PersistentNode"* %54 to i64
  %61 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  store atomic i64 %60, i64* %61 release, align 8, !alias.scope !135
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %45) #9
  br label %62

62:                                               ; preds = %32, %32, %53
  %63 = bitcast %"class.base::OnceCallback.411"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.blink::CrossThreadPersistent.1540"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9, !noalias !138
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_118ClipboardSvgReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1540"* nonnull %8, %"class.blink::CrossThreadPersistent.1540"* nonnull dereferenceable(16) %14) #9, !noalias !138
  %65 = bitcast %"class.WTF::Vector.498"* %11 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !138
  store atomic i64 0, i64* %65 monotonic, align 8, !noalias !138
  %67 = load i32, i32* %19, align 8, !noalias !138
  store i32 0, i32* %19, align 8, !noalias !138
  %68 = load i32, i32* %20, align 4, !noalias !138
  store i32 0, i32* %20, align 4, !noalias !138
  %69 = call i8* @_Znwm(i64 80) #12, !noalias !141
  %70 = bitcast i8* %69 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %70, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !141
  %71 = getelementptr inbounds i8, i8* %69, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> <i64 25, i64 0>, <2 x i64>* %72, align 8, !noalias !141
  %73 = getelementptr inbounds i8, i8* %69, i64 48
  %74 = bitcast i8* %73 to %"class.blink::CrossThreadPersistent.1540"*
  call fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_118ClipboardSvgReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1540"* %74, %"class.blink::CrossThreadPersistent.1540"* nonnull dereferenceable(16) %8) #9, !noalias !141
  %75 = getelementptr inbounds i8, i8* %69, i64 64
  %76 = getelementptr inbounds i8, i8* %69, i64 72
  %77 = bitcast i8* %76 to i32*
  %78 = getelementptr inbounds i8, i8* %69, i64 76
  %79 = bitcast i8* %78 to i32*
  %80 = bitcast i8* %75 to i64*
  store atomic i64 %66, i64* %80 monotonic, align 8, !noalias !141
  store i32 %67, i32* %77, align 4, !noalias !141
  store i32 %68, i32* %79, align 4, !noalias !141
  %81 = bitcast %"class.base::OnceCallback.411"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #9, !noalias !138
  %82 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0, i32 0, i32 0
  %83 = ptrtoint i8* %69 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %82, align 8, !noalias !146
  %84 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::CrossThreadOnceFunction"* %13 to i64*
  store i64 %83, i64* %85, align 8, !alias.scope !146
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8, !noalias !146
  %86 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #9, !noalias !146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #9, !noalias !138
  %87 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #9, !noalias !138
  %88 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %8, i64 0, i32 0, i32 1
  %89 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %88 to i64*
  %90 = load atomic i64, i64* %89 acquire, align 8, !noalias !138
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %62
  %93 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !138
  %94 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %93, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !138
  %95 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9, !noalias !138
  %96 = load atomic i64, i64* %89 monotonic, align 8, !noalias !138
  %97 = inttoptr i64 %96 to %"class.blink::PersistentNode"*
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %95, i64 0, i32 0, i32 0
  %101 = bitcast %"class.blink::CrossThreadPersistentRegion"* %95 to i64*
  %102 = load i64, i64* %101, align 8, !noalias !138
  %103 = inttoptr i64 %96 to i64*
  store i64 %102, i64* %103, align 8, !noalias !138
  %104 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %97, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %104, align 8, !noalias !138
  store %"class.blink::PersistentNode"* %97, %"class.blink::PersistentNode"** %100, align 8, !noalias !138
  br label %105

105:                                              ; preds = %99, %92
  store atomic i64 0, i64* %89 release, align 8, !noalias !138
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %94) #9, !noalias !138
  br label %106

106:                                              ; preds = %62, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9, !noalias !138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %107 = bitcast %"class.base::OnceCallback.411"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107)
  %108 = bitcast %"class.WTF::CrossThreadOnceFunction"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108)
  %109 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to %"class.base::TaskRunner"*
  %110 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %85, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %110, align 8
  %112 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.base::OnceCallback.411"* %4 to i64*
  store i64 %111, i64* %113, align 8, !alias.scope !149
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %112, align 8, !noalias !149
  %114 = bitcast %"class.base::SingleThreadTaskRunner"* %2 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)***
  %115 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*** %114, align 8
  %116 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.411"*, i64)** %115, align 8
  %117 = call zeroext i1 %116(%"class.base::TaskRunner"* %109, %"class.base::Location"* nonnull dereferenceable(32) %12, %"class.base::OnceCallback.411"* nonnull %4, i64 0) #9
  %118 = getelementptr inbounds %"class.base::OnceCallback.411", %"class.base::OnceCallback.411"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %118) #9
  %119 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108)
  %120 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %13, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #9
  %121 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %40 to i64*
  %122 = load atomic i64, i64* %121 acquire, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %106
  %125 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %126 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %125, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %126) #9
  %127 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %128 = load atomic i64, i64* %121 monotonic, align 8
  %129 = inttoptr i64 %128 to %"class.blink::PersistentNode"*
  %130 = icmp eq i64 %128, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %127, i64 0, i32 0, i32 0
  %133 = bitcast %"class.blink::CrossThreadPersistentRegion"* %127 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = inttoptr i64 %128 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %129, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %136, align 8
  store %"class.blink::PersistentNode"* %129, %"class.blink::PersistentNode"** %132, align 8
  br label %137

137:                                              ; preds = %131, %124
  store atomic i64 0, i64* %121 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %126) #9
  br label %138

138:                                              ; preds = %106, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #9
  %139 = load i8*, i8** %18, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %146, label %141, !prof !2

141:                                              ; preds = %138
  %142 = load i32, i32* %20, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %145, label %144, !prof !3

144:                                              ; preds = %141
  store i32 0, i32* %20, align 4
  br label %145

145:                                              ; preds = %144, %141
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %139) #9
  store i8* null, i8** %18, align 8
  br label %146

146:                                              ; preds = %138, %145
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #9
  %147 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %147, label %156, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw sub i32* %150, i32 1 acq_rel
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %156

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %149, i64 -2
  %155 = bitcast %"class.base::RefCountedThreadSafe"* %154 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %155) #9
  br label %156

156:                                              ; preds = %146, %148, %153
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #9
  br label %172

172:                                              ; preds = %156, %168, %171
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.base::SingleThreadTaskRunner"*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = load void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.base::SingleThreadTaskRunner"*)*, void (%"class.WTF::StringImpl"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.base::SingleThreadTaskRunner"*)** %3, align 8
  %6 = bitcast void ()** %4 to %"class.WTF::StringImpl"**
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %9 = bitcast void ()** %8 to %"class.blink::(anonymous namespace)::ClipboardSvgReader"**
  %10 = load %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %9, align 8
  %11 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %12 = bitcast void ()** %11 to %"class.base::SingleThreadTaskRunner"**
  %13 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %12, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %12, align 8
  tail call void %5(%"class.WTF::StringImpl"* %7, %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %10, %"class.base::SingleThreadTaskRunner"* %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %55, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::SingleThreadTaskRunner"**
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #9
  br label %16

16:                                               ; preds = %13, %8, %3
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %18 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %17 to i64*
  %19 = load atomic i64, i64* %18 acquire, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %23 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %22, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %23) #9
  %24 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %25 = load atomic i64, i64* %18 monotonic, align 8
  %26 = inttoptr i64 %25 to %"class.blink::PersistentNode"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %24, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CrossThreadPersistentRegion"* %24 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = inttoptr i64 %25 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %29, align 8
  br label %34

34:                                               ; preds = %28, %21
  store atomic i64 0, i64* %18 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %23) #9
  br label %35

35:                                               ; preds = %34, %16
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %37 = bitcast void ()** %36 to %"class.WTF::StringImpl"**
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #9
  br label %53

53:                                               ; preds = %35, %49, %52
  %54 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %53, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink21CrossThreadPersistentINS_12_GLOBAL__N_118ClipboardSvgReaderEEC2ERKS3_(%"class.blink::CrossThreadPersistent.1540"*, %"class.blink::CrossThreadPersistent.1540"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::CrossThreadPersistent.1540"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #9
  %5 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %6 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %6) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %0, i64 0, i32 0, i32 0
  store %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %8, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %9, align 8
  %10 = ptrtoint %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %8 to i64
  switch i64 %10, label %11 [
    i64 0, label %35
    i64 -1, label %35
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %12 to i64*
  %14 = load atomic i64, i64* %13 acquire, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CrossThreadPersistent.1540"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %19 [
    i64 0, label %52
    i64 -1, label %52
  ]

19:                                               ; preds = %16
  %20 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #9
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %19 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::CrossThreadPersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase.1541"**
  store %"class.blink::PersistentBase.1541"* %3, %"class.blink::PersistentBase.1541"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  %34 = ptrtoint %"class.blink::PersistentNode"* %28 to i64
  store atomic i64 %34, i64* %13 release, align 8
  br label %52

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistent.1540", %"class.blink::CrossThreadPersistent.1540"* %0, i64 0, i32 0, i32 1
  %37 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %36 to i64*
  %38 = load atomic i64, i64* %37 acquire, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %42 = load atomic i64, i64* %37 monotonic, align 8
  %43 = inttoptr i64 %42 to %"class.blink::PersistentNode"*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %41, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::CrossThreadPersistentRegion"* %41 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %42 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %50, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %46, align 8
  br label %51

51:                                               ; preds = %45, %40
  store atomic i64 0, i64* %37 release, align 8
  br label %52

52:                                               ; preds = %11, %16, %16, %27, %35, %51
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12_GLOBAL__N_118ClipboardSvgReaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8* nocapture readonly) #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::(anonymous namespace)::ClipboardSvgReader"**
  %5 = load %"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.blink::(anonymous namespace)::ClipboardSvgReader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::(anonymous namespace)::ClipboardSvgReader"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12_GLOBAL__N_118ClipboardSvgReaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture) #0 align 2 {
  %2 = alloca %"class.WTF::Vector.498", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::tuple.1548"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.WTF::Vector.498"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::ClipboardSvgReader"*
  %17 = and i64 %8, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %8, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)**
  %25 = load void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)*, void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %8 to void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)*
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi void (%"class.blink::(anonymous namespace)::ClipboardSvgReader"*, %"class.WTF::Vector.498"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 2
  %32 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %33 = bitcast %"class.WTF::Vector.498"* %2 to i64*
  store i64 0, i64* %33, align 8
  %34 = load i64, i64* %32, align 8
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %34, i64* %33 monotonic, align 8
  %35 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 3
  %36 = bitcast void (%"class.base::internal::BindStateBase"*)** %35 to i32*
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %30, align 8
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.std::__1::tuple.1548", %"class.std::__1::tuple.1548"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %31, align 4
  store i32 0, i32* %38, align 4
  call void %29(%"class.blink::(anonymous namespace)::ClipboardSvgReader"* %16, %"class.WTF::Vector.498"* nonnull %2) #9
  %40 = getelementptr inbounds %"class.WTF::Vector.498", %"class.WTF::Vector.498"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %48, label %43, !prof !2

43:                                               ; preds = %28
  %44 = load i32, i32* %31, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !3

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  br label %47

47:                                               ; preds = %46, %43
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #9
  store i8* null, i8** %40, align 8
  br label %48

48:                                               ; preds = %28, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEJNS2_21CrossThreadPersistentIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %15, label %8, !prof !2

8:                                                ; preds = %3
  %9 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState.1547"*
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1547", %"struct.base::internal::BindState.1547"* %9, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !3

13:                                               ; preds = %8
  store i32 0, i32* %10, align 4
  br label %14

14:                                               ; preds = %13, %8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #9
  store i8* null, i8** %5, align 8
  br label %15

15:                                               ; preds = %14, %3
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %17 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9
  %23 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %24 = load atomic i64, i64* %17 monotonic, align 8
  %25 = inttoptr i64 %24 to %"class.blink::PersistentNode"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CrossThreadPersistentRegion"* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %24 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %25, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %25, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %27, %20
  store atomic i64 0, i64* %17 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  br label %34

34:                                               ; preds = %15, %33
  %35 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  br label %36

36:                                               ; preds = %34, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SystemClipboard"*
  tail call void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ClipboardPromiseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ClipboardPromise"*
  tail call void @_ZNK5blink16ClipboardPromise5TraceEPNS_7VisitorE(%"class.blink::ClipboardPromise"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink16ClipboardPromise5TraceEPNS_7VisitorE(%"class.blink::ClipboardPromise"*, %"class.blink::Visitor"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF28CrossThreadCopierPassThroughI5sk_spI7SkImageEE4CopyERKS3_"}
!10 = distinct !{!10, !11, !"_ZN3WTF19CrossThreadBindOnceIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EEKSB_EEEDaOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN3WTF19CrossThreadBindOnceIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EEKSB_EEEDaOT_DpOT0_"}
!12 = !{!10}
!13 = !{!14, !16, !10}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS5_NS6_21CrossThreadPersistentIS8_EESC_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS5_NS6_21CrossThreadPersistentIS8_EESC_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIPFv5sk_spI7SkImageEPN5blink12_GLOBAL__N_120ClipboardImageReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS3_NS4_21CrossThreadPersistentIS6_EESA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!18 = !{!19, !10}
!19 = distinct !{!19, !20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!23 = distinct !{!23, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_120ClipboardImageReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_"}
!27 = !{!28, !30, !25}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_120ClipboardImageReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!32 = !{!33, !25}
!33 = distinct !{!33, !34, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!37 = distinct !{!37, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!40 = distinct !{!40, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_"}
!44 = !{!45, !47, !42}
!45 = distinct !{!45, !46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_"}
!47 = distinct !{!47, !48, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardTextReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!49 = !{!50, !42}
!50 = distinct !{!50, !51, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!51 = distinct !{!51, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!54 = distinct !{!54, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardTextReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_: argument 0"}
!57 = distinct !{!57, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_"}
!58 = !{!59, !61, !56}
!59 = distinct !{!59, !60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_"}
!61 = distinct !{!61, !62, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardTextReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!63 = !{!64, !56}
!64 = distinct !{!64, !65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!65 = distinct !{!65, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!68 = distinct !{!68, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !75}
!75 = !{!"llvm.loop.isvectorized", i32 1}
!76 = distinct !{!76, !77}
!77 = !{!"llvm.loop.unroll.disable"}
!78 = distinct !{!78, !75}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardHtmlReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!81 = distinct !{!81, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardHtmlReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_: argument 0"}
!84 = distinct !{!84, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_"}
!85 = !{!86, !88, !83}
!86 = distinct !{!86, !87, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_: argument 0"}
!87 = distinct !{!87, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_"}
!88 = distinct !{!88, !89, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!89 = distinct !{!89, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_119ClipboardHtmlReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!90 = !{!91, !83}
!91 = distinct !{!91, !92, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!92 = distinct !{!92, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardHtmlReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!95 = distinct !{!95, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_119ClipboardHtmlReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_: argument 0"}
!98 = distinct !{!98, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_"}
!99 = !{!100, !102, !97}
!100 = distinct !{!100, !101, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!101 = distinct !{!101, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_"}
!102 = distinct !{!102, !103, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!103 = distinct !{!103, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_119ClipboardHtmlReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!104 = !{!105, !97}
!105 = distinct !{!105, !106, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!106 = distinct !{!106, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!109 = distinct !{!109, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN5blink22WrapPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_10PersistentIT_EEPS4_: argument 0"}
!112 = distinct !{!112, !"_ZN5blink22WrapPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_10PersistentIT_EEPS4_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKNS_6StringEEJNS1_10PersistentIS3_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!115 = distinct !{!115, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKNS_6StringEEJNS1_10PersistentIS3_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!116 = !{!117, !119, !114}
!117 = distinct !{!117, !118, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!118 = distinct !{!118, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS3_10PersistentIS5_EEEEEDcOT0_DpOT1_"}
!119 = distinct !{!119, !120, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!120 = distinct !{!120, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvRKN3WTF6StringEEJNS1_10PersistentIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!123 = distinct !{!123, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!124 = !{!125}
!125 = distinct !{!125, !126, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_: argument 0"}
!126 = distinct !{!126, !"_ZN3WTF19CrossThreadBindOnceIPFvNS_6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrIN4base22SingleThreadTaskRunnerEEEJS1_NS2_21CrossThreadPersistentIS4_EEKS9_EEEDaOT_DpOT0_"}
!127 = !{!128, !130, !125}
!128 = distinct !{!128, !129, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_: argument 0"}
!129 = distinct !{!129, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS4_NS5_21CrossThreadPersistentIS7_EESB_EEEDcOT0_DpOT1_"}
!130 = distinct !{!130, !131, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!131 = distinct !{!131, !"_ZN4base8BindOnceIPFvN3WTF6StringEPN5blink12_GLOBAL__N_118ClipboardSvgReaderE13scoped_refptrINS_22SingleThreadTaskRunnerEEEJS2_NS3_21CrossThreadPersistentIS5_EES9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!132 = !{!133, !125}
!133 = distinct !{!133, !134, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!134 = distinct !{!134, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_21CrossThreadPersistentIT_EEPS4_: argument 0"}
!137 = distinct !{!137, !"_ZN5blink33WrapCrossThreadPersistentInternalINS_12_GLOBAL__N_118ClipboardSvgReaderEEENS_21CrossThreadPersistentIT_EEPS4_"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_: argument 0"}
!140 = distinct !{!140, !"_ZN3WTF19CrossThreadBindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvNS_6VectorIhLj0ENS_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES6_EEEDaOT_DpOT0_"}
!141 = !{!142, !144, !139}
!142 = distinct !{!142, !143, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!143 = distinct !{!143, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS6_18PartitionAllocatorEEEEJNS3_21CrossThreadPersistentIS5_EES9_EEEDcOT0_DpOT1_"}
!144 = distinct !{!144, !145, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!145 = distinct !{!145, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_118ClipboardSvgReaderEFvN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEEEJNS1_21CrossThreadPersistentIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!146 = !{!147, !139}
!147 = distinct !{!147, !148, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!148 = distinct !{!148, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!151 = distinct !{!151, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
