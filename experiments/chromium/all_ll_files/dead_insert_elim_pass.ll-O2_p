; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/dead_insert_elim_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/dead_insert_elim_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::DeadInsertElimPass" = type { %"class.spvtools::opt::MemPass", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.932" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.932" = type { %"class.std::__1::__hash_table.933" }
%"class.std::__1::__hash_table.933" = type <{ %"class.std::__1::unique_ptr.934", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.949", %"class.std::__1::__compressed_pair.952", [4 x i8] }>
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936", %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"struct.std::__1::__hash_node_base.937"** }
%"struct.std::__1::__hash_node_base.937" = type { %"struct.std::__1::__hash_node_base.937"* }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.std::__1::__bucket_list_deallocator.939" }
%"class.std::__1::__bucket_list_deallocator.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"struct.std::__1::__hash_node_base.937" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"struct.std::__1::__less.999" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.957" = type { %"class.std::__1::__function::__policy_func.961" }
%"class.std::__1::__function::__policy_func.961" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.962", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.962" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::function.971" = type { %"class.std::__1::__function::__policy_func.975" }
%"class.std::__1::__function::__policy_func.975" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.976", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.976" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.979" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.979" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::function.1007" = type { %"class.std::__1::__function::__policy_func.1011" }
%"class.std::__1::__function::__policy_func.1011" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1012", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1012" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1000" = type { %"class.std::__1::__function::__policy_func.1004" }
%"class.std::__1::__function::__policy_func.1004" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1005", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1005" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }

$_ZN8spvtools3opt18DeadInsertElimPassD2Ev = comdat any

$_ZN8spvtools3opt18DeadInsertElimPassD0Ev = comdat any

$_ZNK8spvtools3opt18DeadInsertElimPass4nameEv = comdat any

$_ZN8spvtools3opt18DeadInsertElimPass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZTVN8spvtools3opt18DeadInsertElimPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::DeadInsertElimPass"*)* @_ZN8spvtools3opt18DeadInsertElimPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::DeadInsertElimPass"*)* @_ZN8spvtools3opt18DeadInsertElimPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::DeadInsertElimPass"*)* @_ZNK8spvtools3opt18DeadInsertElimPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::DeadInsertElimPass"*)* @_ZN8spvtools3opt18DeadInsertElimPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::DeadInsertElimPass"*)* @_ZN8spvtools3opt18DeadInsertElimPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [23 x i8] c"eliminate-dead-inserts\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEENK3$_0clEPNS5_11InstructionEEUlPKjE_FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass7ProcessEvE3$_2FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18DeadInsertElimPass13NumComponentsEPNS0_11InstructionE(%"class.spvtools::opt::DeadInsertElimPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %166 [
    i32 23, label %5
    i32 24, label %18
    i32 28, label %31
    i32 30, label %145
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = add nuw nsw i32 %15, 1
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #10
  br label %166

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = add nuw nsw i32 %28, 1
  %30 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %29) #10
  br label %166

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 1, i32 2
  %39 = xor i1 %37, true
  %40 = zext i1 %39 to i32
  %41 = select i1 %34, i32 %40, i32 %38
  %42 = add nuw nsw i32 %41, 1
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %42) #10
  %44 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %45 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %74

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %51, align 8
  %53 = tail call i8* @_Znwm(i64 104) #11
  %54 = bitcast i8* %53 to %"class.spvtools::opt::analysis::DefUseManager"*
  %55 = getelementptr inbounds i8, i8* %53, i64 32
  %56 = bitcast i8* %55 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %53, i64 48
  %58 = getelementptr inbounds i8, i8* %53, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %53, i64 64
  %61 = getelementptr inbounds i8, i8* %53, i64 96
  %62 = bitcast i8* %61 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %62, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %54, %"class.spvtools::opt::Module"* %52) #10
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 6
  %64 = ptrtoint i8* %53 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.62"* %63 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %66, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %50
  %70 = bitcast %"class.std::__1::unique_ptr.62"* %63 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %70, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %66) #10
  br label %71

71:                                               ; preds = %69, %50
  %72 = load i32, i32* %46, align 8
  %73 = or i32 %72, 1
  store i32 %73, i32* %46, align 8
  br label %74

74:                                               ; preds = %31, %71
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %45, i64 0, i32 6, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %75, align 8
  %77 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %76, i32 %43) #10
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 43
  br i1 %80, label %81, label %166

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 3
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %77, i32 0) #10
  br label %87

87:                                               ; preds = %81, %85
  %88 = phi i32 [ %86, %85 ], [ 0, %81 ]
  %89 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %44, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 11
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %118

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 4, i32 0, i32 0, i32 0
  %96 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %95, align 8
  %97 = tail call i8* @_Znwm(i64 104) #11
  %98 = bitcast i8* %97 to %"class.spvtools::opt::analysis::DefUseManager"*
  %99 = getelementptr inbounds i8, i8* %97, i64 32
  %100 = bitcast i8* %99 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %100, align 4
  %101 = getelementptr inbounds i8, i8* %97, i64 48
  %102 = getelementptr inbounds i8, i8* %97, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #10
  %103 = bitcast i8* %102 to i8**
  store i8* %101, i8** %103, align 8
  %104 = getelementptr inbounds i8, i8* %97, i64 64
  %105 = getelementptr inbounds i8, i8* %97, i64 96
  %106 = bitcast i8* %105 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %106, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %98, %"class.spvtools::opt::Module"* %96) #10
  %107 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 6
  %108 = ptrtoint i8* %97 to i64
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.62"* %107 to i64*
  store i64 %108, i64* %111, align 8
  %112 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %110, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %94
  %114 = bitcast %"class.std::__1::unique_ptr.62"* %107 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %114, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %110) #10
  br label %115

115:                                              ; preds = %113, %94
  %116 = load i32, i32* %90, align 8
  %117 = or i32 %116, 1
  store i32 %117, i32* %90, align 8
  br label %118

118:                                              ; preds = %87, %115
  %119 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 6, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %119, align 8
  %121 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %120, i32 %88) #10
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %121, i64 0, i32 3
  %123 = load i8, i8* %122, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %121, i64 0, i32 4
  %126 = load i8, i8* %125, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  %128 = select i1 %127, i32 1, i32 2
  %129 = xor i1 %127, true
  %130 = zext i1 %129 to i32
  %131 = select i1 %124, i32 %130, i32 %128
  %132 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %121, i32 %131) #10
  %133 = icmp eq i32 %132, 32
  br i1 %133, label %134, label %166

134:                                              ; preds = %118
  %135 = load i8, i8* %82, align 4, !range !2
  %136 = icmp eq i8 %135, 0
  %137 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 4
  %138 = load i8, i8* %137, align 1, !range !2
  %139 = icmp eq i8 %138, 0
  %140 = select i1 %139, i32 1, i32 2
  %141 = xor i1 %139, true
  %142 = zext i1 %141 to i32
  %143 = select i1 %136, i32 %142, i32 %140
  %144 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %77, i32 %143) #10
  br label %166

145:                                              ; preds = %2
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %148 = bitcast %"struct.spvtools::opt::Operand"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.std::__1::vector"* %146 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = sub i64 %149, %151
  %153 = sdiv exact i64 %152, 48
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %155 = load i8, i8* %154, align 4, !range !2
  %156 = icmp eq i8 %155, 0
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %158 = load i8, i8* %157, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  %160 = select i1 %159, i32 1, i32 2
  %161 = xor i1 %159, true
  %162 = zext i1 %161 to i32
  %163 = select i1 %156, i32 %162, i32 %160
  %164 = trunc i64 %153 to i32
  %165 = sub i32 %164, %163
  br label %166

166:                                              ; preds = %2, %74, %118, %134, %145, %18, %5
  %167 = phi i32 [ %165, %145 ], [ %30, %18 ], [ %17, %5 ], [ 0, %74 ], [ %144, %134 ], [ 0, %118 ], [ 0, %2 ]
  ret i32 %167
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.3"*, i32, %"class.std::__1::unordered_set.910"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::__less.999", align 1
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca %"class.std::__1::unordered_set.910", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::unordered_set.910", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::unordered_set.910", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::unordered_set.910", align 8
  %15 = alloca %"class.std::__1::unordered_set.910", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::vector.3", align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %19 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 11
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %25, align 8
  %27 = tail call i8* @_Znwm(i64 104) #11
  %28 = bitcast i8* %27 to %"class.spvtools::opt::analysis::DefUseManager"*
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %27, i64 48
  %32 = getelementptr inbounds i8, i8* %27, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #10
  %33 = bitcast i8* %32 to i8**
  store i8* %31, i8** %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 64
  %35 = getelementptr inbounds i8, i8* %27, i64 96
  %36 = bitcast i8* %35 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %36, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %28, %"class.spvtools::opt::Module"* %26) #10
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 6
  %38 = ptrtoint i8* %27 to i64
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %37, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.62"* %37 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %24
  %44 = bitcast %"class.std::__1::unique_ptr.62"* %37 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %44, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %40) #10
  br label %45

45:                                               ; preds = %43, %24
  %46 = load i32, i32* %20, align 8
  %47 = or i32 %46, 1
  store i32 %47, i32* %20, align 8
  br label %48

48:                                               ; preds = %5, %45
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 6, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #10
  br label %56

56:                                               ; preds = %48, %54
  %57 = phi i32 [ %55, %54 ], [ 0, %48 ]
  %58 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %50, i32 %57) #10
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 28
  br i1 %61, label %816, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %64 = load i32, i32* %63, align 8
  switch i32 %64, label %816 [
    i32 82, label %65
    i32 245, label %65
  ]

65:                                               ; preds = %62, %62
  %66 = icmp eq %"class.std::__1::vector.3"* %2, null
  br i1 %66, label %67, label %145

67:                                               ; preds = %65
  %68 = tail call i32 @_ZN8spvtools3opt18DeadInsertElimPass13NumComponentsEPNS0_11InstructionE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %58)
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = load i32, i32* %63, align 8
  br label %145

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 0, i64 24, i1 false) #10
  %77 = bitcast %"class.std::__1::vector.3"* %7 to i64*
  %78 = bitcast i32** %75 to i64*
  %79 = bitcast i32** %76 to i64*
  %80 = bitcast %"class.std::__1::unordered_set.910"* %8 to i8*
  %81 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 4, i64 0
  %84 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 3
  %85 = bitcast %"class.std::__1::__compressed_pair.929"* %84 to i32*
  %86 = bitcast i8* %83 to i32*
  br label %95

87:                                               ; preds = %138
  %88 = load i32*, i32** %74, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %87
  %91 = bitcast i32* %88 to i8*
  %92 = ptrtoint i32* %88 to i64
  %93 = bitcast i32** %75 to i64*
  store i64 %92, i64* %93, align 8
  call void @_ZdlPv(i8* %91) #11
  br label %94

94:                                               ; preds = %87, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  br label %816

95:                                               ; preds = %141, %72
  %96 = phi i32* [ null, %72 ], [ %144, %141 ]
  %97 = phi i32* [ null, %72 ], [ %143, %141 ]
  %98 = phi i64 [ 0, %72 ], [ %142, %141 ]
  %99 = phi i32 [ 0, %72 ], [ %139, %141 ]
  store i64 %98, i64* %78, align 8
  %100 = inttoptr i64 %98 to i32*
  %101 = icmp eq i32* %97, %100
  br i1 %101, label %105, label %102

102:                                              ; preds = %95
  store i32 %99, i32* %100, align 4
  %103 = getelementptr inbounds i32, i32* %100, i64 1
  %104 = ptrtoint i32* %103 to i64
  store i64 %104, i64* %78, align 8
  br label %124

105:                                              ; preds = %95
  %106 = call i8* @_Znwm(i64 4) #11
  %107 = bitcast i8* %106 to i32*
  %108 = getelementptr inbounds i8, i8* %106, i64 4
  %109 = ptrtoint i8* %108 to i64
  store i32 %99, i32* %107, align 4
  %110 = ptrtoint i32* %96 to i64
  %111 = sub i64 %98, %110
  %112 = ashr exact i64 %111, 2
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds i32, i32* %107, i64 %113
  %115 = ptrtoint i32* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %105
  %118 = bitcast i32* %114 to i8*
  %119 = bitcast i32* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %111, i1 false) #10
  br label %120

120:                                              ; preds = %117, %105
  store i64 %115, i64* %77, align 8
  store i64 %109, i64* %78, align 8
  store i64 %109, i64* %79, align 8
  %121 = icmp eq i32* %96, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %123) #11
  br label %124

124:                                              ; preds = %102, %120, %122
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #10
  store i32 -1431655766, i32* %86, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %85, align 8
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.3"* nonnull %7, i32 0, %"class.std::__1::unordered_set.910"* nonnull %8)
  %125 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %82, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.915"* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %124, %127
  %128 = phi %"struct.std::__1::__hash_node_base.915"* [ %130, %127 ], [ %125, %124 ]
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %128, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %129, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.915"* %128 to i8*
  call void @_ZdlPv(i8* %131) #11
  %132 = icmp eq %"struct.std::__1::__hash_node_base.915"* %130, null
  br i1 %132, label %133, label %127

133:                                              ; preds = %127, %124
  %134 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %81, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %81, align 8
  %135 = icmp eq %"struct.std::__1::__hash_node_base.915"** %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = bitcast %"struct.std::__1::__hash_node_base.915"** %134 to i8*
  call void @_ZdlPv(i8* %137) #11
  br label %138

138:                                              ; preds = %133, %136
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #10
  %139 = add nuw i32 %99, 1
  %140 = icmp eq i32 %139, %68
  br i1 %140, label %87, label %141

141:                                              ; preds = %138
  %142 = load i64, i64* %77, align 8
  %143 = load i32*, i32** %76, align 8
  %144 = inttoptr i64 %142 to i32*
  br label %95

145:                                              ; preds = %70, %65
  %146 = phi i32 [ %71, %70 ], [ %64, %65 ]
  %147 = icmp eq i32 %146, 82
  br i1 %147, label %148, label %517

148:                                              ; preds = %145
  %149 = bitcast i32* %13 to i8*
  %150 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %152 = bitcast i32** %151 to i64*
  %153 = bitcast %"class.std::__1::vector.3"* %2 to i64*
  %154 = zext i32 %3 to i64
  %155 = bitcast %"class.std::__1::unordered_set.910"* %15 to i8*
  %156 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0, i32 4, i64 0
  %159 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %15, i64 0, i32 0, i32 3
  %160 = bitcast %"class.std::__1::__compressed_pair.929"* %159 to i32*
  %161 = bitcast i32* %9 to i8*
  %162 = bitcast %"class.std::__1::unordered_set.910"* %10 to i8*
  %163 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %10, i64 0, i32 0, i32 4, i64 0
  %166 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %10, i64 0, i32 0, i32 3
  %167 = bitcast %"class.std::__1::__compressed_pair.929"* %166 to i32*
  %168 = bitcast i8* %158 to i32*
  %169 = bitcast i8* %165 to i32*
  br label %170

170:                                              ; preds = %148, %507
  %171 = phi i32* [ %63, %148 ], [ %511, %507 ]
  %172 = phi %"class.spvtools::opt::Instruction"* [ %1, %148 ], [ %510, %507 ]
  br i1 %66, label %173, label %241

173:                                              ; preds = %170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #10
  %174 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %175 = load i8, i8* %174, align 1, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %179 = load i8, i8* %178, align 4, !range !2
  %180 = zext i8 %179 to i32
  %181 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %180) #10
  br label %182

182:                                              ; preds = %173, %177
  %183 = phi i32 [ %181, %177 ], [ 0, %173 ]
  store i32 %183, i32* %9, align 4
  %184 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %150, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #10
  %185 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %186 = load i8, i8* %185, align 4, !range !2
  %187 = icmp eq i8 %186, 0
  %188 = load i8, i8* %174, align 1, !range !2
  %189 = icmp eq i8 %188, 0
  %190 = select i1 %189, i32 1, i32 2
  %191 = xor i1 %189, true
  %192 = zext i1 %191 to i32
  %193 = select i1 %187, i32 %192, i32 %190
  %194 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %193) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %162) #10
  store i32 -1431655766, i32* %169, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %167, align 8
  %195 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 11
  %197 = load i32, i32* %196, align 8
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %224

200:                                              ; preds = %182
  %201 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 4, i32 0, i32 0, i32 0
  %202 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %201, align 8
  %203 = call i8* @_Znwm(i64 104) #11
  %204 = bitcast i8* %203 to %"class.spvtools::opt::analysis::DefUseManager"*
  %205 = getelementptr inbounds i8, i8* %203, i64 32
  %206 = bitcast i8* %205 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %206, align 4
  %207 = getelementptr inbounds i8, i8* %203, i64 48
  %208 = getelementptr inbounds i8, i8* %203, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 16, i1 false) #10
  %209 = bitcast i8* %208 to i8**
  store i8* %207, i8** %209, align 8
  %210 = getelementptr inbounds i8, i8* %203, i64 64
  %211 = getelementptr inbounds i8, i8* %203, i64 96
  %212 = bitcast i8* %211 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %212, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %204, %"class.spvtools::opt::Module"* %202) #10
  %213 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 6
  %214 = ptrtoint i8* %203 to i64
  %215 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %213, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %215, align 8
  %217 = bitcast %"class.std::__1::unique_ptr.62"* %213 to i64*
  store i64 %214, i64* %217, align 8
  %218 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %216, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %200
  %220 = bitcast %"class.std::__1::unique_ptr.62"* %213 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %220, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %216) #10
  br label %221

221:                                              ; preds = %219, %200
  %222 = load i32, i32* %196, align 8
  %223 = or i32 %222, 1
  store i32 %223, i32* %196, align 8
  br label %224

224:                                              ; preds = %182, %221
  %225 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 6, i32 0, i32 0, i32 0
  %226 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %225, align 8
  %227 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %226, i32 %194) #10
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %227, %"class.std::__1::vector.3"* null, i32 0, %"class.std::__1::unordered_set.910"* nonnull %10)
  %228 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %164, align 8
  %229 = icmp eq %"struct.std::__1::__hash_node_base.915"* %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %224, %230
  %231 = phi %"struct.std::__1::__hash_node_base.915"* [ %233, %230 ], [ %228, %224 ]
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %231, i64 0, i32 0
  %233 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %232, align 8
  %234 = bitcast %"struct.std::__1::__hash_node_base.915"* %231 to i8*
  call void @_ZdlPv(i8* %234) #11
  %235 = icmp eq %"struct.std::__1::__hash_node_base.915"* %233, null
  br i1 %235, label %236, label %230

236:                                              ; preds = %230, %224
  %237 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %163, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %163, align 8
  %238 = icmp eq %"struct.std::__1::__hash_node_base.915"** %237, null
  br i1 %238, label %463, label %239

239:                                              ; preds = %236
  %240 = bitcast %"struct.std::__1::__hash_node_base.915"** %237 to i8*
  call void @_ZdlPv(i8* %240) #11
  br label %463

241:                                              ; preds = %170
  %242 = call zeroext i1 @_ZN8spvtools3opt11ExtInsMatchERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKNS0_11InstructionEj(%"class.std::__1::vector.3"* nonnull dereferenceable(24) %2, %"class.spvtools::opt::Instruction"* %172, i32 %3) #10
  br i1 %242, label %243, label %319

243:                                              ; preds = %241
  %244 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %244) #10
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %246 = load i8, i8* %245, align 1, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %253, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %250 = load i8, i8* %249, align 4, !range !2
  %251 = zext i8 %250 to i32
  %252 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %251) #10
  br label %253

253:                                              ; preds = %243, %248
  %254 = phi i32 [ %252, %248 ], [ 0, %243 ]
  store i32 %254, i32* %11, align 4
  %255 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %150, i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %244) #10
  %256 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %257 = load i8, i8* %256, align 4, !range !2
  %258 = icmp eq i8 %257, 0
  %259 = load i8, i8* %245, align 1, !range !2
  %260 = icmp eq i8 %259, 0
  %261 = select i1 %260, i32 1, i32 2
  %262 = xor i1 %260, true
  %263 = zext i1 %262 to i32
  %264 = select i1 %258, i32 %263, i32 %261
  %265 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %264) #10
  %266 = bitcast %"class.std::__1::unordered_set.910"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %266) #10
  %267 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %12, i64 0, i32 0, i32 4, i64 0
  %270 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %12, i64 0, i32 0, i32 3
  %271 = bitcast %"class.std::__1::__compressed_pair.929"* %270 to i32*
  %272 = bitcast i8* %269 to i32*
  store i32 -1431655766, i32* %272, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %266, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %271, align 8
  %273 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %274 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %273, i64 0, i32 11
  %275 = load i32, i32* %274, align 8
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %302

278:                                              ; preds = %253
  %279 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %273, i64 0, i32 4, i32 0, i32 0, i32 0
  %280 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %279, align 8
  %281 = call i8* @_Znwm(i64 104) #11
  %282 = bitcast i8* %281 to %"class.spvtools::opt::analysis::DefUseManager"*
  %283 = getelementptr inbounds i8, i8* %281, i64 32
  %284 = bitcast i8* %283 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %284, align 4
  %285 = getelementptr inbounds i8, i8* %281, i64 48
  %286 = getelementptr inbounds i8, i8* %281, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 16, i1 false) #10
  %287 = bitcast i8* %286 to i8**
  store i8* %285, i8** %287, align 8
  %288 = getelementptr inbounds i8, i8* %281, i64 64
  %289 = getelementptr inbounds i8, i8* %281, i64 96
  %290 = bitcast i8* %289 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %290, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %282, %"class.spvtools::opt::Module"* %280) #10
  %291 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %273, i64 0, i32 6
  %292 = ptrtoint i8* %281 to i64
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %291, i64 0, i32 0, i32 0, i32 0
  %294 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %293, align 8
  %295 = bitcast %"class.std::__1::unique_ptr.62"* %291 to i64*
  store i64 %292, i64* %295, align 8
  %296 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %294, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %278
  %298 = bitcast %"class.std::__1::unique_ptr.62"* %291 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %298, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %294) #10
  br label %299

299:                                              ; preds = %297, %278
  %300 = load i32, i32* %274, align 8
  %301 = or i32 %300, 1
  store i32 %301, i32* %274, align 8
  br label %302

302:                                              ; preds = %253, %299
  %303 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %273, i64 0, i32 6, i32 0, i32 0, i32 0
  %304 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %303, align 8
  %305 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %304, i32 %265) #10
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %305, %"class.std::__1::vector.3"* null, i32 0, %"class.std::__1::unordered_set.910"* nonnull %12)
  %306 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %268, align 8
  %307 = icmp eq %"struct.std::__1::__hash_node_base.915"* %306, null
  br i1 %307, label %314, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::__hash_node_base.915"* [ %311, %308 ], [ %306, %302 ]
  %310 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %309, i64 0, i32 0
  %311 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %310, align 8
  %312 = bitcast %"struct.std::__1::__hash_node_base.915"* %309 to i8*
  call void @_ZdlPv(i8* %312) #11
  %313 = icmp eq %"struct.std::__1::__hash_node_base.915"* %311, null
  br i1 %313, label %314, label %308

314:                                              ; preds = %308, %302
  %315 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %267, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %267, align 8
  %316 = icmp eq %"struct.std::__1::__hash_node_base.915"** %315, null
  br i1 %316, label %514, label %317

317:                                              ; preds = %314
  %318 = bitcast %"struct.std::__1::__hash_node_base.915"** %315 to i8*
  call void @_ZdlPv(i8* %318) #11
  br label %514

319:                                              ; preds = %241
  %320 = call zeroext i1 @_ZN8spvtools3opt14ExtInsConflictERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKNS0_11InstructionEj(%"class.std::__1::vector.3"* nonnull dereferenceable(24) %2, %"class.spvtools::opt::Instruction"* %172, i32 %3) #10
  br i1 %320, label %321, label %465

321:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #10
  %322 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %323 = load i8, i8* %322, align 1, !range !2
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %327 = load i8, i8* %326, align 4, !range !2
  %328 = zext i8 %327 to i32
  %329 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %328) #10
  br label %330

330:                                              ; preds = %321, %325
  %331 = phi i32 [ %329, %325 ], [ 0, %321 ]
  store i32 %331, i32* %13, align 4
  %332 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %150, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #10
  %333 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 6
  %334 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 6, i32 0, i32 1
  %335 = bitcast %"struct.spvtools::opt::Operand"** %334 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.std::__1::vector"* %333 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = sub i64 %336, %338
  %340 = sdiv exact i64 %339, 48
  %341 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %342 = load i8, i8* %341, align 4, !range !2
  %343 = icmp eq i8 %342, 0
  %344 = load i8, i8* %322, align 1, !range !2
  %345 = icmp eq i8 %344, 0
  %346 = select i1 %345, i32 1, i32 2
  %347 = xor i1 %345, true
  %348 = zext i1 %347 to i32
  %349 = select i1 %343, i32 %348, i32 %346
  %350 = trunc i64 %340 to i32
  %351 = sub i32 %350, %349
  %352 = add i32 %351, -2
  %353 = load i64, i64* %152, align 8
  %354 = load i64, i64* %153, align 8
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 2
  %357 = sub nsw i64 %356, %154
  %358 = zext i32 %352 to i64
  %359 = icmp ugt i64 %357, %358
  %360 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %349) #10
  br i1 %359, label %361, label %416

361:                                              ; preds = %330
  %362 = bitcast %"class.std::__1::unordered_set.910"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %362) #10
  %363 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %365 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %14, i64 0, i32 0, i32 4, i64 0
  %366 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %14, i64 0, i32 0, i32 3
  %367 = bitcast %"class.std::__1::__compressed_pair.929"* %366 to i32*
  %368 = bitcast i8* %365 to i32*
  store i32 -1431655766, i32* %368, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %362, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %367, align 8
  %369 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %370 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %369, i64 0, i32 11
  %371 = load i32, i32* %370, align 8
  %372 = and i32 %371, 1
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %398

374:                                              ; preds = %361
  %375 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %369, i64 0, i32 4, i32 0, i32 0, i32 0
  %376 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %375, align 8
  %377 = call i8* @_Znwm(i64 104) #11
  %378 = bitcast i8* %377 to %"class.spvtools::opt::analysis::DefUseManager"*
  %379 = getelementptr inbounds i8, i8* %377, i64 32
  %380 = bitcast i8* %379 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %377, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %380, align 4
  %381 = getelementptr inbounds i8, i8* %377, i64 48
  %382 = getelementptr inbounds i8, i8* %377, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 16, i1 false) #10
  %383 = bitcast i8* %382 to i8**
  store i8* %381, i8** %383, align 8
  %384 = getelementptr inbounds i8, i8* %377, i64 64
  %385 = getelementptr inbounds i8, i8* %377, i64 96
  %386 = bitcast i8* %385 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %384, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %386, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %378, %"class.spvtools::opt::Module"* %376) #10
  %387 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %369, i64 0, i32 6
  %388 = ptrtoint i8* %377 to i64
  %389 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %387, i64 0, i32 0, i32 0, i32 0
  %390 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %389, align 8
  %391 = bitcast %"class.std::__1::unique_ptr.62"* %387 to i64*
  store i64 %388, i64* %391, align 8
  %392 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %390, null
  br i1 %392, label %395, label %393

393:                                              ; preds = %374
  %394 = bitcast %"class.std::__1::unique_ptr.62"* %387 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %394, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %390) #10
  br label %395

395:                                              ; preds = %393, %374
  %396 = load i32, i32* %370, align 8
  %397 = or i32 %396, 1
  store i32 %397, i32* %370, align 8
  br label %398

398:                                              ; preds = %361, %395
  %399 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %369, i64 0, i32 6, i32 0, i32 0, i32 0
  %400 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %399, align 8
  %401 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %400, i32 %360) #10
  %402 = add i32 %352, %3
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %401, %"class.std::__1::vector.3"* nonnull %2, i32 %402, %"class.std::__1::unordered_set.910"* nonnull %14)
  %403 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %364, align 8
  %404 = icmp eq %"struct.std::__1::__hash_node_base.915"* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %398, %405
  %406 = phi %"struct.std::__1::__hash_node_base.915"* [ %408, %405 ], [ %403, %398 ]
  %407 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %406, i64 0, i32 0
  %408 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %407, align 8
  %409 = bitcast %"struct.std::__1::__hash_node_base.915"* %406 to i8*
  call void @_ZdlPv(i8* %409) #11
  %410 = icmp eq %"struct.std::__1::__hash_node_base.915"* %408, null
  br i1 %410, label %411, label %405

411:                                              ; preds = %405, %398
  %412 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %363, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %363, align 8
  %413 = icmp eq %"struct.std::__1::__hash_node_base.915"** %412, null
  br i1 %413, label %514, label %414

414:                                              ; preds = %411
  %415 = bitcast %"struct.std::__1::__hash_node_base.915"** %412 to i8*
  call void @_ZdlPv(i8* %415) #11
  br label %514

416:                                              ; preds = %330
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %155) #10
  store i32 -1431655766, i32* %168, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %155, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %160, align 8
  %417 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %418 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %417, i64 0, i32 11
  %419 = load i32, i32* %418, align 8
  %420 = and i32 %419, 1
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %446

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %417, i64 0, i32 4, i32 0, i32 0, i32 0
  %424 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %423, align 8
  %425 = call i8* @_Znwm(i64 104) #11
  %426 = bitcast i8* %425 to %"class.spvtools::opt::analysis::DefUseManager"*
  %427 = getelementptr inbounds i8, i8* %425, i64 32
  %428 = bitcast i8* %427 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %425, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %428, align 4
  %429 = getelementptr inbounds i8, i8* %425, i64 48
  %430 = getelementptr inbounds i8, i8* %425, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %429, i8 0, i64 16, i1 false) #10
  %431 = bitcast i8* %430 to i8**
  store i8* %429, i8** %431, align 8
  %432 = getelementptr inbounds i8, i8* %425, i64 64
  %433 = getelementptr inbounds i8, i8* %425, i64 96
  %434 = bitcast i8* %433 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %432, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %434, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %426, %"class.spvtools::opt::Module"* %424) #10
  %435 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %417, i64 0, i32 6
  %436 = ptrtoint i8* %425 to i64
  %437 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %435, i64 0, i32 0, i32 0, i32 0
  %438 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %437, align 8
  %439 = bitcast %"class.std::__1::unique_ptr.62"* %435 to i64*
  store i64 %436, i64* %439, align 8
  %440 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %438, null
  br i1 %440, label %443, label %441

441:                                              ; preds = %422
  %442 = bitcast %"class.std::__1::unique_ptr.62"* %435 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %442, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %438) #10
  br label %443

443:                                              ; preds = %441, %422
  %444 = load i32, i32* %418, align 8
  %445 = or i32 %444, 1
  store i32 %445, i32* %418, align 8
  br label %446

446:                                              ; preds = %416, %443
  %447 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %417, i64 0, i32 6, i32 0, i32 0, i32 0
  %448 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %447, align 8
  %449 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %448, i32 %360) #10
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %449, %"class.std::__1::vector.3"* null, i32 0, %"class.std::__1::unordered_set.910"* nonnull %15)
  %450 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %157, align 8
  %451 = icmp eq %"struct.std::__1::__hash_node_base.915"* %450, null
  br i1 %451, label %458, label %452

452:                                              ; preds = %446, %452
  %453 = phi %"struct.std::__1::__hash_node_base.915"* [ %455, %452 ], [ %450, %446 ]
  %454 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %453, i64 0, i32 0
  %455 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %454, align 8
  %456 = bitcast %"struct.std::__1::__hash_node_base.915"* %453 to i8*
  call void @_ZdlPv(i8* %456) #11
  %457 = icmp eq %"struct.std::__1::__hash_node_base.915"* %455, null
  br i1 %457, label %458, label %452

458:                                              ; preds = %452, %446
  %459 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %156, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %156, align 8
  %460 = icmp eq %"struct.std::__1::__hash_node_base.915"** %459, null
  br i1 %460, label %463, label %461

461:                                              ; preds = %458
  %462 = bitcast %"struct.std::__1::__hash_node_base.915"** %459 to i8*
  call void @_ZdlPv(i8* %462) #11
  br label %463

463:                                              ; preds = %461, %458, %239, %236
  %464 = phi i8* [ %162, %236 ], [ %162, %239 ], [ %155, %458 ], [ %155, %461 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %464) #10
  br label %465

465:                                              ; preds = %463, %319
  %466 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %467 = load i8, i8* %466, align 4, !range !2
  %468 = icmp eq i8 %467, 0
  %469 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %470 = load i8, i8* %469, align 1, !range !2
  %471 = icmp eq i8 %470, 0
  %472 = select i1 %471, i32 1, i32 2
  %473 = xor i1 %471, true
  %474 = zext i1 %473 to i32
  %475 = select i1 %468, i32 %474, i32 %472
  %476 = add nuw nsw i32 %475, 1
  %477 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %476) #10
  %478 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %479 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %478, i64 0, i32 11
  %480 = load i32, i32* %479, align 8
  %481 = and i32 %480, 1
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %507

483:                                              ; preds = %465
  %484 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %478, i64 0, i32 4, i32 0, i32 0, i32 0
  %485 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %484, align 8
  %486 = call i8* @_Znwm(i64 104) #11
  %487 = bitcast i8* %486 to %"class.spvtools::opt::analysis::DefUseManager"*
  %488 = getelementptr inbounds i8, i8* %486, i64 32
  %489 = bitcast i8* %488 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %486, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %489, align 4
  %490 = getelementptr inbounds i8, i8* %486, i64 48
  %491 = getelementptr inbounds i8, i8* %486, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %490, i8 0, i64 16, i1 false) #10
  %492 = bitcast i8* %491 to i8**
  store i8* %490, i8** %492, align 8
  %493 = getelementptr inbounds i8, i8* %486, i64 64
  %494 = getelementptr inbounds i8, i8* %486, i64 96
  %495 = bitcast i8* %494 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %493, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %495, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %487, %"class.spvtools::opt::Module"* %485) #10
  %496 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %478, i64 0, i32 6
  %497 = ptrtoint i8* %486 to i64
  %498 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %496, i64 0, i32 0, i32 0, i32 0
  %499 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %498, align 8
  %500 = bitcast %"class.std::__1::unique_ptr.62"* %496 to i64*
  store i64 %497, i64* %500, align 8
  %501 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %499, null
  br i1 %501, label %504, label %502

502:                                              ; preds = %483
  %503 = bitcast %"class.std::__1::unique_ptr.62"* %496 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %503, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %499) #10
  br label %504

504:                                              ; preds = %502, %483
  %505 = load i32, i32* %479, align 8
  %506 = or i32 %505, 1
  store i32 %506, i32* %479, align 8
  br label %507

507:                                              ; preds = %465, %504
  %508 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %478, i64 0, i32 6, i32 0, i32 0, i32 0
  %509 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %508, align 8
  %510 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %509, i32 %477) #10
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %510, i64 0, i32 2
  %512 = load i32, i32* %511, align 8
  %513 = icmp eq i32 %512, 82
  br i1 %513, label %170, label %517

514:                                              ; preds = %414, %411, %317, %314
  %515 = phi i8* [ %266, %314 ], [ %266, %317 ], [ %362, %411 ], [ %362, %414 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %515) #10
  %516 = load i32, i32* %171, align 8
  br label %517

517:                                              ; preds = %507, %145, %514
  %518 = phi %"class.spvtools::opt::Instruction"* [ %172, %514 ], [ %1, %145 ], [ %510, %507 ]
  %519 = phi i32 [ %516, %514 ], [ %146, %145 ], [ %512, %507 ]
  %520 = icmp eq i32 %519, 245
  br i1 %520, label %521, label %816

521:                                              ; preds = %517
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 4
  %523 = load i8, i8* %522, align 1, !range !2
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %530, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 3
  %527 = load i8, i8* %526, align 4, !range !2
  %528 = zext i8 %527 to i32
  %529 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %518, i32 %528) #10
  br label %530

530:                                              ; preds = %521, %525
  %531 = phi i32 [ %529, %525 ], [ 0, %521 ]
  %532 = zext i32 %531 to i64
  %533 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %534 = load i64, i64* %533, align 8
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %584, label %536

536:                                              ; preds = %530
  %537 = call i64 @llvm.ctpop.i64(i64 %534) #10, !range !3
  %538 = icmp ugt i64 %537, 1
  br i1 %538, label %542, label %539

539:                                              ; preds = %536
  %540 = add i64 %534, 4294967295
  %541 = and i64 %540, %532
  br label %546

542:                                              ; preds = %536
  %543 = icmp ugt i64 %534, %532
  br i1 %543, label %546, label %544

544:                                              ; preds = %542
  %545 = urem i64 %532, %534
  br label %546

546:                                              ; preds = %544, %542, %539
  %547 = phi i64 [ %541, %539 ], [ %545, %544 ], [ %532, %542 ]
  %548 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %548, align 8
  %550 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %549, i64 %547
  %551 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %550, align 8
  %552 = icmp eq %"struct.std::__1::__hash_node_base.915"* %551, null
  br i1 %552, label %584, label %553

553:                                              ; preds = %546
  %554 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %551, i64 0, i32 0
  %555 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %554, align 8
  %556 = icmp eq %"struct.std::__1::__hash_node_base.915"* %555, null
  br i1 %556, label %584, label %557

557:                                              ; preds = %553
  %558 = add i64 %534, -1
  br label %559

559:                                              ; preds = %580, %557
  %560 = phi %"struct.std::__1::__hash_node_base.915"* [ %555, %557 ], [ %582, %580 ]
  %561 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %560, i64 1
  %562 = bitcast %"struct.std::__1::__hash_node_base.915"* %561 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = icmp eq i64 %563, %532
  br i1 %564, label %575, label %565

565:                                              ; preds = %559
  br i1 %538, label %568, label %566

566:                                              ; preds = %565
  %567 = and i64 %563, %558
  br label %572

568:                                              ; preds = %565
  %569 = icmp ult i64 %563, %534
  br i1 %569, label %572, label %570

570:                                              ; preds = %568
  %571 = urem i64 %563, %534
  br label %572

572:                                              ; preds = %570, %568, %566
  %573 = phi i64 [ %567, %566 ], [ %571, %570 ], [ %563, %568 ]
  %574 = icmp eq i64 %573, %547
  br i1 %574, label %580, label %584

575:                                              ; preds = %559
  %576 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %560, i64 2
  %577 = bitcast %"struct.std::__1::__hash_node_base.915"* %576 to i32*
  %578 = load i32, i32* %577, align 4
  %579 = icmp eq i32 %578, %531
  br i1 %579, label %816, label %580

580:                                              ; preds = %575, %572
  %581 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %560, i64 0, i32 0
  %582 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %581, align 8
  %583 = icmp eq %"struct.std::__1::__hash_node_base.915"* %582, null
  br i1 %583, label %584, label %559

584:                                              ; preds = %580, %572, %546, %530, %553
  %585 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %585) #10
  %586 = load i8, i8* %522, align 1, !range !2
  %587 = icmp eq i8 %586, 0
  br i1 %587, label %593, label %588

588:                                              ; preds = %584
  %589 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 3
  %590 = load i8, i8* %589, align 4, !range !2
  %591 = zext i8 %590 to i32
  %592 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %518, i32 %591) #10
  br label %593

593:                                              ; preds = %584, %588
  %594 = phi i32 [ %592, %588 ], [ 0, %584 ]
  store i32 %594, i32* %16, align 4
  %595 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %4, i64 0, i32 0
  %596 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %595, i32* nonnull dereferenceable(4) %16, i32* nonnull dereferenceable(4) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %585) #10
  %597 = bitcast %"class.std::__1::vector.3"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %597) #10
  %598 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 0
  %599 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 1
  %600 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %597, i8 0, i64 24, i1 false) #10
  %601 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 6
  %602 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 6, i32 0, i32 1
  %603 = bitcast %"struct.spvtools::opt::Operand"** %602 to i64*
  %604 = bitcast %"class.std::__1::vector"* %601 to i64*
  %605 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %518, i64 0, i32 3
  %606 = bitcast i32** %599 to i64*
  %607 = bitcast %"class.std::__1::vector.3"* %17 to i64*
  %608 = bitcast i32** %600 to i64*
  br label %609

609:                                              ; preds = %767, %593
  %610 = phi i32 [ 0, %593 ], [ %768, %767 ]
  %611 = load i64, i64* %603, align 8
  %612 = load i64, i64* %604, align 8
  %613 = sub i64 %611, %612
  %614 = sdiv exact i64 %613, 48
  %615 = load i8, i8* %605, align 4, !range !2
  %616 = icmp eq i8 %615, 0
  %617 = load i8, i8* %522, align 1, !range !2
  %618 = icmp eq i8 %617, 0
  %619 = select i1 %618, i32 1, i32 2
  %620 = xor i1 %618, true
  %621 = zext i1 %620 to i32
  %622 = select i1 %616, i32 %621, i32 %619
  %623 = trunc i64 %614 to i32
  %624 = sub i32 %623, %622
  %625 = icmp ult i32 %610, %624
  br i1 %625, label %714, label %626

626:                                              ; preds = %609
  %627 = load i32*, i32** %598, align 8
  %628 = load i32*, i32** %599, align 8
  %629 = getelementptr inbounds %"struct.std::__1::__less.999", %"struct.std::__1::__less.999"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %629) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %627, i32* %628, %"struct.std::__1::__less.999"* nonnull dereferenceable(1) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %629) #10
  %630 = load i32*, i32** %598, align 8
  %631 = load i32*, i32** %599, align 8
  %632 = icmp eq i32* %630, %631
  br i1 %632, label %643, label %633

633:                                              ; preds = %626, %639
  %634 = phi i32* [ %635, %639 ], [ %630, %626 ]
  %635 = getelementptr inbounds i32, i32* %634, i64 1
  %636 = icmp eq i32* %635, %631
  br i1 %636, label %637, label %639

637:                                              ; preds = %633
  %638 = ptrtoint i32* %631 to i64
  br label %709

639:                                              ; preds = %633
  %640 = load i32, i32* %634, align 4
  %641 = load i32, i32* %635, align 4
  %642 = icmp eq i32 %640, %641
  br i1 %642, label %643, label %633

643:                                              ; preds = %639, %626
  %644 = phi i32* [ %630, %626 ], [ %634, %639 ]
  %645 = ptrtoint i32* %644 to i64
  %646 = icmp eq i32* %644, %631
  br i1 %646, label %709, label %647

647:                                              ; preds = %643
  %648 = getelementptr inbounds i32, i32* %644, i64 2
  %649 = icmp eq i32* %648, %631
  br i1 %649, label %704, label %650

650:                                              ; preds = %647
  %651 = getelementptr i32, i32* %631, i64 -3
  %652 = ptrtoint i32* %651 to i64
  %653 = sub i64 %652, %645
  %654 = lshr i64 %653, 2
  %655 = add nuw nsw i64 %654, 1
  %656 = and i64 %655, 3
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %677, label %658

658:                                              ; preds = %650, %669
  %659 = phi i32* [ %672, %669 ], [ %644, %650 ]
  %660 = phi i32* [ %671, %669 ], [ %648, %650 ]
  %661 = phi i64 [ %670, %669 ], [ %645, %650 ]
  %662 = phi i64 [ %673, %669 ], [ %656, %650 ]
  %663 = load i32, i32* %659, align 4
  %664 = load i32, i32* %660, align 4
  %665 = icmp eq i32 %663, %664
  br i1 %665, label %669, label %666

666:                                              ; preds = %658
  %667 = getelementptr inbounds i32, i32* %659, i64 1
  %668 = ptrtoint i32* %667 to i64
  store i32 %664, i32* %667, align 4
  br label %669

669:                                              ; preds = %666, %658
  %670 = phi i64 [ %661, %658 ], [ %668, %666 ]
  %671 = getelementptr inbounds i32, i32* %660, i64 1
  %672 = inttoptr i64 %670 to i32*
  %673 = add i64 %662, -1
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %658, !llvm.loop !4

675:                                              ; preds = %669
  %676 = inttoptr i64 %670 to i32*
  br label %677

677:                                              ; preds = %650, %675
  %678 = phi i64 [ undef, %650 ], [ %670, %675 ]
  %679 = phi i32* [ %644, %650 ], [ %676, %675 ]
  %680 = phi i32* [ %648, %650 ], [ %671, %675 ]
  %681 = phi i64 [ %645, %650 ], [ %670, %675 ]
  %682 = icmp ult i64 %653, 12
  br i1 %682, label %700, label %683

683:                                              ; preds = %677, %840
  %684 = phi i32* [ %844, %840 ], [ %679, %677 ]
  %685 = phi i32* [ %842, %840 ], [ %680, %677 ]
  %686 = phi i64 [ %841, %840 ], [ %681, %677 ]
  %687 = load i32, i32* %684, align 4
  %688 = load i32, i32* %685, align 4
  %689 = icmp eq i32 %687, %688
  br i1 %689, label %693, label %690

690:                                              ; preds = %683
  %691 = getelementptr inbounds i32, i32* %684, i64 1
  %692 = ptrtoint i32* %691 to i64
  store i32 %688, i32* %691, align 4
  br label %693

693:                                              ; preds = %690, %683
  %694 = phi i64 [ %686, %683 ], [ %692, %690 ]
  %695 = getelementptr inbounds i32, i32* %685, i64 1
  %696 = inttoptr i64 %694 to i32*
  %697 = load i32, i32* %696, align 4
  %698 = load i32, i32* %695, align 4
  %699 = icmp eq i32 %697, %698
  br i1 %699, label %820, label %817

700:                                              ; preds = %840, %677
  %701 = phi i64 [ %678, %677 ], [ %841, %840 ]
  %702 = inttoptr i64 %701 to i32*
  %703 = load i32*, i32** %598, align 8
  br label %704

704:                                              ; preds = %700, %647
  %705 = phi i32* [ %630, %647 ], [ %703, %700 ]
  %706 = phi i32* [ %644, %647 ], [ %702, %700 ]
  %707 = getelementptr inbounds i32, i32* %706, i64 1
  %708 = ptrtoint i32* %707 to i64
  br label %709

709:                                              ; preds = %637, %643, %704
  %710 = phi i32* [ %705, %704 ], [ %630, %643 ], [ %630, %637 ]
  %711 = phi i64 [ %708, %704 ], [ %645, %643 ], [ %638, %637 ]
  %712 = inttoptr i64 %711 to i32*
  %713 = icmp eq i32* %710, %712
  br i1 %713, label %771, label %778

714:                                              ; preds = %609
  %715 = add i32 %622, %610
  %716 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %518, i32 %715) #10
  %717 = load i32*, i32** %599, align 8
  %718 = load i32*, i32** %600, align 8
  %719 = icmp ult i32* %717, %718
  %720 = ptrtoint i32* %718 to i64
  br i1 %719, label %721, label %724

721:                                              ; preds = %714
  store i32 %716, i32* %717, align 4
  %722 = getelementptr inbounds i32, i32* %717, i64 1
  %723 = ptrtoint i32* %722 to i64
  store i64 %723, i64* %606, align 8
  br label %767

724:                                              ; preds = %714
  %725 = ptrtoint i32* %717 to i64
  %726 = load i64, i64* %607, align 8
  %727 = sub i64 %725, %726
  %728 = ashr exact i64 %727, 2
  %729 = add nsw i64 %728, 1
  %730 = icmp ugt i64 %729, 4611686018427387903
  br i1 %730, label %731, label %733

731:                                              ; preds = %724
  %732 = bitcast %"class.std::__1::vector.3"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %732) #12
  unreachable

733:                                              ; preds = %724
  %734 = sub i64 %720, %726
  %735 = ashr exact i64 %734, 2
  %736 = icmp ult i64 %735, 2305843009213693951
  br i1 %736, label %737, label %745

737:                                              ; preds = %733
  %738 = ashr exact i64 %734, 1
  %739 = icmp ult i64 %738, %729
  %740 = select i1 %739, i64 %729, i64 %738
  %741 = icmp eq i64 %740, 0
  br i1 %741, label %750, label %742

742:                                              ; preds = %737
  %743 = icmp ugt i64 %740, 4611686018427387903
  br i1 %743, label %744, label %745

744:                                              ; preds = %742
  call void @abort() #12
  unreachable

745:                                              ; preds = %742, %733
  %746 = phi i64 [ %740, %742 ], [ 4611686018427387903, %733 ]
  %747 = shl i64 %746, 2
  %748 = call i8* @_Znwm(i64 %747) #11
  %749 = bitcast i8* %748 to i32*
  br label %750

750:                                              ; preds = %745, %737
  %751 = phi i64 [ %746, %745 ], [ 0, %737 ]
  %752 = phi i8* [ %748, %745 ], [ null, %737 ]
  %753 = phi i32* [ %749, %745 ], [ null, %737 ]
  %754 = getelementptr inbounds i32, i32* %753, i64 %728
  %755 = getelementptr inbounds i32, i32* %753, i64 %751
  %756 = ptrtoint i32* %755 to i64
  store i32 %716, i32* %754, align 4
  %757 = getelementptr inbounds i32, i32* %754, i64 1
  %758 = ptrtoint i32* %757 to i64
  %759 = ptrtoint i32* %753 to i64
  %760 = icmp sgt i64 %727, 0
  br i1 %760, label %761, label %763

761:                                              ; preds = %750
  %762 = inttoptr i64 %726 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %752, i8* align 4 %762, i64 %727, i1 false) #10
  br label %763

763:                                              ; preds = %761, %750
  store i64 %759, i64* %607, align 8
  store i64 %758, i64* %606, align 8
  store i64 %756, i64* %608, align 8
  %764 = icmp eq i64 %726, 0
  br i1 %764, label %767, label %765

765:                                              ; preds = %763
  %766 = inttoptr i64 %726 to i8*
  call void @_ZdlPv(i8* %766) #11
  br label %767

767:                                              ; preds = %721, %763, %765
  %768 = add i32 %610, 2
  br label %609

769:                                              ; preds = %809
  %770 = load i32*, i32** %598, align 8
  br label %771

771:                                              ; preds = %769, %709
  %772 = phi i32* [ %770, %769 ], [ %710, %709 ]
  %773 = icmp eq i32* %772, null
  br i1 %773, label %777, label %774

774:                                              ; preds = %771
  %775 = ptrtoint i32* %772 to i64
  store i64 %775, i64* %606, align 8
  %776 = bitcast i32* %772 to i8*
  call void @_ZdlPv(i8* %776) #11
  br label %777

777:                                              ; preds = %771, %774
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %597) #10
  br label %816

778:                                              ; preds = %709, %809
  %779 = phi i32* [ %814, %809 ], [ %710, %709 ]
  %780 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %781 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %780, i64 0, i32 11
  %782 = load i32, i32* %781, align 8
  %783 = and i32 %782, 1
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %785, label %809

785:                                              ; preds = %778
  %786 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %780, i64 0, i32 4, i32 0, i32 0, i32 0
  %787 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %786, align 8
  %788 = call i8* @_Znwm(i64 104) #11
  %789 = bitcast i8* %788 to %"class.spvtools::opt::analysis::DefUseManager"*
  %790 = getelementptr inbounds i8, i8* %788, i64 32
  %791 = bitcast i8* %790 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %788, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %791, align 4
  %792 = getelementptr inbounds i8, i8* %788, i64 48
  %793 = getelementptr inbounds i8, i8* %788, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %792, i8 0, i64 16, i1 false) #10
  %794 = bitcast i8* %793 to i8**
  store i8* %792, i8** %794, align 8
  %795 = getelementptr inbounds i8, i8* %788, i64 64
  %796 = getelementptr inbounds i8, i8* %788, i64 96
  %797 = bitcast i8* %796 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %795, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %797, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %789, %"class.spvtools::opt::Module"* %787) #10
  %798 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %780, i64 0, i32 6
  %799 = ptrtoint i8* %788 to i64
  %800 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %798, i64 0, i32 0, i32 0, i32 0
  %801 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %800, align 8
  %802 = bitcast %"class.std::__1::unique_ptr.62"* %798 to i64*
  store i64 %799, i64* %802, align 8
  %803 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %801, null
  br i1 %803, label %806, label %804

804:                                              ; preds = %785
  %805 = bitcast %"class.std::__1::unique_ptr.62"* %798 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %805, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %801) #10
  br label %806

806:                                              ; preds = %804, %785
  %807 = load i32, i32* %781, align 8
  %808 = or i32 %807, 1
  store i32 %808, i32* %781, align 8
  br label %809

809:                                              ; preds = %778, %806
  %810 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %780, i64 0, i32 6, i32 0, i32 0, i32 0
  %811 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %810, align 8
  %812 = load i32, i32* %779, align 4
  %813 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %811, i32 %812) #10
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Instruction"* %813, %"class.std::__1::vector.3"* %2, i32 %3, %"class.std::__1::unordered_set.910"* %4)
  %814 = getelementptr inbounds i32, i32* %779, i64 1
  %815 = icmp eq i32* %814, %712
  br i1 %815, label %769, label %778

816:                                              ; preds = %575, %62, %777, %517, %94, %56
  ret void

817:                                              ; preds = %693
  %818 = getelementptr inbounds i32, i32* %696, i64 1
  %819 = ptrtoint i32* %818 to i64
  store i32 %698, i32* %818, align 4
  br label %820

820:                                              ; preds = %817, %693
  %821 = phi i64 [ %694, %693 ], [ %819, %817 ]
  %822 = getelementptr inbounds i32, i32* %685, i64 2
  %823 = inttoptr i64 %821 to i32*
  %824 = load i32, i32* %823, align 4
  %825 = load i32, i32* %822, align 4
  %826 = icmp eq i32 %824, %825
  br i1 %826, label %830, label %827

827:                                              ; preds = %820
  %828 = getelementptr inbounds i32, i32* %823, i64 1
  %829 = ptrtoint i32* %828 to i64
  store i32 %825, i32* %828, align 4
  br label %830

830:                                              ; preds = %827, %820
  %831 = phi i64 [ %821, %820 ], [ %829, %827 ]
  %832 = getelementptr inbounds i32, i32* %685, i64 3
  %833 = inttoptr i64 %831 to i32*
  %834 = load i32, i32* %833, align 4
  %835 = load i32, i32* %832, align 4
  %836 = icmp eq i32 %834, %835
  br i1 %836, label %840, label %837

837:                                              ; preds = %830
  %838 = getelementptr inbounds i32, i32* %833, i64 1
  %839 = ptrtoint i32* %838 to i64
  store i32 %835, i32* %838, align 4
  br label %840

840:                                              ; preds = %837, %830
  %841 = phi i64 [ %831, %830 ], [ %839, %837 ]
  %842 = getelementptr inbounds i32, i32* %685, i64 4
  %843 = icmp eq i32* %842, %631
  %844 = inttoptr i64 %841 to i32*
  br i1 %843, label %700, label %683
}

declare zeroext i1 @_ZN8spvtools3opt11ExtInsMatchERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKNS0_11InstructionEj(%"class.std::__1::vector.3"* dereferenceable(24), %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt14ExtInsConflictERKNSt3__16vectorIjNS1_9allocatorIjEEEEPKNS0_11InstructionEj(%"class.std::__1::vector.3"* dereferenceable(24), %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass20EliminateDeadInsertsEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Function"* %1)
  br i1 %3, label %4, label %6

4:                                                ; preds = %2, %4
  %5 = tail call zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::Function"* %1)
  br i1 %5, label %4, label %6, !llvm.loop !6

6:                                                ; preds = %4, %2
  %7 = phi i1 [ false, %2 ], [ true, %4 ]
  %8 = phi i1 [ %3, %2 ], [ %5, %4 ]
  %9 = or i1 %7, %8
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::function.957", align 8
  %6 = alloca %"class.std::__1::vector.963", align 8
  %7 = alloca %"class.std::__1::function.957", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %62, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.915"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12, %16
  %17 = phi %"struct.std::__1::__hash_node_base.915"* [ %19, %16 ], [ %14, %12 ]
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %17, i64 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base.915"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %19, null
  br i1 %21, label %22, label %16

22:                                               ; preds = %16, %12
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %13, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = add i64 %24, -1
  %29 = and i64 %24, 3
  %30 = icmp ult i64 %28, 3
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = sub i64 %24, %29
  br label %45

33:                                               ; preds = %45, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %45 ]
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %33, %36
  %37 = phi i64 [ %41, %36 ], [ %34, %33 ]
  %38 = phi i64 [ %42, %36 ], [ %29, %33 ]
  %39 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %27, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %39, i64 %37
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %41 = add nuw i64 %37, 1
  %42 = add i64 %38, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !7

44:                                               ; preds = %33, %36, %22
  store i64 0, i64* %9, align 8
  br label %62

45:                                               ; preds = %45, %31
  %46 = phi i64 [ 0, %31 ], [ %59, %45 ]
  %47 = phi i64 [ %32, %31 ], [ %60, %45 ]
  %48 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %27, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %48, i64 %46
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %49, align 8
  %50 = or i64 %46, 1
  %51 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %27, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %52, align 8
  %53 = or i64 %46, 2
  %54 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %27, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %54, i64 %53
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %55, align 8
  %56 = or i64 %46, 3
  %57 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %27, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %58, align 8
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %33, label %45

62:                                               ; preds = %2, %44
  %63 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %116, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.937"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"struct.std::__1::__hash_node_base.937"* [ %73, %70 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %71, i64 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %72, align 8
  %74 = bitcast %"struct.std::__1::__hash_node_base.937"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #11
  %75 = icmp eq %"struct.std::__1::__hash_node_base.937"* %73, null
  br i1 %75, label %76, label %70

76:                                               ; preds = %70, %66
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %67, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %98, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = add i64 %78, -1
  %83 = and i64 %78, 3
  %84 = icmp ult i64 %82, 3
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = sub i64 %78, %83
  br label %99

87:                                               ; preds = %99, %80
  %88 = phi i64 [ 0, %80 ], [ %113, %99 ]
  %89 = icmp eq i64 %83, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %87, %90
  %91 = phi i64 [ %95, %90 ], [ %88, %87 ]
  %92 = phi i64 [ %96, %90 ], [ %83, %87 ]
  %93 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %81, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %93, i64 %91
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %94, align 8
  %95 = add nuw i64 %91, 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %90, !llvm.loop !8

98:                                               ; preds = %87, %90, %76
  store i64 0, i64* %63, align 8
  br label %116

99:                                               ; preds = %99, %85
  %100 = phi i64 [ 0, %85 ], [ %113, %99 ]
  %101 = phi i64 [ %86, %85 ], [ %114, %99 ]
  %102 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %81, align 8
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %102, i64 %100
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %103, align 8
  %104 = or i64 %100, 1
  %105 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %81, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %105, i64 %104
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %106, align 8
  %107 = or i64 %100, 2
  %108 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %81, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %108, i64 %107
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %109, align 8
  %110 = or i64 %100, 3
  %111 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %81, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %111, i64 %110
  store %"struct.std::__1::__hash_node_base.937"* null, %"struct.std::__1::__hash_node_base.937"** %112, align 8
  %113 = add nuw i64 %100, 4
  %114 = add i64 %101, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %87, label %99

116:                                              ; preds = %62, %98
  %117 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %118 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %120 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %119, align 8
  %121 = icmp eq %"class.std::__1::unique_ptr.40"* %118, %120
  br i1 %121, label %139, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %3 to i8*
  %124 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %3, i64 0, i32 0, i32 0
  %125 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %3 to i64*
  %126 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %127 = bitcast i32* %4 to i8*
  %128 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0
  %129 = bitcast %"class.std::__1::function.957"* %5 to i8*
  %130 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 2
  %132 = bitcast %"class.std::__1::function.957"* %5 to %"class.spvtools::opt::InstructionList::iterator"**
  %133 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 0, i32 1
  %134 = bitcast [8 x i8]* %133 to %"class.spvtools::opt::DeadInsertElimPass"**
  %135 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %5, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %3 to %"class.spvtools::utils::IntrusiveNodeBase"**
  br label %154

137:                                              ; preds = %168
  %138 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %117, align 8
  br label %139

139:                                              ; preds = %137, %116
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %169, %137 ], [ %118, %116 ]
  %141 = phi %"class.std::__1::unique_ptr.40"* [ %138, %137 ], [ %118, %116 ]
  %142 = bitcast %"class.std::__1::vector.963"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #10
  %143 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %6, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %6, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 24, i1 false) #10
  %146 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %140
  br i1 %146, label %495, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %149 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %151 = bitcast %"class.spvtools::opt::Instruction"*** %144 to i64*
  %152 = bitcast %"class.std::__1::vector.963"* %6 to i64*
  %153 = bitcast %"class.spvtools::opt::Instruction"*** %145 to i64*
  br label %312

154:                                              ; preds = %122, %168
  %155 = phi %"class.std::__1::unique_ptr.40"* [ %120, %122 ], [ %169, %168 ]
  %156 = phi %"class.std::__1::unique_ptr.40"* [ %118, %122 ], [ %170, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #10
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %124, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %156, i64 0, i32 0, i32 0, i32 0
  %158 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %158, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %160 = bitcast %"class.spvtools::opt::Instruction"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %125, align 8
  %162 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %157, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %162, i64 0, i32 2, i32 0, i32 1
  %164 = inttoptr i64 %161 to %"class.spvtools::opt::Instruction"*
  %165 = icmp eq %"class.spvtools::opt::Instruction"* %163, %164
  br i1 %165, label %168, label %172

166:                                              ; preds = %291
  %167 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %119, align 8
  br label %168

168:                                              ; preds = %166, %154
  %169 = phi %"class.std::__1::unique_ptr.40"* [ %167, %166 ], [ %155, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #10
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %156, i64 1
  %171 = icmp eq %"class.std::__1::unique_ptr.40"* %170, %169
  br i1 %171, label %137, label %154

172:                                              ; preds = %154, %291
  %173 = phi %"class.spvtools::opt::Instruction"* [ %298, %291 ], [ %164, %154 ]
  %174 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %173, i64 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %126, align 8
  %177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %176, i64 0, i32 11
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %206

181:                                              ; preds = %172
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %176, i64 0, i32 4, i32 0, i32 0, i32 0
  %183 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %182, align 8
  %184 = call i8* @_Znwm(i64 104) #11
  %185 = bitcast i8* %184 to %"class.spvtools::opt::analysis::DefUseManager"*
  %186 = getelementptr inbounds i8, i8* %184, i64 32
  %187 = bitcast i8* %186 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %187, align 4
  %188 = getelementptr inbounds i8, i8* %184, i64 48
  %189 = getelementptr inbounds i8, i8* %184, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #10
  %190 = bitcast i8* %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = getelementptr inbounds i8, i8* %184, i64 64
  %192 = getelementptr inbounds i8, i8* %184, i64 96
  %193 = bitcast i8* %192 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %193, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %185, %"class.spvtools::opt::Module"* %183) #10
  %194 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %176, i64 0, i32 6
  %195 = ptrtoint i8* %184 to i64
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %194, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %196, align 8
  %198 = bitcast %"class.std::__1::unique_ptr.62"* %194 to i64*
  store i64 %195, i64* %198, align 8
  %199 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %197, null
  br i1 %199, label %202, label %200

200:                                              ; preds = %181
  %201 = bitcast %"class.std::__1::unique_ptr.62"* %194 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %201, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %197) #10
  br label %202

202:                                              ; preds = %200, %181
  %203 = load i32, i32* %177, align 8
  %204 = or i32 %203, 1
  store i32 %204, i32* %177, align 8
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %124, align 8
  br label %206

206:                                              ; preds = %172, %202
  %207 = phi %"class.spvtools::opt::Instruction"* [ %173, %172 ], [ %205, %202 ]
  %208 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %176, i64 0, i32 6, i32 0, i32 0, i32 0
  %209 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %208, align 8
  %210 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %207, i64 0, i32 3
  %211 = load i8, i8* %210, align 4, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %206
  %214 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %207, i32 0) #10
  br label %215

215:                                              ; preds = %206, %213
  %216 = phi i32 [ %214, %213 ], [ 0, %206 ]
  %217 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %209, i32 %216) #10
  switch i32 %175, label %291 [
    i32 245, label %218
    i32 82, label %223
  ]

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 2
  %220 = load i32, i32* %219, align 8
  %221 = call i32 @_Z20spvOpcodeIsComposite6SpvOp_(i32 %220) #10
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %291, label %240

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %217, i64 0, i32 2
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %225, 28
  br i1 %226, label %227, label %240

227:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #10
  %228 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %124, align 8
  %229 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %228, i64 0, i32 4
  %230 = load i8, i8* %229, align 1, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %237, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %228, i64 0, i32 3
  %234 = load i8, i8* %233, align 4, !range !2
  %235 = zext i8 %234 to i32
  %236 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %228, i32 %235) #10
  br label %237

237:                                              ; preds = %227, %232
  %238 = phi i32 [ %236, %232 ], [ 0, %227 ]
  store i32 %238, i32* %4, align 4
  %239 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %128, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #10
  br label %291

240:                                              ; preds = %218, %223
  %241 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %124, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %241, i64 0, i32 4
  %243 = load i8, i8* %242, align 1, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %241, i64 0, i32 3
  %247 = load i8, i8* %246, align 4, !range !2
  %248 = zext i8 %247 to i32
  %249 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %241, i32 %248) #10
  br label %250

250:                                              ; preds = %240, %245
  %251 = phi i32 [ %249, %245 ], [ 0, %240 ]
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %126, align 8
  %253 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 11
  %254 = load i32, i32* %253, align 8
  %255 = and i32 %254, 1
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %281

257:                                              ; preds = %250
  %258 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 4, i32 0, i32 0, i32 0
  %259 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %258, align 8
  %260 = call i8* @_Znwm(i64 104) #11
  %261 = bitcast i8* %260 to %"class.spvtools::opt::analysis::DefUseManager"*
  %262 = getelementptr inbounds i8, i8* %260, i64 32
  %263 = bitcast i8* %262 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %260, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %263, align 4
  %264 = getelementptr inbounds i8, i8* %260, i64 48
  %265 = getelementptr inbounds i8, i8* %260, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %264, i8 0, i64 16, i1 false) #10
  %266 = bitcast i8* %265 to i8**
  store i8* %264, i8** %266, align 8
  %267 = getelementptr inbounds i8, i8* %260, i64 64
  %268 = getelementptr inbounds i8, i8* %260, i64 96
  %269 = bitcast i8* %268 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %269, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %261, %"class.spvtools::opt::Module"* %259) #10
  %270 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 6
  %271 = ptrtoint i8* %260 to i64
  %272 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %270, i64 0, i32 0, i32 0, i32 0
  %273 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %272, align 8
  %274 = bitcast %"class.std::__1::unique_ptr.62"* %270 to i64*
  store i64 %271, i64* %274, align 8
  %275 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %273, null
  br i1 %275, label %278, label %276

276:                                              ; preds = %257
  %277 = bitcast %"class.std::__1::unique_ptr.62"* %270 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %277, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %273) #10
  br label %278

278:                                              ; preds = %276, %257
  %279 = load i32, i32* %253, align 8
  %280 = or i32 %279, 1
  store i32 %280, i32* %253, align 8
  br label %281

281:                                              ; preds = %250, %278
  %282 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 6, i32 0, i32 0, i32 0
  %283 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %282, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #10
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS3_8FunctionEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %130, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %131, align 8
  store %"class.spvtools::opt::InstructionList::iterator"* %3, %"class.spvtools::opt::InstructionList::iterator"** %132, align 8
  store %"class.spvtools::opt::DeadInsertElimPass"* %0, %"class.spvtools::opt::DeadInsertElimPass"** %134, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %283, i32 %251, %"class.std::__1::function.957"* nonnull dereferenceable(32) %5) #10
  %284 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %131, align 8
  %285 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %284, i64 0, i32 1
  %286 = load void (i8*)*, void (i8*)** %285, align 8
  %287 = icmp eq void (i8*)* %286, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %281
  %289 = load i8*, i8** %135, align 8
  call void %286(i8* %289) #10
  br label %290

290:                                              ; preds = %281, %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #10
  br label %291

291:                                              ; preds = %215, %218, %290, %237
  %292 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %136, align 8
  %293 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %292, i64 0, i32 1
  %294 = bitcast %"class.spvtools::opt::Instruction"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  store i64 %295, i64* %125, align 8
  %296 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %157, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %296, i64 0, i32 2, i32 0, i32 1
  %298 = inttoptr i64 %295 to %"class.spvtools::opt::Instruction"*
  %299 = icmp eq %"class.spvtools::opt::Instruction"* %297, %298
  br i1 %299, label %166, label %172

300:                                              ; preds = %323
  %301 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %143, align 8
  %302 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %144, align 8
  %303 = icmp eq %"class.spvtools::opt::Instruction"** %301, %302
  br i1 %303, label %486, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0
  %306 = bitcast %"class.std::__1::function.957"* %7 to i8*
  %307 = ptrtoint %"class.std::__1::vector.963"* %6 to i64
  %308 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %7, i64 0, i32 0, i32 1, i32 0
  %309 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %7, i64 0, i32 0, i32 2
  %310 = bitcast %"class.std::__1::function.957"* %7 to i64*
  %311 = getelementptr inbounds %"class.std::__1::function.957", %"class.std::__1::function.957"* %7, i64 0, i32 0, i32 0, i32 0
  br label %472

312:                                              ; preds = %147, %323
  %313 = phi i8 [ 0, %147 ], [ %324, %323 ]
  %314 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %325, %323 ]
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %316 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %315, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %316, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %318 = bitcast %"class.spvtools::opt::Instruction"** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %316, i64 0, i32 2, i32 0, i32 1
  %321 = inttoptr i64 %319 to %"class.spvtools::opt::Instruction"*
  %322 = icmp eq %"class.spvtools::opt::Instruction"* %320, %321
  br i1 %322, label %323, label %328

323:                                              ; preds = %462, %312
  %324 = phi i8 [ %313, %312 ], [ %463, %462 ]
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 1
  %326 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %119, align 8
  %327 = icmp eq %"class.std::__1::unique_ptr.40"* %325, %326
  br i1 %327, label %300, label %312

328:                                              ; preds = %312, %462
  %329 = phi %"class.spvtools::opt::Instruction"* [ %470, %462 ], [ %321, %312 ]
  %330 = phi i64 [ %467, %462 ], [ %319, %312 ]
  %331 = phi i8 [ %463, %462 ], [ %313, %312 ]
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 2
  %333 = load i32, i32* %332, align 8
  %334 = icmp eq i32 %333, 82
  br i1 %334, label %335, label %462

335:                                              ; preds = %328
  %336 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 4
  %337 = load i8, i8* %336, align 1, !range !2
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %344, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 3
  %341 = load i8, i8* %340, align 4, !range !2
  %342 = zext i8 %341 to i32
  %343 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %329, i32 %342) #10
  br label %344

344:                                              ; preds = %335, %339
  %345 = phi i32 [ %343, %339 ], [ 0, %335 ]
  %346 = zext i32 %345 to i64
  %347 = load i64, i64* %148, align 8
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %396, label %349

349:                                              ; preds = %344
  %350 = call i64 @llvm.ctpop.i64(i64 %347) #10, !range !3
  %351 = icmp ugt i64 %350, 1
  br i1 %351, label %355, label %352

352:                                              ; preds = %349
  %353 = add i64 %347, 4294967295
  %354 = and i64 %353, %346
  br label %359

355:                                              ; preds = %349
  %356 = icmp ugt i64 %347, %346
  br i1 %356, label %359, label %357

357:                                              ; preds = %355
  %358 = urem i64 %346, %347
  br label %359

359:                                              ; preds = %357, %355, %352
  %360 = phi i64 [ %354, %352 ], [ %358, %357 ], [ %346, %355 ]
  %361 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %149, align 8
  %362 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %361, i64 %360
  %363 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %362, align 8
  %364 = icmp eq %"struct.std::__1::__hash_node_base.915"* %363, null
  br i1 %364, label %396, label %365

365:                                              ; preds = %359
  %366 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %363, i64 0, i32 0
  %367 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %366, align 8
  %368 = icmp eq %"struct.std::__1::__hash_node_base.915"* %367, null
  br i1 %368, label %396, label %369

369:                                              ; preds = %365
  %370 = add i64 %347, -1
  br label %371

371:                                              ; preds = %392, %369
  %372 = phi %"struct.std::__1::__hash_node_base.915"* [ %367, %369 ], [ %394, %392 ]
  %373 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %372, i64 1
  %374 = bitcast %"struct.std::__1::__hash_node_base.915"* %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = icmp eq i64 %375, %346
  br i1 %376, label %387, label %377

377:                                              ; preds = %371
  br i1 %351, label %380, label %378

378:                                              ; preds = %377
  %379 = and i64 %375, %370
  br label %384

380:                                              ; preds = %377
  %381 = icmp ult i64 %375, %347
  br i1 %381, label %384, label %382

382:                                              ; preds = %380
  %383 = urem i64 %375, %347
  br label %384

384:                                              ; preds = %382, %380, %378
  %385 = phi i64 [ %379, %378 ], [ %383, %382 ], [ %375, %380 ]
  %386 = icmp eq i64 %385, %360
  br i1 %386, label %392, label %396

387:                                              ; preds = %371
  %388 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %372, i64 2
  %389 = bitcast %"struct.std::__1::__hash_node_base.915"* %388 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = icmp eq i32 %390, %345
  br i1 %391, label %462, label %392

392:                                              ; preds = %387, %384
  %393 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %372, i64 0, i32 0
  %394 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %393, align 8
  %395 = icmp eq %"struct.std::__1::__hash_node_base.915"* %394, null
  br i1 %395, label %396, label %371

396:                                              ; preds = %384, %392, %359, %344, %365
  %397 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 3
  %398 = load i8, i8* %397, align 4, !range !2
  %399 = icmp eq i8 %398, 0
  %400 = load i8, i8* %336, align 1, !range !2
  %401 = icmp eq i8 %400, 0
  %402 = select i1 %401, i32 1, i32 2
  %403 = xor i1 %401, true
  %404 = zext i1 %403 to i32
  %405 = select i1 %399, i32 %404, i32 %402
  %406 = add nuw nsw i32 %405, 1
  %407 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %329, i32 %406) #10
  %408 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  %409 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %408, i32 %345, i32 %407) #10
  %410 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %144, align 8
  %411 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %145, align 8
  %412 = icmp ult %"class.spvtools::opt::Instruction"** %410, %411
  %413 = ptrtoint %"class.spvtools::opt::Instruction"** %411 to i64
  br i1 %412, label %414, label %418

414:                                              ; preds = %396
  %415 = bitcast %"class.spvtools::opt::Instruction"** %410 to i64*
  store i64 %330, i64* %415, align 8
  %416 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %410, i64 1
  %417 = ptrtoint %"class.spvtools::opt::Instruction"** %416 to i64
  store i64 %417, i64* %151, align 8
  br label %462

418:                                              ; preds = %396
  %419 = ptrtoint %"class.spvtools::opt::Instruction"** %410 to i64
  %420 = load i64, i64* %152, align 8
  %421 = sub i64 %419, %420
  %422 = ashr exact i64 %421, 3
  %423 = add nsw i64 %422, 1
  %424 = icmp ugt i64 %423, 2305843009213693951
  br i1 %424, label %425, label %427

425:                                              ; preds = %418
  %426 = bitcast %"class.std::__1::vector.963"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %426) #12
  unreachable

427:                                              ; preds = %418
  %428 = sub i64 %413, %420
  %429 = ashr exact i64 %428, 3
  %430 = icmp ult i64 %429, 1152921504606846975
  br i1 %430, label %431, label %439

431:                                              ; preds = %427
  %432 = ashr exact i64 %428, 2
  %433 = icmp ult i64 %432, %423
  %434 = select i1 %433, i64 %423, i64 %432
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %444, label %436

436:                                              ; preds = %431
  %437 = icmp ugt i64 %434, 2305843009213693951
  br i1 %437, label %438, label %439

438:                                              ; preds = %436
  call void @abort() #12
  unreachable

439:                                              ; preds = %436, %427
  %440 = phi i64 [ %434, %436 ], [ 2305843009213693951, %427 ]
  %441 = shl i64 %440, 3
  %442 = call i8* @_Znwm(i64 %441) #11
  %443 = bitcast i8* %442 to %"class.spvtools::opt::Instruction"**
  br label %444

444:                                              ; preds = %439, %431
  %445 = phi i64 [ %440, %439 ], [ 0, %431 ]
  %446 = phi i8* [ %442, %439 ], [ null, %431 ]
  %447 = phi %"class.spvtools::opt::Instruction"** [ %443, %439 ], [ null, %431 ]
  %448 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %447, i64 %422
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %447, i64 %445
  %450 = ptrtoint %"class.spvtools::opt::Instruction"** %449 to i64
  %451 = bitcast %"class.spvtools::opt::Instruction"** %448 to i64*
  store i64 %330, i64* %451, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %448, i64 1
  %453 = ptrtoint %"class.spvtools::opt::Instruction"** %452 to i64
  %454 = ptrtoint %"class.spvtools::opt::Instruction"** %447 to i64
  %455 = icmp sgt i64 %421, 0
  br i1 %455, label %456, label %458

456:                                              ; preds = %444
  %457 = inttoptr i64 %420 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %446, i8* align 8 %457, i64 %421, i1 false) #10
  br label %458

458:                                              ; preds = %456, %444
  store i64 %454, i64* %152, align 8
  store i64 %453, i64* %151, align 8
  store i64 %450, i64* %153, align 8
  %459 = icmp eq i64 %420, 0
  br i1 %459, label %462, label %460

460:                                              ; preds = %458
  %461 = inttoptr i64 %420 to i8*
  call void @_ZdlPv(i8* %461) #11
  br label %462

462:                                              ; preds = %387, %414, %458, %460, %328
  %463 = phi i8 [ %331, %328 ], [ 1, %414 ], [ 1, %458 ], [ 1, %460 ], [ %331, %387 ]
  %464 = inttoptr i64 %330 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %465 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %464, i64 0, i32 1
  %466 = bitcast %"class.spvtools::opt::Instruction"** %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %315, align 8
  %469 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %468, i64 0, i32 2, i32 0, i32 1
  %470 = inttoptr i64 %467 to %"class.spvtools::opt::Instruction"*
  %471 = icmp eq %"class.spvtools::opt::Instruction"* %469, %470
  br i1 %471, label %323, label %328

472:                                              ; preds = %304, %482
  %473 = phi %"class.spvtools::opt::Instruction"** [ %302, %304 ], [ %484, %482 ]
  %474 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %473, i64 -1
  %475 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %474, align 8
  store %"class.spvtools::opt::Instruction"** %474, %"class.spvtools::opt::Instruction"*** %144, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %306) #10
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS3_8FunctionEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %308, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %309, align 8
  store i64 %307, i64* %310, align 8
  call void @_ZN8spvtools3opt7MemPass7DCEInstEPNS0_11InstructionERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::MemPass"* %305, %"class.spvtools::opt::Instruction"* %475, %"class.std::__1::function.957"* nonnull dereferenceable(32) %7) #10
  %476 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %309, align 8
  %477 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %476, i64 0, i32 1
  %478 = load void (i8*)*, void (i8*)** %477, align 8
  %479 = icmp eq void (i8*)* %478, null
  br i1 %479, label %482, label %480

480:                                              ; preds = %472
  %481 = load i8*, i8** %311, align 8
  call void %478(i8* %481) #10
  br label %482

482:                                              ; preds = %472, %480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %306) #10
  %483 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %143, align 8
  %484 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %144, align 8
  %485 = icmp eq %"class.spvtools::opt::Instruction"** %483, %484
  br i1 %485, label %486, label %472

486:                                              ; preds = %482, %300
  %487 = phi %"class.spvtools::opt::Instruction"** [ %302, %300 ], [ %483, %482 ]
  %488 = and i8 %324, 1
  %489 = icmp ne i8 %488, 0
  %490 = icmp eq %"class.spvtools::opt::Instruction"** %487, null
  br i1 %490, label %495, label %491

491:                                              ; preds = %486
  %492 = ptrtoint %"class.spvtools::opt::Instruction"** %487 to i64
  %493 = bitcast %"class.spvtools::opt::Instruction"*** %144 to i64*
  store i64 %492, i64* %493, align 8
  %494 = bitcast %"class.spvtools::opt::Instruction"** %487 to i8*
  call void @_ZdlPv(i8* %494) #11
  br label %495

495:                                              ; preds = %139, %486, %491
  %496 = phi i1 [ %489, %486 ], [ %489, %491 ], [ false, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #10
  ret i1 %496
}

declare i32 @_Z20spvOpcodeIsComposite6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.957"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt7MemPass7DCEInstEPNS0_11InstructionERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::MemPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.957"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18DeadInsertElimPass7ProcessEv(%"class.spvtools::opt::DeadInsertElimPass"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.971", align 8
  %3 = bitcast %"class.std::__1::function.971"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #10
  %4 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 2
  %6 = ptrtoint %"class.spvtools::opt::DeadInsertElimPass"* %0 to i64
  %7 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %8 = bitcast i8* %7 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass7ProcessEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %4, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18DeadInsertElimPass7ProcessEvE3$_2FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %5, align 8
  %9 = bitcast %"class.std::__1::function.971"* %2 to i64*
  store i64 %6, i64* %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %11, %"class.std::__1::function.971"* nonnull dereferenceable(32) %2) #10
  %13 = select i1 %12, i32 16, i32 17
  %14 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %5, align 8
  %15 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %14, i64 0, i32 1
  %16 = load void (i8*)*, void (i8*)** %15, align 8
  %17 = icmp eq void (i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.std::__1::function.971", %"class.std::__1::function.971"* %2, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void %16(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #10
  ret i32 %13
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.971"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18DeadInsertElimPassD2Ev(%"class.spvtools::opt::DeadInsertElimPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt18DeadInsertElimPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.937"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.937"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.937"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  %11 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.937"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.937"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %35) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18DeadInsertElimPassD0Ev(%"class.spvtools::opt::DeadInsertElimPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt18DeadInsertElimPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.937"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.937"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.937", %"struct.std::__1::__hash_node_base.937"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.937"*, %"struct.std::__1::__hash_node_base.937"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.937"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  %11 = icmp eq %"struct.std::__1::__hash_node_base.937"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.937"**, %"struct.std::__1::__hash_node_base.937"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.937"** null, %"struct.std::__1::__hash_node_base.937"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.937"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.937"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::DeadInsertElimPass", %"class.spvtools::opt::DeadInsertElimPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %35) #10
  %36 = bitcast %"class.spvtools::opt::DeadInsertElimPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt18DeadInsertElimPass4nameEv(%"class.spvtools::opt::DeadInsertElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt18DeadInsertElimPass20GetPreservedAnalysesEv(%"class.spvtools::opt::DeadInsertElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49343
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #10
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #10
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #11, !noalias !9
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !9
  store i32 %58, i32* %57, align 4, !noalias !9
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !9
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !9
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #10, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #10
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #10, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #10, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !12

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less.999"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS3_8FunctionEE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1007", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.1000", align 8
  %7 = alloca %"class.std::__1::unordered_set.910", align 8
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %"class.spvtools::opt::DeadInsertElimPass"**
  %10 = load %"class.spvtools::opt::DeadInsertElimPass"*, %"class.spvtools::opt::DeadInsertElimPass"** %9, align 8
  %11 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %1) #10
  %12 = icmp eq i32 %11, 134217727
  br i1 %12, label %13, label %114

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  switch i32 %15, label %109 [
    i32 82, label %114
    i32 245, label %114
    i32 81, label %16
  ]

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  %20 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  store i32 0, i32* %5, align 4
  %21 = bitcast %"class.std::__1::function.1000"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %6, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS8_8FunctionEENK3$_0clEPNS8_11InstructionEEUlPKjE_S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %22, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS5_8FunctionEENK3$_0clEPNS5_11InstructionEEUlPKjE_FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %23, align 8
  %24 = bitcast %"class.std::__1::function.1000"* %6 to i32**
  store i32* %5, i32** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %6, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast [8 x i8]* %25 to %"class.std::__1::vector.3"**
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %26, align 8
  %27 = bitcast %"class.std::__1::function.1007"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  %28 = ptrtoint %"class.std::__1::function.1000"* %6 to i64
  %29 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %3, i64 0, i32 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %29, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %30, align 8
  %31 = bitcast %"class.std::__1::function.1007"* %3 to i64*
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %33 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %33, %35
  br i1 %36, label %60, label %37

37:                                               ; preds = %16
  %38 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %3, i64 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %55, %37
  %40 = phi %"struct.spvtools::opt::Operand"* [ %33, %37 ], [ %56, %55 ]
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, -2
  %44 = icmp eq i32 %43, 2
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %46, align 8
  %48 = icmp eq %"class.std::__1::vector.3"* %47, null
  %49 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %47, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %51 = select i1 %48, i32** %50, i32** %49
  %52 = load i32*, i32** %51, align 8
  %53 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %29, align 8
  %54 = call zeroext i1 %53(%"union.std::__1::__function::__policy_storage"* nonnull %38, i32* %52) #10
  br i1 %54, label %55, label %58

55:                                               ; preds = %45, %39
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %56, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %55, %45
  %59 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %30, align 8
  br label %60

60:                                               ; preds = %58, %16
  %61 = phi %"struct.std::__1::__function::__policy"* [ %59, %58 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %16 ]
  %62 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %61, i64 0, i32 1
  %63 = load void (i8*)*, void (i8*)** %62, align 8
  %64 = icmp eq void (i8*)* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::function.1007", %"class.std::__1::function.1007"* %3, i64 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void %63(i8* %67) #10
  br label %68

68:                                               ; preds = %65, %60
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  %69 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %23, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %69, i64 0, i32 1
  %71 = load void (i8*)*, void (i8*)** %70, align 8
  %72 = icmp eq void (i8*)* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %6, i64 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void %71(i8* %75) #10
  br label %76

76:                                               ; preds = %73, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #10
  %77 = bitcast %"class.std::__1::unordered_set.910"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %7, i64 0, i32 0, i32 4, i64 0
  %81 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %7, i64 0, i32 0, i32 3
  %82 = bitcast %"class.std::__1::__compressed_pair.929"* %81 to i32*
  %83 = bitcast i8* %80 to i32*
  store i32 -1431655766, i32* %83, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %82, align 8
  %84 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"**
  %85 = load %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"*, %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template", %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"* %85, i64 0, i32 0
  %87 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %86, align 8
  call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %10, %"class.spvtools::opt::Instruction"* %87, %"class.std::__1::vector.3"* nonnull %4, i32 0, %"class.std::__1::unordered_set.910"* nonnull %7) #10
  %88 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %79, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.915"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %76, %90
  %91 = phi %"struct.std::__1::__hash_node_base.915"* [ %93, %90 ], [ %88, %76 ]
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %91, i64 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %92, align 8
  %94 = bitcast %"struct.std::__1::__hash_node_base.915"* %91 to i8*
  call void @_ZdlPv(i8* %94) #11
  %95 = icmp eq %"struct.std::__1::__hash_node_base.915"* %93, null
  br i1 %95, label %96, label %90

96:                                               ; preds = %90, %76
  %97 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %78, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.915"** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %96
  %100 = bitcast %"struct.std::__1::__hash_node_base.915"** %97 to i8*
  call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %99, %96
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  %102 = load i32*, i32** %18, align 8
  %103 = icmp eq i32* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %101
  %105 = ptrtoint i32* %102 to i64
  %106 = bitcast i32** %19 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast i32* %102 to i8*
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %104, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br label %114

109:                                              ; preds = %13
  %110 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"**
  %111 = load %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"*, %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"** %110, align 8
  %112 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template", %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template"* %111, i64 0, i32 0
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %112, align 8
  tail call void @_ZN8spvtools3opt18DeadInsertElimPass15MarkInsertChainEPNS0_11InstructionEPNSt3__16vectorIjNS4_9allocatorIjEEEEjPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::DeadInsertElimPass"* %10, %"class.spvtools::opt::Instruction"* %113, %"class.std::__1::vector.3"* null, i32 0, %"class.std::__1::unordered_set.910"* null) #10
  br label %114

114:                                              ; preds = %2, %13, %13, %108, %109
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1000"**
  %4 = load %"class.std::__1::function.1000"*, %"class.std::__1::function.1000"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1000", %"class.std::__1::function.1000"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #10
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS8_8FunctionEENK3$_0clEPNS8_11InstructionEEUlPKjE_S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32**
  %4 = load i32*, i32** %3, align 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %79, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %"class.std::__1::vector.3"**
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %12, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %22, label %17

17:                                               ; preds = %7
  %18 = load i32, i32* %1, align 4
  store i32 %18, i32* %12, align 4
  %19 = getelementptr inbounds i32, i32* %12, i64 1
  %20 = ptrtoint i32* %19 to i64
  %21 = bitcast i32** %11 to i64*
  store i64 %20, i64* %21, align 8
  br label %79

22:                                               ; preds = %7
  %23 = ptrtoint i32* %12 to i64
  %24 = bitcast i32** %11 to i64*
  %25 = bitcast %"class.std::__1::vector.3"* %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 2
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 4611686018427387903
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.3"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast i32** %13 to i64*
  %35 = sub i64 %16, %26
  %36 = ashr exact i64 %35, 2
  %37 = icmp ult i64 %36, 2305843009213693951
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 1
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 4611686018427387903
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 4611686018427387903, %33 ]
  %48 = shl i64 %47, 2
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i32*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i32* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i32, i32* %53, i64 %28
  %55 = getelementptr inbounds i32, i32* %53, i64 %52
  %56 = ptrtoint i32* %55 to i64
  %57 = load i32, i32* %1, align 4
  store i32 %57, i32* %54, align 4
  %58 = getelementptr inbounds i32, i32* %54, i64 1
  %59 = ptrtoint i32* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %24, align 8
  %63 = ptrtoint i32* %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 2
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds i32, i32* %54, i64 %66
  %68 = ptrtoint i32* %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %51
  %71 = bitcast i32* %67 to i8*
  %72 = bitcast i32* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %72, i64 %64, i1 false) #10
  %73 = load i32*, i32** %60, align 8
  br label %74

74:                                               ; preds = %70, %51
  %75 = phi i32* [ %61, %51 ], [ %73, %70 ]
  store i64 %68, i64* %25, align 8
  store i64 %59, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast i32* %75 to i8*
  tail call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %2, %17, %74, %77
  %80 = load i32*, i32** %3, align 8
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS3_8FunctionEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.963"**
  %4 = load %"class.std::__1::vector.963"*, %"class.std::__1::vector.963"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Instruction"** %6, %8
  %10 = ptrtoint %"class.spvtools::opt::Instruction"** %8 to i64
  br i1 %9, label %18, label %11

11:                                               ; preds = %2, %15
  %12 = phi %"class.spvtools::opt::Instruction"** [ %16, %15 ], [ %6, %2 ]
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %13, %1
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, i64 1
  %17 = icmp eq %"class.spvtools::opt::Instruction"** %16, %8
  br i1 %17, label %32, label %11

18:                                               ; preds = %11, %2
  %19 = phi %"class.spvtools::opt::Instruction"** [ %6, %2 ], [ %12, %11 ]
  %20 = icmp eq %"class.spvtools::opt::Instruction"** %19, %8
  br i1 %20, label %32, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 1
  %23 = ptrtoint %"class.spvtools::opt::Instruction"** %22 to i64
  %24 = sub i64 %10, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8*
  %29 = bitcast %"class.spvtools::opt::Instruction"** %22 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 %24, i1 false) #10
  br label %30

30:                                               ; preds = %27, %21
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, i64 %25
  store %"class.spvtools::opt::Instruction"** %31, %"class.spvtools::opt::Instruction"*** %7, align 8
  br label %32

32:                                               ; preds = %15, %18, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18DeadInsertElimPass7ProcessEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::DeadInsertElimPass"**
  %4 = load %"class.spvtools::opt::DeadInsertElimPass"*, %"class.spvtools::opt::DeadInsertElimPass"** %3, align 8
  %5 = tail call zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"* %4, %"class.spvtools::opt::Function"* %1) #10
  br i1 %5, label %6, label %8

6:                                                ; preds = %2, %6
  %7 = tail call zeroext i1 @_ZN8spvtools3opt18DeadInsertElimPass27EliminateDeadInsertsOnePassEPNS0_8FunctionE(%"class.spvtools::opt::DeadInsertElimPass"* %4, %"class.spvtools::opt::Function"* %1) #10
  br i1 %7, label %6, label %8, !llvm.loop !13

8:                                                ; preds = %6, %2
  %9 = phi i1 [ false, %2 ], [ true, %6 ]
  ret i1 %9
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !5}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!12 = distinct !{!12, !5}
!13 = distinct !{!13, !5}
