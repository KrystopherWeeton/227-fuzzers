; ModuleID = '../../courgette/third_party/bsdiff/bsdiff_create.cc'
source_filename = "../../courgette/third_party/bsdiff/bsdiff_create.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.courgette::SourceStream" = type { i8*, i8*, i8* }
%"class.courgette::SinkStream" = type { %"class.courgette::NoThrowBuffer" }
%"class.courgette::NoThrowBuffer" = type <{ i8*, i64, i64, %"class.courgette::MemoryAllocator", [7 x i8] }>
%"class.courgette::MemoryAllocator" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.courgette::SinkStreamSet" = type { i64, [10 x %"class.courgette::SinkStream"] }
%"class.courgette::PagedArray" = type { i32**, i64, i64 }
%"struct.bsdiff::MBSPatchHeader_" = type { [8 x i8], i32, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN9courgette10PagedArrayIiLi18EE8AllocateEm = comdat any

$_ZN6bsdiff6searchIRN9courgette10PagedArrayIiLi18EEEEENS_12SearchResultET_PKhiS8_i = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [52 x i8] c"../../courgette/third_party/bsdiff/bsdiff_create.cc\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Start bsdiff\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"Could not allocate I[], \00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c" bytes\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c" done divsufsort \00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"Control tuples: \00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"  copy bytes: \00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"  mistakes: \00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"  (skips: \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"  extra bytes: \00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"\0AUncompressed bsdiff patch size \00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"\0AEnd bsdiff \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6bsdiff17CreateBinaryPatchEPN9courgette12SourceStreamES2_PNS0_10SinkStreamE(%"class.courgette::SourceStream"* nocapture readonly, %"class.courgette::SourceStream"* nocapture readonly, %"class.courgette::SinkStream"*) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.courgette::SinkStreamSet", align 8
  %6 = alloca %"class.courgette::PagedArray", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.bsdiff::MBSPatchHeader_", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = tail call i64 @_ZN4base4Time3NowEv() #6
  %13 = tail call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i64 52) #6
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %3
  %16 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %16) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 96, i32 -1) #6
  %17 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %16) #6
  br label %20

20:                                               ; preds = %3, %15
  %21 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %2, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.courgette::SinkStreamSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %23) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 328, i1 false)
  call void @_ZN9courgette13SinkStreamSetC1Ev(%"class.courgette::SinkStreamSet"* nonnull %5) #6
  %24 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  %27 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 0
  %28 = select i1 %26, %"class.courgette::SinkStream"* null, %"class.courgette::SinkStream"* %27
  %29 = icmp ugt i64 %25, 1
  %30 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 1
  %31 = select i1 %29, %"class.courgette::SinkStream"* %30, %"class.courgette::SinkStream"* null
  %32 = icmp ugt i64 %25, 2
  %33 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 2
  %34 = select i1 %32, %"class.courgette::SinkStream"* %33, %"class.courgette::SinkStream"* null
  %35 = icmp ugt i64 %25, 3
  %36 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 3
  %37 = select i1 %35, %"class.courgette::SinkStream"* %36, %"class.courgette::SinkStream"* null
  %38 = icmp ugt i64 %25, 4
  %39 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 4
  %40 = select i1 %38, %"class.courgette::SinkStream"* %39, %"class.courgette::SinkStream"* null
  %41 = icmp ugt i64 %25, 5
  %42 = getelementptr inbounds %"class.courgette::SinkStreamSet", %"class.courgette::SinkStreamSet"* %5, i64 0, i32 1, i64 5
  %43 = select i1 %41, %"class.courgette::SinkStream"* %42, %"class.courgette::SinkStream"* null
  %44 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %0, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = ptrtoint i8* %45 to i64
  %50 = sub i64 %48, %49
  %51 = trunc i64 %50 to i32
  %52 = bitcast %"class.courgette::PagedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #6
  %53 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %6, i64 0, i32 0
  %54 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #6
  %55 = shl i64 %50, 32
  %56 = add i64 %55, 4294967296
  %57 = ashr exact i64 %56, 32
  %58 = call zeroext i1 @_ZN9courgette10PagedArrayIiLi18EE8AllocateEm(%"class.courgette::PagedArray"* nonnull %6, i64 %57)
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #6
  br i1 %60, label %61, label %523

61:                                               ; preds = %59
  %62 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %62) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 115, i32 2) #6
  %63 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %64 = bitcast %"class.std::__1::basic_ostringstream"* %63 to %"class.std::__1::basic_ostream"*
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i64 24) #6
  %66 = ashr exact i64 %56, 30
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %65, i64 %66) #6
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %62) #6
  br label %523

69:                                               ; preds = %20
  %70 = call i64 @_ZN4base4Time3NowEv() #6
  %71 = call i32 @_ZN6divsuf24divsufsort_include_emptyEPKhN9courgette19PagedArray_iteratorINS2_10PagedArrayIiLi18EEEiEEi(i8* %45, %"class.courgette::PagedArray"* nonnull %6, i64 0, i32 %51) #6
  %72 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i64 52) #6
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %92

74:                                               ; preds = %69
  %75 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %75) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 123, i32 -1) #6
  %76 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %77 = bitcast %"class.std::__1::basic_ostringstream"* %76 to %"class.std::__1::basic_ostream"*
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %77, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 17) #6
  %79 = call i64 @_ZN4base4Time3NowEv() #6
  %80 = sub nsw i64 %79, %70
  %81 = add i64 %80, -9223372036854775807
  %82 = icmp ult i64 %81, 2
  br i1 %82, label %86, label %83

83:                                               ; preds = %74
  %84 = sitofp i64 %80 to double
  %85 = fdiv double %84, 1.000000e+06
  br label %89

86:                                               ; preds = %74
  %87 = icmp slt i64 %80, 0
  %88 = select i1 %87, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %89

89:                                               ; preds = %83, %86
  %90 = phi double [ %88, %86 ], [ %85, %83 ]
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %78, double %90) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %75) #6
  br label %92

92:                                               ; preds = %69, %89
  %93 = icmp eq i32 %71, 0
  br i1 %93, label %94, label %523

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %1, i64 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"class.courgette::SourceStream", %"class.courgette::SourceStream"* %1, i64 0, i32 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = ptrtoint i8* %96 to i64
  %101 = sub i64 %99, %100
  %102 = trunc i64 %101 to i32
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %428

104:                                              ; preds = %94
  %105 = shl i64 %50, 32
  %106 = ashr exact i64 %105, 32
  %107 = shl i64 %101, 32
  %108 = ashr exact i64 %107, 32
  br label %109

109:                                              ; preds = %104, %416
  %110 = phi i32 [ %418, %416 ], [ 0, %104 ]
  %111 = phi i32 [ %426, %416 ], [ 0, %104 ]
  %112 = phi i32 [ %425, %416 ], [ 0, %104 ]
  %113 = phi i32 [ %424, %416 ], [ 0, %104 ]
  %114 = phi i32 [ %423, %416 ], [ 0, %104 ]
  %115 = phi i32 [ %422, %416 ], [ 0, %104 ]
  %116 = phi i32 [ %421, %416 ], [ 0, %104 ]
  %117 = phi i32 [ %420, %416 ], [ 0, %104 ]
  %118 = phi i32 [ %419, %416 ], [ 0, %104 ]
  %119 = phi i32 [ %417, %416 ], [ 0, %104 ]
  %120 = add i32 %110, %119
  %121 = icmp slt i32 %120, %102
  br i1 %121, label %122, label %216

122:                                              ; preds = %109
  %123 = sext i32 %111 to i64
  %124 = sext i32 %120 to i64
  br label %125

125:                                              ; preds = %203, %122
  %126 = phi i64 [ %124, %122 ], [ %205, %203 ]
  %127 = phi i1 [ true, %122 ], [ %206, %203 ]
  %128 = phi i32 [ %120, %122 ], [ %186, %203 ]
  %129 = phi i32 [ 0, %122 ], [ %204, %203 ]
  %130 = getelementptr inbounds i8, i8* %96, i64 %126
  %131 = sub nsw i64 %108, %126
  %132 = trunc i64 %131 to i32
  %133 = call i64 @_ZN6bsdiff6searchIRN9courgette10PagedArrayIiLi18EEEEENS_12SearchResultET_PKhiS8_i(%"class.courgette::PagedArray"* nonnull dereferenceable(24) %6, i8* %45, i32 %51, i8* %130, i32 %132)
  %134 = lshr i64 %133, 32
  %135 = trunc i64 %134 to i32
  %136 = trunc i64 %126 to i32
  %137 = add i32 %136, %135
  %138 = icmp slt i32 %128, %137
  br i1 %138, label %139, label %184

139:                                              ; preds = %125
  %140 = sext i32 %128 to i64
  %141 = sext i32 %137 to i64
  %142 = sub nsw i64 %141, %140
  %143 = xor i64 %140, -1
  %144 = and i64 %142, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %160, label %146

146:                                              ; preds = %139
  %147 = add nsw i64 %140, %123
  %148 = icmp slt i64 %147, %106
  br i1 %148, label %149, label %157

149:                                              ; preds = %146
  %150 = getelementptr inbounds i8, i8* %45, i64 %147
  %151 = load i8, i8* %150, align 1
  %152 = getelementptr inbounds i8, i8* %96, i64 %140
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %151, %153
  %155 = zext i1 %154 to i32
  %156 = add nsw i32 %129, %155
  br label %157

157:                                              ; preds = %149, %146
  %158 = phi i32 [ %129, %146 ], [ %156, %149 ]
  %159 = add nsw i64 %140, 1
  br label %160

160:                                              ; preds = %157, %139
  %161 = phi i32 [ %158, %157 ], [ undef, %139 ]
  %162 = phi i64 [ %159, %157 ], [ %140, %139 ]
  %163 = phi i32 [ %158, %157 ], [ %129, %139 ]
  %164 = sub nsw i64 0, %141
  %165 = icmp eq i64 %143, %164
  br i1 %165, label %184, label %166

166:                                              ; preds = %160, %561
  %167 = phi i64 [ %563, %561 ], [ %162, %160 ]
  %168 = phi i32 [ %562, %561 ], [ %163, %160 ]
  %169 = add nsw i64 %167, %123
  %170 = icmp slt i64 %169, %106
  br i1 %170, label %171, label %179

171:                                              ; preds = %166
  %172 = getelementptr inbounds i8, i8* %45, i64 %169
  %173 = load i8, i8* %172, align 1
  %174 = getelementptr inbounds i8, i8* %96, i64 %167
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %173, %175
  %177 = zext i1 %176 to i32
  %178 = add nsw i32 %168, %177
  br label %179

179:                                              ; preds = %171, %166
  %180 = phi i32 [ %168, %166 ], [ %178, %171 ]
  %181 = add nsw i64 %167, 1
  %182 = add nsw i64 %181, %123
  %183 = icmp slt i64 %182, %106
  br i1 %183, label %553, label %561

184:                                              ; preds = %160, %561, %125
  %185 = phi i32 [ %129, %125 ], [ %161, %160 ], [ %562, %561 ]
  %186 = phi i32 [ %128, %125 ], [ %137, %561 ], [ %137, %160 ]
  %187 = icmp eq i32 %185, %135
  %188 = icmp ne i32 %135, 0
  %189 = and i1 %188, %187
  %190 = add nsw i32 %185, 8
  %191 = icmp slt i32 %190, %135
  %192 = or i1 %189, %191
  br i1 %192, label %209, label %193

193:                                              ; preds = %184
  %194 = add nsw i64 %126, %123
  %195 = icmp slt i64 %194, %106
  br i1 %195, label %196, label %203

196:                                              ; preds = %193
  %197 = getelementptr inbounds i8, i8* %45, i64 %194
  %198 = load i8, i8* %197, align 1
  %199 = load i8, i8* %130, align 1
  %200 = icmp eq i8 %198, %199
  %201 = zext i1 %200 to i32
  %202 = sub i32 %185, %201
  br label %203

203:                                              ; preds = %196, %193
  %204 = phi i32 [ %185, %193 ], [ %202, %196 ]
  %205 = add nsw i64 %126, 1
  %206 = icmp slt i64 %205, %108
  %207 = trunc i64 %205 to i32
  %208 = icmp eq i32 %207, %102
  br i1 %208, label %213, label %125

209:                                              ; preds = %184
  %210 = trunc i64 %134 to i32
  %211 = trunc i64 %126 to i32
  %212 = trunc i64 %133 to i32
  br label %216

213:                                              ; preds = %203
  %214 = trunc i64 %134 to i32
  %215 = trunc i64 %133 to i32
  br i1 %206, label %226, label %264

216:                                              ; preds = %209, %109
  %217 = phi i32 [ %211, %209 ], [ %120, %109 ]
  %218 = phi i1 [ %127, %209 ], [ false, %109 ]
  %219 = phi i32 [ %212, %209 ], [ 0, %109 ]
  %220 = phi i32 [ %210, %209 ], [ %119, %109 ]
  %221 = phi i32 [ %185, %209 ], [ 0, %109 ]
  %222 = icmp ne i32 %220, %221
  %223 = icmp eq i32 %217, %102
  %224 = or i1 %223, %222
  br i1 %224, label %225, label %416

225:                                              ; preds = %216
  br i1 %218, label %226, label %264

226:                                              ; preds = %213, %225
  %227 = phi i32 [ %102, %213 ], [ %217, %225 ]
  %228 = phi i32 [ %215, %213 ], [ %219, %225 ]
  %229 = phi i32 [ %214, %213 ], [ %220, %225 ]
  %230 = icmp sle i32 %227, %113
  %231 = icmp slt i32 %228, 1
  %232 = or i1 %231, %230
  br i1 %232, label %264, label %233

233:                                              ; preds = %226
  %234 = sext i32 %228 to i64
  %235 = sext i32 %227 to i64
  %236 = sext i32 %113 to i64
  br label %237

237:                                              ; preds = %233, %237
  %238 = phi i64 [ 1, %233 ], [ %259, %237 ]
  %239 = phi i32 [ 0, %233 ], [ %258, %237 ]
  %240 = phi i32 [ 0, %233 ], [ %250, %237 ]
  %241 = phi i32 [ 0, %233 ], [ %257, %237 ]
  %242 = sub nsw i64 %234, %238
  %243 = getelementptr inbounds i8, i8* %45, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sub nsw i64 %235, %238
  %246 = getelementptr inbounds i8, i8* %96, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = icmp eq i8 %244, %247
  %249 = zext i1 %248 to i32
  %250 = add nuw nsw i32 %240, %249
  %251 = shl nuw nsw i32 %250, 1
  %252 = trunc i64 %238 to i32
  %253 = sub nsw i32 %251, %252
  %254 = shl nsw i32 %239, 1
  %255 = sub nsw i32 %254, %241
  %256 = icmp sgt i32 %253, %255
  %257 = select i1 %256, i32 %252, i32 %241
  %258 = select i1 %256, i32 %250, i32 %239
  %259 = add nuw nsw i64 %238, 1
  %260 = add nsw i64 %259, %236
  %261 = icmp sgt i64 %260, %235
  %262 = icmp sge i64 %238, %234
  %263 = or i1 %262, %261
  br i1 %263, label %264, label %237

264:                                              ; preds = %237, %213, %226, %225
  %265 = phi i32 [ %217, %225 ], [ %227, %226 ], [ %102, %213 ], [ %227, %237 ]
  %266 = phi i32 [ %219, %225 ], [ %228, %226 ], [ %215, %213 ], [ %228, %237 ]
  %267 = phi i32 [ %220, %225 ], [ %229, %226 ], [ %214, %213 ], [ %229, %237 ]
  %268 = phi i32 [ 0, %225 ], [ 0, %226 ], [ 0, %213 ], [ %257, %237 ]
  %269 = icmp slt i32 %113, %265
  br i1 %269, label %270, label %283

270:                                              ; preds = %264
  %271 = sext i32 %113 to i64
  %272 = sext i32 %112 to i64
  %273 = sext i32 %265 to i64
  %274 = sub nsw i64 %273, %271
  br label %275

275:                                              ; preds = %288, %270
  %276 = phi i64 [ 0, %270 ], [ %296, %288 ]
  %277 = phi i64 [ %271, %270 ], [ %305, %288 ]
  %278 = phi i32 [ 0, %270 ], [ %304, %288 ]
  %279 = phi i32 [ 0, %270 ], [ %295, %288 ]
  %280 = phi i32 [ 0, %270 ], [ %303, %288 ]
  %281 = add nsw i64 %276, %272
  %282 = icmp slt i64 %281, %106
  br i1 %282, label %288, label %283

283:                                              ; preds = %275, %288, %264
  %284 = phi i32 [ 0, %264 ], [ %303, %288 ], [ %280, %275 ]
  %285 = add nsw i32 %284, %113
  %286 = sub nsw i32 %265, %268
  %287 = icmp sgt i32 %285, %286
  br i1 %287, label %307, label %351

288:                                              ; preds = %275
  %289 = getelementptr inbounds i8, i8* %45, i64 %281
  %290 = load i8, i8* %289, align 1
  %291 = getelementptr inbounds i8, i8* %96, i64 %277
  %292 = load i8, i8* %291, align 1
  %293 = icmp eq i8 %290, %292
  %294 = zext i1 %293 to i32
  %295 = add nuw nsw i32 %279, %294
  %296 = add nuw nsw i64 %276, 1
  %297 = shl nuw nsw i32 %295, 1
  %298 = trunc i64 %296 to i32
  %299 = sub nsw i32 %297, %298
  %300 = shl nsw i32 %278, 1
  %301 = sub nsw i32 %300, %280
  %302 = icmp sgt i32 %299, %301
  %303 = select i1 %302, i32 %298, i32 %280
  %304 = select i1 %302, i32 %295, i32 %278
  %305 = add nsw i64 %277, 1
  %306 = icmp eq i64 %296, %274
  br i1 %306, label %283, label %275

307:                                              ; preds = %283
  %308 = sub nsw i32 %285, %286
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %310, label %317

310:                                              ; preds = %307
  %311 = add nsw i32 %284, %112
  %312 = sub i32 %311, %308
  %313 = sub i32 %266, %268
  %314 = sext i32 %312 to i64
  %315 = sext i32 %313 to i64
  %316 = sext i32 %308 to i64
  br label %322

317:                                              ; preds = %322, %307
  %318 = phi i32 [ 0, %307 ], [ %349, %322 ]
  %319 = sub i32 %284, %308
  %320 = add i32 %319, %318
  %321 = sub nsw i32 %268, %318
  br label %351

322:                                              ; preds = %310, %322
  %323 = phi i64 [ 0, %310 ], [ %345, %322 ]
  %324 = phi i32 [ 0, %310 ], [ %346, %322 ]
  %325 = phi i32 [ 0, %310 ], [ %349, %322 ]
  %326 = phi i32 [ 0, %310 ], [ %347, %322 ]
  %327 = phi i32 [ 0, %310 ], [ %343, %322 ]
  %328 = add nsw i32 %324, %286
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* %96, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = add nsw i64 %323, %314
  %333 = getelementptr inbounds i8, i8* %45, i64 %332
  %334 = load i8, i8* %333, align 1
  %335 = icmp eq i8 %331, %334
  %336 = zext i1 %335 to i32
  %337 = add nsw i32 %327, %336
  %338 = add nsw i64 %323, %315
  %339 = getelementptr inbounds i8, i8* %45, i64 %338
  %340 = load i8, i8* %339, align 1
  %341 = icmp eq i8 %331, %340
  %342 = zext i1 %341 to i32
  %343 = sub i32 %337, %342
  %344 = icmp sgt i32 %343, %326
  %345 = add nuw nsw i64 %323, 1
  %346 = add nuw nsw i32 %324, 1
  %347 = select i1 %344, i32 %343, i32 %326
  %348 = trunc i64 %345 to i32
  %349 = select i1 %344, i32 %348, i32 %325
  %350 = icmp slt i64 %345, %316
  br i1 %350, label %322, label %317

351:                                              ; preds = %317, %283
  %352 = phi i32 [ %321, %317 ], [ %268, %283 ]
  %353 = phi i32 [ %320, %317 ], [ %284, %283 ]
  %354 = icmp sgt i32 %353, 0
  br i1 %354, label %355, label %384

355:                                              ; preds = %351
  %356 = sext i32 %112 to i64
  %357 = sext i32 %113 to i64
  %358 = zext i32 %353 to i64
  br label %359

359:                                              ; preds = %378, %355
  %360 = phi i64 [ 0, %355 ], [ %381, %378 ]
  %361 = phi i32 [ %115, %355 ], [ %380, %378 ]
  %362 = phi i32 [ %118, %355 ], [ %379, %378 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #6
  store i8 -86, i8* %9, align 1
  %363 = add nsw i64 %360, %357
  %364 = getelementptr inbounds i8, i8* %96, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = add nsw i64 %360, %356
  %367 = getelementptr inbounds i8, i8* %45, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = sub i8 %365, %368
  store i8 %369, i8* %9, align 1
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %376, label %371

371:                                              ; preds = %359
  %372 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %37, i32 %362) #6
  br i1 %372, label %373, label %383

373:                                              ; preds = %371
  %374 = add nsw i32 %361, 1
  %375 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %40, i8* nonnull %9, i64 1) #6
  br i1 %375, label %378, label %383

376:                                              ; preds = %359
  %377 = add i32 %362, 1
  br label %378

378:                                              ; preds = %373, %376
  %379 = phi i32 [ 0, %373 ], [ %377, %376 ]
  %380 = phi i32 [ %374, %373 ], [ %361, %376 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  %381 = add nuw nsw i64 %360, 1
  %382 = icmp eq i64 %381, %358
  br i1 %382, label %384, label %359

383:                                              ; preds = %371, %373
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #6
  br label %523

384:                                              ; preds = %378, %351
  %385 = phi i32 [ %118, %351 ], [ %379, %378 ]
  %386 = phi i32 [ %115, %351 ], [ %380, %378 ]
  %387 = sub i32 %265, %352
  %388 = add i32 %353, %113
  %389 = sub i32 %387, %388
  %390 = icmp sgt i32 %389, 0
  br i1 %390, label %391, label %402

391:                                              ; preds = %384
  %392 = sext i32 %388 to i64
  %393 = zext i32 %389 to i64
  br label %396

394:                                              ; preds = %396
  %395 = icmp eq i64 %401, %393
  br i1 %395, label %402, label %396

396:                                              ; preds = %394, %391
  %397 = phi i64 [ 0, %391 ], [ %401, %394 ]
  %398 = add nsw i64 %397, %392
  %399 = getelementptr inbounds i8, i8* %96, i64 %398
  %400 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %43, i8* %399, i64 1) #6
  %401 = add nuw nsw i64 %397, 1
  br i1 %400, label %394, label %523

402:                                              ; preds = %394, %384
  %403 = add nsw i32 %353, %116
  %404 = add nsw i32 %389, %114
  %405 = sub nsw i32 %266, %352
  %406 = add i32 %353, %112
  %407 = sub i32 %405, %406
  %408 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %28, i32 %353) #6
  br i1 %408, label %409, label %523

409:                                              ; preds = %402
  %410 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %31, i32 %389) #6
  br i1 %410, label %411, label %523

411:                                              ; preds = %409
  %412 = call zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"* %34, i32 %407) #6
  br i1 %412, label %413, label %523

413:                                              ; preds = %411
  %414 = add nsw i32 %117, 1
  %415 = sub nsw i32 %405, %387
  br label %416

416:                                              ; preds = %216, %413
  %417 = phi i32 [ %267, %413 ], [ %220, %216 ]
  %418 = phi i32 [ %265, %413 ], [ %217, %216 ]
  %419 = phi i32 [ %385, %413 ], [ %118, %216 ]
  %420 = phi i32 [ %414, %413 ], [ %117, %216 ]
  %421 = phi i32 [ %403, %413 ], [ %116, %216 ]
  %422 = phi i32 [ %386, %413 ], [ %115, %216 ]
  %423 = phi i32 [ %404, %413 ], [ %114, %216 ]
  %424 = phi i32 [ %387, %413 ], [ %113, %216 ]
  %425 = phi i32 [ %405, %413 ], [ %112, %216 ]
  %426 = phi i32 [ %415, %413 ], [ %111, %216 ]
  %427 = icmp slt i32 %418, %102
  br i1 %427, label %109, label %428

428:                                              ; preds = %416, %94
  %429 = phi i32 [ 0, %94 ], [ %419, %416 ]
  %430 = phi i32 [ 0, %94 ], [ %420, %416 ]
  %431 = phi i32 [ 0, %94 ], [ %421, %416 ]
  %432 = phi i32 [ 0, %94 ], [ %422, %416 ]
  %433 = phi i32 [ 0, %94 ], [ %423, %416 ]
  %434 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %37, i32 %429) #6
  br i1 %434, label %435, label %523

435:                                              ; preds = %428
  %436 = load i32**, i32*** %53, align 8
  %437 = icmp eq i32** %436, null
  br i1 %437, label %463, label %438

438:                                              ; preds = %435
  %439 = bitcast i32** %436 to i8*
  %440 = load i64, i64* %54, align 8
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %461, label %442

442:                                              ; preds = %438
  %443 = add i64 %440, -1
  store i64 %443, i64* %54, align 8
  %444 = getelementptr inbounds i32*, i32** %436, i64 %443
  %445 = bitcast i32** %444 to i8**
  %446 = load i8*, i8** %445, align 8
  call void @free(i8* %446) #6
  %447 = load i64, i64* %54, align 8
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %458, label %449

449:                                              ; preds = %442, %449
  %450 = phi i64 [ %456, %449 ], [ %447, %442 ]
  %451 = load i32**, i32*** %53, align 8
  %452 = add i64 %450, -1
  store i64 %452, i64* %54, align 8
  %453 = getelementptr inbounds i32*, i32** %451, i64 %452
  %454 = bitcast i32** %453 to i8**
  %455 = load i8*, i8** %454, align 8
  call void @free(i8* %455) #6
  %456 = load i64, i64* %54, align 8
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %449

458:                                              ; preds = %449, %442
  %459 = bitcast %"class.courgette::PagedArray"* %6 to i8**
  %460 = load i8*, i8** %459, align 8
  br label %461

461:                                              ; preds = %458, %438
  %462 = phi i8* [ %460, %458 ], [ %439, %438 ]
  call void @free(i8* %462) #6
  store i32** null, i32*** %53, align 8
  br label %463

463:                                              ; preds = %435, %461
  %464 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %10, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %464) #6
  %465 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %10, i64 0, i32 1
  %466 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %10, i64 0, i32 2
  %467 = getelementptr inbounds %"struct.bsdiff::MBSPatchHeader_", %"struct.bsdiff::MBSPatchHeader_"* %10, i64 0, i32 3
  %468 = bitcast %"struct.bsdiff::MBSPatchHeader_"* %10 to i64*
  store i64 3617593681178214983, i64* %468, align 8
  store i32 %51, i32* %465, align 8
  %469 = ashr exact i64 %55, 32
  %470 = call i32 @_ZN9courgette12CalculateCrcEPKhm(i8* %45, i64 %469) #6
  store i32 %470, i32* %466, align 4
  store i32 %102, i32* %467, align 8
  %471 = call zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"* %2, i8* nonnull %464, i64 8) #6
  %472 = load i32, i32* %465, align 8
  %473 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %2, i32 %472) #6
  %474 = and i1 %471, %473
  %475 = load i32, i32* %466, align 4
  %476 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %2, i32 %475) #6
  %477 = and i1 %474, %476
  %478 = load i32, i32* %467, align 8
  %479 = call zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"* %2, i32 %478) #6
  %480 = and i1 %477, %479
  br i1 %480, label %481, label %521

481:                                              ; preds = %463
  %482 = getelementptr inbounds %"class.courgette::SinkStream", %"class.courgette::SinkStream"* %37, i64 0, i32 0, i32 1
  %483 = load i64, i64* %482, align 8
  %484 = call zeroext i1 @_ZN9courgette13SinkStreamSet6CopyToEPNS_10SinkStreamE(%"class.courgette::SinkStreamSet"* nonnull %5, %"class.courgette::SinkStream"* %2) #6
  br i1 %484, label %485, label %521

485:                                              ; preds = %481
  %486 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i64 52) #6
  %487 = icmp sgt i32 %486, 0
  br i1 %487, label %488, label %521

488:                                              ; preds = %485
  %489 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %489) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i32 338, i32 -1) #6
  %490 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %491 = bitcast %"class.std::__1::basic_ostringstream"* %490 to %"class.std::__1::basic_ostream"*
  %492 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %491, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i64 16) #6
  %493 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %492, i32 %430) #6
  %494 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %493, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 14) #6
  %495 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %494, i32 %431) #6
  %496 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %495, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 12) #6
  %497 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %496, i32 %432) #6
  %498 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %497, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10) #6
  %499 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %498, i64 %483) #6
  %500 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %499, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #6
  %501 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %500, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #6
  %502 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %501, i32 %433) #6
  %503 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %502, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i64 32) #6
  %504 = load i64, i64* %21, align 8
  %505 = sub i64 %504, %22
  %506 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %503, i64 %505) #6
  %507 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %506, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12) #6
  %508 = call i64 @_ZN4base4Time3NowEv() #6
  %509 = sub nsw i64 %508, %12
  %510 = add i64 %509, -9223372036854775807
  %511 = icmp ult i64 %510, 2
  br i1 %511, label %515, label %512

512:                                              ; preds = %488
  %513 = sitofp i64 %509 to double
  %514 = fdiv double %513, 1.000000e+06
  br label %518

515:                                              ; preds = %488
  %516 = icmp slt i64 %509, 0
  %517 = select i1 %516, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %518

518:                                              ; preds = %512, %515
  %519 = phi double [ %517, %515 ], [ %514, %512 ]
  %520 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %507, double %519) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %489) #6
  br label %521

521:                                              ; preds = %518, %485, %481, %463
  %522 = phi i32 [ 1, %463 ], [ 1, %481 ], [ 0, %485 ], [ 0, %518 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %464) #6
  br label %523

523:                                              ; preds = %411, %409, %402, %396, %383, %521, %428, %61, %59, %92
  %524 = phi i32 [ 4, %92 ], [ 1, %59 ], [ 1, %61 ], [ %522, %521 ], [ 1, %428 ], [ 1, %383 ], [ 1, %396 ], [ 1, %402 ], [ 1, %409 ], [ 1, %411 ]
  %525 = load i32**, i32*** %53, align 8
  %526 = icmp eq i32** %525, null
  br i1 %526, label %552, label %527

527:                                              ; preds = %523
  %528 = bitcast i32** %525 to i8*
  %529 = load i64, i64* %54, align 8
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %550, label %531

531:                                              ; preds = %527
  %532 = add i64 %529, -1
  store i64 %532, i64* %54, align 8
  %533 = getelementptr inbounds i32*, i32** %525, i64 %532
  %534 = bitcast i32** %533 to i8**
  %535 = load i8*, i8** %534, align 8
  call void @free(i8* %535) #6
  %536 = load i64, i64* %54, align 8
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %547, label %538

538:                                              ; preds = %531, %538
  %539 = phi i64 [ %545, %538 ], [ %536, %531 ]
  %540 = load i32**, i32*** %53, align 8
  %541 = add i64 %539, -1
  store i64 %541, i64* %54, align 8
  %542 = getelementptr inbounds i32*, i32** %540, i64 %541
  %543 = bitcast i32** %542 to i8**
  %544 = load i8*, i8** %543, align 8
  call void @free(i8* %544) #6
  %545 = load i64, i64* %54, align 8
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %538

547:                                              ; preds = %538, %531
  %548 = bitcast %"class.courgette::PagedArray"* %6 to i8**
  %549 = load i8*, i8** %548, align 8
  br label %550

550:                                              ; preds = %547, %527
  %551 = phi i8* [ %549, %547 ], [ %528, %527 ]
  call void @free(i8* %551) #6
  store i32** null, i32*** %53, align 8
  br label %552

552:                                              ; preds = %523, %550
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #6
  call void @_ZN9courgette13SinkStreamSetD1Ev(%"class.courgette::SinkStreamSet"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %23) #6
  ret i32 %524

553:                                              ; preds = %179
  %554 = getelementptr inbounds i8, i8* %45, i64 %182
  %555 = load i8, i8* %554, align 1
  %556 = getelementptr inbounds i8, i8* %96, i64 %181
  %557 = load i8, i8* %556, align 1
  %558 = icmp eq i8 %555, %557
  %559 = zext i1 %558 to i32
  %560 = add nsw i32 %180, %559
  br label %561

561:                                              ; preds = %553, %179
  %562 = phi i32 [ %180, %179 ], [ %560, %553 ]
  %563 = add nsw i64 %167, 2
  %564 = icmp eq i64 %563, %141
  br i1 %564, label %184, label %166
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN9courgette13SinkStreamSetC1Ev(%"class.courgette::SinkStreamSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9courgette10PagedArrayIiLi18EE8AllocateEm(%"class.courgette::PagedArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 0
  %5 = load i32**, i32*** %4, align 8
  %6 = icmp eq i32** %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %2
  %8 = bitcast i32** %5 to i8*
  %9 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %7
  %13 = add i64 %10, -1
  store i64 %13, i64* %9, align 8
  %14 = getelementptr inbounds i32*, i32** %5, i64 %13
  %15 = bitcast i32** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @free(i8* %16) #6
  %17 = load i64, i64* %9, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %12, %19
  %20 = phi i64 [ %26, %19 ], [ %17, %12 ]
  %21 = load i32**, i32*** %4, align 8
  %22 = add i64 %20, -1
  store i64 %22, i64* %9, align 8
  %23 = getelementptr inbounds i32*, i32** %21, i64 %22
  %24 = bitcast i32** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @free(i8* %25) #6
  %26 = load i64, i64* %9, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %19

28:                                               ; preds = %19, %12
  %29 = bitcast %"class.courgette::PagedArray"* %0 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %7
  %32 = phi i8* [ %30, %28 ], [ %8, %7 ]
  tail call void @free(i8* %32) #6
  store i32** null, i32*** %4, align 8
  br label %33

33:                                               ; preds = %2, %31
  %34 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 1
  store i64 %1, i64* %34, align 8
  %35 = add i64 %1, 262143
  %36 = lshr i64 %35, 18
  %37 = shl nuw nsw i64 %36, 3
  %38 = bitcast %"class.courgette::PagedArray"* %0 to i8**
  %39 = tail call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 %37, i8** %38) #6
  br i1 %39, label %40, label %86

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 2
  store i64 0, i64* %41, align 8
  %42 = icmp eq i64 %36, 0
  br i1 %42, label %86, label %43

43:                                               ; preds = %40
  %44 = bitcast i32** %3 to i8*
  %45 = bitcast i32** %3 to i8**
  %46 = bitcast i32** %3 to i64*
  br label %47

47:                                               ; preds = %43, %77
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #6
  store i32* null, i32** %3, align 8
  %48 = call zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64 1048576, i8** nonnull %45) #6
  br i1 %48, label %77, label %49

49:                                               ; preds = %47
  %50 = load i32**, i32*** %4, align 8
  %51 = icmp eq i32** %50, null
  br i1 %51, label %76, label %52

52:                                               ; preds = %49
  %53 = bitcast i32** %50 to i8*
  %54 = load i64, i64* %41, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  %57 = add i64 %54, -1
  store i64 %57, i64* %41, align 8
  %58 = getelementptr inbounds i32*, i32** %50, i64 %57
  %59 = bitcast i32** %58 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @free(i8* %60) #6
  %61 = load i64, i64* %41, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56, %63
  %64 = phi i64 [ %70, %63 ], [ %61, %56 ]
  %65 = load i32**, i32*** %4, align 8
  %66 = add i64 %64, -1
  store i64 %66, i64* %41, align 8
  %67 = getelementptr inbounds i32*, i32** %65, i64 %66
  %68 = bitcast i32** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  call void @free(i8* %69) #6
  %70 = load i64, i64* %41, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %56
  %73 = load i8*, i8** %38, align 8
  br label %74

74:                                               ; preds = %72, %52
  %75 = phi i8* [ %73, %72 ], [ %53, %52 ]
  call void @free(i8* %75) #6
  store i32** null, i32*** %4, align 8
  br label %76

76:                                               ; preds = %49, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #6
  br label %86

77:                                               ; preds = %47
  %78 = load i64, i64* %46, align 8
  %79 = load i32**, i32*** %4, align 8
  %80 = load i64, i64* %41, align 8
  %81 = getelementptr inbounds i32*, i32** %79, i64 %80
  %82 = bitcast i32** %81 to i64*
  store i64 %78, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #6
  %83 = load i64, i64* %41, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %41, align 8
  %85 = icmp ult i64 %84, %36
  br i1 %85, label %47, label %86

86:                                               ; preds = %77, %40, %76, %33
  %87 = phi i1 [ false, %76 ], [ false, %33 ], [ true, %40 ], [ true, %77 ]
  ret i1 %87
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare i32 @_ZN6divsuf24divsufsort_include_emptyEPKhN9courgette19PagedArray_iteratorINS2_10PagedArrayIiLi18EEEiEEi(i8*, %"class.courgette::PagedArray"*, i64, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6bsdiff6searchIRN9courgette10PagedArrayIiLi18EEEEENS_12SearchResultET_PKhiS8_i(%"class.courgette::PagedArray"* dereferenceable(24), i8*, i32, i8*, i32) local_unnamed_addr #0 comdat {
  %6 = icmp sgt i32 %2, 1
  %7 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 0
  %8 = load i32**, i32*** %7, align 8
  br i1 %6, label %9, label %49

9:                                                ; preds = %5
  %10 = sext i32 %2 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 %10
  %12 = sext i32 %4 to i64
  %13 = getelementptr inbounds i8, i8* %3, i64 %12
  %14 = icmp eq i32 %4, 0
  br label %15

15:                                               ; preds = %9, %44
  %16 = phi i32 [ 0, %9 ], [ %46, %44 ]
  %17 = phi i32 [ %2, %9 ], [ %45, %44 ]
  %18 = add nsw i32 %16, %17
  %19 = sdiv i32 %18, 2
  %20 = sext i32 %19 to i64
  br i1 %14, label %44, label %21

21:                                               ; preds = %15
  %22 = lshr i64 %20, 18
  %23 = getelementptr inbounds i32*, i32** %8, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %20, 262143
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %1, i64 %28
  br label %30

30:                                               ; preds = %21, %40
  %31 = phi i8* [ %41, %40 ], [ %29, %21 ]
  %32 = phi i8* [ %42, %40 ], [ %3, %21 ]
  %33 = icmp eq i8* %31, %11
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = load i8, i8* %31, align 1
  %36 = load i8, i8* %32, align 1
  %37 = icmp ult i8 %35, %36
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = icmp ult i8 %36, %35
  br i1 %39, label %44, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds i8, i8* %31, i64 1
  %42 = getelementptr inbounds i8, i8* %32, i64 1
  %43 = icmp eq i8* %42, %13
  br i1 %43, label %44, label %30

44:                                               ; preds = %30, %34, %38, %40, %15
  %45 = phi i32 [ %19, %15 ], [ %17, %30 ], [ %17, %34 ], [ %19, %38 ], [ %19, %40 ]
  %46 = phi i32 [ %16, %15 ], [ %19, %30 ], [ %19, %34 ], [ %16, %38 ], [ %16, %40 ]
  %47 = sub nsw i32 %45, %46
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %15, label %49

49:                                               ; preds = %44, %5
  %50 = phi i32 [ %2, %5 ], [ %45, %44 ]
  %51 = phi i32 [ 0, %5 ], [ %46, %44 ]
  %52 = sext i32 %51 to i64
  %53 = lshr i64 %52, 18
  %54 = and i64 %52, 262143
  %55 = getelementptr inbounds i32*, i32** %8, i64 %53
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 %54
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %1, i64 %59
  %61 = sub nsw i32 %2, %58
  %62 = icmp sgt i32 %61, %4
  %63 = select i1 %62, i32 %4, i32 %61
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %79

65:                                               ; preds = %49
  %66 = zext i32 %63 to i64
  br label %67

67:                                               ; preds = %74, %65
  %68 = phi i64 [ 0, %65 ], [ %75, %74 ]
  %69 = getelementptr inbounds i8, i8* %60, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %3, i64 %68
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %70, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %67
  %75 = add nuw nsw i64 %68, 1
  %76 = icmp eq i64 %75, %66
  br i1 %76, label %79, label %67

77:                                               ; preds = %67
  %78 = trunc i64 %68 to i32
  br label %79

79:                                               ; preds = %74, %49, %77
  %80 = phi i32 [ %63, %49 ], [ %78, %77 ], [ %63, %74 ]
  %81 = sext i32 %50 to i64
  %82 = lshr i64 %81, 18
  %83 = and i64 %81, 262143
  %84 = getelementptr inbounds i32*, i32** %8, i64 %82
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 %83
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %1, i64 %88
  %90 = sub nsw i32 %2, %87
  %91 = icmp sgt i32 %90, %4
  %92 = select i1 %91, i32 %4, i32 %90
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %79
  %95 = zext i32 %92 to i64
  br label %96

96:                                               ; preds = %103, %94
  %97 = phi i64 [ 0, %94 ], [ %104, %103 ]
  %98 = getelementptr inbounds i8, i8* %89, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %3, i64 %97
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %99, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %96
  %104 = add nuw nsw i64 %97, 1
  %105 = icmp eq i64 %104, %95
  br i1 %105, label %108, label %96

106:                                              ; preds = %96
  %107 = trunc i64 %97 to i32
  br label %108

108:                                              ; preds = %103, %79, %106
  %109 = phi i32 [ %92, %79 ], [ %107, %106 ], [ %92, %103 ]
  %110 = icmp sgt i32 %80, %109
  %111 = select i1 %110, i32 %58, i32 %87
  %112 = select i1 %110, i32 %80, i32 %109
  %113 = zext i32 %112 to i64
  %114 = shl nuw i64 %113, 32
  %115 = zext i32 %111 to i64
  %116 = or i64 %114, %115
  ret i64 %116
}

declare zeroext i1 @_ZN9courgette10SinkStream13WriteVarint32Ej(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN9courgette10SinkStream5WriteEPKvm(%"class.courgette::SinkStream"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN9courgette10SinkStream19WriteVarint32SignedEi(%"class.courgette::SinkStream"*, i32) local_unnamed_addr #2

declare i32 @_ZN9courgette12CalculateCrcEPKhm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN9courgette13SinkStreamSet6CopyToEPNS_10SinkStreamE(%"class.courgette::SinkStreamSet"*, %"class.courgette::SinkStream"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9courgette13SinkStreamSetD1Ev(%"class.courgette::SinkStreamSet"*) unnamed_addr #3

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #6
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #6
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #6
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #6
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #6
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #7
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #6
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #6
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #7
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #6
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15UncheckedMallocEmPPv(i64, i8**) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
