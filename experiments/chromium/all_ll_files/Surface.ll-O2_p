; ModuleID = '../../third_party/angle/src/libANGLE/Surface.cpp'
source_filename = "../../third_party/angle/src/libANGLE/Surface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.egl::SurfaceState" = type <{ i8*, %"struct.egl::Config"*, %"class.egl::AttributeMap", i8, [3 x i8], %"class.angle::BitSetT.278", %"class.angle::BitSetT.279", i8, [3 x i8] }>
%"class.egl::AttributeMap" = type { %"class.std::__1::map.267" }
%"class.std::__1::map.267" = type { %"class.std::__1::__tree.268" }
%"class.std::__1::__tree.268" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.angle::BitSetT.278" = type { i32 }
%"class.angle::BitSetT.279" = type { i32 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.egl::Surface" = type { %"class.egl::LabeledObject", %"class.gl::FramebufferAttachmentObject", %"struct.egl::SurfaceState", %"class.rx::SurfaceImpl"*, i32, i8, i32, i32, i8, i8, i8, i32, i32, i32, i8, i32, i32, i32, i32, i8, i64, i64, i8, i8, i32, i32, i32, i32, i32, %"class.gl::Texture"*, %"struct.gl::Format", %"struct.gl::Format", %"struct.gl::Offset", i32, %"class.angle::ObserverBinding" }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.281", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"struct.angle::Color" = type { float, float, float, float }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.280", i32, i32 }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.679", %"class.std::__1::set", %"class.std::__1::set.689", %"class.std::__1::set.699", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.720", %"class.std::__1::mutex", %"class.std::__1::vector.727", %"class.std::__1::vector.727", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set.658", %"class.std::__1::vector.125", %"class.std::__1::vector.125", i8, i64 }
%"class.std::__1::set.658" = type { %"class.std::__1::__tree.659" }
%"class.std::__1::__tree.659" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.660", %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.rx::DisplayImpl" = type opaque
%"class.egl::ConfigSet" = type { %"class.std::__1::map.668" }
%"class.std::__1::map.668" = type { %"class.std::__1::__tree.669" }
%"class.std::__1::__tree.669" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.679" = type { %"class.std::__1::__tree.680" }
%"class.std::__1::__tree.680" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.681", %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.689" = type { %"class.std::__1::__tree.690" }
%"class.std::__1::__tree.690" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.691", %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.699" = type { %"class.std::__1::__tree.700" }
%"class.std::__1::__tree.700" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.701", %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.egl::Caps" = type { i8, i8 }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::Device" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.283" }
%"class.absl::flat_hash_map.283" = type { %"class.absl::container_internal::raw_hash_map.284" }
%"class.absl::container_internal::raw_hash_map.284" = type { %"class.absl::container_internal::raw_hash_set.285" }
%"class.absl::container_internal::raw_hash_set.285" = type { i8*, %"union.absl::container_internal::map_slot_type.286"*, i64, i64, %"class.absl::container_internal::CompressedTuple.287" }
%"union.absl::container_internal::map_slot_type.286" = type { %"struct.std::__1::pair.753" }
%"struct.std::__1::pair.753" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.287" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.288" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.288" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.376" }
%"class.gl::ResourceMap.376" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.377" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.377" = type { %"class.absl::container_internal::raw_hash_map.378" }
%"class.absl::container_internal::raw_hash_map.378" = type { %"class.absl::container_internal::raw_hash_set.379" }
%"class.absl::container_internal::raw_hash_set.379" = type { i8*, %"union.absl::container_internal::map_slot_type.380"*, i64, i64, %"class.absl::container_internal::CompressedTuple.381" }
%"union.absl::container_internal::map_slot_type.380" = type opaque
%"class.absl::container_internal::CompressedTuple.381" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.382" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.382" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.628" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.632", %"class.std::__1::__compressed_pair.640", %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.647", [4 x i8] }>
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634", %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { float }
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.709" }
%"class.std::__1::map.709" = type { %"class.std::__1::__tree.710" }
%"class.std::__1::__tree.710" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.711", %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.720" = type { %"class.std::__1::__vector_base.721" }
%"class.std::__1::__vector_base.721" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.729" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.angle::ScratchBuffer"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.550", [4 x i8], %"class.std::__1::unique_ptr.551", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.557", %"class.gl::ResourceMap.559", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.569", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.579", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.589", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.599", i8*, %"class.std::__1::vector.599", %"class.std::__1::unique_ptr.606", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.549", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::BitSetT.168", %"class.angle::BitSetT.549", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.350", %"class.std::__1::vector.350", %"class.std::__1::vector.350", %struct.Optional.620, %struct.Optional.620, %"class.std::__1::shared_ptr.621", %"class.std::__1::unique_ptr.622", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.386", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.387", %"class.gl::Program"*, %"class.gl::BindingPointer.389", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.391", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.419", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.350", %"class.angle::BitSetArray", %"class.std::__1::vector.431", %"class.std::__1::vector.440", %"class.angle::PackedEnumMap.447", %"class.angle::PackedEnumMap.451", %"class.std::__1::vector.453", %"class.std::__1::vector.453", %"class.std::__1::vector.453", %"class.angle::BitSetArray.460", %"class.angle::BitSetT.461", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.462", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.489", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.548", [4 x i8], %"class.angle::BitSetT.549", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type { i64, %"class.rx::ShareGroupImpl"*, %"class.rx::SerialFactoryBase", %"class.std::__1::unique_ptr.652" }
%"class.rx::ShareGroupImpl" = type opaque
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.angle::FrameCaptureShared"* }
%"class.angle::FrameCaptureShared" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.751" }
%"struct.std::__1::pair.751" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.292" }
%"class.gl::TypedResourceManager.292" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.293" }
%"class.gl::ResourceMap.293" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.755" }
%"struct.std::__1::pair.755" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.307" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.306", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.306" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.307" = type { %"class.absl::container_internal::raw_hash_map.308" }
%"class.absl::container_internal::raw_hash_map.308" = type { %"class.absl::container_internal::raw_hash_set.309" }
%"class.absl::container_internal::raw_hash_set.309" = type { i8*, %"union.absl::container_internal::map_slot_type.310"*, i64, i64, %"class.absl::container_internal::CompressedTuple.311" }
%"union.absl::container_internal::map_slot_type.310" = type { %"struct.std::__1::pair.757" }
%"struct.std::__1::pair.757" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.311" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.312" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.312" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.316" }
%"class.gl::TypedResourceManager.316" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.317" }
%"class.gl::ResourceMap.317" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.318" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.318" = type { %"class.absl::container_internal::raw_hash_map.319" }
%"class.absl::container_internal::raw_hash_map.319" = type { %"class.absl::container_internal::raw_hash_set.320" }
%"class.absl::container_internal::raw_hash_set.320" = type { i8*, %"union.absl::container_internal::map_slot_type.321"*, i64, i64, %"class.absl::container_internal::CompressedTuple.322" }
%"union.absl::container_internal::map_slot_type.321" = type opaque
%"class.absl::container_internal::CompressedTuple.322" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.323" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.323" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.327" }
%"class.gl::TypedResourceManager.327" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.328" }
%"class.gl::ResourceMap.328" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.329" }
%"class.absl::flat_hash_map.329" = type { %"class.absl::container_internal::raw_hash_map.330" }
%"class.absl::container_internal::raw_hash_map.330" = type { %"class.absl::container_internal::raw_hash_set.331" }
%"class.absl::container_internal::raw_hash_set.331" = type { i8*, %"union.absl::container_internal::map_slot_type.332"*, i64, i64, %"class.absl::container_internal::CompressedTuple.333" }
%"union.absl::container_internal::map_slot_type.332" = type { %"struct.std::__1::pair.759" }
%"struct.std::__1::pair.759" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.333" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.334" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.334" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.338" }
%"class.gl::TypedResourceManager.338" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.339" }
%"class.gl::ResourceMap.339" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.357" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.341", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.342", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.350", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.341" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.348", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.348" = type { %"struct.std::__1::array.349" }
%"struct.std::__1::array.349" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.357" = type { %"class.absl::container_internal::raw_hash_map.358" }
%"class.absl::container_internal::raw_hash_map.358" = type { %"class.absl::container_internal::raw_hash_set.359" }
%"class.absl::container_internal::raw_hash_set.359" = type { i8*, %"union.absl::container_internal::map_slot_type.360"*, i64, i64, %"class.absl::container_internal::CompressedTuple.361" }
%"union.absl::container_internal::map_slot_type.360" = type { %"struct.std::__1::pair.761" }
%"struct.std::__1::pair.761" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.361" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.362" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.366" }
%"class.gl::ResourceMap.366" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.367" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.367" = type { %"class.absl::container_internal::raw_hash_map.368" }
%"class.absl::container_internal::raw_hash_map.368" = type { %"class.absl::container_internal::raw_hash_set.369" }
%"class.absl::container_internal::raw_hash_set.369" = type { i8*, %"union.absl::container_internal::map_slot_type.370"*, i64, i64, %"class.absl::container_internal::CompressedTuple.371" }
%"union.absl::container_internal::map_slot_type.370" = type opaque
%"class.absl::container_internal::CompressedTuple.371" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.372" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.372" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.std::__1::array.386" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.741, %"class.std::__1::vector.350", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.742", %"class.angle::BitSetT.147", %struct.Optional.743 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.734", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.549", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.734" = type { %"class.std::__1::__vector_base.735" }
%"class.std::__1::__vector_base.735" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.741 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.742" = type { i64 }
%struct.Optional.743 = type { i8, %"class.angle::BitSetT.742" }
%"class.gl::BindingPointer.387" = type { %"class.angle::BindingPointer.388" }
%"class.angle::BindingPointer.388" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.gl::BindingPointer.389" = type { %"class.angle::BindingPointer.390" }
%"class.angle::BindingPointer.390" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::vector.391" = type { %"class.std::__1::__vector_base.392" }
%"class.std::__1::__vector_base.392" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.394" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.393, i32 }
%union.anon.393 = type { [4 x float] }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.413", %"struct.std::__1::array.414", %"struct.std::__1::array.416", %struct.Optional.418, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.350", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.399", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.406", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.399" = type { %"class.std::__1::__vector_base.400" }
%"class.std::__1::__vector_base.400" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.401" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.408" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.413" = type { i64 }
%"struct.std::__1::array.414" = type { [16 x %"class.angle::BitSetT.415"] }
%"class.angle::BitSetT.415" = type { i64 }
%"struct.std::__1::array.416" = type { [16 x %"class.angle::BitSetT.417"] }
%"class.angle::BitSetT.417" = type { i64 }
%struct.Optional.418 = type { i8, %"class.angle::BitSetT.413" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::PackedEnumMap.419" = type { %"struct.std::__1::array.420" }
%"struct.std::__1::array.420" = type { [11 x %"class.std::__1::vector.421"] }
%"class.std::__1::vector.421" = type { %"class.std::__1::__vector_base.422" }
%"class.std::__1::__vector_base.422" = type { %"class.gl::BindingPointer.423"*, %"class.gl::BindingPointer.423"*, %"class.std::__1::__compressed_pair.425" }
%"class.gl::BindingPointer.423" = type { %"class.angle::BindingPointer.424" }
%"class.angle::BindingPointer.424" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.gl::BindingPointer.423"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.430" }
%"struct.std::__1::array.430" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { %"class.gl::BindingPointer.433"*, %"class.gl::BindingPointer.433"*, %"class.std::__1::__compressed_pair.435" }
%"class.gl::BindingPointer.433" = type { %"class.angle::BindingPointer.434" }
%"class.angle::BindingPointer.434" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.gl::BindingPointer.433"* }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.442" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.423", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.447" = type { %"struct.std::__1::array.448" }
%"struct.std::__1::array.448" = type { [7 x %"class.gl::BindingPointer.449"] }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.451" = type { %"struct.std::__1::array.452" }
%"struct.std::__1::array.452" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.453" = type { %"class.std::__1::__vector_base.454" }
%"class.std::__1::__vector_base.454" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.460" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.461" = type { i64 }
%"class.gl::BindingPointer.462" = type { %"class.angle::BindingPointer.463" }
%"class.angle::BindingPointer.463" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.465", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.465" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.453" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.475" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.471" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.484" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.477" }
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.479" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.489" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.490", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.498", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.503", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.518", %"class.std::__1::vector.525", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.532", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.541", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"class.angle::BitSetT.492"*, %"class.angle::BitSetT.492"*, %"class.std::__1::__compressed_pair.493" }
%"class.angle::BitSetT.492" = type opaque
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.angle::BitSetT.492"* }
%"class.std::__1::vector.498" = type { i64*, i64, %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.503" = type { %"class.std::__1::__vector_base.504" }
%"class.std::__1::__vector_base.504" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.505" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.510", i64 }
%"struct.std::__1::array.510" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.511", i32, i32 }
%"class.std::__1::vector.511" = type { %"class.std::__1::__vector_base.512" }
%"class.std::__1::__vector_base.512" = type { float*, float*, %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { float* }
%"class.std::__1::vector.518" = type { %"class.std::__1::__vector_base.519" }
%"class.std::__1::__vector_base.519" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.525" = type { %"class.std::__1::__vector_base.526" }
%"class.std::__1::__vector_base.526" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.527" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.532" = type { %"class.std::__1::__vector_base.533" }
%"class.std::__1::__vector_base.533" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.536" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.534", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.534" = type { %"class.angle::VectorBase.535" }
%"class.angle::VectorBase.535" = type { [4 x float] }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.543" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.534" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.548" = type { i32 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.147" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.550" = type { i32 }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.angle::PackedEnumMap.557" = type { %"struct.std::__1::array.558" }
%"struct.std::__1::array.558" = type { [11 x %"class.gl::BindingPointer.423"] }
%"class.gl::ResourceMap.559" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.560" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.560" = type { %"class.absl::container_internal::raw_hash_map.561" }
%"class.absl::container_internal::raw_hash_map.561" = type { %"class.absl::container_internal::raw_hash_set.562" }
%"class.absl::container_internal::raw_hash_set.562" = type { i8*, %"union.absl::container_internal::map_slot_type.563"*, i64, i64, %"class.absl::container_internal::CompressedTuple.564" }
%"union.absl::container_internal::map_slot_type.563" = type opaque
%"class.absl::container_internal::CompressedTuple.564" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.565" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.565" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.569" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.570" }
%"class.absl::flat_hash_map.570" = type { %"class.absl::container_internal::raw_hash_map.571" }
%"class.absl::container_internal::raw_hash_map.571" = type { %"class.absl::container_internal::raw_hash_set.572" }
%"class.absl::container_internal::raw_hash_set.572" = type { i8*, %"union.absl::container_internal::map_slot_type.573"*, i64, i64, %"class.absl::container_internal::CompressedTuple.574" }
%"union.absl::container_internal::map_slot_type.573" = type opaque
%"class.absl::container_internal::CompressedTuple.574" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.575" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.575" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.579" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.580" }
%"class.absl::flat_hash_map.580" = type { %"class.absl::container_internal::raw_hash_map.581" }
%"class.absl::container_internal::raw_hash_map.581" = type { %"class.absl::container_internal::raw_hash_set.582" }
%"class.absl::container_internal::raw_hash_set.582" = type { i8*, %"union.absl::container_internal::map_slot_type.583"*, i64, i64, %"class.absl::container_internal::CompressedTuple.584" }
%"union.absl::container_internal::map_slot_type.583" = type opaque
%"class.absl::container_internal::CompressedTuple.584" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.585" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.585" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.589" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.590" }
%"class.absl::flat_hash_map.590" = type { %"class.absl::container_internal::raw_hash_map.591" }
%"class.absl::container_internal::raw_hash_map.591" = type { %"class.absl::container_internal::raw_hash_set.592" }
%"class.absl::container_internal::raw_hash_set.592" = type { i8*, %"union.absl::container_internal::map_slot_type.593"*, i64, i64, %"class.absl::container_internal::CompressedTuple.594" }
%"union.absl::container_internal::map_slot_type.593" = type opaque
%"class.absl::container_internal::CompressedTuple.594" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.595" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.595" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { i8**, i8**, %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { i8** }
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.612", %"class.angle::PackedEnumMap.614", %"class.angle::PackedEnumMap.616", %"class.angle::PackedEnumMap.618", %"class.angle::PackedEnumMap.618", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.612" = type { %"struct.std::__1::array.613" }
%"struct.std::__1::array.613" = type { [16 x i8] }
%"class.angle::PackedEnumMap.614" = type { %"struct.std::__1::array.615" }
%"struct.std::__1::array.615" = type { [12 x i8] }
%"class.angle::PackedEnumMap.616" = type { %"struct.std::__1::array.617" }
%"struct.std::__1::array.617" = type { [4 x i8] }
%"class.angle::PackedEnumMap.618" = type { %"struct.std::__1::array.619" }
%"struct.std::__1::array.619" = type { [19 x i32] }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.549" = type { i64 }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.620 = type { i8, %"class.angle::ScratchBuffer" }
%"class.std::__1::shared_ptr.621" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.280" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.281" = type { %"struct.std::__1::array.282", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.282" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.egl::WindowSurface" = type { %"class.egl::Surface" }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.egl::PbufferSurface" = type { %"class.egl::Surface" }
%"class.egl::PixmapSurface" = type { %"class.egl::Surface" }
%"class.egl::SurfaceDeleter" = type { %"class.egl::Display"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.763" }
%"struct.std::__1::pair.763" = type { i64, i64 }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.744" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.angle::ErrorStreamBase" = type { i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.gl::TraceEvent::TraceEndOnScopeClose" = type { %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" }
%"struct.gl::TraceEvent::TraceEndOnScopeClose::Data" = type { %"struct.angle::PlatformMethods"*, i8*, i8* }
%"struct.angle::PlatformMethods" = type { i8*, double (%"struct.angle::PlatformMethods"*)*, double (%"struct.angle::PlatformMethods"*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, void (%"struct.angle::PlatformMethods"*, i8*)*, {}*, i64 (%"struct.angle::PlatformMethods"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, void (%"struct.angle::PlatformMethods"*, i8*, i8*, i64)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i32)*, void (%"struct.angle::PlatformMethods"*, i8*, i1)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesD3D"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesVk"*)*, void (%"struct.angle::PlatformMethods"*, %"struct.std::__1::array.749"*, i64, i8*)*, void (%"struct.angle::PlatformMethods"*, %"struct.angle::FeaturesMtl"*)*, void (%"struct.angle::PlatformMethods"*, void (i8*)*, i8*)* }
%"struct.angle::FeaturesD3D" = type opaque
%"struct.angle::FeaturesVk" = type opaque
%"struct.std::__1::array.749" = type { [20 x i8] }
%"struct.angle::FeaturesMtl" = type opaque

$_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE = comdat any

$_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE = comdat any

$_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE = comdat any

$_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE = comdat any

$_ZN3egl13LabeledObjectD2Ev = comdat any

$_ZN3egl13LabeledObjectD0Ev = comdat any

$_ZTVN3egl13LabeledObjectE = comdat any

@_ZTVN3egl7SurfaceE = hidden unnamed_addr constant { [18 x i8*], [15 x i8*], [5 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i8*)* @_ZN3egl7Surface8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Surface"*)* @_ZNK3egl7Surface8getLabelEv to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZN3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZNK3egl7Surface17getAttachmentImplEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZN3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZThn8_N3egl7SurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*)* @_ZThn8_N3egl7SurfaceD0Ev to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZThn8_N3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface17getAttachmentImplEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZThn104_N3egl7SurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*)* @_ZThn104_N3egl7SurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZThn104_N3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@_ZZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289 = internal unnamed_addr global i8* null, align 8
@_ZGVZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289 = internal global i64 0, align 8
@.str = private unnamed_addr constant [10 x i8] c"gpu.angle\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"egl::Surface::swap\00", align 1
@_ZZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301 = internal unnamed_addr global i8* null, align 8
@_ZGVZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301 = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [29 x i8] c"egl::Surface::swapWithDamage\00", align 1
@_ZZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313 = internal unnamed_addr global i8* null, align 8
@_ZGVZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313 = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"egl::Surface::swapWithFrameToken\00", align 1
@_ZTVN3egl13WindowSurfaceE = hidden unnamed_addr constant { [18 x i8*], [15 x i8*], [5 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to i8*), i8* bitcast (void (%"class.egl::WindowSurface"*)* @_ZN3egl13WindowSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i8*)* @_ZN3egl7Surface8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Surface"*)* @_ZNK3egl7Surface8getLabelEv to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZN3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZNK3egl7Surface17getAttachmentImplEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZN3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.egl::WindowSurface"*)* @_ZThn8_N3egl13WindowSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::WindowSurface"*)* @_ZThn8_N3egl13WindowSurfaceD0Ev to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZThn8_N3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface17getAttachmentImplEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.egl::WindowSurface"*)* @_ZThn104_N3egl13WindowSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::WindowSurface"*)* @_ZThn104_N3egl13WindowSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZThn104_N3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@_ZTVN3egl14PbufferSurfaceE = hidden unnamed_addr constant { [18 x i8*], [15 x i8*], [5 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to i8*), i8* bitcast (void (%"class.egl::PbufferSurface"*)* @_ZN3egl14PbufferSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i8*)* @_ZN3egl7Surface8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Surface"*)* @_ZNK3egl7Surface8getLabelEv to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZN3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZNK3egl7Surface17getAttachmentImplEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZN3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.egl::PbufferSurface"*)* @_ZThn8_N3egl14PbufferSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::PbufferSurface"*)* @_ZThn8_N3egl14PbufferSurfaceD0Ev to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZThn8_N3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface17getAttachmentImplEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.egl::PbufferSurface"*)* @_ZThn104_N3egl14PbufferSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::PbufferSurface"*)* @_ZThn104_N3egl14PbufferSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZThn104_N3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@_ZTVN3egl13PixmapSurfaceE = hidden unnamed_addr constant { [18 x i8*], [15 x i8*], [5 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to i8*), i8* bitcast (void (%"class.egl::PixmapSurface"*)* @_ZN3egl13PixmapSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i8*)* @_ZN3egl7Surface8setLabelEPv to i8*), i8* bitcast (i8* (%"class.egl::Surface"*)* @_ZNK3egl7Surface8getLabelEv to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZNK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZNK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZN3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZNK3egl7Surface17getAttachmentImplEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZN3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)], [15 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.egl::PixmapSurface"*)* @_ZThn8_N3egl13PixmapSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::PixmapSurface"*)* @_ZThn8_N3egl13PixmapSurfaceD0Ev to i8*), i8* bitcast ({ i64, i32 } (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"struct.gl::Format"*, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*, %"class.gl::Context"*, i32, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE to i8*), i8* bitcast (i1 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5isYUVEv to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::Context"*, i64)* @_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE to i8*), i8* bitcast (i32 (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface5getIdEv to i8*), i8* bitcast (i32 (%"class.egl::Surface"*, %"class.gl::ImageIndex"*)* @_ZThn8_NK3egl7Surface9initStateERKN2gl10ImageIndexE to i8*), i8* bitcast (void (%"class.egl::Surface"*, %"class.gl::ImageIndex"*, i32)* @_ZThn8_N3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE to i8*), i8* bitcast (%"class.rx::FramebufferAttachmentObjectImpl"* (%"class.egl::Surface"*)* @_ZThn8_NK3egl7Surface17getAttachmentImplEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.egl::PixmapSurface"*)* @_ZThn104_N3egl13PixmapSurfaceD1Ev to i8*), i8* bitcast (void (%"class.egl::PixmapSurface"*)* @_ZThn104_N3egl13PixmapSurfaceD0Ev to i8*), i8* bitcast (void (%"class.egl::Surface"*, i64, i32)* @_ZThn104_N3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE to i8*)] }, align 8
@_ZTVN3egl13LabeledObjectE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::LabeledObject"*)* @_ZN3egl13LabeledObjectD2Ev to i8*), i8* bitcast (void (%"class.egl::LabeledObject"*)* @_ZN3egl13LabeledObjectD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8

@_ZN3egl12SurfaceStateC1EPKNS_6ConfigERKNS_12AttributeMapE = hidden unnamed_addr alias void (%"struct.egl::SurfaceState"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"*), void (%"struct.egl::SurfaceState"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"*)* @_ZN3egl12SurfaceStateC2EPKNS_6ConfigERKNS_12AttributeMapE
@_ZN3egl12SurfaceStateD1Ev = hidden unnamed_addr alias void (%"struct.egl::SurfaceState"*), void (%"struct.egl::SurfaceState"*)* @_ZN3egl12SurfaceStateD2Ev
@_ZN3egl7SurfaceC1EiPKNS_6ConfigERKNS_12AttributeMapEj = hidden unnamed_addr alias void (%"class.egl::Surface"*, i32, %"struct.egl::Config"*, %"class.egl::AttributeMap"*, i32), void (%"class.egl::Surface"*, i32, %"struct.egl::Config"*, %"class.egl::AttributeMap"*, i32)* @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj
@_ZN3egl7SurfaceD1Ev = hidden unnamed_addr alias void (%"class.egl::Surface"*), void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev
@_ZN3egl13WindowSurfaceC1EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE = hidden unnamed_addr alias void (%"class.egl::WindowSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*), void (%"class.egl::WindowSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*)* @_ZN3egl13WindowSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE
@_ZN3egl13WindowSurfaceD2Ev = hidden unnamed_addr alias void (%"class.egl::WindowSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::WindowSurface"*)*)
@_ZN3egl13WindowSurfaceD1Ev = hidden unnamed_addr alias void (%"class.egl::WindowSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::WindowSurface"*)*)
@_ZN3egl14PbufferSurfaceC1EPN2rx14EGLImplFactoryEPKNS_6ConfigERKNS_12AttributeMapE = hidden unnamed_addr alias void (%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"*), void (%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"*)* @_ZN3egl14PbufferSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigERKNS_12AttributeMapE
@_ZN3egl14PbufferSurfaceC1EPN2rx14EGLImplFactoryEPKNS_6ConfigEjPvRKNS_12AttributeMapE = hidden unnamed_addr alias void (%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"*), void (%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN3egl14PbufferSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigEjPvRKNS_12AttributeMapE
@_ZN3egl14PbufferSurfaceD2Ev = hidden unnamed_addr alias void (%"class.egl::PbufferSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::PbufferSurface"*)*)
@_ZN3egl14PbufferSurfaceD1Ev = hidden unnamed_addr alias void (%"class.egl::PbufferSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::PbufferSurface"*)*)
@_ZN3egl13PixmapSurfaceC1EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE = hidden unnamed_addr alias void (%"class.egl::PixmapSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*), void (%"class.egl::PixmapSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*)* @_ZN3egl13PixmapSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE
@_ZN3egl13PixmapSurfaceD2Ev = hidden unnamed_addr alias void (%"class.egl::PixmapSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::PixmapSurface"*)*)
@_ZN3egl13PixmapSurfaceD1Ev = hidden unnamed_addr alias void (%"class.egl::PixmapSurface"*), bitcast (void (%"class.egl::Surface"*)* @_ZN3egl7SurfaceD2Ev to void (%"class.egl::PixmapSurface"*)*)
@_ZN3egl14SurfaceDeleterC1EPKNS_7DisplayE = hidden unnamed_addr alias void (%"class.egl::SurfaceDeleter"*, %"class.egl::Display"*), void (%"class.egl::SurfaceDeleter"*, %"class.egl::Display"*)* @_ZN3egl14SurfaceDeleterC2EPKNS_7DisplayE
@_ZN3egl14SurfaceDeleterD1Ev = hidden unnamed_addr alias void (%"class.egl::SurfaceDeleter"*), void (%"class.egl::SurfaceDeleter"*)* @_ZN3egl14SurfaceDeleterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl12SurfaceStateC2EPKNS_6ConfigERKNS_12AttributeMapE(%"struct.egl::SurfaceState"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 1
  %6 = icmp eq %"struct.egl::Config"* %1, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_Znwm(i64 164) #11
  %9 = bitcast i8* %8 to %"struct.egl::Config"*
  tail call void @_ZN3egl6ConfigC1ERKS0_(%"struct.egl::Config"* nonnull %9, %"struct.egl::Config"* nonnull dereferenceable(164) %1) #12
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.egl::Config"* [ %9, %7 ], [ null, %3 ]
  store %"struct.egl::Config"* %11, %"struct.egl::Config"** %5, align 8
  %12 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 2
  tail call void @_ZN3egl12AttributeMapC1ERKS0_(%"class.egl::AttributeMap"* %12, %"class.egl::AttributeMap"* dereferenceable(24) %2) #12
  %13 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 3
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 5, i32 0
  %15 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 7
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 9, i1 false)
  %17 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %12, i64 13221, i64 0) #12
  %18 = icmp eq i64 %17, 1
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %15, align 4
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN3egl6ConfigC1ERKS0_(%"struct.egl::Config"*, %"struct.egl::Config"* dereferenceable(164)) unnamed_addr #2

declare void @_ZN3egl12AttributeMapC1ERKS0_(%"class.egl::AttributeMap"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl12SurfaceStateD2Ev(%"struct.egl::SurfaceState"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 1
  %3 = load %"struct.egl::Config"*, %"struct.egl::Config"** %2, align 8
  %4 = icmp eq %"struct.egl::Config"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %3) #12
  %6 = bitcast %"struct.egl::Config"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3egl12SurfaceState27isRobustResourceInitEnabledEv(%"struct.egl::SurfaceState"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.egl::SurfaceState", %"struct.egl::SurfaceState"* %0, i64 0, i32 2
  %3 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %2, i64 13395, i64 0) #12
  %4 = icmp eq i64 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj(%"class.egl::Surface"*, i32, %"struct.egl::Config"*, %"class.egl::AttributeMap"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3egl13LabeledObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1
  tail call void @_ZN2gl27FramebufferAttachmentObjectC2Ev(%"class.gl::FramebufferAttachmentObject"* %7) #12
  %8 = bitcast %"class.egl::Surface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.angle::ObserverInterface", %"class.angle::ObserverInterface"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 0
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 1
  %13 = icmp eq %"struct.egl::Config"* %2, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  %15 = tail call i8* @_Znwm(i64 164) #11
  %16 = bitcast i8* %15 to %"struct.egl::Config"*
  tail call void @_ZN3egl6ConfigC1ERKS0_(%"struct.egl::Config"* nonnull %16, %"struct.egl::Config"* nonnull dereferenceable(164) %2) #12
  br label %17

17:                                               ; preds = %5, %14
  %18 = phi %"struct.egl::Config"* [ %16, %14 ], [ null, %5 ]
  store %"struct.egl::Config"* %18, %"struct.egl::Config"** %12, align 8
  %19 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapC1ERKS0_(%"class.egl::AttributeMap"* %19, %"class.egl::AttributeMap"* dereferenceable(24) %3) #12
  %20 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 3
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 5, i32 0
  %22 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 7
  %23 = bitcast i32* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 9, i1 false) #12
  %24 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %19, i64 13221, i64 0) #12
  %25 = icmp eq i64 %24, 1
  %26 = zext i1 %25 to i8
  store i8 %26, i8* %22, align 4
  %27 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 4
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 5
  store i8 0, i8* %29, align 4
  %30 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 6
  store i32 %1, i32* %30, align 8
  %31 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 7
  store i32 %4, i32* %31, align 4
  %32 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 8
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 10
  store i8 0, i8* %33, align 2
  %34 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 11
  store i32 12426, i32* %34, align 4
  %35 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 12
  store i32 12427, i32* %35, align 8
  %36 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 13
  store i32 12425, i32* %36, align 4
  %37 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 14
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 15
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 16
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 17
  store i32 -1, i32* %40, align 4
  %41 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 18
  store i32 12442, i32* %41, align 8
  %42 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 19
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 20
  %44 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 21
  %45 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 23
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 24
  %47 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  %48 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 26
  %49 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 12380, i32 10000, i32 12420, i32 12344>, <4 x i32>* %49, align 4
  %50 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 28
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 29
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %51, align 8
  %52 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 30
  %53 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  tail call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* %52, i32 %54) #12
  %55 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 31
  %56 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %2, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  tail call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* %55, i32 %57) #12
  %58 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 32, i32 0
  %59 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 32, i32 1
  %60 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 33
  %61 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %61, align 4
  %62 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 34
  tail call void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"* %62, %"class.angle::ObserverInterface"* %9, i64 0) #12
  %63 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12478, i64 0) #12
  %64 = icmp eq i64 %63, 1
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %32, align 8
  %66 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 13222, i64 0) #12
  %67 = icmp eq i64 %66, 1
  %68 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 9
  %69 = zext i1 %67 to i8
  store i8 %69, i8* %68, align 1
  %70 = load i32, i32* %30, align 8
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %17
  %73 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12376, i64 0) #12
  %74 = icmp eq i64 %73, 1
  %75 = zext i1 %74 to i8
  store i8 %75, i8* %33, align 2
  %76 = load i32, i32* %30, align 8
  br label %77

77:                                               ; preds = %72, %17
  %78 = phi i32 [ %76, %72 ], [ %70, %17 ]
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  store i32 12421, i32* %48, align 4
  br label %81

81:                                               ; preds = %80, %77
  %82 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12445, i64 12426) #12
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %34, align 4
  %84 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12424, i64 12427) #12
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* %35, align 8
  %86 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12423, i64 12425) #12
  %87 = trunc i64 %86 to i32
  store i32 %87, i32* %36, align 4
  %88 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12418, i64 0) #12
  %89 = icmp eq i64 %88, 1
  %90 = zext i1 %89 to i8
  store i8 %90, i8* %37, align 8
  %91 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 13395, i64 0) #12
  %92 = icmp eq i64 %91, 1
  %93 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 22
  %94 = zext i1 %92 to i8
  store i8 %94, i8* %93, align 8
  br i1 %92, label %95, label %96

95:                                               ; preds = %81
  store i32 0, i32* %60, align 4
  br label %96

96:                                               ; preds = %95, %81
  %97 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12801, i64 0) #12
  %98 = icmp eq i64 %97, 1
  %99 = zext i1 %98 to i8
  store i8 %99, i8* %42, align 4
  br i1 %98, label %100, label %103

100:                                              ; preds = %96
  %101 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12375, i64 0) #12
  store i64 %101, i64* %43, align 8
  %102 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12374, i64 0) #12
  store i64 %102, i64* %44, align 8
  br label %103

103:                                              ; preds = %100, %96
  %104 = load i32, i32* %30, align 8
  %105 = icmp eq i32 %104, 4
  br i1 %105, label %166, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.egl::AttributeMap", %"class.egl::AttributeMap"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %108 = bitcast %"class.std::__1::__tree_end_node"* %107 to %"class.std::__1::__tree_node"**
  %109 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node"* %109, null
  br i1 %110, label %132, label %111

111:                                              ; preds = %106, %111
  %112 = phi %"class.std::__1::__tree_end_node"* [ %122, %111 ], [ %107, %106 ]
  %113 = phi %"class.std::__1::__tree_node"* [ %123, %111 ], [ %109, %106 ]
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %113, i64 0, i32 1, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp slt i64 %115, 12416
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %113, i64 0, i32 0, i32 1
  %118 = bitcast %"class.std::__1::__tree_node_base"** %117 to %"class.std::__1::__tree_node"**
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %113, i64 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::__tree_node"* %113 to %"class.std::__1::__tree_node"**
  %121 = select i1 %116, %"class.std::__1::__tree_node"** %118, %"class.std::__1::__tree_node"** %120
  %122 = select i1 %116, %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"* %119
  %123 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %124 = icmp eq %"class.std::__1::__tree_node"* %123, null
  br i1 %124, label %125, label %111

125:                                              ; preds = %111
  %126 = icmp eq %"class.std::__1::__tree_end_node"* %122, %107
  br i1 %126, label %132, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %122, i64 4
  %129 = bitcast %"class.std::__1::__tree_end_node"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp sgt i64 %130, 12416
  br i1 %131, label %132, label %133

132:                                              ; preds = %127, %125, %106
  br label %133

133:                                              ; preds = %132, %127
  %134 = phi %"class.std::__1::__tree_end_node"* [ %107, %132 ], [ %122, %127 ]
  br i1 %110, label %162, label %135

135:                                              ; preds = %133, %135
  %136 = phi %"class.std::__1::__tree_end_node"* [ %146, %135 ], [ %107, %133 ]
  %137 = phi %"class.std::__1::__tree_node"* [ %147, %135 ], [ %109, %133 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 1, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp slt i64 %139, 12416
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 1
  %142 = bitcast %"class.std::__1::__tree_node_base"** %141 to %"class.std::__1::__tree_node"**
  %143 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %137, i64 0, i32 0, i32 0
  %144 = bitcast %"class.std::__1::__tree_node"* %137 to %"class.std::__1::__tree_node"**
  %145 = select i1 %140, %"class.std::__1::__tree_node"** %142, %"class.std::__1::__tree_node"** %144
  %146 = select i1 %140, %"class.std::__1::__tree_end_node"* %136, %"class.std::__1::__tree_end_node"* %143
  %147 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %145, align 8
  %148 = icmp eq %"class.std::__1::__tree_node"* %147, null
  br i1 %148, label %149, label %135

149:                                              ; preds = %135
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %146, %107
  br i1 %150, label %162, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 4
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = icmp sgt i64 %154, 12416
  br i1 %155, label %162, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 5
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = trunc i64 %159 to i32
  %161 = tail call zeroext i8 @_ZN3egl11FromEGLenumINS_13TextureFormatEEET_j(i32 %160) #12
  br label %162

162:                                              ; preds = %133, %149, %151, %156
  %163 = phi i8 [ %161, %156 ], [ 0, %133 ], [ 0, %149 ], [ 0, %151 ]
  store i8 %163, i8* %45, align 1
  %164 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 12417, i64 12380) #12
  %165 = trunc i64 %164 to i32
  store i32 %165, i32* %46, align 4
  br label %166

166:                                              ; preds = %103, %162
  %167 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %3, i64 13224, i64 0) #12
  %168 = trunc i64 %167 to i32
  store i32 %168, i32* %50, align 4
  %169 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %19, i64 13456, i64 0) #12
  %170 = trunc i64 %169 to i32
  store i32 %170, i32* %58, align 8
  %171 = tail call i64 @_ZNK3egl12AttributeMap3getEll(%"class.egl::AttributeMap"* %19, i64 13457, i64 0) #12
  %172 = trunc i64 %171 to i32
  store i32 %172, i32* %59, align 4
  ret void
}

declare void @_ZN2gl27FramebufferAttachmentObjectC2Ev(%"class.gl::FramebufferAttachmentObject"*) unnamed_addr #2

declare void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"*, i32) unnamed_addr #2

declare void @_ZN5angle15ObserverBindingC1EPNS_17ObserverInterfaceEm(%"class.angle::ObserverBinding"*, %"class.angle::ObserverInterface"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7SurfaceD2Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1
  %3 = bitcast %"class.egl::Surface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 34
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %5) #12
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 1
  %7 = load %"struct.egl::Config"*, %"struct.egl::Config"** %6, align 8
  %8 = icmp eq %"struct.egl::Config"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %7) #12
  %10 = bitcast %"struct.egl::Config"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %12) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl7SurfaceD1Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl7SurfaceD1Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7SurfaceD0Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1
  %3 = bitcast %"class.egl::Surface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 34
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %5) #12
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 1
  %7 = load %"struct.egl::Config"*, %"struct.egl::Config"** %6, align 8
  %8 = icmp eq %"struct.egl::Config"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %7) #12
  %10 = bitcast %"struct.egl::Config"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %12) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %2) #12
  %13 = bitcast %"class.egl::Surface"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl7SurfaceD0Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast %"class.angle::Subject"** %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl7SurfaceD0Ev(%"class.egl::Surface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::FramebufferAttachmentObjectImpl"* @_ZNK3egl7Surface17getAttachmentImplEv(%"class.egl::Surface"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %3 = bitcast %"class.rx::SurfaceImpl"** %2 to %"class.rx::FramebufferAttachmentObjectImpl"**
  %4 = load %"class.rx::FramebufferAttachmentObjectImpl"*, %"class.rx::FramebufferAttachmentObjectImpl"** %3, align 8
  ret %"class.rx::FramebufferAttachmentObjectImpl"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::FramebufferAttachmentObjectImpl"* @_ZThn8_NK3egl7Surface17getAttachmentImplEv(%"class.egl::Surface"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 21
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.rx::FramebufferAttachmentObjectImpl"**
  %5 = load %"class.rx::FramebufferAttachmentObjectImpl"*, %"class.rx::FramebufferAttachmentObjectImpl"** %4, align 8
  ret %"class.rx::FramebufferAttachmentObjectImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface11destroyImplEPKNS_7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.egl::Surface"*, %"class.egl::Display"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %5 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %4, align 8
  %6 = icmp eq %"class.rx::SurfaceImpl"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.rx::SurfaceImpl"* %5 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %9 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %9, i64 4
  %11 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %10, align 8
  tail call void %11(%"class.rx::SurfaceImpl"* nonnull %5, %"class.egl::Display"* %2) #12
  %12 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %4, align 8
  %13 = icmp eq %"class.rx::SurfaceImpl"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.rx::SurfaceImpl"* %12 to void (%"class.rx::SurfaceImpl"*)***
  %16 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %16, i64 1
  %18 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %17, align 8
  tail call void %18(%"class.rx::SurfaceImpl"* nonnull %12) #12
  br label %19

19:                                               ; preds = %3, %7, %14
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %4, align 8
  %20 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %23 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %23, i64 1
  %25 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %24, align 8
  tail call void %25(%"class.egl::Surface"* nonnull %1) #12
  br label %26

26:                                               ; preds = %21, %19
  %27 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %27, align 8, !alias.scope !2
  %28 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %28, align 4, !alias.scope !2
  %29 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::unique_ptr.744"* %29 to i64*
  store i64 0, i64* %30, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface8postSwapEPKN2gl7ContextE(%"class.egl::Surface"*, %"class.gl::Context"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 22
  %4 = load i8, i8* %3, align 8, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 27
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 12436
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 33
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %12, i32 3) #12
  br label %13

13:                                               ; preds = %6, %2, %10
  ret void
}

declare void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface10initializeEPKNS_7DisplayE(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.egl::Display"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.angle::ErrorStreamBase", align 8
  %6 = alloca %"struct.gl::Format", align 8
  %7 = alloca %"struct.gl::Format", align 8
  %8 = alloca %"struct.gl::Format", align 8
  %9 = alloca %"struct.gl::Format", align 8
  %10 = alloca %"class.angle::BitSetT.278", align 4
  %11 = alloca %"class.angle::BitSetT.279", align 4
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 2, i32 1
  %13 = load %"struct.egl::Config"*, %"struct.egl::Config"** %12, align 8
  %14 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 11
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %21 [
    i32 12426, label %106
    i32 13136, label %106
    i32 13154, label %106
    i32 13456, label %106
    i32 13137, label %106
    i32 12425, label %16
    i32 13155, label %16
  ]

16:                                               ; preds = %3, %3
  %17 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %13, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %21 [
    i32 37793, label %84
    i32 32856, label %19
    i32 32849, label %20
    i32 27322, label %20
    i32 34842, label %106
  ]

19:                                               ; preds = %16
  br label %84

20:                                               ; preds = %16, %16
  br label %84

21:                                               ; preds = %3, %16
  %22 = bitcast %"class.angle::ErrorStreamBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 0
  store i32 12297, i32* %23, align 8
  %24 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1
  %25 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %24, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %25, align 8
  %27 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %27, i64 0, i32 0
  %29 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %24 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %32 = bitcast %"class.std::__1::basic_ostringstream"* %24 to i8**
  %33 = inttoptr i64 %29 to i8*
  %34 = getelementptr i8, i8* %33, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %24 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  %39 = bitcast i8* %38 to i64*
  store i64 %31, i64* %39, align 8
  %40 = load i8*, i8** %32, align 8
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds i8, i8* %37, i64 %43
  %45 = bitcast i8* %44 to %"class.std::__1::ios_base"*
  %46 = bitcast %"class.std::__1::basic_stringbuf"* %27 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %45, i8* %46) #12
  %47 = getelementptr inbounds i8, i8* %44, i64 136
  %48 = bitcast i8* %47 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %44, i64 144
  %50 = bitcast i8* %49 to i32*
  store i32 -1, i32* %50, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %26, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %25, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %28) #12
  %51 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %27, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1, i32 1, i32 1
  %53 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1, i32 1, i32 3
  %54 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #12
  store i32 16, i32* %53, align 8
  %55 = load i32, i32* %23, align 8, !noalias !8
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12, !noalias !8
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %27) #12, !noalias !8
  call void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"* %0, i32 12297, i32 %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1, !noalias !8
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %21
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8, !noalias !8
  call void @_ZdlPv(i8* %63) #11
  br label %64

64:                                               ; preds = %21, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12, !noalias !8
  %65 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %65, i64* %30, align 8
  %66 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %67 = inttoptr i64 %65 to i8*
  %68 = getelementptr i8, i8* %67, i64 -24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds i8, i8* %37, i64 %70
  %72 = bitcast i8* %71 to i64*
  store i64 %66, i64* %72, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %64
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #11
  br label %80

80:                                               ; preds = %64, %77
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %28) #12
  %81 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %81, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #12
  %82 = getelementptr inbounds %"class.angle::ErrorStreamBase", %"class.angle::ErrorStreamBase"* %5, i64 0, i32 1, i32 2
  %83 = bitcast %"class.std::__1::basic_ios.base"* %82 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %83) #12
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %22) #12
  br label %214

84:                                               ; preds = %16, %19, %20
  %85 = phi i32 [ 35905, %20 ], [ 35907, %19 ], [ 27328, %16 ]
  %86 = tail call i8* @_Znwm(i64 164) #11
  %87 = bitcast i8* %86 to %"struct.egl::Config"*
  tail call void @_ZN3egl6ConfigC1ERKS0_(%"struct.egl::Config"* nonnull %87, %"struct.egl::Config"* dereferenceable(164) %13) #12
  %88 = bitcast i8* %86 to i32*
  store i32 %85, i32* %88, align 4
  %89 = load %"struct.egl::Config"*, %"struct.egl::Config"** %12, align 8
  %90 = icmp eq %"struct.egl::Config"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %84
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %89) #12
  %92 = bitcast %"struct.egl::Config"* %89 to i8*
  tail call void @_ZdlPv(i8* %92) #11
  %93 = load i32, i32* %88, align 4
  br label %94

94:                                               ; preds = %91, %84
  %95 = phi i32 [ %93, %91 ], [ %85, %84 ]
  %96 = bitcast %"struct.egl::Config"** %12 to i8**
  store i8* %86, i8** %96, align 8
  %97 = bitcast %"struct.gl::Format"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #12
  call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* nonnull %6, i32 %95) #12
  %98 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 30
  %99 = call dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"* %98, %"struct.gl::Format"* nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #12
  %100 = bitcast %"struct.gl::Format"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12
  %101 = load %"struct.egl::Config"*, %"struct.egl::Config"** %12, align 8
  %102 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  call void @_ZN2gl6FormatC1Ej(%"struct.gl::Format"* nonnull %7, i32 %103) #12
  %104 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 31
  %105 = call dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"* %104, %"struct.gl::Format"* nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12
  br label %106

106:                                              ; preds = %3, %3, %3, %3, %3, %16, %94
  %107 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %108 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %109 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %111 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 -86, i64 16, i1 false)
  %112 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %110, align 8
  %113 = bitcast %"class.rx::SurfaceImpl"* %112 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %114 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %114, i64 5
  %116 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %115, align 8
  call void %116(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %112, %"class.egl::Display"* %2) #12
  %117 = load i32, i32* %107, align 8
  %118 = icmp eq i32 %117, 12288
  br i1 %118, label %119, label %214

119:                                              ; preds = %106
  %120 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %109, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %109, align 8
  %121 = icmp eq %"class.std::__1::basic_string"* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #11
  br label %130

130:                                              ; preds = %127, %122
  %131 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %119, %130
  %133 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %110, align 8
  %134 = bitcast %"class.rx::SurfaceImpl"* %133 to i32 (%"class.rx::SurfaceImpl"*)***
  %135 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %134, align 8
  %136 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %135, i64 27
  %137 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %136, align 8
  %138 = call i32 %137(%"class.rx::SurfaceImpl"* %133) #12
  %139 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 7
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 13396
  br i1 %142, label %143, label %157

143:                                              ; preds = %132
  %144 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 2, i32 2
  %145 = call i64 @_ZNK3egl12AttributeMap3getEl(%"class.egl::AttributeMap"* %144, i64 13405) #12
  %146 = trunc i64 %145 to i32
  %147 = call i64 @_ZNK3egl12AttributeMap3getEl(%"class.egl::AttributeMap"* %144, i64 13404) #12
  %148 = trunc i64 %147 to i32
  %149 = icmp eq i32 %146, 6408
  %150 = icmp eq i32 %148, 5131
  %151 = and i1 %149, %150
  %152 = select i1 %151, i32 34842, i32 %146
  %153 = bitcast %"struct.gl::Format"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #12
  call void @_ZN2gl6FormatC1Ejj(%"struct.gl::Format"* nonnull %8, i32 %152, i32 %148) #12
  %154 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 30
  %155 = call dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"* %154, %"struct.gl::Format"* nonnull dereferenceable(8) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #12
  %156 = load i32, i32* %140, align 4
  br label %157

157:                                              ; preds = %143, %132
  %158 = phi i32 [ %156, %143 ], [ %141, %132 ]
  %159 = icmp eq i32 %158, 13219
  br i1 %159, label %160, label %180

160:                                              ; preds = %157
  %161 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %110, align 8
  %162 = bitcast %"class.rx::SurfaceImpl"* %161 to %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)***
  %163 = load %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)**, %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)*** %162, align 8
  %164 = getelementptr inbounds %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)*, %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)** %163, i64 28
  %165 = load %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)*, %"struct.angle::Format"* (%"class.rx::SurfaceImpl"*)** %164, align 8
  %166 = call %"struct.angle::Format"* %165(%"class.rx::SurfaceImpl"* %161) #12
  %167 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %166, i64 0, i32 2
  %168 = load i32, i32* %167, align 8
  %169 = bitcast %"struct.gl::Format"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #12
  %170 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %166, i64 0, i32 7
  %171 = load i32, i32* %170, align 8
  call void @_ZN2gl6FormatC1Ejj(%"struct.gl::Format"* nonnull %9, i32 %168, i32 %171) #12
  %172 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 30
  %173 = call dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"* %172, %"struct.gl::Format"* nonnull dereferenceable(8) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #12
  store i32 12426, i32* %14, align 4
  %174 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %172, i64 0, i32 0
  %175 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %174, align 8
  %176 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %175, i64 0, i32 20
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 35904
  %179 = select i1 %178, i32 12425, i32 12426
  store i32 %179, i32* %14, align 4
  br label %180

180:                                              ; preds = %160, %157
  %181 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 6
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 4
  br i1 %183, label %184, label %208

184:                                              ; preds = %180
  %185 = call dereferenceable(73) %"struct.egl::DisplayExtensions"* @_ZNK3egl7Display13getExtensionsEv(%"class.egl::Display"* %2) #12
  %186 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %185, i64 0, i32 46
  %187 = load i8, i8* %186, align 1, !range !7
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %208, label %189

189:                                              ; preds = %184
  %190 = bitcast %"class.angle::BitSetT.278"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #12
  %191 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %110, align 8
  %192 = bitcast %"class.rx::SurfaceImpl"* %191 to void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)***
  %193 = load void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)**, void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)*, void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)** %193, i64 30
  %195 = load void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)*, void (%"class.angle::BitSetT.278"*, %"class.rx::SurfaceImpl"*)** %194, align 8
  call void %195(%"class.angle::BitSetT.278"* nonnull sret %10, %"class.rx::SurfaceImpl"* %191) #12
  %196 = getelementptr inbounds %"class.angle::BitSetT.278", %"class.angle::BitSetT.278"* %10, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 2, i32 5, i32 0
  store i32 %197, i32* %198, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #12
  %199 = bitcast %"class.angle::BitSetT.279"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #12
  %200 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %110, align 8
  %201 = bitcast %"class.rx::SurfaceImpl"* %200 to void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)***
  %202 = load void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)**, void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)*, void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)** %202, i64 33
  %204 = load void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)*, void (%"class.angle::BitSetT.279"*, %"class.rx::SurfaceImpl"*)** %203, align 8
  call void %204(%"class.angle::BitSetT.279"* nonnull sret %11, %"class.rx::SurfaceImpl"* %200) #12
  %205 = getelementptr inbounds %"class.angle::BitSetT.279", %"class.angle::BitSetT.279"* %11, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 2, i32 6, i32 0
  store i32 %206, i32* %207, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #12
  br label %208

208:                                              ; preds = %184, %189, %180
  %209 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 34
  %210 = bitcast %"class.rx::SurfaceImpl"** %110 to %"class.angle::Subject"**
  %211 = load %"class.angle::Subject"*, %"class.angle::Subject"** %210, align 8
  call void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"* %209, %"class.angle::Subject"* %211) #12
  store i32 12288, i32* %107, align 8, !alias.scope !11
  store i32 0, i32* %108, align 4, !alias.scope !11
  %212 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %213 = bitcast %"class.std::__1::unique_ptr.744"* %212 to i64*
  store i64 0, i64* %213, align 8, !alias.scope !11
  br label %214

214:                                              ; preds = %106, %208, %80
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare dereferenceable(8) %"struct.gl::Format"* @_ZN2gl6FormataSERKS0_(%"struct.gl::Format"*, %"struct.gl::Format"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK3egl12AttributeMap3getEl(%"class.egl::AttributeMap"*, i64) local_unnamed_addr #2

declare void @_ZN2gl6FormatC1Ejj(%"struct.gl::Format"*, i32, i32) unnamed_addr #2

declare dereferenceable(73) %"struct.egl::DisplayExtensions"* @_ZNK3egl7Display13getExtensionsEv(%"class.egl::Display"*) local_unnamed_addr #2

declare void @_ZN5angle15ObserverBinding4bindEPNS_7SubjectE(%"class.angle::ObserverBinding"*, %"class.angle::Subject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface11makeCurrentEPKN2gl7ContextE(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %8 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %7, align 8
  %10 = bitcast %"class.rx::SurfaceImpl"* %9 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)***
  %11 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %11, i64 7
  %13 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %12, align 8
  tail call void %13(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %9, %"class.gl::Context"* %2) #12
  %14 = load i32, i32* %4, align 8
  %15 = icmp eq i32 %14, 12288
  br i1 %15, label %16, label %35

16:                                               ; preds = %3
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %6, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %19
  %28 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %16, %27
  %30 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %30, align 8
  store i32 12288, i32* %4, align 8, !alias.scope !16
  store i32 0, i32* %5, align 4, !alias.scope !16
  %33 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %34 = bitcast %"class.std::__1::unique_ptr.744"* %33 to i64*
  store i64 0, i64* %34, align 8, !alias.scope !16
  br label %35

35:                                               ; preds = %3, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface13unMakeCurrentEPKN2gl7ContextE(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %8 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %7, align 8
  %10 = bitcast %"class.rx::SurfaceImpl"* %9 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)***
  %11 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %11, i64 8
  %13 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %12, align 8
  tail call void %13(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %9, %"class.gl::Context"* %2) #12
  %14 = load i32, i32* %4, align 8
  %15 = icmp eq i32 %14, 12288
  br i1 %15, label %16, label %65

16:                                               ; preds = %3
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %6, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %24, %19
  %28 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %16, %27
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %2, i64 0, i32 45
  %31 = load %"class.egl::Display"*, %"class.egl::Display"** %30, align 8
  %32 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %33 = load i32, i32* %32, align 8, !noalias !21
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %32, align 8, !noalias !21
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %62

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  %38 = load i8, i8* %37, align 4, !range !7, !noalias !21
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %7, align 8, !noalias !24
  %42 = icmp eq %"class.rx::SurfaceImpl"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.rx::SurfaceImpl"* %41 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %45 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %44, align 8, !noalias !24
  %46 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %45, i64 4
  %47 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %46, align 8, !noalias !24
  tail call void %47(%"class.rx::SurfaceImpl"* nonnull %41, %"class.egl::Display"* %31) #12, !noalias !24
  %48 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %7, align 8, !noalias !24
  %49 = icmp eq %"class.rx::SurfaceImpl"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.rx::SurfaceImpl"* %48 to void (%"class.rx::SurfaceImpl"*)***
  %52 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %51, align 8, !noalias !24
  %53 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %52, i64 1
  %54 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %53, align 8, !noalias !24
  tail call void %54(%"class.rx::SurfaceImpl"* nonnull %48) #12, !noalias !24
  br label %55

55:                                               ; preds = %50, %43, %40
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %7, align 8, !noalias !24
  %56 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %55
  %58 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %59 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %58, align 8, !noalias !24
  %60 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %59, i64 1
  %61 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %60, align 8, !noalias !24
  tail call void %61(%"class.egl::Surface"* nonnull %1) #12, !noalias !24
  br label %62

62:                                               ; preds = %29, %36, %55, %57
  store i32 12288, i32* %4, align 8, !alias.scope !27
  store i32 0, i32* %5, align 4, !alias.scope !27
  %63 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %64 = bitcast %"class.std::__1::unique_ptr.744"* %63 to i64*
  store i64 0, i64* %64, align 8, !alias.scope !27
  br label %65

65:                                               ; preds = %62, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface10releaseRefEPKNS_7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.egl::Surface"*, %"class.egl::Display"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  %10 = load i8, i8* %9, align 4, !range !7
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %14 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %13, align 8, !noalias !36
  %15 = icmp eq %"class.rx::SurfaceImpl"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.rx::SurfaceImpl"* %14 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %18 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %17, align 8, !noalias !36
  %19 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %18, i64 4
  %20 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %19, align 8, !noalias !36
  tail call void %20(%"class.rx::SurfaceImpl"* nonnull %14, %"class.egl::Display"* %2) #12, !noalias !36
  %21 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %13, align 8, !noalias !36
  %22 = icmp eq %"class.rx::SurfaceImpl"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.rx::SurfaceImpl"* %21 to void (%"class.rx::SurfaceImpl"*)***
  %25 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %24, align 8, !noalias !36
  %26 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %25, i64 1
  %27 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %26, align 8, !noalias !36
  tail call void %27(%"class.rx::SurfaceImpl"* nonnull %21) #12, !noalias !36
  br label %28

28:                                               ; preds = %23, %16, %12
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %13, align 8, !noalias !36
  %29 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %32 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %31, align 8, !noalias !36
  %33 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %32, i64 1
  %34 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %33, align 8, !noalias !36
  tail call void %34(%"class.egl::Surface"* nonnull %1) #12, !noalias !36
  br label %35

35:                                               ; preds = %3, %8, %30, %28
  %36 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %36, align 8, !alias.scope !39
  %37 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %37, align 4, !alias.scope !39
  %38 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %39 = bitcast %"class.std::__1::unique_ptr.744"* %38 to i64*
  store i64 0, i64* %39, align 8, !alias.scope !39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface9onDestroyEPKNS_7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.egl::Surface"*, %"class.egl::Display"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %10 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %9, align 8, !noalias !48
  %11 = icmp eq %"class.rx::SurfaceImpl"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.rx::SurfaceImpl"* %10 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %14 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %13, align 8, !noalias !48
  %15 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %14, i64 4
  %16 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %15, align 8, !noalias !48
  tail call void %16(%"class.rx::SurfaceImpl"* nonnull %10, %"class.egl::Display"* %2) #12, !noalias !48
  %17 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %9, align 8, !noalias !48
  %18 = icmp eq %"class.rx::SurfaceImpl"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.rx::SurfaceImpl"* %17 to void (%"class.rx::SurfaceImpl"*)***
  %21 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %20, align 8, !noalias !48
  %22 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %21, i64 1
  %23 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %22, align 8, !noalias !48
  tail call void %23(%"class.rx::SurfaceImpl"* nonnull %17) #12, !noalias !48
  br label %24

24:                                               ; preds = %19, %12, %8
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %9, align 8, !noalias !48
  %25 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %28 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %27, align 8, !noalias !48
  %29 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %28, i64 1
  %30 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %29, align 8, !noalias !48
  tail call void %30(%"class.egl::Surface"* nonnull %1) #12, !noalias !48
  br label %31

31:                                               ; preds = %3, %26, %24
  %32 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %32, align 8, !alias.scope !51
  %33 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %33, align 4, !alias.scope !51
  %34 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %35 = bitcast %"class.std::__1::unique_ptr.744"* %34 to i64*
  store i64 0, i64* %35, align 8, !alias.scope !51
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl7Surface8setLabelEPv(%"class.egl::Surface"* nocapture, i8*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 0
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3egl7Surface8getLabelEv(%"class.egl::Surface"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface7getTypeEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface4swapEPKN2gl7ContextE(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289 to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13, !prof !60

7:                                                ; preds = %3
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %12 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #12
  store i8* %12, i8** @_ZZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289) #12
  br label %13

13:                                               ; preds = %7, %10, %3
  %14 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1
  %17 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %15, align 8
  %18 = load i8*, i8** @_ZZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289, align 8
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1, i32 2
  %23 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1, i32 1
  %24 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %25 = load i8*, i8** @_ZZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289, align 8
  %26 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %24, i8 signext 66, i8* %25, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  %27 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %28 = load i64, i64* bitcast (i8** @_ZZN3egl7Surface4swapEPKN2gl7ContextEE31trace_event_unique_catstatic289 to i64*), align 8
  %29 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %29, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %27, %"struct.angle::PlatformMethods"** %30, align 8
  %31 = bitcast i8** %23 to i64*
  store i64 %28, i64* %31, align 8
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8** %22, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %29, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %15, align 8
  br label %32

32:                                               ; preds = %13, %21
  call void @_ZNK2gl7Context9onPreSwapEv(%"class.gl::Context"* %2) #12
  %33 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %34 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %37 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -86, i64 16, i1 false)
  %38 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %36, align 8
  %39 = bitcast %"class.rx::SurfaceImpl"* %38 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)***
  %40 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %40, i64 9
  %42 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*)** %41, align 8
  call void %42(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %38, %"class.gl::Context"* %2) #12
  %43 = load i32, i32* %33, align 8
  %44 = icmp eq i32 %43, 12288
  br i1 %44, label %45, label %72

45:                                               ; preds = %32
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %35, align 8
  %47 = icmp eq %"class.std::__1::basic_string"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #11
  br label %56

56:                                               ; preds = %53, %48
  %57 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %45, %56
  %59 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 22
  %60 = load i8, i8* %59, align 8, !range !7
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 12436
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 33
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 1, i32 0
  call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %68, i32 3) #12
  br label %69

69:                                               ; preds = %58, %62, %66
  store i32 12288, i32* %33, align 8, !alias.scope !61
  store i32 0, i32* %34, align 4, !alias.scope !61
  %70 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %71 = bitcast %"class.std::__1::unique_ptr.744"* %70 to i64*
  store i64 0, i64* %71, align 8, !alias.scope !61
  br label %72

72:                                               ; preds = %32, %69
  %73 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %15, align 8
  %74 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %73, null
  br i1 %74, label %86, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %73, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %73, i64 0, i32 0
  %82 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %81, align 8
  %83 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %73, i64 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %82, i8 signext 69, i8* %77, i8* %84, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  br label %86

86:                                               ; preds = %72, %75, %80
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

declare i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"*, i8*) local_unnamed_addr #2

declare %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare void @_ZNK2gl7Context9onPreSwapEv(%"class.gl::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKii(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*, i32*, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301 to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15, !prof !60

9:                                                ; preds = %5
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %14 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #12
  store i8* %14, i8** @_ZZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301) #12
  br label %15

15:                                               ; preds = %9, %12, %5
  %16 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1
  %19 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %17, align 8
  %20 = load i8*, i8** @_ZZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301, align 8
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1, i32 2
  %25 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1, i32 1
  %26 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %27 = load i8*, i8** @_ZZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301, align 8
  %28 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %26, i8 signext 66, i8* %27, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  %29 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %30 = load i64, i64* bitcast (i8** @_ZZN3egl7Surface14swapWithDamageEPKN2gl7ContextEPKiiE31trace_event_unique_catstatic301 to i64*), align 8
  %31 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %6, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %31, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %29, %"struct.angle::PlatformMethods"** %32, align 8
  %33 = bitcast i8** %25 to i64*
  store i64 %30, i64* %33, align 8
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8** %24, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %31, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %17, align 8
  br label %34

34:                                               ; preds = %15, %23
  call void @_ZNK2gl7Context9onPreSwapEv(%"class.gl::Context"* %2) #12
  %35 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %36 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %39 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 -86, i64 16, i1 false)
  %40 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %38, align 8
  %41 = bitcast %"class.rx::SurfaceImpl"* %40 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)***
  %42 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)** %42, i64 10
  %44 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*, i32)** %43, align 8
  call void %44(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %40, %"class.gl::Context"* %2, i32* %3, i32 %4) #12
  %45 = load i32, i32* %35, align 8
  %46 = icmp eq i32 %45, 12288
  br i1 %46, label %47, label %74

47:                                               ; preds = %34
  %48 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %37, align 8
  %49 = icmp eq %"class.std::__1::basic_string"* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %55, %50
  %59 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %47, %58
  %61 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 22
  %62 = load i8, i8* %61, align 8, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 12436
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 33
  store i32 0, i32* %69, align 4
  %70 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 1, i32 0
  call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %70, i32 3) #12
  br label %71

71:                                               ; preds = %60, %64, %68
  store i32 12288, i32* %35, align 8, !alias.scope !66
  store i32 0, i32* %36, align 4, !alias.scope !66
  %72 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %73 = bitcast %"class.std::__1::unique_ptr.744"* %72 to i64*
  store i64 0, i64* %73, align 8, !alias.scope !66
  br label %74

74:                                               ; preds = %34, %71
  %75 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %17, align 8
  %76 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %75, null
  br i1 %76, label %88, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %75, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %75, i64 0, i32 0
  %84 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %83, align 8
  %85 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %75, i64 0, i32 2
  %86 = load i8*, i8** %85, align 8
  %87 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %84, i8 signext 69, i8* %79, i8* %86, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  br label %88

88:                                               ; preds = %74, %77, %82
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEm(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.gl::TraceEvent::TraceEndOnScopeClose", align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313 to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14, !prof !60

8:                                                ; preds = %4
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313) #12
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %13 = tail call i8* @_ZN5angle27GetTraceCategoryEnabledFlagEPNS_15PlatformMethodsEPKc(%"struct.angle::PlatformMethods"* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0)) #12
  store i8* %13, i8** @_ZZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313) #12
  br label %14

14:                                               ; preds = %8, %11, %4
  %15 = bitcast %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5, i64 0, i32 1
  %18 = bitcast %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* null, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  %19 = load i8*, i8** @_ZZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313, align 8
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5, i64 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5, i64 0, i32 1, i32 1
  %25 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %26 = load i8*, i8** @_ZZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313, align 8
  %27 = tail call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %25, i8 signext 66, i8* %26, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  %28 = tail call %"struct.angle::PlatformMethods"* @_Z20ANGLEPlatformCurrentv() #12
  %29 = load i64, i64* bitcast (i8** @_ZZN3egl7Surface18swapWithFrameTokenEPKN2gl7ContextEmE31trace_event_unique_catstatic313 to i64*), align 8
  %30 = getelementptr inbounds %"class.gl::TraceEvent::TraceEndOnScopeClose", %"class.gl::TraceEvent::TraceEndOnScopeClose"* %5, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %30, i64 0, i32 0
  store %"struct.angle::PlatformMethods"* %28, %"struct.angle::PlatformMethods"** %31, align 8
  %32 = bitcast i8** %24 to i64*
  store i64 %29, i64* %32, align 8
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8** %23, align 8
  store %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %30, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  br label %33

33:                                               ; preds = %14, %22
  call void @_ZNK2gl7Context9onPreSwapEv(%"class.gl::Context"* %2) #12
  %34 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %35 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %38 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 -86, i64 16, i1 false)
  %39 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %37, align 8
  %40 = bitcast %"class.rx::SurfaceImpl"* %39 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)***
  %41 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)** %41, i64 11
  %43 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i64)** %42, align 8
  call void %43(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %39, %"class.gl::Context"* %2, i64 %3) #12
  %44 = load i32, i32* %34, align 8
  %45 = icmp eq i32 %44, 12288
  br i1 %45, label %46, label %73

46:                                               ; preds = %33
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %36, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %46
  %50 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %54, %49
  %58 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %46, %57
  %60 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 22
  %61 = load i8, i8* %60, align 8, !range !7
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 12436
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 33
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 1, i32 0
  call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %69, i32 3) #12
  br label %70

70:                                               ; preds = %59, %63, %67
  store i32 12288, i32* %34, align 8, !alias.scope !71
  store i32 0, i32* %35, align 4, !alias.scope !71
  %71 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %72 = bitcast %"class.std::__1::unique_ptr.744"* %71 to i64*
  store i64 0, i64* %72, align 8, !alias.scope !71
  br label %73

73:                                               ; preds = %33, %70
  %74 = load %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"*, %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"** %16, align 8
  %75 = icmp eq %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %74, null
  br i1 %75, label %87, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %74, i64 0, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %74, i64 0, i32 0
  %83 = load %"struct.angle::PlatformMethods"*, %"struct.angle::PlatformMethods"** %82, align 8
  %84 = getelementptr inbounds %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data", %"struct.gl::TraceEvent::TraceEndOnScopeClose::Data"* %74, i64 0, i32 2
  %85 = load i8*, i8** %84, align 8
  %86 = call i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"* %83, i8 signext 69, i8* %78, i8* %85, i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #12
  br label %87

87:                                               ; preds = %73, %76, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface13postSubBufferEPKN2gl7ContextEiiii(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i32 %5, 0
  %9 = icmp eq i32 %6, 0
  %10 = or i1 %8, %9
  %11 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  br i1 %10, label %47, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %15 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -86, i64 16, i1 false)
  %16 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %14, align 8
  %17 = bitcast %"class.rx::SurfaceImpl"* %16 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)***
  %18 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)** %18, i64 12
  %20 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32, i32, i32, i32)** %19, align 8
  tail call void %20(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %16, %"class.gl::Context"* %2, i32 %3, i32 %4, i32 %5, i32 %6) #12
  %21 = load i32, i32* %11, align 8
  %22 = icmp eq i32 %21, 12288
  br i1 %22, label %23, label %51

23:                                               ; preds = %12
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %13, align 8
  %25 = icmp eq %"class.std::__1::basic_string"* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %31, %26
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %23, %34
  %37 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 22
  %38 = load i8, i8* %37, align 8, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 12436
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 33
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %46, i32 3) #12
  br label %47

47:                                               ; preds = %44, %40, %36, %7
  store i32 12288, i32* %11, align 8, !alias.scope !76
  %48 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %48, align 4, !alias.scope !85
  %49 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %50 = bitcast %"class.std::__1::unique_ptr.744"* %49 to i64*
  store i64 0, i64* %50, align 8, !alias.scope !85
  br label %51

51:                                               ; preds = %47, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface19setPresentationTimeEl(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %5 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %4, align 8
  %6 = bitcast %"class.rx::SurfaceImpl"* %5 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)***
  %7 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)** %7, i64 13
  %9 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64)** %8, align 8
  tail call void %9(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %5, i64 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface24querySurfacePointerANGLEEiPPv(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i32, i8**) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %6 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %5, align 8
  %7 = bitcast %"class.rx::SurfaceImpl"* %6 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)***
  %8 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)** %8, i64 14
  %10 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i8**)** %9, align 8
  tail call void %10(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %6, i32 %2, i8** %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3egl7Surface24isPostSubBufferSupportedEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %7 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %6, align 8
  %8 = bitcast %"class.rx::SurfaceImpl"* %7 to i32 (%"class.rx::SurfaceImpl"*)***
  %9 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %9, i64 26
  %11 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %10, align 8
  %12 = tail call i32 %11(%"class.rx::SurfaceImpl"* %7) #12
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %1, %5
  %16 = phi i32 [ 0, %1 ], [ %14, %5 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface15setSwapIntervalEi(%"class.egl::Surface"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %4 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %3, align 8
  %5 = bitcast %"class.rx::SurfaceImpl"* %4 to void (%"class.rx::SurfaceImpl"*, i32)***
  %6 = load void (%"class.rx::SurfaceImpl"*, i32)**, void (%"class.rx::SurfaceImpl"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %6, i64 19
  %8 = load void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %7, align 8
  tail call void %8(%"class.rx::SurfaceImpl"* %4, i32 %1) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl7Surface14setMipmapLevelEi(%"class.egl::Surface"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 15
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl7Surface21setMultisampleResolveEj(%"class.egl::Surface"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 18
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl7Surface15setSwapBehaviorEj(%"class.egl::Surface"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 27
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface13setFixedWidthEi(%"class.egl::Surface"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 20
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %6 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %5, align 8
  %7 = bitcast %"class.rx::SurfaceImpl"* %6 to void (%"class.rx::SurfaceImpl"*, i32)***
  %8 = load void (%"class.rx::SurfaceImpl"*, i32)**, void (%"class.rx::SurfaceImpl"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %8, i64 20
  %10 = load void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %9, align 8
  tail call void %10(%"class.rx::SurfaceImpl"* %6, i32 %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface14setFixedHeightEi(%"class.egl::Surface"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 21
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %6 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %5, align 8
  %7 = bitcast %"class.rx::SurfaceImpl"* %6 to void (%"class.rx::SurfaceImpl"*, i32)***
  %8 = load void (%"class.rx::SurfaceImpl"*, i32)**, void (%"class.rx::SurfaceImpl"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %8, i64 21
  %10 = load void (%"class.rx::SurfaceImpl"*, i32)*, void (%"class.rx::SurfaceImpl"*, i32)** %9, align 8
  tail call void %10(%"class.rx::SurfaceImpl"* %6, i32 %1) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.egl::Config"* @_ZNK3egl7Surface9getConfigEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 1
  %3 = load %"struct.egl::Config"*, %"struct.egl::Config"** %2, align 8
  ret %"struct.egl::Config"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface19getPixelAspectRatioEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 25
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface15getRenderBufferEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 26
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface15getSwapBehaviorEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 27
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK3egl7Surface16getTextureFormatEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 23
  %3 = load i8, i8* %2, align 1
  ret i8 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface16getTextureTargetEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 24
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl7Surface17getLargestPbufferEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 2, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface15getGLColorspaceEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface16getVGAlphaFormatEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface15getVGColorspaceEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 13
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl7Surface16getMipmapTextureEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface14getMipmapLevelEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface23getHorizontalResolutionEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface21getVerticalResolutionEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface21getMultisampleResolveEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface11isFixedSizeEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 19
  %3 = load i8, i8* %2, align 4, !range !7
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3egl7Surface8getWidthEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 19
  %3 = load i8, i8* %2, align 4, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 20
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  br label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %11 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %10, align 8
  %12 = bitcast %"class.rx::SurfaceImpl"* %11 to i32 (%"class.rx::SurfaceImpl"*)***
  %13 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %13, i64 22
  %15 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %14, align 8
  %16 = tail call i32 %15(%"class.rx::SurfaceImpl"* %11) #12
  br label %17

17:                                               ; preds = %9, %5
  %18 = phi i32 [ %8, %5 ], [ %16, %9 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3egl7Surface9getHeightEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 19
  %3 = load i8, i8* %2, align 4, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 21
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  br label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %11 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %10, align 8
  %12 = bitcast %"class.rx::SurfaceImpl"* %11 to i32 (%"class.rx::SurfaceImpl"*)***
  %13 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %13, i64 23
  %15 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %14, align 8
  %16 = tail call i32 %15(%"class.rx::SurfaceImpl"* %11) #12
  br label %17

17:                                               ; preds = %9, %5
  %18 = phi i32 [ %8, %5 ], [ %16, %9 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface12getUserWidthEPKNS_7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, %"class.egl::Display"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 19
  %6 = load i8, i8* %5, align 4, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 20
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* %3, align 4
  %12 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %12, align 8, !alias.scope !86
  %13 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 4, !alias.scope !86
  %14 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::unique_ptr.744"* %14 to i64*
  store i64 0, i64* %15, align 8, !alias.scope !86
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %18 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %17, align 8
  %19 = bitcast %"class.rx::SurfaceImpl"* %18 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)***
  %20 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)** %20, i64 24
  %22 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)** %21, align 8
  tail call void %22(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %18, %"class.egl::Display"* %2, i32* %3) #12
  br label %23

23:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface13getUserHeightEPKNS_7DisplayEPi(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, %"class.egl::Display"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 19
  %6 = load i8, i8* %5, align 4, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 21
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* %3, align 4
  %12 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %12, align 8, !alias.scope !91
  %13 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 4, !alias.scope !91
  %14 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::unique_ptr.744"* %14 to i64*
  store i64 0, i64* %15, align 8, !alias.scope !91
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %18 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %17, align 8
  %19 = bitcast %"class.rx::SurfaceImpl"* %18 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)***
  %20 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)** %20, i64 25
  %22 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.egl::Display"*, i32*)** %21, align 8
  tail call void %22(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %18, %"class.egl::Display"* %2, i32* %3) #12
  br label %23

23:                                               ; preds = %16, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface12bindTexImageEPN2gl7ContextEPNS1_7TextureEi(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %10 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %9, align 8
  %12 = bitcast %"class.rx::SurfaceImpl"* %11 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)***
  %13 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)** %13, i64 15
  %15 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, %"class.gl::Texture"*, i32)** %14, align 8
  tail call void %15(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %11, %"class.gl::Context"* %2, %"class.gl::Texture"* %3, i32 %4) #12
  %16 = load i32, i32* %6, align 8
  %17 = icmp eq i32 %16, 12288
  br i1 %17, label %18, label %43

18:                                               ; preds = %5
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %8, align 8
  %20 = icmp eq %"class.std::__1::basic_string"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %18
  %22 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %26, %21
  %30 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %18, %29
  %32 = tail call i32 @_ZN2gl7Texture23bindTexImageFromSurfaceEPNS_7ContextEPN3egl7SurfaceE(%"class.gl::Texture"* %3, %"class.gl::Context"* %2, %"class.egl::Surface"* %1) #12
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 29
  store %"class.gl::Texture"* %3, %"class.gl::Texture"** %35, align 8
  %36 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi i32 [ 12288, %34 ], [ 12301, %31 ]
  store i32 %40, i32* %6, align 8
  store i32 0, i32* %7, align 4
  %41 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %42 = bitcast %"class.std::__1::unique_ptr.744"* %41 to i64*
  store i64 0, i64* %42, align 8
  br label %43

43:                                               ; preds = %39, %5
  ret void
}

declare i32 @_ZN2gl7Texture23bindTexImageFromSurfaceEPNS_7ContextEPN3egl7SurfaceE(%"class.gl::Texture"*, %"class.gl::Context"*, %"class.egl::Surface"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface15releaseTexImageEPKN2gl7ContextEi(%"class.egl::Error"* noalias sret, %"class.egl::Surface"*, %"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %9 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %8, align 8
  %11 = bitcast %"class.rx::SurfaceImpl"* %10 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)***
  %12 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)** %12, i64 16
  %14 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32)** %13, align 8
  tail call void %14(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %10, %"class.gl::Context"* %2, i32 %3) #12
  %15 = load i32, i32* %5, align 8
  %16 = icmp eq i32 %15, 12288
  br i1 %16, label %17, label %89

17:                                               ; preds = %4
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %7, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %25, %20
  %29 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %17, %28
  %31 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 29
  %32 = bitcast %"class.egl::Error"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 -86, i64 16, i1 false)
  %33 = load %"class.gl::Texture"*, %"class.gl::Texture"** %31, align 8
  %34 = tail call i32 @_ZN2gl7Texture26releaseTexImageFromSurfaceEPKNS_7ContextE(%"class.gl::Texture"* %33, %"class.gl::Context"* %2) #12
  tail call void @_ZN5angle11ResultToEGLENS_6ResultE(%"class.egl::Error"* sret %0, i32 %34) #12
  %35 = load i32, i32* %5, align 8
  %36 = icmp eq i32 %35, 12288
  br i1 %36, label %37, label %89

37:                                               ; preds = %30
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %7, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %45, %40
  %49 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %37, %48
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %31, align 8, !noalias !96
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %2, i64 0, i32 45
  %52 = load %"class.egl::Display"*, %"class.egl::Display"** %51, align 8, !noalias !96
  %53 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %54 = load i32, i32* %53, align 8, !noalias !99
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %53, align 8, !noalias !99
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %86

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  %59 = load i8, i8* %58, align 4, !range !7, !noalias !99
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %86, label %61

61:                                               ; preds = %57
  %62 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %8, align 8, !noalias !102
  %63 = icmp eq %"class.rx::SurfaceImpl"* %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %61
  %65 = bitcast %"class.rx::SurfaceImpl"* %62 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %66 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %65, align 8, !noalias !102
  %67 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %66, i64 4
  %68 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %67, align 8, !noalias !102
  tail call void %68(%"class.rx::SurfaceImpl"* nonnull %62, %"class.egl::Display"* %52) #12, !noalias !102
  %69 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %8, align 8, !noalias !102
  %70 = icmp eq %"class.rx::SurfaceImpl"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.rx::SurfaceImpl"* %69 to void (%"class.rx::SurfaceImpl"*)***
  %73 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %72, align 8, !noalias !102
  %74 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %73, i64 1
  %75 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %74, align 8, !noalias !102
  tail call void %75(%"class.rx::SurfaceImpl"* nonnull %69) #12, !noalias !102
  br label %76

76:                                               ; preds = %71, %64, %61
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %8, align 8, !noalias !102
  %77 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %80 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %79, align 8, !noalias !102
  %81 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %80, i64 1
  %82 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %81, align 8, !noalias !102
  tail call void %82(%"class.egl::Surface"* nonnull %1) #12, !noalias !102
  br label %83

83:                                               ; preds = %78, %76
  store i32 12288, i32* %5, align 8, !alias.scope !105
  store i32 0, i32* %6, align 4, !alias.scope !105
  %84 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %85 = bitcast %"class.std::__1::unique_ptr.744"* %84 to i64*
  store i64 0, i64* %85, align 8, !alias.scope !105
  br label %89

86:                                               ; preds = %57, %50
  store i32 12288, i32* %5, align 8, !alias.scope !110
  store i32 0, i32* %6, align 4, !alias.scope !110
  %87 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %88 = bitcast %"class.std::__1::unique_ptr.744"* %87 to i64*
  store i64 0, i64* %88, align 8, !alias.scope !110
  br label %89

89:                                               ; preds = %30, %4, %86, %83
  ret void
}

declare void @_ZN5angle11ResultToEGLENS_6ResultE(%"class.egl::Error"* sret, i32) local_unnamed_addr #2

declare i32 @_ZN2gl7Texture26releaseTexImageFromSurfaceEPKNS_7ContextE(%"class.gl::Texture"*, %"class.gl::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface26releaseTexImageFromTextureEPKN2gl7ContextE(%"class.egl::Error"* noalias nocapture sret, %"class.egl::Surface"*, %"class.gl::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 29
  store %"class.gl::Texture"* null, %"class.gl::Texture"** %4, align 8
  %5 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %2, i64 0, i32 45
  %6 = load %"class.egl::Display"*, %"class.egl::Display"** %5, align 8
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %8 = load i32, i32* %7, align 8, !noalias !115
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 8, !noalias !115
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %38

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  %13 = load i8, i8* %12, align 4, !range !7, !noalias !115
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %17 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %16, align 8, !noalias !118
  %18 = icmp eq %"class.rx::SurfaceImpl"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.rx::SurfaceImpl"* %17 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %21 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %20, align 8, !noalias !118
  %22 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %21, i64 4
  %23 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %22, align 8, !noalias !118
  tail call void %23(%"class.rx::SurfaceImpl"* nonnull %17, %"class.egl::Display"* %6) #12, !noalias !118
  %24 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %16, align 8, !noalias !118
  %25 = icmp eq %"class.rx::SurfaceImpl"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.rx::SurfaceImpl"* %24 to void (%"class.rx::SurfaceImpl"*)***
  %28 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %27, align 8, !noalias !118
  %29 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %28, i64 1
  %30 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %29, align 8, !noalias !118
  tail call void %30(%"class.rx::SurfaceImpl"* nonnull %24) #12, !noalias !118
  br label %31

31:                                               ; preds = %26, %19, %15
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %16, align 8, !noalias !118
  %32 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %35 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %34, align 8, !noalias !118
  %36 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %35, i64 1
  %37 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %36, align 8, !noalias !118
  tail call void %37(%"class.egl::Surface"* nonnull %1) #12, !noalias !118
  br label %38

38:                                               ; preds = %3, %11, %31, %33
  %39 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %39, align 8, !alias.scope !121
  %40 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %40, align 4, !alias.scope !121
  %41 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %42 = bitcast %"class.std::__1::unique_ptr.744"* %41 to i64*
  store i64 0, i64* %42, align 8, !alias.scope !121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface13getSyncValuesEPmS1_S1_(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %7 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %6, align 8
  %8 = bitcast %"class.rx::SurfaceImpl"* %7 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)***
  %9 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)** %9, i64 17
  %11 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*, i64*, i64*)** %10, align 8
  tail call void %11(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %7, i64* %2, i64* %3, i64* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface10getMscRateEPiS1_(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i32*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %6 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %5, align 8
  %7 = bitcast %"class.rx::SurfaceImpl"* %6 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)***
  %8 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)** %8, i64 18
  %10 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32*, i32*)** %9, align 8
  tail call void %10(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %6, i32* %2, i32* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 19
  %4 = load i8, i8* %3, align 4, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 20
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  br label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %12 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %11, align 8
  %13 = bitcast %"class.rx::SurfaceImpl"* %12 to i32 (%"class.rx::SurfaceImpl"*)***
  %14 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %14, i64 22
  %16 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %15, align 8
  %17 = tail call i32 %16(%"class.rx::SurfaceImpl"* %12) #12
  %18 = load i8, i8* %3, align 4, !range !7
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %6, %10
  %21 = phi i32 [ %9, %6 ], [ %17, %10 ]
  %22 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 21
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  br label %33

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %27 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %26, align 8
  %28 = bitcast %"class.rx::SurfaceImpl"* %27 to i32 (%"class.rx::SurfaceImpl"*)***
  %29 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %29, i64 23
  %31 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %30, align 8
  %32 = tail call i32 %31(%"class.rx::SurfaceImpl"* %27) #12
  br label %33

33:                                               ; preds = %20, %25
  %34 = phi i32 [ %21, %20 ], [ %17, %25 ]
  %35 = phi i32 [ %24, %20 ], [ %32, %25 ]
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %34 to i64
  %39 = or i64 %37, %38
  %40 = insertvalue { i64, i32 } undef, i64 %39, 0
  %41 = insertvalue { i64, i32 } %40, i32 1, 1
  ret { i64, i32 } %41
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZThn8_NK3egl7Surface17getAttachmentSizeERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.egl::Surface"*
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %4, i64 0, i32 19
  %6 = load i8, i8* %5, align 4, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %3, i64 29
  %10 = bitcast %"class.angle::Subject"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  br label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %3, i64 21
  %15 = bitcast %"class.angle::Subject"** %14 to %"class.rx::SurfaceImpl"**
  %16 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %15, align 8
  %17 = bitcast %"class.rx::SurfaceImpl"* %16 to i32 (%"class.rx::SurfaceImpl"*)***
  %18 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %18, i64 22
  %20 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %19, align 8
  %21 = tail call i32 %20(%"class.rx::SurfaceImpl"* %16) #12
  %22 = load i8, i8* %5, align 4, !range !7
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %13, %8
  %25 = phi i32 [ %12, %8 ], [ %21, %13 ]
  %26 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %3, i64 30
  %27 = bitcast %"class.angle::Subject"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  br label %37

30:                                               ; preds = %13
  %31 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %15, align 8
  %32 = bitcast %"class.rx::SurfaceImpl"* %31 to i32 (%"class.rx::SurfaceImpl"*)***
  %33 = load i32 (%"class.rx::SurfaceImpl"*)**, i32 (%"class.rx::SurfaceImpl"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %33, i64 23
  %35 = load i32 (%"class.rx::SurfaceImpl"*)*, i32 (%"class.rx::SurfaceImpl"*)** %34, align 8
  %36 = tail call i32 %35(%"class.rx::SurfaceImpl"* %31) #12
  br label %37

37:                                               ; preds = %24, %30
  %38 = phi i32 [ %25, %24 ], [ %21, %30 ]
  %39 = phi i32 [ %29, %24 ], [ %36, %30 ]
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %38 to i64
  %43 = or i64 %41, %42
  %44 = insertvalue { i64, i32 } undef, i64 %43, 0
  %45 = insertvalue { i64, i32 } %44, i32 1, 1
  ret { i64, i32 } %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE(%"struct.gl::Format"* noalias sret, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 1029
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 30
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 31
  %8 = select i1 %5, %"struct.gl::Format"* %6, %"struct.gl::Format"* %7
  tail call void @_ZN2gl6FormatC1ERKS0_(%"struct.gl::Format"* %0, %"struct.gl::Format"* dereferenceable(8) %8) #12
  ret void
}

declare void @_ZN2gl6FormatC1ERKS0_(%"struct.gl::Format"*, %"struct.gl::Format"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK3egl7Surface19getAttachmentFormatEjRKN2gl10ImageIndexE(%"struct.gl::Format"* noalias sret, %"class.egl::Surface"*, i32, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 -1, i32 34, i32 1
  %6 = icmp eq i32 %2, 1029
  %7 = select i1 %6, i64 35, i64 36
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %5, i64 %7
  %9 = bitcast %"class.angle::Subject"** %8 to %"struct.gl::Format"*
  tail call void @_ZN2gl6FormatC1ERKS0_(%"struct.gl::Format"* %0, %"struct.gl::Format"* dereferenceable(8) %9) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 1
  %4 = load %"struct.egl::Config"*, %"struct.egl::Config"** %3, align 8
  %5 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %4, i64 0, i32 29
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn8_NK3egl7Surface20getAttachmentSamplesERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %4 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %3, i64 15
  %5 = bitcast %"class.angle::Subject"** %4 to %"struct.egl::Config"**
  %6 = load %"struct.egl::Config"*, %"struct.egl::Config"** %5, align 8
  %7 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %6, i64 0, i32 29
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE(%"class.egl::Surface"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #9 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn8_NK3egl7Surface12isRenderableEPKN2gl7ContextEjRKNS1_10ImageIndexE(%"class.egl::Surface"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #9 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3egl7Surface5isYUVEv(%"class.egl::Surface"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZThn8_NK3egl7Surface5isYUVEv(%"class.egl::Surface"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3egl7Surface5getIdEv(%"class.egl::Surface"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZThn8_NK3egl7Surface5getIdEv(%"class.egl::Surface"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface12getBufferAgeEPKN2gl7ContextEPi(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, %"class.gl::Context"*, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 27
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 12436
  br i1 %7, label %8, label %16

8:                                                ; preds = %4
  %9 = icmp eq i32* %3, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %8
  store i32 1, i32* %3, align 4
  br label %11

11:                                               ; preds = %8, %10
  %12 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %12, align 8, !alias.scope !130
  %13 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 4, !alias.scope !130
  %14 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::unique_ptr.744"* %14 to i64*
  store i64 0, i64* %15, align 8, !alias.scope !130
  br label %23

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %18 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %17, align 8
  %19 = bitcast %"class.rx::SurfaceImpl"* %18 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)***
  %20 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)** %20, i64 35
  %22 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, %"class.gl::Context"*, i32*)** %21, align 8
  tail call void %22(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %18, %"class.gl::Context"* %2, i32* %3) #12
  br label %23

23:                                               ; preds = %16, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.gl::Framebuffer"* @_ZN3egl7Surface24createDefaultFramebufferEPKN2gl7ContextEPS0_(%"class.egl::Surface"*, %"class.gl::Context"*, %"class.egl::Surface"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 728) #11
  %5 = bitcast i8* %4 to %"class.gl::Framebuffer"*
  tail call void @_ZN2gl11FramebufferC1EPKNS_7ContextEPN3egl7SurfaceES6_(%"class.gl::Framebuffer"* nonnull %5, %"class.gl::Context"* %1, %"class.egl::Surface"* %0, %"class.egl::Surface"* %2) #12
  ret %"class.gl::Framebuffer"* %5
}

declare void @_ZN2gl11FramebufferC1EPKNS_7ContextEPN3egl7SurfaceES6_(%"class.gl::Framebuffer"*, %"class.gl::Context"*, %"class.egl::Surface"*, %"class.egl::Surface"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3egl7Surface9initStateERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 33
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZThn8_NK3egl7Surface9initStateERKN2gl10ImageIndexE(%"class.egl::Surface"* nocapture readonly, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.egl::Surface"*
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %4, i64 0, i32 33
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE(%"class.egl::Surface"* nocapture, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16), i32) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 33
  store i32 %2, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn8_N3egl7Surface12setInitStateERKN2gl10ImageIndexENS1_9InitStateE(%"class.egl::Surface"* nocapture, %"class.gl::ImageIndex"* nocapture readnone dereferenceable(16), i32) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 34, i32 1
  %5 = bitcast %"class.angle::Subject"** %4 to %"class.egl::Surface"*
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %5, i64 0, i32 33
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface20setTimestampsEnabledEb(%"class.egl::Surface"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 3
  %5 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %4, align 8
  %6 = bitcast %"class.rx::SurfaceImpl"* %5 to void (%"class.rx::SurfaceImpl"*, i1)***
  %7 = load void (%"class.rx::SurfaceImpl"*, i1)**, void (%"class.rx::SurfaceImpl"*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, i1)*, void (%"class.rx::SurfaceImpl"*, i1)** %7, i64 29
  %9 = load void (%"class.rx::SurfaceImpl"*, i1)*, void (%"class.rx::SurfaceImpl"*, i1)** %8, align 8
  tail call void %9(%"class.rx::SurfaceImpl"* %5, i1 zeroext %1) #12
  %10 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 3
  store i8 %3, i8* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl7Surface19isTimestampsEnabledEv(%"class.egl::Surface"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 3
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(4) %"class.angle::BitSetT.278"* @_ZNK3egl7Surface29getSupportedCompositorTimingsEv(%"class.egl::Surface"* readnone) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 5
  ret %"class.angle::BitSetT.278"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface19getCompositorTimingEiPKiPl(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i32, i32*, i64*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %7 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %6, align 8
  %8 = bitcast %"class.rx::SurfaceImpl"* %7 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)***
  %9 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)** %9, i64 31
  %11 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i32, i32*, i64*)** %10, align 8
  tail call void %11(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %7, i32 %2, i32* %3, i64* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface14getNextFrameIdEPm(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %5 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %4, align 8
  %6 = bitcast %"class.rx::SurfaceImpl"* %5 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)***
  %7 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)** %7, i64 32
  %9 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64*)** %8, align 8
  tail call void %9(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %5, i64* %2) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(4) %"class.angle::BitSetT.279"* @_ZNK3egl7Surface22getSupportedTimestampsEv(%"class.egl::Surface"* readnone) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 2, i32 6
  ret %"class.angle::BitSetT.279"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3egl7Surface18getFrameTimestampsEmiPKiPl(%"class.egl::Error"* noalias sret, %"class.egl::Surface"* nocapture readonly, i64, i32, i32*, i64*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %8 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %7, align 8
  %9 = bitcast %"class.rx::SurfaceImpl"* %8 to void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)***
  %10 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)**, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)** %10, i64 34
  %12 = load void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)*, void (%"class.egl::Error"*, %"class.rx::SurfaceImpl"*, i64, i32, i32*, i64*)** %11, align 8
  tail call void %12(%"class.egl::Error"* sret %0, %"class.rx::SurfaceImpl"* %8, i64 %2, i32 %3, i32* %4, i64* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.egl::Surface"*, i64, i32) unnamed_addr #0 align 2 {
  switch i32 %2, label %8 [
    i32 3, label %5
    i32 6, label %4
  ]

4:                                                ; preds = %3
  br label %5

5:                                                ; preds = %3, %4
  %6 = phi i32 [ 6, %4 ], [ 1, %3 ]
  %7 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %7, i32 %6) #12
  br label %8

8:                                                ; preds = %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl7Surface20onSubjectStateChangeEmN5angle14SubjectMessageE(%"class.egl::Surface"*, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %0, i64 -1, i32 21
  switch i32 %2, label %10 [
    i32 3, label %6
    i32 6, label %5
  ]

5:                                                ; preds = %3
  br label %6

6:                                                ; preds = %3, %5
  %7 = phi i32 [ 6, %5 ], [ 1, %3 ]
  %8 = getelementptr inbounds i64, i64* %4, i64 1
  %9 = bitcast i64* %8 to %"class.angle::Subject"*
  tail call void @_ZNK5angle7Subject13onStateChangeENS_14SubjectMessageE(%"class.angle::Subject"* %9, i32 %7) #12
  br label %10

10:                                               ; preds = %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl13WindowSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE(%"class.egl::WindowSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0
  tail call void @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj(%"class.egl::Surface"* %6, i32 4, %"struct.egl::Config"* %2, %"class.egl::AttributeMap"* dereferenceable(24) %4, i32 12344)
  %7 = bitcast %"class.egl::WindowSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13WindowSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13WindowSurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13WindowSurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 2
  %10 = bitcast %"class.rx::EGLImplFactory"* %1 to %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)***
  %11 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)**, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)** %11, i64 2
  %13 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)** %12, align 8
  %14 = tail call %"class.rx::SurfaceImpl"* %13(%"class.rx::EGLImplFactory"* %1, %"struct.egl::SurfaceState"* dereferenceable(56) %9, i64 %3, %"class.egl::AttributeMap"* dereferenceable(24) %4) #12
  %15 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 3
  store %"class.rx::SurfaceImpl"* %14, %"class.rx::SurfaceImpl"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl13WindowSurfaceD1Ev(%"class.egl::WindowSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl13WindowSurfaceD1Ev(%"class.egl::WindowSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl13WindowSurfaceD0Ev(%"class.egl::WindowSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.egl::WindowSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 34
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %5) #12
  %6 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = load %"struct.egl::Config"*, %"struct.egl::Config"** %6, align 8
  %8 = icmp eq %"struct.egl::Config"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %7) #12
  %10 = bitcast %"struct.egl::Config"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 0, i32 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %12) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %2) #12
  %13 = bitcast %"class.egl::WindowSurface"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl13WindowSurfaceD0Ev(%"class.egl::WindowSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast %"class.angle::Subject"** %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl13WindowSurfaceD0Ev(%"class.egl::WindowSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::WindowSurface", %"class.egl::WindowSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl14PbufferSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigERKNS_12AttributeMapE(%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0
  tail call void @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj(%"class.egl::Surface"* %5, i32 1, %"struct.egl::Config"* %2, %"class.egl::AttributeMap"* dereferenceable(24) %3, i32 12344)
  %6 = bitcast %"class.egl::PbufferSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 2
  %9 = bitcast %"class.rx::EGLImplFactory"* %1 to %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)***
  %10 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)**, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)** %10, i64 3
  %12 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)** %11, align 8
  %13 = tail call %"class.rx::SurfaceImpl"* %12(%"class.rx::EGLImplFactory"* %1, %"struct.egl::SurfaceState"* dereferenceable(56) %8, %"class.egl::AttributeMap"* dereferenceable(24) %3) #12
  %14 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 3
  store %"class.rx::SurfaceImpl"* %13, %"class.rx::SurfaceImpl"** %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl14PbufferSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigEjPvRKNS_12AttributeMapE(%"class.egl::PbufferSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0
  tail call void @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj(%"class.egl::Surface"* %7, i32 1, %"struct.egl::Config"* %2, %"class.egl::AttributeMap"* dereferenceable(24) %5, i32 %3)
  %8 = bitcast %"class.egl::PbufferSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl14PbufferSurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 2
  %11 = bitcast %"class.rx::EGLImplFactory"* %1 to %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)***
  %12 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)**, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)** %12, i64 4
  %14 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)** %13, align 8
  %15 = tail call %"class.rx::SurfaceImpl"* %14(%"class.rx::EGLImplFactory"* %1, %"struct.egl::SurfaceState"* dereferenceable(56) %10, i32 %3, i8* %4, %"class.egl::AttributeMap"* dereferenceable(24) %5) #12
  %16 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 3
  store %"class.rx::SurfaceImpl"* %15, %"class.rx::SurfaceImpl"** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl14PbufferSurfaceD1Ev(%"class.egl::PbufferSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl14PbufferSurfaceD1Ev(%"class.egl::PbufferSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl14PbufferSurfaceD0Ev(%"class.egl::PbufferSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.egl::PbufferSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 34
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %5) #12
  %6 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = load %"struct.egl::Config"*, %"struct.egl::Config"** %6, align 8
  %8 = icmp eq %"struct.egl::Config"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %7) #12
  %10 = bitcast %"struct.egl::Config"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 0, i32 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %12) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %2) #12
  %13 = bitcast %"class.egl::PbufferSurface"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl14PbufferSurfaceD0Ev(%"class.egl::PbufferSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast %"class.angle::Subject"** %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl14PbufferSurfaceD0Ev(%"class.egl::PbufferSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PbufferSurface", %"class.egl::PbufferSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl13PixmapSurfaceC2EPN2rx14EGLImplFactoryEPKNS_6ConfigElRKNS_12AttributeMapE(%"class.egl::PixmapSurface"*, %"class.rx::EGLImplFactory"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0
  tail call void @_ZN3egl7SurfaceC2EiPKNS_6ConfigERKNS_12AttributeMapEj(%"class.egl::Surface"* %6, i32 2, %"struct.egl::Config"* %2, %"class.egl::AttributeMap"* dereferenceable(24) %4, i32 12344)
  %7 = bitcast %"class.egl::PixmapSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13PixmapSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13PixmapSurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %7, align 8
  %8 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl13PixmapSurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 2
  %10 = bitcast %"class.rx::EGLImplFactory"* %1 to %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)***
  %11 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)**, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)** %11, i64 5
  %13 = load %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)*, %"class.rx::SurfaceImpl"* (%"class.rx::EGLImplFactory"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)** %12, align 8
  %14 = tail call %"class.rx::SurfaceImpl"* %13(%"class.rx::EGLImplFactory"* %1, %"struct.egl::SurfaceState"* dereferenceable(56) %9, i64 %3, %"class.egl::AttributeMap"* dereferenceable(24) %4) #12
  %15 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 3
  store %"class.rx::SurfaceImpl"* %14, %"class.rx::SurfaceImpl"** %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl13PixmapSurfaceD1Ev(%"class.egl::PixmapSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl13PixmapSurfaceD1Ev(%"class.egl::PixmapSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl13PixmapSurfaceD0Ev(%"class.egl::PixmapSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.egl::PixmapSurface"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 34
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %5) #12
  %6 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 2, i32 1
  %7 = load %"struct.egl::Config"*, %"struct.egl::Config"** %6, align 8
  %8 = icmp eq %"struct.egl::Config"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %7) #12
  %10 = bitcast %"struct.egl::Config"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 0, i32 0, i32 2, i32 2
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %12) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %2) #12
  %13 = bitcast %"class.egl::PixmapSurface"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3egl13PixmapSurfaceD0Ev(%"class.egl::PixmapSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 -1, i32 0, i32 34, i32 1
  %3 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 1
  %4 = bitcast %"class.angle::Subject"** %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast %"class.angle::Subject"** %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 13
  %7 = bitcast %"class.angle::Subject"** %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 39
  %9 = bitcast %"class.angle::Subject"** %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 15
  %11 = bitcast %"class.angle::Subject"** %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.angle::Subject"*, %"class.angle::Subject"** %2, i64 16
  %18 = bitcast %"class.angle::Subject"** %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast %"class.angle::Subject"** %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N3egl13PixmapSurfaceD0Ev(%"class.egl::PixmapSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.egl::PixmapSurface", %"class.egl::PixmapSurface"* %0, i64 -1, i32 0, i32 21
  %3 = getelementptr inbounds i64, i64* %2, i64 1
  %4 = bitcast i64* %3 to %"class.gl::FramebufferAttachmentObject"*
  %5 = bitcast i64* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i64, i64* %2, i64 13
  %7 = bitcast i64* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*], [15 x i8*], [5 x i8*] }, { [18 x i8*], [15 x i8*], [5 x i8*] }* @_ZTVN3egl7SurfaceE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i64, i64* %2, i64 39
  %9 = bitcast i64* %8 to %"class.angle::ObserverBinding"*
  tail call void @_ZN5angle15ObserverBindingD1Ev(%"class.angle::ObserverBinding"* %9) #12
  %10 = getelementptr inbounds i64, i64* %2, i64 15
  %11 = bitcast i64* %10 to %"struct.egl::Config"**
  %12 = load %"struct.egl::Config"*, %"struct.egl::Config"** %11, align 8
  %13 = icmp eq %"struct.egl::Config"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  tail call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %12) #12
  %15 = bitcast %"struct.egl::Config"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds i64, i64* %2, i64 16
  %18 = bitcast i64* %17 to %"class.egl::AttributeMap"*
  tail call void @_ZN3egl12AttributeMapD1Ev(%"class.egl::AttributeMap"* %18) #12
  tail call void @_ZN2gl27FramebufferAttachmentObjectD2Ev(%"class.gl::FramebufferAttachmentObject"* %4) #12
  %19 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3egl14SurfaceDeleterC2EPKNS_7DisplayE(%"class.egl::SurfaceDeleter"* nocapture, %"class.egl::Display"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.egl::SurfaceDeleter", %"class.egl::SurfaceDeleter"* %0, i64 0, i32 0
  store %"class.egl::Display"* %1, %"class.egl::Display"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3egl14SurfaceDeleterD2Ev(%"class.egl::SurfaceDeleter"* nocapture) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3egl14SurfaceDeleterclEPNS_7SurfaceE(%"class.egl::SurfaceDeleter"* nocapture readonly, %"class.egl::Surface"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.egl::SurfaceDeleter", %"class.egl::SurfaceDeleter"* %0, i64 0, i32 0
  %4 = load %"class.egl::Display"*, %"class.egl::Display"** %3, align 8
  %5 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 5
  store i8 1, i8* %5, align 4, !noalias !135
  %6 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8, !noalias !135
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.egl::Surface", %"class.egl::Surface"* %1, i64 0, i32 3
  %11 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %10, align 8, !noalias !138
  %12 = icmp eq %"class.rx::SurfaceImpl"* %11, null
  br i1 %12, label %25, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.rx::SurfaceImpl"* %11 to void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)***
  %15 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)**, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*** %14, align 8, !noalias !138
  %16 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %15, i64 4
  %17 = load void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)*, void (%"class.rx::SurfaceImpl"*, %"class.egl::Display"*)** %16, align 8, !noalias !138
  tail call void %17(%"class.rx::SurfaceImpl"* nonnull %11, %"class.egl::Display"* %4) #12, !noalias !138
  %18 = load %"class.rx::SurfaceImpl"*, %"class.rx::SurfaceImpl"** %10, align 8, !noalias !138
  %19 = icmp eq %"class.rx::SurfaceImpl"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.rx::SurfaceImpl"* %18 to void (%"class.rx::SurfaceImpl"*)***
  %22 = load void (%"class.rx::SurfaceImpl"*)**, void (%"class.rx::SurfaceImpl"*)*** %21, align 8, !noalias !138
  %23 = getelementptr inbounds void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %22, i64 1
  %24 = load void (%"class.rx::SurfaceImpl"*)*, void (%"class.rx::SurfaceImpl"*)** %23, align 8, !noalias !138
  tail call void %24(%"class.rx::SurfaceImpl"* nonnull %18) #12, !noalias !138
  br label %25

25:                                               ; preds = %20, %13, %9
  store %"class.rx::SurfaceImpl"* null, %"class.rx::SurfaceImpl"** %10, align 8, !noalias !138
  %26 = icmp eq %"class.egl::Surface"* %1, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.egl::Surface"* %1 to void (%"class.egl::Surface"*)***
  %29 = load void (%"class.egl::Surface"*)**, void (%"class.egl::Surface"*)*** %28, align 8, !noalias !138
  %30 = getelementptr inbounds void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %29, i64 1
  %31 = load void (%"class.egl::Surface"*)*, void (%"class.egl::Surface"*)** %30, align 8, !noalias !138
  tail call void %31(%"class.egl::Surface"* nonnull %1) #12, !noalias !138
  br label %32

32:                                               ; preds = %27, %25, %2
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE(%"class.egl::Surface"*, %"class.gl::Context"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE(%"class.egl::Surface"*, %"class.gl::Context"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3egl7Surface8onAttachEPKN2gl7ContextEN2rx6SerialE(%"class.egl::Surface"*, %"class.gl::Context"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N3egl7Surface8onDetachEPKN2gl7ContextEN2rx6SerialE(%"class.egl::Surface"*, %"class.gl::Context"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3egl13LabeledObjectD2Ev(%"class.egl::LabeledObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3egl13LabeledObjectD0Ev(%"class.egl::LabeledObject"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare i64 @_ZN5angle13AddTraceEventEPNS_15PlatformMethodsEcPKhPKcyiPS5_S3_PKyh(%"struct.angle::PlatformMethods"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare zeroext i8 @_ZN3egl11FromEGLenumINS_13TextureFormatEEET_j(i32) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare void @_ZN3egl5ErrorC1EiiONSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.egl::Error"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12297EEcvS2_Ev: argument 0"}
!10 = distinct !{!10, !"_ZN5angle15ErrorStreamBaseIN3egl5ErrorEiLi12288EiLi12297EEcvS2_Ev"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!13 = distinct !{!13, !"_ZN3egl5Error7NoErrorEv"}
!14 = distinct !{!14, !15, !"_ZN3egl7NoErrorEv: argument 0"}
!15 = distinct !{!15, !"_ZN3egl7NoErrorEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!18 = distinct !{!18, !"_ZN3egl5Error7NoErrorEv"}
!19 = distinct !{!19, !20, !"_ZN3egl7NoErrorEv: argument 0"}
!20 = distinct !{!20, !"_ZN3egl7NoErrorEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE: argument 0"}
!23 = distinct !{!23, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!26 = distinct !{!26, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
!27 = !{!28, !30, !25, !22, !32, !34}
!28 = distinct !{!28, !29, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!29 = distinct !{!29, !"_ZN3egl5Error7NoErrorEv"}
!30 = distinct !{!30, !31, !"_ZN3egl7NoErrorEv: argument 0"}
!31 = distinct !{!31, !"_ZN3egl7NoErrorEv"}
!32 = distinct !{!32, !33, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!33 = distinct !{!33, !"_ZN3egl5Error7NoErrorEv"}
!34 = distinct !{!34, !35, !"_ZN3egl7NoErrorEv: argument 0"}
!35 = distinct !{!35, !"_ZN3egl7NoErrorEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!38 = distinct !{!38, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
!39 = !{!40, !42, !37, !44, !46}
!40 = distinct !{!40, !41, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!41 = distinct !{!41, !"_ZN3egl5Error7NoErrorEv"}
!42 = distinct !{!42, !43, !"_ZN3egl7NoErrorEv: argument 0"}
!43 = distinct !{!43, !"_ZN3egl7NoErrorEv"}
!44 = distinct !{!44, !45, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!45 = distinct !{!45, !"_ZN3egl5Error7NoErrorEv"}
!46 = distinct !{!46, !47, !"_ZN3egl7NoErrorEv: argument 0"}
!47 = distinct !{!47, !"_ZN3egl7NoErrorEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!50 = distinct !{!50, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
!51 = !{!52, !54, !49, !56, !58}
!52 = distinct !{!52, !53, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!53 = distinct !{!53, !"_ZN3egl5Error7NoErrorEv"}
!54 = distinct !{!54, !55, !"_ZN3egl7NoErrorEv: argument 0"}
!55 = distinct !{!55, !"_ZN3egl7NoErrorEv"}
!56 = distinct !{!56, !57, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!57 = distinct !{!57, !"_ZN3egl5Error7NoErrorEv"}
!58 = distinct !{!58, !59, !"_ZN3egl7NoErrorEv: argument 0"}
!59 = distinct !{!59, !"_ZN3egl7NoErrorEv"}
!60 = !{!"branch_weights", i32 1, i32 1048575}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!63 = distinct !{!63, !"_ZN3egl5Error7NoErrorEv"}
!64 = distinct !{!64, !65, !"_ZN3egl7NoErrorEv: argument 0"}
!65 = distinct !{!65, !"_ZN3egl7NoErrorEv"}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!68 = distinct !{!68, !"_ZN3egl5Error7NoErrorEv"}
!69 = distinct !{!69, !70, !"_ZN3egl7NoErrorEv: argument 0"}
!70 = distinct !{!70, !"_ZN3egl7NoErrorEv"}
!71 = !{!72, !74}
!72 = distinct !{!72, !73, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!73 = distinct !{!73, !"_ZN3egl5Error7NoErrorEv"}
!74 = distinct !{!74, !75, !"_ZN3egl7NoErrorEv: argument 0"}
!75 = distinct !{!75, !"_ZN3egl7NoErrorEv"}
!76 = !{!77, !79, !81, !83}
!77 = distinct !{!77, !78, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!78 = distinct !{!78, !"_ZN3egl5Error7NoErrorEv"}
!79 = distinct !{!79, !80, !"_ZN3egl7NoErrorEv: argument 0"}
!80 = distinct !{!80, !"_ZN3egl7NoErrorEv"}
!81 = distinct !{!81, !82, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!82 = distinct !{!82, !"_ZN3egl5Error7NoErrorEv"}
!83 = distinct !{!83, !84, !"_ZN3egl7NoErrorEv: argument 0"}
!84 = distinct !{!84, !"_ZN3egl7NoErrorEv"}
!85 = !{!81, !83, !77, !79}
!86 = !{!87, !89}
!87 = distinct !{!87, !88, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!88 = distinct !{!88, !"_ZN3egl5Error7NoErrorEv"}
!89 = distinct !{!89, !90, !"_ZN3egl7NoErrorEv: argument 0"}
!90 = distinct !{!90, !"_ZN3egl7NoErrorEv"}
!91 = !{!92, !94}
!92 = distinct !{!92, !93, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!93 = distinct !{!93, !"_ZN3egl5Error7NoErrorEv"}
!94 = distinct !{!94, !95, !"_ZN3egl7NoErrorEv: argument 0"}
!95 = distinct !{!95, !"_ZN3egl7NoErrorEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN3egl7Surface26releaseTexImageFromTextureEPKN2gl7ContextE: argument 0"}
!98 = distinct !{!98, !"_ZN3egl7Surface26releaseTexImageFromTextureEPKN2gl7ContextE"}
!99 = !{!100, !97}
!100 = distinct !{!100, !101, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE: argument 0"}
!101 = distinct !{!101, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE"}
!102 = !{!103, !100, !97}
!103 = distinct !{!103, !104, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!104 = distinct !{!104, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
!105 = !{!106, !108, !103, !100, !97}
!106 = distinct !{!106, !107, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!107 = distinct !{!107, !"_ZN3egl5Error7NoErrorEv"}
!108 = distinct !{!108, !109, !"_ZN3egl7NoErrorEv: argument 0"}
!109 = distinct !{!109, !"_ZN3egl7NoErrorEv"}
!110 = !{!111, !113, !100, !97}
!111 = distinct !{!111, !112, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!112 = distinct !{!112, !"_ZN3egl5Error7NoErrorEv"}
!113 = distinct !{!113, !114, !"_ZN3egl7NoErrorEv: argument 0"}
!114 = distinct !{!114, !"_ZN3egl7NoErrorEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE: argument 0"}
!117 = distinct !{!117, !"_ZN3egl7Surface10releaseRefEPKNS_7DisplayE"}
!118 = !{!119, !116}
!119 = distinct !{!119, !120, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!120 = distinct !{!120, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
!121 = !{!122, !124, !116, !126, !128, !119}
!122 = distinct !{!122, !123, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!123 = distinct !{!123, !"_ZN3egl5Error7NoErrorEv"}
!124 = distinct !{!124, !125, !"_ZN3egl7NoErrorEv: argument 0"}
!125 = distinct !{!125, !"_ZN3egl7NoErrorEv"}
!126 = distinct !{!126, !127, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!127 = distinct !{!127, !"_ZN3egl5Error7NoErrorEv"}
!128 = distinct !{!128, !129, !"_ZN3egl7NoErrorEv: argument 0"}
!129 = distinct !{!129, !"_ZN3egl7NoErrorEv"}
!130 = !{!131, !133}
!131 = distinct !{!131, !132, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!132 = distinct !{!132, !"_ZN3egl5Error7NoErrorEv"}
!133 = distinct !{!133, !134, !"_ZN3egl7NoErrorEv: argument 0"}
!134 = distinct !{!134, !"_ZN3egl7NoErrorEv"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN3egl7Surface9onDestroyEPKNS_7DisplayE: argument 0"}
!137 = distinct !{!137, !"_ZN3egl7Surface9onDestroyEPKNS_7DisplayE"}
!138 = !{!139, !136}
!139 = distinct !{!139, !140, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE: argument 0"}
!140 = distinct !{!140, !"_ZN3egl7Surface11destroyImplEPKNS_7DisplayE"}
