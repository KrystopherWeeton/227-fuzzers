; ModuleID = '../../third_party/boringssl/src/crypto/err/err.c'
source_filename = "../../third_party/boringssl/src/crypto/err/err.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CRYPTO_STATIC_MUTEX = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.err_state_st = type { [16 x %struct.err_error_st], i32, i32, i8* }
%struct.err_error_st = type { i8*, i8*, i32, i16, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.err_save_state_st = type { %struct.err_error_st*, i64 }

@global_next_library_mutex = internal global %struct.CRYPTO_STATIC_MUTEX zeroinitializer, align 8
@global_next_library = internal unnamed_addr global i32 34, align 4
@.str = private unnamed_addr constant [16 x i8] c"unknown library\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"OPENSSL_internal\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"unknown error\00", align 1
@ERR_error_string.buf = internal global [120 x i8] zeroinitializer, align 16
@.str.3 = private unnamed_addr constant [8 x i8] c"lib(%u)\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"reason(%u)\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"error:%08x:%s:OPENSSL_internal:%s\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"%lu:%s:%s:%d:%s\0A\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"NA\00", align 1
@kLibraryNames = internal unnamed_addr constant [34 x i8*] [i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i32 0, i32 0)], align 16
@.str.9 = private unnamed_addr constant [20 x i8] c"invalid library (0)\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"system library\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"bignum routines\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"RSA routines\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Diffie-Hellman routines\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"public key routines\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"memory buffer routines\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"object identifier routines\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"PEM routines\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"DSA routines\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"X.509 certificate routines\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"ASN.1 encoding routines\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"configuration file routines\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"common libcrypto routines\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"elliptic curve routines\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"SSL routines\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"BIO routines\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"PKCS7 routines\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"PKCS8 routines\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"X509 V3 routines\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"random number generator\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"ENGINE routines\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"OCSP routines\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"UI routines\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"COMP routines\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"ECDSA routines\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"ECDH routines\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"HMAC routines\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"Digest functions\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"Cipher functions\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"HKDF functions\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Trust Token functions\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"User defined functions\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"malloc failure\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"function should not have been called\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"passed a null parameter\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"overflow\00", align 1
@kOpenSSLReasonValues = external constant [0 x i32], align 4
@kOpenSSLReasonValuesLen = external local_unnamed_addr constant i64, align 8
@kOpenSSLReasonStringData = external constant [0 x i8], align 1
@switch.table.err_reason_error_string = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_get_error() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = bitcast i8* %10 to %struct.err_state_st*
  %12 = getelementptr inbounds i8, i8* %10, i64 388
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %10, i64 384
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %9
  %20 = add i32 %14, 1
  %21 = and i32 %20, 15
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %22
  %24 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %22, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %22, i32 1
  %27 = load i8*, i8** %26, align 8
  tail call void @OPENSSL_free(i8* %27) #9
  %28 = bitcast %struct.err_error_st* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 24, i1 false) #9
  store i32 %21, i32* %13, align 4
  br label %29

29:                                               ; preds = %3, %6, %9, %19
  %30 = phi i32 [ 0, %9 ], [ %25, %19 ], [ 0, %3 ], [ 0, %6 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @get_error_values(i32, i32, i8**, i32*, i8**, i32*) unnamed_addr #0 {
  %7 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %11 = icmp eq i8* %10, null
  br i1 %11, label %81, label %12

12:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 400, i1 false) #9
  %13 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %10, void (i8*)* nonnull @err_state_free) #9
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %81, label %15

15:                                               ; preds = %12, %6
  %16 = phi i8* [ %10, %12 ], [ %7, %6 ]
  %17 = bitcast i8* %16 to %struct.err_state_st*
  %18 = getelementptr inbounds i8, i8* %16, i64 388
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds i8, i8* %16, i64 384
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %20, %23
  br i1 %24, label %81, label %25

25:                                               ; preds = %15
  %26 = icmp eq i32 %1, 0
  %27 = add i32 %20, 1
  %28 = and i32 %27, 15
  %29 = select i1 %26, i32 %28, i32 %23
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %17, i64 0, i32 0, i64 %30
  %32 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %17, i64 0, i32 0, i64 %30, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp ne i8** %2, null
  %35 = icmp ne i32* %3, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %48

37:                                               ; preds = %25
  %38 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %31, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %2, align 8
  br label %46

42:                                               ; preds = %37
  store i8* %39, i8** %2, align 8
  %43 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %17, i64 0, i32 0, i64 %30, i32 3
  %44 = load i16, i16* %43, align 4
  %45 = zext i16 %44 to i32
  br label %46

46:                                               ; preds = %42, %41
  %47 = phi i32 [ 0, %41 ], [ %45, %42 ]
  store i32 %47, i32* %3, align 4
  br label %48

48:                                               ; preds = %46, %25
  %49 = icmp eq i8** %4, null
  br i1 %49, label %73, label %50

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %17, i64 0, i32 0, i64 %30, i32 1
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %57

54:                                               ; preds = %50
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %4, align 8
  %55 = icmp eq i32* %5, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %54
  store i32 0, i32* %5, align 4
  br label %73

57:                                               ; preds = %50
  store i8* %52, i8** %4, align 8
  %58 = icmp eq i32* %5, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  store i32 1, i32* %5, align 4
  br label %60

60:                                               ; preds = %57, %59
  %61 = icmp eq i32 %0, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %60
  %63 = load i8*, i8** %51, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %16, i64 392
  %67 = bitcast i8* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @OPENSSL_free(i8* %68) #9
  %69 = bitcast i8** %51 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast i8* %66 to i64*
  store i64 %70, i64* %71, align 8
  br label %72

72:                                               ; preds = %65, %62
  store i8* null, i8** %51, align 8
  br label %78

73:                                               ; preds = %54, %48, %56
  %74 = icmp eq i32 %0, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %17, i64 0, i32 0, i64 %30, i32 1
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i8* [ %77, %75 ], [ null, %72 ]
  tail call void @OPENSSL_free(i8* %79) #9
  %80 = bitcast %struct.err_error_st* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %80, i8 0, i64 24, i1 false) #9
  store i32 %29, i32* %19, align 4
  br label %81

81:                                               ; preds = %12, %9, %60, %78, %73, %15
  %82 = phi i32 [ 0, %15 ], [ %33, %60 ], [ %33, %73 ], [ %33, %78 ], [ 0, %9 ], [ 0, %12 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_get_error_line(i8**, i32*) local_unnamed_addr #0 {
  %3 = tail call fastcc i32 @get_error_values(i32 1, i32 0, i8** %0, i32* %1, i8** null, i32* null)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_get_error_line_data(i8**, i32*, i8**, i32*) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @get_error_values(i32 1, i32 0, i8** %0, i32* %1, i8** %2, i32* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_error() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = getelementptr inbounds i8, i8* %10, i64 388
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 384
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %9
  %19 = bitcast i8* %10 to %struct.err_state_st*
  %20 = add i32 %13, 1
  %21 = and i32 %20, 15
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %22, i32 2
  %24 = load i32, i32* %23, align 8
  br label %25

25:                                               ; preds = %3, %6, %9, %18
  %26 = phi i32 [ 0, %9 ], [ %24, %18 ], [ 0, %3 ], [ 0, %6 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_error_line(i8**, i32*) local_unnamed_addr #0 {
  %3 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 400, i1 false) #9
  %9 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %6, void (i8*)* nonnull @err_state_free) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11

11:                                               ; preds = %8, %2
  %12 = phi i8* [ %6, %8 ], [ %3, %2 ]
  %13 = bitcast i8* %12 to %struct.err_state_st*
  %14 = getelementptr inbounds i8, i8* %12, i64 388
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds i8, i8* %12, i64 384
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %16, %19
  br i1 %20, label %39, label %21

21:                                               ; preds = %11
  %22 = add i32 %16, 1
  %23 = and i32 %22, 15
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %24, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i8** %0, null
  %28 = icmp ne i32* %1, null
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %39

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %24, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %0, align 8
  store i32 0, i32* %1, align 4
  br label %39

35:                                               ; preds = %30
  store i8* %32, i8** %0, align 8
  %36 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %24, i32 3
  %37 = load i16, i16* %36, align 4
  %38 = zext i16 %37 to i32
  store i32 %38, i32* %1, align 4
  br label %39

39:                                               ; preds = %21, %34, %35, %5, %8, %11
  %40 = phi i32 [ 0, %11 ], [ 0, %5 ], [ 0, %8 ], [ %26, %35 ], [ %26, %34 ], [ %26, %21 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_error_line_data(i8**, i32*, i8**, i32*) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @get_error_values(i32 0, i32 0, i8** %0, i32* %1, i8** %2, i32* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_last_error() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = getelementptr inbounds i8, i8* %10, i64 388
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 384
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = bitcast i8* %10 to %struct.err_state_st*
  %20 = zext i32 %16 to i64
  %21 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %20, i32 2
  %22 = load i32, i32* %21, align 8
  br label %23

23:                                               ; preds = %3, %6, %9, %18
  %24 = phi i32 [ 0, %9 ], [ %22, %18 ], [ 0, %3 ], [ 0, %6 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_last_error_line(i8**, i32*) local_unnamed_addr #0 {
  %3 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %37, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 0, i64 400, i1 false) #9
  %9 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %6, void (i8*)* nonnull @err_state_free) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %8, %2
  %12 = phi i8* [ %6, %8 ], [ %3, %2 ]
  %13 = bitcast i8* %12 to %struct.err_state_st*
  %14 = getelementptr inbounds i8, i8* %12, i64 388
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds i8, i8* %12, i64 384
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %16, %19
  br i1 %20, label %37, label %21

21:                                               ; preds = %11
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %22, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i8** %0, null
  %26 = icmp ne i32* %1, null
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %22, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8** %0, align 8
  store i32 0, i32* %1, align 4
  br label %37

33:                                               ; preds = %28
  store i8* %30, i8** %0, align 8
  %34 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %13, i64 0, i32 0, i64 %22, i32 3
  %35 = load i16, i16* %34, align 4
  %36 = zext i16 %35 to i32
  store i32 %36, i32* %1, align 4
  br label %37

37:                                               ; preds = %21, %32, %33, %5, %8, %11
  %38 = phi i32 [ 0, %11 ], [ 0, %5 ], [ 0, %8 ], [ %24, %33 ], [ %24, %32 ], [ %24, %21 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_peek_last_error_line_data(i8**, i32*, i8**, i32*) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @get_error_values(i32 0, i32 1, i8** %0, i32* %1, i8** %2, i32* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_clear_error() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %78, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @OPENSSL_free(i8* %13) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds i8, i8* %10, i64 24
  %15 = getelementptr inbounds i8, i8* %10, i64 32
  %16 = bitcast i8* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @OPENSSL_free(i8* %17) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds i8, i8* %10, i64 48
  %19 = getelementptr inbounds i8, i8* %10, i64 56
  %20 = bitcast i8* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @OPENSSL_free(i8* %21) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 24, i1 false) #9
  %22 = getelementptr inbounds i8, i8* %10, i64 72
  %23 = getelementptr inbounds i8, i8* %10, i64 80
  %24 = bitcast i8* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @OPENSSL_free(i8* %25) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 0, i64 24, i1 false) #9
  %26 = getelementptr inbounds i8, i8* %10, i64 96
  %27 = getelementptr inbounds i8, i8* %10, i64 104
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @OPENSSL_free(i8* %29) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 24, i1 false) #9
  %30 = getelementptr inbounds i8, i8* %10, i64 120
  %31 = getelementptr inbounds i8, i8* %10, i64 128
  %32 = bitcast i8* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @OPENSSL_free(i8* %33) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 0, i64 24, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %10, i64 144
  %35 = getelementptr inbounds i8, i8* %10, i64 152
  %36 = bitcast i8* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @OPENSSL_free(i8* %37) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 24, i1 false) #9
  %38 = getelementptr inbounds i8, i8* %10, i64 168
  %39 = getelementptr inbounds i8, i8* %10, i64 176
  %40 = bitcast i8* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @OPENSSL_free(i8* %41) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds i8, i8* %10, i64 192
  %43 = getelementptr inbounds i8, i8* %10, i64 200
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @OPENSSL_free(i8* %45) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 24, i1 false) #9
  %46 = getelementptr inbounds i8, i8* %10, i64 216
  %47 = getelementptr inbounds i8, i8* %10, i64 224
  %48 = bitcast i8* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  tail call void @OPENSSL_free(i8* %49) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 24, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %10, i64 240
  %51 = getelementptr inbounds i8, i8* %10, i64 248
  %52 = bitcast i8* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  tail call void @OPENSSL_free(i8* %53) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 24, i1 false) #9
  %54 = getelementptr inbounds i8, i8* %10, i64 264
  %55 = getelementptr inbounds i8, i8* %10, i64 272
  %56 = bitcast i8* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @OPENSSL_free(i8* %57) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 24, i1 false) #9
  %58 = getelementptr inbounds i8, i8* %10, i64 288
  %59 = getelementptr inbounds i8, i8* %10, i64 296
  %60 = bitcast i8* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @OPENSSL_free(i8* %61) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 24, i1 false) #9
  %62 = getelementptr inbounds i8, i8* %10, i64 312
  %63 = getelementptr inbounds i8, i8* %10, i64 320
  %64 = bitcast i8* %63 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @OPENSSL_free(i8* %65) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %62, i8 0, i64 24, i1 false) #9
  %66 = getelementptr inbounds i8, i8* %10, i64 336
  %67 = getelementptr inbounds i8, i8* %10, i64 344
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @OPENSSL_free(i8* %69) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 0, i64 24, i1 false) #9
  %70 = getelementptr inbounds i8, i8* %10, i64 360
  %71 = getelementptr inbounds i8, i8* %10, i64 368
  %72 = bitcast i8* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @OPENSSL_free(i8* %73) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %70, i8 0, i64 24, i1 false) #9
  %74 = getelementptr inbounds i8, i8* %10, i64 392
  %75 = bitcast i8* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @OPENSSL_free(i8* %76) #9
  %77 = getelementptr inbounds i8, i8* %10, i64 384
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false)
  br label %78

78:                                               ; preds = %6, %3, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_remove_thread_state(i32* readnone) local_unnamed_addr #0 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  tail call void @ERR_clear_error()
  br label %4

4:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_get_next_error_library() local_unnamed_addr #0 {
  tail call void @CRYPTO_STATIC_MUTEX_lock_write(%struct.CRYPTO_STATIC_MUTEX* nonnull @global_next_library_mutex) #9
  %1 = load i32, i32* @global_next_library, align 4
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @global_next_library, align 4
  tail call void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX* nonnull @global_next_library_mutex) #9
  ret i32 %1
}

declare void @CRYPTO_STATIC_MUTEX_lock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #2

declare void @CRYPTO_STATIC_MUTEX_unlock_write(%struct.CRYPTO_STATIC_MUTEX*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_remove_state(i64) local_unnamed_addr #0 {
  tail call void @ERR_clear_error()
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define hidden void @ERR_clear_system_error() local_unnamed_addr #3 {
  %1 = tail call i32* @__errno_location() #12
  store i32 0, i32* %1, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @ERR_lib_error_string(i32) local_unnamed_addr #5 {
  %2 = icmp ugt i32 %0, 570425343
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = lshr i32 %0, 24
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [34 x i8*], [34 x i8*]* @kLibraryNames, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i8* [ %7, %3 ], [ null, %1 ]
  %10 = icmp eq i8* %9, null
  %11 = select i1 %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %9
  ret i8* %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @ERR_func_error_string(i32) local_unnamed_addr #5 {
  ret i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ERR_reason_error_string(i32) local_unnamed_addr #0 {
  %2 = tail call fastcc i8* @err_reason_error_string(i32 %0)
  %3 = icmp eq i8* %2, null
  %4 = select i1 %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* %2
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @err_reason_error_string(i32) unnamed_addr #0 {
  %2 = lshr i32 %0, 24
  %3 = and i32 %0, 4095
  %4 = icmp eq i32 %2, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = icmp ult i32 %3, 127
  br i1 %6, label %7, label %59

7:                                                ; preds = %5
  %8 = tail call i8* @strerror(i32 %3) #9
  br label %59

9:                                                ; preds = %1
  %10 = icmp ult i32 %3, 34
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = zext i32 %3 to i64
  %13 = getelementptr inbounds [34 x i8*], [34 x i8*]* @kLibraryNames, i64 0, i64 %12
  %14 = load i8*, i8** %13, align 8
  br label %59

15:                                               ; preds = %9
  %16 = icmp ult i32 %3, 100
  br i1 %16, label %17, label %20

17:                                               ; preds = %15
  %18 = add nsw i32 %3, -65
  %19 = icmp ult i32 %18, 5
  br i1 %19, label %55, label %59

20:                                               ; preds = %15
  %21 = load i64, i64* @kOpenSSLReasonValuesLen, align 8
  %22 = icmp ugt i32 %0, 1073741823
  %23 = icmp ugt i32 %3, 2047
  %24 = or i1 %22, %23
  %25 = icmp eq i64 %21, 0
  %26 = or i1 %24, %25
  br i1 %26, label %59, label %27

27:                                               ; preds = %20
  %28 = shl nuw nsw i32 %3, 15
  %29 = shl i32 %2, 26
  %30 = or i32 %28, %29
  %31 = lshr exact i32 %30, 15
  br label %32

32:                                               ; preds = %45, %27
  %33 = phi i64 [ %47, %45 ], [ %21, %27 ]
  %34 = phi i64 [ %46, %45 ], [ 0, %27 ]
  %35 = add i64 %34, %33
  %36 = lshr i64 %35, 1
  %37 = getelementptr [0 x i32], [0 x i32]* @kOpenSSLReasonValues, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = lshr i32 %38, 15
  %40 = icmp ult i32 %31, %39
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = icmp ugt i32 %31, %39
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = add nuw i64 %36, 1
  br label %45

45:                                               ; preds = %43, %32
  %46 = phi i64 [ %44, %43 ], [ %34, %32 ]
  %47 = phi i64 [ %33, %43 ], [ %36, %32 ]
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %32, label %59

49:                                               ; preds = %41
  %50 = icmp eq i32* %37, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = and i32 %38, 32767
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [0 x i8], [0 x i8]* @kOpenSSLReasonStringData, i64 0, i64 %53
  br label %59

55:                                               ; preds = %17
  %56 = sext i32 %18 to i64
  %57 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.err_reason_error_string, i64 0, i64 %56
  %58 = load i8*, i8** %57, align 8
  ret i8* %58

59:                                               ; preds = %45, %17, %51, %49, %20, %5, %11, %7
  %60 = phi i8* [ %8, %7 ], [ %14, %11 ], [ null, %5 ], [ null, %20 ], [ %54, %51 ], [ null, %49 ], [ null, %17 ], [ null, %45 ]
  ret i8* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ERR_error_string(i32, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  %4 = select i1 %3, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @ERR_error_string.buf, i64 0, i64 0), i8* %1
  %5 = tail call i8* @ERR_error_string_n(i32 %0, i8* %4, i64 120)
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ERR_error_string_n(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca [64 x i8], align 16
  %5 = alloca [64 x i8], align 16
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %3
  %8 = and i32 %0, 4095
  %9 = icmp ugt i32 %0, 570425343
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = lshr i32 %0, 24
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [34 x i8*], [34 x i8*]* @kLibraryNames, i64 0, i64 %12
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %7, %10
  %16 = phi i8* [ %14, %10 ], [ null, %7 ]
  %17 = tail call fastcc i8* @err_reason_error_string(i32 %0)
  %18 = getelementptr inbounds [64 x i8], [64 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 64, i1 false)
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -86, i64 64, i1 false)
  %20 = icmp eq i8* %16, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = lshr i32 %0, 24
  %23 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %18, i64 64, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i32 %22) #9
  br label %24

24:                                               ; preds = %21, %15
  %25 = phi i8* [ %18, %21 ], [ %16, %15 ]
  %26 = icmp eq i8* %17, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %19, i64 64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i32 %8) #9
  br label %29

29:                                               ; preds = %27, %24
  %30 = phi i8* [ %19, %27 ], [ %17, %24 ]
  %31 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* %1, i64 %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 %0, i8* %25, i8* %30) #9
  %32 = call i64 @strlen(i8* %1) #13
  %33 = add i64 %2, -1
  %34 = icmp ne i64 %32, %33
  %35 = icmp ult i64 %2, 5
  %36 = or i1 %35, %34
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds i8, i8* %1, i64 %32
  %39 = getelementptr inbounds i8, i8* %38, i64 -4
  %40 = call i8* @strchr(i8* %1, i32 58) #13
  %41 = icmp eq i8* %40, null
  %42 = icmp ugt i8* %40, %39
  %43 = or i1 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37, %47, %57, %64
  %45 = phi i64 [ 4, %37 ], [ 3, %47 ], [ 2, %57 ], [ 1, %64 ]
  %46 = phi i8* [ %39, %37 ], [ %50, %47 ], [ %60, %57 ], [ %67, %64 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 58, i64 %45, i1 false) #9
  br label %54

47:                                               ; preds = %37
  %48 = getelementptr inbounds i8, i8* %40, i64 1
  %49 = call i8* @strchr(i8* %48, i32 58) #13
  %50 = getelementptr inbounds i8, i8* %39, i64 1
  %51 = icmp eq i8* %49, null
  %52 = icmp ugt i8* %49, %50
  %53 = or i1 %51, %52
  br i1 %53, label %44, label %57

54:                                               ; preds = %64, %44, %29
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #9
  br label %55

55:                                               ; preds = %3, %54
  %56 = phi i8* [ %1, %54 ], [ null, %3 ]
  ret i8* %56

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %49, i64 1
  %59 = call i8* @strchr(i8* %58, i32 58) #13
  %60 = getelementptr inbounds i8, i8* %39, i64 2
  %61 = icmp eq i8* %59, null
  %62 = icmp ugt i8* %59, %60
  %63 = or i1 %61, %62
  br i1 %63, label %44, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds i8, i8* %59, i64 1
  %66 = call i8* @strchr(i8* %65, i32 58) #13
  %67 = getelementptr inbounds i8, i8* %39, i64 3
  %68 = icmp eq i8* %66, null
  %69 = icmp ugt i8* %66, %67
  %70 = or i1 %68, %69
  br i1 %70, label %44, label %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_print_errors_cb(i32 (i8*, i64, i8*)* nocapture, i8*) local_unnamed_addr #0 {
  %3 = alloca [120 x i8], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds [120 x i8], [120 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 120, i1 false)
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %10) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 1024, i1 false)
  %11 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %12 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  store i32 -1431655766, i32* %7, align 4
  %14 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 -1431655766, i32* %8, align 4
  %15 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %19 = icmp eq i8* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 0, i64 400, i1 false) #9
  %21 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %18, void (i8*)* nonnull @err_state_free) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %20, %2
  %24 = phi i8* [ %18, %20 ], [ %15, %2 ]
  %25 = ptrtoint i8* %24 to i64
  br label %26

26:                                               ; preds = %17, %20, %23
  %27 = phi i64 [ %25, %23 ], [ 0, %17 ], [ 0, %20 ]
  br label %28

28:                                               ; preds = %31, %26
  %29 = call fastcc i32 @get_error_values(i32 1, i32 0, i8** nonnull %5, i32* nonnull %7, i8** nonnull %6, i32* nonnull %8) #9
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = call i8* @ERR_error_string_n(i32 %29, i8* nonnull %9, i64 120)
  %33 = load i8*, i8** %5, align 8
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* %8, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = load i8*, i8** %6, align 8
  %39 = select i1 %37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8* %38
  %40 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %10, i64 1024, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i64 %27, i8* nonnull %9, i8* %33, i32 %34, i8* %39) #9
  %41 = call i64 @strlen(i8* nonnull %10) #13
  %42 = call i32 %0(i8* nonnull %10, i64 %41, i8* %1) #9
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %28

44:                                               ; preds = %31, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_print_errors_fp(%struct._IO_FILE*) local_unnamed_addr #0 {
  %2 = bitcast %struct._IO_FILE* %0 to i8*
  tail call void @ERR_print_errors_cb(i32 (i8*, i64, i8*)* nonnull @print_errors_to_file, i8* %2)
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @print_errors_to_file(i8* nocapture readonly, i64, i8* nocapture) #8 {
  %4 = bitcast i8* %2 to %struct._IO_FILE*
  %5 = tail call i32 @fputs(i8* %0, %struct._IO_FILE* %4)
  %6 = lshr i32 %5, 31
  %7 = xor i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %50, label %11

11:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %9, i8 0, i64 400, i1 false) #9
  %12 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %9, void (i8*)* nonnull @err_state_free) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %50, label %14

14:                                               ; preds = %11, %5
  %15 = phi i8* [ %9, %11 ], [ %6, %5 ]
  %16 = bitcast i8* %15 to %struct.err_state_st*
  %17 = icmp eq i32 %0, 2
  %18 = icmp eq i32 %2, 0
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = tail call i32* @__errno_location() #12
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %20, %14
  %24 = phi i32 [ %22, %20 ], [ %2, %14 ]
  %25 = getelementptr inbounds i8, i8* %15, i64 384
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, 1
  %29 = and i32 %28, 15
  store i32 %29, i32* %26, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 388
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %29, %32
  br i1 %33, label %34, label %37

34:                                               ; preds = %23
  %35 = add i32 %27, 2
  %36 = and i32 %35, 15
  store i32 %36, i32* %31, align 4
  br label %37

37:                                               ; preds = %34, %23
  %38 = zext i32 %29 to i64
  %39 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %16, i64 0, i32 0, i64 %38, i32 1
  %40 = load i8*, i8** %39, align 8
  tail call void @OPENSSL_free(i8* %40) #9
  %41 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %16, i64 0, i32 0, i64 %38, i32 1
  %42 = bitcast i8** %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 16, i1 false) #9
  %43 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %16, i64 0, i32 0, i64 %38, i32 0
  store i8* %3, i8** %43, align 8
  %44 = trunc i32 %4 to i16
  %45 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %16, i64 0, i32 0, i64 %38, i32 3
  store i16 %44, i16* %45, align 4
  %46 = shl i32 %0, 24
  %47 = and i32 %24, 4095
  %48 = or i32 %47, %46
  %49 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %16, i64 0, i32 0, i64 %38, i32 2
  store i32 %48, i32* %49, align 8
  br label %50

50:                                               ; preds = %11, %8, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_add_error_data(i32, ...) local_unnamed_addr #0 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 0
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 2
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0, i32 3
  %7 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %3)
  %8 = call i8* @OPENSSL_malloc(i64 81) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %84, label %10

10:                                               ; preds = %1
  %11 = icmp eq i32 %0, 0
  br i1 %11, label %57, label %12

12:                                               ; preds = %10, %51
  %13 = phi i32 [ %55, %51 ], [ 0, %10 ]
  %14 = phi i8* [ %54, %51 ], [ %8, %10 ]
  %15 = phi i64 [ %53, %51 ], [ 0, %10 ]
  %16 = phi i64 [ %52, %51 ], [ 80, %10 ]
  %17 = load i32, i32* %4, align 16
  %18 = icmp ult i32 %17, 41
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = load i8*, i8** %6, align 16
  %21 = sext i32 %17 to i64
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = add nuw nsw i32 %17, 8
  store i32 %23, i32* %4, align 16
  br label %27

24:                                               ; preds = %12
  %25 = load i8*, i8** %5, align 8
  %26 = getelementptr i8, i8* %25, i64 8
  store i8* %26, i8** %5, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi i8* [ %22, %19 ], [ %25, %24 ]
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = call i64 @strlen(i8* nonnull %30) #13
  %34 = add i64 %33, %15
  %35 = icmp ugt i64 %34, %16
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = icmp ugt i64 %16, -22
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  call void @OPENSSL_free(i8* %14) #9
  br label %84

39:                                               ; preds = %36
  %40 = add i64 %34, 20
  %41 = add i64 %34, 21
  %42 = call i8* @OPENSSL_realloc(i8* %14, i64 %41) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  call void @OPENSSL_free(i8* %14) #9
  br label %84

45:                                               ; preds = %39, %32
  %46 = phi i64 [ %16, %32 ], [ %40, %39 ]
  %47 = phi i8* [ %14, %32 ], [ %42, %39 ]
  %48 = icmp eq i64 %33, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %47, i64 %15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %30, i64 %33, i1 false) #9
  br label %51

51:                                               ; preds = %49, %45, %27
  %52 = phi i64 [ %16, %27 ], [ %46, %45 ], [ %46, %49 ]
  %53 = phi i64 [ %15, %27 ], [ %34, %45 ], [ %34, %49 ]
  %54 = phi i8* [ %14, %27 ], [ %47, %45 ], [ %47, %49 ]
  %55 = add nuw i32 %13, 1
  %56 = icmp eq i32 %55, %0
  br i1 %56, label %57, label %12

57:                                               ; preds = %51, %10
  %58 = phi i64 [ 0, %10 ], [ %53, %51 ]
  %59 = phi i8* [ %8, %10 ], [ %54, %51 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %58
  store i8 0, i8* %60, align 1
  %61 = call i8* @CRYPTO_get_thread_local(i32 0) #9
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %57
  %64 = call i8* @OPENSSL_malloc(i64 400) #9
  %65 = icmp eq i8* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %63
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %64, i8 0, i64 400, i1 false) #9
  %67 = call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %64, void (i8*)* nonnull @err_state_free) #9
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %66, %57
  %70 = phi i8* [ %64, %66 ], [ %61, %57 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 384
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds i8, i8* %70, i64 388
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %73, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %69, %66, %63
  call void @OPENSSL_free(i8* %59) #9
  br label %84

79:                                               ; preds = %69
  %80 = bitcast i8* %70 to %struct.err_state_st*
  %81 = zext i32 %73 to i64
  %82 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %80, i64 0, i32 0, i64 %81, i32 1
  %83 = load i8*, i8** %82, align 8
  call void @OPENSSL_free(i8* %83) #9
  store i8* %59, i8** %82, align 8
  br label %84

84:                                               ; preds = %1, %38, %44, %78, %79
  call void @llvm.va_end(i8* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #0 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #9
  %4 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 24, i1 false)
  %5 = tail call i8* @OPENSSL_malloc(i64 257) #9
  %6 = icmp eq i8* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %3)
  %9 = call i32 @BIO_vsnprintf(i8* nonnull %5, i64 256, i8* %0, %struct.__va_list_tag* nonnull %8) #9
  %10 = getelementptr inbounds i8, i8* %5, i64 256
  store i8 0, i8* %10, align 1
  call void @llvm.va_end(i8* nonnull %3)
  %11 = call i8* @CRYPTO_get_thread_local(i32 0) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = call i8* @OPENSSL_malloc(i64 400) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 0, i64 400, i1 false) #9
  %17 = call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %14, void (i8*)* nonnull @err_state_free) #9
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %14, %16 ], [ %11, %7 ]
  %21 = getelementptr inbounds i8, i8* %20, i64 384
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds i8, i8* %20, i64 388
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %23, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %16, %13, %19
  call void @OPENSSL_free(i8* nonnull %5) #9
  br label %34

29:                                               ; preds = %19
  %30 = bitcast i8* %20 to %struct.err_state_st*
  %31 = zext i32 %23 to i64
  %32 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %30, i64 0, i32 0, i64 %31, i32 1
  %33 = load i8*, i8** %32, align 8
  call void @OPENSSL_free(i8* %33) #9
  store i8* %5, i8** %32, align 8
  br label %34

34:                                               ; preds = %29, %28, %1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #9
  ret void
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare i32 @BIO_vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_set_mark() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = getelementptr inbounds i8, i8* %10, i64 388
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 384
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %9
  %19 = bitcast i8* %10 to %struct.err_state_st*
  %20 = zext i32 %16 to i64
  %21 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %20, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = or i8 %22, 1
  store i8 %23, i8* %21, align 2
  br label %24

24:                                               ; preds = %6, %3, %9, %18
  %25 = phi i32 [ 1, %18 ], [ 0, %9 ], [ 0, %3 ], [ 0, %6 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ERR_pop_to_mark() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %39, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = bitcast i8* %10 to %struct.err_state_st*
  %12 = getelementptr inbounds i8, i8* %10, i64 388
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i8, i8* %10, i64 384
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %39, label %19

19:                                               ; preds = %9, %28
  %20 = phi i32 [ %36, %28 ], [ %17, %9 ]
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %21, i32 4
  %23 = load i8, i8* %22, align 2
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = and i8 %23, -2
  store i8 %27, i8* %22, align 2
  br label %39

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %21
  %30 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %21, i32 1
  %31 = load i8*, i8** %30, align 8
  tail call void @OPENSSL_free(i8* %31) #9
  %32 = bitcast %struct.err_error_st* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %32, i8 0, i64 24, i1 false) #9
  %33 = load i32, i32* %16, align 8
  %34 = icmp eq i32 %33, 0
  %35 = add i32 %33, -1
  %36 = select i1 %34, i32 15, i32 %35
  store i32 %36, i32* %16, align 8
  %37 = load i32, i32* %13, align 4
  %38 = icmp eq i32 %37, %36
  br i1 %38, label %39, label %19

39:                                               ; preds = %28, %9, %6, %3, %26
  %40 = phi i32 [ 1, %26 ], [ 0, %3 ], [ 0, %6 ], [ 0, %9 ], [ 0, %28 ]
  ret i32 %40
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_load_crypto_strings() local_unnamed_addr #5 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_free_strings() local_unnamed_addr #5 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_load_BIO_strings() local_unnamed_addr #5 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_load_ERR_strings() local_unnamed_addr #5 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @ERR_load_RAND_strings() local_unnamed_addr #5 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_SAVE_STATE_free(%struct.err_save_state_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.err_save_state_st* %0, null
  br i1 %2, label %23, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.err_save_state_st, %struct.err_save_state_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.err_save_state_st, %struct.err_save_state_st* %0, i64 0, i32 0
  br label %13

9:                                                ; preds = %13, %3
  %10 = bitcast %struct.err_save_state_st* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @OPENSSL_free(i8* %11) #9
  %12 = bitcast %struct.err_save_state_st* %0 to i8*
  tail call void @OPENSSL_free(i8* nonnull %12) #9
  br label %23

13:                                               ; preds = %7, %13
  %14 = phi i64 [ 0, %7 ], [ %20, %13 ]
  %15 = load %struct.err_error_st*, %struct.err_error_st** %8, align 8
  %16 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %15, i64 %14
  %17 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %15, i64 %14, i32 1
  %18 = load i8*, i8** %17, align 8
  tail call void @OPENSSL_free(i8* %18) #9
  %19 = bitcast %struct.err_error_st* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 24, i1 false) #9
  %20 = add nuw i64 %14, 1
  %21 = load i64, i64* %4, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %13, label %9

23:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.err_save_state_st* @ERR_save_state() local_unnamed_addr #0 {
  %1 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

3:                                                ; preds = %0
  %4 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %74, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 0, i64 400, i1 false) #9
  %7 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %4, void (i8*)* nonnull @err_state_free) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %74, label %9

9:                                                ; preds = %6, %0
  %10 = phi i8* [ %4, %6 ], [ %1, %0 ]
  %11 = bitcast i8* %10 to %struct.err_state_st*
  %12 = getelementptr inbounds i8, i8* %10, i64 384
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 388
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %74, label %19

19:                                               ; preds = %9
  %20 = tail call i8* @OPENSSL_malloc(i64 16) #9
  %21 = bitcast i8* %20 to %struct.err_save_state_st*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %74, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* %13, align 8
  %25 = load i32, i32* %16, align 4
  %26 = icmp ult i32 %24, %25
  %27 = add i32 %24, 16
  %28 = select i1 %26, i32 %27, i32 %24
  %29 = sub i32 %28, %25
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 24
  %32 = tail call i8* @OPENSSL_malloc(i64 %31) #9
  %33 = bitcast i8* %20 to %struct.err_error_st**
  %34 = bitcast i8* %20 to i8**
  store i8* %32, i8** %34, align 8
  %35 = icmp eq i8* %32, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %23
  tail call void @OPENSSL_free(i8* nonnull %20) #9
  br label %74

37:                                               ; preds = %23
  %38 = icmp eq i32 %29, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %37
  %40 = getelementptr inbounds i8, i8* %20, i64 8
  %41 = bitcast i8* %40 to i64*
  store i64 %30, i64* %41, align 8
  br label %74

42:                                               ; preds = %37
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %32, i8 0, i64 %31, i1 false) #9
  %43 = getelementptr inbounds i8, i8* %20, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %30, i64* %44, align 8
  br label %45

45:                                               ; preds = %66, %42
  %46 = phi i64 [ %49, %66 ], [ 0, %42 ]
  %47 = load i32, i32* %16, align 4
  %48 = zext i32 %47 to i64
  %49 = add nuw nsw i64 %46, 1
  %50 = add nuw i64 %49, %48
  %51 = and i64 %50, 15
  %52 = load %struct.err_error_st*, %struct.err_error_st** %33, align 8
  %53 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %52, i64 %46
  %54 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %51
  %55 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %52, i64 %46, i32 1
  %56 = load i8*, i8** %55, align 8
  tail call void @OPENSSL_free(i8* %56) #9
  %57 = bitcast %struct.err_error_st* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 24, i1 false) #9
  %58 = bitcast %struct.err_error_st* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %struct.err_error_st* %53 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %51, i32 1
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %45
  %65 = tail call i8* @OPENSSL_strdup(i8* nonnull %62) #9
  store i8* %65, i8** %55, align 8
  br label %66

66:                                               ; preds = %45, %64
  %67 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %51, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %52, i64 %46, i32 2
  store i32 %68, i32* %69, align 8
  %70 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %11, i64 0, i32 0, i64 %51, i32 3
  %71 = load i16, i16* %70, align 4
  %72 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %52, i64 %46, i32 3
  store i16 %71, i16* %72, align 4
  %73 = icmp eq i64 %49, %30
  br i1 %73, label %74, label %45

74:                                               ; preds = %66, %39, %6, %3, %19, %36, %9
  %75 = phi %struct.err_save_state_st* [ null, %9 ], [ null, %19 ], [ null, %36 ], [ null, %3 ], [ null, %6 ], [ %21, %39 ], [ %21, %66 ]
  ret %struct.err_save_state_st* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ERR_restore_state(%struct.err_save_state_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.err_save_state_st* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.err_save_state_st, %struct.err_save_state_st* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3, %1
  tail call void @ERR_clear_error()
  br label %59

8:                                                ; preds = %3
  %9 = tail call i8* @CRYPTO_get_thread_local(i32 0) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %8
  %12 = tail call i8* @OPENSSL_malloc(i64 400) #9
  %13 = icmp eq i8* %12, null
  br i1 %13, label %59, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 400, i1 false) #9
  %15 = tail call i32 @CRYPTO_set_thread_local(i32 0, i8* nonnull %12, void (i8*)* nonnull @err_state_free) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %59, label %17

17:                                               ; preds = %14, %8
  %18 = phi i8* [ %12, %14 ], [ %9, %8 ]
  %19 = bitcast i8* %18 to %struct.err_state_st*
  %20 = load i64, i64* %4, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.err_save_state_st, %struct.err_save_state_st* %0, i64 0, i32 0
  br label %33

24:                                               ; preds = %49
  %25 = trunc i64 %57 to i32
  %26 = add i32 %25, -1
  br label %27

27:                                               ; preds = %24, %17
  %28 = phi i32 [ -1, %17 ], [ %26, %24 ]
  %29 = getelementptr inbounds i8, i8* %18, i64 384
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 8
  %31 = getelementptr inbounds i8, i8* %18, i64 388
  %32 = bitcast i8* %31 to i32*
  store i32 15, i32* %32, align 4
  br label %59

33:                                               ; preds = %22, %49
  %34 = phi i64 [ 0, %22 ], [ %56, %49 ]
  %35 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %34
  %36 = load %struct.err_error_st*, %struct.err_error_st** %23, align 8
  %37 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %36, i64 %34
  %38 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %34, i32 1
  %39 = load i8*, i8** %38, align 8
  tail call void @OPENSSL_free(i8* %39) #9
  %40 = bitcast %struct.err_error_st* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 24, i1 false) #9
  %41 = bitcast %struct.err_error_st* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.err_error_st* %35 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %36, i64 %34, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %33
  %48 = tail call i8* @OPENSSL_strdup(i8* nonnull %45) #9
  store i8* %48, i8** %38, align 8
  br label %49

49:                                               ; preds = %33, %47
  %50 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %36, i64 %34, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %34, i32 2
  store i32 %51, i32* %52, align 8
  %53 = getelementptr inbounds %struct.err_error_st, %struct.err_error_st* %36, i64 %34, i32 3
  %54 = load i16, i16* %53, align 4
  %55 = getelementptr inbounds %struct.err_state_st, %struct.err_state_st* %19, i64 0, i32 0, i64 %34, i32 3
  store i16 %54, i16* %55, align 4
  %56 = add nuw i64 %34, 1
  %57 = load i64, i64* %4, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %33, label %24

59:                                               ; preds = %14, %11, %27, %7
  ret void
}

declare i8* @CRYPTO_get_thread_local(i32) local_unnamed_addr #2

declare i32 @CRYPTO_set_thread_local(i32, i8*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @err_state_free(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %70, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @OPENSSL_free(i8* %6) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 24, i1 false) #9
  %7 = getelementptr inbounds i8, i8* %0, i64 24
  %8 = getelementptr inbounds i8, i8* %0, i64 32
  %9 = bitcast i8* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @OPENSSL_free(i8* %10) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 24, i1 false) #9
  %11 = getelementptr inbounds i8, i8* %0, i64 48
  %12 = getelementptr inbounds i8, i8* %0, i64 56
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @OPENSSL_free(i8* %14) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 24, i1 false) #9
  %15 = getelementptr inbounds i8, i8* %0, i64 72
  %16 = getelementptr inbounds i8, i8* %0, i64 80
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @OPENSSL_free(i8* %18) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 24, i1 false) #9
  %19 = getelementptr inbounds i8, i8* %0, i64 96
  %20 = getelementptr inbounds i8, i8* %0, i64 104
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @OPENSSL_free(i8* %22) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 24, i1 false) #9
  %23 = getelementptr inbounds i8, i8* %0, i64 120
  %24 = getelementptr inbounds i8, i8* %0, i64 128
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @OPENSSL_free(i8* %26) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 24, i1 false) #9
  %27 = getelementptr inbounds i8, i8* %0, i64 144
  %28 = getelementptr inbounds i8, i8* %0, i64 152
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @OPENSSL_free(i8* %30) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 0, i64 24, i1 false) #9
  %31 = getelementptr inbounds i8, i8* %0, i64 168
  %32 = getelementptr inbounds i8, i8* %0, i64 176
  %33 = bitcast i8* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @OPENSSL_free(i8* %34) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 0, i64 24, i1 false) #9
  %35 = getelementptr inbounds i8, i8* %0, i64 192
  %36 = getelementptr inbounds i8, i8* %0, i64 200
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @OPENSSL_free(i8* %38) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 24, i1 false) #9
  %39 = getelementptr inbounds i8, i8* %0, i64 216
  %40 = getelementptr inbounds i8, i8* %0, i64 224
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @OPENSSL_free(i8* %42) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 0, i64 24, i1 false) #9
  %43 = getelementptr inbounds i8, i8* %0, i64 240
  %44 = getelementptr inbounds i8, i8* %0, i64 248
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @OPENSSL_free(i8* %46) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 24, i1 false) #9
  %47 = getelementptr inbounds i8, i8* %0, i64 264
  %48 = getelementptr inbounds i8, i8* %0, i64 272
  %49 = bitcast i8* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  tail call void @OPENSSL_free(i8* %50) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 24, i1 false) #9
  %51 = getelementptr inbounds i8, i8* %0, i64 288
  %52 = getelementptr inbounds i8, i8* %0, i64 296
  %53 = bitcast i8* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @OPENSSL_free(i8* %54) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 24, i1 false) #9
  %55 = getelementptr inbounds i8, i8* %0, i64 312
  %56 = getelementptr inbounds i8, i8* %0, i64 320
  %57 = bitcast i8* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @OPENSSL_free(i8* %58) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 24, i1 false) #9
  %59 = getelementptr inbounds i8, i8* %0, i64 336
  %60 = getelementptr inbounds i8, i8* %0, i64 344
  %61 = bitcast i8* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  tail call void @OPENSSL_free(i8* %62) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 24, i1 false) #9
  %63 = getelementptr inbounds i8, i8* %0, i64 360
  %64 = getelementptr inbounds i8, i8* %0, i64 368
  %65 = bitcast i8* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @OPENSSL_free(i8* %66) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 24, i1 false) #9
  %67 = getelementptr inbounds i8, i8* %0, i64 392
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @OPENSSL_free(i8* %69) #9
  tail call void @OPENSSL_free(i8* nonnull %0) #9
  br label %70

70:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare i32 @fputs(i8* nocapture readonly, %struct._IO_FILE* nocapture) local_unnamed_addr #11

declare i8* @OPENSSL_realloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @OPENSSL_strdup(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
