; ModuleID = '../../third_party/skia/src/gpu/GrShaderVar.cpp'
source_filename = "../../third_party/skia/src/gpu/GrShaderVar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>

@.str = private unnamed_addr constant [12 x i8] c"layout(%s) \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%s %s[]\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"%s %s[%d]\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"inout\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"uniform\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/gpu/GrShaderVar.cpp\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"Unknown shader variable type modifier.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* nocapture readonly, %class.GrShaderCaps* nocapture readnone, %class.SkString*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* %10) #3
  br label %11

11:                                               ; preds = %9, %3
  %12 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %13, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %18) #3
  br label %19

19:                                               ; preds = %17, %11
  %20 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 0, label %28
    i32 4, label %24
    i32 2, label %26
    i32 3, label %22
    i32 1, label %23
  ]

22:                                               ; preds = %19
  br label %26

23:                                               ; preds = %19
  br label %26

24:                                               ; preds = %19
  br label %26

25:                                               ; preds = %19
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i32 20, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0)) #4
  unreachable

26:                                               ; preds = %19, %22, %23, %24
  %27 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %24 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), %23 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), %22 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), %19 ]
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %27) #3
  br label %28

28:                                               ; preds = %19, %26
  %29 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %28
  %35 = icmp eq i32 %32, -1
  %36 = tail call i8* @_Z16GrGLSLTypeString8GrSLType(i32 %30) #3
  %37 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3, i32 0, i32 0
  %38 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %37, align 8
  %39 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %38, i64 0, i32 2
  br i1 %35, label %40, label %41

40:                                               ; preds = %34
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* %36, i8* %39) #3
  br label %48

41:                                               ; preds = %34
  %42 = load i32, i32* %31, align 8
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %36, i8* %39, i32 %42) #3
  br label %48

43:                                               ; preds = %28
  %44 = tail call i8* @_Z16GrGLSLTypeString8GrSLType(i32 %30) #3
  %45 = getelementptr inbounds %class.GrShaderVar, %class.GrShaderVar* %0, i64 0, i32 3, i32 0, i32 0
  %46 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %45, align 8
  %47 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %46, i64 0, i32 2
  tail call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* %44, i8* %47) #3
  br label %48

48:                                               ; preds = %40, %41, %43
  ret void
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

declare i8* @_Z16GrGLSLTypeString8GrSLType(i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
