; ModuleID = '../../device/fido/public_key_credential_descriptor.cc'
source_filename = "../../device/fido/public_key_credential_descriptor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.device::PublicKeyCredentialDescriptor" = type { i32, %"class.std::__1::vector", %"class.base::internal::flat_tree.22" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::internal::flat_tree.22" = type { %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i8*, i8*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.device::PublicKeyCredentialDescriptor" }
%"class.cbor::Value" = type { i32, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::pair" = type { %"class.cbor::Value", %"class.cbor::Value" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::pair"* }
%"struct.cbor::Value::Less" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<64, 8>::type", %"class.std::__1::allocator.19"* }
%"struct.std::__1::aligned_storage<64, 8>::type" = type { [64 x i8] }
%"class.std::__1::allocator.19" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::allocator.19"* }

$_ZN4base8flat_mapIN4cbor5ValueES2_NS2_4LessENSt3__16vectorINS4_4pairIS2_S2_EENS4_9allocatorIS7_EEEEEixEOS2_ = comdat any

$_ZNSt3__16vectorIN6device21FidoTransportProtocolENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNK4cbor5Value4LessclERKS0_S3_ = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4cbor5ValueES3_EENS_9allocatorIS4_EEE7emplaceIJS3_S3_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4cbor5ValueES3_EERNS_9allocatorIS4_EEE12emplace_backIJS3_S3_EEEvDpOT_ = comdat any

@_ZN6device12_GLOBAL__N_118kCredentialTypeKeyE = internal constant [5 x i8] c"type\00", align 1
@_ZN6device10kPublicKeyE = external constant [0 x i8], align 1
@_ZN6device12_GLOBAL__N_116kCredentialIdKeyE = internal constant [3 x i8] c"id\00", align 1
@.ref.tmp = private unnamed_addr constant [5 x i8] c"\00\02\01\03\04", align 1

@_ZN6device29PublicKeyCredentialDescriptorC1Ev = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*), void (%"class.device::PublicKeyCredentialDescriptor"*)* @_ZN6device29PublicKeyCredentialDescriptorC2Ev
@_ZN6device29PublicKeyCredentialDescriptorC1ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEE = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*, i32, %"class.std::__1::vector"*), void (%"class.device::PublicKeyCredentialDescriptor"*, i32, %"class.std::__1::vector"*)* @_ZN6device29PublicKeyCredentialDescriptorC2ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEE
@_ZN6device29PublicKeyCredentialDescriptorC1ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEEN4base8internal9flat_treeINS_21FidoTransportProtocolENS7_8identityENS2_4lessIvEENS3_ISA_NS4_ISA_EEEEEE = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*, i32, %"class.std::__1::vector"*, %"class.base::internal::flat_tree.22"*), void (%"class.device::PublicKeyCredentialDescriptor"*, i32, %"class.std::__1::vector"*, %"class.base::internal::flat_tree.22"*)* @_ZN6device29PublicKeyCredentialDescriptorC2ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEEN4base8internal9flat_treeINS_21FidoTransportProtocolENS7_8identityENS2_4lessIvEENS3_ISA_NS4_ISA_EEEEEE
@_ZN6device29PublicKeyCredentialDescriptorC1ERKS0_ = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"*), void (%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"*)* @_ZN6device29PublicKeyCredentialDescriptorC2ERKS0_
@_ZN6device29PublicKeyCredentialDescriptorC1EOS0_ = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"*), void (%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"*)* @_ZN6device29PublicKeyCredentialDescriptorC2EOS0_
@_ZN6device29PublicKeyCredentialDescriptorD1Ev = hidden unnamed_addr alias void (%"class.device::PublicKeyCredentialDescriptor"*), void (%"class.device::PublicKeyCredentialDescriptor"*)* @_ZN6device29PublicKeyCredentialDescriptorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptor19CreateFromCBORValueERKN4cbor5ValueE(%"class.absl::optional"* noalias nocapture sret, %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cbor::Value", align 8
  %4 = alloca %"class.cbor::Value", align 8
  %5 = alloca %"class.device::PublicKeyCredentialDescriptor", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 5
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %union.anon.21* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false) #11
  br label %210

14:                                               ; preds = %2
  %15 = tail call dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"* %1) #11
  %16 = bitcast %"class.cbor::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6device12_GLOBAL__N_118kCredentialTypeKeyE, i64 0, i64 0), i32 3) #11
  %17 = bitcast %"class.base::flat_map"* %15 to %"struct.cbor::Value::Less"*
  %18 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"struct.std::__1::pair"* %19 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %22 to %"struct.std::__1::pair"*
  br i1 %25, label %45, label %27

27:                                               ; preds = %14
  %28 = ashr exact i64 %24, 6
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"struct.std::__1::pair"* [ %19, %27 ], [ %40, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %39, %29 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %30, i64 %32
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  %35 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %17, %"class.cbor::Value"* dereferenceable(32) %34, %"class.cbor::Value"* nonnull dereferenceable(32) %3) #11
  %36 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %37 = xor i64 %32, -1
  %38 = add i64 %31, %37
  %39 = select i1 %35, i64 %38, i64 %32
  %40 = select i1 %35, %"struct.std::__1::pair"* %36, %"struct.std::__1::pair"* %30
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %29
  %43 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %44 = ptrtoint %"struct.std::__1::pair"* %40 to i64
  br label %45

45:                                               ; preds = %42, %14
  %46 = phi i64 [ %44, %42 ], [ %23, %14 ]
  %47 = phi %"struct.std::__1::pair"* [ %43, %42 ], [ %26, %14 ]
  %48 = phi %"struct.std::__1::pair"* [ %40, %42 ], [ %19, %14 ]
  %49 = icmp eq %"struct.std::__1::pair"* %48, %47
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0
  %52 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %17, %"class.cbor::Value"* nonnull dereferenceable(32) %3, %"class.cbor::Value"* dereferenceable(32) %51) #11
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 1
  %55 = ptrtoint %"struct.std::__1::pair"* %54 to i64
  br label %56

56:                                               ; preds = %53, %50, %45
  %57 = phi i64 [ %55, %53 ], [ %46, %45 ], [ %46, %50 ]
  %58 = inttoptr i64 %57 to %"struct.std::__1::pair"*
  %59 = icmp eq %"struct.std::__1::pair"* %48, %58
  %60 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %61 = select i1 %59, %"struct.std::__1::pair"* %60, %"struct.std::__1::pair"* %48
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  %62 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %63 = icmp eq %"struct.std::__1::pair"* %61, %62
  br i1 %63, label %84, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 1
  %66 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %69, label %84

69:                                               ; preds = %64
  %70 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %65) #11
  %71 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6device10kPublicKeyE, i64 0, i64 0)) #11
  %72 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %74 to i64
  %79 = select i1 %75, i64 %77, i64 %78
  %80 = icmp eq i64 %71, %79
  br i1 %80, label %81, label %84

81:                                               ; preds = %69
  %82 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %70, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6device10kPublicKeyE, i64 0, i64 0), i64 %71) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %81, %69, %56, %64
  %85 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %85, align 8
  %86 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %87 = bitcast %union.anon.21* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 56, i1 false) #11
  br label %210

88:                                               ; preds = %81
  %89 = bitcast %"class.cbor::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN6device12_GLOBAL__N_116kCredentialIdKeyE, i64 0, i64 0), i32 3) #11
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %91 = load i64, i64* %21, align 8
  %92 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %93 = sub i64 %91, %92
  %94 = icmp eq i64 %93, 0
  %95 = inttoptr i64 %91 to %"struct.std::__1::pair"*
  br i1 %94, label %114, label %96

96:                                               ; preds = %88
  %97 = ashr exact i64 %93, 6
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi %"struct.std::__1::pair"* [ %90, %96 ], [ %109, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %108, %98 ]
  %101 = lshr i64 %100, 1
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 %101
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0
  %104 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %17, %"class.cbor::Value"* dereferenceable(32) %103, %"class.cbor::Value"* nonnull dereferenceable(32) %4) #11
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 1
  %106 = xor i64 %101, -1
  %107 = add i64 %100, %106
  %108 = select i1 %104, i64 %107, i64 %101
  %109 = select i1 %104, %"struct.std::__1::pair"* %105, %"struct.std::__1::pair"* %99
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %111, label %98

111:                                              ; preds = %98
  %112 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %113 = ptrtoint %"struct.std::__1::pair"* %109 to i64
  br label %114

114:                                              ; preds = %111, %88
  %115 = phi i64 [ %113, %111 ], [ %92, %88 ]
  %116 = phi %"struct.std::__1::pair"* [ %112, %111 ], [ %95, %88 ]
  %117 = phi %"struct.std::__1::pair"* [ %109, %111 ], [ %90, %88 ]
  %118 = icmp eq %"struct.std::__1::pair"* %117, %116
  br i1 %118, label %125, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0
  %121 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %17, %"class.cbor::Value"* nonnull dereferenceable(32) %4, %"class.cbor::Value"* dereferenceable(32) %120) #11
  br i1 %121, label %125, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 1
  %124 = ptrtoint %"struct.std::__1::pair"* %123 to i64
  br label %125

125:                                              ; preds = %122, %119, %114
  %126 = phi i64 [ %124, %122 ], [ %115, %114 ], [ %115, %119 ]
  %127 = inttoptr i64 %126 to %"struct.std::__1::pair"*
  %128 = icmp eq %"struct.std::__1::pair"* %117, %127
  %129 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %130 = select i1 %128, %"struct.std::__1::pair"* %129, %"struct.std::__1::pair"* %117
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #11
  %131 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %132 = icmp eq %"struct.std::__1::pair"* %130, %131
  br i1 %132, label %138, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 1
  %135 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %142, label %138

138:                                              ; preds = %125, %133
  %139 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %139, align 8
  %140 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %141 = bitcast %union.anon.21* %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 56, i1 false) #11
  br label %210

142:                                              ; preds = %133
  %143 = bitcast %"class.device::PublicKeyCredentialDescriptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %143) #11
  %144 = call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %134) #11
  %145 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 0, i64 24, i1 false) #11
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %144, i64 0, i32 0, i32 1
  %147 = bitcast i8** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector"* %144 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %175, label %153

153:                                              ; preds = %142
  %154 = icmp slt i64 %151, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %153
  %156 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %156) #12
  unreachable

157:                                              ; preds = %153
  %158 = call i8* @_Znwm(i64 %151) #13
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  store i8* %158, i8** %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %158, i8** %160, align 8
  %161 = getelementptr inbounds i8, i8* %158, i64 %151
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %161, i8** %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %144, i64 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = load i64, i64* %147, align 8
  %166 = bitcast i8** %159 to i64*
  %167 = ptrtoint i8* %164 to i64
  %168 = sub i64 %165, %167
  %169 = icmp sgt i64 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %158, i8* align 1 %164, i64 %168, i1 false) #11
  %171 = getelementptr inbounds i8, i8* %158, i64 %168
  br label %172

172:                                              ; preds = %170, %157
  %173 = phi i8* [ %171, %170 ], [ %158, %157 ]
  %174 = ptrtoint i8* %173 to i64
  store i64 %174, i64* %166, align 8
  br label %175

175:                                              ; preds = %172, %142
  call void @_ZN6device29PublicKeyCredentialDescriptorC2ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.device::PublicKeyCredentialDescriptor"* nonnull %5, i32 0, %"class.std::__1::vector"* nonnull %6)
  %176 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %176, align 8
  %177 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %178 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %5, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  store i32 %179, i32* %177, align 8
  %180 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %181 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %5, i64 0, i32 1
  %182 = bitcast %"class.std::__1::vector"* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = bitcast %"class.std::__1::vector"* %180 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %184, align 8
  %185 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %186 = bitcast i8** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %189 = bitcast i8** %188 to i64*
  store i64 %187, i64* %189, align 8
  %190 = bitcast %"class.std::__1::vector"* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #11
  %191 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %192 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %5, i64 0, i32 2
  %193 = bitcast %"class.base::internal::flat_tree.22"* %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  %195 = bitcast %"class.base::internal::flat_tree.22"* %191 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %195, align 8
  %196 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %5, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %200 = bitcast i8** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast %"class.base::internal::flat_tree.22"* %192 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 24, i1 false) #11
  %202 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = icmp eq i8* %203, null
  br i1 %204, label %209, label %205

205:                                              ; preds = %175
  %206 = ptrtoint i8* %203 to i64
  %207 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %208 = bitcast i8** %207 to i64*
  store i64 %206, i64* %208, align 8
  call void @_ZdlPv(i8* nonnull %203) #13
  br label %209

209:                                              ; preds = %175, %205
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %143) #11
  br label %210

210:                                              ; preds = %84, %209, %138, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.base::flat_map"* @_ZNK4cbor5Value6GetMapEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorC2Ev(%"class.device::PublicKeyCredentialDescriptor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorC2ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.device::PublicKeyCredentialDescriptor"* nocapture, i32, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = tail call i8* @_Znwm(i64 5) #13
  %11 = getelementptr inbounds i8, i8* %10, i64 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.ref.tmp, i64 0, i64 0), i64 5, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %10, i64 1
  %13 = load i8, i8* %10, align 1
  %14 = icmp ugt i8 %13, 2
  br i1 %14, label %22, label %15

15:                                               ; preds = %22, %3
  %16 = phi i8* [ %12, %3 ], [ %10, %22 ]
  store i8 2, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %10, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %10, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp ult i8 %18, %20
  br i1 %21, label %88, label %91

22:                                               ; preds = %3
  store i8 %13, i8* %12, align 1
  br label %15

23:                                               ; preds = %141, %135, %129, %113
  %24 = phi i8 [ %118, %113 ], [ %132, %129 ], [ %138, %135 ], [ %144, %141 ]
  %25 = phi i64 [ 0, %113 ], [ 1, %129 ], [ 2, %135 ], [ 3, %141 ]
  %26 = add nuw nsw i64 %25, 2
  %27 = icmp eq i64 %26, 5
  br i1 %27, label %69, label %28

28:                                               ; preds = %23
  %29 = sub nsw i64 1, %25
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %43, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %10, i64 %26
  %34 = load i8, i8* %33, align 1
  %35 = icmp ult i8 %24, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %25, 1
  %38 = getelementptr inbounds i8, i8* %10, i64 %37
  store i8 %34, i8* %38, align 1
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i8 [ %24, %32 ], [ %34, %36 ]
  %41 = phi i64 [ %25, %32 ], [ %37, %36 ]
  %42 = add nuw nsw i64 %25, 3
  br label %43

43:                                               ; preds = %28, %39
  %44 = phi i64 [ undef, %28 ], [ %41, %39 ]
  %45 = phi i8 [ %24, %28 ], [ %40, %39 ]
  %46 = phi i64 [ %25, %28 ], [ %41, %39 ]
  %47 = phi i64 [ %26, %28 ], [ %42, %39 ]
  %48 = icmp eq i64 %25, 2
  br i1 %48, label %66, label %49

49:                                               ; preds = %43, %124
  %50 = phi i8 [ %125, %124 ], [ %45, %43 ]
  %51 = phi i64 [ %126, %124 ], [ %46, %43 ]
  %52 = phi i64 [ %127, %124 ], [ %47, %43 ]
  %53 = getelementptr inbounds i8, i8* %10, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = icmp ult i8 %50, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = add nsw i64 %51, 1
  %58 = getelementptr inbounds i8, i8* %10, i64 %57
  store i8 %54, i8* %58, align 1
  br label %59

59:                                               ; preds = %56, %49
  %60 = phi i8 [ %50, %49 ], [ %54, %56 ]
  %61 = phi i64 [ %51, %49 ], [ %57, %56 ]
  %62 = add nuw nsw i64 %52, 1
  %63 = getelementptr inbounds i8, i8* %10, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = icmp ult i8 %60, %64
  br i1 %65, label %121, label %124

66:                                               ; preds = %124, %43
  %67 = phi i64 [ %44, %43 ], [ %126, %124 ]
  %68 = add nsw i64 %67, 1
  br label %69

69:                                               ; preds = %66, %23
  %70 = phi i64 [ %68, %66 ], [ 4, %23 ]
  %71 = getelementptr inbounds i8, i8* %10, i64 %70
  %72 = icmp eq i64 %70, 5
  %73 = ptrtoint i8* %71 to i64
  %74 = select i1 %72, i64 %116, i64 %73
  br label %75

75:                                               ; preds = %141, %69
  %76 = phi i64 [ %74, %69 ], [ %116, %141 ]
  %77 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  store i32 %1, i32* %77, align 8
  %78 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %79 = bitcast %"class.std::__1::vector"* %78 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %79, align 8
  %80 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast i8** %80 to i64*
  store i64 %8, i64* %81, align 8
  %82 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %83 = bitcast %"class.base::internal::flat_tree.22"* %82 to i64*
  store i64 %115, i64* %83, align 8
  %84 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %85 = bitcast i8** %84 to i64*
  store i64 %76, i64* %85, align 8
  %86 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast i8** %86 to i64*
  store i64 %116, i64* %87, align 8
  ret void

88:                                               ; preds = %15
  store i8 %20, i8* %17, align 1
  %89 = load i8, i8* %10, align 1
  %90 = icmp ult i8 %18, %89
  br i1 %90, label %159, label %91

91:                                               ; preds = %159, %88, %15
  %92 = phi i8* [ %17, %15 ], [ %19, %88 ], [ %10, %159 ]
  store i8 %18, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %10, i64 3
  %94 = load i8, i8* %93, align 1
  %95 = getelementptr inbounds i8, i8* %10, i64 2
  %96 = load i8, i8* %95, align 1
  %97 = icmp ult i8 %94, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %91
  store i8 %96, i8* %93, align 1
  %99 = getelementptr inbounds i8, i8* %10, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp ult i8 %94, %100
  br i1 %101, label %155, label %102

102:                                              ; preds = %158, %155, %98, %91
  %103 = phi i8* [ %93, %91 ], [ %95, %98 ], [ %99, %155 ], [ %10, %158 ]
  store i8 %94, i8* %103, align 1
  %104 = getelementptr inbounds i8, i8* %10, i64 4
  %105 = load i8, i8* %104, align 1
  %106 = getelementptr inbounds i8, i8* %10, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = icmp ult i8 %105, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %102
  store i8 %107, i8* %104, align 1
  %110 = getelementptr inbounds i8, i8* %10, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp ult i8 %105, %111
  br i1 %112, label %147, label %113

113:                                              ; preds = %154, %151, %147, %109, %102
  %114 = phi i8* [ %104, %102 ], [ %106, %109 ], [ %110, %147 ], [ %148, %151 ], [ %10, %154 ]
  store i8 %105, i8* %114, align 1
  %115 = ptrtoint i8* %10 to i64
  %116 = ptrtoint i8* %11 to i64
  %117 = getelementptr inbounds i8, i8* %10, i64 1
  %118 = load i8, i8* %10, align 1
  %119 = load i8, i8* %117, align 1
  %120 = icmp ult i8 %118, %119
  br i1 %120, label %129, label %23

121:                                              ; preds = %59
  %122 = add nsw i64 %61, 1
  %123 = getelementptr inbounds i8, i8* %10, i64 %122
  store i8 %64, i8* %123, align 1
  br label %124

124:                                              ; preds = %121, %59
  %125 = phi i8 [ %60, %59 ], [ %64, %121 ]
  %126 = phi i64 [ %61, %59 ], [ %122, %121 ]
  %127 = add nuw nsw i64 %52, 2
  %128 = icmp eq i64 %127, 5
  br i1 %128, label %66, label %49

129:                                              ; preds = %113
  %130 = getelementptr inbounds i8, i8* %10, i64 2
  %131 = getelementptr inbounds i8, i8* %10, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = load i8, i8* %130, align 1
  %134 = icmp ult i8 %132, %133
  br i1 %134, label %135, label %23

135:                                              ; preds = %129
  %136 = getelementptr inbounds i8, i8* %10, i64 3
  %137 = getelementptr inbounds i8, i8* %10, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = load i8, i8* %136, align 1
  %140 = icmp ult i8 %138, %139
  br i1 %140, label %141, label %23

141:                                              ; preds = %135
  %142 = getelementptr inbounds i8, i8* %10, i64 4
  %143 = getelementptr inbounds i8, i8* %10, i64 3
  %144 = load i8, i8* %143, align 1
  %145 = load i8, i8* %142, align 1
  %146 = icmp ult i8 %144, %145
  br i1 %146, label %75, label %23

147:                                              ; preds = %109
  store i8 %111, i8* %106, align 1
  %148 = getelementptr inbounds i8, i8* %10, i64 1
  %149 = load i8, i8* %148, align 1
  %150 = icmp ult i8 %105, %149
  br i1 %150, label %151, label %113

151:                                              ; preds = %147
  store i8 %149, i8* %110, align 1
  %152 = load i8, i8* %10, align 1
  %153 = icmp ult i8 %105, %152
  br i1 %153, label %154, label %113

154:                                              ; preds = %151
  store i8 %152, i8* %148, align 1
  br label %113

155:                                              ; preds = %98
  store i8 %100, i8* %95, align 1
  %156 = load i8, i8* %10, align 1
  %157 = icmp ult i8 %94, %156
  br i1 %157, label %158, label %102

158:                                              ; preds = %155
  store i8 %156, i8* %99, align 1
  br label %102

159:                                              ; preds = %88
  store i8 %89, i8* %19, align 1
  br label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorC2ENS_14CredentialTypeENSt3__16vectorIhNS2_9allocatorIhEEEEN4base8internal9flat_treeINS_21FidoTransportProtocolENS7_8identityENS2_4lessIvEENS3_ISA_NS4_ISA_EEEEEE(%"class.device::PublicKeyCredentialDescriptor"* nocapture, i32, %"class.std::__1::vector"* nocapture, %"class.base::internal::flat_tree.22"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__1::vector"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast i8** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  %22 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %23 = bitcast %"class.base::internal::flat_tree.22"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #11
  %24 = bitcast %"class.base::internal::flat_tree.22"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::internal::flat_tree.22"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.22", %"class.base::internal::flat_tree.22"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.base::internal::flat_tree.22", %"class.base::internal::flat_tree.22"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i8** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.base::internal::flat_tree.22"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorC2ERKS0_(%"class.device::PublicKeyCredentialDescriptor"*, %"class.device::PublicKeyCredentialDescriptor"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %38, label %16

16:                                               ; preds = %2
  %17 = icmp slt i64 %14, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #12
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %14) #13
  %22 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 %14
  %25 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load i64, i64* %10, align 8
  %29 = bitcast i8** %22 to i64*
  %30 = ptrtoint i8* %27 to i64
  %31 = sub i64 %28, %30
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %27, i64 %31, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %21, i64 %31
  br label %35

35:                                               ; preds = %33, %20
  %36 = phi i8* [ %34, %33 ], [ %21, %20 ]
  %37 = ptrtoint i8* %36 to i64
  store i64 %37, i64* %29, align 8
  br label %38

38:                                               ; preds = %2, %35
  %39 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2
  %41 = bitcast %"class.base::internal::flat_tree.22"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #11
  %42 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.base::internal::flat_tree.22"* %40 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %71, label %49

49:                                               ; preds = %38
  %50 = icmp slt i64 %47, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast %"class.base::internal::flat_tree.22"* %39 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %49
  %54 = tail call i8* @_Znwm(i64 %47) #13
  %55 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %"class.base::internal::flat_tree.22", %"class.base::internal::flat_tree.22"* %39, i64 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 %47
  %58 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.base::internal::flat_tree.22", %"class.base::internal::flat_tree.22"* %40, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = load i64, i64* %43, align 8
  %62 = bitcast i8** %55 to i64*
  %63 = ptrtoint i8* %60 to i64
  %64 = sub i64 %61, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %53
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %60, i64 %64, i1 false) #11
  %67 = getelementptr inbounds i8, i8* %54, i64 %64
  br label %68

68:                                               ; preds = %66, %53
  %69 = phi i8* [ %67, %66 ], [ %54, %53 ]
  %70 = ptrtoint i8* %69 to i64
  store i64 %70, i64* %62, align 8
  br label %71

71:                                               ; preds = %38, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorC2EOS0_(%"class.device::PublicKeyCredentialDescriptor"* nocapture, %"class.device::PublicKeyCredentialDescriptor"* nocapture dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = bitcast %"class.std::__1::vector"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i8** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11
  %23 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2
  %25 = bitcast %"class.base::internal::flat_tree.22"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #11
  %26 = bitcast %"class.base::internal::flat_tree.22"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::internal::flat_tree.22"* %23 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = bitcast i8** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast i8** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.base::internal::flat_tree.22"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.device::PublicKeyCredentialDescriptor"* @_ZN6device29PublicKeyCredentialDescriptoraSERKS0_(%"class.device::PublicKeyCredentialDescriptor"* returned, %"class.device::PublicKeyCredentialDescriptor"* readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = icmp eq %"class.device::PublicKeyCredentialDescriptor"* %0, %1
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %8, i8* %10, i8* %12) #11
  %13 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZNSt3__16vectorIN6device21FidoTransportProtocolENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.23"* %13, i8* %15, i8* %17) #11
  br label %18

18:                                               ; preds = %2, %7
  ret %"class.device::PublicKeyCredentialDescriptor"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.device::PublicKeyCredentialDescriptor"* @_ZN6device29PublicKeyCredentialDescriptoraSEOS0_(%"class.device::PublicKeyCredentialDescriptor"* returned, %"class.device::PublicKeyCredentialDescriptor"* nocapture dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = ptrtoint i8* %9 to i64
  %13 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  tail call void @_ZdlPv(i8* nonnull %9) #13
  %15 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #11
  br label %16

16:                                               ; preds = %2, %11
  %17 = bitcast %"class.std::__1::vector"* %7 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast i8** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11
  %31 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.22", %"class.base::internal::flat_tree.22"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %16
  %37 = ptrtoint i8* %34 to i64
  %38 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = bitcast i8** %38 to i64*
  store i64 %37, i64* %39, align 8
  tail call void @_ZdlPv(i8* nonnull %34) #13
  %40 = bitcast %"class.base::internal::flat_tree.22"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #11
  br label %41

41:                                               ; preds = %16, %36
  %42 = bitcast %"class.base::internal::flat_tree.22"* %32 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::internal::flat_tree.22"* %31 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %49 = bitcast i8** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.base::internal::flat_tree.22"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  ret %"class.device::PublicKeyCredentialDescriptor"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device29PublicKeyCredentialDescriptorD2Ev(%"class.device::PublicKeyCredentialDescriptor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #13
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = ptrtoint i8* %11 to i64
  %15 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #13
  br label %17

17:                                               ; preds = %9, %13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6device29PublicKeyCredentialDescriptoreqERKS0_(%"class.device::PublicKeyCredentialDescriptor"* nocapture readonly, %"class.device::PublicKeyCredentialDescriptor"* nocapture readonly dereferenceable(56)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast i8** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = icmp eq i64 %16, %22
  %24 = inttoptr i64 %15 to i8*
  %25 = inttoptr i64 %13 to i8*
  br i1 %23, label %26, label %72

26:                                               ; preds = %8
  %27 = icmp eq i8* %24, %25
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = inttoptr i64 %21 to i8*
  br label %30

30:                                               ; preds = %28, %36
  %31 = phi i8* [ %38, %36 ], [ %29, %28 ]
  %32 = phi i8* [ %37, %36 ], [ %24, %28 ]
  %33 = load i8, i8* %32, align 1
  %34 = load i8, i8* %31, align 1
  %35 = icmp eq i8 %33, %34
  br i1 %35, label %36, label %72

36:                                               ; preds = %30
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  %38 = getelementptr inbounds i8, i8* %31, i64 1
  %39 = icmp eq i8* %37, %25
  br i1 %39, label %40, label %30

40:                                               ; preds = %36, %26
  %41 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2
  %42 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2
  %43 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.base::internal::flat_tree.22"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.base::internal::flat_tree.22"* %42 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = icmp eq i64 %48, %54
  %56 = inttoptr i64 %47 to i8*
  %57 = inttoptr i64 %45 to i8*
  br i1 %55, label %58, label %72

58:                                               ; preds = %40
  %59 = icmp eq i8* %56, %57
  br i1 %59, label %72, label %60

60:                                               ; preds = %58
  %61 = inttoptr i64 %53 to i8*
  br label %62

62:                                               ; preds = %68, %60
  %63 = phi i8* [ %70, %68 ], [ %61, %60 ]
  %64 = phi i8* [ %69, %68 ], [ %56, %60 ]
  %65 = load i8, i8* %64, align 1
  %66 = load i8, i8* %63, align 1
  %67 = icmp eq i8 %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = getelementptr inbounds i8, i8* %64, i64 1
  %70 = getelementptr inbounds i8, i8* %63, i64 1
  %71 = icmp eq i8* %69, %57
  br i1 %71, label %72, label %62

72:                                               ; preds = %30, %68, %62, %58, %40, %8, %2
  %73 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %40 ], [ true, %58 ], [ true, %68 ], [ false, %62 ], [ false, %30 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device6AsCBORERKNS_29PublicKeyCredentialDescriptorE(%"class.cbor::Value"* noalias sret, %"class.device::PublicKeyCredentialDescriptor"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::flat_map", align 8
  %4 = alloca %"class.cbor::Value", align 8
  %5 = alloca %"class.cbor::Value", align 8
  %6 = alloca %"class.cbor::Value", align 8
  %7 = alloca %"class.cbor::Value", align 8
  %8 = bitcast %"class.base::flat_map"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"class.cbor::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1
  %13 = bitcast %"class.std::__1::vector"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  %19 = inttoptr i64 %14 to i8*
  call void @_ZN4cbor5ValueC1EN4base4spanIKhLm18446744073709551615EEE(%"class.cbor::Value"* nonnull %4, i64 %18, i8* %19) #11
  %20 = bitcast %"class.cbor::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN6device12_GLOBAL__N_116kCredentialIdKeyE, i64 0, i64 0), i32 3) #11
  %21 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4base8flat_mapIN4cbor5ValueES2_NS2_4LessENSt3__16vectorINS4_4pairIS2_S2_EENS4_9allocatorIS7_EEEEEixEOS2_(%"class.base::flat_map"* nonnull %3, %"class.cbor::Value"* nonnull dereferenceable(32) %5)
  %22 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %21, %"class.cbor::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  %23 = bitcast %"class.cbor::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.device::PublicKeyCredentialDescriptor", %"class.device::PublicKeyCredentialDescriptor"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = call i8* @_ZN6device22CredentialTypeToStringENS_14CredentialTypeE(i32 %25) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %6, i8* %26, i32 3) #11
  %27 = bitcast %"class.cbor::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4cbor5ValueC1EPKcNS0_4TypeE(%"class.cbor::Value"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN6device12_GLOBAL__N_118kCredentialTypeKeyE, i64 0, i64 0), i32 3) #11
  %28 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4base8flat_mapIN4cbor5ValueES2_NS2_4LessENSt3__16vectorINS4_4pairIS2_S2_EENS4_9allocatorIS7_EEEEEixEOS2_(%"class.base::flat_map"* nonnull %3, %"class.cbor::Value"* nonnull dereferenceable(32) %7)
  %29 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %28, %"class.cbor::Value"* nonnull dereferenceable(32) %6) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4cbor5ValueC1EON4base8flat_mapIS0_S0_NS0_4LessENSt3__16vectorINS4_4pairIS0_S0_EENS4_9allocatorIS7_EEEEEE(%"class.cbor::Value"* %0, %"class.base::flat_map"* nonnull dereferenceable(24) %3) #11
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %31 = icmp eq %"struct.std::__1::pair"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %2
  %33 = bitcast %"struct.std::__1::pair"* %30 to i8*
  %34 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %35 = icmp eq %"struct.std::__1::pair"* %34, %30
  br i1 %35, label %45, label %36

36:                                               ; preds = %32, %36
  %37 = phi %"struct.std::__1::pair"* [ %38, %36 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1, i32 1
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %39) #11
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %38, i64 0, i32 0
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %40) #11
  %41 = icmp eq %"struct.std::__1::pair"* %38, %30
  br i1 %41, label %42, label %36

42:                                               ; preds = %36
  %43 = bitcast %"class.base::flat_map"* %3 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %32
  %46 = phi i8* [ %44, %42 ], [ %33, %32 ]
  store %"struct.std::__1::pair"* %30, %"struct.std::__1::pair"** %10, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %2, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

declare void @_ZN4cbor5ValueC1EN4base4spanIKhLm18446744073709551615EEE(%"class.cbor::Value"*, i64, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.cbor::Value"* @_ZN4base8flat_mapIN4cbor5ValueES2_NS2_4LessENSt3__16vectorINS4_4pairIS2_S2_EENS4_9allocatorIS7_EEEEEixEOS2_(%"class.base::flat_map"*, %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.cbor::Value::Less", align 1
  %4 = alloca %"class.cbor::Value", align 8
  %5 = bitcast %"class.base::flat_map"* %0 to %"struct.cbor::Value::Less"*
  %6 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %32, label %15

15:                                               ; preds = %2
  %16 = ashr exact i64 %12, 6
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %28, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %27, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* %5, %"class.cbor::Value"* dereferenceable(32) %22, %"class.cbor::Value"* dereferenceable(32) %1) #11
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %25 = xor i64 %20, -1
  %26 = add i64 %19, %25
  %27 = select i1 %23, i64 %26, i64 %20
  %28 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %18
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %30, label %17

30:                                               ; preds = %17
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  br label %32

32:                                               ; preds = %30, %2
  %33 = phi %"struct.std::__1::pair"* [ %14, %2 ], [ %31, %30 ]
  %34 = phi %"struct.std::__1::pair"* [ %7, %2 ], [ %28, %30 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %33
  %36 = getelementptr inbounds %"struct.cbor::Value::Less", %"struct.cbor::Value::Less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #11
  br i1 %35, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0
  %39 = call zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"* nonnull %3, %"class.cbor::Value"* dereferenceable(32) %1, %"class.cbor::Value"* dereferenceable(32) %38)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  br i1 %39, label %41, label %45

40:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #11
  br label %41

41:                                               ; preds = %40, %37
  %42 = bitcast %"class.cbor::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #11
  call void @_ZN4cbor5ValueC1Ev(%"class.cbor::Value"* nonnull %4) #11
  %43 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0
  %44 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4cbor5ValueES3_EENS_9allocatorIS4_EEE7emplaceIJS3_S3_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.14"* %43, %"struct.std::__1::pair"* %34, %"class.cbor::Value"* dereferenceable(32) %1, %"class.cbor::Value"* nonnull dereferenceable(32) %4) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #11
  br label %45

45:                                               ; preds = %41, %37
  %46 = phi %"struct.std::__1::pair"* [ %44, %41 ], [ %34, %37 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 0, i32 1
  ret %"class.cbor::Value"* %47
}

; Function Attrs: nounwind
declare dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"*, %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #3

declare i8* @_ZN6device22CredentialTypeToStringENS_14CredentialTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueC1EON4base8flat_mapIS0_S0_NS0_4LessENSt3__16vectorINS4_4pairIS0_S0_EENS4_9allocatorIS7_EEEEEE(%"class.cbor::Value"*, %"class.base::flat_map"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6device21FidoTransportProtocolENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.23"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #11
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #13
  %46 = bitcast %"class.std::__1::vector.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #12
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #13
  %61 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4cbor5Value4LessclERKS0_S3_(%"struct.cbor::Value::Less"*, %"class.cbor::Value"* dereferenceable(32), %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.cbor::Value", %"class.cbor::Value"* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = icmp slt i32 %5, %7
  br label %150

11:                                               ; preds = %3
  switch i32 %5, label %150 [
    i32 0, label %12
    i32 1, label %18
    i32 3, label %24
    i32 2, label %70
    i32 -2, label %110
  ]

12:                                               ; preds = %11
  %13 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #11
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #11
  %16 = load i64, i64* %15, align 8
  %17 = icmp slt i64 %14, %16
  br label %150

18:                                               ; preds = %11
  %19 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %1) #11
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"* %2) #11
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %20, %22
  br label %150

24:                                               ; preds = %11
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %1) #11
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4cbor5Value9GetStringEv(%"class.cbor::Value"* %2) #11
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp ult i64 %33, %42
  br i1 %43, label %150, label %44

44:                                               ; preds = %24
  %45 = icmp ult i64 %42, %33
  br i1 %45, label %150, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %27, align 1
  %48 = icmp slt i8 %47, 0
  %49 = load i64, i64* %30, align 8
  %50 = zext i8 %47 to i64
  %51 = select i1 %48, i64 %49, i64 %50
  %52 = icmp ult i64 %42, %51
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %48, i8* %57, i8* %58
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %63 = select i1 %38, i8* %61, i8* %62
  %64 = tail call i32 @memcmp(i8* %59, i8* %63, i64 %53) #11
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %55, %46
  %67 = icmp ult i64 %51, %42
  br label %150

68:                                               ; preds = %55
  %69 = icmp slt i32 %64, 0
  br label %150

70:                                               ; preds = %11
  %71 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %1) #11
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 1
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value13GetBytestringEv(%"class.cbor::Value"* %2) #11
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %78, i64 0, i32 0, i32 1
  %80 = bitcast i8** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector"* %78 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = icmp ult i64 %77, %84
  %86 = inttoptr i64 %83 to i8*
  %87 = inttoptr i64 %81 to i8*
  br i1 %85, label %150, label %88

88:                                               ; preds = %70
  %89 = icmp ult i64 %84, %77
  br i1 %89, label %150, label %90

90:                                               ; preds = %88
  %91 = load i8*, i8** %72, align 8
  %92 = icmp eq i8* %86, %87
  br i1 %92, label %150, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %106, %93
  %97 = phi i8* [ %107, %106 ], [ %95, %93 ]
  %98 = phi i8* [ %108, %106 ], [ %86, %93 ]
  %99 = icmp eq i8* %97, %91
  br i1 %99, label %150, label %100

100:                                              ; preds = %96
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %98, align 1
  %103 = icmp ult i8 %101, %102
  br i1 %103, label %150, label %104

104:                                              ; preds = %100
  %105 = icmp ult i8 %102, %101
  br i1 %105, label %150, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds i8, i8* %97, i64 1
  %108 = getelementptr inbounds i8, i8* %98, i64 1
  %109 = icmp eq i8* %108, %87
  br i1 %109, label %150, label %96

110:                                              ; preds = %11
  %111 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %1) #11
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %111, i64 0, i32 0, i32 1
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::vector"* %111 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %114, %116
  %118 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"* %2) #11
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %118, i64 0, i32 0, i32 1
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector"* %118 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %121, %123
  %125 = icmp ult i64 %117, %124
  %126 = inttoptr i64 %123 to i8*
  %127 = inttoptr i64 %121 to i8*
  br i1 %125, label %150, label %128

128:                                              ; preds = %110
  %129 = icmp ult i64 %124, %117
  br i1 %129, label %150, label %130

130:                                              ; preds = %128
  %131 = load i8*, i8** %112, align 8
  %132 = icmp eq i8* %126, %127
  br i1 %132, label %150, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %111, i64 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %146, %133
  %137 = phi i8* [ %147, %146 ], [ %135, %133 ]
  %138 = phi i8* [ %148, %146 ], [ %126, %133 ]
  %139 = icmp eq i8* %137, %131
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = load i8, i8* %137, align 1
  %142 = load i8, i8* %138, align 1
  %143 = icmp ult i8 %141, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %140
  %145 = icmp ult i8 %142, %141
  br i1 %145, label %150, label %146

146:                                              ; preds = %144
  %147 = getelementptr inbounds i8, i8* %137, i64 1
  %148 = getelementptr inbounds i8, i8* %138, i64 1
  %149 = icmp eq i8* %148, %127
  br i1 %149, label %150, label %136

150:                                              ; preds = %146, %144, %140, %136, %106, %104, %100, %96, %130, %128, %110, %90, %88, %70, %68, %66, %44, %24, %11, %18, %12, %9
  %151 = phi i1 [ %10, %9 ], [ %23, %18 ], [ %17, %12 ], [ false, %11 ], [ true, %24 ], [ false, %44 ], [ %67, %66 ], [ %69, %68 ], [ true, %70 ], [ false, %88 ], [ false, %90 ], [ true, %110 ], [ false, %128 ], [ false, %130 ], [ true, %100 ], [ true, %96 ], [ false, %106 ], [ false, %104 ], [ true, %140 ], [ true, %136 ], [ false, %146 ], [ false, %144 ]
  ret i1 %151
}

declare dereferenceable(8) i64* @_ZNK4cbor5Value10GetIntegerEv(%"class.cbor::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK4cbor5Value14GetInvalidUTF8Ev(%"class.cbor::Value"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #11
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #13
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #12
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #13
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #11
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueC1Ev(%"class.cbor::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4cbor5ValueES3_EENS_9allocatorIS4_EEE7emplaceIJS3_S3_EEENS_11__wrap_iterIPS4_EENS9_IPKS4_EEDpOT_(%"class.std::__1::vector.14"*, %"struct.std::__1::pair"*, %"class.cbor::Value"* dereferenceable(32), %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.std::__1::__temp_value", align 8
  %6 = alloca %"struct.std::__1::__split_buffer", align 8
  %7 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %15, label %72

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair"* %10, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %18, %"class.cbor::Value"* dereferenceable(32) %2) #11
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %19, %"class.cbor::Value"* dereferenceable(32) %3) #11
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %21 = ptrtoint %"struct.std::__1::pair"* %20 to i64
  %22 = bitcast %"struct.std::__1::pair"** %9 to i64*
  store i64 %21, i64* %22, align 8
  br label %195

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 64, i1 false)
  %25 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2
  %26 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 1
  %27 = bitcast %"class.std::__1::allocator.19"** %26 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %25, %"class.std::__1::__compressed_pair.16"** %27, align 8
  %28 = bitcast %"struct.std::__1::__temp_value"* %5 to %"class.cbor::Value"*
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* nonnull %28, %"class.cbor::Value"* dereferenceable(32) %2) #11
  %29 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 32
  %30 = bitcast i8* %29 to %"class.cbor::Value"*
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %30, %"class.cbor::Value"* dereferenceable(32) %3) #11
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %33 = ptrtoint %"struct.std::__1::pair"* %31 to i64
  %34 = ptrtoint %"struct.std::__1::pair"* %32 to i64
  %35 = sub i64 %33, %34
  %36 = ashr exact i64 %35, 6
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %36
  %38 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %39 = icmp ult %"struct.std::__1::pair"* %37, %31
  br i1 %39, label %57, label %42

40:                                               ; preds = %57
  %41 = ptrtoint %"struct.std::__1::pair"* %65 to i64
  br label %42

42:                                               ; preds = %40, %23
  %43 = phi i64 [ %41, %40 ], [ %33, %23 ]
  store i64 %43, i64* %38, align 8
  %44 = icmp eq i64 %35, 0
  br i1 %44, label %67, label %45

45:                                               ; preds = %42, %45
  %46 = phi %"struct.std::__1::pair"* [ %49, %45 ], [ %31, %42 ]
  %47 = phi %"struct.std::__1::pair"* [ %48, %45 ], [ %37, %42 ]
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 -1
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 -1
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 0, i32 0
  %52 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %51, %"class.cbor::Value"* dereferenceable(32) %50) #11
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %47, i64 -1, i32 1
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %46, i64 -1, i32 1
  %55 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %54, %"class.cbor::Value"* dereferenceable(32) %53) #11
  %56 = icmp eq %"struct.std::__1::pair"* %48, %1
  br i1 %56, label %67, label %45

57:                                               ; preds = %23, %57
  %58 = phi %"struct.std::__1::pair"* [ %65, %57 ], [ %31, %23 ]
  %59 = phi %"struct.std::__1::pair"* [ %64, %57 ], [ %37, %23 ]
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 0, i32 0
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %60, %"class.cbor::Value"* dereferenceable(32) %61) #11
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 0, i32 1
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %62, %"class.cbor::Value"* dereferenceable(32) %63) #11
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 1
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 1
  %66 = icmp ult %"struct.std::__1::pair"* %64, %31
  br i1 %66, label %57, label %40

67:                                               ; preds = %45, %42
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %69 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %68, %"class.cbor::Value"* nonnull dereferenceable(32) %28) #11
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %71 = call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %70, %"class.cbor::Value"* dereferenceable(32) %30) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %30) #11
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #11
  br label %195

72:                                               ; preds = %4
  %73 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2
  %75 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 2
  %79 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %6, i64 0, i32 3, i32 1, i32 0
  %81 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %82 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %83 = bitcast %"struct.std::__1::__split_buffer"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 40, i1 false)
  %84 = load i64, i64* %82, align 8
  %85 = sub i64 %73, %84
  %86 = ashr exact i64 %85, 6
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, 288230376151711743
  br i1 %88, label %89, label %91

89:                                               ; preds = %72
  %90 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #12
  unreachable

91:                                               ; preds = %72
  %92 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %93 = sub i64 %14, %84
  %94 = ashr exact i64 %93, 6
  %95 = icmp ult i64 %94, 144115188075855871
  br i1 %95, label %100, label %96

96:                                               ; preds = %91
  %97 = sub i64 %7, %84
  %98 = ashr exact i64 %97, 6
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %79, align 8
  %99 = bitcast %"class.std::__1::allocator.19"** %80 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %74, %"class.std::__1::__compressed_pair.16"** %99, align 8
  br label %111

100:                                              ; preds = %91
  %101 = ashr exact i64 %93, 5
  %102 = icmp ult i64 %101, %87
  %103 = select i1 %102, i64 %87, i64 %101
  %104 = sub i64 %7, %84
  %105 = ashr exact i64 %104, 6
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %79, align 8
  %106 = bitcast %"class.std::__1::allocator.19"** %80 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %74, %"class.std::__1::__compressed_pair.16"** %106, align 8
  %107 = icmp eq i64 %103, 0
  br i1 %107, label %117, label %108

108:                                              ; preds = %100
  %109 = icmp ugt i64 %103, 288230376151711743
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #12
  unreachable

111:                                              ; preds = %96, %108
  %112 = phi i64 [ 288230376151711743, %96 ], [ %103, %108 ]
  %113 = phi i64 [ %98, %96 ], [ %105, %108 ]
  %114 = shl i64 %112, 6
  %115 = tail call i8* @_Znwm(i64 %114) #13
  %116 = bitcast i8* %115 to %"struct.std::__1::pair"*
  br label %117

117:                                              ; preds = %100, %111
  %118 = phi i64 [ %113, %111 ], [ %105, %100 ]
  %119 = phi i64 [ %112, %111 ], [ 0, %100 ]
  %120 = phi %"struct.std::__1::pair"* [ %116, %111 ], [ null, %100 ]
  store %"struct.std::__1::pair"* %120, %"struct.std::__1::pair"** %76, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 %118
  store %"struct.std::__1::pair"* %121, %"struct.std::__1::pair"** %78, align 8
  store %"struct.std::__1::pair"* %121, %"struct.std::__1::pair"** %77, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %120, i64 %119
  store %"struct.std::__1::pair"* %122, %"struct.std::__1::pair"** %79, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4cbor5ValueES3_EERNS_9allocatorIS4_EEE12emplace_backIJS3_S3_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %6, %"class.cbor::Value"* dereferenceable(32) %2, %"class.cbor::Value"* dereferenceable(32) %3)
  %123 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %77, align 8
  %124 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %125 = icmp eq %"struct.std::__1::pair"* %124, %1
  br i1 %125, label %137, label %126

126:                                              ; preds = %117, %126
  %127 = phi %"struct.std::__1::pair"* [ %135, %126 ], [ %123, %117 ]
  %128 = phi %"struct.std::__1::pair"* [ %129, %126 ], [ %1, %117 ]
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 -1
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 -1, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 0, i32 0
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %130, %"class.cbor::Value"* dereferenceable(32) %131) #11
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 -1, i32 1
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 -1, i32 1
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %132, %"class.cbor::Value"* dereferenceable(32) %133) #11
  %134 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %77, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %134, i64 -1
  store %"struct.std::__1::pair"* %135, %"struct.std::__1::pair"** %77, align 8
  %136 = icmp eq %"struct.std::__1::pair"* %129, %124
  br i1 %136, label %137, label %126

137:                                              ; preds = %126, %117
  %138 = phi %"struct.std::__1::pair"* [ %123, %117 ], [ %135, %126 ]
  %139 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %140 = icmp eq %"struct.std::__1::pair"* %139, %1
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = ptrtoint %"struct.std::__1::pair"* %139 to i64
  %143 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  %144 = bitcast %"struct.std::__1::pair"** %77 to i64*
  %145 = bitcast %"struct.std::__1::pair"** %78 to i64*
  %146 = load i64, i64* %145, align 8
  br label %166

147:                                              ; preds = %137
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %78, align 8
  br label %149

149:                                              ; preds = %149, %147
  %150 = phi %"struct.std::__1::pair"* [ %158, %149 ], [ %148, %147 ]
  %151 = phi %"struct.std::__1::pair"* [ %156, %149 ], [ %1, %147 ]
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 0
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 0
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %152, %"class.cbor::Value"* dereferenceable(32) %153) #11
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 1
  call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %154, %"class.cbor::Value"* dereferenceable(32) %155) #11
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 1
  %157 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %78, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %157, i64 1
  store %"struct.std::__1::pair"* %158, %"struct.std::__1::pair"** %78, align 8
  %159 = icmp eq %"struct.std::__1::pair"* %156, %139
  br i1 %159, label %160, label %149

160:                                              ; preds = %149
  %161 = ptrtoint %"struct.std::__1::pair"* %158 to i64
  %162 = bitcast %"struct.std::__1::pair"** %77 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = load i64, i64* %81, align 8
  %165 = bitcast %"struct.std::__1::pair"** %78 to i64*
  br label %166

166:                                              ; preds = %141, %160
  %167 = phi i64* [ %145, %141 ], [ %165, %160 ]
  %168 = phi i64 [ %146, %141 ], [ %161, %160 ]
  %169 = phi i64 [ %142, %141 ], [ %164, %160 ]
  %170 = phi i64* [ %144, %141 ], [ %162, %160 ]
  %171 = phi i64 [ %143, %141 ], [ %163, %160 ]
  %172 = load i64, i64* %82, align 8
  store i64 %171, i64* %82, align 8
  store i64 %172, i64* %170, align 8
  store i64 %168, i64* %81, align 8
  store i64 %169, i64* %167, align 8
  %173 = load i64, i64* %92, align 8
  %174 = bitcast %"struct.std::__1::pair"** %79 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %92, align 8
  store i64 %173, i64* %174, align 8
  %176 = bitcast %"struct.std::__1::__split_buffer"* %6 to i64*
  store i64 %172, i64* %176, align 8
  %177 = inttoptr i64 %172 to %"struct.std::__1::pair"*
  %178 = inttoptr i64 %169 to %"struct.std::__1::pair"*
  %179 = icmp eq %"struct.std::__1::pair"* %178, %177
  br i1 %179, label %189, label %180

180:                                              ; preds = %166, %180
  %181 = phi %"struct.std::__1::pair"* [ %185, %180 ], [ %178, %166 ]
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 -1
  store %"struct.std::__1::pair"* %182, %"struct.std::__1::pair"** %78, align 8
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %181, i64 -1, i32 1
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %183) #11
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %182, i64 0, i32 0
  call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %184) #11
  %185 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %78, align 8
  %186 = icmp eq %"struct.std::__1::pair"* %185, %177
  br i1 %186, label %187, label %180

187:                                              ; preds = %180
  %188 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %76, align 8
  br label %189

189:                                              ; preds = %187, %166
  %190 = phi %"struct.std::__1::pair"* [ %188, %187 ], [ %177, %166 ]
  %191 = icmp eq %"struct.std::__1::pair"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = bitcast %"struct.std::__1::pair"* %190 to i8*
  call void @_ZdlPv(i8* %193) #13
  br label %194

194:                                              ; preds = %189, %192
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #11
  br label %195

195:                                              ; preds = %17, %67, %194
  %196 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %67 ], [ %123, %194 ]
  ret %"struct.std::__1::pair"* %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4cbor5ValueES3_EERNS_9allocatorIS4_EEE12emplace_backIJS3_S3_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, %"class.cbor::Value"* dereferenceable(32), %"class.cbor::Value"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %101

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br i1 %15, label %17, label %43

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 6
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %24, label %39, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"struct.std::__1::pair"* [ %35, %25 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair"* [ %34, %25 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0
  %30 = tail call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %29, %"class.cbor::Value"* dereferenceable(32) %28) #11
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %33 = tail call dereferenceable(32) %"class.cbor::Value"* @_ZN4cbor5ValueaSEOS0_(%"class.cbor::Value"* %32, %"class.cbor::Value"* dereferenceable(32) %31) #11
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %36 = icmp eq %"struct.std::__1::pair"* %34, %5
  br i1 %36, label %37, label %25

37:                                               ; preds = %25
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %39

39:                                               ; preds = %37, %17
  %40 = phi %"struct.std::__1::pair"* [ %5, %17 ], [ %38, %37 ]
  %41 = phi %"struct.std::__1::pair"* [ %23, %17 ], [ %35, %37 ]
  store %"struct.std::__1::pair"* %41, %"struct.std::__1::pair"** %4, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %40, i64 %22
  store %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"** %11, align 8
  br label %101

43:                                               ; preds = %10
  %44 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %45 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %46 = sub i64 %9, %16
  %47 = ashr exact i64 %46, 5
  %48 = icmp eq i64 %46, 0
  %49 = select i1 %48, i64 1, i64 %47
  %50 = icmp ugt i64 %49, 288230376151711743
  br i1 %50, label %51, label %52

51:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

52:                                               ; preds = %43
  %53 = lshr i64 %49, 2
  %54 = shl i64 %49, 6
  %55 = tail call i8* @_Znwm(i64 %54) #13
  %56 = bitcast i8* %55 to %"struct.std::__1::pair"*
  %57 = ptrtoint i8* %55 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %53
  %59 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 %49
  %61 = ptrtoint %"struct.std::__1::pair"* %60 to i64
  %62 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %63 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %64 = sub i64 %63, %62
  %65 = ashr exact i64 %64, 6
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 %65
  %67 = icmp eq i64 %64, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %52, %68
  %69 = phi %"struct.std::__1::pair"* [ %75, %68 ], [ %58, %52 ]
  %70 = phi %"struct.std::__1::pair"* [ %76, %68 ], [ %12, %52 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %71, %"class.cbor::Value"* dereferenceable(32) %72) #11
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %73, %"class.cbor::Value"* dereferenceable(32) %74) #11
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %77 = icmp eq %"struct.std::__1::pair"* %66, %75
  br i1 %77, label %78, label %68

78:                                               ; preds = %68
  %79 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  %80 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %81 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %82 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %83

83:                                               ; preds = %52, %78
  %84 = phi %"struct.std::__1::pair"* [ %82, %78 ], [ %5, %52 ]
  %85 = phi %"struct.std::__1::pair"* [ %81, %78 ], [ %12, %52 ]
  %86 = phi %"struct.std::__1::pair"* [ %80, %78 ], [ %14, %52 ]
  %87 = phi i64 [ %79, %78 ], [ %59, %52 ]
  store i64 %57, i64* %45, align 8
  %88 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %59, i64* %88, align 8
  %89 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %87, i64* %89, align 8
  store i64 %61, i64* %44, align 8
  %90 = icmp eq %"struct.std::__1::pair"* %84, %85
  br i1 %90, label %97, label %91

91:                                               ; preds = %83, %91
  %92 = phi %"struct.std::__1::pair"* [ %93, %91 ], [ %84, %83 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 1
  tail call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %94) #11
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %93, i64 0, i32 0
  tail call void @_ZN4cbor5ValueD1Ev(%"class.cbor::Value"* %95) #11
  %96 = icmp eq %"struct.std::__1::pair"* %93, %85
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %83
  %98 = icmp eq %"struct.std::__1::pair"* %86, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = bitcast %"struct.std::__1::pair"* %86 to i8*
  tail call void @_ZdlPv(i8* %100) #13
  br label %101

101:                                              ; preds = %99, %97, %39, %3
  %102 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 0
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %103, %"class.cbor::Value"* dereferenceable(32) %1) #11
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 0, i32 1
  tail call void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"* %104, %"class.cbor::Value"* dereferenceable(32) %2) #11
  %105 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 1
  store %"struct.std::__1::pair"* %106, %"struct.std::__1::pair"** %4, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4cbor5ValueC1EOS0_(%"class.cbor::Value"*, %"class.cbor::Value"* dereferenceable(32)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
