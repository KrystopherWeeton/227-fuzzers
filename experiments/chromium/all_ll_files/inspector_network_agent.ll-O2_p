; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_network_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_network_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.410" }
%"struct.std::__1::atomic.410" = type { %"struct.std::__1::__atomic_base.411" }
%"struct.std::__1::__atomic_base.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__cxx_atomic_impl.413" }
%"struct.std::__1::__cxx_atomic_impl.413" = type { %"struct.std::__1::__cxx_atomic_base_impl.414" }
%"struct.std::__1::__cxx_atomic_base_impl.414" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.525", i32, [4 x i8], %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.663", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.680", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.692", %"class.std::__1::unique_ptr.698", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.705", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.528", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.546", %"class.std::__1::unique_ptr.552", %"class.std::__1::unique_ptr.558", %"class.std::__1::unique_ptr.569", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.583", %"class.std::__1::unique_ptr.590", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.618", %"class.std::__1::unique_ptr.643", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.561" = type { %"struct.std::__1::__atomic_base.562" }
%"struct.std::__1::__atomic_base.562" = type { %"struct.std::__1::__atomic_base.563" }
%"struct.std::__1::__atomic_base.563" = type { %"struct.std::__1::__cxx_atomic_impl.564" }
%"struct.std::__1::__cxx_atomic_impl.564" = type { %"struct.std::__1::__cxx_atomic_base_impl.565" }
%"struct.std::__1::__cxx_atomic_base_impl.565" = type { i64 }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::Worklist.572"* }
%"class.blink::Worklist.572" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::Worklist.579"* }
%"class.blink::Worklist.579" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.blink::Worklist.586"* }
%"class.blink::Worklist.586" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::Worklist.593"* }
%"class.blink::Worklist.593" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::Worklist.600"* }
%"class.blink::Worklist.600" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::Worklist.607"* }
%"class.blink::Worklist.607" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::Worklist.614"* }
%"class.blink::Worklist.614" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.561" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.621", %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634", %"class.std::__1::__compressed_pair.636", [4 x i8] }>
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623", %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { i64 }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { float }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.646", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.655" }
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.671" }
%"class.WTF::VectorBuffer.671" = type { %"class.WTF::VectorBufferBase.672" }
%"class.WTF::VectorBufferBase.672" = type { %"struct.std::__1::pair.673"*, i32, i32 }
%"struct.std::__1::pair.673" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.686" }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.572"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.579"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.586"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.593"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.600"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.2510", i64 }
%"class.std::__1::vector.2510" = type { %"class.std::__1::__vector_base.2511" }
%"class.std::__1::__vector_base.2511" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.2512" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.2512" = type { %"struct.std::__1::__compressed_pair_elem.2513" }
%"struct.std::__1::__compressed_pair_elem.2513" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.704 }
%class.scoped_refptr.704 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.705" = type { %"struct.std::__1::__atomic_base.706" }
%"struct.std::__1::__atomic_base.706" = type { %"struct.std::__1::__cxx_atomic_impl.707" }
%"struct.std::__1::__cxx_atomic_impl.707" = type { %"struct.std::__1::__cxx_atomic_base_impl.708" }
%"struct.std::__1::__cxx_atomic_base_impl.708" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::InspectorNetworkAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", %"class.blink::Member.239", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::Member.1174", %"class.base::UnguessableToken", %"class.absl::optional.1188", %"class.blink::Member.1193", %"class.WTF::HashMap.1202", %"class.blink::HeapHashSet.1220", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::MapField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Network::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Network::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.2564", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.237", %"class.WTF::Vector.1667", i32, [4 x i8], %"class.blink::HeapHashMap.2568", i32, i8, [3 x i8] }>
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2518", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2526", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2534", %"class.blink::FrameLoader", %"class.blink::Member.2551", %"class.blink::Member.1399", %"class.blink::Member.2553", %"class.blink::Member.2555", %"class.blink::Member.2557", %"class.blink::Member.2559", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.2561, %"class.blink::Member.2562", %"class.blink::Member.2564", %"class.blink::Member.2575", %"class.blink::Member.2577", %"class.blink::Member.2579", %"class.blink::Member.2581", %"class.blink::Member.2583", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2585", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2588", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2609", %"class.std::__1::unique_ptr.2610", %"class.absl::optional.1141", i32, [4 x i8], %"class.std::__1::unique_ptr.2616", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2624", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2629", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2634", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2637", %"class.blink::Member.2639", %"class.blink::Member.2641", %"class.blink::Member.2643", %"class.mojo::StructPtr.2646", %"class.blink::Member.2654", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2656", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1914", %"class.blink::Member.1916", %"class.blink::Member.1918", i8, i32, i8, i32, %"class.blink::Member.1920", %"class.blink::Member.1497", %"class.blink::FrameLifecycle", %"class.blink::Member.1495", %"class.blink::Member.1495", %"class.blink::Member.1495", %"class.blink::Member.1495", %"class.blink::Member.1495", %"class.blink::Member.1495", %"class.blink::Member.237", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1922", %"class.blink::Member.1932", i8, %"class.base::UnguessableToken", %"class.absl::optional.1089", %"class.absl::optional.1141", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1495", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1943", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1495", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1957", %"class.blink::Member.1961", %"class.blink::Member.1963", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.blink::Member.1973", %"class.blink::Member.1975", %"class.blink::HeapObserverSet.1977", %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.blink::Member.1989", %"class.blink::Member.1991", %"class.blink::Member.1993", %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.blink::Member.1999", %"class.blink::Member.2001", %"class.blink::Member.2003", %"class.blink::Member.2005", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2233", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2240", %"class.blink::Member.1914", %"class.blink::Member.1914", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2248", %"class.std::__1::unique_ptr.2254", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1943" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1944" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1944" = type { %"class.WTF::HashMap.1947" }
%"class.WTF::HashMap.1947" = type { %"class.WTF::HashTable.1948" }
%"class.WTF::HashTable.1948" = type <{ %"struct.WTF::KeyValuePair.1950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1950" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1951" }
%"class.std::__1::unique_ptr.1951" = type { %"class.std::__1::__compressed_pair.1952" }
%"class.std::__1::__compressed_pair.1952" = type { %"struct.std::__1::__compressed_pair_elem.1953" }
%"struct.std::__1::__compressed_pair_elem.1953" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.WTF::HashMap.760", %"class.std::__1::unique_ptr.765" }
%"class.WTF::HashMap.760" = type { %"class.WTF::HashTable.761" }
%"class.WTF::HashTable.761" = type <{ %"struct.WTF::KeyValuePair.764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.764" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.WTF::Vector.768"* }
%"class.WTF::Vector.768" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1914", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1888", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1888" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1374", %"class.blink::Member.1376", %"class.blink::Member.1374", %"class.blink::Member.1374", %"class.blink::Member.1378" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1382", %"class.blink::Member.1310", %"class.blink::Member.1376", %"class.blink::Member.1384", %"class.blink::Member.1384", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.blink::Member.1430", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1435", %"class.blink::HeapVector.1437" }
%"class.blink::Member.1382" = type { %"class.blink::MemberBase.1383" }
%"class.blink::MemberBase.1383" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1374", %"class.blink::Member.1374" }
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1480", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1488", %"class.WTF::Vector.1488", i8, i32, %"class.blink::Member.1493", %"class.blink::Member.327", %"class.blink::Member.715", %"class.blink::Member.1312", %"class.blink::Member.1681", %"class.blink::Member.1683", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1685", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1691", %"class.blink::Member.1693", %"class.blink::Member.1443", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1695", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.1419", %"class.blink::Member.1399", %"class.blink::Member.1656", %"class.blink::Member.1399", %"class.blink::Member.1399", %"class.blink::Member.1399", %"class.blink::UserActionElementSet", %"class.blink::Member.1708", double, double, i64, i64, %"class.blink::HeapHashSet.1710", %"class.blink::HeapHashSet.1717", i16, i8, %"class.blink::Member.1724", %"class.blink::Member.1726", %"class.blink::Member.1728", %"class.blink::Member.1730", %"class.blink::TextLinkColors", %"class.blink::Member.1732", i8, [7 x i8], %"class.blink::HeapHashMap.1734", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1399", %"class.WTF::Vector.1741", %"class.blink::Member.1746", %"class.blink::Member.1750", i8, %"class.blink::Member.1399", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1752", %"class.blink::HeapVector.1754", %"class.std::__1::unique_ptr.1762", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1768", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1781", %"class.WTF::Vector.1783", i8, i8, %"class.std::__1::unique_ptr.1788", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1419", %"class.blink::HeapVector.1794", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1802", i8, i32, %"class.blink::Member.1804", %"class.blink::Member.1806", %"class.blink::Member.1808", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1810", %"class.WTF::HashMap.1812", %"class.blink::Member.1817", %"class.blink::Member.1819", %"class.blink::Member.1821", %"class.blink::Member.1823", %"class.blink::Member.1310", %"class.blink::Member.1310", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1825", i8, i32, %"class.blink::Member.1832", %"class.blink::Member.1834", i32, %"class.blink::Member.1836", %"class.blink::Member.1838", %"class.blink::Member.1840", %"class.std::__1::unique_ptr.929", i64, %"class.std::__1::unique_ptr.799", i32, i32, %"class.blink::Member.1842", %"class.blink::Member.1844", %"class.blink::Member.1846", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1848", %"class.WTF::Vector.1667", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1850", %"class.blink::Member.1857", %"class.std::__1::unique_ptr.1859", %"class.blink::Member.1865", i8, i8, %"class.WTF::String", %"class.blink::Member.1867", i8, [7 x i8], %"class.blink::HeapHashMap.1869", %"class.blink::HeapObserverSet.1876", %"class.blink::Member.1884", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1886", i32, i8, i8, %"class.blink::WeakMember.1888", %"class.blink::Member.1889" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1480" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1481" }
%"class.blink::HeapHashMap.1481" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"class.base::OnceCallback.434"*, i32, i32 }
%"class.base::OnceCallback.434" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.410" }
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1517", %"class.blink::ThreadState::PrefinalizerRegistration.1525", %"class.blink::Member.1526", %"class.blink::Member.1310", %"class.blink::Member.1528", i8, %"class.blink::Member.1530", %"class.blink::Member.1532", %"class.blink::Member.1534", %"class.blink::Member.1534", %"class.blink::Member.1534", %"class.blink::Member.1534", %"class.blink::Member.1534", %"class.blink::Member.1534", %"class.blink::Member.1536", %"class.blink::Member.1538", %"class.blink::Member.1540", %"class.blink::Member.732", %"class.blink::Member.1542", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.386", %"class.blink::Member.1544", %class.scoped_refptr.1546, %"class.blink::HeapHashSet.1609", %"class.blink::Member.1616", %"class.blink::HeapHashMap.1624", %"class.std::__1::unique_ptr.1631", %"class.blink::Member.1643", %"class.blink::Member.1660", %"class.blink::Member.1662", %"class.blink::Member.1664", %"class.WTF::Vector.1667", %"class.util::TokenType", %"class.WTF::HashSet.1672", %"class.WTF::Deque.1676" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1495", %"class.blink::Member.1497", %"class.blink::Member.1499", %"class.blink::Member.1501", i8, %"class.WTF::Vector.1503" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.255" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.247" }
%"class.WTF::Vector.247" = type { %"class.WTF::VectorBuffer.248" }
%"class.WTF::VectorBuffer.248" = type { %"class.WTF::VectorBufferBase.249", [32 x i8] }
%"class.WTF::VectorBufferBase.249" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.250" }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::HeapVector.252"* }
%"class.blink::HeapVector.252" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.WTF::Vector.258"* }
%"class.WTF::Vector.258" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1503" = type { %"class.WTF::VectorBuffer.1504" }
%"class.WTF::VectorBuffer.1504" = type { %"class.WTF::VectorBufferBase.1505" }
%"class.WTF::VectorBufferBase.1505" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote.1507", i8, %"class.WTF::String" }
%"class.mojo::Remote.1507" = type { %"class.mojo::internal::InterfacePtrState.1508" }
%"class.mojo::internal::InterfacePtrState.1508" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1509" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.805, %"class.std::__1::unique_ptr.406", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.425, i32 }>
%class.scoped_refptr.805 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.425, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.863", %"class.absl::optional.868", %"class.absl::optional.822", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.888", i8, [7 x i8], %class.scoped_refptr.425, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.446" }>
%"class.base::RefCountedThreadSafe.446" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.292 }
%union.anon.292 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.462" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.462" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.427 }
%class.scoped_refptr.427 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.428", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.428" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.429" }
%"struct.std::__1::atomic.429" = type { %"struct.std::__1::__atomic_base.430" }
%"struct.std::__1::__atomic_base.430" = type { %"struct.std::__1::__atomic_base.431" }
%"struct.std::__1::__atomic_base.431" = type { %"struct.std::__1::__cxx_atomic_impl.432" }
%"struct.std::__1::__cxx_atomic_impl.432" = type { %"struct.std::__1::__cxx_atomic_base_impl.433" }
%"struct.std::__1::__cxx_atomic_base_impl.433" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.434", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.425, %"class.std::__1::unique_ptr.806", %"class.absl::optional.816", %"struct.std::__1::atomic.705", i8, i8, i8, i8, i32, i32, %"class.absl::optional.822", %"class.std::__1::unique_ptr.827", i8, i64, %class.scoped_refptr.860, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.862" }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.425, i8, %"class.mojo::ScopedHandleBase.809", %class.scoped_refptr.810, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.811", i8*, %"class.base::WeakPtrFactory.812" }
%"class.mojo::ScopedHandleBase.809" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.810 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.811" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.812" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.821", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.821" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.830", i8, i64, %class.scoped_refptr.831, %class.scoped_refptr.856 }
%"class.base::RepeatingCallback.830" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.831 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.832", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.834", %"class.std::__1::map.845", i8, [7 x i8] }>
%"class.base::RefCounted.832" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.833 }
%class.scoped_refptr.833 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.834" = type { %"class.std::__1::__tree.835" }
%"class.std::__1::__tree.835" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.836", %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::map.845" = type { %"class.std::__1::__tree.846" }
%"class.std::__1::__tree.846" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.847", %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%class.scoped_refptr.856 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.860 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.439 }
%class.scoped_refptr.439 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2517", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.425, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2517" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.861 }
%class.scoped_refptr.861 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.862" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.863" = type { %"class.absl::optional_internal::optional_data.864" }
%"class.absl::optional_internal::optional_data.864" = type { %"class.absl::optional_internal::optional_data_base.865" }
%"class.absl::optional_internal::optional_data_base.865" = type { %"class.absl::optional_internal::optional_data_dtor_base.866" }
%"class.absl::optional_internal::optional_data_dtor_base.866" = type { i8, %union.anon.867 }
%union.anon.867 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.868" = type { %"class.absl::optional_internal::optional_data.869" }
%"class.absl::optional_internal::optional_data.869" = type { %"class.absl::optional_internal::optional_data_base.870" }
%"class.absl::optional_internal::optional_data_base.870" = type { %"class.absl::optional_internal::optional_data_dtor_base.871" }
%"class.absl::optional_internal::optional_data_dtor_base.871" = type { i8, [7 x i8], %union.anon.872 }
%union.anon.872 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.822" = type { %"class.absl::optional_internal::optional_data.823" }
%"class.absl::optional_internal::optional_data.823" = type { %"class.absl::optional_internal::optional_data_base.824" }
%"class.absl::optional_internal::optional_data_base.824" = type { %"class.absl::optional_internal::optional_data_dtor_base.825" }
%"class.absl::optional_internal::optional_data_dtor_base.825" = type { i8, %union.anon.826 }
%union.anon.826 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.873 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.873 = type { %"class.std::__1::map.876" }
%"class.std::__1::map.876" = type { %"class.std::__1::__tree.877" }
%"class.std::__1::__tree.877" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.878", %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.887"*, i64 }
%"class.std::__1::unique_ptr.887" = type opaque
%"class.std::__1::map.888" = type { %"class.std::__1::__tree.889" }
%"class.std::__1::__tree.889" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.415", %"class.absl::optional.420", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.441", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.463", %"class.std::__1::map.474", i64, %"class.base::OnceCallback.434", %"class.base::OnceCallback.483", i8, %class.scoped_refptr.425, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.484" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.420" = type { %"class.absl::optional_internal::optional_data.421" }
%"class.absl::optional_internal::optional_data.421" = type { %"class.absl::optional_internal::optional_data_base.422" }
%"class.absl::optional_internal::optional_data_base.422" = type { %"class.absl::optional_internal::optional_data_dtor_base.423" }
%"class.absl::optional_internal::optional_data_dtor_base.423" = type { i8, %union.anon.424 }
%union.anon.424 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.434" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.425, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.440 }
%class.scoped_refptr.440 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.444", %class.scoped_refptr.445 }
%"class.base::RepeatingCallback.444" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.445 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.446", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.463" = type { %"class.std::__1::__tree.464" }
%"class.std::__1::__tree.464" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.465", %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::map.474" = type { %"class.std::__1::__tree.475" }
%"class.std::__1::__tree.475" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.476", %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.base::OnceCallback.483" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.434" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.484" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.425 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.426" }>
%"class.base::RefCountedThreadSafe.426" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1509" = type { %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.333", i32, i8, [3 x i8], %"class.blink::HeapVector.335", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.344", %"class.blink::Member.346", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.355", %"class.blink::Member.497", %"class.blink::Member.499", i8 }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.264" }
%"class.WTF::HashMap.264" = type { %"class.WTF::HashTable.265" }
%"class.WTF::HashTable.265" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.272" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.272" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.273" }
%"class.blink::HeapHashMap.273" = type { %"class.WTF::HashMap.276" }
%"class.WTF::HashMap.276" = type { %"class.WTF::HashTable.277" }
%"class.WTF::HashTable.277" = type <{ %"struct.WTF::KeyValuePair.279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.279" = type { i8*, %"class.blink::Member.3584" }
%"class.blink::Member.3584" = type { %"class.blink::MemberBase.3585" }
%"class.blink::MemberBase.3585" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3586" }
%"class.blink::Member.3586" = type { %"class.blink::MemberBase.3587" }
%"class.blink::MemberBase.3587" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.280, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.315", %"class.blink::Member.327", i32, [4 x i8], %"class.WTF::HashSet.329", i32, i32 }
%class.scoped_refptr.280 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.281", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.286 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.281" = type { %"class.absl::optional_internal::optional_data.282" }
%"class.absl::optional_internal::optional_data.282" = type { %"class.absl::optional_internal::optional_data_base.283" }
%"class.absl::optional_internal::optional_data_base.283" = type { %"class.absl::optional_internal::optional_data_dtor_base.284" }
%"class.absl::optional_internal::optional_data_dtor_base.284" = type { i8, %union.anon.285 }
%union.anon.285 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.286 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.302", %"class.std::__1::map.311"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.281" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.294", %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::map.302" = type { %"class.std::__1::__tree.303" }
%"class.std::__1::__tree.303" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::map.311" = type opaque
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.318"*, %"struct.std::__1::pair.318"*, %"class.std::__1::__compressed_pair.319" }
%"struct.std::__1::pair.318" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::pair.318"* }
%"class.WTF::HashSet.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.335" = type { %"class.WTF::Vector.338" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340" }
%"class.WTF::VectorBufferBase.340" = type { %"class.blink::Member.341"*, i32, i32 }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.348", i32, i32 }
%"class.blink::HeapHashMap.348" = type { %"class.WTF::HashMap.351" }
%"class.WTF::HashMap.351" = type { %"class.WTF::HashTable.352" }
%"class.WTF::HashTable.352" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.358", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.358" = type { %"class.std::__1::unique_ptr.359" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.362" }
%"class.WTF::Vector.362" = type { %"class.WTF::VectorBuffer.363" }
%"class.WTF::VectorBuffer.363" = type { %"class.WTF::VectorBufferBase.364" }
%"class.WTF::VectorBufferBase.364" = type { %"class.mojo::StructPtr.365"*, i32, i32 }
%"class.mojo::StructPtr.365" = type { %"class.std::__1::unique_ptr.366" }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.369", %"class.WTF::HashMap.376", %"class.WTF::HashMap.381", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.386", i32, %"class.mojo::StructPtr.391", %"class.WTF::Vector.386" }
%"class.mojo::StructPtr.369" = type { %"class.std::__1::unique_ptr.370" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.380" = type opaque
%"class.WTF::HashMap.381" = type { %"class.WTF::HashTable.382" }
%"class.WTF::HashTable.382" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.391" = type { %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.386", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.488" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.406", i32 }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.346", i8, [7 x i8], %"class.WTF::Vector.362", %"class.blink::HeapVector.503", i8, [7 x i8], %"class.WTF::HashSet.329", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.503" = type { %"class.WTF::Vector.506" }
%"class.WTF::Vector.506" = type { %"class.WTF::VectorBuffer.507" }
%"class.WTF::VectorBuffer.507" = type { %"class.WTF::VectorBufferBase.508" }
%"class.WTF::VectorBufferBase.508" = type { %"class.blink::Member.509"*, i32, i32 }
%"class.blink::Member.509" = type opaque
%"class.blink::Supplementable.1517" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1518" }
%"class.blink::HeapHashMap.1518" = type { %"class.WTF::HashMap.1521" }
%"class.WTF::HashMap.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"struct.WTF::KeyValuePair.1524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1524" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1525" = type { i8 }
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1534" = type { %"class.blink::MemberBase.1535" }
%"class.blink::MemberBase.1535" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1546 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.1548", i64, %"class.WTF::Vector.1552", %"class.WTF::Vector.1557", %"class.WTF::Vector.1563", %"class.WTF::Vector.1581", %class.scoped_refptr.280, %"class.WTF::HashMap.1587", %"class.WTF::Vector.1592", %"class.WTF::Vector.1552", %"class.WTF::Vector.1598", %"class.WTF::HashMap.1604", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1547" }
%"class.base::RefCountedThreadSafe.1547" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { i8* }
%"class.WTF::Vector.1557" = type { %"class.WTF::VectorBuffer.1558" }
%"class.WTF::VectorBuffer.1558" = type { %"class.WTF::VectorBufferBase.1559", [8 x i8] }
%"class.WTF::VectorBufferBase.1559" = type { %class.scoped_refptr.1560*, i32, i32 }
%class.scoped_refptr.1560 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1563" = type { %"class.WTF::VectorBuffer.1564" }
%"class.WTF::VectorBuffer.1564" = type { %"class.WTF::VectorBufferBase.1565" }
%"class.WTF::VectorBufferBase.1565" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1573" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1566 }
%class.scoped_refptr.1566 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1581" = type { %"class.WTF::VectorBuffer.1582" }
%"class.WTF::VectorBuffer.1582" = type { %"class.WTF::VectorBufferBase.1583" }
%"class.WTF::VectorBufferBase.1583" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1584", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1584" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"class.WTF::Vector.1592" = type { %"class.WTF::VectorBuffer.1593" }
%"class.WTF::VectorBuffer.1593" = type { %"class.WTF::VectorBufferBase.1594" }
%"class.WTF::VectorBufferBase.1594" = type { %"class.mojo::ScopedHandleBase.1595"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1595" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1552" = type { %"class.WTF::VectorBuffer.1553" }
%"class.WTF::VectorBuffer.1553" = type { %"class.WTF::VectorBufferBase.1554", [16 x i8] }
%"class.WTF::VectorBufferBase.1554" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1598" = type { %"class.WTF::VectorBuffer.1599" }
%"class.WTF::VectorBuffer.1599" = type { %"class.WTF::VectorBufferBase.1600" }
%"class.WTF::VectorBufferBase.1600" = type { %"class.mojo::PendingRemote.1601"*, i32, i32 }
%"class.mojo::PendingRemote.1601" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1604" = type { %"class.WTF::HashTable.1605" }
%"class.WTF::HashTable.1605" = type <{ %"struct.WTF::KeyValuePair.1608"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1608" = type { i8**, %"class.std::__1::unique_ptr.3593" }
%"class.std::__1::unique_ptr.3593" = type { %"class.std::__1::__compressed_pair.3594" }
%"class.std::__1::__compressed_pair.3594" = type { %"struct.std::__1::__compressed_pair_elem.3595" }
%"struct.std::__1::__compressed_pair_elem.3595" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1609" = type { %"class.WTF::HashSet.1612" }
%"class.WTF::HashSet.1612" = type { %"class.WTF::HashTable.1613" }
%"class.WTF::HashTable.1613" = type <{ %"class.blink::WeakMember.1615"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1615" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1618", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::Member.1622", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1353" }
%"class.absl::optional.1353" = type { %"class.absl::optional_internal::optional_data.1354" }
%"class.absl::optional_internal::optional_data.1354" = type { %"class.absl::optional_internal::optional_data_base.1355" }
%"class.absl::optional_internal::optional_data_base.1355" = type { %"class.absl::optional_internal::optional_data_dtor_base.1356" }
%"class.absl::optional_internal::optional_data_dtor_base.1356" = type { i8, %union.anon.1357 }
%union.anon.1357 = type { i64 }
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::Event"* }
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1624" = type { %"class.WTF::HashMap.1627" }
%"class.WTF::HashMap.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"struct.WTF::KeyValuePair.1630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1630" = type opaque
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1634", %"class.base::WeakPtrFactory.1639" }
%"class.WTF::HashMap.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"struct.WTF::KeyValuePair.1638"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1638" = type opaque
%"class.base::WeakPtrFactory.1639" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.237", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1656", %"class.blink::Member.1658", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1229" }
%"class.blink::WeakMember.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1647", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1649", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::ContainerNode"* }
%"class.blink::LayoutObject" = type opaque
%"class.blink::HeapHashMap.1649" = type { %"class.WTF::HashMap.1652" }
%"class.WTF::HashMap.1652" = type { %"class.WTF::HashTable.1653" }
%"class.WTF::HashTable.1653" = type <{ %"struct.WTF::KeyValuePair.1655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1655" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.1374", i32, i32 }
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1493", %"class.blink::Member.1908", %"class.blink::Member.1910" }
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1910" = type { %"class.blink::MemberBase.1911" }
%"class.blink::MemberBase.1911" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1493", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1904" }
%"class.blink::Member.1904" = type { %"class.blink::MemberBase.1905" }
%"class.blink::MemberBase.1905" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::HeapHashMap.1666"* }
%"class.blink::HeapHashMap.1666" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias.1506" }
%"class.base::StrongAlias.1506" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1672" = type { %"class.WTF::HashTable.1673" }
%"class.WTF::HashTable.1673" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1676" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1679" }
%"class.WTF::VectorBuffer.1679" = type { %"class.WTF::VectorBufferBase.1680" }
%"class.WTF::VectorBufferBase.1680" = type { i64*, i32, i32 }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.333", i32, i8, [3 x i8], %"class.blink::HeapVector.335", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.344", %"class.blink::Member.346", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.355", %"class.blink::Member.497", %"class.blink::Member.499", i8, [7 x i8] }>
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.2370", %"class.blink::Member.2371", %"class.blink::Member.2373", %"class.blink::Member.2377", %class.scoped_refptr.1372, %class.scoped_refptr.1372, %"class.blink::Member.2379", %"class.blink::Member.2381", %"class.blink::Member.2387", %"class.blink::Member.2391", %"class.blink::Member.2442", %"class.blink::HeapHashMap.2444", %"class.blink::HeapHashSet.2451", %"class.blink::HeapHashSet.2451", %"class.blink::HeapHashMap.2458", %"class.blink::HeapVector.2465", %"class.blink::Member.2472", %"class.blink::HeapTaskRunnerTimer.2474", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.2475", %"class.WTF::Vector.2482", %"class.blink::HeapHashSet.2488", %"class.blink::HeapHashSet.2488", %"class.std::__1::unique_ptr.2494", %"class.base::WeakPtr.2247", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.2504", %"class.blink::Member.2507", i8, i8, %"class.base::WeakPtrFactory.2509" }
%"class.blink::ThreadState::PrefinalizerRegistration.2370" = type { i8 }
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.2373" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.1372 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.2379" = type { %"class.blink::MemberBase.2380" }
%"class.blink::MemberBase.2380" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.2381" = type { %"class.blink::MemberBase.2382" }
%"class.blink::MemberBase.2382" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.2385" }
%"class.blink::Member.2385" = type { %"class.blink::MemberBase.2386" }
%"class.blink::MemberBase.2386" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.2387" = type { %"class.blink::MemberBase.2388" }
%"class.blink::MemberBase.2388" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.2391" = type { %"class.blink::MemberBase.2392" }
%"class.blink::MemberBase.2392" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.2395", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.2397", %"class.WTF::HashSet.2402", i8, [3 x i8], i32, %"class.blink::HeapHashMap.2406", %"class.std::__1::map.2413", %"class.std::__1::map.2424", %"class.std::__1::unique_ptr.2433", %"class.blink::Member.2381", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.2439", %"class.mojo::InlinedStructPtr.2441", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.2395" = type { %"class.blink::MemberBase.2396" }
%"class.blink::MemberBase.2396" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.2397" = type { %"class.WTF::HashTable.2398" }
%"class.WTF::HashTable.2398" = type <{ %"struct.WTF::KeyValuePair.2401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2401" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.2402" = type { %"class.WTF::HashTable.2403" }
%"class.WTF::HashTable.2403" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.2406" = type { %"class.WTF::HashMap.2409" }
%"class.WTF::HashMap.2409" = type { %"class.WTF::HashTable.2410" }
%"class.WTF::HashTable.2410" = type <{ %"struct.WTF::KeyValuePair.2412"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2412" = type opaque
%"class.std::__1::map.2413" = type { %"class.std::__1::__tree.2414" }
%"class.std::__1::__tree.2414" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2415", %"class.std::__1::__compressed_pair.2419" }
%"class.std::__1::__compressed_pair.2415" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.2419" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::map.2424" = type { %"class.std::__1::__tree.2425" }
%"class.std::__1::__tree.2425" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2426", %"class.std::__1::__compressed_pair.2430" }
%"class.std::__1::__compressed_pair.2426" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.2430" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::unique_ptr.2433" = type { %"class.std::__1::__compressed_pair.2434" }
%"class.std::__1::__compressed_pair.2434" = type { %"struct.std::__1::__compressed_pair_elem.2435" }
%"struct.std::__1::__compressed_pair_elem.2435" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.2247", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.2439" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.2441" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.2444" = type { %"class.WTF::HashMap.2447" }
%"class.WTF::HashMap.2447" = type { %"class.WTF::HashTable.2448" }
%"class.WTF::HashTable.2448" = type <{ %"struct.WTF::KeyValuePair.2450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2450" = type opaque
%"class.blink::HeapHashSet.2451" = type { %"class.WTF::HashSet.2454" }
%"class.WTF::HashSet.2454" = type { %"class.WTF::HashTable.2455" }
%"class.WTF::HashTable.2455" = type <{ %"class.blink::WeakMember.2457"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2457" = type { %"class.blink::MemberBase.2264" }
%"class.blink::MemberBase.2264" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2267", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2287", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2342", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2353", %"class.blink::ResourceResponse", %class.scoped_refptr.1323, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2267" = type { %"class.absl::optional_internal::optional_data.2268" }
%"class.absl::optional_internal::optional_data.2268" = type { %"class.absl::optional_internal::optional_data_base.2269" }
%"class.absl::optional_internal::optional_data_base.2269" = type { %"class.absl::optional_internal::optional_data_dtor_base.2270" }
%"class.absl::optional_internal::optional_data_dtor_base.2270" = type { i8, %union.anon.2271 }
%union.anon.2271 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2272", i8, %"class.absl::optional.2277", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2272" = type { %"class.absl::optional_internal::optional_data.2273" }
%"class.absl::optional_internal::optional_data.2273" = type { %"class.absl::optional_internal::optional_data_base.2274" }
%"class.absl::optional_internal::optional_data_base.2274" = type { %"class.absl::optional_internal::optional_data_dtor_base.2275" }
%"class.absl::optional_internal::optional_data_dtor_base.2275" = type { i8, [7 x i8], %union.anon.2276 }
%union.anon.2276 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2277" = type { %"class.absl::optional_internal::optional_data.2278" }
%"class.absl::optional_internal::optional_data.2278" = type { %"class.absl::optional_internal::optional_data_base.2279" }
%"class.absl::optional_internal::optional_data_base.2279" = type { %"class.absl::optional_internal::optional_data_dtor_base.2280" }
%"class.absl::optional_internal::optional_data_dtor_base.2280" = type { i8, %union.anon.2281 }
%union.anon.2281 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2282", %"class.WTF::Vector.386" }
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.2284" }
%"class.WTF::VectorBufferBase.2284" = type { i32*, i32, i32 }
%"class.WTF::Vector.2287" = type { %"class.WTF::VectorBuffer.2288" }
%"class.WTF::VectorBuffer.2288" = type { %"class.WTF::VectorBufferBase.2289" }
%"class.WTF::VectorBufferBase.2289" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2338" }
%"class.WTF::HashMap.2338" = type { %"class.WTF::HashTable.2339" }
%"class.WTF::HashTable.2339" = type <{ %"struct.WTF::KeyValuePair.2341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2341" = type <{ %"class.blink::WeakMember.3661", i32, [4 x i8] }>
%"class.blink::WeakMember.3661" = type { %"class.blink::MemberBase.3662" }
%"class.blink::MemberBase.3662" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2262", [7 x i8], %"class.blink::Member.2263", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2262" = type { i8 }
%"class.blink::Member.2263" = type { %"class.blink::MemberBase.2264" }
%"class.blink::HeapHashSet.2342" = type { %"class.WTF::HashSet.2345" }
%"class.WTF::HashSet.2345" = type { %"class.WTF::HashTable.2346" }
%"class.WTF::HashTable.2346" = type <{ %"class.blink::WeakMember.2348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2348" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.918", i8, i8, %class.scoped_refptr.1336, %class.scoped_refptr.2349, %class.scoped_refptr.2351 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.std::__1::pair.922"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.922" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1336 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1337", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1337" = type { %"class.base::RefCounted.1338" }
%"class.base::RefCounted.1338" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.1339" }
%"class.blink::PersistentBase.1339" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1342" }
%"class.blink::HeapHashMap.1342" = type { %"class.WTF::HashMap.1345" }
%"class.WTF::HashMap.1345" = type { %"class.WTF::HashTable.1346" }
%"class.WTF::HashTable.1346" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type { %"class.blink::WeakMember.1349", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.2349 = type { %"class.base::RefCountedData.2350"* }
%"class.base::RefCountedData.2350" = type opaque
%class.scoped_refptr.2351 = type { %"class.base::RefCountedData.2352"* }
%"class.base::RefCountedData.2352" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.942" }
%"class.base::time_internal::TimeBase.942" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.286, %class.scoped_refptr.286, %class.scoped_refptr.286, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2290, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2302", %"class.absl::optional.2307", %"class.absl::optional.2312", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1141", %"class.absl::optional.2312", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2312", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1141", %"class.absl::optional.2317", i8, %class.scoped_refptr.2323 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1197" }
%"class.WTF::HashMap.1197" = type { %"class.WTF::HashTable.1198" }
%"class.WTF::HashTable.1198" = type <{ %"struct.WTF::KeyValuePair.1201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1201" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.2290 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2291", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.2300, i8, %"class.url::Origin" }
%"class.base::RefCounted.2291" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2292" }
%"class.std::__1::vector.2292" = type { %"class.std::__1::__vector_base.2293" }
%"class.std::__1::__vector_base.2293" = type { %"class.std::__1::unique_ptr.2294"*, %"class.std::__1::unique_ptr.2294"*, %"class.std::__1::__compressed_pair.2295" }
%"class.std::__1::unique_ptr.2294" = type { %"class.std::__1::__compressed_pair.3588" }
%"class.std::__1::__compressed_pair.3588" = type { %"struct.std::__1::__compressed_pair_elem.3589" }
%"struct.std::__1::__compressed_pair_elem.3589" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2295" = type { %"struct.std::__1::__compressed_pair_elem.2296" }
%"struct.std::__1::__compressed_pair_elem.2296" = type { %"class.std::__1::unique_ptr.2294"* }
%class.scoped_refptr.2300 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2301", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2301" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2302" = type { %"class.absl::optional_internal::optional_data.2303" }
%"class.absl::optional_internal::optional_data.2303" = type { %"class.absl::optional_internal::optional_data_base.2304" }
%"class.absl::optional_internal::optional_data_base.2304" = type { %"class.absl::optional_internal::optional_data_dtor_base.2305" }
%"class.absl::optional_internal::optional_data_dtor_base.2305" = type { i8, %union.anon.2306 }
%union.anon.2306 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2307" = type { %"class.absl::optional_internal::optional_data.2308" }
%"class.absl::optional_internal::optional_data.2308" = type { %"class.absl::optional_internal::optional_data_base.2309" }
%"class.absl::optional_internal::optional_data_base.2309" = type { %"class.absl::optional_internal::optional_data_dtor_base.2310" }
%"class.absl::optional_internal::optional_data_dtor_base.2310" = type { i8, %union.anon.2311 }
%union.anon.2311 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1238", %"class.WTF::Vector.386", %"class.WTF::String" }
%"class.WTF::Vector.1238" = type { %"class.WTF::VectorBuffer.1239" }
%"class.WTF::VectorBuffer.1239" = type { %"class.WTF::VectorBufferBase.1240" }
%"class.WTF::VectorBufferBase.1240" = type { %class.scoped_refptr.286*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.415", %"class.absl::optional.415" }
%"class.absl::optional.2312" = type { %"class.absl::optional_internal::optional_data.2313" }
%"class.absl::optional_internal::optional_data.2313" = type { %"class.absl::optional_internal::optional_data_base.2314" }
%"class.absl::optional_internal::optional_data_base.2314" = type { %"class.absl::optional_internal::optional_data_dtor_base.2315" }
%"class.absl::optional_internal::optional_data_dtor_base.2315" = type { i8, %union.anon.2316 }
%union.anon.2316 = type { %"class.WTF::String" }
%"class.absl::optional.2317" = type { %"class.absl::optional_internal::optional_data.2318" }
%"class.absl::optional_internal::optional_data.2318" = type { %"class.absl::optional_internal::optional_data_base.2319" }
%"class.absl::optional_internal::optional_data_base.2319" = type { %"class.absl::optional_internal::optional_data_dtor_base.2320" }
%"class.absl::optional_internal::optional_data_dtor_base.2320" = type { i8, %union.anon.2321 }
%union.anon.2321 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2322" }
%"class.mojo::PendingRemote.2322" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2323 = type { %"class.base::RefCountedData.2324"* }
%"class.base::RefCountedData.2324" = type { %"class.base::RefCountedThreadSafe.2325", %"class.base::internal::flat_tree.2326" }
%"class.base::RefCountedThreadSafe.2325" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2326" = type { %"class.std::__1::vector.2327" }
%"class.std::__1::vector.2327" = type { %"class.std::__1::__vector_base.2328" }
%"class.std::__1::__vector_base.2328" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2329" }
%"class.std::__1::__compressed_pair.2329" = type { %"struct.std::__1::__compressed_pair_elem.2330" }
%"struct.std::__1::__compressed_pair_elem.2330" = type { i32* }
%"class.blink::Member.2353" = type { %"class.blink::MemberBase.2354" }
%"class.blink::MemberBase.2354" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1253", %class.scoped_refptr.1268, %class.scoped_refptr.1271, %"struct.blink::CacheControlHeader", %"class.absl::optional.415", %"class.absl::optional.1274", %"class.absl::optional.1274", %"class.absl::optional.1274", i64, %"class.blink::KURL", %"class.WTF::Vector.1279", %"class.WTF::String", %"class.WTF::Vector.386", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1141", %"class.WTF::Vector.386", %"class.blink::KURL", %"class.absl::optional.1023" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.974", i8 }
%"struct.std::__1::array.974" = type { [16 x i8] }
%"class.absl::optional.1253" = type { %"class.absl::optional_internal::optional_data.1254" }
%"class.absl::optional_internal::optional_data.1254" = type { %"class.absl::optional_internal::optional_data_base.1255" }
%"class.absl::optional_internal::optional_data_base.1255" = type { %"class.absl::optional_internal::optional_data_dtor_base.1256" }
%"class.absl::optional_internal::optional_data_dtor_base.1256" = type { i8, %union.anon.1257 }
%union.anon.1257 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.386", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1258", %"class.WTF::Vector.1263" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1268 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type { %"class.WTF::RefCounted.1269", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1271 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type { %"class.WTF::RefCounted.1272", i32, %"class.WTF::String", %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::RefCounted.1272" = type { %"class.base::RefCounted.1273" }
%"class.base::RefCounted.1273" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1274" = type { %"class.absl::optional_internal::optional_data.1275" }
%"class.absl::optional_internal::optional_data.1275" = type { %"class.absl::optional_internal::optional_data_base.1276" }
%"class.absl::optional_internal::optional_data_base.1276" = type { %"class.absl::optional_internal::optional_data_dtor_base.1277" }
%"class.absl::optional_internal::optional_data_dtor_base.1277" = type { i8, %union.anon.1278 }
%union.anon.1278 = type { %"class.base::Time" }
%"class.WTF::Vector.1279" = type { %"class.WTF::VectorBuffer.1280" }
%"class.WTF::VectorBuffer.1280" = type { %"class.WTF::VectorBufferBase.1281" }
%"class.WTF::VectorBufferBase.1281" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1023" = type { %"class.absl::optional_internal::optional_data.1024" }
%"class.absl::optional_internal::optional_data.1024" = type { %"class.absl::optional_internal::optional_data_base.1025" }
%"class.absl::optional_internal::optional_data_base.1025" = type { %"class.absl::optional_internal::optional_data_dtor_base.1026" }
%"class.absl::optional_internal::optional_data_dtor_base.1026" = type { i8, %union.anon.1027 }
%union.anon.1027 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1323 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1324", i64, %"class.WTF::Vector.1293", %"class.WTF::Vector.1326" }
%"class.WTF::RefCounted.1324" = type { %"class.base::RefCounted.1325" }
%"class.base::RefCounted.1325" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { i8*, i32, i32 }
%"class.WTF::Vector.1326" = type { %"class.WTF::VectorBuffer.1327" }
%"class.WTF::VectorBuffer.1327" = type { %"class.WTF::VectorBufferBase.1328" }
%"class.WTF::VectorBufferBase.1328" = type { %"class.std::__1::unique_ptr.1329"*, i32, i32 }
%"class.std::__1::unique_ptr.1329" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2355" }
%"class.std::__1::__tree.2355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2356", %"class.std::__1::__compressed_pair.2360" }
%"class.std::__1::__compressed_pair.2356" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.2360" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.blink::HeapHashMap.2458" = type { %"class.WTF::HashMap.2461" }
%"class.WTF::HashMap.2461" = type { %"class.WTF::HashTable.2462" }
%"class.WTF::HashTable.2462" = type <{ %"struct.WTF::KeyValuePair.2464"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2464" = type opaque
%"class.blink::HeapVector.2465" = type { %"class.WTF::Vector.2468" }
%"class.WTF::Vector.2468" = type { %"class.WTF::VectorBuffer.2469" }
%"class.WTF::VectorBuffer.2469" = type { %"class.WTF::VectorBufferBase.2470" }
%"class.WTF::VectorBufferBase.2470" = type { %"class.blink::Member.2263"*, i32, i32 }
%"class.blink::Member.2472" = type { %"class.blink::MemberBase.2473" }
%"class.blink::MemberBase.2473" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.2474" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.723", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1372, %"class.base::WeakPtrFactory.1373" }
%"class.base::WeakPtrFactory.1373" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.723" = type { %"class.blink::MemberBase.716" }
%"class.blink::HeapHashMap.2475" = type { %"class.WTF::HashMap.2478" }
%"class.WTF::HashMap.2478" = type { %"class.WTF::HashTable.2479" }
%"class.WTF::HashTable.2479" = type <{ %"struct.WTF::KeyValuePair.2481"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2481" = type opaque
%"class.WTF::Vector.2482" = type { %"class.WTF::VectorBuffer.2483" }
%"class.WTF::VectorBuffer.2483" = type { %"class.WTF::VectorBufferBase.2484" }
%"class.WTF::VectorBufferBase.2484" = type { %class.scoped_refptr.2485*, i32, i32 }
%class.scoped_refptr.2485 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.2488" = type { %"class.WTF::HashSet.2491" }
%"class.WTF::HashSet.2491" = type { %"class.WTF::HashTable.2492" }
%"class.WTF::HashTable.2492" = type <{ %"class.blink::Member.2353"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2494" = type { %"class.std::__1::__compressed_pair.2495" }
%"class.std::__1::__compressed_pair.2495" = type { %"struct.std::__1::__compressed_pair_elem.2496" }
%"struct.std::__1::__compressed_pair_elem.2496" = type { %"class.WTF::HashSet.2497"* }
%"class.WTF::HashSet.2497" = type { %"class.WTF::HashTable.2498" }
%"class.WTF::HashTable.2498" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.2247" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.2504" = type { %"class.blink::Member.2505" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.2509" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.1310", %"class.blink::HeapHashSet.1316" }
%"class.blink::HeapHashSet.1316" = type { %"class.WTF::HashSet.1319" }
%"class.WTF::HashSet.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"class.blink::WeakMember.1322"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1322" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1685" = type { %"class.std::__1::__compressed_pair.1686" }
%"class.std::__1::__compressed_pair.1686" = type { %"struct.std::__1::__compressed_pair_elem.1687" }
%"struct.std::__1::__compressed_pair_elem.1687" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.744" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.blink::KURL"* }
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1445", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1447, %"class.WTF::Vector.1448", %"class.WTF::Vector.1448", %"class.blink::Member.1374", %"class.blink::Member.1453", %"class.blink::HeapHashSet.1457", %"class.blink::Member.1310", %"class.WTF::HashSet.1464", %"class.WTF::TextPosition", %"class.blink::Member.1468", %"class.blink::HeapVector.1470", %"class.blink::Member.1477" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1447 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1455" }
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1457" = type { %"class.WTF::HashSet.1460" }
%"class.WTF::HashSet.1460" = type { %"class.WTF::HashTable.1461" }
%"class.WTF::HashTable.1461" = type <{ %"class.blink::WeakMember.1463"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1463" = type { %"class.blink::MemberBase.1377" }
%"class.WTF::HashSet.1464" = type { %"class.WTF::HashTable.1465" }
%"class.WTF::HashTable.1465" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1470" = type { %"class.WTF::Vector.1473" }
%"class.WTF::Vector.1473" = type { %"class.WTF::VectorBuffer.1474" }
%"class.WTF::VectorBuffer.1474" = type { %"class.WTF::VectorBufferBase.1475" }
%"class.WTF::VectorBufferBase.1475" = type { %"class.blink::Member.1453"*, i32, i32 }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1695" = type { %"class.WTF::VectorBuffer.1696" }
%"class.WTF::VectorBuffer.1696" = type { %"class.WTF::VectorBufferBase.1697" }
%"class.WTF::VectorBufferBase.1697" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1336 }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.1310", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.1374", %"class.blink::Member.1374", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1701" }
%"class.blink::HeapHashMap.1701" = type { %"class.WTF::HashMap.1704" }
%"class.WTF::HashMap.1704" = type { %"class.WTF::HashTable.1705" }
%"class.WTF::HashTable.1705" = type <{ %"struct.WTF::KeyValuePair.1707"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1707" = type opaque
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1710" = type { %"class.WTF::HashSet.1713" }
%"class.WTF::HashSet.1713" = type { %"class.WTF::HashTable.1714" }
%"class.WTF::HashTable.1714" = type <{ %"class.blink::WeakMember.1716"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1716" = type opaque
%"class.blink::HeapHashSet.1717" = type { %"class.WTF::HashSet.1720" }
%"class.WTF::HashSet.1720" = type { %"class.WTF::HashTable.1721" }
%"class.WTF::HashTable.1721" = type <{ %"class.blink::WeakMember.1723"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1723" = type opaque
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1726" = type { %"class.blink::MemberBase.1727" }
%"class.blink::MemberBase.1727" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1728" = type { %"class.blink::MemberBase.1729" }
%"class.blink::MemberBase.1729" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1376", %"class.blink::HeapVector.1437" }
%"class.blink::Member.1730" = type { %"class.blink::MemberBase.1731" }
%"class.blink::MemberBase.1731" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1734" = type { %"class.WTF::HashMap.1737" }
%"class.WTF::HashMap.1737" = type { %"class.WTF::HashTable.1738" }
%"class.WTF::HashTable.1738" = type <{ %"struct.WTF::KeyValuePair.1740"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1740" = type opaque
%"class.WTF::Vector.1741" = type { %"class.WTF::VectorBuffer.1742" }
%"class.WTF::VectorBuffer.1742" = type { %"class.WTF::VectorBufferBase.1743" }
%"class.WTF::VectorBufferBase.1743" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1752" = type { %"class.blink::MemberBase.1753" }
%"class.blink::MemberBase.1753" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1754" = type { %"class.WTF::Vector.1757" }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.blink::Member.1760"*, i32, i32 }
%"class.blink::Member.1760" = type opaque
%"class.std::__1::unique_ptr.1762" = type { %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1768" = type { %"class.WTF::HashSet.1771" }
%"class.WTF::HashSet.1771" = type { %"class.WTF::HashTable.1772" }
%"class.WTF::HashTable.1772" = type <{ %"class.blink::WeakMember.1774"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1774" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1775", i32, [4 x i8] }>
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.std::__1::pair.1778"*, i32, i32 }
%"struct.std::__1::pair.1778" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1783" = type { %"class.WTF::VectorBuffer.1784" }
%"class.WTF::VectorBuffer.1784" = type { %"class.WTF::VectorBufferBase.1785" }
%"class.WTF::VectorBufferBase.1785" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1419" = type { %"class.WTF::Vector.1422" }
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"class.blink::Member.1399"*, i32, i32 }
%"class.blink::HeapVector.1794" = type { %"class.WTF::Vector.1797" }
%"class.WTF::Vector.1797" = type { %"class.WTF::VectorBuffer.1798" }
%"class.WTF::VectorBuffer.1798" = type { %"class.WTF::VectorBufferBase.1799" }
%"class.WTF::VectorBufferBase.1799" = type { %"class.blink::Member.1800"*, i32, i32 }
%"class.blink::Member.1800" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.1310" }
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1812" = type { %"class.WTF::HashTable.1813" }
%"class.WTF::HashTable.1813" = type <{ %"struct.WTF::KeyValuePair.1816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1816" = type opaque
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1821" = type { %"class.blink::MemberBase.1822" }
%"class.blink::MemberBase.1822" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.1824" }
%"class.blink::MemberBase.1824" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1700", { i64, i64 } }
%"class.blink::WeakMember.1700" = type { %"class.blink::MemberBase.1311" }
%"class.blink::HeapHashSet.1825" = type { %"class.WTF::HashSet.1828" }
%"class.WTF::HashSet.1828" = type { %"class.WTF::HashTable.1829" }
%"class.WTF::HashTable.1829" = type <{ %"class.blink::Member.1831"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1831" = type opaque
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1844" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1846" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1850" = type { %"class.WTF::HashMap.1853" }
%"class.WTF::HashMap.1853" = type { %"class.WTF::HashTable.1854" }
%"class.WTF::HashTable.1854" = type <{ %"struct.WTF::KeyValuePair.1856"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1856" = type opaque
%"class.blink::Member.1857" = type { %"class.blink::MemberBase.1858" }
%"class.blink::MemberBase.1858" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1859" = type { %"class.std::__1::__compressed_pair.1860" }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1869" = type { %"class.WTF::HashMap.1872" }
%"class.WTF::HashMap.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"struct.WTF::KeyValuePair.1875"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1875" = type opaque
%"class.blink::HeapObserverSet.1876" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1877" }
%"class.blink::HeapHashSet.1877" = type { %"class.WTF::HashSet.1880" }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"class.blink::WeakMember.1883"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1883" = type opaque
%"class.blink::Member.1884" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.1310", %"class.blink::HeapHashSet.1893", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1900", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1893" = type { %"class.WTF::HashSet.1896" }
%"class.WTF::HashSet.1896" = type { %"class.WTF::HashTable.1897" }
%"class.WTF::HashTable.1897" = type <{ %"class.blink::Member.1899"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1899" = type opaque
%"class.blink::HeapTaskRunnerTimer.1900" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1901", { i64, i64 } }
%"class.blink::WeakMember.1901" = type { %"class.blink::MemberBase.1887" }
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1388" }
%"class.blink::HeapHashMap.1388" = type { %"class.WTF::HashMap.1391" }
%"class.WTF::HashMap.1391" = type { %"class.WTF::HashTable.1392" }
%"class.WTF::HashTable.1392" = type <{ %"struct.WTF::KeyValuePair.1394"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1394" = type { %"class.WTF::AtomicString", %"class.blink::Member.1395" }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1399", i32, %"class.blink::HeapVector.1419" }
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1432" }
%"class.blink::Member.1432" = type { %"class.blink::MemberBase.1433" }
%"class.blink::MemberBase.1433" = type { %"class.blink::HeapHashMap.1434"* }
%"class.blink::HeapHashMap.1434" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1437" = type { %"class.WTF::Vector.1440" }
%"class.WTF::Vector.1440" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { %"class.blink::Member.1443"*, i32, i32 }
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1975" = type { %"class.blink::MemberBase.1976" }
%"class.blink::MemberBase.1976" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1977" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1978" }
%"class.blink::HeapHashSet.1978" = type { %"class.WTF::HashSet.1981" }
%"class.WTF::HashSet.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"class.blink::WeakMember.1984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1984" = type opaque
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2007" }
%"class.WTF::Deque.2007" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2010" }
%"class.WTF::VectorBuffer.2010" = type { %"class.WTF::VectorBufferBase.2011" }
%"class.WTF::VectorBufferBase.2011" = type { %"class.std::__1::unique_ptr.2012"*, i32, i32 }
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject.2015", %"class.WTF::String", %"class.std::__1::unique_ptr.2018" }
%"class.crdtp::ProtocolObject.2015" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2018" = type { %"class.std::__1::__compressed_pair.2019" }
%"class.std::__1::__compressed_pair.2019" = type { %"struct.std::__1::__compressed_pair_elem.2020" }
%"struct.std::__1::__compressed_pair_elem.2020" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.2021", %"class.crdtp::detail::PtrMaybe.2024", %"class.crdtp::detail::PtrMaybe.2067", %"class.crdtp::detail::PtrMaybe.2087", %"class.crdtp::detail::PtrMaybe.2097", %"class.crdtp::detail::PtrMaybe.2107", %"class.crdtp::detail::PtrMaybe.2128", %"class.crdtp::detail::PtrMaybe.2138", %"class.crdtp::detail::PtrMaybe.2148", %"class.crdtp::detail::PtrMaybe.2158", %"class.crdtp::detail::PtrMaybe.2187", %"class.crdtp::detail::PtrMaybe.2197", %"class.crdtp::detail::PtrMaybe.2207" }
%"class.crdtp::ProtocolObject.2021" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2024" = type { %"class.std::__1::unique_ptr.2025" }
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.2028", %"class.crdtp::detail::PtrMaybe.2031", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.2041", %"class.std::__1::unique_ptr.2041", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2054" }
%"class.crdtp::ProtocolObject.2028" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2031" = type { %"class.std::__1::unique_ptr.2032" }
%"class.std::__1::unique_ptr.2032" = type { %"class.std::__1::__compressed_pair.2033" }
%"class.std::__1::__compressed_pair.2033" = type { %"struct.std::__1::__compressed_pair_elem.2034" }
%"struct.std::__1::__compressed_pair_elem.2034" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.2035", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2035" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"class.std::__1::vector.2044"* }
%"class.std::__1::vector.2044" = type { %"class.std::__1::__vector_base.2045" }
%"class.std::__1::__vector_base.2045" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.2054" = type { %"class.std::__1::unique_ptr.2055" }
%"class.std::__1::unique_ptr.2055" = type { %"class.std::__1::__compressed_pair.2056" }
%"class.std::__1::__compressed_pair.2056" = type { %"struct.std::__1::__compressed_pair_elem.2057" }
%"struct.std::__1::__compressed_pair_elem.2057" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.2058", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2058" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2067" = type { %"class.std::__1::unique_ptr.2068" }
%"class.std::__1::unique_ptr.2068" = type { %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.2070" }
%"struct.std::__1::__compressed_pair_elem.2070" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.2071", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2054", %"class.crdtp::detail::PtrMaybe.2074" }
%"class.crdtp::ProtocolObject.2071" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2074" = type { %"class.std::__1::unique_ptr.2075" }
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.2078", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2078" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2087" = type { %"class.std::__1::unique_ptr.2088" }
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.2091", %"class.std::__1::unique_ptr.2055", %"class.crdtp::detail::PtrMaybe.2074", %"class.crdtp::detail::PtrMaybe.2074", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2091" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2097" = type { %"class.std::__1::unique_ptr.2098" }
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.2101", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.2075" }
%"class.crdtp::ProtocolObject.2101" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2107" = type { %"class.std::__1::unique_ptr.2108" }
%"class.std::__1::unique_ptr.2108" = type { %"class.std::__1::__compressed_pair.2109" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.2110" }
%"struct.std::__1::__compressed_pair_elem.2110" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.2111", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2074", %"class.crdtp::detail::PtrMaybe.2114", %"class.crdtp::detail::ValueMaybe.2124" }
%"class.crdtp::ProtocolObject.2111" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2114" = type { %"class.std::__1::unique_ptr.2115" }
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.2118", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.2118" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.2124" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.2128" = type { %"class.std::__1::unique_ptr.2129" }
%"class.std::__1::unique_ptr.2129" = type { %"class.std::__1::__compressed_pair.2130" }
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.2131" }
%"struct.std::__1::__compressed_pair_elem.2131" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.2132", %"class.std::__1::unique_ptr.2115", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2132" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2138" = type { %"class.std::__1::unique_ptr.2139" }
%"class.std::__1::unique_ptr.2139" = type { %"class.std::__1::__compressed_pair.2140" }
%"class.std::__1::__compressed_pair.2140" = type { %"struct.std::__1::__compressed_pair_elem.2141" }
%"struct.std::__1::__compressed_pair_elem.2141" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.2142", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2142" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2148" = type { %"class.std::__1::unique_ptr.2149" }
%"class.std::__1::unique_ptr.2149" = type { %"class.std::__1::__compressed_pair.2150" }
%"class.std::__1::__compressed_pair.2150" = type { %"struct.std::__1::__compressed_pair_elem.2151" }
%"struct.std::__1::__compressed_pair_elem.2151" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.2152", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2152" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2158" = type { %"class.std::__1::unique_ptr.2159" }
%"class.std::__1::unique_ptr.2159" = type { %"class.std::__1::__compressed_pair.2160" }
%"class.std::__1::__compressed_pair.2160" = type { %"struct.std::__1::__compressed_pair_elem.2161" }
%"struct.std::__1::__compressed_pair_elem.2161" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.2162", %"class.std::__1::unique_ptr.2165", i8, %"class.std::__1::unique_ptr.2055", %"class.crdtp::detail::PtrMaybe.2114", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2174" }
%"class.crdtp::ProtocolObject.2162" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2165" = type { %"class.std::__1::__compressed_pair.2166" }
%"class.std::__1::__compressed_pair.2166" = type { %"struct.std::__1::__compressed_pair_elem.2167" }
%"struct.std::__1::__compressed_pair_elem.2167" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.2168", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2168" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2174" = type { %"class.std::__1::unique_ptr.2175" }
%"class.std::__1::unique_ptr.2175" = type { %"class.std::__1::__compressed_pair.2176" }
%"class.std::__1::__compressed_pair.2176" = type { %"struct.std::__1::__compressed_pair_elem.2177" }
%"struct.std::__1::__compressed_pair_elem.2177" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.2178", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2178" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2187" = type { %"class.std::__1::unique_ptr.2188" }
%"class.std::__1::unique_ptr.2188" = type { %"class.std::__1::__compressed_pair.2189" }
%"class.std::__1::__compressed_pair.2189" = type { %"struct.std::__1::__compressed_pair_elem.2190" }
%"struct.std::__1::__compressed_pair_elem.2190" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.2191", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2074", %"class.crdtp::detail::PtrMaybe.2054", %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.2191" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2197" = type { %"class.std::__1::unique_ptr.2198" }
%"class.std::__1::unique_ptr.2198" = type { %"class.std::__1::__compressed_pair.2199" }
%"class.std::__1::__compressed_pair.2199" = type { %"struct.std::__1::__compressed_pair_elem.2200" }
%"struct.std::__1::__compressed_pair_elem.2200" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.2201", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2201" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.2207" = type { %"class.std::__1::unique_ptr.2208" }
%"class.std::__1::unique_ptr.2208" = type { %"class.std::__1::__compressed_pair.2209" }
%"class.std::__1::__compressed_pair.2209" = type { %"struct.std::__1::__compressed_pair_elem.2210" }
%"struct.std::__1::__compressed_pair_elem.2210" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.2211", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.2114" }
%"class.crdtp::ProtocolObject.2211" = type { %"class.crdtp::Serializable" }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.730", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.730" = type { %"class.std::__1::__bitset.731" }
%"class.std::__1::__bitset.731" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2223" }
%"class.absl::optional.2223" = type { %"class.absl::optional_internal::optional_data.2224" }
%"class.absl::optional_internal::optional_data.2224" = type { %"class.absl::optional_internal::optional_data_base.2225" }
%"class.absl::optional_internal::optional_data_base.2225" = type { %"class.absl::optional_internal::optional_data_dtor_base.2226" }
%"class.absl::optional_internal::optional_data_dtor_base.2226" = type { i8, %union.anon.2227 }
%union.anon.2227 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2228", i64, %"class.absl::optional.415", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2228" = type { %"class.absl::optional_internal::optional_data.2229" }
%"class.absl::optional_internal::optional_data.2229" = type { %"class.absl::optional_internal::optional_data_base.2230" }
%"class.absl::optional_internal::optional_data_base.2230" = type { %"class.absl::optional_internal::optional_data_dtor_base.2231" }
%"class.absl::optional_internal::optional_data_dtor_base.2231" = type { i8, %union.anon.2232 }
%union.anon.2232 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2233" = type { %"class.std::__1::unique_ptr.2234" }
%"class.std::__1::unique_ptr.2234" = type { %"class.std::__1::__compressed_pair.2235" }
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2240" = type { %"class.WTF::HashSet.2243" }
%"class.WTF::HashSet.2243" = type { %"class.WTF::HashTable.2244" }
%"class.WTF::HashTable.2244" = type <{ %"class.blink::WeakMember.2246"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2246" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2247" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2254" = type { %"class.std::__1::__compressed_pair.2255" }
%"class.std::__1::__compressed_pair.2255" = type { %"struct.std::__1::__compressed_pair_elem.2256" }
%"struct.std::__1::__compressed_pair_elem.2256" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1918" = type { %"class.blink::MemberBase.1919" }
%"class.blink::MemberBase.1919" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1495", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1922" = type { %"class.base::internal::flat_tree.1923" }
%"class.base::internal::flat_tree.1923" = type { %"class.std::__1::vector.1924" }
%"class.std::__1::vector.1924" = type { %"class.std::__1::__vector_base.1925" }
%"class.std::__1::__vector_base.1925" = type { %"struct.std::__1::pair.1926"*, %"struct.std::__1::pair.1926"*, %"class.std::__1::__compressed_pair.1927" }
%"struct.std::__1::pair.1926" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1927" = type { %"struct.std::__1::__compressed_pair_elem.1928" }
%"struct.std::__1::__compressed_pair_elem.1928" = type { %"struct.std::__1::pair.1926"* }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1089" = type { %"class.absl::optional_internal::optional_data.1090" }
%"class.absl::optional_internal::optional_data.1090" = type { %"class.absl::optional_internal::optional_data_base.1091" }
%"class.absl::optional_internal::optional_data_base.1091" = type { %"class.absl::optional_internal::optional_data_dtor_base.1092" }
%"class.absl::optional_internal::optional_data_dtor_base.1092" = type { i8, %union.anon.1093 }
%union.anon.1093 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1250 }
%class.scoped_refptr.1250 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1934" }
%"class.blink::HeapHashSet.1934" = type { %"class.WTF::HashSet.1937" }
%"class.WTF::HashSet.1937" = type { %"class.WTF::HashTable.1938" }
%"class.WTF::HashTable.1938" = type <{ %"class.blink::WeakMember.1940"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1940" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2518" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2519" }
%"class.blink::HeapHashMap.2519" = type { %"class.WTF::HashMap.2522" }
%"class.WTF::HashMap.2522" = type { %"class.WTF::HashTable.2523" }
%"class.WTF::HashTable.2523" = type <{ %"struct.WTF::KeyValuePair.2525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2525" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2526" = type { %"class.std::__1::__compressed_pair.2527" }
%"class.std::__1::__compressed_pair.2527" = type { %"struct.std::__1::__compressed_pair_elem.2528" }
%"struct.std::__1::__compressed_pair_elem.2528" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2532" }
%"class.blink::Member.2532" = type { %"class.blink::MemberBase.2533" }
%"class.blink::MemberBase.2533" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3601", i64, %"class.std::__1::map.3602", i8*, i64, %"class.base::WeakPtrFactory.3611" }
%"class.base::RepeatingCallback.3601" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3602" = type { %"class.std::__1::__tree.3603" }
%"class.std::__1::__tree.3603" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3604", %"class.std::__1::__compressed_pair.3608" }
%"class.std::__1::__compressed_pair.3604" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.3608" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.base::WeakPtrFactory.3611" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2534" = type { %"class.WTF::HashSet.2537" }
%"class.WTF::HashSet.2537" = type { %"class.WTF::HashTable.2538" }
%"class.WTF::HashTable.2538" = type <{ %"class.blink::WeakMember.2540"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2540" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.237", %"class.blink::Member.2541", %"class.blink::Member.2543", %"class.std::__1::unique_ptr.2545", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2497" }
%"class.blink::Member.2541" = type { %"class.blink::MemberBase.2542" }
%"class.blink::MemberBase.2542" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2543" = type { %"class.blink::MemberBase.2544" }
%"class.blink::MemberBase.2544" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1279", %"class.blink::Member.2472", %"class.std::__1::unique_ptr.2944", %"class.std::__1::unique_ptr.355", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.3091, %"class.WTF::AtomicString", i32, %"class.absl::optional.2997", %class.scoped_refptr.286, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2962", i8, %"class.absl::optional.2969", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.237", %"class.blink::Member.3104", %"class.blink::Member.1312", %"class.blink::Member.726", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.3115", %class.scoped_refptr.280, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.3128", %"class.std::__1::unique_ptr.2974", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.3130", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1323, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2485, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.3135", %"class.blink::Member.3150", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.3163", %"class.WTF::Vector.386", i8, i8, i8, %"class.blink::WebVector.3080", %"class.blink::WebVector.3080", %"class.mojo::Remote.3168" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2948", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2962", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2969", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2974", %"class.base::UnguessableToken", %"class.blink::WebVector.2980", %"class.base::TickClock"*, %"class.blink::WebVector.2989", %"class.absl::optional.2997", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.3002", %"class.blink::WebVector.2592", i8, %"class.blink::WebVector.3021", i8, %"class.std::__1::unique_ptr.3022", %"class.blink::WebVector.3080", %"class.blink::WebVector.3080" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.2947" }
%"class.blink::WebPrivatePtr.2947" = type { i8* }
%"class.blink::WebVector.2948" = type { %"class.std::__1::vector.2949" }
%"class.std::__1::vector.2949" = type { %"class.std::__1::__vector_base.2950" }
%"class.std::__1::__vector_base.2950" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2957" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2957" = type { %"struct.std::__1::__compressed_pair_elem.2958" }
%"struct.std::__1::__compressed_pair_elem.2958" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2951", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2951" = type { %"class.std::__1::__compressed_pair.2952" }
%"class.std::__1::__compressed_pair.2952" = type { %"struct.std::__1::__compressed_pair_elem.2953" }
%"struct.std::__1::__compressed_pair_elem.2953" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2968", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2968" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2980" = type { %"class.std::__1::vector.2981" }
%"class.std::__1::vector.2981" = type { %"class.std::__1::__vector_base.2982" }
%"class.std::__1::__vector_base.2982" = type { %"class.std::__1::unique_ptr.2983"*, %"class.std::__1::unique_ptr.2983"*, %"class.std::__1::__compressed_pair.2984" }
%"class.std::__1::unique_ptr.2983" = type opaque
%"class.std::__1::__compressed_pair.2984" = type { %"struct.std::__1::__compressed_pair_elem.2985" }
%"struct.std::__1::__compressed_pair_elem.2985" = type { %"class.std::__1::unique_ptr.2983"* }
%"class.blink::WebVector.2989" = type { %"class.std::__1::vector.2990" }
%"class.std::__1::vector.2990" = type { %"class.std::__1::__vector_base.2991" }
%"class.std::__1::__vector_base.2991" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2992" }
%"class.std::__1::__compressed_pair.2992" = type { %"struct.std::__1::__compressed_pair_elem.2993" }
%"struct.std::__1::__compressed_pair_elem.2993" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.3002" = type { %"class.absl::optional_internal::optional_data.3003" }
%"class.absl::optional_internal::optional_data.3003" = type { %"class.absl::optional_internal::optional_data_base.3004" }
%"class.absl::optional_internal::optional_data_base.3004" = type { %"class.absl::optional_internal::optional_data_dtor_base.3005" }
%"class.absl::optional_internal::optional_data_dtor_base.3005" = type { i8, [7 x i8], %union.anon.3006 }
%union.anon.3006 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2592" = type { %"class.std::__1::vector.2593" }
%"class.std::__1::vector.2593" = type { %"class.std::__1::__vector_base.2594" }
%"class.std::__1::__vector_base.2594" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2595" }
%"class.std::__1::__compressed_pair.2595" = type { %"struct.std::__1::__compressed_pair_elem.2596" }
%"struct.std::__1::__compressed_pair_elem.2596" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.3021" = type { %"class.std::__1::vector.1099" }
%"class.std::__1::vector.1099" = type { %"class.std::__1::__vector_base.1100" }
%"class.std::__1::__vector_base.1100" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { i32* }
%"class.std::__1::unique_ptr.3022" = type { %"class.std::__1::__compressed_pair.3023" }
%"class.std::__1::__compressed_pair.3023" = type { %"struct.std::__1::__compressed_pair_elem.3024" }
%"struct.std::__1::__compressed_pair_elem.3024" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.3025" }
%"class.blink::WebVector.3025" = type { %"class.std::__1::vector.3026" }
%"class.std::__1::vector.3026" = type { %"class.std::__1::__vector_base.3027" }
%"class.std::__1::__vector_base.3027" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.3072" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.3028", %"class.blink::WebVector.3036", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2592", i32, [4 x i8], %"class.absl::optional.3067", %"class.blink::WebVector.2592" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.3028" = type { %"class.std::__1::vector.3029" }
%"class.std::__1::vector.3029" = type { %"class.std::__1::__vector_base.3030" }
%"class.std::__1::__vector_base.3030" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.3031" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.3031" = type { %"struct.std::__1::__compressed_pair_elem.3032" }
%"struct.std::__1::__compressed_pair_elem.3032" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.3036" = type { %"class.std::__1::vector.3037" }
%"class.std::__1::vector.3037" = type { %"class.std::__1::__vector_base.3038" }
%"class.std::__1::__vector_base.3038" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.3062" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.3039", %"class.blink::WebVector.2592", %"class.blink::WebVector.3047", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.3039" = type { %"class.std::__1::vector.3040" }
%"class.std::__1::vector.3040" = type { %"class.std::__1::__vector_base.3041" }
%"class.std::__1::__vector_base.3041" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.3042" }
%"class.std::__1::__compressed_pair.3042" = type { %"struct.std::__1::__compressed_pair_elem.3043" }
%"struct.std::__1::__compressed_pair_elem.3043" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.3047" = type { %"class.std::__1::vector.3048" }
%"class.std::__1::vector.3048" = type { %"class.std::__1::__vector_base.3049" }
%"class.std::__1::__vector_base.3049" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.3057" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.3050" }
%"class.blink::WebVector.3050" = type { %"class.std::__1::vector.3051" }
%"class.std::__1::vector.3051" = type { %"class.std::__1::__vector_base.3052" }
%"class.std::__1::__vector_base.3052" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3053" }
%"class.std::__1::__compressed_pair.3053" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"class.std::__1::__compressed_pair.3057" = type { %"struct.std::__1::__compressed_pair_elem.3058" }
%"struct.std::__1::__compressed_pair_elem.3058" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.3062" = type { %"struct.std::__1::__compressed_pair_elem.3063" }
%"struct.std::__1::__compressed_pair_elem.3063" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.3067" = type { %"class.absl::optional_internal::optional_data.3068" }
%"class.absl::optional_internal::optional_data.3068" = type { %"class.absl::optional_internal::optional_data_base.3069" }
%"class.absl::optional_internal::optional_data_base.3069" = type { %"class.absl::optional_internal::optional_data_dtor_base.3070" }
%"class.absl::optional_internal::optional_data_dtor_base.3070" = type { i8, [7 x i8], %union.anon.3071 }
%union.anon.3071 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2592", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3072" = type { %"struct.std::__1::__compressed_pair_elem.3073" }
%"struct.std::__1::__compressed_pair_elem.3073" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.3091 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.3092", [4 x i8], %"class.WTF::Vector.3094", i64, %"class.WTF::Vector.1293", i8, [7 x i8] }>
%"class.WTF::RefCounted.3092" = type { %"class.base::RefCounted.3093" }
%"class.base::RefCounted.3093" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3094" = type { %"class.WTF::VectorBuffer.3095" }
%"class.WTF::VectorBuffer.3095" = type { %"class.WTF::VectorBufferBase.3096" }
%"class.WTF::VectorBufferBase.3096" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.1293", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.3097, i64, i64, %"class.absl::optional.1274", %class.scoped_refptr.3101 }
%class.scoped_refptr.3097 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.3098", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.3100", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.3098" = type { %"class.base::RefCountedThreadSafe.3099" }
%"class.base::RefCountedThreadSafe.3099" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.3100" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.3101 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.absl::optional.2997" = type { %"class.absl::optional_internal::optional_data.2998" }
%"class.absl::optional_internal::optional_data.2998" = type { %"class.absl::optional_internal::optional_data_base.2999" }
%"class.absl::optional_internal::optional_data_base.2999" = type { %"class.absl::optional_internal::optional_data_dtor_base.3000" }
%"class.absl::optional_internal::optional_data_dtor_base.3000" = type { i8, %union.anon.3001 }
%union.anon.3001 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2592", %"class.blink::WebString", %"class.blink::WebVector.2592", %"class.blink::WebVector.2592" }
%"class.std::__1::unique_ptr.2962" = type { %"class.std::__1::__compressed_pair.2963" }
%"class.std::__1::__compressed_pair.2963" = type { %"struct.std::__1::__compressed_pair_elem.2964" }
%"struct.std::__1::__compressed_pair_elem.2964" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2969" = type { %"class.absl::optional_internal::optional_data.2970" }
%"class.absl::optional_internal::optional_data.2970" = type { %"class.absl::optional_internal::optional_data_base.2971" }
%"class.absl::optional_internal::optional_data_base.2971" = type { %"class.absl::optional_internal::optional_data_dtor_base.2972" }
%"class.absl::optional_internal::optional_data_dtor_base.2972" = type { i8, %union.anon.2973 }
%union.anon.2973 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3007", %"class.base::flat_map.1922", i8, [7 x i8] }>
%"class.std::__1::vector.3007" = type { %"class.std::__1::__vector_base.3008" }
%"class.std::__1::__vector_base.3008" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3016" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3009", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3009" = type { %"class.std::__1::__vector_base.3010" }
%"class.std::__1::__vector_base.3010" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3011" }
%"class.std::__1::__compressed_pair.3011" = type { %"struct.std::__1::__compressed_pair_elem.3012" }
%"struct.std::__1::__compressed_pair_elem.3012" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3016" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"struct.std::__1::__compressed_pair_elem.3017" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3104" = type { %"class.blink::MemberBase.3105" }
%"class.blink::MemberBase.3105" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.386", %"class.blink::Member.3108", %"class.absl::optional.3110", i64, i64, i32, %class.scoped_refptr.1546, %class.scoped_refptr.3091, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1546 }
%"class.blink::Member.3108" = type { %"class.blink::MemberBase.3109" }
%"class.blink::MemberBase.3109" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.3110" = type { %"class.absl::optional_internal::optional_data.3111" }
%"class.absl::optional_internal::optional_data.3111" = type { %"class.absl::optional_internal::optional_data_base.3112" }
%"class.absl::optional_internal::optional_data_base.3112" = type { %"class.absl::optional_internal::optional_data_dtor_base.3113" }
%"class.absl::optional_internal::optional_data_dtor_base.3113" = type { i8, %union.anon.3114 }
%union.anon.3114 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.3115" = type { %"class.mojo::internal::InterfacePtrState.3116" }
%"class.mojo::internal::InterfacePtrState.3116" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3117" }
%"class.std::__1::unique_ptr.3117" = type { %"class.std::__1::__compressed_pair.3118" }
%"class.std::__1::__compressed_pair.3118" = type { %"struct.std::__1::__compressed_pair_elem.3119" }
%"struct.std::__1::__compressed_pair_elem.3119" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.415", %"class.absl::optional.415", %"class.absl::optional.415", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.3123", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.2543" }
%"class.WTF::Vector.3123" = type { %"class.WTF::VectorBuffer.3124" }
%"class.WTF::VectorBuffer.3124" = type { %"class.WTF::VectorBufferBase.3125" }
%"class.WTF::VectorBufferBase.3125" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.3128" = type { %"class.blink::MemberBase.3129" }
%"class.blink::MemberBase.3129" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2974" = type { %"class.std::__1::__compressed_pair.2975" }
%"class.std::__1::__compressed_pair.2975" = type { %"struct.std::__1::__compressed_pair_elem.2976" }
%"struct.std::__1::__compressed_pair_elem.2976" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1922", %"class.base::flat_map" }
%"class.WTF::Vector.3130" = type { %"class.WTF::VectorBuffer.3131" }
%"class.WTF::VectorBuffer.3131" = type { %"class.WTF::VectorBufferBase.3132" }
%"class.WTF::VectorBufferBase.3132" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.3135" = type { %"class.blink::MemberBase.3136" }
%"class.blink::MemberBase.3136" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.3139", %"class.std::__1::unique_ptr.3144", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.3139" = type { %"class.WTF::HashTable.3140" }
%"class.WTF::HashTable.3140" = type <{ %"struct.WTF::KeyValuePair.3143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3143" = type { %"class.WTF::Vector.3663", %class.scoped_refptr.3667 }
%"class.WTF::Vector.3663" = type { %"class.WTF::VectorBuffer.3664" }
%"class.WTF::VectorBuffer.3664" = type { %"class.WTF::VectorBufferBase.221", [32 x i8] }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%class.scoped_refptr.3667 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3668", %"class.WTF::Vector.219", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3668" = type { %"class.base::RefCounted.3669" }
%"class.base::RefCounted.3669" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3670", i64, %"class.absl::optional.3675" }
%"class.std::__1::unique_ptr.3670" = type { %"class.std::__1::__compressed_pair.3671" }
%"class.std::__1::__compressed_pair.3671" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"class.absl::optional.3675" = type { %"class.absl::optional_internal::optional_data.3676" }
%"class.absl::optional_internal::optional_data.3676" = type { %"class.absl::optional_internal::optional_data_base.3677" }
%"class.absl::optional_internal::optional_data_base.3677" = type { %"class.absl::optional_internal::optional_data_dtor_base.3678" }
%"class.absl::optional_internal::optional_data_dtor_base.3678" = type { i8, %union.anon.3679 }
%union.anon.3679 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3680", %"class.std::__1::unique_ptr.3681" }
%"class.mojo::ScopedHandleBase.3680" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3681" = type { %"class.std::__1::__compressed_pair.3682" }
%"class.std::__1::__compressed_pair.3682" = type { %"struct.std::__1::__compressed_pair_elem.3683" }
%"struct.std::__1::__compressed_pair_elem.3683" = type { i8* }
%"class.std::__1::unique_ptr.3144" = type { %"class.std::__1::__compressed_pair.3145" }
%"class.std::__1::__compressed_pair.3145" = type { %"struct.std::__1::__compressed_pair_elem.3146" }
%"struct.std::__1::__compressed_pair_elem.3146" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.3150" = type { %"class.blink::MemberBase.3151" }
%"class.blink::MemberBase.3151" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.3156" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.3152", %"class.std::__1::bitset.3152", %"class.std::__1::bitset.3154" }
%"class.std::__1::bitset.3152" = type { %"class.std::__1::__bitset.3153" }
%"class.std::__1::__bitset.3153" = type { [11 x i64] }
%"class.std::__1::bitset.3154" = type { %"class.std::__1::__bitset.3155" }
%"class.std::__1::__bitset.3155" = type { [2 x i64] }
%"class.blink::HeapHashSet.3156" = type { %"class.WTF::HashSet.3159" }
%"class.WTF::HashSet.3159" = type { %"class.WTF::HashTable.3160" }
%"class.WTF::HashTable.3160" = type <{ %"class.blink::Member.3162"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3162" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.3163" = type { %"class.WTF::VectorBuffer.3164" }
%"class.WTF::VectorBuffer.3164" = type { %"class.WTF::VectorBufferBase.3165" }
%"class.WTF::VectorBufferBase.3165" = type { i32*, i32, i32 }
%"class.blink::WebVector.3080" = type { %"class.std::__1::vector.3081" }
%"class.std::__1::vector.3081" = type { %"class.std::__1::__vector_base.3082" }
%"class.std::__1::__vector_base.3082" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.3083" }
%"class.std::__1::__compressed_pair.3083" = type { %"struct.std::__1::__compressed_pair_elem.3084" }
%"struct.std::__1::__compressed_pair_elem.3084" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.3168" = type { %"class.mojo::internal::InterfacePtrState.3169" }
%"class.mojo::internal::InterfacePtrState.3169" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3170" }
%"class.std::__1::unique_ptr.3170" = type { %"class.std::__1::__compressed_pair.3171" }
%"class.std::__1::__compressed_pair.3171" = type { %"struct.std::__1::__compressed_pair_elem.3172" }
%"struct.std::__1::__compressed_pair_elem.3172" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2545" = type { %"class.std::__1::__compressed_pair.2546" }
%"class.std::__1::__compressed_pair.2546" = type { %"struct.std::__1::__compressed_pair_elem.2547" }
%"struct.std::__1::__compressed_pair_elem.2547" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2663", %"class.blink::Member.237", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2668", i8, i32, %"class.blink::Color", %"class.absl::optional.2670", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2675", %"class.blink::Member.2677", %"class.blink::Member.2677", %"class.std::__1::unique_ptr.2680", i32, [4 x i8], %"class.WTF::HashSet.2683", %"class.blink::Member.2690", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2692", %"class.blink::HeapHashSet.2699", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2707", i8, %"class.blink::Member.2713", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2725", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2739", i8, %"class.std::__1::unique_ptr.2745", %"class.std::__1::unique_ptr.2862", %"class.WTF::Vector.2868", i32, %class.scoped_refptr.2873, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2874", %"class.blink::Member.2876", %"class.blink::Member.2878", %"class.blink::HeapHashSet.2880", %"class.blink::HeapHashSet.2887", %"class.std::__1::unique_ptr.2894", %"class.std::__1::unique_ptr.2900", %"class.WTF::Vector.1488" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2663" = type { %"class.WTF::HashTable.2664" }
%"class.WTF::HashTable.2664" = type <{ %class.scoped_refptr.2667*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2667 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2668" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2669", { i64, i64 } }
%"class.blink::WeakMember.2669" = type { %"class.blink::MemberBase.2552" }
%"class.absl::optional.2670" = type { %"class.absl::optional_internal::optional_data.2671" }
%"class.absl::optional_internal::optional_data.2671" = type { %"class.absl::optional_internal::optional_data_base.2672" }
%"class.absl::optional_internal::optional_data_base.2672" = type { %"class.absl::optional_internal::optional_data_dtor_base.2673" }
%"class.absl::optional_internal::optional_data_dtor_base.2673" = type { i8, %union.anon.2674 }
%union.anon.2674 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2677" = type { %"class.blink::MemberBase.2678" }
%"class.blink::MemberBase.2678" = type { %"class.blink::HeapHashSet.2679"* }
%"class.blink::HeapHashSet.2679" = type opaque
%"class.std::__1::unique_ptr.2680" = type { %"class.std::__1::__compressed_pair.2681" }
%"class.std::__1::__compressed_pair.2681" = type { %"struct.std::__1::__compressed_pair_elem.2682" }
%"struct.std::__1::__compressed_pair_elem.2682" = type { %"class.WTF::HashSet.2683"* }
%"class.WTF::HashSet.2683" = type { %"class.WTF::HashTable.2684" }
%"class.WTF::HashTable.2684" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2690" = type { %"class.blink::MemberBase.2691" }
%"class.blink::MemberBase.2691" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2692" = type { %"class.WTF::HashSet.2695" }
%"class.WTF::HashSet.2695" = type { %"class.WTF::HashTable.2696" }
%"class.WTF::HashTable.2696" = type <{ %"class.blink::Member.2698"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2698" = type opaque
%"class.blink::HeapHashSet.2699" = type { %"class.WTF::HashSet.2702" }
%"class.WTF::HashSet.2702" = type { %"class.WTF::HashTable.2703" }
%"class.WTF::HashTable.2703" = type <{ %"class.blink::Member.2705"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2705" = type { %"class.blink::MemberBase.2706" }
%"class.blink::MemberBase.2706" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2929", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2940", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1399" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2929" = type { %"class.blink::MemberBase.2930" }
%"class.blink::MemberBase.2930" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2931", %"class.blink::Member.2932", %"class.blink::Member.2934", %"class.blink::Member.2936", %"class.blink::Member.2938", %"class.WTF::Vector.1488", i16, %class.scoped_refptr.1372 }
%"class.blink::ThreadState::PrefinalizerRegistration.2931" = type { i8 }
%"class.blink::Member.2932" = type { %"class.blink::MemberBase.2933" }
%"class.blink::MemberBase.2933" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2934" = type { %"class.blink::MemberBase.2935" }
%"class.blink::MemberBase.2935" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2936" = type { %"class.blink::MemberBase.2937" }
%"class.blink::MemberBase.2937" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2938" = type { %"class.blink::MemberBase.2939" }
%"class.blink::MemberBase.2939" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2940" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2941", { i64, i64 } }
%"class.blink::WeakMember.2941" = type { %"class.blink::MemberBase.2706" }
%"class.std::__1::unique_ptr.2707" = type { %"class.std::__1::__compressed_pair.2708" }
%"class.std::__1::__compressed_pair.2708" = type { %"struct.std::__1::__compressed_pair_elem.2709" }
%"struct.std::__1::__compressed_pair_elem.2709" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2717", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2717" = type { %"class.WTF::HashTable.2718" }
%"class.WTF::HashTable.2718" = type <{ %"struct.WTF::KeyValuePair.2720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2720" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2721", i32, i32 }
%"class.WTF::Vector.2721" = type { %"class.WTF::VectorBuffer.2722" }
%"class.WTF::VectorBuffer.2722" = type { %"class.WTF::VectorBufferBase.2723" }
%"class.WTF::VectorBufferBase.2723" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2725" = type { %"class.WTF::LinkedHashSet.2728" }
%"class.WTF::LinkedHashSet.2728" = type { %"class.WTF::HashMap.2729", %"class.WTF::VectorBackedLinkedList.2733" }
%"class.WTF::HashMap.2729" = type { %"class.WTF::HashTable.2730" }
%"class.WTF::HashTable.2730" = type <{ %"struct.WTF::KeyValuePair.2732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2732" = type opaque
%"class.WTF::VectorBackedLinkedList.2733" = type { %"class.WTF::Vector.2734", i32, i32 }
%"class.WTF::Vector.2734" = type { %"class.WTF::VectorBuffer.2735" }
%"class.WTF::VectorBuffer.2735" = type { %"class.WTF::VectorBufferBase.2736" }
%"class.WTF::VectorBufferBase.2736" = type { %"class.WTF::VectorBackedLinkedListNode.2737"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2737" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2739" = type { %"class.std::__1::__compressed_pair.2740" }
%"class.std::__1::__compressed_pair.2740" = type { %"struct.std::__1::__compressed_pair_elem.2741" }
%"struct.std::__1::__compressed_pair_elem.2741" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2745" = type { %"class.std::__1::__compressed_pair.2746" }
%"class.std::__1::__compressed_pair.2746" = type { %"struct.std::__1::__compressed_pair_elem.2747" }
%"struct.std::__1::__compressed_pair_elem.2747" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2748, %class.scoped_refptr.2748, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2839", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2844", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2748 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2749", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2756" }
%"class.WTF::RefCounted.2749" = type { %"class.base::RefCounted.2750" }
%"class.base::RefCounted.2750" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2751", i32, [4 x i8] }>
%"class.WTF::Vector.2751" = type { %"class.WTF::VectorBuffer.2752" }
%"class.WTF::VectorBuffer.2752" = type { %"class.WTF::VectorBufferBase.2753" }
%"class.WTF::VectorBufferBase.2753" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2756" = type { %"class.WTF::VectorBuffer.2757" }
%"class.WTF::VectorBuffer.2757" = type { %"class.WTF::VectorBufferBase.2758" }
%"class.WTF::VectorBufferBase.2758" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2762", %"class.std::__1::unique_ptr.2811", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2759, %class.scoped_refptr.2760, %class.scoped_refptr.2761 }
%class.scoped_refptr.2759 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2775", i8, i8, %class.scoped_refptr.2759, i32, i32 }
%"class.WTF::RefCounted.2775" = type { %"class.base::RefCounted.2776" }
%"class.base::RefCounted.2776" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2760 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2924" }
%"class.blink::PaintPropertyNode.2924" = type { %"class.WTF::RefCounted.2925", i8, i8, %class.scoped_refptr.2760, i32, i32 }
%"class.WTF::RefCounted.2925" = type { %"class.base::RefCounted.2926" }
%"class.base::RefCounted.2926" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2761 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2921" }
%"class.blink::PaintPropertyNode.2921" = type { %"class.WTF::RefCounted.2922", i8, i8, %class.scoped_refptr.2761, i32, i32 }
%"class.WTF::RefCounted.2922" = type { %"class.base::RefCounted.2923" }
%"class.base::RefCounted.2923" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2762" = type { %"class.std::__1::__compressed_pair.2763" }
%"class.std::__1::__compressed_pair.2763" = type { %"struct.std::__1::__compressed_pair_elem.2764" }
%"struct.std::__1::__compressed_pair_elem.2764" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2765", %"class.WTF::Vector.2770", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2765" = type { %"class.WTF::VectorBuffer.2766" }
%"class.WTF::VectorBuffer.2766" = type { %"class.WTF::VectorBufferBase.2767" }
%"class.WTF::VectorBufferBase.2767" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2770" = type { %"class.WTF::VectorBuffer.2771" }
%"class.WTF::VectorBuffer.2771" = type { %"class.WTF::VectorBufferBase.2772" }
%"class.WTF::VectorBufferBase.2772" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2790" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2783, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2784", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2777" }
%"class.std::__1::unique_ptr.2777" = type { %"class.std::__1::__compressed_pair.2778" }
%"class.std::__1::__compressed_pair.2778" = type { %"struct.std::__1::__compressed_pair_elem.2779" }
%"struct.std::__1::__compressed_pair_elem.2779" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2783 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2906", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2906" = type { %"class.WTF::RefCounted.2907", i8, i8, %class.scoped_refptr.2783, i32, i32 }
%"class.WTF::RefCounted.2907" = type { %"class.base::RefCounted.2908" }
%"class.base::RefCounted.2908" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2909" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2909" = type { %"class.absl::optional_internal::optional_data.2910" }
%"class.absl::optional_internal::optional_data.2910" = type { %"class.absl::optional_internal::optional_data_base.2911" }
%"class.absl::optional_internal::optional_data_base.2911" = type { %"class.absl::optional_internal::optional_data_dtor_base.2912" }
%"class.absl::optional_internal::optional_data_dtor_base.2912" = type { i8, %union.anon.2913 }
%union.anon.2913 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2914", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2914" = type { %"class.std::__1::__vector_base.2915" }
%"class.std::__1::__vector_base.2915" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2916" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2916" = type { %"struct.std::__1::__compressed_pair_elem.2917" }
%"struct.std::__1::__compressed_pair_elem.2917" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2784" = type { %"class.std::__1::__compressed_pair.2785" }
%"class.std::__1::__compressed_pair.2785" = type { %"struct.std::__1::__compressed_pair_elem.2786" }
%"struct.std::__1::__compressed_pair_elem.2786" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2790" = type { %"class.std::__1::__compressed_pair.2791" }
%"class.std::__1::__compressed_pair.2791" = type { %"struct.std::__1::__compressed_pair_elem.2792" }
%"struct.std::__1::__compressed_pair_elem.2792" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2793", %"class.std::__1::unique_ptr.2799", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2793" = type { %"class.std::__1::__compressed_pair.2794" }
%"class.std::__1::__compressed_pair.2794" = type { %"struct.std::__1::__compressed_pair_elem.2795" }
%"struct.std::__1::__compressed_pair_elem.2795" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2799" = type { %"class.std::__1::__compressed_pair.2800" }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.2801" }
%"struct.std::__1::__compressed_pair_elem.2801" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2811" = type { %"class.std::__1::__compressed_pair.2812" }
%"class.std::__1::__compressed_pair.2812" = type { %"struct.std::__1::__compressed_pair_elem.2813" }
%"struct.std::__1::__compressed_pair_elem.2813" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2814", %"class.absl::optional.2814" }
%"class.absl::optional.2814" = type { %"class.absl::optional_internal::optional_data.2815" }
%"class.absl::optional_internal::optional_data.2815" = type { %"class.absl::optional_internal::optional_data_base.2816" }
%"class.absl::optional_internal::optional_data_base.2816" = type { %"class.absl::optional_internal::optional_data_dtor_base.2817" }
%"class.absl::optional_internal::optional_data_dtor_base.2817" = type { i8, [3 x i8], %union.anon.2818 }
%union.anon.2818 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2756"*, %"class.absl::optional.2824", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2824" = type { %"class.absl::optional_internal::optional_data.2825" }
%"class.absl::optional_internal::optional_data.2825" = type { %"class.absl::optional_internal::optional_data_base.2826" }
%"class.absl::optional_internal::optional_data_base.2826" = type { %"class.absl::optional_internal::optional_data_dtor_base.2827" }
%"class.absl::optional_internal::optional_data_dtor_base.2827" = type { i8, %union.anon.2828 }
%union.anon.2828 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2829", %"class.WTF::Vector.2834" }
%"class.WTF::Vector.2829" = type { %"class.WTF::VectorBuffer.2830" }
%"class.WTF::VectorBuffer.2830" = type { %"class.WTF::VectorBufferBase.2831", [128 x i8] }
%"class.WTF::VectorBufferBase.2831" = type { i32*, i32, i32 }
%"class.WTF::Vector.2834" = type { %"class.WTF::VectorBuffer.2835" }
%"class.WTF::VectorBuffer.2835" = type { %"class.WTF::VectorBufferBase.2836", [128 x i8] }
%"class.WTF::VectorBufferBase.2836" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2839" = type { %"class.WTF::VectorBuffer.2840" }
%"class.WTF::VectorBuffer.2840" = type { %"class.WTF::VectorBufferBase.2841" }
%"class.WTF::VectorBufferBase.2841" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2844" = type { %"class.WTF::HashTable.2845" }
%"class.WTF::HashTable.2845" = type <{ %"struct.WTF::KeyValuePair.2848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2848" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2849", %"class.WTF::Vector.2854" }
%"class.WTF::HashMap.2849" = type { %"class.WTF::HashTable.2850" }
%"class.WTF::HashTable.2850" = type <{ %"struct.WTF::KeyValuePair.2853"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2853" = type opaque
%"class.WTF::Vector.2854" = type { %"class.WTF::VectorBuffer.2855" }
%"class.WTF::VectorBuffer.2855" = type { %"class.WTF::VectorBufferBase.2856" }
%"class.WTF::VectorBufferBase.2856" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2862" = type { %"class.std::__1::__compressed_pair.2863" }
%"class.std::__1::__compressed_pair.2863" = type { %"struct.std::__1::__compressed_pair_elem.2864" }
%"struct.std::__1::__compressed_pair_elem.2864" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2868" = type { %"class.WTF::VectorBuffer.2869" }
%"class.WTF::VectorBuffer.2869" = type { %"class.WTF::VectorBufferBase.2870" }
%"class.WTF::VectorBufferBase.2870" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2873 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2874" = type { %"class.blink::MemberBase.2875" }
%"class.blink::MemberBase.2875" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2876" = type { %"class.blink::MemberBase.2877" }
%"class.blink::MemberBase.2877" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2878" = type { %"class.blink::MemberBase.2879" }
%"class.blink::MemberBase.2879" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2880" = type { %"class.WTF::HashSet.2883" }
%"class.WTF::HashSet.2883" = type { %"class.WTF::HashTable.2884" }
%"class.WTF::HashTable.2884" = type <{ %"class.blink::WeakMember.2886"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2886" = type opaque
%"class.blink::HeapHashSet.2887" = type { %"class.WTF::HashSet.2890" }
%"class.WTF::HashSet.2890" = type { %"class.WTF::HashTable.2891" }
%"class.WTF::HashTable.2891" = type <{ %"class.blink::WeakMember.2893"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2893" = type opaque
%"class.std::__1::unique_ptr.2894" = type { %"class.std::__1::__compressed_pair.2895" }
%"class.std::__1::__compressed_pair.2895" = type { %"struct.std::__1::__compressed_pair_elem.2896" }
%"struct.std::__1::__compressed_pair_elem.2896" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2900" = type { %"class.std::__1::__compressed_pair.2901" }
%"class.std::__1::__compressed_pair.2901" = type { %"struct.std::__1::__compressed_pair_elem.2902" }
%"struct.std::__1::__compressed_pair_elem.2902" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1274", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1404" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1401 }
%class.scoped_refptr.1401 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1402", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1402" = type { %"class.base::RefCounted.1403" }
%"class.base::RefCounted.1403" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1408", %"class.blink::Member.1410", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1408" = type { %"class.WTF::SingleThreadedBitField.1409" }
%"class.WTF::SingleThreadedBitField.1409" = type { i32 }
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1412 }
%class.scoped_refptr.1412 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1413", %"class.WTF::AtomicString", %"class.WTF::Vector.1415" }
%"class.WTF::RefCounted.1413" = type { %"class.base::RefCounted.1414" }
%"class.base::RefCounted.1414" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1415" = type { %"class.WTF::VectorBuffer.1416" }
%"class.WTF::VectorBuffer.1416" = type { %"class.WTF::VectorBufferBase.1260", [32 x i8] }
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.2557" = type { %"class.blink::MemberBase.2558" }
%"class.blink::MemberBase.2558" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2559" = type { %"class.blink::MemberBase.2560" }
%"class.blink::MemberBase.2560" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.2561 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2577" = type { %"class.blink::MemberBase.2578" }
%"class.blink::MemberBase.2578" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2579" = type { %"class.blink::MemberBase.2580" }
%"class.blink::MemberBase.2580" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.2581" = type { %"class.blink::MemberBase.2582" }
%"class.blink::MemberBase.2582" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2585" = type { %"class.blink::Member.2586" }
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3614" }
%"class.mojo::Remote.3614" = type { %"class.mojo::internal::InterfacePtrState.3615" }
%"class.mojo::internal::InterfacePtrState.3615" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3616" }
%"class.std::__1::unique_ptr.3616" = type { %"class.std::__1::__compressed_pair.3617" }
%"class.std::__1::__compressed_pair.3617" = type { %"struct.std::__1::__compressed_pair_elem.3618" }
%"struct.std::__1::__compressed_pair_elem.3618" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2588" = type { %"class.std::__1::__compressed_pair.2589" }
%"class.std::__1::__compressed_pair.2589" = type { %"struct.std::__1::__compressed_pair_elem.2590" }
%"struct.std::__1::__compressed_pair_elem.2590" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2591, %"class.blink::WebVector.2592", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2591 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2600, i8, [7 x i8] }>
%class.scoped_refptr.2600 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2601", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2601" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2602" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2602" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2609" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2610" = type { %"class.std::__1::__compressed_pair.2611" }
%"class.std::__1::__compressed_pair.2611" = type { %"struct.std::__1::__compressed_pair_elem.2612" }
%"struct.std::__1::__compressed_pair_elem.2612" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1141" = type { %"class.absl::optional_internal::optional_data.1142" }
%"class.absl::optional_internal::optional_data.1142" = type { %"class.absl::optional_internal::optional_data_base.1143" }
%"class.absl::optional_internal::optional_data_base.1143" = type { %"class.absl::optional_internal::optional_data_dtor_base.1144" }
%"class.absl::optional_internal::optional_data_dtor_base.1144" = type { i8, %union.anon.1145 }
%union.anon.1145 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2616" = type { %"class.std::__1::__compressed_pair.2617" }
%"class.std::__1::__compressed_pair.2617" = type { %"struct.std::__1::__compressed_pair_elem.2618" }
%"struct.std::__1::__compressed_pair_elem.2618" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2622" }
%"class.blink::Member.2622" = type { %"class.blink::MemberBase.2623" }
%"class.blink::MemberBase.2623" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3624" }
%"class.mojo::AssociatedRemote.3624" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3625" }
%"class.mojo::internal::AssociatedInterfacePtrState.3625" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3626" }
%"class.std::__1::unique_ptr.3626" = type { %"class.std::__1::__compressed_pair.3627" }
%"class.std::__1::__compressed_pair.3627" = type { %"struct.std::__1::__compressed_pair_elem.3628" }
%"struct.std::__1::__compressed_pair_elem.3628" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2624" = type { %"class.blink::Member.2625" }
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3634" }
%"class.mojo::AssociatedRemote.3634" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3635" }
%"class.mojo::internal::AssociatedInterfacePtrState.3635" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3636" }
%"class.std::__1::unique_ptr.3636" = type { %"class.std::__1::__compressed_pair.3637" }
%"class.std::__1::__compressed_pair.3637" = type { %"struct.std::__1::__compressed_pair_elem.3638" }
%"struct.std::__1::__compressed_pair_elem.3638" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2627" }
%"class.blink::Member.2627" = type { %"class.blink::MemberBase.2628" }
%"class.blink::MemberBase.2628" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3644", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3644" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3645" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.406" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3645" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2629" = type { %"class.blink::Member.2630" }
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3648", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.3649" }
%"class.blink::ThreadState::PrefinalizerRegistration.3648" = type { i8 }
%"class.mojo::AssociatedReceiver.3649" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3650" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2632" }
%"class.blink::Member.2632" = type { %"class.blink::MemberBase.2633" }
%"class.blink::MemberBase.2633" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3653", %"class.blink::Member.237", %"class.mojo::Receiver.3654" }
%"class.blink::ThreadState::PrefinalizerRegistration.3653" = type { i8 }
%"class.mojo::Receiver.3654" = type { %"class.mojo::internal::BindingState.3655" }
%"class.mojo::internal::BindingState.3655" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.805, %"class.std::__1::unique_ptr.406", %"class.base::WeakPtrFactory.3504" }
%"class.base::WeakPtrFactory.3504" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2634" = type { %"class.blink::Member.2635" }
%"class.blink::Member.2635" = type { %"class.blink::MemberBase.2636" }
%"class.blink::MemberBase.2636" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3658", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.3659" }
%"class.blink::ThreadState::PrefinalizerRegistration.3658" = type { i8 }
%"class.mojo::AssociatedReceiver.3659" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3660" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3660" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::HeapHashMap.2645"* }
%"class.blink::HeapHashMap.2645" = type opaque
%"class.mojo::StructPtr.2646" = type { %"class.std::__1::unique_ptr.2647" }
%"class.std::__1::unique_ptr.2647" = type { %"class.std::__1::__compressed_pair.2648" }
%"class.std::__1::__compressed_pair.2648" = type { %"struct.std::__1::__compressed_pair_elem.2649" }
%"struct.std::__1::__compressed_pair_elem.2649" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2650", %"class.mojo::InlinedStructPtr.2441" }
%"class.mojo::InlinedStructPtr.2650" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.2654" = type { %"class.blink::MemberBase.2655" }
%"class.blink::MemberBase.2655" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2656" = type { %"class.absl::optional_internal::optional_data.2657" }
%"class.absl::optional_internal::optional_data.2657" = type { %"class.absl::optional_internal::optional_data_base.2658" }
%"class.absl::optional_internal::optional_data_base.2658" = type { %"class.absl::optional_internal::optional_data_dtor_base.2659" }
%"class.absl::optional_internal::optional_data_dtor_base.2659" = type { i8, %union.anon.2660 }
%union.anon.2660 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1667" = type { %"class.WTF::VectorBuffer.1668" }
%"class.WTF::VectorBuffer.1668" = type { %"class.WTF::VectorBufferBase.1669" }
%"class.WTF::VectorBufferBase.1669" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2568" = type { %"class.WTF::HashMap.2571" }
%"class.WTF::HashMap.2571" = type { %"class.WTF::HashTable.2572" }
%"class.WTF::HashTable.2572" = type <{ %"struct.WTF::KeyValuePair.2574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2574" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.3266", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.3266" = type { %"class.blink::MemberBase.3267" }
%"class.blink::MemberBase.3267" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.3262", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.3262" = type { %"class.blink::MemberBase.3263" }
%"class.blink::MemberBase.3263" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.3258", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.3258" = type { %"class.blink::MemberBase.3259" }
%"class.blink::MemberBase.3259" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.3254", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.3254" = type { %"class.blink::MemberBase.3255" }
%"class.blink::MemberBase.3255" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.3250", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::Member.3250" = type { %"class.blink::MemberBase.3251" }
%"class.blink::MemberBase.3251" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.3246", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.3246" = type { %"class.blink::MemberBase.3247" }
%"class.blink::MemberBase.3247" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.3242", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.3242" = type { %"class.blink::MemberBase.3243" }
%"class.blink::MemberBase.3243" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.3238", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.3238" = type { %"class.blink::MemberBase.3239" }
%"class.blink::MemberBase.3239" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.3234", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.3234" = type { %"class.blink::MemberBase.3235" }
%"class.blink::MemberBase.3235" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.2577", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.3228", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.3228" = type { %"class.blink::MemberBase.3229" }
%"class.blink::MemberBase.3229" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.3224", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.3224" = type { %"class.blink::MemberBase.3225" }
%"class.blink::MemberBase.3225" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.3220", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.3220" = type { %"class.blink::MemberBase.3221" }
%"class.blink::MemberBase.3221" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.3216", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.3216" = type { %"class.blink::MemberBase.3217" }
%"class.blink::MemberBase.3217" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.3190", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.3190" = type { %"class.blink::MemberBase.3191" }
%"class.blink::MemberBase.3191" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent.3192", %"class.blink::Member.233", %"class.WTF::HashMap.3199", %"class.WTF::HashMap.1358", %"class.blink::HeapHashMap.3204", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.3211", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.3213", %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.3192" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3193" }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3193" = type { %"class.std::__1::__compressed_pair.3194" }
%"class.std::__1::__compressed_pair.3194" = type { %"struct.std::__1::__compressed_pair_elem.3195" }
%"struct.std::__1::__compressed_pair_elem.3195" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.WTF::HashMap.3199" = type { %"class.WTF::HashTable.3200" }
%"class.WTF::HashTable.3200" = type <{ %"struct.WTF::KeyValuePair.3203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3203" = type opaque
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1362"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1362" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::HeapHashMap.3204" = type { %"class.WTF::HashMap.3207" }
%"class.WTF::HashMap.3207" = type { %"class.WTF::HashTable.3208" }
%"class.WTF::HashTable.3208" = type <{ %"struct.WTF::KeyValuePair.3210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3210" = type opaque
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.blink::Member.3211" = type { %"class.blink::MemberBase.3212" }
%"class.blink::MemberBase.3212" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::InspectorResourceContentLoader" = type opaque
%"class.blink::InspectorAgentState::SimpleField.3213" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.3186", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.3186" = type { %"class.blink::MemberBase.3187" }
%"class.blink::MemberBase.3187" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.3182", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.3182" = type { %"class.blink::MemberBase.3183" }
%"class.blink::MemberBase.3183" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.2579", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.2562", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Network::Frontend"* }
%"class.blink::protocol::Network::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::InspectedFrames"* }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.237" }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.736", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.757", %"class.blink::Member.775", %"class.blink::Member.777", %"class.blink::Member.788", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.790", i32, %"class.blink::Member.797", %"class.std::__1::unique_ptr.799", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.914", %"class.absl::optional.923", i32, %"class.std::__1::unique_ptr.929", %"class.std::__1::unique_ptr.935", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.709", %"class.blink::Member.715", %"class.blink::HeapHashSet.717", %class.scoped_refptr.724, %"class.blink::Member.726", %"class.blink::Member.728", i32, %"class.WTF::Vector.362", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.732" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.513" }
%"class.blink::Supplementable.513" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.514" }
%"class.blink::HeapHashMap.514" = type { %"class.WTF::HashMap.517" }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.520"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.520" = type { i8*, %"class.blink::Member.3690" }
%"class.blink::Member.3690" = type { %"class.blink::MemberBase.3691" }
%"class.blink::MemberBase.3691" = type { %"class.blink::Supplement.3692"* }
%"class.blink::Supplement.3692" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3693" }
%"class.blink::Member.3693" = type { %"class.blink::MemberBase.3694" }
%"class.blink::MemberBase.3694" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.521" }
%"struct.std::__1::atomic.521" = type { %"struct.std::__1::__atomic_base.522" }
%"struct.std::__1::__atomic_base.522" = type { %"struct.std::__1::__cxx_atomic_impl.523" }
%"struct.std::__1::__cxx_atomic_impl.523" = type { %"struct.std::__1::__cxx_atomic_base_impl.524" }
%"struct.std::__1::__cxx_atomic_base_impl.524" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.717" = type { %"class.WTF::HashSet.720" }
%"class.WTF::HashSet.720" = type { %"class.WTF::HashTable.721" }
%"class.WTF::HashTable.721" = type <{ %"class.blink::WeakMember.723"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.724 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.725", [4 x i8] }>
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.736" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.737" }
%"class.blink::HeapHashMap.737" = type { %"class.WTF::HashMap.740" }
%"class.WTF::HashMap.740" = type { %"class.WTF::HashTable.741" }
%"class.WTF::HashTable.741" = type <{ %"struct.WTF::KeyValuePair.743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.743" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.750", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.750" = type { %"class.std::__1::__vector_base.751" }
%"class.std::__1::__vector_base.751" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.752" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::Member.775" = type { %"class.blink::MemberBase.776" }
%"class.blink::MemberBase.776" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.780" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.779", %"class.WTF::Vector.386", i8 }>
%"class.blink::WeakMember.779" = type { %"class.blink::MemberBase.328" }
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.779" }
%"class.blink::Supplementable.780" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.781" }
%"class.blink::HeapHashMap.781" = type { %"class.WTF::HashMap.784" }
%"class.WTF::HashMap.784" = type { %"class.WTF::HashTable.785" }
%"class.WTF::HashTable.785" = type <{ %"struct.WTF::KeyValuePair.787"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.787" = type { i8*, %"class.blink::Member.3712" }
%"class.blink::Member.3712" = type { %"class.blink::MemberBase.3713" }
%"class.blink::MemberBase.3713" = type { %"class.blink::Supplement.3714"* }
%"class.blink::Supplement.3714" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3715" }
%"class.blink::Member.3715" = type { %"class.blink::MemberBase.3716" }
%"class.blink::MemberBase.3716" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.790" = type { %"class.WTF::HashMap.793" }
%"class.WTF::HashMap.793" = type { %"class.WTF::HashTable.794" }
%"class.WTF::HashTable.794" = type <{ %"struct.WTF::KeyValuePair.796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.796" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.903" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.897" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.903" = type { %"class.std::__1::__tree.904" }
%"class.std::__1::__tree.904" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.905", %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.blink::Member.914" = type { %"class.blink::MemberBase.915" }
%"class.blink::MemberBase.915" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.918", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.absl::optional.923" = type { %"class.absl::optional_internal::optional_data.924" }
%"class.absl::optional_internal::optional_data.924" = type { %"class.absl::optional_internal::optional_data_base.925" }
%"class.absl::optional_internal::optional_data_base.925" = type { %"class.absl::optional_internal::optional_data_dtor_base.926" }
%"class.absl::optional_internal::optional_data_dtor_base.926" = type { i8, [7 x i8], %union.anon.927 }
%union.anon.927 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.928", i8, [7 x i8] }>
%"struct.std::__1::pair.928" = type { i64, i64 }
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.938", %"class.mojo::ScopedHandleBase.1149", %"class.mojo::StructPtr.1150", %"class.std::__1::vector.1157", %"class.std::__1::vector.1164" }
%"class.mojo::StructPtr.938" = type { %"class.std::__1::unique_ptr.939" }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.943, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.958", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.975", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.981", %"class.std::__1::vector.988", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1023", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1028", %"class.absl::optional.1130", %"class.absl::optional.1141", %"class.std::__1::vector.988", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.943 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.944", %"class.std::__1::vector.945", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.944" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.947" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.958" = type { %"class.std::__1::unique_ptr.959" }
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.962", %"class.std::__1::vector.962", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"class.mojo::InlinedStructPtr.964"*, %"class.mojo::InlinedStructPtr.964"*, %"class.std::__1::__compressed_pair.966" }
%"class.mojo::InlinedStructPtr.964" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.mojo::InlinedStructPtr.964"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.975" = type { %"class.std::__1::__vector_base.976" }
%"class.std::__1::__vector_base.976" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %class.GURL* }
%"class.absl::optional.981" = type { %"class.absl::optional_internal::optional_data.982" }
%"class.absl::optional_internal::optional_data.982" = type { %"class.absl::optional_internal::optional_data_base.983" }
%"class.absl::optional_internal::optional_data_base.983" = type { %"class.absl::optional_internal::optional_data_dtor_base.984" }
%"class.absl::optional_internal::optional_data_dtor_base.984" = type { i8, [7 x i8], %union.anon.985 }
%union.anon.985 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.986, %class.scoped_refptr.986, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.1006", %"class.std::__1::basic_string", %"class.std::__1::vector.1014", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.986 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.987", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.995", %"class.std::__1::vector.999" }
%"class.base::RefCountedThreadSafe.987" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.988", %"class.std::__1::vector.988", %"class.std::__1::vector.988", %"class.std::__1::vector.988" }
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.999" = type { %"class.std::__1::__vector_base.1000" }
%"class.std::__1::__vector_base.1000" = type { %"class.std::__1::unique_ptr.995"*, %"class.std::__1::unique_ptr.995"*, %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"class.std::__1::unique_ptr.995"* }
%"class.std::__1::vector.1006" = type { %"class.std::__1::__vector_base.1007" }
%"class.std::__1::__vector_base.1007" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.1009" }
%"class.net::HashValue" = type { i32, %union.anon.1008 }
%union.anon.1008 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.1014" = type { %"class.std::__1::__vector_base.1015" }
%"class.std::__1::__vector_base.1015" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.1018" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.1016, i32, [4 x i8] }>
%class.scoped_refptr.1016 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.1017", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.1017" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.1028" = type { %"class.std::__1::unique_ptr.1029" }
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1032", %"class.mojo::StructPtr.1082", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1094", %"class.base::TimeDelta", %"class.absl::optional.1094", i32, [4 x i8], %"class.std::__1::vector.1106", %"class.mojo::StructPtr.1120", i8, [7 x i8] }>
%"class.std::__1::vector.1032" = type { %"class.std::__1::__vector_base.1033" }
%"class.std::__1::__vector_base.1033" = type { %"class.mojo::StructPtr.1034"*, %"class.mojo::StructPtr.1034"*, %"class.std::__1::__compressed_pair.1077" }
%"class.mojo::StructPtr.1034" = type { %"class.std::__1::unique_ptr.1035" }
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1038", %"class.base::flat_map.1045", %"class.base::flat_map.1055", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1065", i8, %"class.std::__1::vector.988", i32, %"class.mojo::StructPtr.1067", %"class.std::__1::vector.988" }
%"class.mojo::StructPtr.1038" = type { %"class.std::__1::unique_ptr.1039" }
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.1045" = type { %"class.base::internal::flat_tree.1046" }
%"class.base::internal::flat_tree.1046" = type { %"class.std::__1::vector.1047" }
%"class.std::__1::vector.1047" = type { %"class.std::__1::__vector_base.1048" }
%"class.std::__1::__vector_base.1048" = type { %"struct.std::__1::pair.1049"*, %"struct.std::__1::pair.1049"*, %"class.std::__1::__compressed_pair.1050" }
%"struct.std::__1::pair.1049" = type opaque
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::pair.1049"* }
%"class.base::flat_map.1055" = type { %"class.base::internal::flat_tree.1056" }
%"class.base::internal::flat_tree.1056" = type { %"class.std::__1::vector.1057" }
%"class.std::__1::vector.1057" = type { %"class.std::__1::__vector_base.1058" }
%"class.std::__1::__vector_base.1058" = type { %"struct.std::__1::pair.1059"*, %"struct.std::__1::pair.1059"*, %"class.std::__1::__compressed_pair.1060" }
%"struct.std::__1::pair.1059" = type opaque
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"struct.std::__1::pair.1059"* }
%"class.mojo::InlinedStructPtr.1065" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1067" = type { %"class.std::__1::unique_ptr.1068" }
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.988", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.mojo::StructPtr.1034"* }
%"class.mojo::StructPtr.1082" = type { %"class.std::__1::unique_ptr.1083" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1089", i32, %"class.absl::optional.1089" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1089", i32, %"class.absl::optional.1089" }
%"class.absl::optional.1094" = type { %"class.absl::optional_internal::optional_data.1095" }
%"class.absl::optional_internal::optional_data.1095" = type { %"class.absl::optional_internal::optional_data_base.1096" }
%"class.absl::optional_internal::optional_data_base.1096" = type { %"class.absl::optional_internal::optional_data_dtor_base.1097" }
%"class.absl::optional_internal::optional_data_dtor_base.1097" = type { i8, %union.anon.1098 }
%union.anon.1098 = type { %"class.std::__1::vector.1099" }
%"class.std::__1::vector.1106" = type { %"class.std::__1::__vector_base.1107" }
%"class.std::__1::__vector_base.1107" = type { %"class.mojo::StructPtr.1108"*, %"class.mojo::StructPtr.1108"*, %"class.std::__1::__compressed_pair.1115" }
%"class.mojo::StructPtr.1108" = type { %"class.std::__1::unique_ptr.1109" }
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1089" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.mojo::StructPtr.1108"* }
%"class.mojo::StructPtr.1120" = type { %"class.std::__1::unique_ptr.1121" }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.988"* }
%"class.absl::optional.1130" = type { %"class.absl::optional_internal::optional_data.1131" }
%"class.absl::optional_internal::optional_data.1131" = type { %"class.absl::optional_internal::optional_data_base.1132" }
%"class.absl::optional_internal::optional_data_base.1132" = type { %"class.absl::optional_internal::optional_data_dtor_base.1133" }
%"class.absl::optional_internal::optional_data_dtor_base.1133" = type { i8, %union.anon.1134 }
%union.anon.1134 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1135" }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.988", %"class.absl::optional.1089", %"class.std::__1::vector.988", %"class.std::__1::vector.988" }
%"class.std::__1::vector.988" = type { %"class.std::__1::__vector_base.989" }
%"class.std::__1::__vector_base.989" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.952" }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"class.mojo::ScopedHandleBase.1149" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.1150" = type { %"class.std::__1::unique_ptr.1151" }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1159" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1164" = type { %"class.std::__1::__vector_base.1165" }
%"class.std::__1::__vector_base.1165" = type { %"class.mojo::StructPtr.938"*, %"class.mojo::StructPtr.938"*, %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.mojo::StructPtr.938"* }
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::NetworkResourcesData"* }
%"class.blink::NetworkResourcesData" = type { %"class.WTF::Deque.1178", %"class.blink::HeapHashMap.1181", i64, i64, i64 }
%"class.WTF::Deque.1178" = type { %"class.WTF::Deque<WTF::String, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<WTF::String, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.387" }
%"class.blink::HeapHashMap.1181" = type { %"class.WTF::HashMap.1184" }
%"class.WTF::HashMap.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ %"struct.WTF::KeyValuePair.1187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1187" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1188" = type { %"class.absl::optional_internal::optional_data.1189" }
%"class.absl::optional_internal::optional_data.1189" = type { %"class.absl::optional_internal::optional_data_base.1190" }
%"class.absl::optional_internal::optional_data_base.1190" = type { %"class.absl::optional_internal::optional_data_dtor_base.1191" }
%"class.absl::optional_internal::optional_data_dtor_base.1191" = type { i8, %union.anon.1192 }
%union.anon.1192 = type { i32 }
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::XHRReplayData"* }
%"class.blink::XHRReplayData" = type <{ i32 (...)**, %"class.blink::WeakMember.779", %"class.WTF::AtomicString", %"class.blink::KURL", i8, [7 x i8], %"class.blink::HTTPHeaderMap", i8, [7 x i8] }>
%"class.WTF::HashMap.1202" = type { %"class.WTF::HashTable.1203" }
%"class.WTF::HashTable.1203" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type { %"class.WTF::String", %"class.std::__1::unique_ptr.1207" }
%"class.std::__1::unique_ptr.1207" = type { %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"class.blink::protocol::Network::Initiator"* }
%"class.blink::protocol::Network::Initiator" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.1216", %"class.crdtp::detail::ValueMaybe.1216", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.1210" }
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.v8_inspector::protocol::Runtime::API::StackTrace"* }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.crdtp::detail::ValueMaybe.1216" = type { i8, double }
%"class.blink::HeapHashSet.1220" = type { %"class.WTF::HashSet.1223" }
%"class.WTF::HashSet.1223" = type { %"class.WTF::HashTable.1224" }
%"class.WTF::HashTable.1224" = type <{ %"class.blink::Member.1226"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::XMLHttpRequest"* }
%"class.blink::XMLHttpRequest" = type { %"class.blink::XMLHttpRequestEventTarget", %"class.blink::ThreadableLoaderClient", %"class.blink::DocumentParserClient", %"class.blink::ActiveScriptWrappable.1228", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1231", %"class.blink::KURL", %"class.mojo::PendingRemote.1233", %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.mojo::StructPtr.1234", %"class.blink::Member.1246", %"class.WTF::AtomicString", %"class.base::TimeDelta", %"class.blink::Member.1248", %"class.blink::TaskHandle", %"class.blink::Member.1251", i32, %"class.blink::ResourceResponse", %"class.std::__1::unique_ptr.1284", %"class.blink::TraceWrapperV8String", %"class.blink::Member.1310", %"class.blink::Member.1312", %class.scoped_refptr.1323, i64, i64, i64, %"class.blink::Member.1332", i64, i32, %"class.blink::Member.1334", i32, %"class.v8::Isolate"*, %class.scoped_refptr.1336, %class.scoped_refptr.286, %"class.blink::Member.1351", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::probe::AsyncTaskId" }
%"class.blink::XMLHttpRequestEventTarget" = type { %"class.blink::EventTargetWithInlineData" }
%"class.blink::ThreadableLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DocumentParserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable.1228" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::XMLHttpRequestUpload"* }
%"class.blink::XMLHttpRequestUpload" = type opaque
%"class.mojo::PendingRemote.1233" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.1234" = type { %"class.std::__1::unique_ptr.1235" }
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type opaque
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::ThreadableLoader"* }
%"class.blink::ThreadableLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::Member.2364", %"class.blink::Member.327", %"class.blink::Member.715", %"struct.blink::ResourceLoaderOptions", i32, [4 x i8], %"class.base::TimeDelta", %"class.blink::HeapTaskRunnerTimer.2366", %"class.base::TimeTicks", %"class.blink::RawResourceClientStateChecker", [4 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2262", [7 x i8], %"class.blink::Member.2263", i8 }>
%"class.blink::Member.2364" = type { %"class.blink::MemberBase.2365" }
%"class.blink::MemberBase.2365" = type { %"class.blink::ThreadableLoaderClient"* }
%"class.blink::HeapTaskRunnerTimer.2366" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2367", { i64, i64 } }
%"class.blink::WeakMember.2367" = type { %"class.blink::MemberBase.1252" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%"class.std::__1::unique_ptr.1284" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1287", i32, %"class.WTF::Vector.1293", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1298" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::TraceWrapperV8String" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.1307" }
%"class.blink::TraceWrapperV8Reference.1307" = type { %"class.v8::TracedReference.1308" }
%"class.v8::TracedReference.1308" = type { %"class.v8::BasicTracedReference.1309" }
%"class.v8::BasicTracedReference.1309" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::XMLHttpRequestProgressEventThrottle"* }
%"class.blink::XMLHttpRequestProgressEventThrottle" = type <{ %"class.blink::TimerBase", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.1226", %"class.blink::XMLHttpRequestProgressEventThrottle::DeferredEvent", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::XMLHttpRequestProgressEventThrottle::DeferredEvent" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::XMLHttpRequest::BlobLoader"* }
%"class.blink::XMLHttpRequest::BlobLoader" = type opaque
%"class.blink::InspectorAgentState::MapField.1363" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.1364" }
%"class.WTF::HashMap.1364" = type { %"class.WTF::HashTable.1365" }
%"class.WTF::HashTable.1365" = type <{ %"struct.WTF::KeyValuePair.1368"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1368" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::SimpleField.1369" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.1358" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.3091, %"class.mojo::PendingRemote.3270" }
%"class.mojo::PendingRemote.3270" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.crdtp::detail::ValueMaybe.3271" = type { i8, i8 }
%"class.crdtp::detail::PtrMaybe.3272" = type { %"class.std::__1::unique_ptr.2165" }
%"class.std::__1::unique_ptr.3324" = type { %"class.std::__1::__compressed_pair.3325" }
%"class.std::__1::__compressed_pair.3325" = type { %"struct.std::__1::__compressed_pair_elem.3326" }
%"struct.std::__1::__compressed_pair_elem.3326" = type { %"class.blink::protocol::Network::PostDataEntry"* }
%"class.blink::protocol::Network::PostDataEntry" = type { %"class.crdtp::ProtocolObject.3327", %"class.crdtp::detail::ValueMaybe.3330" }
%"class.crdtp::ProtocolObject.3327" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.3330" = type { i8, %"class.blink::protocol::Binary" }
%"class.blink::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.3331 }
%class.scoped_refptr.3331 = type { %"class.blink::protocol::Binary::Impl"* }
%"class.blink::protocol::Binary::Impl" = type <{ i32 (...)**, %"class.WTF::RefCounted.3332", [4 x i8] }>
%"class.WTF::RefCounted.3332" = type { %"class.base::RefCounted.3333" }
%"class.base::RefCounted.3333" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::StringAppend.3742" = type { i8*, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.3359" = type { %"class.std::__1::unique_ptr.3360" }
%"class.std::__1::unique_ptr.3360" = type { %"class.std::__1::__compressed_pair.3361" }
%"class.std::__1::__compressed_pair.3361" = type { %"struct.std::__1::__compressed_pair_elem.3362" }
%"struct.std::__1::__compressed_pair_elem.3362" = type { %"class.blink::protocol::Network::Response"* }
%"class.blink::protocol::Network::Response" = type { %"class.crdtp::ProtocolObject.3363", %"class.WTF::String", i32, %"class.WTF::String", %"class.std::__1::unique_ptr.3282", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3366", %"class.crdtp::detail::ValueMaybe", i8, double, %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271", double, %"class.crdtp::detail::PtrMaybe.3367", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.1216", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3377" }
%"class.crdtp::ProtocolObject.3363" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3282" = type { %"class.std::__1::__compressed_pair.3283" }
%"class.std::__1::__compressed_pair.3283" = type { %"struct.std::__1::__compressed_pair_elem.3284" }
%"struct.std::__1::__compressed_pair_elem.3284" = type { %"class.blink::protocol::Object"* }
%"class.blink::protocol::Object" = type { %"class.crdtp::Serializable", %"class.std::__1::unique_ptr.3285" }
%"class.std::__1::unique_ptr.3285" = type { %"class.std::__1::__compressed_pair.3286" }
%"class.std::__1::__compressed_pair.3286" = type { %"struct.std::__1::__compressed_pair_elem.3287" }
%"struct.std::__1::__compressed_pair_elem.3287" = type { %"class.blink::protocol::DictionaryValue"* }
%"class.blink::protocol::DictionaryValue" = type { %"class.blink::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::vector.2044" }
%"class.blink::protocol::Value.base" = type <{ %"class.crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.3288" }
%"class.std::__1::__hash_table.3288" = type <{ %"class.std::__1::unique_ptr.3289", %"class.std::__1::__compressed_pair.3299", %"class.std::__1::__compressed_pair.3304", %"class.std::__1::__compressed_pair.3307", [4 x i8] }>
%"class.std::__1::unique_ptr.3289" = type { %"class.std::__1::__compressed_pair.3290" }
%"class.std::__1::__compressed_pair.3290" = type { %"struct.std::__1::__compressed_pair_elem.3291", %"struct.std::__1::__compressed_pair_elem.3293" }
%"struct.std::__1::__compressed_pair_elem.3291" = type { %"struct.std::__1::__hash_node_base.3292"** }
%"struct.std::__1::__hash_node_base.3292" = type { %"struct.std::__1::__hash_node_base.3292"* }
%"struct.std::__1::__compressed_pair_elem.3293" = type { %"class.std::__1::__bucket_list_deallocator.3294" }
%"class.std::__1::__bucket_list_deallocator.3294" = type { %"class.std::__1::__compressed_pair.3295" }
%"class.std::__1::__compressed_pair.3295" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::__compressed_pair.3299" = type { %"struct.std::__1::__compressed_pair_elem.3300" }
%"struct.std::__1::__compressed_pair_elem.3300" = type { %"struct.std::__1::__hash_node_base.3292" }
%"class.std::__1::__compressed_pair.3304" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"class.std::__1::__compressed_pair.3307" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.crdtp::detail::PtrMaybe.3366" = type { %"class.std::__1::unique_ptr.3282" }
%"class.crdtp::detail::PtrMaybe.3367" = type { %"class.std::__1::unique_ptr.3368" }
%"class.std::__1::unique_ptr.3368" = type { %"class.std::__1::__compressed_pair.3369" }
%"class.std::__1::__compressed_pair.3369" = type { %"struct.std::__1::__compressed_pair_elem.3370" }
%"struct.std::__1::__compressed_pair_elem.3370" = type { %"class.blink::protocol::Network::ResourceTiming"* }
%"class.blink::protocol::Network::ResourceTiming" = type { %"class.crdtp::ProtocolObject.3371", double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.crdtp::ProtocolObject.3371" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3377" = type { %"class.std::__1::unique_ptr.3378" }
%"class.std::__1::unique_ptr.3378" = type { %"class.std::__1::__compressed_pair.3379" }
%"class.std::__1::__compressed_pair.3379" = type { %"struct.std::__1::__compressed_pair_elem.3380" }
%"struct.std::__1::__compressed_pair_elem.3380" = type { %"class.blink::protocol::Network::SecurityDetails"* }
%"class.blink::protocol::Network::SecurityDetails" = type { %"class.crdtp::ProtocolObject.3381", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2041", %"class.WTF::String", double, double, %"class.std::__1::unique_ptr.3384", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3381" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3384" = type { %"class.std::__1::__compressed_pair.3385" }
%"class.std::__1::__compressed_pair.3385" = type { %"struct.std::__1::__compressed_pair_elem.3386" }
%"struct.std::__1::__compressed_pair_elem.3386" = type { %"class.std::__1::vector.3387"* }
%"class.std::__1::vector.3387" = type { %"class.std::__1::__vector_base.3388" }
%"class.std::__1::__vector_base.3388" = type { %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::__compressed_pair.3398" }
%"class.std::__1::unique_ptr.3389" = type { %"class.std::__1::__compressed_pair.3390" }
%"class.std::__1::__compressed_pair.3390" = type { %"struct.std::__1::__compressed_pair_elem.3391" }
%"struct.std::__1::__compressed_pair_elem.3391" = type { %"class.blink::protocol::Network::SignedCertificateTimestamp"* }
%"class.blink::protocol::Network::SignedCertificateTimestamp" = type { %"class.crdtp::ProtocolObject.3392", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3392" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.3398" = type { %"struct.std::__1::__compressed_pair_elem.3399" }
%"struct.std::__1::__compressed_pair_elem.3399" = type { %"class.std::__1::unique_ptr.3389"* }
%"class.blink::NetworkResourcesData::ResourceData" = type { %"class.blink::FontResourceClearDataObserver", %"class.blink::Member.1174", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String", %"class.blink::Member.1193", i8, %class.scoped_refptr.1323, i8, i32, i32, %"class.WTF::String", %"class.WTF::String", i64, i64, %class.scoped_refptr.1323, %"class.blink::UntracedMember", %class.scoped_refptr.3097, %"class.WTF::Vector.1258", %class.scoped_refptr.3091 }
%"class.blink::FontResourceClearDataObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.3275" }
%"class.blink::MemberBase.3275" = type { %"class.blink::Resource"* }
%"class.std::__1::vector.3322" = type { %"class.std::__1::__vector_base.3323" }
%"class.std::__1::__vector_base.3323" = type { %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::__compressed_pair.3337" }
%"class.std::__1::__compressed_pair.3337" = type { %"struct.std::__1::__compressed_pair_elem.3338" }
%"struct.std::__1::__compressed_pair_elem.3338" = type { %"class.std::__1::unique_ptr.3324"* }
%"class.blink::protocol::Network::Request" = type { %"class.crdtp::ProtocolObject.3279", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.std::__1::unique_ptr.3282", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::PtrMaybe.3318", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::PtrMaybe.3345" }
%"class.crdtp::ProtocolObject.3279" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3318" = type { %"class.std::__1::unique_ptr.3319" }
%"class.std::__1::unique_ptr.3319" = type { %"class.std::__1::__compressed_pair.3320" }
%"class.std::__1::__compressed_pair.3320" = type { %"struct.std::__1::__compressed_pair_elem.3321" }
%"struct.std::__1::__compressed_pair_elem.3321" = type { %"class.std::__1::vector.3322"* }
%"class.crdtp::detail::PtrMaybe.3345" = type { %"class.std::__1::unique_ptr.3346" }
%"class.std::__1::unique_ptr.3346" = type { %"class.std::__1::__compressed_pair.3347" }
%"class.std::__1::__compressed_pair.3347" = type { %"struct.std::__1::__compressed_pair_elem.3348" }
%"struct.std::__1::__compressed_pair_elem.3348" = type { %"class.blink::protocol::Network::TrustTokenParams"* }
%"class.blink::protocol::Network::TrustTokenParams" = type { %"class.crdtp::ProtocolObject.3349", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3352" }
%"class.crdtp::ProtocolObject.3349" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3352" = type { %"class.std::__1::unique_ptr.2041" }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.3417", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3417" = type { %"class.std::__1::__compressed_pair.3418" }
%"class.std::__1::__compressed_pair.3418" = type { %"struct.std::__1::__compressed_pair_elem.3419" }
%"struct.std::__1::__compressed_pair_elem.3419" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.3135", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr.1284" }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.1495", %"class.blink::Member.3426", %"struct.blink::FramePolicy", %"class.blink::Member.3428", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3426" = type { %"class.blink::MemberBase.3427" }
%"class.blink::MemberBase.3427" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.3428" = type { %"class.blink::MemberBase.3429" }
%"class.blink::MemberBase.3429" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.WTF::StringAppend.3806" = type { %"class.WTF::StringAppend.3742", i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.crdtp::detail::PtrMaybe.3430" = type { %"class.std::__1::unique_ptr.1207" }
%"class.network::mojom::blink::WebSocketHandshakeRequest" = type { %"class.blink::KURL", %"class.WTF::Vector.3431", %"class.WTF::String" }
%"class.WTF::Vector.3431" = type { %"class.WTF::VectorBuffer.3432" }
%"class.WTF::VectorBuffer.3432" = type { %"class.WTF::VectorBufferBase.3433" }
%"class.WTF::VectorBufferBase.3433" = type { %"class.mojo::InlinedStructPtr.3434"*, i32, i32 }
%"class.mojo::InlinedStructPtr.3434" = type <{ %"class.network::mojom::blink::HttpHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::HttpHeader" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::protocol::Network::WebSocketRequest" = type { %"class.crdtp::ProtocolObject.3441", %"class.std::__1::unique_ptr.3282" }
%"class.crdtp::ProtocolObject.3441" = type { %"class.crdtp::Serializable" }
%"class.crdtp::ErrorSupport" = type { %"class.std::__1::vector.3820", %"class.std::__1::basic_string" }
%"class.std::__1::vector.3820" = type { %"class.std::__1::__vector_base.3821" }
%"class.std::__1::__vector_base.3821" = type { %"struct.crdtp::ErrorSupport::Segment"*, %"struct.crdtp::ErrorSupport::Segment"*, %"class.std::__1::__compressed_pair.3823" }
%"struct.crdtp::ErrorSupport::Segment" = type { i32, %union.anon.3822 }
%union.anon.3822 = type { i8* }
%"class.std::__1::__compressed_pair.3823" = type { %"struct.std::__1::__compressed_pair_elem.3824" }
%"struct.std::__1::__compressed_pair_elem.3824" = type { %"struct.crdtp::ErrorSupport::Segment"* }
%"class.blink::protocol::Value" = type <{ %"class.crdtp::Serializable", i32, [4 x i8] }>
%"class.network::mojom::blink::WebSocketHandshakeResponse" = type { %"class.blink::KURL", %"class.mojo::InlinedStructPtr.3448", i32, %"class.WTF::String", %"class.net::IPEndPoint", %"class.WTF::Vector.3431", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::InlinedStructPtr.3448" = type { %"class.network::mojom::blink::HttpVersion", i32 }
%"class.network::mojom::blink::HttpVersion" = type { i16, i16 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.3449", %"class.WTF::String" }
%"class.WTF::StringAppend.3449" = type { %"class.WTF::AtomicString", i8* }
%"class.blink::protocol::Network::WebSocketResponse" = type { %"class.crdtp::ProtocolObject.3453", i32, %"class.WTF::String", %"class.std::__1::unique_ptr.3282", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.3366", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.3453" = type { %"class.crdtp::Serializable" }
%"class.WTF::Vector.3462" = type { %"class.WTF::VectorBuffer.3463" }
%"class.WTF::VectorBuffer.3463" = type { %"class.WTF::VectorBufferBase.3464" }
%"class.WTF::VectorBufferBase.3464" = type { %"class.base::span"*, i32, i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::protocol::Network::WebSocketFrame" = type { %"class.crdtp::ProtocolObject.3470", double, i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3470" = type { %"class.crdtp::Serializable" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::NetworkStateNotifier" = type <{ %"class.WTF::Mutex", %"struct.blink::NetworkStateNotifier::NetworkState", i8, [7 x i8], %"struct.blink::NetworkStateNotifier::NetworkState", %"class.WTF::HashMap.3486", %"class.WTF::HashMap.3486", i8, [7 x i8] }>
%"struct.blink::NetworkStateNotifier::NetworkState" = type <{ i8, i8, i8, i8, i32, double, i32, [4 x i8], %"class.absl::optional.415", %"class.absl::optional.415", %"class.absl::optional.3476", i8, [3 x i8], %"class.absl::optional.3481", [4 x i8] }>
%"class.absl::optional.3476" = type { %"class.absl::optional_internal::optional_data.3477" }
%"class.absl::optional_internal::optional_data.3477" = type { %"class.absl::optional_internal::optional_data_base.3478" }
%"class.absl::optional_internal::optional_data_base.3478" = type { %"class.absl::optional_internal::optional_data_dtor_base.3479" }
%"class.absl::optional_internal::optional_data_dtor_base.3479" = type { i8, %union.anon.3480 }
%union.anon.3480 = type { double }
%"class.absl::optional.3481" = type { %"class.absl::optional_internal::optional_data.3482" }
%"class.absl::optional_internal::optional_data.3482" = type { %"class.absl::optional_internal::optional_data_base.3483" }
%"class.absl::optional_internal::optional_data_base.3483" = type { %"class.absl::optional_internal::optional_data_dtor_base.3484" }
%"class.absl::optional_internal::optional_data_dtor_base.3484" = type { i8, %union.anon.3485 }
%union.anon.3485 = type { i32 }
%"class.WTF::HashMap.3486" = type { %"class.WTF::HashTable.3487" }
%"class.WTF::HashTable.3487" = type <{ %"struct.WTF::KeyValuePair.3490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3490" = type { %class.scoped_refptr.1372, %"class.std::__1::unique_ptr.3696" }
%"class.std::__1::unique_ptr.3696" = type { %"class.std::__1::__compressed_pair.3697" }
%"class.std::__1::__compressed_pair.3697" = type { %"struct.std::__1::__compressed_pair_elem.3698" }
%"struct.std::__1::__compressed_pair_elem.3698" = type { %"struct.blink::NetworkStateNotifier::ObserverList"* }
%"struct.blink::NetworkStateNotifier::ObserverList" = type { i8, %"class.WTF::Vector.3699", %"class.WTF::Vector.3704" }
%"class.WTF::Vector.3699" = type { %"class.WTF::VectorBuffer.3700" }
%"class.WTF::VectorBuffer.3700" = type { %"class.WTF::VectorBufferBase.3701" }
%"class.WTF::VectorBufferBase.3701" = type { %"class.blink::NetworkStateNotifier::NetworkStateObserver"**, i32, i32 }
%"class.blink::NetworkStateNotifier::NetworkStateObserver" = type { i32 (...)** }
%"class.WTF::Vector.3704" = type { %"class.WTF::VectorBuffer.3705" }
%"class.WTF::VectorBuffer.3705" = type { %"class.WTF::VectorBufferBase.3706" }
%"class.WTF::VectorBufferBase.3706" = type { i32*, i32, i32 }
%"struct.std::__1::pair.3491" = type { %"class.WTF::String", %"class.blink::protocol::Value"* }
%"class.WTF::StringAppend.3949" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::protocol::Network::Backend::GetResponseBodyCallback" = type { i32 (...)** }
%"class.base::OnceCallback.3498" = type { %"class.base::internal::CallbackBase" }
%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient" = type { %"class.blink::FileReaderLoaderClient", %class.scoped_refptr.3097, %"class.WTF::String", %"class.WTF::String", %"class.base::OnceCallback.3498", %"class.std::__1::unique_ptr.3499", %class.scoped_refptr.1323 }
%"class.blink::FileReaderLoaderClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3499" = type { %"class.std::__1::__compressed_pair.3500" }
%"class.std::__1::__compressed_pair.3500" = type { %"struct.std::__1::__compressed_pair_elem.3501" }
%"struct.std::__1::__compressed_pair_elem.3501" = type { %"class.blink::FileReaderLoader"* }
%"class.blink::FileReaderLoader" = type { %"class.blink::mojom::blink::BlobReaderClient", i32, %"class.blink::FileReaderLoaderClient"*, %"class.WTF::TextEncoding", %"class.WTF::String", %"class.blink::ArrayBufferContents", i8, %"class.blink::Persistent.3502", %"class.WTF::String", %"class.std::__1::unique_ptr.1284", i8, i64, %"class.absl::optional.1353", i32, i32, %"class.mojo::ScopedHandleBase.1149", %"class.mojo::SimpleWatcher", %"class.mojo::Receiver", i8, i8, %class.scoped_refptr.1372, %"class.base::WeakPtrFactory.3505" }
%"class.blink::mojom::blink::BlobReaderClient" = type { i32 (...)** }
%"class.blink::Persistent.3502" = type { %"class.blink::PersistentBase.3503" }
%"class.blink::PersistentBase.3503" = type { %"class.blink::DOMArrayBuffer"*, %"class.blink::PersistentNodePtr" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BlobReaderClientStub" }
%"class.blink::mojom::blink::BlobReaderClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BlobReaderClient"* }
%"class.base::WeakPtrFactory.3505" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.3510" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.3510" = type { %"class.v8::TracedReference.3511" }
%"class.v8::TracedReference.3511" = type { %"class.v8::BasicTracedReference.3512" }
%"class.v8::BasicTracedReference.3512" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.434" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.426", [4 x i8] }>
%"class.blink::MemoryCache" = type { %"class.blink::MemoryCacheDumpClient", %"class.blink::MemoryPressureListener", %"class.blink::HeapHashMap.3519", i8, i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i64, %class.scoped_refptr.1372 }
%"class.blink::MemoryCacheDumpClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashMap.3519" = type { %"class.WTF::HashMap.3522" }
%"class.WTF::HashMap.3522" = type { %"class.WTF::HashTable.3523" }
%"class.WTF::HashTable.3523" = type <{ %"struct.WTF::KeyValuePair.3525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3525" = type opaque
%"class.blink::HeapVector.3526" = type { %"class.WTF::Vector.3529" }
%"class.WTF::Vector.3529" = type { %"class.WTF::VectorBuffer.3530" }
%"class.WTF::VectorBuffer.3530" = type { %"class.WTF::VectorBufferBase.3531" }
%"class.WTF::VectorBufferBase.3531" = type { %"class.blink::Member.3532"*, i32, i32 }
%"class.blink::Member.3532" = type { %"class.blink::MemberBase.3533" }
%"class.blink::MemberBase.3533" = type { %"class.blink::NetworkResourcesData::ResourceData"* }
%"class.std::__1::unique_ptr.3538" = type { %"class.std::__1::__compressed_pair.3539" }
%"class.std::__1::__compressed_pair.3539" = type { %"struct.std::__1::__compressed_pair_elem.3540" }
%"struct.std::__1::__compressed_pair_elem.3540" = type { %"class.std::__1::vector.3541"* }
%"class.std::__1::vector.3541" = type { %"class.std::__1::__vector_base.3542" }
%"class.std::__1::__vector_base.3542" = type { %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::__compressed_pair.3549" }
%"class.std::__1::unique_ptr.3543" = type { %"class.std::__1::__compressed_pair.3544" }
%"class.std::__1::__compressed_pair.3544" = type { %"struct.std::__1::__compressed_pair_elem.3545" }
%"struct.std::__1::__compressed_pair_elem.3545" = type { %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* }
%"class.v8_inspector::protocol::Debugger::API::SearchMatch" = type { %"class.v8_inspector::protocol::Exported" }
%"class.std::__1::__compressed_pair.3549" = type { %"struct.std::__1::__compressed_pair_elem.3550" }
%"struct.std::__1::__compressed_pair_elem.3550" = type { %"class.std::__1::unique_ptr.3543"* }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.3557 }
%union.anon.3557 = type { i8* }
%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback" = type { i32 (...)** }
%"class.WTF::RetainedRefWrapper" = type { %class.scoped_refptr.3565 }
%class.scoped_refptr.3565 = type { %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* }
%"class.blink::(anonymous namespace)::InspectorPostBodyParser" = type { %"class.WTF::RefCounted.3566", %"class.std::__1::unique_ptr.3559", %class.scoped_refptr.1372, i8, %"class.WTF::Vector.386" }
%"class.WTF::RefCounted.3566" = type { %"class.base::RefCounted.3567" }
%"class.base::RefCounted.3567" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3559" = type { %"class.std::__1::__compressed_pair.3560" }
%"class.std::__1::__compressed_pair.3560" = type { %"struct.std::__1::__compressed_pair_elem.3561" }
%"struct.std::__1::__compressed_pair_elem.3561" = type { %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3859, i32, i8, i8, [2 x i8] }>
%union.anon.3859 = type { %"class.WTF::Vector.3860" }
%"class.WTF::Vector.3860" = type { %"class.WTF::VectorBuffer.3861" }
%"class.WTF::VectorBuffer.3861" = type { %"class.WTF::VectorBufferBase.221", [16 x i8] }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.3568", %"class.std::__1::vector.3576" }
%"class.std::__1::vector.3568" = type { %"class.std::__1::__vector_base.3569" }
%"class.std::__1::__vector_base.3569" = type { %"struct.std::__1::pair.3570"*, %"struct.std::__1::pair.3570"*, %"class.std::__1::__compressed_pair.3571" }
%"struct.std::__1::pair.3570" = type opaque
%"class.std::__1::__compressed_pair.3571" = type { %"struct.std::__1::__compressed_pair_elem.3572" }
%"struct.std::__1::__compressed_pair_elem.3572" = type { %"struct.std::__1::pair.3570"* }
%"class.std::__1::vector.3576" = type { %"class.std::__1::__vector_base.3577" }
%"class.std::__1::__vector_base.3577" = type { %"struct.std::__1::pair.3578"*, %"struct.std::__1::pair.3578"*, %"class.std::__1::__compressed_pair.3579" }
%"struct.std::__1::pair.3578" = type opaque
%"class.std::__1::__compressed_pair.3579" = type { %"struct.std::__1::__compressed_pair_elem.3580" }
%"struct.std::__1::__compressed_pair_elem.3580" = type { %"struct.std::__1::pair.3578"* }
%"class.WTF::StringTypeAdapter" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.3751" = type { %"class.WTF::StringTypeAdapter.3752" }
%"class.WTF::StringTypeAdapter.3752" = type { %"class.WTF::StringView" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3899", %"class.blink::FreeList", %"class.WTF::Vector.3904" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.3898" }
%"struct.std::__1::array.3898" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.3899" = type { %"class.WTF::VectorBuffer.3900" }
%"class.WTF::VectorBuffer.3900" = type { %"class.WTF::VectorBufferBase.3901" }
%"class.WTF::VectorBufferBase.3901" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.3904" = type { %"class.WTF::VectorBuffer.3905" }
%"class.WTF::VectorBuffer.3905" = type { %"class.WTF::VectorBufferBase.3906" }
%"class.WTF::VectorBufferBase.3906" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"struct.std::__1::__split_buffer.3931" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.3932" }
%"class.std::__1::__compressed_pair.3932" = type { %"struct.std::__1::__compressed_pair_elem.2330", %"struct.std::__1::__compressed_pair_elem.3933" }
%"struct.std::__1::__compressed_pair_elem.3933" = type { %"class.std::__1::allocator.2332"* }
%"class.std::__1::allocator.2332" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.3942" = type { %"class.WTF::StringTypeAdapter.3752" }

$_ZN5blink19InspectorAgentState8MapFieldIbED2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network13PostDataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network26SignedCertificateTimestampENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRKS3_EEvOT_ = comdat any

$_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS3_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20NetworkResourcesDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13XHRReplayDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink13XHRReplayData5TraceEPNS_7VisitorE = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_16ExecutionContextEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_ = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNSt3__16vectorIN3net12SourceStream10SourceTypeENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3net12SourceStream10SourceTypeERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13XHRReplayDataEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13XHRReplayDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13XHRReplayDataEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN3WTF6StringES6_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS7_14default_deleteISD_EEEE13scoped_refptrINS3_12SharedBufferEEEJS4_S4_SG_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_ = comdat any

$_ZN4base8internal9BindStateIPFvRKN3WTF6StringES5_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS6_14default_deleteISC_EEEE13scoped_refptrINS2_12SharedBufferEEEJS3_S3_SF_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERA5_KcSD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RA5_KcSA_EEvRT_OT0_OT1_ = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES1_SB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20NetworkResourcesDataEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20NetworkResourcesDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20NetworkResourcesDataEE7GetNameEPKv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink13XHRReplayDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = comdat any

@_ZTVN5blink21InspectorNetworkAgentE = hidden unnamed_addr constant { [28 x i8*], [22 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.crdtp::detail::ValueMaybe.2124"*, %"class.crdtp::detail::ValueMaybe.2124"*, %"class.crdtp::detail::ValueMaybe.2124"*)* @_ZN5blink21InspectorNetworkAgent6enableEN5crdtp6detail10ValueMaybeIiEES4_S4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::protocol::Object"*)* @_ZN5blink21InspectorNetworkAgent19setExtraHTTPHeadersENSt3__110unique_ptrINS_8protocol6ObjectENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZN5blink21InspectorNetworkAgent19setAttachDebugStackEb to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)* @_ZN5blink21InspectorNetworkAgent15getResponseBodyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3271"*, %"class.crdtp::detail::ValueMaybe.3271"*, %"class.std::__1::unique_ptr.3538"*)* @_ZN5blink21InspectorNetworkAgent20searchInResponseBodyERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIbEES8_PNSt3__110unique_ptrINS9_6vectorINSA_IN12v8_inspector8protocol8Debugger3API11SearchMatchENS9_14default_deleteISG_EEEENS9_9allocatorISJ_EEEENSH_ISM_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*)* @_ZN5blink21InspectorNetworkAgent14setBlockedURLsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*)* @_ZN5blink21InspectorNetworkAgent9replayXHRERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i8*)* @_ZN5blink21InspectorNetworkAgent20canClearBrowserCacheEPb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i8*)* @_ZN5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1, double, double, double, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink21InspectorNetworkAgent24emulateNetworkConditionsEbdddN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZN5blink21InspectorNetworkAgent16setCacheDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZN5blink21InspectorNetworkAgent22setBypassServiceWorkerEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i32, i32)* @_ZN5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2041"*)* @_ZN5blink21InspectorNetworkAgent14getCertificateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)* @_ZN5blink21InspectorNetworkAgent18getRequestPostDataERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend26GetRequestPostDataCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*)* @_ZN5blink21InspectorNetworkAgent20setAcceptedEncodingsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv to i8*)], [22 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*)* @_ZThn8_N5blink21InspectorNetworkAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*)* @_ZThn8_N5blink21InspectorNetworkAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*)* @_ZThn8_N5blink21InspectorNetworkAgent20setAcceptedEncodingsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*)* @_ZThn8_N5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i8*)* @_ZThn8_N5blink21InspectorNetworkAgent20canClearBrowserCacheEPb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i8*)* @_ZThn8_N5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*)* @_ZThn8_N5blink21InspectorNetworkAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1, double, double, double, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink21InspectorNetworkAgent24emulateNetworkConditionsEbdddN5crdtp6detail10ValueMaybeIN3WTF6StringEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.crdtp::detail::ValueMaybe.2124"*, %"class.crdtp::detail::ValueMaybe.2124"*, %"class.crdtp::detail::ValueMaybe.2124"*)* @_ZThn8_N5blink21InspectorNetworkAgent6enableEN5crdtp6detail10ValueMaybeIiEES4_S4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2041"*)* @_ZThn8_N5blink21InspectorNetworkAgent14getCertificateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)* @_ZThn8_N5blink21InspectorNetworkAgent15getResponseBodyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)* @_ZThn8_N5blink21InspectorNetworkAgent18getRequestPostDataERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend26GetRequestPostDataCallbackENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*)* @_ZThn8_N5blink21InspectorNetworkAgent9replayXHRERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe.3271"*, %"class.crdtp::detail::ValueMaybe.3271"*, %"class.std::__1::unique_ptr.3538"*)* @_ZThn8_N5blink21InspectorNetworkAgent20searchInResponseBodyERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIbEES8_PNSt3__110unique_ptrINS9_6vectorINSA_IN12v8_inspector8protocol8Debugger3API11SearchMatchENS9_14default_deleteISG_EEEENS9_9allocatorISJ_EEEENSH_ISM_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*)* @_ZThn8_N5blink21InspectorNetworkAgent14setBlockedURLsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZThn8_N5blink21InspectorNetworkAgent22setBypassServiceWorkerEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZThn8_N5blink21InspectorNetworkAgent16setCacheDisabledEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i32, i32)* @_ZThn8_N5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::protocol::Object"*)* @_ZThn8_N5blink21InspectorNetworkAgent19setExtraHTTPHeadersENSt3__110unique_ptrINS_8protocol6ObjectENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorNetworkAgent"*, i1)* @_ZThn8_N5blink21InspectorNetworkAgent19setAttachDebugStackEb to i8*)] }, align 8
@_ZN5blink26fetch_initiator_type_names15kXmlhttprequestE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names6kFetchE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names7kBeaconE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names5kPingE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink26fetch_initiator_type_names9kInternalE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names8kRefererE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZN5blink8protocol7Network9Initiator8TypeEnum6ScriptE = external local_unnamed_addr global i8*, align 8
@_ZN5blink26fetch_initiator_type_names4kCSSE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names6kUacssE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink8protocol7Network9Initiator8TypeEnum6ParserE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network9Initiator8TypeEnum5OtherE = external local_unnamed_addr global i8*, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZN5blink12_GLOBAL__N_123kDefaultTotalBufferSizeE = internal unnamed_addr constant i32 100000000, align 4
@_ZN5blink12_GLOBAL__N_126kDefaultResourceBufferSizeE = internal unnamed_addr constant i32 10000000, align 4
@.str.3 = private unnamed_addr constant [23 x i8] c"Domain must be enabled\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Given id does not correspond to XHR\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Document is already detached\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"Unknown encoding type: \00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Unknown connection type\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"emulateNetworkConditions\00", align 1
@.str.9 = private unnamed_addr constant [75 x i8] c"../../third_party/blink/renderer/core/inspector/inspector_network_agent.cc\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"Not supported\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"No resource with given identifier found\00", align 1
@.str.12 = private unnamed_addr constant [49 x i8] c"Request content was evicted from inspector cache\00", align 1
@.str.13 = private unnamed_addr constant [49 x i8] c"No data found for resource with given identifier\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"No resource with given id was found\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"No post data available for the request\00", align 1
@_ZTVN5blink19InspectorAgentState8MapFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField"*)* @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, bool>]\00", align 1
@_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.1363"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.1363"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.1363"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::MapField.1363"*)* @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [22 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv to i8*)], [22 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.18 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink8protocol7Network17BlockedReasonEnum3CspE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum12MixedContentE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum6OriginE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum9InspectorE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum17SubresourceFilterE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum11ContentTypeE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum32CoepFrameResourceNeedsCoepHeaderE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum43CoopSandboxedIframeCannotNavigateToCoopPageE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum17CorpNotSameOriginE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum49CorpNotSameOriginAfterDefaultedToSameOriginByCoepE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network17BlockedReasonEnum15CorpNotSameSiteE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network20ResourcePriorityEnum7VeryLowE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network20ResourcePriorityEnum3LowE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network20ResourcePriorityEnum6MediumE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network20ResourcePriorityEnum4HighE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network20ResourcePriorityEnum8VeryHighE = external constant [0 x i8], align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@_ZTVN5blink8protocol7Network13PostDataEntryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol6BinaryE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.21 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZTVN5blink8protocol7Network7RequestE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink8protocol7Network16TrustTokenParamsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum8IssuanceE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum10RedemptionE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum7SigningE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network16TrustTokenParams17RefreshPolicyEnum9UseCachedE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network16TrustTokenParams17RefreshPolicyEnum7RefreshE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol8Security20MixedContentTypeEnum4NoneE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security20MixedContentTypeEnum9BlockableE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security20MixedContentTypeEnum19OptionallyBlockableE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum9UnsafeUrlE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum27StrictOriginWhenCrossOriginE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum23NoReferrerWhenDowngradeE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum10NoReferrerE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum6OriginE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum21OriginWhenCrossOriginE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum10SameOriginE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum12StrictOriginE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol8Security17SecurityStateEnum7UnknownE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security17SecurityStateEnum7NeutralE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security17SecurityStateEnum8InsecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security17SecurityStateEnum6SecureE = external constant [0 x i8], align 1
@_ZN5blink8protocol8Security17SecurityStateEnum14InsecureBrokenE = external constant [0 x i8], align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"h2\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"http/0.9\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"http/1.0\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"http/1.1\00", align 1
@_ZTVN5blink8protocol7Network8ResponseE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum12CacheStorageE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum9HttpCacheE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum7NetworkE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum12FallbackCodeE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol7Network14ResourceTimingE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@_ZTVN5blink8protocol7Network26SignedCertificateTimestampE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol7Network15SecurityDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum7UnknownE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum9CompliantE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum12NotCompliantE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network19ContentEncodingEnum4GzipE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network19ContentEncodingEnum7DeflateE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network19ContentEncodingEnum2BrE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol7Network15CorsErrorStatusE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink8protocol7Network13CorsErrorEnum16DisallowedByModeE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum15InvalidResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum24WildcardOriginNotAllowedE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum24MissingAllowOriginHeaderE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum25MultipleAllowOriginValuesE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum23InvalidAllowOriginValueE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum19AllowOriginMismatchE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum23InvalidAllowCredentialsE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum18CorsDisabledSchemeE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum22PreflightInvalidStatusE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum27PreflightDisallowedRedirectE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum33PreflightWildcardOriginNotAllowedE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum33PreflightMissingAllowOriginHeaderE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum34PreflightMultipleAllowOriginValuesE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum32PreflightInvalidAllowOriginValueE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum28PreflightAllowOriginMismatchE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum32PreflightInvalidAllowCredentialsE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum29PreflightMissingAllowExternalE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum29PreflightInvalidAllowExternalE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum36InvalidAllowMethodsPreflightResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum36InvalidAllowHeadersPreflightResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum35MethodDisallowedByPreflightResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum35HeaderDisallowedByPreflightResponseE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum27RedirectContainsCredentialsE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network13CorsErrorEnum22InsecurePrivateNetworkE = external constant [0 x i8], align 1
@_ZTVN5blink8protocol7Network9InitiatorE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol7Network16WebSocketRequestE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol7Network17WebSocketResponseE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol7Network14WebSocketFrameE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.33 = private unnamed_addr constant [19 x i8] c"Couldn't read BLOB\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"Couldn't encode data\00", align 1
@_ZTVN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*)* @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*, i8*, i32)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*, i32)* @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient7DidFailENS_13FileErrorCodeE to i8*)] }, align 8
@.str.35 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink8protocol7Network18ConnectionTypeEnum4NoneE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular2gE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular3gE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular4gE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum9BluetoothE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum8EthernetE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum4WifiE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum5WimaxE = external constant [0 x i8], align 1
@_ZN5blink8protocol7Network18ConnectionTypeEnum5OtherE = external constant [0 x i8], align 1
@.str.37 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.38 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.42 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13XHRReplayDataEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::XHRReplayData]\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.44 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13XHRReplayDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13XHRReplayDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13XHRReplayDataEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink13XHRReplayDataE = linkonce_odr hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::XHRReplayData"*, %"class.blink::Visitor"*)* @_ZNK5blink13XHRReplayData5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@.str.45 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.47 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14XMLHttpRequestEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [366 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::XMLHttpRequest>, blink::Member<blink::XMLHttpRequest>, WTF::IdentityExtractor, WTF::MemberHash<blink::XMLHttpRequest>, WTF::HashTraits<blink::Member<blink::XMLHttpRequest> >, WTF::HashTraits<blink::Member<blink::XMLHttpRequest> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEEEEPKcv = private unnamed_addr constant [202 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, std::__1::unique_ptr<blink::protocol::Network::Initiator, std::__1::default_delete<blink::protocol::Network::Initiator> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20NetworkResourcesDataEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NetworkResourcesData]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20NetworkResourcesDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20NetworkResourcesDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20NetworkResourcesDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.1369"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.1369"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.1369"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol7Network8Metainfo10domainNameE = external constant [0 x i8], align 1
@switch.table._ZN5blink21InspectorNetworkAgent26DidReceiveResourceResponseEmPNS_14DocumentLoaderERKNS_16ResourceResponseEPKNS_8ResourceE = private unnamed_addr constant [14 x i32] [i32 0, i32 13, i32 13, i32 13, i32 13, i32 5, i32 13, i32 7, i32 8, i32 9, i32 13, i32 13, i32 13, i32 13], align 4

@_ZN5blink21InspectorNetworkAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorNetworkAgent"*), void (%"class.blink::InspectorNetworkAgent"*)* @_ZN5blink21InspectorNetworkAgentD2Ev
@_ZN5blink21InspectorNetworkAgentC1EPNS_15InspectedFramesEPNS_17WorkerGlobalScopeEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::WorkerGlobalScope"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::WorkerGlobalScope"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink21InspectorNetworkAgentC2EPNS_15InspectedFramesEPNS_17WorkerGlobalScopeEPN12v8_inspector18V8InspectorSessionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent7RestoreEv(%"class.blink::InspectorNetworkAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 2
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink21InspectorNetworkAgent6EnableEv(%"class.blink::InspectorNetworkAgent"* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent6EnableEv(%"class.blink::InspectorNetworkAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::WebVector.3050", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Network::Frontend"* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 2
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 1
  br i1 %10, label %33, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %7 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %17 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %17, i64 2
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %18, align 8
  tail call void %19(%"class.blink::InspectorAgentState::SimpleField"* %7) #17
  br label %33

20:                                               ; preds = %11
  store i8 1, i8* %8, align 1
  %21 = bitcast %"class.blink::WebVector.3050"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %2, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.3050"* nonnull %2) #17
  %23 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 0, i32 2
  %24 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %24, %"class.WTF::String"* dereferenceable(8) %25, %"class.blink::WebVector.3050"* nonnull %2) #17
  %26 = load i8*, i8** %22, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %2, i64 0, i32 0, i32 0, i32 1
  %30 = ptrtoint i8* %26 to i64
  %31 = bitcast i8** %29 to i64*
  store i64 %30, i64* %31, align 8
  call void @_ZdlPv(i8* nonnull %26) #18
  br label %32

32:                                               ; preds = %28, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  br label %33

33:                                               ; preds = %6, %15, %32
  %34 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %35 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  call void @_ZN5blink20NetworkResourcesData26SetResourcesDataSizeLimitsEmm(%"class.blink::NetworkResourcesData"* %35, i64 %38, i64 %41) #17
  %42 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %42, align 8
  call void @_ZN5blink13CoreProbeSink24AddInspectorNetworkAgentEPNS_21InspectorNetworkAgentE(%"class.blink::CoreProbeSink"* %43, %"class.blink::InspectorNetworkAgent"* %0) #17
  br label %44

44:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgentD2Ev(%"class.blink::InspectorNetworkAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorNetworkAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*], [22 x i8*] }, { [28 x i8*], [22 x i8*] }* @_ZTVN5blink21InspectorNetworkAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*], [22 x i8*] }, { [28 x i8*], [22 x i8*] }* @_ZTVN5blink21InspectorNetworkAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1362"* %5, null
  br i1 %6, label %39, label %7, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %7
  %12 = zext i32 %9 to i64
  br label %13

13:                                               ; preds = %34, %11
  %14 = phi i64 [ 0, %11 ], [ %35, %34 ]
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %5, i64 %14
  %16 = bitcast %"struct.WTF::KeyValuePair.1362"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %"class.WTF::StringImpl"*
  %19 = ptrtoint i8* %17 to i64
  switch i64 %19, label %20 [
    i64 -1, label %34
    i64 0, label %34
  ]

20:                                               ; preds = %13
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %17 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %20
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %20
  %31 = phi i32 [ %29, %28 ], [ %27, %20 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #17
  br label %34

34:                                               ; preds = %33, %30, %13, %13
  %35 = add nuw nsw i64 %14, 1
  %36 = icmp eq i64 %35, %12
  br i1 %36, label %37, label %13

37:                                               ; preds = %34, %7
  %38 = bitcast %"struct.WTF::KeyValuePair.1362"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #17
  store %"struct.WTF::KeyValuePair.1362"* null, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  br label %39

39:                                               ; preds = %37, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #17
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #17
  br label %74

74:                                               ; preds = %56, %70, %73
  %75 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %92

92:                                               ; preds = %74, %88, %91
  %93 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #17
  br label %110

110:                                              ; preds = %92, %106, %109
  %111 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %111, align 8
  %112 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %110, %124, %127
  %129 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 0
  %131 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %130, align 8
  %132 = icmp eq %"struct.WTF::KeyValuePair.1368"* %131, null
  br i1 %132, label %136, label %133, !prof !3

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 1
  %135 = load i32, i32* %134, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"* nonnull %131, i32 %135) #17
  store %"struct.WTF::KeyValuePair.1368"* null, %"struct.WTF::KeyValuePair.1368"** %130, align 8
  br label %136

136:                                              ; preds = %133, %128
  %137 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #17
  br label %153

153:                                              ; preds = %152, %149, %136
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %154 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #17
  br label %170

170:                                              ; preds = %153, %166, %169
  %171 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 3, i32 0, i32 0
  %173 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %172, align 8
  %174 = icmp eq %"struct.WTF::KeyValuePair.1362"* %173, null
  br i1 %174, label %207, label %175, !prof !3

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 3, i32 0, i32 1
  %177 = load i32, i32* %176, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %205, label %179

179:                                              ; preds = %175
  %180 = zext i32 %177 to i64
  br label %181

181:                                              ; preds = %202, %179
  %182 = phi i64 [ 0, %179 ], [ %203, %202 ]
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %173, i64 %182
  %184 = bitcast %"struct.WTF::KeyValuePair.1362"* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast i8* %185 to %"class.WTF::StringImpl"*
  %187 = ptrtoint i8* %185 to i64
  switch i64 %187, label %188 [
    i64 -1, label %202
    i64 0, label %202
  ]

188:                                              ; preds = %181
  %189 = getelementptr inbounds i8, i8* %185, i64 8
  %190 = bitcast i8* %189 to i32*
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = bitcast i8* %185 to i32*
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %188
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %188
  %199 = phi i32 [ %197, %196 ], [ %195, %188 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #17
  br label %202

202:                                              ; preds = %201, %198, %181, %181
  %203 = add nuw nsw i64 %182, 1
  %204 = icmp eq i64 %203, %180
  br i1 %204, label %205, label %181

205:                                              ; preds = %202, %175
  %206 = bitcast %"struct.WTF::KeyValuePair.1362"* %173 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %206) #17
  store %"struct.WTF::KeyValuePair.1362"* null, %"struct.WTF::KeyValuePair.1362"** %172, align 8
  br label %207

207:                                              ; preds = %205, %170
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %208 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #17
  br label %224

224:                                              ; preds = %207, %220, %223
  %225 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %225, align 8
  %226 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #17
  br label %242

242:                                              ; preds = %224, %238, %241
  %243 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %243, align 8
  %244 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #17
  br label %260

260:                                              ; preds = %242, %256, %259
  %261 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %261, align 8
  %262 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #17
  br label %278

278:                                              ; preds = %260, %274, %277
  %279 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %280 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %279, align 8
  %281 = icmp eq %"struct.WTF::KeyValuePair.1206"* %280, null
  br i1 %281, label %327, label %282, !prof !3

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %325, label %286

286:                                              ; preds = %282
  %287 = zext i32 %284 to i64
  br label %288

288:                                              ; preds = %322, %286
  %289 = phi i64 [ 0, %286 ], [ %323, %322 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %280, i64 %289
  %291 = bitcast %"struct.WTF::KeyValuePair.1206"* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  %293 = icmp eq i8* %292, inttoptr (i64 -1 to i8*)
  br i1 %293, label %322, label %294

294:                                              ; preds = %288
  %295 = bitcast i8* %292 to %"class.WTF::StringImpl"*
  %296 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %280, i64 %289, i32 1, i32 0, i32 0, i32 0
  %297 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %296, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %296, align 8
  %298 = icmp eq %"class.blink::protocol::Network::Initiator"* %297, null
  br i1 %298, label %306, label %299

299:                                              ; preds = %294
  %300 = bitcast %"class.blink::protocol::Network::Initiator"* %297 to void (%"class.blink::protocol::Network::Initiator"*)***
  %301 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %301, i64 2
  %303 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %302, align 8
  tail call void %303(%"class.blink::protocol::Network::Initiator"* nonnull %297) #17
  %304 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %290, i64 0, i32 0, i32 0, i32 0
  %305 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %304, align 8
  br label %306

306:                                              ; preds = %299, %294
  %307 = phi %"class.WTF::StringImpl"* [ %305, %299 ], [ %295, %294 ]
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #17
  br label %322

322:                                              ; preds = %321, %318, %306, %288
  %323 = add nuw nsw i64 %289, 1
  %324 = icmp eq i64 %323, %287
  br i1 %324, label %325, label %288

325:                                              ; preds = %322, %282
  %326 = bitcast %"struct.WTF::KeyValuePair.1206"* %280 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %326) #17
  store %"struct.WTF::KeyValuePair.1206"* null, %"struct.WTF::KeyValuePair.1206"** %279, align 8
  br label %327

327:                                              ; preds = %278, %325
  %328 = bitcast %"class.blink::InspectorNetworkAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %328, align 8
  %329 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %330 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %329, align 8
  store %"class.blink::protocol::Network::Frontend"* null, %"class.blink::protocol::Network::Frontend"** %329, align 8
  %331 = icmp eq %"class.blink::protocol::Network::Frontend"* %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %327
  %333 = bitcast %"class.blink::protocol::Network::Frontend"* %330 to i8*
  tail call void @_ZdlPv(i8* %333) #18
  br label %334

334:                                              ; preds = %332, %327
  %335 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %336 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %335, align 8
  %337 = icmp eq %"class.blink::InspectorAgentState::Field"** %336, null
  %338 = bitcast %"class.blink::InspectorAgentState::Field"** %336 to i8*
  br i1 %337, label %345, label %339, !prof !3

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %344, label %343, !prof !4

343:                                              ; preds = %339
  store i32 0, i32* %340, align 4
  br label %344

344:                                              ; preds = %343, %339
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %338) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %335, align 8
  br label %345

345:                                              ; preds = %344, %334
  %346 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #17
  br label %362

362:                                              ; preds = %345, %358, %361
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED2Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1362"* %4, null
  br i1 %5, label %38, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.1362"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.1362"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"struct.WTF::KeyValuePair.1362"* null, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  br label %38

38:                                               ; preds = %1, %36
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %55

55:                                               ; preds = %38, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED2Ev(%"class.blink::InspectorAgentState::MapField.1363"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1368"* %4, null
  br i1 %5, label %9, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"* nonnull %4, i32 %8) #17
  store %"struct.WTF::KeyValuePair.1368"* null, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  br label %9

9:                                                ; preds = %1, %6
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %9, %22, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %26, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgentD1Ev(%"class.blink::InspectorNetworkAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 -1, i32 19, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgentD2Ev(%"class.blink::InspectorNetworkAgent"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgentD0Ev(%"class.blink::InspectorNetworkAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink21InspectorNetworkAgentD2Ev(%"class.blink::InspectorNetworkAgent"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgentD0Ev(%"class.blink::InspectorNetworkAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 -1, i32 19, i32 3, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgentD2Ev(%"class.blink::InspectorNetworkAgent"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #17
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.239"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv) #17
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::Member.1174"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20NetworkResourcesDataEE5TraceEPNS_7VisitorEPKv) #17
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 9
  %37 = bitcast %"class.blink::HeapHashSet.1220"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = bitcast %"class.blink::HeapHashSet.1220"* %36 to i8**
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %41 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %41, i64 11
  %43 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8** %39) #17
  %44 = icmp eq i64 %38, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %35
  %46 = inttoptr i64 %38 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #17
  br label %51

51:                                               ; preds = %35, %45
  %52 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 7
  %53 = bitcast %"class.blink::Member.1193"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13XHRReplayDataEE5TraceEPNS_7VisitorEPKv) #17
  br label %62

62:                                               ; preds = %51, %56
  %63 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 2
  %64 = bitcast %"class.blink::Member"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to i8*
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %68, i8* nonnull %68, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %73

73:                                               ; preds = %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #17
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent18ShouldBlockRequestERKNS_4KURLEPb(%"class.blink::InspectorNetworkAgent"*, %"class.blink::KURL"* nocapture readonly dereferenceable(112), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.386", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::Vector.386", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13
  %9 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 3, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %188, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #17
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !4

30:                                               ; preds = %21
  tail call void @llvm.trap() #17
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %12, %16, %31
  %34 = bitcast %"class.WTF::Vector.386"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #17
  call void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.386"* nonnull sret %7, %"class.blink::InspectorAgentState::MapField"* %8)
  %35 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %7, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %7, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %39
  %41 = icmp eq i32 %38, 0
  br i1 %41, label %138, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.WTF::Vector.386"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %4, i64 0, i32 0, i32 0, i32 2
  %46 = bitcast %"class.WTF::StringView"* %5 to i8*
  %47 = bitcast %"class.WTF::StringView"* %5 to i64*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %50 = bitcast %"class.WTF::StringView"* %6 to i8*
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  %54 = bitcast %"class.WTF::StringView"* %6 to i64*
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %56 = bitcast %"class.WTF::Vector.386"* %4 to i8**
  br label %59

57:                                               ; preds = %135
  %58 = icmp eq %"class.WTF::String"* %136, %40
  br i1 %58, label %138, label %59

59:                                               ; preds = %42, %57
  %60 = phi %"class.WTF::String"* [ %36, %42 ], [ %136, %57 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #17
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %61, i64* %47, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8** %48, align 8
  store i32 1, i32* %49, align 8
  call void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %60, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, i1 zeroext false, %"class.WTF::Vector.386"* nonnull dereferenceable(16) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #17
  %62 = load %"class.WTF::String"*, %"class.WTF::String"** %44, align 8
  %63 = load i32, i32* %45, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %99, label %67

67:                                               ; preds = %59, %91
  %68 = phi %"class.WTF::String"* [ %94, %91 ], [ %62, %59 ]
  %69 = phi i32 [ %93, %91 ], [ 0, %59 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #17
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  store i8* null, i8** %52, align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %74, i64* %54, align 8
  br label %79

75:                                               ; preds = %67
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %51, align 8
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %53, align 8
  br label %79

79:                                               ; preds = %75, %73
  %80 = phi i32 [ %77, %75 ], [ 0, %73 ]
  store i32 %80, i32* %55, align 8
  br i1 %15, label %81, label %82

81:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  br label %96

82:                                               ; preds = %79
  %83 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 %69) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #17
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %96, label %85

85:                                               ; preds = %82
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  br label %91

91:                                               ; preds = %88, %85
  %92 = phi i32 [ %90, %88 ], [ 0, %85 ]
  %93 = add i32 %92, %83
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 1
  %95 = icmp eq %"class.WTF::String"* %94, %65
  br i1 %95, label %96, label %67

96:                                               ; preds = %91, %82, %81
  %97 = phi i1 [ false, %81 ], [ false, %82 ], [ true, %91 ]
  %98 = load %"class.WTF::String"*, %"class.WTF::String"** %44, align 8
  br label %99

99:                                               ; preds = %96, %59
  %100 = phi %"class.WTF::String"* [ %98, %96 ], [ %62, %59 ]
  %101 = phi i1 [ %97, %96 ], [ true, %59 ]
  %102 = icmp eq %"class.WTF::String"* %100, null
  br i1 %102, label %135, label %103, !prof !3

103:                                              ; preds = %99
  %104 = bitcast %"class.WTF::String"* %100 to i8*
  %105 = load i32, i32* %45, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %133, label %107, !prof !4

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %108
  br label %110

110:                                              ; preds = %128, %107
  %111 = phi %"class.WTF::String"* [ %129, %128 ], [ %100, %107 ]
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %127, %124, %110
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %111, i64 1
  %130 = icmp eq %"class.WTF::String"* %129, %109
  br i1 %130, label %131, label %110

131:                                              ; preds = %128
  store i32 0, i32* %45, align 4
  %132 = load i8*, i8** %56, align 8
  br label %133

133:                                              ; preds = %131, %103
  %134 = phi i8* [ %132, %131 ], [ %104, %103 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %134) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %44, align 8
  br label %135

135:                                              ; preds = %99, %133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #17
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  br i1 %101, label %137, label %57

137:                                              ; preds = %135
  store i8 1, i8* %2, align 1
  br label %138

138:                                              ; preds = %57, %33, %137
  %139 = load %"class.WTF::String"*, %"class.WTF::String"** %35, align 8
  %140 = icmp eq %"class.WTF::String"* %139, null
  br i1 %140, label %174, label %141, !prof !3

141:                                              ; preds = %138
  %142 = bitcast %"class.WTF::String"* %139 to i8*
  %143 = load i32, i32* %37, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %172, label %145, !prof !4

145:                                              ; preds = %141
  %146 = zext i32 %143 to i64
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %139, i64 %146
  br label %148

148:                                              ; preds = %166, %145
  %149 = phi %"class.WTF::String"* [ %167, %166 ], [ %139, %145 ]
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #17
  br label %166

166:                                              ; preds = %165, %162, %148
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %149, i64 1
  %168 = icmp eq %"class.WTF::String"* %167, %147
  br i1 %168, label %169, label %148

169:                                              ; preds = %166
  store i32 0, i32* %37, align 4
  %170 = bitcast %"class.WTF::Vector.386"* %7 to i8**
  %171 = load i8*, i8** %170, align 8
  br label %172

172:                                              ; preds = %169, %141
  %173 = phi i8* [ %171, %169 ], [ %142, %141 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %173) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %35, align 8
  br label %174

174:                                              ; preds = %138, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #17
  br i1 %15, label %188, label %175

175:                                              ; preds = %174
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #17
  br label %188

188:                                              ; preds = %187, %184, %174, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.386"* noalias sret, %"class.blink::InspectorAgentState::MapField"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.386"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #17
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %1, i64 0, i32 3, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.1362"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.1362"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.1362"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.1362"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.1362"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.1362"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !4

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #17
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !4

55:                                               ; preds = %46
  tail call void @llvm.trap() #17
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.386"* %0, %"class.WTF::String"* dereferenceable(8) %62) #17
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.1362"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.1362"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.1362"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.1362"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.1362"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent25ShouldBypassServiceWorkerEPb(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i8* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i8 1, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent15DidBlockRequestERKNS_15ResourceRequestEPNS_14DocumentLoaderERKNS_4KURLERKNS_21ResourceLoaderOptionsENS_28ResourceRequestBlockedReasonENS_12ResourceTypeE(%"class.blink::InspectorNetworkAgent"* nocapture, %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::DocumentLoader"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::ResourceLoaderOptions"* nocapture readonly dereferenceable(112), i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::ResourceResponse", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %14 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %15 = alloca %"class.crdtp::detail::PtrMaybe.3272", align 8
  %16 = tail call i32 @_ZN5blink18InspectorPageAgent14ToResourceTypeENS_12ResourceTypeE(i8 zeroext %6) #17
  %17 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1072, i8* nonnull %17) #17
  call void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"* nonnull %8) #17
  %18 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  call void @_ZN5blink21InspectorNetworkAgent23WillSendRequestInternalEPNS_14DocumentLoaderERKNS_4KURLERKNS_15ResourceRequestERKNS_16ResourceResponseERKNS_21ResourceLoaderOptionsENS_18InspectorPageAgent12ResourceTypeEN4base9TimeTicksE(%"class.blink::InspectorNetworkAgent"* %0, %"class.blink::DocumentLoader"* %2, %"class.blink::KURL"* dereferenceable(112) %3, %"class.blink::ResourceRequest"* dereferenceable(1032) %1, %"class.blink::ResourceResponse"* nonnull dereferenceable(1072) %8, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %4, i32 %16, i64 %18)
  call void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 1072, i8* nonnull %17) #17
  %19 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 42
  %22 = load i64, i64* %21, align 8
  %23 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %2, i64 %22) #17
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %20, align 8
  %24 = icmp eq i32 %5, 12
  br i1 %24, label %25, label %41

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %26, align 8
  %28 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %29 = add i64 %28, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = sitofp i64 %28 to double
  %33 = fdiv double %32, 1.000000e+06
  br label %37

34:                                               ; preds = %25
  %35 = icmp slt i64 %28, 0
  %36 = select i1 %35, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi double [ %36, %34 ], [ %33, %31 ]
  %39 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %10, i64 0, i32 0
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %10, i64 0, i32 1
  store i8 0, i8* %40, align 1
  call void @_ZN5blink8protocol7Network8Frontend15loadingFinishedERKN3WTF6StringEddN5crdtp6detail10ValueMaybeIbEE(%"class.blink::protocol::Network::Frontend"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %38, double 0.000000e+00, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %10) #17
  br label %161

41:                                               ; preds = %7
  %42 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_118BuildBlockedReasonENS_28ResourceRequestBlockedReasonE(i32 %5)
  %43 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %43, align 8
  %45 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %46 = add i64 %45, -9223372036854775807
  %47 = icmp ult i64 %46, 2
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = sitofp i64 %45 to double
  %50 = fdiv double %49, 1.000000e+06
  br label %54

51:                                               ; preds = %41
  %52 = icmp slt i64 %45, 0
  %53 = select i1 %52, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %54

54:                                               ; preds = %48, %51
  %55 = phi double [ %53, %51 ], [ %50, %48 ]
  %56 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %58 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %57, align 8
  %59 = call i32 @_ZN5blink20NetworkResourcesData15GetResourceTypeERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %58, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  %60 = call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %59) #17
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %61, align 8
  %62 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #17
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %64 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %13, i64 0, i32 0
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %13, i64 0, i32 1
  store i8 0, i8* %65, align 1
  %66 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #17
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !4

81:                                               ; preds = %72
  call void @llvm.trap() #17
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %54, %67, %82
  %85 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %86 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 0
  store i8 1, i8* %86, align 8
  %87 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 1
  %88 = bitcast %"class.WTF::String"* %87 to i64*
  store i64 %85, i64* %88, align 8
  %89 = bitcast %"class.crdtp::detail::PtrMaybe.3272"* %15 to i64*
  store i64 0, i64* %89, align 8
  call void @_ZN5blink8protocol7Network8Frontend13loadingFailedERKN3WTF6StringEdS6_S6_N5crdtp6detail10ValueMaybeIbEENS9_IS4_EENS8_8PtrMaybeINS1_15CorsErrorStatusEEE(%"class.blink::protocol::Network::Frontend"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %55, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %13, %"class.crdtp::detail::ValueMaybe"* nonnull %14, %"class.crdtp::detail::PtrMaybe.3272"* nonnull %15) #17
  %90 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3272", %"class.crdtp::detail::PtrMaybe.3272"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::protocol::Network::CorsErrorStatus"*, %"class.blink::protocol::Network::CorsErrorStatus"** %90, align 8
  store %"class.blink::protocol::Network::CorsErrorStatus"* null, %"class.blink::protocol::Network::CorsErrorStatus"** %90, align 8
  %92 = icmp eq %"class.blink::protocol::Network::CorsErrorStatus"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %84
  %94 = bitcast %"class.blink::protocol::Network::CorsErrorStatus"* %91 to void (%"class.blink::protocol::Network::CorsErrorStatus"*)***
  %95 = load void (%"class.blink::protocol::Network::CorsErrorStatus"*)**, void (%"class.blink::protocol::Network::CorsErrorStatus"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::protocol::Network::CorsErrorStatus"*)*, void (%"class.blink::protocol::Network::CorsErrorStatus"*)** %95, i64 2
  %97 = load void (%"class.blink::protocol::Network::CorsErrorStatus"*)*, void (%"class.blink::protocol::Network::CorsErrorStatus"*)** %96, align 8
  call void %97(%"class.blink::protocol::Network::CorsErrorStatus"* nonnull %91) #17
  br label %98

98:                                               ; preds = %84, %93
  %99 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 1, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #17
  br label %115

115:                                              ; preds = %98, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #17
  br label %131

131:                                              ; preds = %115, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #17
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #17
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  br i1 %66, label %161, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #17
  br label %161

161:                                              ; preds = %160, %157, %147, %37
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #17
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  ret void
}

declare i32 @_ZN5blink18InspectorPageAgent14ToResourceTypeENS_12ResourceTypeE(i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent23WillSendRequestInternalEPNS_14DocumentLoaderERKNS_4KURLERKNS_15ResourceRequestERKNS_16ResourceResponseERKNS_21ResourceLoaderOptionsENS_18InspectorPageAgent12ResourceTypeEN4base9TimeTicksE(%"class.blink::InspectorNetworkAgent"* nocapture, %"class.blink::DocumentLoader"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072), %"struct.blink::ResourceLoaderOptions"* nocapture readonly dereferenceable(112), i32, i64) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.std::__1::unique_ptr.3324", align 8
  %15 = alloca %"class.blink::protocol::Binary", align 8
  %16 = alloca %"class.WTF::Vector.1293", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca %"class.blink::HTTPHeaderMap", align 8
  %19 = alloca %"class.WTF::AtomicString", align 8
  %20 = alloca %"class.blink::KURL", align 8
  %21 = alloca %"class.WTF::StringAppend.3742", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.blink::KURL", align 8
  %27 = alloca %"class.blink::KURL", align 8
  %28 = alloca %"class.base::Time", align 8
  %29 = alloca %"class.crdtp::detail::PtrMaybe.3359", align 8
  %30 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %31 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %32 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %33 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %35 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* %1) #17
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %34, align 8
  %36 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 42
  %40 = load i64, i64* %39, align 8
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %1, i64 %40) #17
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %37, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %42, align 8
  %44 = call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %23) #17
  %45 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %8
  %47 = call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %4) #17
  %48 = icmp eq i32 %47, 307
  br i1 %48, label %52, label %49

49:                                               ; preds = %46
  %50 = call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %4) #17
  %51 = icmp eq i32 %50, 308
  br i1 %51, label %52, label %60

52:                                               ; preds = %49, %46
  %53 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %44, i64 0, i32 21, i32 0
  %54 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %53, align 8
  %55 = icmp eq %"class.blink::EncodedFormData"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %54, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %57) #17
  br label %58

58:                                               ; preds = %52, %56
  %59 = ptrtoint %"class.blink::EncodedFormData"* %54 to i64
  br label %71

60:                                               ; preds = %8, %49
  %61 = call dereferenceable(8) %class.scoped_refptr.3091* @_ZNK5blink15ResourceRequest8HttpBodyEv(%"class.blink::ResourceRequest"* %3) #17
  %62 = getelementptr inbounds %class.scoped_refptr.3091, %class.scoped_refptr.3091* %61, i64 0, i32 0
  %63 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %62, align 8
  %64 = icmp eq %"class.blink::EncodedFormData"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %60
  %66 = call dereferenceable(8) %class.scoped_refptr.3091* @_ZNK5blink15ResourceRequest8HttpBodyEv(%"class.blink::ResourceRequest"* %3) #17
  %67 = getelementptr inbounds %class.scoped_refptr.3091, %class.scoped_refptr.3091* %66, i64 0, i32 0
  %68 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %67, align 8
  %69 = call %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"* %68) #17
  %70 = ptrtoint %"class.blink::EncodedFormData"* %69 to i64
  br label %71

71:                                               ; preds = %60, %65, %58
  %72 = phi i64 [ %70, %65 ], [ 0, %60 ], [ %59, %58 ]
  %73 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %42, align 8
  %74 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %38) #17
  %75 = inttoptr i64 %72 to %"class.blink::EncodedFormData"*
  %76 = icmp eq i64 %72, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %78) #17
  br label %79

79:                                               ; preds = %71, %77
  call void @_ZN5blink20NetworkResourcesData15ResourceCreatedERKN3WTF6StringES4_RKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::NetworkResourcesData"* %73, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.blink::KURL"* dereferenceable(112) %74, %"class.blink::EncodedFormData"* %75) #17
  %80 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 0
  %81 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names15kXmlhttprequestE, align 8
  %82 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %83, %85
  br i1 %86, label %103, label %87

87:                                               ; preds = %79
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names6kFetchE, align 8
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %83, %90
  br i1 %91, label %103, label %92

92:                                               ; preds = %87
  %93 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names7kBeaconE, align 8
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %83, %95
  br i1 %96, label %102, label %97

97:                                               ; preds = %92
  %98 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names5kPingE, align 8
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %83, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %97, %92
  br label %103

103:                                              ; preds = %87, %79, %102, %97
  %104 = phi i32 [ 13, %102 ], [ %6, %97 ], [ 7, %79 ], [ 8, %87 ]
  %105 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 4, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %110 = load i32, i32* %109, align 4
  br label %111

111:                                              ; preds = %103, %108
  %112 = phi i32 [ %110, %108 ], [ %104, %103 ]
  %113 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %42, align 8
  call void @_ZN5blink20NetworkResourcesData15SetResourceTypeERKN3WTF6StringENS_18InspectorPageAgent12ResourceTypeE(%"class.blink::NetworkResourcesData"* %113, %"class.WTF::String"* nonnull dereferenceable(8) %23, i32 %112) #17
  %114 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #17
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %115, align 8
  %116 = icmp ne %"class.blink::DocumentLoader"* %1, null
  br i1 %116, label %117, label %130

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %1, i64 0, i32 21, i32 0, i32 0
  %119 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %118, align 8
  %120 = icmp eq %"class.blink::LocalFrame"* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %119, i64 0, i32 0
  %123 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %122) #17
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %115, align 8
  br label %125

124:                                              ; preds = %117
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  br label %125

125:                                              ; preds = %124, %121
  %126 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %118, align 8
  %127 = icmp eq %"class.blink::LocalFrame"* %126, null
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %126) #17
  br label %131

130:                                              ; preds = %111
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  br label %131

131:                                              ; preds = %130, %125, %128
  %132 = phi %"class.blink::Document"* [ %129, %128 ], [ null, %125 ], [ null, %130 ]
  %133 = call %"class.blink::protocol::Network::Initiator"* @_ZN5blink21InspectorNetworkAgent20BuildInitiatorObjectEPNS_8DocumentERKNS_18FetchInitiatorInfoEi(%"class.blink::Document"* %132, %"struct.blink::FetchInitiatorInfo"* dereferenceable(32) %80, i32 2147483647)
  br i1 %76, label %136, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %135) #17
  br label %136

136:                                              ; preds = %131, %134
  %137 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 2
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = call i8* @_Znwm(i64 24) #18
  %141 = bitcast i8* %140 to %"class.std::__1::vector.3322"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 0, i64 24, i1 false) #17
  %142 = ptrtoint i8* %140 to i64
  br i1 %76, label %145, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %144) #17
  br label %145

145:                                              ; preds = %143, %136
  %146 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  %147 = bitcast %"class.WTF::String"* %13 to i64*
  %148 = load i64, i64* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #17
  br i1 %76, label %327, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 2, i32 0, i32 0, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %318, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 2, i32 0, i32 0, i32 0
  %155 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %154, align 8
  %156 = zext i32 %151 to i64
  %157 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %155, i64 %156
  br label %160

158:                                              ; preds = %160
  %159 = icmp eq %"class.blink::FormDataElement"* %165, %157
  br i1 %159, label %166, label %160

160:                                              ; preds = %158, %153
  %161 = phi %"class.blink::FormDataElement"* [ %165, %158 ], [ %155, %153 ]
  %162 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %161, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %161, i64 1
  br i1 %164, label %158, label %318

166:                                              ; preds = %158
  %167 = icmp eq i32 %138, 0
  br i1 %167, label %175, label %168

168:                                              ; preds = %166
  %169 = call i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"* nonnull %75) #17
  %170 = icmp ugt i64 %169, %139
  br i1 %170, label %318, label %171

171:                                              ; preds = %168
  %172 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %154, align 8
  %173 = load i32, i32* %150, align 4
  %174 = zext i32 %173 to i64
  br label %175

175:                                              ; preds = %171, %166
  %176 = phi i64 [ %174, %171 ], [ %156, %166 ]
  %177 = phi i32 [ %173, %171 ], [ %151, %166 ]
  %178 = phi %"class.blink::FormDataElement"* [ %172, %171 ], [ %155, %166 ]
  %179 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %178, i64 %176
  %180 = icmp eq i32 %177, 0
  br i1 %180, label %194, label %181

181:                                              ; preds = %175
  %182 = bitcast %"class.std::__1::unique_ptr.3324"* %14 to i8*
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %14, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr.3324"* %14 to i8**
  %185 = bitcast %"class.blink::protocol::Binary"* %15 to i8*
  %186 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %15, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %15, i64 0, i32 1, i32 0
  %188 = getelementptr inbounds i8, i8* %140, i64 8
  %189 = bitcast i8* %188 to %"class.std::__1::unique_ptr.3324"**
  %190 = getelementptr inbounds i8, i8* %140, i64 16
  %191 = bitcast i8* %190 to %"class.std::__1::unique_ptr.3324"**
  %192 = bitcast %"class.std::__1::unique_ptr.3324"* %14 to i64*
  %193 = bitcast i8* %188 to i64*
  br label %227

194:                                              ; preds = %315, %175
  %195 = bitcast %"class.WTF::Vector.1293"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #17
  %196 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %16, i64 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %16, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %195, i8 0, i64 16, i1 false) #17
  call void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"* nonnull %75, %"class.WTF::Vector.1293"* nonnull dereferenceable(16) %16) #17
  %198 = load i8*, i8** %196, align 8
  %199 = load i32, i32* %197, align 4
  %200 = zext i32 %199 to i64
  %201 = call %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8* %198, i64 %200) #17
  %202 = ptrtoint %"class.WTF::StringImpl"* %201 to i64
  %203 = inttoptr i64 %148 to %"class.WTF::StringImpl"*
  %204 = icmp eq i64 %148, 0
  br i1 %204, label %218, label %205

205:                                              ; preds = %194
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #17
  br label %218

218:                                              ; preds = %217, %214, %194
  %219 = load i8*, i8** %196, align 8
  %220 = icmp eq i8* %219, null
  br i1 %220, label %226, label %221, !prof !3

221:                                              ; preds = %218
  %222 = load i32, i32* %197, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224, !prof !4

224:                                              ; preds = %221
  store i32 0, i32* %197, align 4
  br label %225

225:                                              ; preds = %224, %221
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %219) #17
  store i8* null, i8** %196, align 8
  br label %226

226:                                              ; preds = %225, %218
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #17
  br label %318

227:                                              ; preds = %315, %181
  %228 = phi %"class.blink::FormDataElement"* [ %178, %181 ], [ %316, %315 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #17
  %229 = call i8* @_Znwm(i64 32) #18
  %230 = bitcast i8* %229 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network13PostDataEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %230, align 8
  %231 = getelementptr inbounds i8, i8* %229, i64 8
  store i8 0, i8* %231, align 8
  %232 = getelementptr inbounds i8, i8* %229, i64 16
  %233 = bitcast i8* %232 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %233, align 8
  %234 = getelementptr inbounds i8, i8* %229, i64 24
  %235 = bitcast i8* %234 to %"class.blink::protocol::Binary::Impl"**
  store %"class.blink::protocol::Binary::Impl"* null, %"class.blink::protocol::Binary::Impl"** %235, align 8
  store i8* %229, i8** %184, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #17
  %236 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %228, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %185, i8 -86, i64 16, i1 false) #17
  %237 = load i8*, i8** %236, align 8
  %238 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %228, i64 0, i32 1, i32 0, i32 0, i32 2
  %239 = load i32, i32* %238, align 4
  %240 = zext i32 %239 to i64
  call void @_ZN5blink8protocol6Binary8fromSpanEPKhm(%"class.blink::protocol::Binary"* nonnull sret %15, i8* %237, i64 %240) #17
  %241 = load %"class.blink::protocol::Network::PostDataEntry"*, %"class.blink::protocol::Network::PostDataEntry"** %183, align 8
  %242 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %187, align 8
  %243 = icmp eq %"class.blink::protocol::Binary::Impl"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %227
  %245 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %242, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %245) #17
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %245) #17
  br label %246

246:                                              ; preds = %244, %227
  %247 = getelementptr inbounds %"class.blink::protocol::Network::PostDataEntry", %"class.blink::protocol::Network::PostDataEntry"* %241, i64 0, i32 1, i32 1, i32 1
  %248 = ptrtoint %"class.blink::protocol::Binary::Impl"* %242 to i64
  %249 = bitcast %class.scoped_refptr.3331* %247 to i64*
  %250 = getelementptr inbounds %class.scoped_refptr.3331, %class.scoped_refptr.3331* %247, i64 0, i32 0
  %251 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %250, align 8
  store i64 %248, i64* %249, align 8
  %252 = icmp eq %"class.blink::protocol::Binary::Impl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %254, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #17
  %256 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.3333"* %260 to %"class.blink::protocol::Binary::Impl"*
  %262 = bitcast %"class.base::RefCounted.3333"* %260 to void (%"class.blink::protocol::Binary::Impl"*)***
  %263 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %263, i64 1
  %265 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %264, align 8
  call void %265(%"class.blink::protocol::Binary::Impl"* nonnull %261) #17
  br label %266

266:                                              ; preds = %259, %253, %246
  %267 = getelementptr inbounds %"class.blink::protocol::Network::PostDataEntry", %"class.blink::protocol::Network::PostDataEntry"* %241, i64 0, i32 1, i32 0
  store i8 1, i8* %267, align 8
  br i1 %243, label %281, label %268

268:                                              ; preds = %266
  %269 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %242, i64 0, i32 1, i32 0
  %270 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %269, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #17
  %271 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %269, i64 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %269, i64 -2
  %276 = bitcast %"class.base::RefCounted.3333"* %275 to %"class.blink::protocol::Binary::Impl"*
  %277 = bitcast %"class.base::RefCounted.3333"* %275 to void (%"class.blink::protocol::Binary::Impl"*)***
  %278 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %278, i64 1
  %280 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %279, align 8
  call void %280(%"class.blink::protocol::Binary::Impl"* nonnull %276) #17
  br label %281

281:                                              ; preds = %274, %268, %266
  %282 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %189, align 8
  %283 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %191, align 8
  %284 = icmp ult %"class.std::__1::unique_ptr.3324"* %282, %283
  br i1 %284, label %285, label %290

285:                                              ; preds = %281
  %286 = load i64, i64* %192, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %183, align 8
  %287 = bitcast %"class.std::__1::unique_ptr.3324"* %282 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %282, i64 1
  %289 = ptrtoint %"class.std::__1::unique_ptr.3324"* %288 to i64
  store i64 %289, i64* %193, align 8
  br label %291

290:                                              ; preds = %281
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network13PostDataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3322"* nonnull %141, %"class.std::__1::unique_ptr.3324"* nonnull dereferenceable(8) %14) #17
  br label %291

291:                                              ; preds = %290, %285
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %292 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %187, align 8
  %293 = icmp eq %"class.blink::protocol::Binary::Impl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %292, i64 0, i32 1, i32 0
  %296 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %295, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %296) #17
  %297 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %295, i64 0, i32 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %307

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.base::RefCounted.3333", %"class.base::RefCounted.3333"* %295, i64 -2
  %302 = bitcast %"class.base::RefCounted.3333"* %301 to %"class.blink::protocol::Binary::Impl"*
  %303 = bitcast %"class.base::RefCounted.3333"* %301 to void (%"class.blink::protocol::Binary::Impl"*)***
  %304 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %304, i64 1
  %306 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %305, align 8
  call void %306(%"class.blink::protocol::Binary::Impl"* nonnull %302) #17
  br label %307

307:                                              ; preds = %300, %294, %291
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #17
  %308 = load %"class.blink::protocol::Network::PostDataEntry"*, %"class.blink::protocol::Network::PostDataEntry"** %183, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %183, align 8
  %309 = icmp eq %"class.blink::protocol::Network::PostDataEntry"* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %307
  %311 = bitcast %"class.blink::protocol::Network::PostDataEntry"* %308 to void (%"class.blink::protocol::Network::PostDataEntry"*)***
  %312 = load void (%"class.blink::protocol::Network::PostDataEntry"*)**, void (%"class.blink::protocol::Network::PostDataEntry"*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %312, i64 2
  %314 = load void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %313, align 8
  call void %314(%"class.blink::protocol::Network::PostDataEntry"* nonnull %308) #17
  br label %315

315:                                              ; preds = %310, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #17
  %316 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %228, i64 1
  %317 = icmp eq %"class.blink::FormDataElement"* %316, %179
  br i1 %317, label %194, label %227

318:                                              ; preds = %160, %226, %168, %149
  %319 = phi i64 [ %148, %149 ], [ %202, %226 ], [ %148, %168 ], [ %148, %160 ]
  %320 = phi i1 [ false, %149 ], [ true, %226 ], [ true, %168 ], [ true, %160 ]
  %321 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %321) #17
  %322 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %318
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %75) #17
  %326 = inttoptr i64 %72 to i8*
  call void @free(i8* %326) #17
  br label %327

327:                                              ; preds = %325, %318, %145
  %328 = phi i64 [ %148, %145 ], [ %319, %325 ], [ %319, %318 ]
  %329 = phi i1 [ false, %145 ], [ %320, %325 ], [ %320, %318 ]
  %330 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %330) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %330, i8 -86, i64 112, i1 false) #17
  %331 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %38) #17
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %17, %"class.blink::KURL"* dereferenceable(112) %331) #17
  %332 = bitcast %"class.blink::HTTPHeaderMap"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 -86, i64 24, i1 false) #17
  %333 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink19ResourceRequestHead16HttpHeaderFieldsEv(%"class.blink::ResourceRequestHead"* %38) #17
  %334 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %18, i64 0, i32 0, i32 0
  %335 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %333, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 20, i1 false) #17
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %374, label %338

338:                                              ; preds = %327
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1198"* nonnull %334, i32 %336) #17
  %339 = load i32, i32* %335, align 4
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %333, i64 0, i32 0, i32 0, i32 0
  %342 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %333, i64 0, i32 0, i32 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %342, i64 %345
  br i1 %340, label %374, label %347

347:                                              ; preds = %338
  %348 = icmp eq i32 %344, 0
  br i1 %348, label %356, label %349

349:                                              ; preds = %347, %353
  %350 = phi %"struct.WTF::KeyValuePair.1201"* [ %354, %353 ], [ %342, %347 ]
  %351 = bitcast %"struct.WTF::KeyValuePair.1201"* %350 to i64*
  %352 = load i64, i64* %351, align 8
  switch i64 %352, label %356 [
    i64 -1, label %353
    i64 0, label %353
  ]

353:                                              ; preds = %349, %349
  %354 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %350, i64 1
  %355 = icmp eq %"struct.WTF::KeyValuePair.1201"* %354, %346
  br i1 %355, label %374, label %349

356:                                              ; preds = %349, %347
  %357 = phi %"struct.WTF::KeyValuePair.1201"* [ %342, %347 ], [ %350, %349 ]
  %358 = icmp eq %"struct.WTF::KeyValuePair.1201"* %357, %346
  br i1 %358, label %374, label %359

359:                                              ; preds = %356, %372
  %360 = phi %"struct.WTF::KeyValuePair.1201"* [ %366, %372 ], [ %357, %356 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %360, i64 0, i32 0
  %362 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %334, %"class.WTF::AtomicString"* dereferenceable(8) %361, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16) %360) #17
  %363 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %360, i64 1
  %364 = icmp eq %"struct.WTF::KeyValuePair.1201"* %363, %346
  br i1 %364, label %374, label %365

365:                                              ; preds = %359, %369
  %366 = phi %"struct.WTF::KeyValuePair.1201"* [ %370, %369 ], [ %363, %359 ]
  %367 = bitcast %"struct.WTF::KeyValuePair.1201"* %366 to i64*
  %368 = load i64, i64* %367, align 8
  switch i64 %368, label %372 [
    i64 -1, label %369
    i64 0, label %369
  ]

369:                                              ; preds = %365, %365
  %370 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %366, i64 1
  %371 = icmp eq %"struct.WTF::KeyValuePair.1201"* %370, %346
  br i1 %371, label %374, label %365

372:                                              ; preds = %365
  %373 = icmp eq %"struct.WTF::KeyValuePair.1201"* %366, %346
  br i1 %373, label %374, label %359

374:                                              ; preds = %353, %372, %359, %369, %356, %338, %327
  %375 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names8kRefererE, align 8
  %376 = bitcast %"class.WTF::AtomicString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #17
  %377 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 22, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %403, label %380

380:                                              ; preds = %374
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 acquire, align 4
  %383 = and i32 %382, 4
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %401, label %385

385:                                              ; preds = %380
  %386 = load atomic i32, i32* %381 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %403

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  %392 = zext i32 %391 to i33
  %393 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %392, i33 1) #17
  %394 = extractvalue { i33, i1 } %393, 1
  %395 = extractvalue { i33, i1 } %393, 0
  %396 = icmp slt i33 %395, 0
  %397 = or i1 %394, %396
  br i1 %397, label %398, label %399, !prof !4

398:                                              ; preds = %389
  call void @llvm.trap() #17
  unreachable

399:                                              ; preds = %389
  %400 = trunc i33 %395 to i32
  store i32 %400, i32* %390, align 4
  br label %403

401:                                              ; preds = %380
  %402 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %378) #17
  br label %403

403:                                              ; preds = %401, %399, %385, %374
  %404 = phi %"class.WTF::StringImpl"* [ %402, %401 ], [ %378, %385 ], [ %378, %399 ], [ null, %374 ]
  %405 = ptrtoint %"class.WTF::StringImpl"* %404 to i64
  %406 = bitcast %"class.WTF::AtomicString"* %19 to i64*
  store i64 %405, i64* %406, align 8
  %407 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %334, %"class.WTF::AtomicString"* dereferenceable(8) %375, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %19) #17
  %408 = extractvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %407, 1
  %409 = and i8 %408, 1
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %411, label %453

411:                                              ; preds = %403
  %412 = extractvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %407, 0
  %413 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %412, i64 0, i32 1
  %414 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %414, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %434, label %417

417:                                              ; preds = %411
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %434

422:                                              ; preds = %417
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  %425 = zext i32 %424 to i33
  %426 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %425, i33 1) #17
  %427 = extractvalue { i33, i1 } %426, 1
  %428 = extractvalue { i33, i1 } %426, 0
  %429 = icmp slt i33 %428, 0
  %430 = or i1 %427, %429
  br i1 %430, label %431, label %432, !prof !4

431:                                              ; preds = %422
  call void @llvm.trap() #17
  unreachable

432:                                              ; preds = %422
  %433 = trunc i33 %428 to i32
  store i32 %433, i32* %423, align 4
  br label %434

434:                                              ; preds = %432, %417, %411
  %435 = ptrtoint %"class.WTF::StringImpl"* %415 to i64
  %436 = bitcast %"class.WTF::AtomicString"* %413 to i64*
  %437 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %413, i64 0, i32 0, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  store i64 %435, i64* %436, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %434
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #17
  br label %453

453:                                              ; preds = %452, %449, %434, %403
  %454 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %470, label %457

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %463 = load i32, i32* %462, align 4
  br i1 %461, label %464, label %466

464:                                              ; preds = %457
  %465 = add i32 %463, -1
  store i32 %465, i32* %462, align 4
  br label %466

466:                                              ; preds = %464, %457
  %467 = phi i32 [ %465, %464 ], [ %463, %457 ]
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %466
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %455) #17
  br label %470

470:                                              ; preds = %469, %466, %453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #17
  %471 = call i8* @_Znwm(i64 128) #18
  %472 = bitcast i8* %471 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network7RequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %472, align 8
  %473 = getelementptr inbounds i8, i8* %471, i64 8
  %474 = bitcast i8* %473 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %474, align 8
  %475 = getelementptr inbounds i8, i8* %471, i64 16
  store i8 0, i8* %475, align 8
  %476 = getelementptr inbounds i8, i8* %471, i64 24
  %477 = getelementptr inbounds i8, i8* %471, i64 56
  %478 = bitcast i8* %477 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %478, align 8
  %479 = getelementptr inbounds i8, i8* %471, i64 64
  store i8 0, i8* %479, align 1
  %480 = getelementptr inbounds i8, i8* %471, i64 65
  store i8 0, i8* %480, align 1
  %481 = getelementptr inbounds i8, i8* %471, i64 72
  %482 = bitcast i8* %481 to i64*
  store i64 0, i64* %482, align 8
  %483 = getelementptr inbounds i8, i8* %471, i64 80
  store i8 0, i8* %483, align 8
  %484 = getelementptr inbounds i8, i8* %471, i64 88
  %485 = getelementptr inbounds i8, i8* %471, i64 120
  %486 = bitcast i8* %485 to i64*
  store i64 0, i64* %486, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %476, i8 0, i64 25, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %484, i8 0, i64 26, i1 false) #17
  %487 = bitcast i8* %471 to %"class.blink::protocol::Network::Request"*
  %488 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %488) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 112, i1 false) #17, !alias.scope !5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %20, %"class.blink::KURL"* nonnull dereferenceable(112) %17) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %20) #17
  %489 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %20, i64 0, i32 4, i32 0, i32 0
  %490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %489, align 8
  %491 = icmp eq %"class.WTF::StringImpl"* %490, null
  br i1 %491, label %509, label %492

492:                                              ; preds = %470
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = and i32 %494, 2
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %509

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %490, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = zext i32 %499 to i33
  %501 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %500, i33 1) #17
  %502 = extractvalue { i33, i1 } %501, 1
  %503 = extractvalue { i33, i1 } %501, 0
  %504 = icmp slt i33 %503, 0
  %505 = or i1 %502, %504
  br i1 %505, label %506, label %507, !prof !4

506:                                              ; preds = %497
  call void @llvm.trap() #17
  unreachable

507:                                              ; preds = %497
  %508 = trunc i33 %503 to i32
  store i32 %508, i32* %498, align 4
  br label %509

509:                                              ; preds = %507, %492, %470
  %510 = ptrtoint %"class.WTF::StringImpl"* %490 to i64
  %511 = bitcast i8* %473 to i64*
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %474, align 8
  store i64 %510, i64* %511, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %512, null
  br i1 %513, label %527, label %514

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i32, i32* %515 monotonic, align 4
  %517 = and i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  br i1 %518, label %521, label %523

521:                                              ; preds = %514
  %522 = add i32 %520, -1
  store i32 %522, i32* %519, align 4
  br label %523

523:                                              ; preds = %521, %514
  %524 = phi i32 [ %522, %521 ], [ %520, %514 ]
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %527

526:                                              ; preds = %523
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %512) #17
  br label %527

527:                                              ; preds = %526, %523, %509
  %528 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19ResourceRequestHead10HttpMethodEv(%"class.blink::ResourceRequestHead"* %38) #17
  %529 = getelementptr inbounds i8, i8* %471, i64 32
  %530 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %528, i64 0, i32 0, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %532, label %550, label %533

533:                                              ; preds = %527
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %535 = load atomic i32, i32* %534 monotonic, align 4
  %536 = and i32 %535, 2
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %550

538:                                              ; preds = %533
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 0
  %540 = load i32, i32* %539, align 4
  %541 = zext i32 %540 to i33
  %542 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %541, i33 1) #17
  %543 = extractvalue { i33, i1 } %542, 1
  %544 = extractvalue { i33, i1 } %542, 0
  %545 = icmp slt i33 %544, 0
  %546 = or i1 %543, %545
  br i1 %546, label %547, label %548, !prof !4

547:                                              ; preds = %538
  call void @llvm.trap() #17
  unreachable

548:                                              ; preds = %538
  %549 = trunc i33 %544 to i32
  store i32 %549, i32* %539, align 4
  br label %550

550:                                              ; preds = %548, %533, %527
  %551 = ptrtoint %"class.WTF::StringImpl"* %531 to i64
  %552 = bitcast i8* %529 to i64*
  %553 = bitcast i8* %529 to %"class.WTF::StringImpl"**
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %553, align 8
  store i64 %551, i64* %552, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %550
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #17
  br label %569

569:                                              ; preds = %568, %565, %550
  %570 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nonnull dereferenceable(24) %18) #17
  %571 = ptrtoint %"class.blink::protocol::Object"* %570 to i64
  %572 = getelementptr inbounds i8, i8* %471, i64 40
  %573 = bitcast i8* %572 to %"class.blink::protocol::Object"**
  %574 = load %"class.blink::protocol::Object"*, %"class.blink::protocol::Object"** %573, align 8
  %575 = bitcast i8* %572 to i64*
  store i64 %571, i64* %575, align 8
  %576 = icmp eq %"class.blink::protocol::Object"* %574, null
  br i1 %576, label %582, label %577

577:                                              ; preds = %569
  %578 = bitcast %"class.blink::protocol::Object"* %574 to void (%"class.blink::protocol::Object"*)***
  %579 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %578, align 8
  %580 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %579, i64 2
  %581 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %580, align 8
  call void %581(%"class.blink::protocol::Object"* nonnull %574) #17
  br label %582

582:                                              ; preds = %577, %569
  %583 = call i32 @_ZNK5blink19ResourceRequestHead8PriorityEv(%"class.blink::ResourceRequestHead"* %38) #17
  %584 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_120ResourcePriorityJSONENS_13WebURLRequest8PriorityE(i32 %583) #17
  %585 = getelementptr inbounds i8, i8* %471, i64 96
  %586 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %586, label %604, label %587

587:                                              ; preds = %582
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = load atomic i32, i32* %588 monotonic, align 4
  %590 = and i32 %589, 2
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %604

592:                                              ; preds = %587
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %594 = load i32, i32* %593, align 4
  %595 = zext i32 %594 to i33
  %596 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %595, i33 1) #17
  %597 = extractvalue { i33, i1 } %596, 1
  %598 = extractvalue { i33, i1 } %596, 0
  %599 = icmp slt i33 %598, 0
  %600 = or i1 %597, %599
  br i1 %600, label %601, label %602, !prof !4

601:                                              ; preds = %592
  call void @llvm.trap() #17
  unreachable

602:                                              ; preds = %592
  %603 = trunc i33 %598 to i32
  store i32 %603, i32* %593, align 4
  br label %604

604:                                              ; preds = %602, %587, %582
  %605 = ptrtoint %"class.WTF::StringImpl"* %584 to i64
  %606 = bitcast i8* %585 to i64*
  %607 = bitcast i8* %585 to %"class.WTF::StringImpl"**
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  store i64 %605, i64* %606, align 8
  %609 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %609, label %623, label %610

610:                                              ; preds = %604
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  br i1 %614, label %617, label %619

617:                                              ; preds = %610
  %618 = add i32 %616, -1
  store i32 %618, i32* %615, align 4
  br label %619

619:                                              ; preds = %617, %610
  %620 = phi i32 [ %618, %617 ], [ %616, %610 ]
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %608) #17
  br label %623

623:                                              ; preds = %622, %619, %604
  %624 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 23
  %625 = load i32, i32* %624, align 8
  %626 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetReferrerPolicyEN7network5mojom14ReferrerPolicyE(i32 %625) #17
  %627 = getelementptr inbounds i8, i8* %471, i64 104
  %628 = icmp eq %"class.WTF::StringImpl"* %626, null
  br i1 %628, label %646, label %629

629:                                              ; preds = %623
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = load atomic i32, i32* %630 monotonic, align 4
  %632 = and i32 %631, 2
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %646

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  %637 = zext i32 %636 to i33
  %638 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %637, i33 1) #17
  %639 = extractvalue { i33, i1 } %638, 1
  %640 = extractvalue { i33, i1 } %638, 0
  %641 = icmp slt i33 %640, 0
  %642 = or i1 %639, %641
  br i1 %642, label %643, label %644, !prof !4

643:                                              ; preds = %634
  call void @llvm.trap() #17
  unreachable

644:                                              ; preds = %634
  %645 = trunc i33 %640 to i32
  store i32 %645, i32* %635, align 4
  br label %646

646:                                              ; preds = %644, %629, %623
  %647 = ptrtoint %"class.WTF::StringImpl"* %626 to i64
  %648 = bitcast i8* %627 to i64*
  %649 = bitcast i8* %627 to %"class.WTF::StringImpl"**
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  store i64 %647, i64* %648, align 8
  %651 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %651, label %665, label %652

652:                                              ; preds = %646
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  br i1 %656, label %659, label %661

659:                                              ; preds = %652
  %660 = add i32 %658, -1
  store i32 %660, i32* %657, align 4
  br label %661

661:                                              ; preds = %659, %652
  %662 = phi i32 [ %660, %659 ], [ %658, %652 ]
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %665

664:                                              ; preds = %661
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %650) #17
  br label %665

665:                                              ; preds = %664, %661, %646
  br i1 %628, label %679, label %666

666:                                              ; preds = %665
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = and i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %626, i64 0, i32 0
  %672 = load i32, i32* %671, align 4
  br i1 %670, label %673, label %675

673:                                              ; preds = %666
  %674 = add i32 %672, -1
  store i32 %674, i32* %671, align 4
  br label %675

675:                                              ; preds = %673, %666
  %676 = phi i32 [ %674, %673 ], [ %672, %666 ]
  %677 = icmp eq i32 %676, 0
  br i1 %677, label %678, label %679

678:                                              ; preds = %675
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %626) #17
  br label %679

679:                                              ; preds = %678, %675, %665
  br i1 %586, label %693, label %680

680:                                              ; preds = %679
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = load atomic i32, i32* %681 monotonic, align 4
  %683 = and i32 %682, 2
  %684 = icmp eq i32 %683, 0
  %685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %686 = load i32, i32* %685, align 4
  br i1 %684, label %687, label %689

687:                                              ; preds = %680
  %688 = add i32 %686, -1
  store i32 %688, i32* %685, align 4
  br label %689

689:                                              ; preds = %687, %680
  %690 = phi i32 [ %688, %687 ], [ %686, %680 ]
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %692, label %693

692:                                              ; preds = %689
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %584) #17
  br label %693

693:                                              ; preds = %692, %689, %679
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %488) #17
  %694 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* nonnull %17) #17
  %695 = icmp eq %"class.WTF::StringImpl"* %694, null
  br i1 %695, label %887, label %696

696:                                              ; preds = %693
  %697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %698 = load atomic i32, i32* %697 monotonic, align 4
  %699 = and i32 %698, 2
  %700 = icmp eq i32 %699, 0
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %694, i64 0, i32 0
  %702 = load i32, i32* %701, align 4
  br i1 %700, label %703, label %705

703:                                              ; preds = %696
  %704 = add i32 %702, -1
  store i32 %704, i32* %701, align 4
  br label %705

705:                                              ; preds = %703, %696
  %706 = phi i32 [ %704, %703 ], [ %702, %696 ]
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %709

708:                                              ; preds = %705
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %694) #17
  br label %709

709:                                              ; preds = %708, %705
  %710 = bitcast %"class.WTF::StringAppend.3742"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %710) #17
  %711 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"* nonnull %17) #17
  %712 = icmp eq %"class.WTF::StringImpl"* %711, null
  br i1 %712, label %756, label %713

713:                                              ; preds = %709
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %715 = load atomic i32, i32* %714 monotonic, align 4
  %716 = and i32 %715, 2
  %717 = icmp eq i32 %716, 0
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 0
  %719 = load i32, i32* %718, align 4
  br i1 %717, label %720, label %730

720:                                              ; preds = %713
  %721 = zext i32 %719 to i33
  %722 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %721, i33 1) #17
  %723 = extractvalue { i33, i1 } %722, 1
  %724 = extractvalue { i33, i1 } %722, 0
  %725 = icmp slt i33 %724, 0
  %726 = or i1 %723, %725
  br i1 %726, label %727, label %728, !prof !4

727:                                              ; preds = %720
  call void @llvm.trap() #17
  unreachable

728:                                              ; preds = %720
  %729 = trunc i33 %724 to i32
  store i32 %729, i32* %718, align 4
  br label %730

730:                                              ; preds = %728, %713
  %731 = phi i32 [ %729, %728 ], [ %719, %713 ]
  %732 = load atomic i32, i32* %714 monotonic, align 4
  %733 = and i32 %732, 2
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %745

735:                                              ; preds = %730
  %736 = zext i32 %731 to i33
  %737 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %736, i33 1) #17
  %738 = extractvalue { i33, i1 } %737, 1
  %739 = extractvalue { i33, i1 } %737, 0
  %740 = icmp slt i33 %739, 0
  %741 = or i1 %738, %740
  br i1 %741, label %742, label %743, !prof !4

742:                                              ; preds = %735
  call void @llvm.trap() #17
  unreachable

743:                                              ; preds = %735
  %744 = trunc i33 %739 to i32
  store i32 %744, i32* %718, align 4
  br label %745

745:                                              ; preds = %743, %730
  %746 = phi i32 [ %744, %743 ], [ %731, %730 ]
  %747 = load atomic i32, i32* %714 monotonic, align 4
  %748 = and i32 %747, 2
  %749 = icmp eq i32 %748, 0
  br i1 %749, label %750, label %752

750:                                              ; preds = %745
  %751 = add i32 %746, -1
  store i32 %751, i32* %718, align 4
  br label %752

752:                                              ; preds = %750, %745
  %753 = phi i32 [ %751, %750 ], [ %746, %745 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %711) #17
  br label %756

756:                                              ; preds = %755, %752, %709
  %757 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %21, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i8** %757, align 8
  %758 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %21, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %711, %"class.WTF::StringImpl"** %758, align 8
  %759 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.3742"* nonnull %21) #17
  %760 = icmp eq %"class.WTF::StringImpl"* %759, null
  br i1 %760, label %778, label %761

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load atomic i32, i32* %762 monotonic, align 4
  %764 = and i32 %763, 2
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %766, label %797

766:                                              ; preds = %761
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 0
  %768 = load i32, i32* %767, align 4
  %769 = zext i32 %768 to i33
  %770 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %769, i33 1) #17
  %771 = extractvalue { i33, i1 } %770, 1
  %772 = extractvalue { i33, i1 } %770, 0
  %773 = icmp slt i33 %772, 0
  %774 = or i1 %771, %773
  br i1 %774, label %775, label %776, !prof !4

775:                                              ; preds = %766
  call void @llvm.trap() #17
  unreachable

776:                                              ; preds = %766
  %777 = trunc i33 %772 to i32
  store i32 %777, i32* %767, align 4
  br label %797

778:                                              ; preds = %756
  %779 = bitcast i8* %476 to i64*
  %780 = bitcast i8* %476 to %"class.WTF::StringImpl"**
  %781 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %780, align 8
  store i64 0, i64* %779, align 8
  %782 = icmp eq %"class.WTF::StringImpl"* %781, null
  br i1 %782, label %796, label %783

783:                                              ; preds = %778
  %784 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %781, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %785 = load atomic i32, i32* %784 monotonic, align 4
  %786 = and i32 %785, 2
  %787 = icmp eq i32 %786, 0
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %781, i64 0, i32 0
  %789 = load i32, i32* %788, align 4
  br i1 %787, label %790, label %792

790:                                              ; preds = %783
  %791 = add i32 %789, -1
  store i32 %791, i32* %788, align 4
  br label %792

792:                                              ; preds = %790, %783
  %793 = phi i32 [ %791, %790 ], [ %789, %783 ]
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %796

795:                                              ; preds = %792
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %781) #17
  br label %796

796:                                              ; preds = %778, %792, %795
  store i8 1, i8* %475, align 8
  br label %856

797:                                              ; preds = %761, %776
  %798 = load atomic i32, i32* %762 monotonic, align 4
  %799 = and i32 %798, 2
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %801, label %813

801:                                              ; preds = %797
  %802 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 0
  %803 = load i32, i32* %802, align 4
  %804 = zext i32 %803 to i33
  %805 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %804, i33 1) #17
  %806 = extractvalue { i33, i1 } %805, 1
  %807 = extractvalue { i33, i1 } %805, 0
  %808 = icmp slt i33 %807, 0
  %809 = or i1 %806, %808
  br i1 %809, label %810, label %811, !prof !4

810:                                              ; preds = %801
  call void @llvm.trap() #17
  unreachable

811:                                              ; preds = %801
  %812 = trunc i33 %807 to i32
  store i32 %812, i32* %802, align 4
  br label %813

813:                                              ; preds = %811, %797
  %814 = ptrtoint %"class.WTF::StringImpl"* %759 to i64
  %815 = bitcast i8* %476 to i64*
  %816 = bitcast i8* %476 to %"class.WTF::StringImpl"**
  %817 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %816, align 8
  store i64 %814, i64* %815, align 8
  %818 = icmp eq %"class.WTF::StringImpl"* %817, null
  br i1 %818, label %832, label %819

819:                                              ; preds = %813
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = load atomic i32, i32* %820 monotonic, align 4
  %822 = and i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  br i1 %823, label %826, label %828

826:                                              ; preds = %819
  %827 = add i32 %825, -1
  store i32 %827, i32* %824, align 4
  br label %828

828:                                              ; preds = %826, %819
  %829 = phi i32 [ %827, %826 ], [ %825, %819 ]
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %832

831:                                              ; preds = %828
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %817) #17
  br label %832

832:                                              ; preds = %813, %828, %831
  store i8 1, i8* %475, align 8
  %833 = load atomic i32, i32* %762 monotonic, align 4
  %834 = and i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 0
  %837 = load i32, i32* %836, align 4
  br i1 %835, label %838, label %840

838:                                              ; preds = %832
  %839 = add i32 %837, -1
  store i32 %839, i32* %836, align 4
  br label %840

840:                                              ; preds = %838, %832
  %841 = phi i32 [ %839, %838 ], [ %837, %832 ]
  %842 = icmp eq i32 %841, 0
  br i1 %842, label %843, label %845

843:                                              ; preds = %840
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %759) #17
  %844 = load i32, i32* %836, align 4
  br label %845

845:                                              ; preds = %840, %843
  %846 = phi i32 [ %841, %840 ], [ %844, %843 ]
  %847 = load atomic i32, i32* %762 monotonic, align 4
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %852

850:                                              ; preds = %845
  %851 = add i32 %846, -1
  store i32 %851, i32* %836, align 4
  br label %852

852:                                              ; preds = %850, %845
  %853 = phi i32 [ %851, %850 ], [ %846, %845 ]
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %856

855:                                              ; preds = %852
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %759) #17
  br label %856

856:                                              ; preds = %855, %852, %796
  %857 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %758, align 8
  %858 = icmp eq %"class.WTF::StringImpl"* %857, null
  br i1 %858, label %872, label %859

859:                                              ; preds = %856
  %860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %857, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %861 = load atomic i32, i32* %860 monotonic, align 4
  %862 = and i32 %861, 2
  %863 = icmp eq i32 %862, 0
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %857, i64 0, i32 0
  %865 = load i32, i32* %864, align 4
  br i1 %863, label %866, label %868

866:                                              ; preds = %859
  %867 = add i32 %865, -1
  store i32 %867, i32* %864, align 4
  br label %868

868:                                              ; preds = %866, %859
  %869 = phi i32 [ %867, %866 ], [ %865, %859 ]
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %871, label %872

871:                                              ; preds = %868
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %857) #17
  br label %872

872:                                              ; preds = %871, %868, %856
  br i1 %712, label %886, label %873

873:                                              ; preds = %872
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %875 = load atomic i32, i32* %874 monotonic, align 4
  %876 = and i32 %875, 2
  %877 = icmp eq i32 %876, 0
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 0
  %879 = load i32, i32* %878, align 4
  br i1 %877, label %880, label %882

880:                                              ; preds = %873
  %881 = add i32 %879, -1
  store i32 %881, i32* %878, align 4
  br label %882

882:                                              ; preds = %880, %873
  %883 = phi i32 [ %881, %880 ], [ %879, %873 ]
  %884 = icmp eq i32 %883, 0
  br i1 %884, label %885, label %886

885:                                              ; preds = %882
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %711) #17
  br label %886

886:                                              ; preds = %885, %882, %872
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %710) #17
  br label %887

887:                                              ; preds = %886, %693
  %888 = inttoptr i64 %328 to %"class.WTF::StringImpl"*
  %889 = icmp eq i64 %328, 0
  br i1 %889, label %957, label %890

890:                                              ; preds = %887
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 1
  %892 = load i32, i32* %891, align 4
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %957, label %894

894:                                              ; preds = %890
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %896 = load atomic i32, i32* %895 monotonic, align 4
  %897 = and i32 %896, 2
  %898 = icmp eq i32 %897, 0
  br i1 %898, label %899, label %911

899:                                              ; preds = %894
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  %902 = zext i32 %901 to i33
  %903 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %902, i33 1) #17
  %904 = extractvalue { i33, i1 } %903, 1
  %905 = extractvalue { i33, i1 } %903, 0
  %906 = icmp slt i33 %905, 0
  %907 = or i1 %904, %906
  br i1 %907, label %908, label %909, !prof !4

908:                                              ; preds = %899
  call void @llvm.trap() #17
  unreachable

909:                                              ; preds = %899
  %910 = trunc i33 %905 to i32
  store i32 %910, i32* %900, align 4
  br label %911

911:                                              ; preds = %894, %909
  %912 = getelementptr inbounds i8, i8* %471, i64 48
  %913 = load atomic i32, i32* %895 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %928

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  %919 = zext i32 %918 to i33
  %920 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %919, i33 1) #17
  %921 = extractvalue { i33, i1 } %920, 1
  %922 = extractvalue { i33, i1 } %920, 0
  %923 = icmp slt i33 %922, 0
  %924 = or i1 %921, %923
  br i1 %924, label %925, label %926, !prof !4

925:                                              ; preds = %916
  call void @llvm.trap() #17
  unreachable

926:                                              ; preds = %916
  %927 = trunc i33 %922 to i32
  store i32 %927, i32* %917, align 4
  br label %928

928:                                              ; preds = %926, %911
  %929 = bitcast i8* %477 to i64*
  %930 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  store i64 %328, i64* %929, align 8
  %931 = icmp eq %"class.WTF::StringImpl"* %930, null
  br i1 %931, label %945, label %932

932:                                              ; preds = %928
  %933 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %930, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %934 = load atomic i32, i32* %933 monotonic, align 4
  %935 = and i32 %934, 2
  %936 = icmp eq i32 %935, 0
  %937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %930, i64 0, i32 0
  %938 = load i32, i32* %937, align 4
  br i1 %936, label %939, label %941

939:                                              ; preds = %932
  %940 = add i32 %938, -1
  store i32 %940, i32* %937, align 4
  br label %941

941:                                              ; preds = %939, %932
  %942 = phi i32 [ %940, %939 ], [ %938, %932 ]
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %944, label %945

944:                                              ; preds = %941
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %930) #17
  br label %945

945:                                              ; preds = %928, %941, %944
  store i8 1, i8* %912, align 8
  %946 = load atomic i32, i32* %895 monotonic, align 4
  %947 = and i32 %946, 2
  %948 = icmp eq i32 %947, 0
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %950 = load i32, i32* %949, align 4
  br i1 %948, label %951, label %953

951:                                              ; preds = %945
  %952 = add i32 %950, -1
  store i32 %952, i32* %949, align 4
  br label %953

953:                                              ; preds = %951, %945
  %954 = phi i32 [ %952, %951 ], [ %950, %945 ]
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %957

956:                                              ; preds = %953
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %888) #17
  br label %957

957:                                              ; preds = %956, %953, %890, %887
  %958 = getelementptr inbounds i8, i8* %140, i64 8
  %959 = bitcast i8* %958 to i64*
  %960 = load i64, i64* %959, align 8
  %961 = bitcast i8* %140 to i64*
  %962 = load i64, i64* %961, align 8
  %963 = icmp eq i64 %960, %962
  br i1 %963, label %997, label %964

964:                                              ; preds = %957
  %965 = bitcast i8* %481 to %"class.std::__1::vector.3322"**
  %966 = load %"class.std::__1::vector.3322"*, %"class.std::__1::vector.3322"** %965, align 8
  store i64 %142, i64* %482, align 8
  %967 = icmp eq %"class.std::__1::vector.3322"* %966, null
  br i1 %967, label %997, label %968

968:                                              ; preds = %964
  %969 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %966, i64 0, i32 0, i32 0
  %970 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %969, align 8
  %971 = icmp eq %"class.std::__1::unique_ptr.3324"* %970, null
  br i1 %971, label %995, label %972

972:                                              ; preds = %968
  %973 = bitcast %"class.std::__1::unique_ptr.3324"* %970 to i8*
  %974 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %966, i64 0, i32 0, i32 1
  %975 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %974, align 8
  %976 = icmp eq %"class.std::__1::unique_ptr.3324"* %975, %970
  br i1 %976, label %993, label %977

977:                                              ; preds = %972, %988
  %978 = phi %"class.std::__1::unique_ptr.3324"* [ %979, %988 ], [ %975, %972 ]
  %979 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %978, i64 -1
  %980 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %979, i64 0, i32 0, i32 0, i32 0
  %981 = load %"class.blink::protocol::Network::PostDataEntry"*, %"class.blink::protocol::Network::PostDataEntry"** %980, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %980, align 8
  %982 = icmp eq %"class.blink::protocol::Network::PostDataEntry"* %981, null
  br i1 %982, label %988, label %983

983:                                              ; preds = %977
  %984 = bitcast %"class.blink::protocol::Network::PostDataEntry"* %981 to void (%"class.blink::protocol::Network::PostDataEntry"*)***
  %985 = load void (%"class.blink::protocol::Network::PostDataEntry"*)**, void (%"class.blink::protocol::Network::PostDataEntry"*)*** %984, align 8
  %986 = getelementptr inbounds void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %985, i64 2
  %987 = load void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %986, align 8
  call void %987(%"class.blink::protocol::Network::PostDataEntry"* nonnull %981) #17
  br label %988

988:                                              ; preds = %983, %977
  %989 = icmp eq %"class.std::__1::unique_ptr.3324"* %979, %970
  br i1 %989, label %990, label %977

990:                                              ; preds = %988
  %991 = bitcast %"class.std::__1::vector.3322"* %966 to i8**
  %992 = load i8*, i8** %991, align 8
  br label %993

993:                                              ; preds = %990, %972
  %994 = phi i8* [ %992, %990 ], [ %973, %972 ]
  store %"class.std::__1::unique_ptr.3324"* %970, %"class.std::__1::unique_ptr.3324"** %974, align 8
  call void @_ZdlPv(i8* %994) #18
  br label %995

995:                                              ; preds = %993, %968
  %996 = bitcast %"class.std::__1::vector.3322"* %966 to i8*
  call void @_ZdlPv(i8* %996) #18
  br label %997

997:                                              ; preds = %995, %964, %957
  %998 = phi i64 [ %142, %957 ], [ 0, %964 ], [ 0, %995 ]
  br i1 %329, label %999, label %1000

999:                                              ; preds = %997
  store i8 1, i8* %480, align 1
  store i8 1, i8* %479, align 1
  br label %1000

1000:                                             ; preds = %999, %997
  %1001 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %1002 = load i8, i8* %1001, align 8, !range !2
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1174, label %1004

1004:                                             ; preds = %1000
  %1005 = call i8* @_Znwm(i64 32) #18
  %1006 = bitcast i8* %1005 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network16TrustTokenParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1006, align 8
  %1007 = getelementptr inbounds i8, i8* %1005, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1007, i8 0, i64 24, i1 false) #17
  %1008 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1009 = load i32, i32* %1008, align 8
  %1010 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1010) #17
  switch i32 %1009, label %1013 [
    i32 0, label %1014
    i32 1, label %1011
    i32 2, label %1012
  ]

1011:                                             ; preds = %1004
  br label %1014

1012:                                             ; preds = %1004
  br label %1014

1013:                                             ; preds = %1004
  unreachable

1014:                                             ; preds = %1004, %1012, %1011
  %1015 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum7SigningE, i64 0, i64 0), %1012 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum10RedemptionE, i64 0, i64 0), %1011 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network27TrustTokenOperationTypeEnum8IssuanceE, i64 0, i64 0), %1004 ]
  %1016 = call i64 @strlen(i8* nonnull %1015) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %1015, i64 %1016) #17
  %1017 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %1018 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1017, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1010) #17
  %1019 = icmp eq %"class.WTF::StringImpl"* %1018, null
  br i1 %1019, label %1037, label %1020

1020:                                             ; preds = %1014
  %1021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = load atomic i32, i32* %1021 monotonic, align 4
  %1023 = and i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1025, label %1037

1025:                                             ; preds = %1020
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 0
  %1027 = load i32, i32* %1026, align 4
  %1028 = zext i32 %1027 to i33
  %1029 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1028, i33 1) #17
  %1030 = extractvalue { i33, i1 } %1029, 1
  %1031 = extractvalue { i33, i1 } %1029, 0
  %1032 = icmp slt i33 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %1034, label %1035, !prof !4

1034:                                             ; preds = %1025
  call void @llvm.trap() #17
  unreachable

1035:                                             ; preds = %1025
  %1036 = trunc i33 %1031 to i32
  store i32 %1036, i32* %1026, align 4
  br label %1037

1037:                                             ; preds = %1035, %1020, %1014
  %1038 = ptrtoint %"class.WTF::StringImpl"* %1018 to i64
  %1039 = bitcast i8* %1007 to i64*
  store i64 %1038, i64* %1039, align 8
  %1040 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %1041 = load i32, i32* %1040, align 4
  %1042 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1042) #17
  %1043 = icmp eq i32 %1041, 0
  br i1 %1043, label %1044, label %1051

1044:                                             ; preds = %1037
  %1045 = load i8*, i8** @_ZN5blink8protocol7Network16TrustTokenParams17RefreshPolicyEnum9UseCachedE, align 8
  %1046 = icmp eq i8* %1045, null
  br i1 %1046, label %1049, label %1047

1047:                                             ; preds = %1044
  %1048 = call i64 @strlen(i8* nonnull %1045) #19
  br label %1049

1049:                                             ; preds = %1047, %1044
  %1050 = phi i64 [ %1048, %1047 ], [ 0, %1044 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %1045, i64 %1050) #17
  br label %1058

1051:                                             ; preds = %1037
  %1052 = load i8*, i8** @_ZN5blink8protocol7Network16TrustTokenParams17RefreshPolicyEnum7RefreshE, align 8
  %1053 = icmp eq i8* %1052, null
  br i1 %1053, label %1056, label %1054

1054:                                             ; preds = %1051
  %1055 = call i64 @strlen(i8* nonnull %1052) #19
  br label %1056

1056:                                             ; preds = %1054, %1051
  %1057 = phi i64 [ %1055, %1054 ], [ 0, %1051 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %1052, i64 %1057) #17
  br label %1058

1058:                                             ; preds = %1056, %1049
  %1059 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %1060 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1059, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1042) #17
  %1061 = getelementptr inbounds i8, i8* %1005, i64 16
  %1062 = icmp eq %"class.WTF::StringImpl"* %1060, null
  br i1 %1062, label %1080, label %1063

1063:                                             ; preds = %1058
  %1064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1065 = load atomic i32, i32* %1064 monotonic, align 4
  %1066 = and i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1068, label %1082

1068:                                             ; preds = %1063
  %1069 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 0
  %1070 = load i32, i32* %1069, align 4
  %1071 = zext i32 %1070 to i33
  %1072 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1071, i33 1) #17
  %1073 = extractvalue { i33, i1 } %1072, 1
  %1074 = extractvalue { i33, i1 } %1072, 0
  %1075 = icmp slt i33 %1074, 0
  %1076 = or i1 %1073, %1075
  br i1 %1076, label %1077, label %1078, !prof !4

1077:                                             ; preds = %1068
  call void @llvm.trap() #17
  unreachable

1078:                                             ; preds = %1068
  %1079 = trunc i33 %1074 to i32
  store i32 %1079, i32* %1069, align 4
  br label %1082

1080:                                             ; preds = %1058
  %1081 = bitcast i8* %1061 to i64*
  store i64 0, i64* %1081, align 8
  br label %1096

1082:                                             ; preds = %1078, %1063
  %1083 = ptrtoint %"class.WTF::StringImpl"* %1060 to i64
  %1084 = bitcast i8* %1061 to i64*
  store i64 %1083, i64* %1084, align 8
  %1085 = load atomic i32, i32* %1064 monotonic, align 4
  %1086 = and i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 4
  br i1 %1087, label %1090, label %1092

1090:                                             ; preds = %1082
  %1091 = add i32 %1089, -1
  store i32 %1091, i32* %1088, align 4
  br label %1092

1092:                                             ; preds = %1090, %1082
  %1093 = phi i32 [ %1091, %1090 ], [ %1089, %1082 ]
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1095, label %1096

1095:                                             ; preds = %1092
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1060) #17
  br label %1096

1096:                                             ; preds = %1095, %1092, %1080
  br i1 %1019, label %1110, label %1097

1097:                                             ; preds = %1096
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1099 = load atomic i32, i32* %1098 monotonic, align 4
  %1100 = and i32 %1099, 2
  %1101 = icmp eq i32 %1100, 0
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 4
  br i1 %1101, label %1104, label %1106

1104:                                             ; preds = %1097
  %1105 = add i32 %1103, -1
  store i32 %1105, i32* %1102, align 4
  br label %1106

1106:                                             ; preds = %1104, %1097
  %1107 = phi i32 [ %1105, %1104 ], [ %1103, %1097 ]
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1110

1109:                                             ; preds = %1106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1018) #17
  br label %1110

1110:                                             ; preds = %1109, %1106, %1096
  %1111 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 2
  %1112 = load i32, i32* %1111, align 4
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1164, label %1114

1114:                                             ; preds = %1110
  %1115 = call i8* @_Znwm(i64 24) #18
  %1116 = bitcast i8* %1115 to %"class.std::__1::vector.2044"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1115, i8 0, i64 24, i1 false) #17
  %1117 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0, i32 0
  %1118 = load %class.scoped_refptr.286*, %class.scoped_refptr.286** %1117, align 8
  %1119 = zext i32 %1112 to i64
  %1120 = getelementptr inbounds %class.scoped_refptr.286, %class.scoped_refptr.286* %1118, i64 %1119
  %1121 = bitcast %"class.WTF::String"* %12 to i8*
  %1122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %1123 = getelementptr inbounds i8, i8* %1115, i64 8
  %1124 = bitcast i8* %1123 to %"class.WTF::String"**
  %1125 = getelementptr inbounds i8, i8* %1115, i64 16
  %1126 = bitcast i8* %1125 to %"class.WTF::String"**
  %1127 = bitcast i8* %1123 to i64*
  br label %1132

1128:                                             ; preds = %1161
  %1129 = ptrtoint i8* %1115 to i64
  %1130 = getelementptr inbounds i8, i8* %1005, i64 24
  %1131 = bitcast i8* %1130 to i64*
  store i64 %1129, i64* %1131, align 8
  br label %1164

1132:                                             ; preds = %1161, %1114
  %1133 = phi %class.scoped_refptr.286* [ %1118, %1114 ], [ %1162, %1161 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1121) #17
  %1134 = getelementptr inbounds %class.scoped_refptr.286, %class.scoped_refptr.286* %1133, i64 0, i32 0
  %1135 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %1134, align 8
  %1136 = call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"* %1135) #17
  store %"class.WTF::StringImpl"* %1136, %"class.WTF::StringImpl"** %1122, align 8
  %1137 = load %"class.WTF::String"*, %"class.WTF::String"** %1124, align 8
  %1138 = load %"class.WTF::String"*, %"class.WTF::String"** %1126, align 8
  %1139 = icmp ult %"class.WTF::String"* %1137, %1138
  br i1 %1139, label %1140, label %1145

1140:                                             ; preds = %1132
  %1141 = ptrtoint %"class.WTF::StringImpl"* %1136 to i64
  %1142 = bitcast %"class.WTF::String"* %1137 to i64*
  store i64 %1141, i64* %1142, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1122, align 8
  %1143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1137, i64 1
  %1144 = ptrtoint %"class.WTF::String"* %1143 to i64
  store i64 %1144, i64* %1127, align 8
  br label %1161

1145:                                             ; preds = %1132
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2044"* nonnull %1116, %"class.WTF::String"* nonnull dereferenceable(8) %12) #17
  %1146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1122, align 8
  %1147 = icmp eq %"class.WTF::StringImpl"* %1146, null
  br i1 %1147, label %1161, label %1148

1148:                                             ; preds = %1145
  %1149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1150 = load atomic i32, i32* %1149 monotonic, align 4
  %1151 = and i32 %1150, 2
  %1152 = icmp eq i32 %1151, 0
  %1153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1146, i64 0, i32 0
  %1154 = load i32, i32* %1153, align 4
  br i1 %1152, label %1155, label %1157

1155:                                             ; preds = %1148
  %1156 = add i32 %1154, -1
  store i32 %1156, i32* %1153, align 4
  br label %1157

1157:                                             ; preds = %1155, %1148
  %1158 = phi i32 [ %1156, %1155 ], [ %1154, %1148 ]
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1160, label %1161

1160:                                             ; preds = %1157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1146) #17
  br label %1161

1161:                                             ; preds = %1160, %1157, %1145, %1140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1121) #17
  %1162 = getelementptr inbounds %class.scoped_refptr.286, %class.scoped_refptr.286* %1133, i64 1
  %1163 = icmp eq %class.scoped_refptr.286* %1162, %1120
  br i1 %1163, label %1128, label %1132

1164:                                             ; preds = %1128, %1110
  %1165 = ptrtoint i8* %1005 to i64
  %1166 = bitcast i8* %485 to %"class.blink::protocol::Network::TrustTokenParams"**
  %1167 = load %"class.blink::protocol::Network::TrustTokenParams"*, %"class.blink::protocol::Network::TrustTokenParams"** %1166, align 8
  store i64 %1165, i64* %486, align 8
  %1168 = icmp eq %"class.blink::protocol::Network::TrustTokenParams"* %1167, null
  br i1 %1168, label %1174, label %1169

1169:                                             ; preds = %1164
  %1170 = bitcast %"class.blink::protocol::Network::TrustTokenParams"* %1167 to void (%"class.blink::protocol::Network::TrustTokenParams"*)***
  %1171 = load void (%"class.blink::protocol::Network::TrustTokenParams"*)**, void (%"class.blink::protocol::Network::TrustTokenParams"*)*** %1170, align 8
  %1172 = getelementptr inbounds void (%"class.blink::protocol::Network::TrustTokenParams"*)*, void (%"class.blink::protocol::Network::TrustTokenParams"*)** %1171, i64 2
  %1173 = load void (%"class.blink::protocol::Network::TrustTokenParams"*)*, void (%"class.blink::protocol::Network::TrustTokenParams"*)** %1172, align 8
  call void %1173(%"class.blink::protocol::Network::TrustTokenParams"* nonnull %1167) #17
  br label %1174

1174:                                             ; preds = %1169, %1164, %1000
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %18) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %330) #17
  %1175 = inttoptr i64 %998 to %"class.std::__1::vector.3322"*
  %1176 = icmp eq i64 %998, 0
  br i1 %1176, label %1206, label %1177

1177:                                             ; preds = %1174
  %1178 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %1175, i64 0, i32 0, i32 0
  %1179 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %1178, align 8
  %1180 = icmp eq %"class.std::__1::unique_ptr.3324"* %1179, null
  br i1 %1180, label %1204, label %1181

1181:                                             ; preds = %1177
  %1182 = bitcast %"class.std::__1::unique_ptr.3324"* %1179 to i8*
  %1183 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %1175, i64 0, i32 0, i32 1
  %1184 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %1183, align 8
  %1185 = icmp eq %"class.std::__1::unique_ptr.3324"* %1184, %1179
  br i1 %1185, label %1202, label %1186

1186:                                             ; preds = %1181, %1197
  %1187 = phi %"class.std::__1::unique_ptr.3324"* [ %1188, %1197 ], [ %1184, %1181 ]
  %1188 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %1187, i64 -1
  %1189 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %1188, i64 0, i32 0, i32 0, i32 0
  %1190 = load %"class.blink::protocol::Network::PostDataEntry"*, %"class.blink::protocol::Network::PostDataEntry"** %1189, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %1189, align 8
  %1191 = icmp eq %"class.blink::protocol::Network::PostDataEntry"* %1190, null
  br i1 %1191, label %1197, label %1192

1192:                                             ; preds = %1186
  %1193 = bitcast %"class.blink::protocol::Network::PostDataEntry"* %1190 to void (%"class.blink::protocol::Network::PostDataEntry"*)***
  %1194 = load void (%"class.blink::protocol::Network::PostDataEntry"*)**, void (%"class.blink::protocol::Network::PostDataEntry"*)*** %1193, align 8
  %1195 = getelementptr inbounds void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %1194, i64 2
  %1196 = load void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %1195, align 8
  call void %1196(%"class.blink::protocol::Network::PostDataEntry"* nonnull %1190) #17
  br label %1197

1197:                                             ; preds = %1192, %1186
  %1198 = icmp eq %"class.std::__1::unique_ptr.3324"* %1188, %1179
  br i1 %1198, label %1199, label %1186

1199:                                             ; preds = %1197
  %1200 = inttoptr i64 %998 to i8**
  %1201 = load i8*, i8** %1200, align 8
  br label %1202

1202:                                             ; preds = %1199, %1181
  %1203 = phi i8* [ %1201, %1199 ], [ %1182, %1181 ]
  store %"class.std::__1::unique_ptr.3324"* %1179, %"class.std::__1::unique_ptr.3324"** %1183, align 8
  call void @_ZdlPv(i8* %1203) #18
  br label %1204

1204:                                             ; preds = %1202, %1177
  %1205 = inttoptr i64 %998 to i8*
  call void @_ZdlPv(i8* %1205) #18
  br label %1206

1206:                                             ; preds = %1204, %1174
  br i1 %889, label %1220, label %1207

1207:                                             ; preds = %1206
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %888, i64 0, i32 0
  %1213 = load i32, i32* %1212, align 4
  br i1 %1211, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = add i32 %1213, -1
  store i32 %1215, i32* %1212, align 4
  br label %1216

1216:                                             ; preds = %1214, %1207
  %1217 = phi i32 [ %1215, %1214 ], [ %1213, %1207 ]
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1220

1219:                                             ; preds = %1216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %888) #17
  br label %1220

1220:                                             ; preds = %1219, %1216, %1206
  br i1 %76, label %1228, label %1221

1221:                                             ; preds = %1220
  %1222 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1222) #17
  %1223 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %1224 = load i32, i32* %1223, align 4
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1226, label %1228

1226:                                             ; preds = %1221
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %75) #17
  %1227 = inttoptr i64 %72 to i8*
  call void @free(i8* %1227) #17
  br label %1228

1228:                                             ; preds = %1220, %1221, %1226
  br i1 %116, label %1229, label %1274

1229:                                             ; preds = %1228
  %1230 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %1, i64 0, i32 21, i32 0, i32 0
  %1231 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %1230, align 8
  %1232 = call i32 @_ZN5blink19MixedContentChecker23ContextTypeForInspectorEPNS_10LocalFrameERKNS_15ResourceRequestE(%"class.blink::LocalFrame"* %1231, %"class.blink::ResourceRequest"* dereferenceable(1032) %3) #17
  %1233 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1233)
  switch i32 %1232, label %1236 [
    i32 3, label %1235
    i32 1, label %1234
    i32 2, label %1235
  ]

1234:                                             ; preds = %1229
  br label %1236

1235:                                             ; preds = %1229, %1229
  br label %1236

1236:                                             ; preds = %1229, %1234, %1235
  %1237 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security20MixedContentTypeEnum9BlockableE, i64 0, i64 0), %1234 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security20MixedContentTypeEnum19OptionallyBlockableE, i64 0, i64 0), %1235 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security20MixedContentTypeEnum4NoneE, i64 0, i64 0), %1229 ]
  %1238 = call i64 @strlen(i8* nonnull %1237) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %1237, i64 %1238) #17
  %1239 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1239, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1233)
  %1241 = icmp eq %"class.WTF::StringImpl"* %1240, null
  br i1 %1241, label %1259, label %1242

1242:                                             ; preds = %1236
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1244 = load atomic i32, i32* %1243 monotonic, align 4
  %1245 = and i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  br i1 %1246, label %1247, label %1261

1247:                                             ; preds = %1242
  %1248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1249 = load i32, i32* %1248, align 4
  %1250 = zext i32 %1249 to i33
  %1251 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1250, i33 1) #17
  %1252 = extractvalue { i33, i1 } %1251, 1
  %1253 = extractvalue { i33, i1 } %1251, 0
  %1254 = icmp slt i33 %1253, 0
  %1255 = or i1 %1252, %1254
  br i1 %1255, label %1256, label %1257, !prof !4

1256:                                             ; preds = %1247
  call void @llvm.trap() #17
  unreachable

1257:                                             ; preds = %1247
  %1258 = trunc i33 %1253 to i32
  store i32 %1258, i32* %1248, align 4
  br label %1261

1259:                                             ; preds = %1236
  %1260 = bitcast i8* %483 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1260, %"class.WTF::StringImpl"* null) #17
  br label %1274

1261:                                             ; preds = %1242, %1257
  %1262 = bitcast i8* %483 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1262, %"class.WTF::StringImpl"* nonnull %1240) #17
  %1263 = load atomic i32, i32* %1243 monotonic, align 4
  %1264 = and i32 %1263, 2
  %1265 = icmp eq i32 %1264, 0
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1267 = load i32, i32* %1266, align 4
  br i1 %1265, label %1268, label %1270

1268:                                             ; preds = %1261
  %1269 = add i32 %1267, -1
  store i32 %1269, i32* %1266, align 4
  br label %1270

1270:                                             ; preds = %1268, %1261
  %1271 = phi i32 [ %1269, %1268 ], [ %1267, %1261 ]
  %1272 = icmp eq i32 %1271, 0
  br i1 %1272, label %1273, label %1274

1273:                                             ; preds = %1270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1240) #17
  br label %1274

1274:                                             ; preds = %1273, %1270, %1259, %1228
  %1275 = load i32, i32* %624, align 8
  %1276 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetReferrerPolicyEN7network5mojom14ReferrerPolicyE(i32 %1275)
  %1277 = icmp eq %"class.WTF::StringImpl"* %1276, null
  br i1 %1277, label %1295, label %1278

1278:                                             ; preds = %1274
  %1279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1280 = load atomic i32, i32* %1279 monotonic, align 4
  %1281 = and i32 %1280, 2
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1283, label %1295

1283:                                             ; preds = %1278
  %1284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 0
  %1285 = load i32, i32* %1284, align 4
  %1286 = zext i32 %1285 to i33
  %1287 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1286, i33 1) #17
  %1288 = extractvalue { i33, i1 } %1287, 1
  %1289 = extractvalue { i33, i1 } %1287, 0
  %1290 = icmp slt i33 %1289, 0
  %1291 = or i1 %1288, %1290
  br i1 %1291, label %1292, label %1293, !prof !4

1292:                                             ; preds = %1283
  call void @llvm.trap() #17
  unreachable

1293:                                             ; preds = %1283
  %1294 = trunc i33 %1289 to i32
  store i32 %1294, i32* %1284, align 4
  br label %1295

1295:                                             ; preds = %1293, %1278, %1274
  %1296 = ptrtoint %"class.WTF::StringImpl"* %1276 to i64
  %1297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  store i64 %1296, i64* %648, align 8
  %1298 = icmp eq %"class.WTF::StringImpl"* %1297, null
  br i1 %1298, label %1312, label %1299

1299:                                             ; preds = %1295
  %1300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1301 = load atomic i32, i32* %1300 monotonic, align 4
  %1302 = and i32 %1301, 2
  %1303 = icmp eq i32 %1302, 0
  %1304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1297, i64 0, i32 0
  %1305 = load i32, i32* %1304, align 4
  br i1 %1303, label %1306, label %1308

1306:                                             ; preds = %1299
  %1307 = add i32 %1305, -1
  store i32 %1307, i32* %1304, align 4
  br label %1308

1308:                                             ; preds = %1306, %1299
  %1309 = phi i32 [ %1307, %1306 ], [ %1305, %1299 ]
  %1310 = icmp eq i32 %1309, 0
  br i1 %1310, label %1311, label %1312

1311:                                             ; preds = %1308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1297) #17
  br label %1312

1312:                                             ; preds = %1295, %1308, %1311
  br i1 %1277, label %1326, label %1313

1313:                                             ; preds = %1312
  %1314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1315 = load atomic i32, i32* %1314 monotonic, align 4
  %1316 = and i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  %1318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1276, i64 0, i32 0
  %1319 = load i32, i32* %1318, align 4
  br i1 %1317, label %1320, label %1322

1320:                                             ; preds = %1313
  %1321 = add i32 %1319, -1
  store i32 %1321, i32* %1318, align 4
  br label %1322

1322:                                             ; preds = %1320, %1313
  %1323 = phi i32 [ %1321, %1320 ], [ %1319, %1313 ]
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %1326

1325:                                             ; preds = %1322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1276) #17
  br label %1326

1326:                                             ; preds = %1312, %1322, %1325
  %1327 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 0, i32 2
  %1328 = load i8, i8* %1327, align 8, !range !2
  %1329 = icmp eq i8 %1328, 0
  br i1 %1329, label %1333, label %1330

1330:                                             ; preds = %1326
  %1331 = getelementptr inbounds i8, i8* %471, i64 113
  store i8 1, i8* %1331, align 1
  %1332 = getelementptr inbounds i8, i8* %471, i64 112
  store i8 1, i8* %1332, align 1
  br label %1333

1333:                                             ; preds = %1326, %1330
  %1334 = call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %112) #17
  %1335 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1335) #17
  %1336 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1336, align 8
  br i1 %116, label %1337, label %1340

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1338) #17
  %1339 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"* nonnull %1) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1338, i8 -86, i64 112, i1 false) #17, !alias.scope !8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %26, %"class.blink::KURL"* dereferenceable(112) %1339) #17
  br label %1342

1340:                                             ; preds = %1333
  %1341 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %1341) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1341, i8 -86, i64 112, i1 false) #17, !alias.scope !11
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %27, %"class.blink::KURL"* dereferenceable(112) %2) #17
  br label %1342

1342:                                             ; preds = %1340, %1337
  %1343 = phi %"class.blink::KURL"* [ %27, %1340 ], [ %26, %1337 ]
  %1344 = phi i1 [ false, %1340 ], [ true, %1337 ]
  %1345 = phi i1 [ true, %1340 ], [ false, %1337 ]
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %1343) #17
  %1346 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1343, i64 0, i32 4, i32 0, i32 0
  %1347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1346, align 8
  store %"class.WTF::StringImpl"* %1347, %"class.WTF::StringImpl"** %1336, align 8
  %1348 = icmp eq %"class.WTF::StringImpl"* %1347, null
  br i1 %1348, label %1366, label %1349

1349:                                             ; preds = %1342
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1351 = load atomic i32, i32* %1350 monotonic, align 4
  %1352 = and i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1366

1354:                                             ; preds = %1349
  %1355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 0
  %1356 = load i32, i32* %1355, align 4
  %1357 = zext i32 %1356 to i33
  %1358 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1357, i33 1) #17
  %1359 = extractvalue { i33, i1 } %1358, 1
  %1360 = extractvalue { i33, i1 } %1358, 0
  %1361 = icmp slt i33 %1360, 0
  %1362 = or i1 %1359, %1361
  br i1 %1362, label %1363, label %1364, !prof !4

1363:                                             ; preds = %1354
  call void @llvm.trap() #17
  unreachable

1364:                                             ; preds = %1354
  %1365 = trunc i33 %1360 to i32
  store i32 %1365, i32* %1355, align 4
  br label %1366

1366:                                             ; preds = %1342, %1349, %1364
  br i1 %1345, label %1367, label %1369

1367:                                             ; preds = %1366
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %27) #17
  %1368 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %27, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1368) #17
  br label %1369

1369:                                             ; preds = %1366, %1367
  br i1 %1344, label %1370, label %1372

1370:                                             ; preds = %1369
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %26) #17
  %1371 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %26, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %1371) #17
  br label %1372

1372:                                             ; preds = %1369, %1370
  %1373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %1374 = icmp eq %"class.WTF::StringImpl"* %1373, null
  br i1 %1374, label %1425, label %1375

1375:                                             ; preds = %1372
  %1376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1373, i64 0, i32 1
  %1377 = load i32, i32* %1376, align 4
  %1378 = icmp eq i32 %1377, 0
  br i1 %1378, label %1425, label %1379

1379:                                             ; preds = %1375
  %1380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1381 = load atomic i32, i32* %1380 monotonic, align 4
  %1382 = and i32 %1381, 2
  %1383 = icmp eq i32 %1382, 0
  br i1 %1383, label %1384, label %1396

1384:                                             ; preds = %1379
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1373, i64 0, i32 0
  %1386 = load i32, i32* %1385, align 4
  %1387 = zext i32 %1386 to i33
  %1388 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1387, i33 1) #17
  %1389 = extractvalue { i33, i1 } %1388, 1
  %1390 = extractvalue { i33, i1 } %1388, 0
  %1391 = icmp slt i33 %1390, 0
  %1392 = or i1 %1389, %1391
  br i1 %1392, label %1393, label %1394, !prof !4

1393:                                             ; preds = %1384
  call void @llvm.trap() #17
  unreachable

1394:                                             ; preds = %1384
  %1395 = trunc i33 %1390 to i32
  store i32 %1395, i32* %1385, align 4
  br label %1396

1396:                                             ; preds = %1394, %1379
  %1397 = load atomic i32, i32* %1380 monotonic, align 4
  %1398 = and i32 %1397, 2
  %1399 = icmp eq i32 %1398, 0
  %1400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1373, i64 0, i32 0
  %1401 = load i32, i32* %1400, align 4
  br i1 %1399, label %1402, label %1412

1402:                                             ; preds = %1396
  %1403 = zext i32 %1401 to i33
  %1404 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1403, i33 1) #17
  %1405 = extractvalue { i33, i1 } %1404, 1
  %1406 = extractvalue { i33, i1 } %1404, 0
  %1407 = icmp slt i33 %1406, 0
  %1408 = or i1 %1405, %1407
  br i1 %1408, label %1409, label %1410, !prof !4

1409:                                             ; preds = %1402
  call void @llvm.trap() #17
  unreachable

1410:                                             ; preds = %1402
  %1411 = trunc i33 %1406 to i32
  store i32 %1411, i32* %1400, align 4
  br label %1412

1412:                                             ; preds = %1396, %1410
  %1413 = phi i32 [ %1411, %1410 ], [ %1401, %1396 ]
  %1414 = ptrtoint %"class.WTF::StringImpl"* %1373 to i64
  %1415 = load atomic i32, i32* %1380 monotonic, align 4
  %1416 = and i32 %1415, 2
  %1417 = icmp eq i32 %1416, 0
  br i1 %1417, label %1418, label %1421

1418:                                             ; preds = %1412
  %1419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1373, i64 0, i32 0
  %1420 = add i32 %1413, -1
  store i32 %1420, i32* %1419, align 4
  br label %1421

1421:                                             ; preds = %1418, %1412
  %1422 = phi i32 [ %1420, %1418 ], [ %1413, %1412 ]
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1425

1424:                                             ; preds = %1421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1373) #17
  br label %1425

1425:                                             ; preds = %1372, %1424, %1421, %1375
  %1426 = phi i8 [ 0, %1375 ], [ 1, %1421 ], [ 1, %1424 ], [ 0, %1372 ]
  %1427 = phi i64 [ 0, %1375 ], [ %1414, %1421 ], [ %1414, %1424 ], [ 0, %1372 ]
  %1428 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %1429 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %1428, align 8
  %1430 = add i64 %7, -9223372036854775807
  %1431 = icmp ult i64 %1430, 2
  br i1 %1431, label %1435, label %1432

1432:                                             ; preds = %1425
  %1433 = sitofp i64 %7 to double
  %1434 = fdiv double %1433, 1.000000e+06
  br label %1438

1435:                                             ; preds = %1425
  %1436 = icmp slt i64 %7, 0
  %1437 = select i1 %1436, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %1438

1438:                                             ; preds = %1432, %1435
  %1439 = phi double [ %1437, %1435 ], [ %1434, %1432 ]
  %1440 = bitcast %"class.base::Time"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1440) #17
  %1441 = call i64 @_ZN4base4Time3NowEv() #17
  %1442 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %28, i64 0, i32 0, i32 0
  store i64 %1441, i64* %1442, align 8
  %1443 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %28) #17
  %1444 = call fastcc %"class.blink::protocol::Network::Response"* @_ZN5blinkL30BuildObjectForResourceResponseERKNS_16ResourceResponseEPKNS_8ResourceEPb(%"class.blink::ResourceResponse"* dereferenceable(1072) %4, %"class.blink::Resource"* null, i8* null)
  %1445 = ptrtoint %"class.blink::protocol::Network::Response"* %1444 to i64
  %1446 = bitcast %"class.crdtp::detail::PtrMaybe.3359"* %29 to i64*
  store i64 %1445, i64* %1446, align 8
  %1447 = icmp eq %"class.WTF::StringImpl"* %1334, null
  br i1 %1447, label %1465, label %1448

1448:                                             ; preds = %1438
  %1449 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1450 = load atomic i32, i32* %1449 monotonic, align 4
  %1451 = and i32 %1450, 2
  %1452 = icmp eq i32 %1451, 0
  br i1 %1452, label %1453, label %1465

1453:                                             ; preds = %1448
  %1454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1334, i64 0, i32 0
  %1455 = load i32, i32* %1454, align 4
  %1456 = zext i32 %1455 to i33
  %1457 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1456, i33 1) #17
  %1458 = extractvalue { i33, i1 } %1457, 1
  %1459 = extractvalue { i33, i1 } %1457, 0
  %1460 = icmp slt i33 %1459, 0
  %1461 = or i1 %1458, %1460
  br i1 %1461, label %1462, label %1463, !prof !4

1462:                                             ; preds = %1453
  call void @llvm.trap() #17
  unreachable

1463:                                             ; preds = %1453
  %1464 = trunc i33 %1459 to i32
  store i32 %1464, i32* %1454, align 4
  br label %1465

1465:                                             ; preds = %1438, %1448, %1463
  %1466 = ptrtoint %"class.WTF::StringImpl"* %1334 to i64
  %1467 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %30, i64 0, i32 0
  store i8 1, i8* %1467, align 8
  %1468 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %30, i64 0, i32 1
  %1469 = bitcast %"class.WTF::String"* %1468 to i64*
  store i64 %1466, i64* %1469, align 8
  %1470 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %31, i64 0, i32 0
  store i8 %1426, i8* %1470, align 8
  %1471 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %31, i64 0, i32 1
  %1472 = bitcast %"class.WTF::String"* %1471 to i64*
  store i64 %1427, i64* %1472, align 8
  %1473 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %3, i64 0, i32 0, i32 8
  %1474 = load i16, i16* %1473, align 8
  %1475 = lshr i16 %1474, 3
  %1476 = trunc i16 %1475 to i8
  %1477 = and i8 %1476, 1
  %1478 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %32, i64 0, i32 0
  store i8 1, i8* %1478, align 1
  %1479 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %32, i64 0, i32 1
  store i8 %1477, i8* %1479, align 1
  call void @_ZN5blink8protocol7Network8Frontend17requestWillBeSentERKN3WTF6StringES6_S6_NSt3__110unique_ptrINS1_7RequestENS7_14default_deleteIS9_EEEEddNS8_INS1_9InitiatorENSA_ISD_EEEEN5crdtp6detail8PtrMaybeINS1_8ResponseEEENSH_10ValueMaybeIS4_EESM_NSL_IbEE(%"class.blink::protocol::Network::Frontend"* %1429, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.WTF::String"* nonnull dereferenceable(8) %25, %"class.blink::protocol::Network::Request"* nonnull %487, double %1439, double %1443, %"class.blink::protocol::Network::Initiator"* %133, %"class.crdtp::detail::PtrMaybe.3359"* nonnull %29, %"class.crdtp::detail::ValueMaybe"* nonnull %30, %"class.crdtp::detail::ValueMaybe"* nonnull %31, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %32) #17
  %1480 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %31, i64 0, i32 1, i32 0, i32 0
  %1481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1480, align 8
  %1482 = icmp eq %"class.WTF::StringImpl"* %1481, null
  br i1 %1482, label %1496, label %1483

1483:                                             ; preds = %1465
  %1484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1485 = load atomic i32, i32* %1484 monotonic, align 4
  %1486 = and i32 %1485, 2
  %1487 = icmp eq i32 %1486, 0
  %1488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1481, i64 0, i32 0
  %1489 = load i32, i32* %1488, align 4
  br i1 %1487, label %1490, label %1492

1490:                                             ; preds = %1483
  %1491 = add i32 %1489, -1
  store i32 %1491, i32* %1488, align 4
  br label %1492

1492:                                             ; preds = %1490, %1483
  %1493 = phi i32 [ %1491, %1490 ], [ %1489, %1483 ]
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1495, label %1496

1495:                                             ; preds = %1492
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1481) #17
  br label %1496

1496:                                             ; preds = %1465, %1492, %1495
  %1497 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %30, i64 0, i32 1, i32 0, i32 0
  %1498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1497, align 8
  %1499 = icmp eq %"class.WTF::StringImpl"* %1498, null
  br i1 %1499, label %1513, label %1500

1500:                                             ; preds = %1496
  %1501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1498, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1502 = load atomic i32, i32* %1501 monotonic, align 4
  %1503 = and i32 %1502, 2
  %1504 = icmp eq i32 %1503, 0
  %1505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1498, i64 0, i32 0
  %1506 = load i32, i32* %1505, align 4
  br i1 %1504, label %1507, label %1509

1507:                                             ; preds = %1500
  %1508 = add i32 %1506, -1
  store i32 %1508, i32* %1505, align 4
  br label %1509

1509:                                             ; preds = %1507, %1500
  %1510 = phi i32 [ %1508, %1507 ], [ %1506, %1500 ]
  %1511 = icmp eq i32 %1510, 0
  br i1 %1511, label %1512, label %1513

1512:                                             ; preds = %1509
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1498) #17
  br label %1513

1513:                                             ; preds = %1496, %1509, %1512
  %1514 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3359", %"class.crdtp::detail::PtrMaybe.3359"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %1515 = load %"class.blink::protocol::Network::Response"*, %"class.blink::protocol::Network::Response"** %1514, align 8
  store %"class.blink::protocol::Network::Response"* null, %"class.blink::protocol::Network::Response"** %1514, align 8
  %1516 = icmp eq %"class.blink::protocol::Network::Response"* %1515, null
  br i1 %1516, label %1522, label %1517

1517:                                             ; preds = %1513
  %1518 = bitcast %"class.blink::protocol::Network::Response"* %1515 to void (%"class.blink::protocol::Network::Response"*)***
  %1519 = load void (%"class.blink::protocol::Network::Response"*)**, void (%"class.blink::protocol::Network::Response"*)*** %1518, align 8
  %1520 = getelementptr inbounds void (%"class.blink::protocol::Network::Response"*)*, void (%"class.blink::protocol::Network::Response"*)** %1519, i64 2
  %1521 = load void (%"class.blink::protocol::Network::Response"*)*, void (%"class.blink::protocol::Network::Response"*)** %1520, align 8
  call void %1521(%"class.blink::protocol::Network::Response"* nonnull %1515) #17
  br label %1522

1522:                                             ; preds = %1513, %1517
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1440) #17
  %1523 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 4
  %1524 = load i8, i8* %1523, align 1
  %1525 = icmp eq i8 %1524, 0
  br i1 %1525, label %1526, label %1528

1526:                                             ; preds = %1522
  %1527 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %1428, align 8
  call void @_ZN5blink8protocol7Network8Frontend5flushEv(%"class.blink::protocol::Network::Frontend"* %1527) #17
  br label %1528

1528:                                             ; preds = %1526, %1522
  %1529 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 7, i32 0
  %1530 = getelementptr inbounds %"class.blink::MemberBase.1194", %"class.blink::MemberBase.1194"* %1529, i64 0, i32 0
  %1531 = load %"class.blink::XHRReplayData"*, %"class.blink::XHRReplayData"** %1530, align 8
  %1532 = icmp eq %"class.blink::XHRReplayData"* %1531, null
  br i1 %1532, label %1536, label %1533

1533:                                             ; preds = %1528
  %1534 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %42, align 8
  call void @_ZN5blink20NetworkResourcesData16SetXHRReplayDataERKN3WTF6StringEPNS_13XHRReplayDataE(%"class.blink::NetworkResourcesData"* %1534, %"class.WTF::String"* nonnull dereferenceable(8) %23, %"class.blink::XHRReplayData"* nonnull %1531) #17
  %1535 = bitcast %"class.blink::MemberBase.1194"* %1529 to i64*
  store atomic i64 0, i64* %1535 monotonic, align 8
  br label %1536

1536:                                             ; preds = %1528, %1533
  store i8 0, i8* %105, align 4
  %1537 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1336, align 8
  %1538 = icmp eq %"class.WTF::StringImpl"* %1537, null
  br i1 %1538, label %1552, label %1539

1539:                                             ; preds = %1536
  %1540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1541 = load atomic i32, i32* %1540 monotonic, align 4
  %1542 = and i32 %1541, 2
  %1543 = icmp eq i32 %1542, 0
  %1544 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1537, i64 0, i32 0
  %1545 = load i32, i32* %1544, align 4
  br i1 %1543, label %1546, label %1548

1546:                                             ; preds = %1539
  %1547 = add i32 %1545, -1
  store i32 %1547, i32* %1544, align 4
  br label %1548

1548:                                             ; preds = %1546, %1539
  %1549 = phi i32 [ %1547, %1546 ], [ %1545, %1539 ]
  %1550 = icmp eq i32 %1549, 0
  br i1 %1550, label %1551, label %1552

1551:                                             ; preds = %1548
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1537) #17
  br label %1552

1552:                                             ; preds = %1536, %1548, %1551
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1335) #17
  br i1 %1447, label %1566, label %1553

1553:                                             ; preds = %1552
  %1554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1555 = load atomic i32, i32* %1554 monotonic, align 4
  %1556 = and i32 %1555, 2
  %1557 = icmp eq i32 %1556, 0
  %1558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1334, i64 0, i32 0
  %1559 = load i32, i32* %1558, align 4
  br i1 %1557, label %1560, label %1562

1560:                                             ; preds = %1553
  %1561 = add i32 %1559, -1
  store i32 %1561, i32* %1558, align 4
  br label %1562

1562:                                             ; preds = %1560, %1553
  %1563 = phi i32 [ %1561, %1560 ], [ %1559, %1553 ]
  %1564 = icmp eq i32 %1563, 0
  br i1 %1564, label %1565, label %1566

1565:                                             ; preds = %1562
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1334) #17
  br label %1566

1566:                                             ; preds = %1552, %1562, %1565
  %1567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %1568 = icmp eq %"class.WTF::StringImpl"* %1567, null
  br i1 %1568, label %1582, label %1569

1569:                                             ; preds = %1566
  %1570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1571 = load atomic i32, i32* %1570 monotonic, align 4
  %1572 = and i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1567, i64 0, i32 0
  %1575 = load i32, i32* %1574, align 4
  br i1 %1573, label %1576, label %1578

1576:                                             ; preds = %1569
  %1577 = add i32 %1575, -1
  store i32 %1577, i32* %1574, align 4
  br label %1578

1578:                                             ; preds = %1576, %1569
  %1579 = phi i32 [ %1577, %1576 ], [ %1575, %1569 ]
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1581, label %1582

1581:                                             ; preds = %1578
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1567) #17
  br label %1582

1582:                                             ; preds = %1566, %1578, %1581
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #17
  br i1 %76, label %1590, label %1583

1583:                                             ; preds = %1582
  %1584 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1584) #17
  %1585 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %1586 = load i32, i32* %1585, align 4
  %1587 = icmp eq i32 %1586, 0
  br i1 %1587, label %1588, label %1590

1588:                                             ; preds = %1583
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %75) #17
  %1589 = inttoptr i64 %72 to i8*
  call void @free(i8* %1589) #17
  br label %1590

1590:                                             ; preds = %1582, %1583, %1588
  %1591 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %1592 = icmp eq %"class.WTF::StringImpl"* %1591, null
  br i1 %1592, label %1606, label %1593

1593:                                             ; preds = %1590
  %1594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1595 = load atomic i32, i32* %1594 monotonic, align 4
  %1596 = and i32 %1595, 2
  %1597 = icmp eq i32 %1596, 0
  %1598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1591, i64 0, i32 0
  %1599 = load i32, i32* %1598, align 4
  br i1 %1597, label %1600, label %1602

1600:                                             ; preds = %1593
  %1601 = add i32 %1599, -1
  store i32 %1601, i32* %1598, align 4
  br label %1602

1602:                                             ; preds = %1600, %1593
  %1603 = phi i32 [ %1601, %1600 ], [ %1599, %1593 ]
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1606

1605:                                             ; preds = %1602
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1591) #17
  br label %1606

1606:                                             ; preds = %1590, %1602, %1605
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  %1607 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %1608 = icmp eq %"class.WTF::StringImpl"* %1607, null
  br i1 %1608, label %1622, label %1609

1609:                                             ; preds = %1606
  %1610 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1607, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1611 = load atomic i32, i32* %1610 monotonic, align 4
  %1612 = and i32 %1611, 2
  %1613 = icmp eq i32 %1612, 0
  %1614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1607, i64 0, i32 0
  %1615 = load i32, i32* %1614, align 4
  br i1 %1613, label %1616, label %1618

1616:                                             ; preds = %1609
  %1617 = add i32 %1615, -1
  store i32 %1617, i32* %1614, align 4
  br label %1618

1618:                                             ; preds = %1616, %1609
  %1619 = phi i32 [ %1617, %1616 ], [ %1615, %1609 ]
  %1620 = icmp eq i32 %1619, 0
  br i1 %1620, label %1621, label %1622

1621:                                             ; preds = %1618
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1607) #17
  br label %1622

1622:                                             ; preds = %1606, %1618, %1621
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  ret void
}

declare void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #4

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"*, i64) local_unnamed_addr #4

declare void @_ZN5blink8protocol7Network8Frontend15loadingFinishedERKN3WTF6StringEddN5crdtp6detail10ValueMaybeIbEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, double, %"class.crdtp::detail::ValueMaybe.3271"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_118BuildBlockedReasonENS_28ResourceRequestBlockedReasonE(i32) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %15 [
    i32 1, label %16
    i32 2, label %3
    i32 3, label %4
    i32 4, label %5
    i32 5, label %6
    i32 6, label %7
    i32 0, label %8
    i32 7, label %9
    i32 8, label %10
    i32 9, label %11
    i32 10, label %12
    i32 11, label %13
    i32 12, label %14
  ]

3:                                                ; preds = %1
  br label %16

4:                                                ; preds = %1
  br label %16

5:                                                ; preds = %1
  br label %16

6:                                                ; preds = %1
  br label %16

7:                                                ; preds = %1
  br label %16

8:                                                ; preds = %1
  br label %16

9:                                                ; preds = %1
  br label %16

10:                                               ; preds = %1
  br label %16

11:                                               ; preds = %1
  br label %16

12:                                               ; preds = %1
  br label %16

13:                                               ; preds = %1
  br label %16

14:                                               ; preds = %1
  br label %16

15:                                               ; preds = %1
  br label %16

16:                                               ; preds = %1, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3
  %17 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE, i64 0, i64 0), %15 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE, i64 0, i64 0), %14 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum15CorpNotSameSiteE, i64 0, i64 0), %13 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum49CorpNotSameOriginAfterDefaultedToSameOriginByCoepE, i64 0, i64 0), %12 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum17CorpNotSameOriginE, i64 0, i64 0), %11 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum43CoopSandboxedIframeCannotNavigateToCoopPageE, i64 0, i64 0), %10 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum32CoepFrameResourceNeedsCoepHeaderE, i64 0, i64 0), %9 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE, i64 0, i64 0), %8 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum11ContentTypeE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum17SubresourceFilterE, i64 0, i64 0), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum9InspectorE, i64 0, i64 0), %5 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum6OriginE, i64 0, i64 0), %4 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum12MixedContentE, i64 0, i64 0), %3 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum3CspE, i64 0, i64 0), %1 ]
  %18 = tail call i64 @strlen(i8* nonnull %17) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %17, i64 %18) #17
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  ret %"class.WTF::StringImpl"* %20
}

declare void @_ZN5blink8protocol7Network8Frontend13loadingFailedERKN3WTF6StringEdS6_S6_N5crdtp6detail10ValueMaybeIbEENS9_IS4_EENS8_8PtrMaybeINS1_15CorsErrorStatusEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3271"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::PtrMaybe.3272"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32) local_unnamed_addr #4

declare i32 @_ZN5blink20NetworkResourcesData15GetResourceTypeERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent25DidChangeResourcePriorityEPNS_14DocumentLoaderEmNS_13WebURLRequest8PriorityE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::DocumentLoader"*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %1, i64 %2) #17
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_120ResourcePriorityJSONENS_13WebURLRequest8PriorityE(i32 %3)
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %16 = add i64 %15, -9223372036854775807
  %17 = icmp ult i64 %16, 2
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = sitofp i64 %15 to double
  %20 = fdiv double %19, 1.000000e+06
  br label %24

21:                                               ; preds = %4
  %22 = icmp slt i64 %15, 0
  %23 = select i1 %22, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %24

24:                                               ; preds = %18, %21
  %25 = phi double [ %23, %21 ], [ %20, %18 ]
  call void @_ZN5blink8protocol7Network8Frontend23resourceChangedPriorityERKN3WTF6StringES6_d(%"class.blink::protocol::Network::Frontend"* %11, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, double %25) #17
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %24, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #17
  br label %57

57:                                               ; preds = %41, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend23resourceChangedPriorityERKN3WTF6StringES6_d(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_120ResourcePriorityJSONENS_13WebURLRequest8PriorityE(i32) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %7 [
    i32 0, label %8
    i32 1, label %3
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
  ]

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3
  %9 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum6MediumE, i64 0, i64 0), %7 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum8VeryHighE, i64 0, i64 0), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum4HighE, i64 0, i64 0), %5 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum6MediumE, i64 0, i64 0), %4 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum3LowE, i64 0, i64 0), %3 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network20ResourcePriorityEnum7VeryLowE, i64 0, i64 0), %1 ]
  %10 = tail call i64 @strlen(i8* nonnull %9) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %9, i64 %10) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  ret %"class.WTF::StringImpl"* %12
}

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"*) local_unnamed_addr #4

declare %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare dereferenceable(8) %class.scoped_refptr.3091* @_ZNK5blink15ResourceRequest8HttpBodyEv(%"class.blink::ResourceRequest"*) local_unnamed_addr #4

declare %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData15ResourceCreatedERKN3WTF6StringES4_RKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::EncodedFormData"*) local_unnamed_addr #4

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData15SetResourceTypeERKN3WTF6StringENS_18InspectorPageAgent12ResourceTypeE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Network::Initiator"* @_ZN5blink21InspectorNetworkAgent20BuildInitiatorObjectEPNS_8DocumentERKNS_18FetchInitiatorInfoEi(%"class.blink::Document"*, %"struct.blink::FetchInitiatorInfo"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %128, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %128, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %128, label %21

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 88) #18
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = getelementptr inbounds i8, i8* %22, i64 32
  %26 = bitcast i8* %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds i8, i8* %22, i64 40
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds i8, i8* %22, i64 48
  %29 = bitcast i8* %28 to double*
  store double 0.000000e+00, double* %29, align 8
  %30 = getelementptr inbounds i8, i8* %22, i64 56
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds i8, i8* %22, i64 64
  %32 = bitcast i8* %31 to double*
  store double 0.000000e+00, double* %32, align 8
  %33 = getelementptr inbounds i8, i8* %22, i64 72
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds i8, i8* %22, i64 80
  %35 = bitcast i8* %34 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 17, i1 false) #17
  %36 = bitcast i8* %22 to %"class.blink::protocol::Network::Initiator"*
  %37 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %38 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ScriptE, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %21
  %41 = tail call i64 @strlen(i8* nonnull %38) #19
  br label %42

42:                                               ; preds = %21, %40
  %43 = phi i64 [ %41, %40 ], [ 0, %21 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %38, i64 %43) #17
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #17
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !4

61:                                               ; preds = %52
  call void @llvm.trap() #17
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast i8* %24 to i64*
  %67 = bitcast i8* %24 to %"class.WTF::StringImpl"**
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #17
  br label %99

99:                                               ; preds = %98, %95, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #17
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !4

116:                                              ; preds = %107
  call void @llvm.trap() #17
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %99, %102, %117
  %120 = getelementptr inbounds i8, i8* %22, i64 24
  %121 = bitcast i8* %120 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %121, %"class.WTF::StringImpl"* %100) #17
  %122 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 1, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = sitofp i32 %123 to double
  store double %124, double* %29, align 8
  store i8 1, i8* %27, align 8
  %125 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 1, i32 1, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = sitofp i32 %126 to double
  store double %127, double* %32, align 8
  store i8 1, i8* %30, align 8
  br label %543

128:                                              ; preds = %13, %3, %17
  %129 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names4kCSSE, align 8
  %130 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %129, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %131, %133
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names6kUacssE, align 8
  %137 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %131, %138
  br i1 %139, label %140, label %249

140:                                              ; preds = %128, %135
  %141 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 4, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %330, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %330, label %148

148:                                              ; preds = %144
  %149 = tail call i8* @_Znwm(i64 88) #18
  %150 = bitcast i8* %149 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds i8, i8* %149, i64 8
  %152 = getelementptr inbounds i8, i8* %149, i64 32
  %153 = bitcast i8* %152 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %153, align 8
  %154 = getelementptr inbounds i8, i8* %149, i64 40
  store i8 0, i8* %154, align 8
  %155 = getelementptr inbounds i8, i8* %149, i64 48
  %156 = bitcast i8* %155 to double*
  store double 0.000000e+00, double* %156, align 8
  %157 = getelementptr inbounds i8, i8* %149, i64 56
  store i8 0, i8* %157, align 8
  %158 = getelementptr inbounds i8, i8* %149, i64 64
  %159 = bitcast i8* %158 to double*
  store double 0.000000e+00, double* %159, align 8
  %160 = getelementptr inbounds i8, i8* %149, i64 72
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds i8, i8* %149, i64 80
  %162 = bitcast i8* %161 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %162, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 17, i1 false) #17
  %163 = bitcast i8* %149 to %"class.blink::protocol::Network::Initiator"*
  %164 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #17
  %165 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ParserE, align 8
  %166 = icmp eq i8* %165, null
  br i1 %166, label %169, label %167

167:                                              ; preds = %148
  %168 = tail call i64 @strlen(i8* nonnull %165) #19
  br label %169

169:                                              ; preds = %148, %167
  %170 = phi i64 [ %168, %167 ], [ 0, %148 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %165, i64 %170) #17
  %171 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #17
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !4

188:                                              ; preds = %179
  call void @llvm.trap() #17
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %189, %174, %169
  %192 = ptrtoint %"class.WTF::StringImpl"* %172 to i64
  %193 = bitcast i8* %151 to i64*
  %194 = bitcast i8* %151 to %"class.WTF::StringImpl"**
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  store i64 %192, i64* %193, align 8
  %196 = icmp eq %"class.WTF::StringImpl"* %195, null
  br i1 %196, label %210, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load atomic i32, i32* %198 monotonic, align 4
  %200 = and i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %195, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  br i1 %201, label %204, label %206

204:                                              ; preds = %197
  %205 = add i32 %203, -1
  store i32 %205, i32* %202, align 4
  br label %206

206:                                              ; preds = %204, %197
  %207 = phi i32 [ %205, %204 ], [ %203, %197 ]
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %195) #17
  br label %210

210:                                              ; preds = %191, %206, %209
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #17
  br label %226

226:                                              ; preds = %225, %222, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #17
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %246, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #17
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !4

243:                                              ; preds = %234
  call void @llvm.trap() #17
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %226, %229, %244
  %247 = getelementptr inbounds i8, i8* %149, i64 24
  %248 = bitcast i8* %247 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %248, %"class.WTF::StringImpl"* %227) #17
  br label %543

249:                                              ; preds = %135
  %250 = icmp eq %"class.blink::Document"* %0, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %249
  %252 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* nonnull %0) #17
  br label %253

253:                                              ; preds = %249, %251
  %254 = phi %"class.blink::ExecutionContext"* [ %252, %251 ], [ null, %249 ]
  %255 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %254) #17
  %256 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEi(%"class.blink::SourceLocation"* %255, i32 %2) #17
  %257 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %256 to i64
  %258 = icmp eq %"class.blink::SourceLocation"* %255, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %253
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %255) #17
  %260 = bitcast %"class.blink::SourceLocation"* %255 to i8*
  tail call void @free(i8* %260) #17
  br label %261

261:                                              ; preds = %253, %259
  %262 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %256, null
  br i1 %262, label %330, label %263

263:                                              ; preds = %261
  %264 = tail call i8* @_Znwm(i64 88) #18
  %265 = bitcast i8* %264 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds i8, i8* %264, i64 8
  %267 = getelementptr inbounds i8, i8* %264, i64 32
  %268 = bitcast i8* %267 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %268, align 8
  %269 = getelementptr inbounds i8, i8* %264, i64 40
  store i8 0, i8* %269, align 8
  %270 = getelementptr inbounds i8, i8* %264, i64 48
  %271 = bitcast i8* %270 to double*
  store double 0.000000e+00, double* %271, align 8
  %272 = getelementptr inbounds i8, i8* %264, i64 56
  store i8 0, i8* %272, align 8
  %273 = getelementptr inbounds i8, i8* %264, i64 64
  %274 = bitcast i8* %273 to double*
  store double 0.000000e+00, double* %274, align 8
  %275 = getelementptr inbounds i8, i8* %264, i64 72
  store i8 0, i8* %275, align 8
  %276 = getelementptr inbounds i8, i8* %264, i64 80
  %277 = bitcast i8* %276 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %277, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 17, i1 false) #17
  %278 = bitcast i8* %264 to %"class.blink::protocol::Network::Initiator"*
  %279 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #17
  %280 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ScriptE, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %284, label %282

282:                                              ; preds = %263
  %283 = tail call i64 @strlen(i8* nonnull %280) #19
  br label %284

284:                                              ; preds = %263, %282
  %285 = phi i64 [ %283, %282 ], [ 0, %263 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %280, i64 %285) #17
  %286 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  %288 = icmp eq %"class.WTF::StringImpl"* %287, null
  br i1 %288, label %289, label %292

289:                                              ; preds = %284
  %290 = ptrtoint %"class.WTF::StringImpl"* %287 to i64
  %291 = bitcast i8* %266 to i64*
  store i64 %290, i64* %291, align 8
  br label %327

292:                                              ; preds = %284
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %309

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %287, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = zext i32 %299 to i33
  %301 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %300, i33 1) #17
  %302 = extractvalue { i33, i1 } %301, 1
  %303 = extractvalue { i33, i1 } %301, 0
  %304 = icmp slt i33 %303, 0
  %305 = or i1 %302, %304
  br i1 %305, label %306, label %307, !prof !4

306:                                              ; preds = %297
  call void @llvm.trap() #17
  unreachable

307:                                              ; preds = %297
  %308 = trunc i33 %303 to i32
  store i32 %308, i32* %298, align 4
  br label %309

309:                                              ; preds = %292, %307
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %286, align 8
  %311 = ptrtoint %"class.WTF::StringImpl"* %287 to i64
  %312 = bitcast i8* %266 to i64*
  store i64 %311, i64* %312, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #17
  br label %327

327:                                              ; preds = %289, %326, %323, %309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #17
  %328 = getelementptr inbounds i8, i8* %264, i64 16
  %329 = bitcast i8* %328 to i64*
  store i64 %257, i64* %329, align 8
  br label %543

330:                                              ; preds = %261, %140, %144
  %331 = icmp eq %"class.blink::Document"* %0, null
  br i1 %331, label %478, label %332

332:                                              ; preds = %330, %339
  %333 = phi %"class.blink::Document"* [ %342, %339 ], [ %0, %330 ]
  %334 = tail call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* nonnull %333) #17
  %335 = icmp eq %"class.blink::ScriptableDocumentParser"* %334, null
  br i1 %335, label %336, label %344

336:                                              ; preds = %332
  %337 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %333) #17
  %338 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %337, null
  br i1 %338, label %478, label %339

339:                                              ; preds = %336
  %340 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %333) #17
  %341 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %340, i64 0, i32 0, i32 0, i32 0, i32 0
  %342 = tail call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %341) #17
  %343 = icmp eq %"class.blink::Document"* %342, null
  br i1 %343, label %478, label %332

344:                                              ; preds = %332
  %345 = tail call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* nonnull %333) #17
  %346 = icmp eq %"class.blink::ScriptableDocumentParser"* %345, null
  br i1 %346, label %478, label %347

347:                                              ; preds = %344
  %348 = tail call i8* @_Znwm(i64 88) #18
  %349 = bitcast i8* %348 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %349, align 8
  %350 = getelementptr inbounds i8, i8* %348, i64 8
  %351 = getelementptr inbounds i8, i8* %348, i64 32
  %352 = bitcast i8* %351 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %352, align 8
  %353 = getelementptr inbounds i8, i8* %348, i64 40
  store i8 0, i8* %353, align 8
  %354 = getelementptr inbounds i8, i8* %348, i64 48
  %355 = bitcast i8* %354 to double*
  store double 0.000000e+00, double* %355, align 8
  %356 = getelementptr inbounds i8, i8* %348, i64 56
  store i8 0, i8* %356, align 8
  %357 = getelementptr inbounds i8, i8* %348, i64 64
  %358 = bitcast i8* %357 to double*
  store double 0.000000e+00, double* %358, align 8
  %359 = getelementptr inbounds i8, i8* %348, i64 72
  store i8 0, i8* %359, align 8
  %360 = getelementptr inbounds i8, i8* %348, i64 80
  %361 = bitcast i8* %360 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %361, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %350, i8 0, i64 17, i1 false) #17
  %362 = bitcast i8* %348 to %"class.blink::protocol::Network::Initiator"*
  %363 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #17
  %364 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ParserE, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %368, label %366

366:                                              ; preds = %347
  %367 = tail call i64 @strlen(i8* nonnull %364) #19
  br label %368

368:                                              ; preds = %347, %366
  %369 = phi i64 [ %367, %366 ], [ 0, %347 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %364, i64 %369) #17
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %390, label %373

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %390

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = zext i32 %380 to i33
  %382 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %381, i33 1) #17
  %383 = extractvalue { i33, i1 } %382, 1
  %384 = extractvalue { i33, i1 } %382, 0
  %385 = icmp slt i33 %384, 0
  %386 = or i1 %383, %385
  br i1 %386, label %387, label %388, !prof !4

387:                                              ; preds = %378
  call void @llvm.trap() #17
  unreachable

388:                                              ; preds = %378
  %389 = trunc i33 %384 to i32
  store i32 %389, i32* %379, align 4
  br label %390

390:                                              ; preds = %388, %373, %368
  %391 = ptrtoint %"class.WTF::StringImpl"* %371 to i64
  %392 = bitcast i8* %350 to i64*
  %393 = bitcast i8* %350 to %"class.WTF::StringImpl"**
  %394 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %393, align 8
  store i64 %391, i64* %392, align 8
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %409, label %396

396:                                              ; preds = %390
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = load atomic i32, i32* %397 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %396
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %396
  %406 = phi i32 [ %404, %403 ], [ %402, %396 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #17
  br label %409

409:                                              ; preds = %390, %405, %408
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %425, label %412

412:                                              ; preds = %409
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  br i1 %416, label %419, label %421

419:                                              ; preds = %412
  %420 = add i32 %418, -1
  store i32 %420, i32* %417, align 4
  br label %421

421:                                              ; preds = %419, %412
  %422 = phi i32 [ %420, %419 ], [ %418, %412 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #17
  br label %425

425:                                              ; preds = %424, %421, %409
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #17
  %426 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %426) #17
  %427 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %333, i64 0, i32 19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %426, i8 -86, i64 112, i1 false) #17, !alias.scope !14
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %427) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %8) #17
  %428 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %448, label %431

431:                                              ; preds = %425
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %448

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i33
  %440 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %439, i33 1) #17
  %441 = extractvalue { i33, i1 } %440, 1
  %442 = extractvalue { i33, i1 } %440, 0
  %443 = icmp slt i33 %442, 0
  %444 = or i1 %441, %443
  br i1 %444, label %445, label %446, !prof !4

445:                                              ; preds = %436
  call void @llvm.trap() #17
  unreachable

446:                                              ; preds = %436
  %447 = trunc i33 %442 to i32
  store i32 %447, i32* %437, align 4
  br label %448

448:                                              ; preds = %425, %431, %446
  %449 = getelementptr inbounds i8, i8* %348, i64 24
  %450 = bitcast i8* %449 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %450, %"class.WTF::StringImpl"* %429) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %426) #17
  %451 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 1, i32 0, i32 0
  %452 = load i32, i32* %451, align 4
  %453 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %1, i64 0, i32 1, i32 1, i32 0
  %454 = load i32, i32* %453, align 4
  %455 = and i32 %452, %454
  %456 = icmp eq i32 %455, -1
  br i1 %456, label %460, label %457

457:                                              ; preds = %448
  %458 = sitofp i32 %452 to double
  store double %458, double* %355, align 8
  store i8 1, i8* %353, align 8
  %459 = sitofp i32 %454 to double
  store double %459, double* %358, align 8
  store i8 1, i8* %356, align 8
  br label %543

460:                                              ; preds = %448
  %461 = call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* nonnull %333) #17
  %462 = bitcast %"class.blink::ScriptableDocumentParser"* %461 to i64 (%"class.blink::ScriptableDocumentParser"*)***
  %463 = load i64 (%"class.blink::ScriptableDocumentParser"*)**, i64 (%"class.blink::ScriptableDocumentParser"*)*** %462, align 8
  %464 = getelementptr inbounds i64 (%"class.blink::ScriptableDocumentParser"*)*, i64 (%"class.blink::ScriptableDocumentParser"*)** %463, i64 27
  %465 = load i64 (%"class.blink::ScriptableDocumentParser"*)*, i64 (%"class.blink::ScriptableDocumentParser"*)** %464, align 8
  %466 = call i64 %465(%"class.blink::ScriptableDocumentParser"* %461) #17
  %467 = trunc i64 %466 to i32
  %468 = sitofp i32 %467 to double
  store double %468, double* %355, align 8
  store i8 1, i8* %353, align 8
  %469 = call %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"* nonnull %333) #17
  %470 = bitcast %"class.blink::ScriptableDocumentParser"* %469 to i64 (%"class.blink::ScriptableDocumentParser"*)***
  %471 = load i64 (%"class.blink::ScriptableDocumentParser"*)**, i64 (%"class.blink::ScriptableDocumentParser"*)*** %470, align 8
  %472 = getelementptr inbounds i64 (%"class.blink::ScriptableDocumentParser"*)*, i64 (%"class.blink::ScriptableDocumentParser"*)** %471, i64 27
  %473 = load i64 (%"class.blink::ScriptableDocumentParser"*)*, i64 (%"class.blink::ScriptableDocumentParser"*)** %472, align 8
  %474 = call i64 %473(%"class.blink::ScriptableDocumentParser"* %469) #17
  %475 = lshr i64 %474, 32
  %476 = trunc i64 %475 to i32
  %477 = sitofp i32 %476 to double
  store double %477, double* %358, align 8
  store i8 1, i8* %356, align 8
  br label %543

478:                                              ; preds = %336, %339, %330, %344
  %479 = tail call i8* @_Znwm(i64 88) #18
  %480 = bitcast i8* %479 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %480, align 8
  %481 = getelementptr inbounds i8, i8* %479, i64 8
  %482 = getelementptr inbounds i8, i8* %479, i64 32
  %483 = bitcast i8* %482 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %483, align 8
  %484 = getelementptr inbounds i8, i8* %479, i64 40
  store i8 0, i8* %484, align 8
  %485 = getelementptr inbounds i8, i8* %479, i64 48
  %486 = bitcast i8* %485 to double*
  store double 0.000000e+00, double* %486, align 8
  %487 = getelementptr inbounds i8, i8* %479, i64 56
  store i8 0, i8* %487, align 8
  %488 = getelementptr inbounds i8, i8* %479, i64 64
  %489 = bitcast i8* %488 to double*
  store double 0.000000e+00, double* %489, align 8
  %490 = getelementptr inbounds i8, i8* %479, i64 72
  store i8 0, i8* %490, align 8
  %491 = getelementptr inbounds i8, i8* %479, i64 80
  %492 = bitcast i8* %491 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %492, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %481, i8 0, i64 17, i1 false) #17
  %493 = bitcast i8* %479 to %"class.blink::protocol::Network::Initiator"*
  %494 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %494) #17
  %495 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum5OtherE, align 8
  %496 = icmp eq i8* %495, null
  br i1 %496, label %499, label %497

497:                                              ; preds = %478
  %498 = tail call i64 @strlen(i8* nonnull %495) #19
  br label %499

499:                                              ; preds = %478, %497
  %500 = phi i64 [ %498, %497 ], [ 0, %478 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %495, i64 %500) #17
  %501 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %503 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %503, label %504, label %507

504:                                              ; preds = %499
  %505 = ptrtoint %"class.WTF::StringImpl"* %502 to i64
  %506 = bitcast i8* %481 to i64*
  store i64 %505, i64* %506, align 8
  br label %542

507:                                              ; preds = %499
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = load atomic i32, i32* %508 monotonic, align 4
  %510 = and i32 %509, 2
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %524

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %514 = load i32, i32* %513, align 4
  %515 = zext i32 %514 to i33
  %516 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %515, i33 1) #17
  %517 = extractvalue { i33, i1 } %516, 1
  %518 = extractvalue { i33, i1 } %516, 0
  %519 = icmp slt i33 %518, 0
  %520 = or i1 %517, %519
  br i1 %520, label %521, label %522, !prof !4

521:                                              ; preds = %512
  call void @llvm.trap() #17
  unreachable

522:                                              ; preds = %512
  %523 = trunc i33 %518 to i32
  store i32 %523, i32* %513, align 4
  br label %524

524:                                              ; preds = %507, %522
  %525 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %501, align 8
  %526 = ptrtoint %"class.WTF::StringImpl"* %502 to i64
  %527 = bitcast i8* %481 to i64*
  store i64 %526, i64* %527, align 8
  %528 = icmp eq %"class.WTF::StringImpl"* %525, null
  br i1 %528, label %542, label %529

529:                                              ; preds = %524
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %531 = load atomic i32, i32* %530 monotonic, align 4
  %532 = and i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %525, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  br i1 %533, label %536, label %538

536:                                              ; preds = %529
  %537 = add i32 %535, -1
  store i32 %537, i32* %534, align 4
  br label %538

538:                                              ; preds = %536, %529
  %539 = phi i32 [ %537, %536 ], [ %535, %529 ]
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %542

541:                                              ; preds = %538
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %525) #17
  br label %542

542:                                              ; preds = %504, %541, %538, %524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %494) #17
  br label %543

543:                                              ; preds = %327, %542, %246, %460, %457, %119
  %544 = phi %"class.blink::protocol::Network::Initiator"* [ %493, %542 ], [ %362, %457 ], [ %362, %460 ], [ %163, %246 ], [ %36, %119 ], [ %278, %327 ]
  ret %"class.blink::protocol::Network::Initiator"* %544
}

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #4

declare i32 @_ZN5blink19MixedContentChecker23ContextTypeForInspectorEPNS_10LocalFrameERKNS_15ResourceRequestE(%"class.blink::LocalFrame"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_117GetReferrerPolicyEN7network5mojom14ReferrerPolicyE(i32) unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %66 [
    i32 0, label %3
    i32 1, label %10
    i32 2, label %17
    i32 3, label %24
    i32 4, label %31
    i32 5, label %38
    i32 7, label %45
    i32 8, label %52
    i32 6, label %59
  ]

3:                                                ; preds = %1
  %4 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum9UnsafeUrlE, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @strlen(i8* nonnull %4) #19
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %4, i64 %9) #17
  br label %73

10:                                               ; preds = %1
  %11 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum27StrictOriginWhenCrossOriginE, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = tail call i64 @strlen(i8* nonnull %11) #19
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi i64 [ %14, %13 ], [ 0, %10 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %11, i64 %16) #17
  br label %73

17:                                               ; preds = %1
  %18 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum23NoReferrerWhenDowngradeE, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = tail call i64 @strlen(i8* nonnull %18) #19
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %21, %20 ], [ 0, %17 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %18, i64 %23) #17
  br label %73

24:                                               ; preds = %1
  %25 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum10NoReferrerE, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  %28 = tail call i64 @strlen(i8* nonnull %25) #19
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i64 [ %28, %27 ], [ 0, %24 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %25, i64 %30) #17
  br label %73

31:                                               ; preds = %1
  %32 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum6OriginE, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = tail call i64 @strlen(i8* nonnull %32) #19
  br label %36

36:                                               ; preds = %31, %34
  %37 = phi i64 [ %35, %34 ], [ 0, %31 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %32, i64 %37) #17
  br label %73

38:                                               ; preds = %1
  %39 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum21OriginWhenCrossOriginE, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = tail call i64 @strlen(i8* nonnull %39) #19
  br label %43

43:                                               ; preds = %38, %41
  %44 = phi i64 [ %42, %41 ], [ 0, %38 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %39, i64 %44) #17
  br label %73

45:                                               ; preds = %1
  %46 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum10SameOriginE, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = tail call i64 @strlen(i8* nonnull %46) #19
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i64 [ %49, %48 ], [ 0, %45 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %46, i64 %51) #17
  br label %73

52:                                               ; preds = %1
  %53 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum12StrictOriginE, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = tail call i64 @strlen(i8* nonnull %53) #19
  br label %57

57:                                               ; preds = %52, %55
  %58 = phi i64 [ %56, %55 ], [ 0, %52 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %53, i64 %58) #17
  br label %73

59:                                               ; preds = %1
  %60 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum27StrictOriginWhenCrossOriginE, align 8
  %61 = icmp eq i8* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = tail call i64 @strlen(i8* nonnull %60) #19
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i64 [ %63, %62 ], [ 0, %59 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %60, i64 %65) #17
  br label %73

66:                                               ; preds = %1
  %67 = load i8*, i8** @_ZN5blink8protocol7Network7Request18ReferrerPolicyEnum23NoReferrerWhenDowngradeE, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = tail call i64 @strlen(i8* nonnull %67) #19
  br label %71

71:                                               ; preds = %66, %69
  %72 = phi i64 [ %70, %69 ], [ 0, %66 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %67, i64 %72) #17
  br label %73

73:                                               ; preds = %71, %64, %57, %50, %43, %36, %29, %22, %15, %8
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  ret %"class.WTF::StringImpl"* %75
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14DocumentLoader3UrlEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #17
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %10
  tail call void @llvm.trap() #17
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #17
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend17requestWillBeSentERKN3WTF6StringES6_S6_NSt3__110unique_ptrINS1_7RequestENS7_14default_deleteIS9_EEEEddNS8_INS1_9InitiatorENSA_ISD_EEEEN5crdtp6detail8PtrMaybeINS1_8ResponseEEENSH_10ValueMaybeIS4_EESM_NSL_IbEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Request"*, double, double, %"class.blink::protocol::Network::Initiator"*, %"class.crdtp::detail::PtrMaybe.3359"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe.3271"*) local_unnamed_addr #4

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #4

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::Network::Response"* @_ZN5blinkL30BuildObjectForResourceResponseERKNS_16ResourceResponseEPKNS_8ResourceEPb(%"class.blink::ResourceResponse"* dereferenceable(1072), %"class.blink::Resource"*, i8*) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::StringAppend.3806", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %class.scoped_refptr.1271, align 8
  %11 = alloca %class.scoped_refptr.1271, align 8
  %12 = alloca %class.scoped_refptr.1271, align 8
  %13 = alloca %class.scoped_refptr.1271, align 8
  %14 = alloca %"class.blink::HTTPHeaderMap", align 8
  %15 = alloca %class.scoped_refptr.1271, align 8
  %16 = alloca %class.scoped_refptr.1271, align 8
  %17 = alloca %class.scoped_refptr.1271, align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.blink::KURL", align 8
  %25 = alloca %"class.base::Time", align 8
  %26 = alloca %class.scoped_refptr.1271, align 8
  %27 = alloca %class.scoped_refptr.1271, align 8
  %28 = alloca %class.scoped_refptr.1271, align 8
  %29 = alloca %class.scoped_refptr.1271, align 8
  %30 = alloca %class.scoped_refptr.1271, align 8
  %31 = alloca %class.scoped_refptr.1271, align 8
  %32 = alloca %class.scoped_refptr.1271, align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::String", align 8
  %38 = alloca %"class.std::__1::unique_ptr.3389", align 8
  %39 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 12
  %40 = load i8, i8* %39, align 2, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %2367

42:                                               ; preds = %3
  %43 = bitcast %class.scoped_refptr.1271* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #17
  %44 = tail call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %45 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %10, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %44, %"struct.blink::ResourceLoadInfo"** %45, align 8
  %46 = icmp eq %"struct.blink::ResourceLoadInfo"* %44, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %42
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  br label %85

48:                                               ; preds = %42
  %49 = bitcast %class.scoped_refptr.1271* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #17
  %50 = tail call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %51 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %11, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %50, %"struct.blink::ResourceLoadInfo"** %51, align 8
  %52 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %50, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #17
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #17
  br i1 %54, label %85, label %55

55:                                               ; preds = %48
  %56 = bitcast %class.scoped_refptr.1271* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %58 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %12, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %57, %"struct.blink::ResourceLoadInfo"** %58, align 8
  %59 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %57, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  %61 = bitcast %class.scoped_refptr.1271* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #17
  %62 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %63 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %13, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %62, %"struct.blink::ResourceLoadInfo"** %63, align 8
  %64 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %62, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #17
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !4

81:                                               ; preds = %72
  call void @llvm.trap() #17
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %55, %67, %82
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #17
  br label %108

85:                                               ; preds = %48, %47
  %86 = call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %0) #17
  %87 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse14HttpStatusTextEv(%"class.blink::ResourceResponse"* %0) #17
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #17
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !4

105:                                              ; preds = %96
  call void @llvm.trap() #17
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %85, %84
  %109 = phi %"class.WTF::StringImpl"* [ %65, %84 ], [ null, %85 ], [ %89, %91 ], [ %89, %106 ]
  %110 = phi i32 [ %60, %84 ], [ %86, %85 ], [ %86, %91 ], [ %86, %106 ]
  %111 = ptrtoint %"class.WTF::StringImpl"* %109 to i64
  %112 = bitcast %"class.blink::HTTPHeaderMap"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #17
  %113 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %14, i64 0, i32 0, i32 0, i32 2
  %114 = bitcast %"class.blink::HTTPHeaderMap"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* nonnull %14) #17
  %115 = bitcast %class.scoped_refptr.1271* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #17
  %116 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %117 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %15, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %116, %"struct.blink::ResourceLoadInfo"** %117, align 8
  %118 = icmp eq %"struct.blink::ResourceLoadInfo"* %116, null
  br i1 %118, label %119, label %120

119:                                              ; preds = %108
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #17
  br label %134

120:                                              ; preds = %108
  %121 = bitcast %class.scoped_refptr.1271* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #17
  %122 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %123 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %16, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %122, %"struct.blink::ResourceLoadInfo"** %123, align 8
  %124 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %122, i64 0, i32 4, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #17
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #17
  br i1 %126, label %134, label %127

127:                                              ; preds = %120
  %128 = bitcast %class.scoped_refptr.1271* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #17
  %129 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %130 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %17, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %129, %"struct.blink::ResourceLoadInfo"** %130, align 8
  %131 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %14, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %129, i64 0, i32 4, i32 0, i32 0
  %133 = call dereferenceable(24) %"class.WTF::HashTable.1198"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.1198"* nonnull %131, %"class.WTF::HashTable.1198"* dereferenceable(24) %132) #17
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #17
  br label %139

134:                                              ; preds = %120, %119
  %135 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %0) #17
  %136 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %14, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %135, i64 0, i32 0, i32 0
  %138 = call dereferenceable(24) %"class.WTF::HashTable.1198"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.1198"* nonnull %136, %"class.WTF::HashTable.1198"* dereferenceable(24) %137) #17
  br label %139

139:                                              ; preds = %134, %127
  %140 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 58
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #17
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %143, align 8
  %144 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7UnknownE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7UnknownE, i64 0, i64 0), i64 %144) #17
  %145 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 40
  %146 = load i32, i32* %145, align 8
  switch i32 %146, label %339 [
    i32 0, label %147
    i32 1, label %185
    i32 2, label %223
    i32 3, label %261
    i32 4, label %299
  ]

147:                                              ; preds = %139
  %148 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #17
  %149 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7UnknownE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7UnknownE, i64 0, i64 0), i64 %149) #17
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %151 = bitcast %"class.WTF::String"* %19 to i64*
  %152 = load i64, i64* %151, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  %153 = bitcast %"class.WTF::String"* %18 to i64*
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %152, i64* %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %337, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #17
  br label %169

169:                                              ; preds = %165, %168
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %337, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %337

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #17
  br label %337

185:                                              ; preds = %139
  %186 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #17
  %187 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7NeutralE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum7NeutralE, i64 0, i64 0), i64 %187) #17
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %189 = bitcast %"class.WTF::String"* %20 to i64*
  %190 = load i64, i64* %189, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %188, align 8
  %191 = bitcast %"class.WTF::String"* %18 to i64*
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %190, i64* %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %337, label %194

194:                                              ; preds = %185
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #17
  br label %207

207:                                              ; preds = %203, %206
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %337, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %337

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #17
  br label %337

223:                                              ; preds = %139
  %224 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #17
  %225 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum8InsecureE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum8InsecureE, i64 0, i64 0), i64 %225) #17
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %227 = bitcast %"class.WTF::String"* %21 to i64*
  %228 = load i64, i64* %227, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %226, align 8
  %229 = bitcast %"class.WTF::String"* %18 to i64*
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %228, i64* %229, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %337, label %232

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #17
  br label %245

245:                                              ; preds = %241, %244
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %337, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %337

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #17
  br label %337

261:                                              ; preds = %139
  %262 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #17
  %263 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum6SecureE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum6SecureE, i64 0, i64 0), i64 %263) #17
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %265 = bitcast %"class.WTF::String"* %22 to i64*
  %266 = load i64, i64* %265, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %264, align 8
  %267 = bitcast %"class.WTF::String"* %18 to i64*
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %266, i64* %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %337, label %270

270:                                              ; preds = %261
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #17
  br label %283

283:                                              ; preds = %279, %282
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %337, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %337

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #17
  br label %337

299:                                              ; preds = %139
  %300 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #17
  %301 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum14InsecureBrokenE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol8Security17SecurityStateEnum14InsecureBrokenE, i64 0, i64 0), i64 %301) #17
  %302 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %303 = bitcast %"class.WTF::String"* %23 to i64*
  %304 = load i64, i64* %303, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %302, align 8
  %305 = bitcast %"class.WTF::String"* %18 to i64*
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  store i64 %304, i64* %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %337, label %308

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #17
  br label %321

321:                                              ; preds = %317, %320
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %302, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %323, label %337, label %324

324:                                              ; preds = %321
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %324
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %324
  %334 = phi i32 [ %332, %331 ], [ %330, %324 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %322) #17
  br label %337

337:                                              ; preds = %336, %333, %321, %299, %298, %295, %283, %261, %260, %257, %245, %223, %222, %219, %207, %185, %184, %181, %169, %147
  %338 = phi i8* [ %148, %147 ], [ %148, %169 ], [ %148, %181 ], [ %148, %184 ], [ %186, %185 ], [ %186, %207 ], [ %186, %219 ], [ %186, %222 ], [ %224, %223 ], [ %224, %245 ], [ %224, %257 ], [ %224, %260 ], [ %262, %261 ], [ %262, %283 ], [ %262, %295 ], [ %262, %298 ], [ %300, %299 ], [ %300, %321 ], [ %300, %333 ], [ %300, %336 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %338) #17
  br label %339

339:                                              ; preds = %337, %139
  %340 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %0) #17
  %341 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %340, i64 0, i32 0, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = ptrtoint %"class.WTF::StringImpl"* %342 to i64
  %344 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %344, label %362, label %345

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %362

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = zext i32 %352 to i33
  %354 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %353, i33 1) #17
  %355 = extractvalue { i33, i1 } %354, 1
  %356 = extractvalue { i33, i1 } %354, 0
  %357 = icmp slt i33 %356, 0
  %358 = or i1 %355, %357
  br i1 %358, label %359, label %360, !prof !4

359:                                              ; preds = %350
  call void @llvm.trap() #17
  unreachable

360:                                              ; preds = %350
  %361 = trunc i33 %356 to i32
  store i32 %361, i32* %351, align 4
  br label %362

362:                                              ; preds = %339, %345, %360
  %363 = icmp eq %"class.blink::Resource"* %1, null
  br i1 %363, label %410, label %364

364:                                              ; preds = %362
  br i1 %344, label %372, label %365

365:                                              ; preds = %364
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 1
  %367 = load i32, i32* %366, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %372, label %369

369:                                              ; preds = %365
  %370 = call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %0) #17
  %371 = icmp eq i32 %370, 304
  br i1 %371, label %372, label %410

372:                                              ; preds = %364, %369, %365
  %373 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 29
  %374 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %373) #17
  %375 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %374, i64 0, i32 0, i32 0, i32 0
  %376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %375, align 8
  %377 = icmp eq %"class.WTF::StringImpl"* %376, null
  br i1 %377, label %395, label %378

378:                                              ; preds = %372
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load atomic i32, i32* %379 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %395

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %376, i64 0, i32 0
  %385 = load i32, i32* %384, align 4
  %386 = zext i32 %385 to i33
  %387 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %386, i33 1) #17
  %388 = extractvalue { i33, i1 } %387, 1
  %389 = extractvalue { i33, i1 } %387, 0
  %390 = icmp slt i33 %389, 0
  %391 = or i1 %388, %390
  br i1 %391, label %392, label %393, !prof !4

392:                                              ; preds = %383
  call void @llvm.trap() #17
  unreachable

393:                                              ; preds = %383
  %394 = trunc i33 %389 to i32
  store i32 %394, i32* %384, align 4
  br label %395

395:                                              ; preds = %393, %378, %372
  %396 = ptrtoint %"class.WTF::StringImpl"* %376 to i64
  br i1 %344, label %410, label %397

397:                                              ; preds = %395
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #17
  br label %410

410:                                              ; preds = %409, %406, %395, %362, %369
  %411 = phi i64 [ %343, %362 ], [ %343, %369 ], [ %396, %395 ], [ %396, %406 ], [ %396, %409 ]
  %412 = icmp eq i8* %2, null
  br i1 %412, label %428, label %413

413:                                              ; preds = %410
  %414 = icmp eq i32 %110, 0
  br i1 %414, label %415, label %425

415:                                              ; preds = %413
  %416 = icmp eq i64 %411, 0
  br i1 %416, label %422, label %417

417:                                              ; preds = %415
  %418 = inttoptr i64 %411 to %"class.WTF::StringImpl"*
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %418, i64 0, i32 1
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %415, %417
  %423 = load i32, i32* %113, align 4
  %424 = icmp eq i32 %423, 0
  br label %425

425:                                              ; preds = %413, %422, %417
  %426 = phi i1 [ false, %417 ], [ false, %413 ], [ %424, %422 ]
  %427 = zext i1 %426 to i8
  store i8 %427, i8* %2, align 1
  br label %428

428:                                              ; preds = %410, %425
  %429 = call i8* @_Znwm(i64 232) #18
  %430 = bitcast i8* %429 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network8ResponseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %430, align 8
  %431 = getelementptr inbounds i8, i8* %429, i64 8
  %432 = bitcast i8* %431 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %432, align 8
  %433 = getelementptr inbounds i8, i8* %429, i64 24
  %434 = getelementptr inbounds i8, i8* %429, i64 48
  %435 = getelementptr inbounds i8, i8* %429, i64 80
  %436 = bitcast i8* %435 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %436, align 8
  %437 = getelementptr inbounds i8, i8* %429, i64 104
  store i8 0, i8* %437, align 8
  %438 = getelementptr inbounds i8, i8* %429, i64 112
  %439 = bitcast i8* %438 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %439, align 8
  %440 = getelementptr inbounds i8, i8* %429, i64 120
  store i8 0, i8* %440, align 4
  %441 = getelementptr inbounds i8, i8* %429, i64 124
  %442 = getelementptr inbounds i8, i8* %429, i64 160
  %443 = bitcast i8* %442 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %443, align 8
  %444 = getelementptr inbounds i8, i8* %429, i64 168
  store i8 0, i8* %444, align 8
  %445 = getelementptr inbounds i8, i8* %429, i64 176
  %446 = bitcast i8* %445 to double*
  store double 0.000000e+00, double* %446, align 8
  %447 = getelementptr inbounds i8, i8* %429, i64 184
  store i8 0, i8* %447, align 8
  %448 = getelementptr inbounds i8, i8* %429, i64 192
  %449 = bitcast i8* %448 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %449, align 8
  %450 = getelementptr inbounds i8, i8* %429, i64 200
  store i8 0, i8* %450, align 8
  %451 = getelementptr inbounds i8, i8* %429, i64 208
  %452 = getelementptr inbounds i8, i8* %429, i64 16
  %453 = bitcast i8* %452 to i32*
  store i32 0, i32* %453, align 8
  %454 = getelementptr inbounds i8, i8* %429, i64 88
  store i8 0, i8* %454, align 8
  %455 = getelementptr inbounds i8, i8* %429, i64 96
  %456 = bitcast i8* %455 to double*
  store double 0.000000e+00, double* %456, align 8
  %457 = getelementptr inbounds i8, i8* %429, i64 136
  call void @llvm.memset.p0i8.i64(i8* align 8 %433, i8 0, i64 17, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %434, i8 0, i64 25, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 4 %441, i8 0, i64 10, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 17, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %451, i8 0, i64 24, i1 false) #17
  %458 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %458) #17
  %459 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %0) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %458, i8 -86, i64 112, i1 false) #17, !alias.scope !17
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %24, %"class.blink::KURL"* dereferenceable(112) %459) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %24) #17
  %460 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %24, i64 0, i32 4, i32 0, i32 0
  %461 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %460, align 8
  %462 = icmp eq %"class.WTF::StringImpl"* %461, null
  br i1 %462, label %480, label %463

463:                                              ; preds = %428
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %465 = load atomic i32, i32* %464 monotonic, align 4
  %466 = and i32 %465, 2
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %480

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %461, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  %471 = zext i32 %470 to i33
  %472 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %471, i33 1) #17
  %473 = extractvalue { i33, i1 } %472, 1
  %474 = extractvalue { i33, i1 } %472, 0
  %475 = icmp slt i33 %474, 0
  %476 = or i1 %473, %475
  br i1 %476, label %477, label %478, !prof !4

477:                                              ; preds = %468
  call void @llvm.trap() #17
  unreachable

478:                                              ; preds = %468
  %479 = trunc i33 %474 to i32
  store i32 %479, i32* %469, align 4
  br label %480

480:                                              ; preds = %478, %463, %428
  %481 = ptrtoint %"class.WTF::StringImpl"* %461 to i64
  %482 = bitcast i8* %431 to i64*
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %432, align 8
  store i64 %481, i64* %482, align 8
  %484 = icmp eq %"class.WTF::StringImpl"* %483, null
  br i1 %484, label %498, label %485

485:                                              ; preds = %480
  %486 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %487 = load atomic i32, i32* %486 monotonic, align 4
  %488 = and i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %483, i64 0, i32 0
  %491 = load i32, i32* %490, align 4
  br i1 %489, label %492, label %494

492:                                              ; preds = %485
  %493 = add i32 %491, -1
  store i32 %493, i32* %490, align 4
  br label %494

494:                                              ; preds = %492, %485
  %495 = phi i32 [ %493, %492 ], [ %491, %485 ]
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %494
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %483) #17
  br label %498

498:                                              ; preds = %480, %494, %497
  store i32 %110, i32* %453, align 8
  %499 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %499, label %517, label %500

500:                                              ; preds = %498
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = load atomic i32, i32* %501 monotonic, align 4
  %503 = and i32 %502, 2
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %517

505:                                              ; preds = %500
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %507 = load i32, i32* %506, align 4
  %508 = zext i32 %507 to i33
  %509 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %508, i33 1) #17
  %510 = extractvalue { i33, i1 } %509, 1
  %511 = extractvalue { i33, i1 } %509, 0
  %512 = icmp slt i33 %511, 0
  %513 = or i1 %510, %512
  br i1 %513, label %514, label %515, !prof !4

514:                                              ; preds = %505
  call void @llvm.trap() #17
  unreachable

515:                                              ; preds = %505
  %516 = trunc i33 %511 to i32
  store i32 %516, i32* %506, align 4
  br label %517

517:                                              ; preds = %515, %500, %498
  %518 = bitcast i8* %433 to i64*
  %519 = bitcast i8* %433 to %"class.WTF::StringImpl"**
  %520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %519, align 8
  store i64 %111, i64* %518, align 8
  %521 = icmp eq %"class.WTF::StringImpl"* %520, null
  br i1 %521, label %535, label %522

522:                                              ; preds = %517
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = and i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  br i1 %526, label %529, label %531

529:                                              ; preds = %522
  %530 = add i32 %528, -1
  store i32 %530, i32* %527, align 4
  br label %531

531:                                              ; preds = %529, %522
  %532 = phi i32 [ %530, %529 ], [ %528, %522 ]
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %535

534:                                              ; preds = %531
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #17
  br label %535

535:                                              ; preds = %517, %531, %534
  %536 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nonnull dereferenceable(24) %14)
  %537 = ptrtoint %"class.blink::protocol::Object"* %536 to i64
  %538 = getelementptr inbounds i8, i8* %429, i64 32
  %539 = bitcast i8* %538 to %"class.blink::protocol::Object"**
  %540 = load %"class.blink::protocol::Object"*, %"class.blink::protocol::Object"** %539, align 8
  %541 = bitcast i8* %538 to i64*
  store i64 %537, i64* %541, align 8
  %542 = icmp eq %"class.blink::protocol::Object"* %540, null
  br i1 %542, label %548, label %543

543:                                              ; preds = %535
  %544 = bitcast %"class.blink::protocol::Object"* %540 to void (%"class.blink::protocol::Object"*)***
  %545 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %544, align 8
  %546 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %545, i64 2
  %547 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %546, align 8
  call void %547(%"class.blink::protocol::Object"* nonnull %540) #17
  br label %548

548:                                              ; preds = %535, %543
  %549 = getelementptr inbounds i8, i8* %429, i64 56
  %550 = inttoptr i64 %411 to %"class.WTF::StringImpl"*
  %551 = icmp eq i64 %411, 0
  br i1 %551, label %569, label %552

552:                                              ; preds = %548
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %569

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = zext i32 %559 to i33
  %561 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %560, i33 1) #17
  %562 = extractvalue { i33, i1 } %561, 1
  %563 = extractvalue { i33, i1 } %561, 0
  %564 = icmp slt i33 %563, 0
  %565 = or i1 %562, %564
  br i1 %565, label %566, label %567, !prof !4

566:                                              ; preds = %557
  call void @llvm.trap() #17
  unreachable

567:                                              ; preds = %557
  %568 = trunc i33 %563 to i32
  store i32 %568, i32* %558, align 4
  br label %569

569:                                              ; preds = %567, %552, %548
  %570 = bitcast i8* %549 to i64*
  %571 = bitcast i8* %549 to %"class.WTF::StringImpl"**
  %572 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %571, align 8
  store i64 %411, i64* %570, align 8
  %573 = icmp eq %"class.WTF::StringImpl"* %572, null
  br i1 %573, label %587, label %574

574:                                              ; preds = %569
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = load atomic i32, i32* %575 monotonic, align 4
  %577 = and i32 %576, 2
  %578 = icmp eq i32 %577, 0
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %572, i64 0, i32 0
  %580 = load i32, i32* %579, align 4
  br i1 %578, label %581, label %583

581:                                              ; preds = %574
  %582 = add i32 %580, -1
  store i32 %582, i32* %579, align 4
  br label %583

583:                                              ; preds = %581, %574
  %584 = phi i32 [ %582, %581 ], [ %580, %574 ]
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %587

586:                                              ; preds = %583
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %572) #17
  br label %587

587:                                              ; preds = %569, %583, %586
  %588 = call zeroext i1 @_ZNK5blink16ResourceResponse16ConnectionReusedEv(%"class.blink::ResourceResponse"* %0) #17
  %589 = zext i1 %588 to i8
  store i8 %589, i8* %454, align 8
  %590 = call i32 @_ZNK5blink16ResourceResponse12ConnectionIDEv(%"class.blink::ResourceResponse"* %0) #17
  %591 = uitofp i32 %590 to double
  store double %591, double* %456, align 8
  %592 = sitofp i64 %141 to double
  %593 = bitcast i8* %457 to double*
  store double %592, double* %593, align 8
  %594 = getelementptr inbounds i8, i8* %429, i64 216
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %595, null
  br i1 %596, label %614, label %597

597:                                              ; preds = %587
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %614

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i33
  %606 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %605, i33 1) #17
  %607 = extractvalue { i33, i1 } %606, 1
  %608 = extractvalue { i33, i1 } %606, 0
  %609 = icmp slt i33 %608, 0
  %610 = or i1 %607, %609
  br i1 %610, label %611, label %612, !prof !4

611:                                              ; preds = %602
  call void @llvm.trap() #17
  unreachable

612:                                              ; preds = %602
  %613 = trunc i33 %608 to i32
  store i32 %613, i32* %603, align 4
  br label %614

614:                                              ; preds = %612, %597, %587
  %615 = ptrtoint %"class.WTF::StringImpl"* %595 to i64
  %616 = bitcast i8* %594 to i64*
  %617 = bitcast i8* %594 to %"class.WTF::StringImpl"**
  %618 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %617, align 8
  store i64 %615, i64* %616, align 8
  %619 = icmp eq %"class.WTF::StringImpl"* %618, null
  br i1 %619, label %633, label %620

620:                                              ; preds = %614
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = and i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  br i1 %624, label %627, label %629

627:                                              ; preds = %620
  %628 = add i32 %626, -1
  store i32 %628, i32* %625, align 4
  br label %629

629:                                              ; preds = %627, %620
  %630 = phi i32 [ %628, %627 ], [ %626, %620 ]
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %633

632:                                              ; preds = %629
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %618) #17
  br label %633

633:                                              ; preds = %632, %629, %614
  %634 = ptrtoint i8* %429 to i64
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %458) #17
  %635 = call zeroext i1 @_ZNK5blink16ResourceResponse9WasCachedEv(%"class.blink::ResourceResponse"* %0) #17
  %636 = zext i1 %635 to i8
  %637 = getelementptr inbounds i8, i8* %429, i64 129
  store i8 %636, i8* %637, align 1
  %638 = getelementptr inbounds i8, i8* %429, i64 128
  store i8 1, i8* %638, align 1
  %639 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 24
  %640 = load i8, i8* %639, align 1, !range !2
  %641 = icmp eq i8 %640, 0
  %642 = getelementptr inbounds i8, i8* %429, i64 131
  store i8 %640, i8* %642, align 1
  %643 = getelementptr inbounds i8, i8* %429, i64 130
  store i8 1, i8* %643, align 1
  br i1 %641, label %692, label %644

644:                                              ; preds = %633
  %645 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %645)
  %646 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 25
  %647 = load i32, i32* %646, align 4
  switch i32 %647, label %651 [
    i32 3, label %652
    i32 2, label %648
    i32 1, label %649
    i32 0, label %650
  ]

648:                                              ; preds = %644
  br label %652

649:                                              ; preds = %644
  br label %652

650:                                              ; preds = %644
  br label %652

651:                                              ; preds = %644
  unreachable

652:                                              ; preds = %644, %648, %649, %650
  %653 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum9HttpCacheE, i64 0, i64 0), %648 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum7NetworkE, i64 0, i64 0), %649 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum12FallbackCodeE, i64 0, i64 0), %650 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network31ServiceWorkerResponseSourceEnum12CacheStorageE, i64 0, i64 0), %644 ]
  %654 = call i64 @strlen(i8* nonnull %653) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %653, i64 %654) #17
  %655 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %656 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %655, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %645)
  %657 = icmp eq %"class.WTF::StringImpl"* %656, null
  br i1 %657, label %675, label %658

658:                                              ; preds = %652
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %656, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = load atomic i32, i32* %659 monotonic, align 4
  %661 = and i32 %660, 2
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %678

663:                                              ; preds = %658
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %656, i64 0, i32 0
  %665 = load i32, i32* %664, align 4
  %666 = zext i32 %665 to i33
  %667 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %666, i33 1) #17
  %668 = extractvalue { i33, i1 } %667, 1
  %669 = extractvalue { i33, i1 } %667, 0
  %670 = icmp slt i33 %669, 0
  %671 = or i1 %668, %670
  br i1 %671, label %672, label %673, !prof !4

672:                                              ; preds = %663
  call void @llvm.trap() #17
  unreachable

673:                                              ; preds = %663
  %674 = trunc i33 %669 to i32
  store i32 %674, i32* %664, align 4
  br label %678

675:                                              ; preds = %652
  %676 = getelementptr inbounds i8, i8* %429, i64 152
  %677 = bitcast i8* %676 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %677, %"class.WTF::StringImpl"* null) #17
  br label %692

678:                                              ; preds = %658, %673
  %679 = getelementptr inbounds i8, i8* %429, i64 152
  %680 = bitcast i8* %679 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %680, %"class.WTF::StringImpl"* nonnull %656) #17
  %681 = load atomic i32, i32* %659 monotonic, align 4
  %682 = and i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %656, i64 0, i32 0
  %685 = load i32, i32* %684, align 4
  br i1 %683, label %686, label %688

686:                                              ; preds = %678
  %687 = add i32 %685, -1
  store i32 %687, i32* %684, align 4
  br label %688

688:                                              ; preds = %686, %678
  %689 = phi i32 [ %687, %686 ], [ %685, %678 ]
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %692

691:                                              ; preds = %688
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %656) #17
  br label %692

692:                                              ; preds = %633, %691, %688, %675
  %693 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 54, i32 0, i32 0
  %694 = load i64, i64* %693, align 8
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %700, label %696

696:                                              ; preds = %692
  %697 = bitcast %"class.base::Time"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %697) #17
  %698 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %25, i64 0, i32 0, i32 0
  store i64 %694, i64* %698, align 8
  %699 = call double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"* nonnull %25) #17
  store double %699, double* %446, align 8
  store i8 1, i8* %444, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %697) #17
  br label %700

700:                                              ; preds = %692, %696
  %701 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 52, i32 0, i32 0
  %702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %701, align 8
  %703 = icmp eq %"class.WTF::StringImpl"* %702, null
  br i1 %703, label %727, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 1
  %706 = load i32, i32* %705, align 4
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %727, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %725

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i33
  %717 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %716, i33 1) #17
  %718 = extractvalue { i33, i1 } %717, 1
  %719 = extractvalue { i33, i1 } %717, 0
  %720 = icmp slt i33 %719, 0
  %721 = or i1 %718, %720
  br i1 %721, label %722, label %723, !prof !4

722:                                              ; preds = %713
  call void @llvm.trap() #17
  unreachable

723:                                              ; preds = %713
  %724 = trunc i33 %719 to i32
  store i32 %724, i32* %714, align 4
  br label %725

725:                                              ; preds = %708, %723
  %726 = bitcast i8* %447 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %726, %"class.WTF::StringImpl"* nonnull %702) #17
  br label %727

727:                                              ; preds = %700, %725, %704
  %728 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 29
  %729 = load i8, i8* %728, align 1, !range !2
  %730 = getelementptr inbounds i8, i8* %429, i64 133
  store i8 %729, i8* %730, align 1
  %731 = getelementptr inbounds i8, i8* %429, i64 132
  store i8 1, i8* %731, align 1
  %732 = call %"class.blink::ResourceLoadTiming"* @_ZNK5blink16ResourceResponse21GetResourceLoadTimingEv(%"class.blink::ResourceResponse"* %0) #17
  %733 = icmp eq %"class.blink::ResourceLoadTiming"* %732, null
  br i1 %733, label %866, label %734

734:                                              ; preds = %727
  %735 = call %"class.blink::ResourceLoadTiming"* @_ZNK5blink16ResourceResponse21GetResourceLoadTimingEv(%"class.blink::ResourceResponse"* %0) #17
  %736 = call i8* @_Znwm(i64 152) #18
  %737 = bitcast i8* %736 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network14ResourceTimingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %737, align 8
  %738 = getelementptr inbounds i8, i8* %736, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %738, i8 0, i64 144, i1 false) #17
  %739 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 1, i32 0, i32 0
  %740 = load i64, i64* %739, align 8
  %741 = add i64 %740, -9223372036854775807
  %742 = icmp ult i64 %741, 2
  br i1 %742, label %746, label %743

743:                                              ; preds = %734
  %744 = sitofp i64 %740 to double
  %745 = fdiv double %744, 1.000000e+06
  br label %749

746:                                              ; preds = %734
  %747 = icmp slt i64 %740, 0
  %748 = select i1 %747, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %749

749:                                              ; preds = %746, %743
  %750 = phi double [ %748, %746 ], [ %745, %743 ]
  %751 = bitcast i8* %738 to double*
  store double %750, double* %751, align 8
  %752 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 2, i32 0, i32 0
  %753 = load i64, i64* %752, align 8
  %754 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %753) #17
  %755 = getelementptr inbounds i8, i8* %736, i64 16
  %756 = bitcast i8* %755 to double*
  store double %754, double* %756, align 8
  %757 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 3, i32 0, i32 0
  %758 = load i64, i64* %757, align 8
  %759 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %758) #17
  %760 = getelementptr inbounds i8, i8* %736, i64 24
  %761 = bitcast i8* %760 to double*
  store double %759, double* %761, align 8
  %762 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 4, i32 0, i32 0
  %763 = load i64, i64* %762, align 8
  %764 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %763) #17
  %765 = getelementptr inbounds i8, i8* %736, i64 32
  %766 = bitcast i8* %765 to double*
  store double %764, double* %766, align 8
  %767 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 5, i32 0, i32 0
  %768 = load i64, i64* %767, align 8
  %769 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %768) #17
  %770 = getelementptr inbounds i8, i8* %736, i64 40
  %771 = bitcast i8* %770 to double*
  store double %769, double* %771, align 8
  %772 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 6, i32 0, i32 0
  %773 = load i64, i64* %772, align 8
  %774 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %773) #17
  %775 = getelementptr inbounds i8, i8* %736, i64 48
  %776 = bitcast i8* %775 to double*
  store double %774, double* %776, align 8
  %777 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 7, i32 0, i32 0
  %778 = load i64, i64* %777, align 8
  %779 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %778) #17
  %780 = getelementptr inbounds i8, i8* %736, i64 56
  %781 = bitcast i8* %780 to double*
  store double %779, double* %781, align 8
  %782 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 16, i32 0, i32 0
  %783 = load i64, i64* %782, align 8
  %784 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %783) #17
  %785 = getelementptr inbounds i8, i8* %736, i64 64
  %786 = bitcast i8* %785 to double*
  store double %784, double* %786, align 8
  %787 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 17, i32 0, i32 0
  %788 = load i64, i64* %787, align 8
  %789 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %788) #17
  %790 = getelementptr inbounds i8, i8* %736, i64 72
  %791 = bitcast i8* %790 to double*
  store double %789, double* %791, align 8
  %792 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 8, i32 0, i32 0
  %793 = load i64, i64* %792, align 8
  %794 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %793) #17
  %795 = getelementptr inbounds i8, i8* %736, i64 80
  %796 = bitcast i8* %795 to double*
  store double %794, double* %796, align 8
  %797 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 9, i32 0, i32 0
  %798 = load i64, i64* %797, align 8
  %799 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %798) #17
  %800 = getelementptr inbounds i8, i8* %736, i64 88
  %801 = bitcast i8* %800 to double*
  store double %799, double* %801, align 8
  %802 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 10, i32 0, i32 0
  %803 = load i64, i64* %802, align 8
  %804 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %803) #17
  %805 = getelementptr inbounds i8, i8* %736, i64 96
  %806 = bitcast i8* %805 to double*
  store double %804, double* %806, align 8
  %807 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 11, i32 0, i32 0
  %808 = load i64, i64* %807, align 8
  %809 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %808) #17
  %810 = getelementptr inbounds i8, i8* %736, i64 104
  %811 = bitcast i8* %810 to double*
  store double %809, double* %811, align 8
  %812 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 12, i32 0, i32 0
  %813 = load i64, i64* %812, align 8
  %814 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %813) #17
  %815 = getelementptr inbounds i8, i8* %736, i64 112
  %816 = bitcast i8* %815 to double*
  store double %814, double* %816, align 8
  %817 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 13, i32 0, i32 0
  %818 = load i64, i64* %817, align 8
  %819 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %818) #17
  %820 = getelementptr inbounds i8, i8* %736, i64 120
  %821 = bitcast i8* %820 to double*
  store double %819, double* %821, align 8
  %822 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 15, i32 0, i32 0
  %823 = load i64, i64* %822, align 8
  %824 = call double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"* %735, i64 %823) #17
  %825 = getelementptr inbounds i8, i8* %736, i64 144
  %826 = bitcast i8* %825 to double*
  store double %824, double* %826, align 8
  %827 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 18, i32 0, i32 0
  %828 = load i64, i64* %827, align 8
  %829 = add i64 %828, -9223372036854775807
  %830 = icmp ult i64 %829, 2
  br i1 %830, label %834, label %831

831:                                              ; preds = %749
  %832 = sitofp i64 %828 to double
  %833 = fdiv double %832, 1.000000e+06
  br label %837

834:                                              ; preds = %749
  %835 = icmp slt i64 %828, 0
  %836 = select i1 %835, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %837

837:                                              ; preds = %834, %831
  %838 = phi double [ %836, %834 ], [ %833, %831 ]
  %839 = getelementptr inbounds i8, i8* %736, i64 128
  %840 = bitcast i8* %839 to double*
  store double %838, double* %840, align 8
  %841 = getelementptr inbounds %"class.blink::ResourceLoadTiming", %"class.blink::ResourceLoadTiming"* %735, i64 0, i32 19, i32 0, i32 0
  %842 = load i64, i64* %841, align 8
  %843 = add i64 %842, -9223372036854775807
  %844 = icmp ult i64 %843, 2
  br i1 %844, label %848, label %845

845:                                              ; preds = %837
  %846 = sitofp i64 %842 to double
  %847 = fdiv double %846, 1.000000e+06
  br label %851

848:                                              ; preds = %837
  %849 = icmp slt i64 %842, 0
  %850 = select i1 %849, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %851

851:                                              ; preds = %845, %848
  %852 = phi double [ %850, %848 ], [ %847, %845 ]
  %853 = getelementptr inbounds i8, i8* %736, i64 136
  %854 = bitcast i8* %853 to double*
  store double %852, double* %854, align 8
  %855 = ptrtoint i8* %736 to i64
  %856 = getelementptr inbounds i8, i8* %429, i64 144
  %857 = bitcast i8* %856 to %"class.blink::protocol::Network::ResourceTiming"**
  %858 = load %"class.blink::protocol::Network::ResourceTiming"*, %"class.blink::protocol::Network::ResourceTiming"** %857, align 8
  %859 = bitcast i8* %856 to i64*
  store i64 %855, i64* %859, align 8
  %860 = icmp eq %"class.blink::protocol::Network::ResourceTiming"* %858, null
  br i1 %860, label %866, label %861

861:                                              ; preds = %851
  %862 = bitcast %"class.blink::protocol::Network::ResourceTiming"* %858 to void (%"class.blink::protocol::Network::ResourceTiming"*)***
  %863 = load void (%"class.blink::protocol::Network::ResourceTiming"*)**, void (%"class.blink::protocol::Network::ResourceTiming"*)*** %862, align 8
  %864 = getelementptr inbounds void (%"class.blink::protocol::Network::ResourceTiming"*)*, void (%"class.blink::protocol::Network::ResourceTiming"*)** %863, i64 2
  %865 = load void (%"class.blink::protocol::Network::ResourceTiming"*)*, void (%"class.blink::protocol::Network::ResourceTiming"*)** %864, align 8
  call void %865(%"class.blink::protocol::Network::ResourceTiming"* nonnull %858) #17
  br label %866

866:                                              ; preds = %861, %851, %727
  %867 = bitcast %class.scoped_refptr.1271* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %867) #17
  %868 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %869 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %26, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %868, %"struct.blink::ResourceLoadInfo"** %869, align 8
  %870 = icmp eq %"struct.blink::ResourceLoadInfo"* %868, null
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %867) #17
  br i1 %870, label %976, label %871

871:                                              ; preds = %866
  %872 = bitcast %class.scoped_refptr.1271* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %872) #17
  %873 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %874 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %27, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %873, %"struct.blink::ResourceLoadInfo"** %874, align 8
  %875 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %873, i64 0, i32 6, i32 0, i32 0
  %876 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %875, align 8
  %877 = icmp eq %"class.WTF::StringImpl"* %876, null
  br i1 %877, label %909, label %878

878:                                              ; preds = %871
  %879 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %876, i64 0, i32 1
  %880 = load i32, i32* %879, align 4
  %881 = icmp eq i32 %880, 0
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %872) #17
  br i1 %881, label %912, label %882

882:                                              ; preds = %878
  %883 = bitcast %class.scoped_refptr.1271* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %883) #17
  %884 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %885 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %28, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %884, %"struct.blink::ResourceLoadInfo"** %885, align 8
  %886 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %884, i64 0, i32 6, i32 0, i32 0
  %887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %886, align 8
  %888 = icmp eq %"class.WTF::StringImpl"* %887, null
  br i1 %888, label %906, label %889

889:                                              ; preds = %882
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %891 = load atomic i32, i32* %890 monotonic, align 4
  %892 = and i32 %891, 2
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %906

894:                                              ; preds = %889
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  %897 = zext i32 %896 to i33
  %898 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %897, i33 1) #17
  %899 = extractvalue { i33, i1 } %898, 1
  %900 = extractvalue { i33, i1 } %898, 0
  %901 = icmp slt i33 %900, 0
  %902 = or i1 %899, %901
  br i1 %902, label %903, label %904, !prof !4

903:                                              ; preds = %894
  call void @llvm.trap() #17
  unreachable

904:                                              ; preds = %894
  %905 = trunc i33 %900 to i32
  store i32 %905, i32* %895, align 4
  br label %906

906:                                              ; preds = %882, %889, %904
  %907 = getelementptr inbounds i8, i8* %429, i64 40
  %908 = bitcast i8* %907 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %908, %"class.WTF::StringImpl"* %887) #17
  br label %909

909:                                              ; preds = %871, %906
  %910 = phi %class.scoped_refptr.1271* [ %28, %906 ], [ %27, %871 ]
  %911 = phi i8* [ %883, %906 ], [ %872, %871 ]
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %910) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %911) #17
  br label %912

912:                                              ; preds = %909, %878
  %913 = bitcast %class.scoped_refptr.1271* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %913) #17
  %914 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %915 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %29, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %914, %"struct.blink::ResourceLoadInfo"** %915, align 8
  %916 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %914, i64 0, i32 3, i32 0, i32 0, i32 2
  %917 = load i32, i32* %916, align 4
  %918 = icmp eq i32 %917, 0
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %913) #17
  br i1 %918, label %937, label %919

919:                                              ; preds = %912
  %920 = bitcast %class.scoped_refptr.1271* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %920) #17
  %921 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %922 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %30, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %921, %"struct.blink::ResourceLoadInfo"** %922, align 8
  %923 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %921, i64 0, i32 3
  %924 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* dereferenceable(24) %923)
  %925 = ptrtoint %"class.blink::protocol::Object"* %924 to i64
  %926 = getelementptr inbounds i8, i8* %429, i64 64
  %927 = bitcast i8* %926 to %"class.blink::protocol::Object"**
  %928 = load %"class.blink::protocol::Object"*, %"class.blink::protocol::Object"** %927, align 8
  %929 = bitcast i8* %926 to i64*
  store i64 %925, i64* %929, align 8
  %930 = icmp eq %"class.blink::protocol::Object"* %928, null
  br i1 %930, label %936, label %931

931:                                              ; preds = %919
  %932 = bitcast %"class.blink::protocol::Object"* %928 to void (%"class.blink::protocol::Object"*)***
  %933 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %932, align 8
  %934 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %933, i64 2
  %935 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %934, align 8
  call void %935(%"class.blink::protocol::Object"* nonnull %928) #17
  br label %936

936:                                              ; preds = %919, %931
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %920) #17
  br label %937

937:                                              ; preds = %912, %936
  %938 = bitcast %class.scoped_refptr.1271* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %938) #17
  %939 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %940 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %31, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %939, %"struct.blink::ResourceLoadInfo"** %940, align 8
  %941 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %939, i64 0, i32 5, i32 0, i32 0
  %942 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %941, align 8
  %943 = icmp eq %"class.WTF::StringImpl"* %942, null
  br i1 %943, label %944, label %945

944:                                              ; preds = %937
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %938) #17
  br label %976

945:                                              ; preds = %937
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %942, i64 0, i32 1
  %947 = load i32, i32* %946, align 4
  %948 = icmp eq i32 %947, 0
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %938) #17
  br i1 %948, label %976, label %949

949:                                              ; preds = %945
  %950 = bitcast %class.scoped_refptr.1271* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %950) #17
  %951 = call %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"* %0) #17
  %952 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %32, i64 0, i32 0
  store %"struct.blink::ResourceLoadInfo"* %951, %"struct.blink::ResourceLoadInfo"** %952, align 8
  %953 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %951, i64 0, i32 5, i32 0, i32 0
  %954 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %953, align 8
  %955 = icmp eq %"class.WTF::StringImpl"* %954, null
  br i1 %955, label %973, label %956

956:                                              ; preds = %949
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %954, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %958 = load atomic i32, i32* %957 monotonic, align 4
  %959 = and i32 %958, 2
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %961, label %973

961:                                              ; preds = %956
  %962 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %954, i64 0, i32 0
  %963 = load i32, i32* %962, align 4
  %964 = zext i32 %963 to i33
  %965 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %964, i33 1) #17
  %966 = extractvalue { i33, i1 } %965, 1
  %967 = extractvalue { i33, i1 } %965, 0
  %968 = icmp slt i33 %967, 0
  %969 = or i1 %966, %968
  br i1 %969, label %970, label %971, !prof !4

970:                                              ; preds = %961
  call void @llvm.trap() #17
  unreachable

971:                                              ; preds = %961
  %972 = trunc i33 %967 to i32
  store i32 %972, i32* %962, align 4
  br label %973

973:                                              ; preds = %949, %956, %971
  %974 = getelementptr inbounds i8, i8* %429, i64 72
  %975 = bitcast i8* %974 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %975, %"class.WTF::StringImpl"* %954) #17
  call void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %950) #17
  br label %976

976:                                              ; preds = %866, %944, %945, %973
  %977 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 8, i32 0
  %978 = call zeroext i1 @_ZNK3net9IPAddress7IsValidEv(%"class.net::IPAddress"* %977) #17
  br i1 %978, label %979, label %1177

979:                                              ; preds = %976
  %980 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %980) #17
  call void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.net::IPAddress"* %977) #17
  %981 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %982 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %981, i64 0, i32 1, i32 0
  %983 = load i8, i8* %982, align 1
  %984 = icmp slt i8 %983, 0
  %985 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %986 = load i8*, i8** %985, align 8
  %987 = select i1 %984, i8* %986, i8* %980
  %988 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %989 = load i64, i64* %988, align 8
  %990 = zext i8 %983 to i64
  %991 = select i1 %984, i64 %989, i64 %990
  %992 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %987, i64 %991) #17
  %993 = load i8, i8* %982, align 1
  %994 = icmp slt i8 %993, 0
  br i1 %994, label %995, label %997

995:                                              ; preds = %979
  %996 = load i8*, i8** %985, align 8
  call void @_ZdlPv(i8* %996) #18
  br label %997

997:                                              ; preds = %995, %979
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %980) #17
  %998 = call zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"* %977) #17
  br i1 %998, label %999, label %1137

999:                                              ; preds = %997
  %1000 = bitcast %"class.WTF::StringAppend.3806"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1000) #17
  %1001 = icmp eq %"class.WTF::StringImpl"* %992, null
  br i1 %1001, label %1077, label %1002

1002:                                             ; preds = %999
  %1003 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1004 = load atomic i32, i32* %1003 monotonic, align 4
  %1005 = and i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 0
  %1008 = load i32, i32* %1007, align 4
  br i1 %1006, label %1009, label %1019

1009:                                             ; preds = %1002
  %1010 = zext i32 %1008 to i33
  %1011 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1010, i33 1) #17
  %1012 = extractvalue { i33, i1 } %1011, 1
  %1013 = extractvalue { i33, i1 } %1011, 0
  %1014 = icmp slt i33 %1013, 0
  %1015 = or i1 %1012, %1014
  br i1 %1015, label %1016, label %1017, !prof !4

1016:                                             ; preds = %1009
  call void @llvm.trap() #17
  unreachable

1017:                                             ; preds = %1009
  %1018 = trunc i33 %1013 to i32
  store i32 %1018, i32* %1007, align 4
  br label %1019

1019:                                             ; preds = %1017, %1002
  %1020 = phi i32 [ %1018, %1017 ], [ %1008, %1002 ]
  %1021 = load atomic i32, i32* %1003 monotonic, align 4
  %1022 = and i32 %1021, 2
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1024, label %1034

1024:                                             ; preds = %1019
  %1025 = zext i32 %1020 to i33
  %1026 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1025, i33 1) #17
  %1027 = extractvalue { i33, i1 } %1026, 1
  %1028 = extractvalue { i33, i1 } %1026, 0
  %1029 = icmp slt i33 %1028, 0
  %1030 = or i1 %1027, %1029
  br i1 %1030, label %1031, label %1032, !prof !4

1031:                                             ; preds = %1024
  call void @llvm.trap() #17
  unreachable

1032:                                             ; preds = %1024
  %1033 = trunc i33 %1028 to i32
  store i32 %1033, i32* %1007, align 4
  br label %1034

1034:                                             ; preds = %1032, %1019
  %1035 = phi i32 [ %1033, %1032 ], [ %1020, %1019 ]
  %1036 = load atomic i32, i32* %1003 monotonic, align 4
  %1037 = and i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1039, label %1041

1039:                                             ; preds = %1034
  %1040 = add i32 %1035, -1
  store i32 %1040, i32* %1007, align 4
  br label %1041

1041:                                             ; preds = %1039, %1034
  %1042 = phi i32 [ %1040, %1039 ], [ %1035, %1034 ]
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1044, label %1045

1044:                                             ; preds = %1041
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %992) #17
  br label %1045

1045:                                             ; preds = %1044, %1041
  %1046 = load atomic i32, i32* %1003 monotonic, align 4
  %1047 = and i32 %1046, 2
  %1048 = icmp eq i32 %1047, 0
  br i1 %1048, label %1049, label %1060

1049:                                             ; preds = %1045
  %1050 = load i32, i32* %1007, align 4
  %1051 = zext i32 %1050 to i33
  %1052 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1051, i33 1) #17
  %1053 = extractvalue { i33, i1 } %1052, 1
  %1054 = extractvalue { i33, i1 } %1052, 0
  %1055 = icmp slt i33 %1054, 0
  %1056 = or i1 %1053, %1055
  br i1 %1056, label %1057, label %1058, !prof !4

1057:                                             ; preds = %1049
  call void @llvm.trap() #17
  unreachable

1058:                                             ; preds = %1049
  %1059 = trunc i33 %1054 to i32
  store i32 %1059, i32* %1007, align 4
  br label %1060

1060:                                             ; preds = %1058, %1045
  %1061 = bitcast %"class.WTF::StringAppend.3806"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.31 to i64), i64* %1061, align 8
  %1062 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %992, %"class.WTF::StringImpl"** %1062, align 8
  %1063 = load atomic i32, i32* %1003 monotonic, align 4
  %1064 = and i32 %1063, 2
  %1065 = icmp eq i32 %1064, 0
  br i1 %1065, label %1066, label %1081

1066:                                             ; preds = %1060
  %1067 = load i32, i32* %1007, align 4
  %1068 = zext i32 %1067 to i33
  %1069 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1068, i33 1) #17
  %1070 = extractvalue { i33, i1 } %1069, 1
  %1071 = extractvalue { i33, i1 } %1069, 0
  %1072 = icmp slt i33 %1071, 0
  %1073 = or i1 %1070, %1072
  br i1 %1073, label %1074, label %1075, !prof !4

1074:                                             ; preds = %1066
  call void @llvm.trap() #17
  unreachable

1075:                                             ; preds = %1066
  %1076 = trunc i33 %1071 to i32
  store i32 %1076, i32* %1007, align 4
  br label %1081

1077:                                             ; preds = %999
  %1078 = bitcast %"class.WTF::StringAppend.3806"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.31 to i64), i64* %1078, align 8
  %1079 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1079, align 8
  %1080 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8** %1080, align 8
  br label %1093

1081:                                             ; preds = %1075, %1060
  %1082 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8** %1082, align 8
  %1083 = load atomic i32, i32* %1003 monotonic, align 4
  %1084 = and i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  %1086 = load i32, i32* %1007, align 4
  br i1 %1085, label %1087, label %1089

1087:                                             ; preds = %1081
  %1088 = add i32 %1086, -1
  store i32 %1088, i32* %1007, align 4
  br label %1089

1089:                                             ; preds = %1087, %1081
  %1090 = phi i32 [ %1088, %1087 ], [ %1086, %1081 ]
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1092, label %1093

1092:                                             ; preds = %1089
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %992) #17
  br label %1093

1093:                                             ; preds = %1092, %1089, %1077
  %1094 = phi %"class.WTF::StringImpl"** [ %1079, %1077 ], [ %1062, %1089 ], [ %1062, %1092 ]
  %1095 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3806"* nonnull %7) #17
  %1096 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  %1097 = icmp eq %"class.WTF::StringImpl"* %1096, null
  br i1 %1097, label %1111, label %1098

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1096, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1100 = load atomic i32, i32* %1099 monotonic, align 4
  %1101 = and i32 %1100, 2
  %1102 = icmp eq i32 %1101, 0
  %1103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1096, i64 0, i32 0
  %1104 = load i32, i32* %1103, align 4
  br i1 %1102, label %1105, label %1107

1105:                                             ; preds = %1098
  %1106 = add i32 %1104, -1
  store i32 %1106, i32* %1103, align 4
  br label %1107

1107:                                             ; preds = %1105, %1098
  %1108 = phi i32 [ %1106, %1105 ], [ %1104, %1098 ]
  %1109 = icmp eq i32 %1108, 0
  br i1 %1109, label %1110, label %1111

1110:                                             ; preds = %1107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1096) #17
  br label %1111

1111:                                             ; preds = %1110, %1107, %1093
  br i1 %1001, label %1125, label %1112

1112:                                             ; preds = %1111
  %1113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1114 = load atomic i32, i32* %1113 monotonic, align 4
  %1115 = and i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %992, i64 0, i32 0
  %1118 = load i32, i32* %1117, align 4
  br i1 %1116, label %1119, label %1121

1119:                                             ; preds = %1112
  %1120 = add i32 %1118, -1
  store i32 %1120, i32* %1117, align 4
  br label %1121

1121:                                             ; preds = %1119, %1112
  %1122 = phi i32 [ %1120, %1119 ], [ %1118, %1112 ]
  %1123 = icmp eq i32 %1122, 0
  br i1 %1123, label %1124, label %1126

1124:                                             ; preds = %1121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %992) #17
  br label %1126

1125:                                             ; preds = %1111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1000) #17
  br label %1137

1126:                                             ; preds = %1124, %1121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1000) #17
  %1127 = load atomic i32, i32* %1113 monotonic, align 4
  %1128 = and i32 %1127, 2
  %1129 = icmp eq i32 %1128, 0
  %1130 = load i32, i32* %1117, align 4
  br i1 %1129, label %1131, label %1133

1131:                                             ; preds = %1126
  %1132 = add i32 %1130, -1
  store i32 %1132, i32* %1117, align 4
  br label %1133

1133:                                             ; preds = %1131, %1126
  %1134 = phi i32 [ %1132, %1131 ], [ %1130, %1126 ]
  %1135 = icmp eq i32 %1134, 0
  br i1 %1135, label %1136, label %1137

1136:                                             ; preds = %1133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %992) #17
  br label %1137

1137:                                             ; preds = %997, %1125, %1133, %1136
  %1138 = phi %"class.WTF::StringImpl"* [ %1095, %1125 ], [ %1095, %1133 ], [ %1095, %1136 ], [ %992, %997 ]
  %1139 = icmp eq %"class.WTF::StringImpl"* %1138, null
  br i1 %1139, label %1157, label %1140

1140:                                             ; preds = %1137
  %1141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1142 = load atomic i32, i32* %1141 monotonic, align 4
  %1143 = and i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1159

1145:                                             ; preds = %1140
  %1146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 0
  %1147 = load i32, i32* %1146, align 4
  %1148 = zext i32 %1147 to i33
  %1149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1148, i33 1) #17
  %1150 = extractvalue { i33, i1 } %1149, 1
  %1151 = extractvalue { i33, i1 } %1149, 0
  %1152 = icmp slt i33 %1151, 0
  %1153 = or i1 %1150, %1152
  br i1 %1153, label %1154, label %1155, !prof !4

1154:                                             ; preds = %1145
  call void @llvm.trap() #17
  unreachable

1155:                                             ; preds = %1145
  %1156 = trunc i33 %1151 to i32
  store i32 %1156, i32* %1146, align 4
  br label %1159

1157:                                             ; preds = %1137
  %1158 = bitcast i8* %437 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1158, %"class.WTF::StringImpl"* null) #17
  br label %1172

1159:                                             ; preds = %1140, %1155
  %1160 = bitcast i8* %437 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1160, %"class.WTF::StringImpl"* nonnull %1138) #17
  %1161 = load atomic i32, i32* %1141 monotonic, align 4
  %1162 = and i32 %1161, 2
  %1163 = icmp eq i32 %1162, 0
  %1164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 0
  %1165 = load i32, i32* %1164, align 4
  br i1 %1163, label %1166, label %1168

1166:                                             ; preds = %1159
  %1167 = add i32 %1165, -1
  store i32 %1167, i32* %1164, align 4
  br label %1168

1168:                                             ; preds = %1166, %1159
  %1169 = phi i32 [ %1167, %1166 ], [ %1165, %1159 ]
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1172

1171:                                             ; preds = %1168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1138) #17
  br label %1172

1172:                                             ; preds = %1157, %1168, %1171
  %1173 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 8, i32 1
  %1174 = load i16, i16* %1173, align 2
  %1175 = zext i16 %1174 to i32
  %1176 = bitcast i8* %441 to i32*
  store i32 %1175, i32* %1176, align 4
  store i8 1, i8* %440, align 4
  br label %1177

1177:                                             ; preds = %1172, %976
  %1178 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 55, i32 0, i32 0, i32 0
  %1179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1178, align 8
  %1180 = ptrtoint %"class.WTF::StringImpl"* %1179 to i64
  %1181 = icmp eq %"class.WTF::StringImpl"* %1179, null
  br i1 %1181, label %1217, label %1182

1182:                                             ; preds = %1177
  %1183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1184 = load atomic i32, i32* %1183 monotonic, align 4
  %1185 = and i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1187, label %1199

1187:                                             ; preds = %1182
  %1188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1189 = load i32, i32* %1188, align 4
  %1190 = zext i32 %1189 to i33
  %1191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1190, i33 1) #17
  %1192 = extractvalue { i33, i1 } %1191, 1
  %1193 = extractvalue { i33, i1 } %1191, 0
  %1194 = icmp slt i33 %1193, 0
  %1195 = or i1 %1192, %1194
  br i1 %1195, label %1196, label %1197, !prof !4

1196:                                             ; preds = %1187
  call void @llvm.trap() #17
  unreachable

1197:                                             ; preds = %1187
  %1198 = trunc i33 %1193 to i32
  store i32 %1198, i32* %1188, align 4
  br label %1199

1199:                                             ; preds = %1197, %1182
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 1
  %1201 = load i32, i32* %1200, align 4
  %1202 = icmp eq i32 %1201, 0
  br i1 %1202, label %1217, label %1203

1203:                                             ; preds = %1199
  %1204 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1204) #17
  %1205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1179, %"class.WTF::StringImpl"** %1205, align 8
  %1206 = load i32, i32* %1200, align 4
  %1207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 1
  %1208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %1209 = bitcast i8** %1208 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1207, %"class.WTF::StringImpl"** %1209, align 8
  %1210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %1206, i32* %1210, align 8
  %1211 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1211) #17
  %1212 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1213 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %1212, i64* %1213, align 8
  %1214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8** %1214, align 8
  %1215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 7, i32* %1215, align 8
  %1216 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1211) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1204) #17
  br i1 %1216, label %1217, label %1423

1217:                                             ; preds = %1177, %1203, %1199
  %1218 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 23
  %1219 = load i8, i8* %1218, align 8, !range !2
  %1220 = icmp eq i8 %1219, 0
  br i1 %1220, label %1256, label %1221

1221:                                             ; preds = %1217
  %1222 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1222) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i64 2) #17
  %1223 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %1224 = bitcast %"class.WTF::String"* %33 to i64*
  %1225 = load i64, i64* %1224, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1223, align 8
  br i1 %1181, label %1255, label %1226

1226:                                             ; preds = %1221
  %1227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1228 = load atomic i32, i32* %1227 monotonic, align 4
  %1229 = and i32 %1228, 2
  %1230 = icmp eq i32 %1229, 0
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  br i1 %1230, label %1233, label %1235

1233:                                             ; preds = %1226
  %1234 = add i32 %1232, -1
  store i32 %1234, i32* %1231, align 4
  br label %1235

1235:                                             ; preds = %1233, %1226
  %1236 = phi i32 [ %1234, %1233 ], [ %1232, %1226 ]
  %1237 = icmp eq i32 %1236, 0
  br i1 %1237, label %1238, label %1239

1238:                                             ; preds = %1235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #17
  br label %1239

1239:                                             ; preds = %1235, %1238
  %1240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1223, align 8
  %1241 = icmp eq %"class.WTF::StringImpl"* %1240, null
  br i1 %1241, label %1255, label %1242

1242:                                             ; preds = %1239
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1244 = load atomic i32, i32* %1243 monotonic, align 4
  %1245 = and i32 %1244, 2
  %1246 = icmp eq i32 %1245, 0
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1240, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 4
  br i1 %1246, label %1249, label %1251

1249:                                             ; preds = %1242
  %1250 = add i32 %1248, -1
  store i32 %1250, i32* %1247, align 4
  br label %1251

1251:                                             ; preds = %1249, %1242
  %1252 = phi i32 [ %1250, %1249 ], [ %1248, %1242 ]
  %1253 = icmp eq i32 %1252, 0
  br i1 %1253, label %1254, label %1255

1254:                                             ; preds = %1251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1240) #17
  br label %1255

1255:                                             ; preds = %1221, %1239, %1251, %1254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1222) #17
  br label %1423

1256:                                             ; preds = %1217
  %1257 = call zeroext i1 @_ZNK5blink16ResourceResponse6IsHTTPEv(%"class.blink::ResourceResponse"* %0) #17
  br i1 %1257, label %1258, label %1406

1258:                                             ; preds = %1256
  %1259 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1259) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i64 4) #17
  %1260 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %1261 = bitcast %"class.WTF::String"* %34 to i64*
  %1262 = load i64, i64* %1261, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1260, align 8
  br i1 %1181, label %1292, label %1263

1263:                                             ; preds = %1258
  %1264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1265 = load atomic i32, i32* %1264 monotonic, align 4
  %1266 = and i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  %1268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1269 = load i32, i32* %1268, align 4
  br i1 %1267, label %1270, label %1272

1270:                                             ; preds = %1263
  %1271 = add i32 %1269, -1
  store i32 %1271, i32* %1268, align 4
  br label %1272

1272:                                             ; preds = %1270, %1263
  %1273 = phi i32 [ %1271, %1270 ], [ %1269, %1263 ]
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1275, label %1276

1275:                                             ; preds = %1272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #17
  br label %1276

1276:                                             ; preds = %1272, %1275
  %1277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1260, align 8
  %1278 = icmp eq %"class.WTF::StringImpl"* %1277, null
  br i1 %1278, label %1292, label %1279

1279:                                             ; preds = %1276
  %1280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1281 = load atomic i32, i32* %1280 monotonic, align 4
  %1282 = and i32 %1281, 2
  %1283 = icmp eq i32 %1282, 0
  %1284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 0
  %1285 = load i32, i32* %1284, align 4
  br i1 %1283, label %1286, label %1288

1286:                                             ; preds = %1279
  %1287 = add i32 %1285, -1
  store i32 %1287, i32* %1284, align 4
  br label %1288

1288:                                             ; preds = %1286, %1279
  %1289 = phi i32 [ %1287, %1286 ], [ %1285, %1279 ]
  %1290 = icmp eq i32 %1289, 0
  br i1 %1290, label %1291, label %1292

1291:                                             ; preds = %1288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1277) #17
  br label %1292

1292:                                             ; preds = %1258, %1276, %1288, %1291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1259) #17
  %1293 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 38
  %1294 = load i8, i8* %1293, align 8
  switch i8 %1294, label %1423 [
    i8 1, label %1295
    i8 2, label %1332
    i8 3, label %1369
  ]

1295:                                             ; preds = %1292
  %1296 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1296) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 8) #17
  %1297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %1298 = bitcast %"class.WTF::String"* %35 to i64*
  %1299 = load i64, i64* %1298, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1297, align 8
  %1300 = inttoptr i64 %1262 to %"class.WTF::StringImpl"*
  %1301 = icmp eq i64 %1262, 0
  br i1 %1301, label %1331, label %1302

1302:                                             ; preds = %1295
  %1303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1304 = load atomic i32, i32* %1303 monotonic, align 4
  %1305 = and i32 %1304, 2
  %1306 = icmp eq i32 %1305, 0
  %1307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1300, i64 0, i32 0
  %1308 = load i32, i32* %1307, align 4
  br i1 %1306, label %1309, label %1311

1309:                                             ; preds = %1302
  %1310 = add i32 %1308, -1
  store i32 %1310, i32* %1307, align 4
  br label %1311

1311:                                             ; preds = %1309, %1302
  %1312 = phi i32 [ %1310, %1309 ], [ %1308, %1302 ]
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1314, label %1315

1314:                                             ; preds = %1311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1300) #17
  br label %1315

1315:                                             ; preds = %1311, %1314
  %1316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1297, align 8
  %1317 = icmp eq %"class.WTF::StringImpl"* %1316, null
  br i1 %1317, label %1331, label %1318

1318:                                             ; preds = %1315
  %1319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1320 = load atomic i32, i32* %1319 monotonic, align 4
  %1321 = and i32 %1320, 2
  %1322 = icmp eq i32 %1321, 0
  %1323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 0
  %1324 = load i32, i32* %1323, align 4
  br i1 %1322, label %1325, label %1327

1325:                                             ; preds = %1318
  %1326 = add i32 %1324, -1
  store i32 %1326, i32* %1323, align 4
  br label %1327

1327:                                             ; preds = %1325, %1318
  %1328 = phi i32 [ %1326, %1325 ], [ %1324, %1318 ]
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1331

1330:                                             ; preds = %1327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1316) #17
  br label %1331

1331:                                             ; preds = %1295, %1315, %1327, %1330
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1296) #17
  br label %1423

1332:                                             ; preds = %1292
  %1333 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1333) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #17
  %1334 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %1335 = bitcast %"class.WTF::String"* %36 to i64*
  %1336 = load i64, i64* %1335, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1334, align 8
  %1337 = inttoptr i64 %1262 to %"class.WTF::StringImpl"*
  %1338 = icmp eq i64 %1262, 0
  br i1 %1338, label %1368, label %1339

1339:                                             ; preds = %1332
  %1340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1341 = load atomic i32, i32* %1340 monotonic, align 4
  %1342 = and i32 %1341, 2
  %1343 = icmp eq i32 %1342, 0
  %1344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1337, i64 0, i32 0
  %1345 = load i32, i32* %1344, align 4
  br i1 %1343, label %1346, label %1348

1346:                                             ; preds = %1339
  %1347 = add i32 %1345, -1
  store i32 %1347, i32* %1344, align 4
  br label %1348

1348:                                             ; preds = %1346, %1339
  %1349 = phi i32 [ %1347, %1346 ], [ %1345, %1339 ]
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %1351, label %1352

1351:                                             ; preds = %1348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1337) #17
  br label %1352

1352:                                             ; preds = %1348, %1351
  %1353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1334, align 8
  %1354 = icmp eq %"class.WTF::StringImpl"* %1353, null
  br i1 %1354, label %1368, label %1355

1355:                                             ; preds = %1352
  %1356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1357 = load atomic i32, i32* %1356 monotonic, align 4
  %1358 = and i32 %1357, 2
  %1359 = icmp eq i32 %1358, 0
  %1360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1353, i64 0, i32 0
  %1361 = load i32, i32* %1360, align 4
  br i1 %1359, label %1362, label %1364

1362:                                             ; preds = %1355
  %1363 = add i32 %1361, -1
  store i32 %1363, i32* %1360, align 4
  br label %1364

1364:                                             ; preds = %1362, %1355
  %1365 = phi i32 [ %1363, %1362 ], [ %1361, %1355 ]
  %1366 = icmp eq i32 %1365, 0
  br i1 %1366, label %1367, label %1368

1367:                                             ; preds = %1364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1353) #17
  br label %1368

1368:                                             ; preds = %1332, %1352, %1364, %1367
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1333) #17
  br label %1423

1369:                                             ; preds = %1292
  %1370 = bitcast %"class.WTF::String"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1370) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i64 8) #17
  %1371 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %1372 = bitcast %"class.WTF::String"* %37 to i64*
  %1373 = load i64, i64* %1372, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1371, align 8
  %1374 = inttoptr i64 %1262 to %"class.WTF::StringImpl"*
  %1375 = icmp eq i64 %1262, 0
  br i1 %1375, label %1405, label %1376

1376:                                             ; preds = %1369
  %1377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1378 = load atomic i32, i32* %1377 monotonic, align 4
  %1379 = and i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1374, i64 0, i32 0
  %1382 = load i32, i32* %1381, align 4
  br i1 %1380, label %1383, label %1385

1383:                                             ; preds = %1376
  %1384 = add i32 %1382, -1
  store i32 %1384, i32* %1381, align 4
  br label %1385

1385:                                             ; preds = %1383, %1376
  %1386 = phi i32 [ %1384, %1383 ], [ %1382, %1376 ]
  %1387 = icmp eq i32 %1386, 0
  br i1 %1387, label %1388, label %1389

1388:                                             ; preds = %1385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1374) #17
  br label %1389

1389:                                             ; preds = %1385, %1388
  %1390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1371, align 8
  %1391 = icmp eq %"class.WTF::StringImpl"* %1390, null
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1389
  %1393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1394 = load atomic i32, i32* %1393 monotonic, align 4
  %1395 = and i32 %1394, 2
  %1396 = icmp eq i32 %1395, 0
  %1397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 0
  %1398 = load i32, i32* %1397, align 4
  br i1 %1396, label %1399, label %1401

1399:                                             ; preds = %1392
  %1400 = add i32 %1398, -1
  store i32 %1400, i32* %1397, align 4
  br label %1401

1401:                                             ; preds = %1399, %1392
  %1402 = phi i32 [ %1400, %1399 ], [ %1398, %1392 ]
  %1403 = icmp eq i32 %1402, 0
  br i1 %1403, label %1404, label %1405

1404:                                             ; preds = %1401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1390) #17
  br label %1405

1405:                                             ; preds = %1369, %1389, %1401, %1404
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1370) #17
  br label %1423

1406:                                             ; preds = %1256
  %1407 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %0) #17
  %1408 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %1407) #17
  %1409 = ptrtoint %"class.WTF::StringImpl"* %1408 to i64
  br i1 %1181, label %1423, label %1410

1410:                                             ; preds = %1406
  %1411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1412 = load atomic i32, i32* %1411 monotonic, align 4
  %1413 = and i32 %1412, 2
  %1414 = icmp eq i32 %1413, 0
  %1415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1416 = load i32, i32* %1415, align 4
  br i1 %1414, label %1417, label %1419

1417:                                             ; preds = %1410
  %1418 = add i32 %1416, -1
  store i32 %1418, i32* %1415, align 4
  br label %1419

1419:                                             ; preds = %1417, %1410
  %1420 = phi i32 [ %1418, %1417 ], [ %1416, %1410 ]
  %1421 = icmp eq i32 %1420, 0
  br i1 %1421, label %1422, label %1423

1422:                                             ; preds = %1419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #17
  br label %1423

1423:                                             ; preds = %1292, %1406, %1419, %1422, %1255, %1331, %1405, %1368, %1203
  %1424 = phi i64 [ %1225, %1255 ], [ %1299, %1331 ], [ %1336, %1368 ], [ %1373, %1405 ], [ %1180, %1203 ], [ %1409, %1422 ], [ %1409, %1419 ], [ %1409, %1406 ], [ %1262, %1292 ]
  %1425 = inttoptr i64 %1424 to %"class.WTF::StringImpl"*
  %1426 = icmp eq i64 %1424, 0
  br i1 %1426, label %1444, label %1427

1427:                                             ; preds = %1423
  %1428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1429 = load atomic i32, i32* %1428 monotonic, align 4
  %1430 = and i32 %1429, 2
  %1431 = icmp eq i32 %1430, 0
  br i1 %1431, label %1432, label %1444

1432:                                             ; preds = %1427
  %1433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 0
  %1434 = load i32, i32* %1433, align 4
  %1435 = zext i32 %1434 to i33
  %1436 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1435, i33 1) #17
  %1437 = extractvalue { i33, i1 } %1436, 1
  %1438 = extractvalue { i33, i1 } %1436, 0
  %1439 = icmp slt i33 %1438, 0
  %1440 = or i1 %1437, %1439
  br i1 %1440, label %1441, label %1442, !prof !4

1441:                                             ; preds = %1432
  call void @llvm.trap() #17
  unreachable

1442:                                             ; preds = %1432
  %1443 = trunc i33 %1438 to i32
  store i32 %1443, i32* %1433, align 4
  br label %1444

1444:                                             ; preds = %1423, %1427, %1442
  %1445 = bitcast i8* %450 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %1445, %"class.WTF::StringImpl"* %1425) #17
  %1446 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 0
  %1447 = load i8, i8* %1446, align 8, !range !2
  %1448 = icmp eq i8 %1447, 0
  br i1 %1448, label %2309, label %1449

1449:                                             ; preds = %1444
  %1450 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0, i32 0
  %1451 = load %"class.WTF::String"*, %"class.WTF::String"** %1450, align 8
  %1452 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0, i32 2
  %1453 = load i32, i32* %1452, align 4
  %1454 = zext i32 %1453 to i64
  %1455 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1451, i64 %1454
  %1456 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1456, i8 0, i64 24, i1 false) #17
  %1457 = icmp eq i32 %1453, 0
  br i1 %1457, label %1500, label %1458

1458:                                             ; preds = %1449
  %1459 = shl nuw nsw i64 %1454, 3
  %1460 = call i8* @_Znwm(i64 %1459) #18
  %1461 = bitcast i8* %1460 to %"class.WTF::String"*
  %1462 = getelementptr inbounds i8, i8* %1456, i64 8
  %1463 = bitcast i8* %1462 to i8**
  store i8* %1460, i8** %1463, align 8
  %1464 = bitcast i8* %1456 to i8**
  store i8* %1460, i8** %1464, align 8
  %1465 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1461, i64 %1454
  %1466 = getelementptr inbounds i8, i8* %1456, i64 16
  %1467 = bitcast i8* %1466 to %"class.WTF::String"**
  store %"class.WTF::String"* %1465, %"class.WTF::String"** %1467, align 8
  %1468 = bitcast i8* %1462 to i64*
  br label %1469

1469:                                             ; preds = %1458, %1493
  %1470 = phi %"class.WTF::String"* [ %1495, %1493 ], [ %1461, %1458 ]
  %1471 = phi %"class.WTF::String"* [ %1494, %1493 ], [ %1451, %1458 ]
  %1472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1471, i64 0, i32 0, i32 0
  %1473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1472, align 8
  %1474 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1470, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1473, %"class.WTF::StringImpl"** %1474, align 8
  %1475 = icmp eq %"class.WTF::StringImpl"* %1473, null
  br i1 %1475, label %1493, label %1476

1476:                                             ; preds = %1469
  %1477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1478 = load atomic i32, i32* %1477 monotonic, align 4
  %1479 = and i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1481, label %1493

1481:                                             ; preds = %1476
  %1482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1473, i64 0, i32 0
  %1483 = load i32, i32* %1482, align 4
  %1484 = zext i32 %1483 to i33
  %1485 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1484, i33 1) #17
  %1486 = extractvalue { i33, i1 } %1485, 1
  %1487 = extractvalue { i33, i1 } %1485, 0
  %1488 = icmp slt i33 %1487, 0
  %1489 = or i1 %1486, %1488
  br i1 %1489, label %1490, label %1491, !prof !4

1490:                                             ; preds = %1481
  call void @llvm.trap() #17
  unreachable

1491:                                             ; preds = %1481
  %1492 = trunc i33 %1487 to i32
  store i32 %1492, i32* %1482, align 4
  br label %1493

1493:                                             ; preds = %1491, %1476, %1469
  %1494 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1471, i64 1
  %1495 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1470, i64 1
  %1496 = icmp eq %"class.WTF::String"* %1494, %1455
  br i1 %1496, label %1497, label %1469

1497:                                             ; preds = %1493
  %1498 = ptrtoint %"class.WTF::String"* %1495 to i64
  store i64 %1498, i64* %1468, align 8
  %1499 = load i8, i8* %1446, align 8, !range !2
  br label %1500

1500:                                             ; preds = %1449, %1497
  %1501 = phi i8 [ 1, %1449 ], [ %1499, %1497 ]
  %1502 = ptrtoint i8* %1456 to i64
  %1503 = call i8* @_Znwm(i64 24) #18
  %1504 = bitcast i8* %1503 to %"class.std::__1::vector.3387"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1503, i8 0, i64 24, i1 false) #17
  %1505 = ptrtoint i8* %1503 to i64
  %1506 = icmp eq i8 %1501, 0
  br i1 %1506, label %1507, label %1508, !prof !4

1507:                                             ; preds = %1500
  call void @llvm.trap() #17
  unreachable

1508:                                             ; preds = %1500
  %1509 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 11, i32 0, i32 0, i32 0
  %1510 = load %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, %"class.blink::ResourceResponse::SignedCertificateTimestamp"** %1509, align 8
  %1511 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 11, i32 0, i32 0, i32 2
  %1512 = load i32, i32* %1511, align 4
  %1513 = zext i32 %1512 to i64
  %1514 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1510, i64 %1513
  %1515 = icmp eq i32 %1512, 0
  br i1 %1515, label %1527, label %1516

1516:                                             ; preds = %1508
  %1517 = bitcast %"class.std::__1::unique_ptr.3389"* %38 to i8*
  %1518 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %38, i64 0, i32 0, i32 0, i32 0
  %1519 = bitcast %"class.std::__1::unique_ptr.3389"* %38 to i8**
  %1520 = getelementptr inbounds i8, i8* %1503, i64 8
  %1521 = bitcast i8* %1520 to %"class.std::__1::unique_ptr.3389"**
  %1522 = getelementptr inbounds i8, i8* %1503, i64 16
  %1523 = bitcast i8* %1522 to %"class.std::__1::unique_ptr.3389"**
  %1524 = bitcast i8* %1520 to i64*
  br label %1929

1525:                                             ; preds = %2244
  %1526 = load i8, i8* %1446, align 8, !range !2
  br label %1527

1527:                                             ; preds = %1525, %1508
  %1528 = phi i8 [ %1526, %1525 ], [ 1, %1508 ]
  %1529 = call i8* @_Znwm(i64 128) #18
  %1530 = bitcast i8* %1529 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network15SecurityDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1530, align 8
  %1531 = getelementptr inbounds i8, i8* %1529, i64 8
  %1532 = getelementptr inbounds i8, i8* %1529, i64 32
  %1533 = getelementptr inbounds i8, i8* %1529, i64 56
  %1534 = bitcast i8* %1533 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1534, align 8
  %1535 = getelementptr inbounds i8, i8* %1529, i64 72
  %1536 = getelementptr inbounds i8, i8* %1529, i64 64
  %1537 = bitcast i8* %1536 to i32*
  store i32 0, i32* %1537, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1531, i8 0, i64 17, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %1532, i8 0, i64 17, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %1535, i8 0, i64 56, i1 false) #17
  %1538 = icmp eq i8 %1528, 0
  br i1 %1538, label %1539, label %1540, !prof !4

1539:                                             ; preds = %1527
  call void @llvm.trap() #17
  unreachable

1540:                                             ; preds = %1527
  %1541 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1541, align 8
  %1543 = icmp eq %"class.WTF::StringImpl"* %1542, null
  br i1 %1543, label %1559, label %1544

1544:                                             ; preds = %1540
  %1545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1546 = load atomic i32, i32* %1545 monotonic, align 4
  %1547 = and i32 %1546, 2
  %1548 = icmp eq i32 %1547, 0
  br i1 %1548, label %1549, label %1559

1549:                                             ; preds = %1544
  %1550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1542, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 4
  %1552 = zext i32 %1551 to i33
  %1553 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1552, i33 1) #17
  %1554 = extractvalue { i33, i1 } %1553, 1
  %1555 = extractvalue { i33, i1 } %1553, 0
  %1556 = icmp slt i33 %1555, 0
  %1557 = or i1 %1554, %1556
  br i1 %1557, label %1558, label %1562, !prof !4

1558:                                             ; preds = %1549
  call void @llvm.trap() #17
  unreachable

1559:                                             ; preds = %1544, %1540
  %1560 = ptrtoint %"class.WTF::StringImpl"* %1542 to i64
  %1561 = bitcast i8* %1531 to i64*
  store i64 %1560, i64* %1561, align 8
  br label %1582

1562:                                             ; preds = %1549
  %1563 = trunc i33 %1555 to i32
  store i32 %1563, i32* %1550, align 4
  %1564 = bitcast i8* %1531 to %"class.WTF::StringImpl"**
  %1565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1564, align 8
  %1566 = ptrtoint %"class.WTF::StringImpl"* %1542 to i64
  %1567 = bitcast i8* %1531 to i64*
  store i64 %1566, i64* %1567, align 8
  %1568 = icmp eq %"class.WTF::StringImpl"* %1565, null
  br i1 %1568, label %1582, label %1569

1569:                                             ; preds = %1562
  %1570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1571 = load atomic i32, i32* %1570 monotonic, align 4
  %1572 = and i32 %1571, 2
  %1573 = icmp eq i32 %1572, 0
  %1574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1565, i64 0, i32 0
  %1575 = load i32, i32* %1574, align 4
  br i1 %1573, label %1576, label %1578

1576:                                             ; preds = %1569
  %1577 = add i32 %1575, -1
  store i32 %1577, i32* %1574, align 4
  br label %1578

1578:                                             ; preds = %1576, %1569
  %1579 = phi i32 [ %1577, %1576 ], [ %1575, %1569 ]
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1581, label %1582

1581:                                             ; preds = %1578
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1565) #17
  br label %1582

1582:                                             ; preds = %1559, %1562, %1578, %1581
  %1583 = load i8, i8* %1446, align 8, !range !2
  %1584 = icmp eq i8 %1583, 0
  br i1 %1584, label %1585, label %1586, !prof !4

1585:                                             ; preds = %1582
  call void @llvm.trap() #17
  unreachable

1586:                                             ; preds = %1582
  %1587 = getelementptr inbounds i8, i8* %1529, i64 16
  %1588 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %1589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1588, align 8
  %1590 = icmp eq %"class.WTF::StringImpl"* %1589, null
  br i1 %1590, label %1608, label %1591

1591:                                             ; preds = %1586
  %1592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1593 = load atomic i32, i32* %1592 monotonic, align 4
  %1594 = and i32 %1593, 2
  %1595 = icmp eq i32 %1594, 0
  br i1 %1595, label %1596, label %1608

1596:                                             ; preds = %1591
  %1597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1589, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4
  %1599 = zext i32 %1598 to i33
  %1600 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1599, i33 1) #17
  %1601 = extractvalue { i33, i1 } %1600, 1
  %1602 = extractvalue { i33, i1 } %1600, 0
  %1603 = icmp slt i33 %1602, 0
  %1604 = or i1 %1601, %1603
  br i1 %1604, label %1605, label %1606, !prof !4

1605:                                             ; preds = %1596
  call void @llvm.trap() #17
  unreachable

1606:                                             ; preds = %1596
  %1607 = trunc i33 %1602 to i32
  store i32 %1607, i32* %1597, align 4
  br label %1608

1608:                                             ; preds = %1606, %1591, %1586
  %1609 = ptrtoint %"class.WTF::StringImpl"* %1589 to i64
  %1610 = bitcast i8* %1587 to i64*
  %1611 = bitcast i8* %1587 to %"class.WTF::StringImpl"**
  %1612 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1611, align 8
  store i64 %1609, i64* %1610, align 8
  %1613 = icmp eq %"class.WTF::StringImpl"* %1612, null
  br i1 %1613, label %1627, label %1614

1614:                                             ; preds = %1608
  %1615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1612, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1616 = load atomic i32, i32* %1615 monotonic, align 4
  %1617 = and i32 %1616, 2
  %1618 = icmp eq i32 %1617, 0
  %1619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1612, i64 0, i32 0
  %1620 = load i32, i32* %1619, align 4
  br i1 %1618, label %1621, label %1623

1621:                                             ; preds = %1614
  %1622 = add i32 %1620, -1
  store i32 %1622, i32* %1619, align 4
  br label %1623

1623:                                             ; preds = %1621, %1614
  %1624 = phi i32 [ %1622, %1621 ], [ %1620, %1614 ]
  %1625 = icmp eq i32 %1624, 0
  br i1 %1625, label %1626, label %1627

1626:                                             ; preds = %1623
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1612) #17
  br label %1627

1627:                                             ; preds = %1608, %1623, %1626
  %1628 = load i8, i8* %1446, align 8, !range !2
  %1629 = icmp eq i8 %1628, 0
  br i1 %1629, label %1630, label %1631, !prof !4

1630:                                             ; preds = %1627
  call void @llvm.trap() #17
  unreachable

1631:                                             ; preds = %1627
  %1632 = getelementptr inbounds i8, i8* %1529, i64 40
  %1633 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %1634 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1633, align 8
  %1635 = icmp eq %"class.WTF::StringImpl"* %1634, null
  br i1 %1635, label %1653, label %1636

1636:                                             ; preds = %1631
  %1637 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1634, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1638 = load atomic i32, i32* %1637 monotonic, align 4
  %1639 = and i32 %1638, 2
  %1640 = icmp eq i32 %1639, 0
  br i1 %1640, label %1641, label %1653

1641:                                             ; preds = %1636
  %1642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1634, i64 0, i32 0
  %1643 = load i32, i32* %1642, align 4
  %1644 = zext i32 %1643 to i33
  %1645 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1644, i33 1) #17
  %1646 = extractvalue { i33, i1 } %1645, 1
  %1647 = extractvalue { i33, i1 } %1645, 0
  %1648 = icmp slt i33 %1647, 0
  %1649 = or i1 %1646, %1648
  br i1 %1649, label %1650, label %1651, !prof !4

1650:                                             ; preds = %1641
  call void @llvm.trap() #17
  unreachable

1651:                                             ; preds = %1641
  %1652 = trunc i33 %1647 to i32
  store i32 %1652, i32* %1642, align 4
  br label %1653

1653:                                             ; preds = %1651, %1636, %1631
  %1654 = ptrtoint %"class.WTF::StringImpl"* %1634 to i64
  %1655 = bitcast i8* %1632 to i64*
  %1656 = bitcast i8* %1632 to %"class.WTF::StringImpl"**
  %1657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1656, align 8
  store i64 %1654, i64* %1655, align 8
  %1658 = icmp eq %"class.WTF::StringImpl"* %1657, null
  br i1 %1658, label %1672, label %1659

1659:                                             ; preds = %1653
  %1660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1657, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1661 = load atomic i32, i32* %1660 monotonic, align 4
  %1662 = and i32 %1661, 2
  %1663 = icmp eq i32 %1662, 0
  %1664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1657, i64 0, i32 0
  %1665 = load i32, i32* %1664, align 4
  br i1 %1663, label %1666, label %1668

1666:                                             ; preds = %1659
  %1667 = add i32 %1665, -1
  store i32 %1667, i32* %1664, align 4
  br label %1668

1668:                                             ; preds = %1666, %1659
  %1669 = phi i32 [ %1667, %1666 ], [ %1665, %1659 ]
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %1671, label %1672

1671:                                             ; preds = %1668
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1657) #17
  br label %1672

1672:                                             ; preds = %1653, %1668, %1671
  %1673 = load i8, i8* %1446, align 8, !range !2
  %1674 = icmp eq i8 %1673, 0
  br i1 %1674, label %1675, label %1676, !prof !4

1675:                                             ; preds = %1672
  call void @llvm.trap() #17
  unreachable

1676:                                             ; preds = %1672
  %1677 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 0
  %1678 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1677, align 8
  %1679 = icmp eq %"class.WTF::StringImpl"* %1678, null
  br i1 %1679, label %1697, label %1680

1680:                                             ; preds = %1676
  %1681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1678, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1682 = load atomic i32, i32* %1681 monotonic, align 4
  %1683 = and i32 %1682, 2
  %1684 = icmp eq i32 %1683, 0
  br i1 %1684, label %1685, label %1697

1685:                                             ; preds = %1680
  %1686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1678, i64 0, i32 0
  %1687 = load i32, i32* %1686, align 4
  %1688 = zext i32 %1687 to i33
  %1689 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1688, i33 1) #17
  %1690 = extractvalue { i33, i1 } %1689, 1
  %1691 = extractvalue { i33, i1 } %1689, 0
  %1692 = icmp slt i33 %1691, 0
  %1693 = or i1 %1690, %1692
  br i1 %1693, label %1694, label %1695, !prof !4

1694:                                             ; preds = %1685
  call void @llvm.trap() #17
  unreachable

1695:                                             ; preds = %1685
  %1696 = trunc i33 %1691 to i32
  store i32 %1696, i32* %1686, align 4
  br label %1697

1697:                                             ; preds = %1695, %1680, %1676
  %1698 = ptrtoint %"class.WTF::StringImpl"* %1678 to i64
  %1699 = bitcast i8* %1535 to i64*
  %1700 = bitcast i8* %1535 to %"class.WTF::StringImpl"**
  %1701 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1700, align 8
  store i64 %1698, i64* %1699, align 8
  %1702 = icmp eq %"class.WTF::StringImpl"* %1701, null
  br i1 %1702, label %1716, label %1703

1703:                                             ; preds = %1697
  %1704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1701, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1705 = load atomic i32, i32* %1704 monotonic, align 4
  %1706 = and i32 %1705, 2
  %1707 = icmp eq i32 %1706, 0
  %1708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1701, i64 0, i32 0
  %1709 = load i32, i32* %1708, align 4
  br i1 %1707, label %1710, label %1712

1710:                                             ; preds = %1703
  %1711 = add i32 %1709, -1
  store i32 %1711, i32* %1708, align 4
  br label %1712

1712:                                             ; preds = %1710, %1703
  %1713 = phi i32 [ %1711, %1710 ], [ %1709, %1703 ]
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1715, label %1716

1715:                                             ; preds = %1712
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1701) #17
  br label %1716

1716:                                             ; preds = %1697, %1712, %1715
  %1717 = getelementptr inbounds i8, i8* %1529, i64 80
  %1718 = bitcast i8* %1717 to %"class.std::__1::vector.2044"**
  %1719 = load %"class.std::__1::vector.2044"*, %"class.std::__1::vector.2044"** %1718, align 8
  %1720 = bitcast i8* %1717 to i64*
  store i64 %1502, i64* %1720, align 8
  %1721 = icmp eq %"class.std::__1::vector.2044"* %1719, null
  br i1 %1721, label %1759, label %1722

1722:                                             ; preds = %1716
  %1723 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %1719, i64 0, i32 0, i32 0
  %1724 = load %"class.WTF::String"*, %"class.WTF::String"** %1723, align 8
  %1725 = icmp eq %"class.WTF::String"* %1724, null
  br i1 %1725, label %1757, label %1726

1726:                                             ; preds = %1722
  %1727 = bitcast %"class.WTF::String"* %1724 to i8*
  %1728 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %1719, i64 0, i32 0, i32 1
  %1729 = load %"class.WTF::String"*, %"class.WTF::String"** %1728, align 8
  %1730 = icmp eq %"class.WTF::String"* %1729, %1724
  br i1 %1730, label %1755, label %1731

1731:                                             ; preds = %1726, %1750
  %1732 = phi %"class.WTF::String"* [ %1733, %1750 ], [ %1729, %1726 ]
  %1733 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1732, i64 -1
  %1734 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1733, i64 0, i32 0, i32 0
  %1735 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1734, align 8
  %1736 = icmp eq %"class.WTF::StringImpl"* %1735, null
  br i1 %1736, label %1750, label %1737

1737:                                             ; preds = %1731
  %1738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1735, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1739 = load atomic i32, i32* %1738 monotonic, align 4
  %1740 = and i32 %1739, 2
  %1741 = icmp eq i32 %1740, 0
  %1742 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1735, i64 0, i32 0
  %1743 = load i32, i32* %1742, align 4
  br i1 %1741, label %1744, label %1746

1744:                                             ; preds = %1737
  %1745 = add i32 %1743, -1
  store i32 %1745, i32* %1742, align 4
  br label %1746

1746:                                             ; preds = %1744, %1737
  %1747 = phi i32 [ %1745, %1744 ], [ %1743, %1737 ]
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %1749, label %1750

1749:                                             ; preds = %1746
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1735) #17
  br label %1750

1750:                                             ; preds = %1749, %1746, %1731
  %1751 = icmp eq %"class.WTF::String"* %1733, %1724
  br i1 %1751, label %1752, label %1731

1752:                                             ; preds = %1750
  %1753 = bitcast %"class.std::__1::vector.2044"* %1719 to i8**
  %1754 = load i8*, i8** %1753, align 8
  br label %1755

1755:                                             ; preds = %1752, %1726
  %1756 = phi i8* [ %1754, %1752 ], [ %1727, %1726 ]
  store %"class.WTF::String"* %1724, %"class.WTF::String"** %1728, align 8
  call void @_ZdlPv(i8* %1756) #18
  br label %1757

1757:                                             ; preds = %1755, %1722
  %1758 = bitcast %"class.std::__1::vector.2044"* %1719 to i8*
  call void @_ZdlPv(i8* %1758) #18
  br label %1759

1759:                                             ; preds = %1716, %1757
  %1760 = load i8, i8* %1446, align 8, !range !2
  %1761 = icmp eq i8 %1760, 0
  br i1 %1761, label %1762, label %1763, !prof !4

1762:                                             ; preds = %1759
  call void @llvm.trap() #17
  unreachable

1763:                                             ; preds = %1759
  %1764 = getelementptr inbounds i8, i8* %1529, i64 88
  %1765 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 7, i32 0, i32 0
  %1766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1765, align 8
  %1767 = icmp eq %"class.WTF::StringImpl"* %1766, null
  br i1 %1767, label %1785, label %1768

1768:                                             ; preds = %1763
  %1769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1770 = load atomic i32, i32* %1769 monotonic, align 4
  %1771 = and i32 %1770, 2
  %1772 = icmp eq i32 %1771, 0
  br i1 %1772, label %1773, label %1785

1773:                                             ; preds = %1768
  %1774 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 0
  %1775 = load i32, i32* %1774, align 4
  %1776 = zext i32 %1775 to i33
  %1777 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1776, i33 1) #17
  %1778 = extractvalue { i33, i1 } %1777, 1
  %1779 = extractvalue { i33, i1 } %1777, 0
  %1780 = icmp slt i33 %1779, 0
  %1781 = or i1 %1778, %1780
  br i1 %1781, label %1782, label %1783, !prof !4

1782:                                             ; preds = %1773
  call void @llvm.trap() #17
  unreachable

1783:                                             ; preds = %1773
  %1784 = trunc i33 %1779 to i32
  store i32 %1784, i32* %1774, align 4
  br label %1785

1785:                                             ; preds = %1783, %1768, %1763
  %1786 = ptrtoint %"class.WTF::StringImpl"* %1766 to i64
  %1787 = bitcast i8* %1764 to i64*
  %1788 = bitcast i8* %1764 to %"class.WTF::StringImpl"**
  %1789 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1788, align 8
  store i64 %1786, i64* %1787, align 8
  %1790 = icmp eq %"class.WTF::StringImpl"* %1789, null
  br i1 %1790, label %1804, label %1791

1791:                                             ; preds = %1785
  %1792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1789, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1793 = load atomic i32, i32* %1792 monotonic, align 4
  %1794 = and i32 %1793, 2
  %1795 = icmp eq i32 %1794, 0
  %1796 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1789, i64 0, i32 0
  %1797 = load i32, i32* %1796, align 4
  br i1 %1795, label %1798, label %1800

1798:                                             ; preds = %1791
  %1799 = add i32 %1797, -1
  store i32 %1799, i32* %1796, align 4
  br label %1800

1800:                                             ; preds = %1798, %1791
  %1801 = phi i32 [ %1799, %1798 ], [ %1797, %1791 ]
  %1802 = icmp eq i32 %1801, 0
  br i1 %1802, label %1803, label %1804

1803:                                             ; preds = %1800
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1789) #17
  br label %1804

1804:                                             ; preds = %1785, %1800, %1803
  %1805 = load i8, i8* %1446, align 8, !range !2
  %1806 = icmp eq i8 %1805, 0
  br i1 %1806, label %1807, label %1808, !prof !4

1807:                                             ; preds = %1804
  call void @llvm.trap() #17
  unreachable

1808:                                             ; preds = %1804
  %1809 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 8
  %1810 = load i64, i64* %1809, align 8
  %1811 = sitofp i64 %1810 to double
  %1812 = getelementptr inbounds i8, i8* %1529, i64 96
  %1813 = bitcast i8* %1812 to double*
  store double %1811, double* %1813, align 8
  %1814 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 9
  %1815 = load i64, i64* %1814, align 8
  %1816 = sitofp i64 %1815 to double
  %1817 = getelementptr inbounds i8, i8* %1529, i64 104
  %1818 = bitcast i8* %1817 to double*
  store double %1816, double* %1818, align 8
  store i32 0, i32* %1537, align 8
  %1819 = getelementptr inbounds i8, i8* %1529, i64 112
  %1820 = bitcast i8* %1819 to %"class.std::__1::vector.3387"**
  %1821 = load %"class.std::__1::vector.3387"*, %"class.std::__1::vector.3387"** %1820, align 8
  %1822 = bitcast i8* %1819 to i64*
  store i64 %1505, i64* %1822, align 8
  %1823 = icmp eq %"class.std::__1::vector.3387"* %1821, null
  br i1 %1823, label %1853, label %1824

1824:                                             ; preds = %1808
  %1825 = getelementptr inbounds %"class.std::__1::vector.3387", %"class.std::__1::vector.3387"* %1821, i64 0, i32 0, i32 0
  %1826 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %1825, align 8
  %1827 = icmp eq %"class.std::__1::unique_ptr.3389"* %1826, null
  br i1 %1827, label %1851, label %1828

1828:                                             ; preds = %1824
  %1829 = bitcast %"class.std::__1::unique_ptr.3389"* %1826 to i8*
  %1830 = getelementptr inbounds %"class.std::__1::vector.3387", %"class.std::__1::vector.3387"* %1821, i64 0, i32 0, i32 1
  %1831 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %1830, align 8
  %1832 = icmp eq %"class.std::__1::unique_ptr.3389"* %1831, %1826
  br i1 %1832, label %1849, label %1833

1833:                                             ; preds = %1828, %1844
  %1834 = phi %"class.std::__1::unique_ptr.3389"* [ %1835, %1844 ], [ %1831, %1828 ]
  %1835 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %1834, i64 -1
  %1836 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %1835, i64 0, i32 0, i32 0, i32 0
  %1837 = load %"class.blink::protocol::Network::SignedCertificateTimestamp"*, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1836, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1836, align 8
  %1838 = icmp eq %"class.blink::protocol::Network::SignedCertificateTimestamp"* %1837, null
  br i1 %1838, label %1844, label %1839

1839:                                             ; preds = %1833
  %1840 = bitcast %"class.blink::protocol::Network::SignedCertificateTimestamp"* %1837 to void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)***
  %1841 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)**, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*** %1840, align 8
  %1842 = getelementptr inbounds void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %1841, i64 2
  %1843 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %1842, align 8
  call void %1843(%"class.blink::protocol::Network::SignedCertificateTimestamp"* nonnull %1837) #17
  br label %1844

1844:                                             ; preds = %1839, %1833
  %1845 = icmp eq %"class.std::__1::unique_ptr.3389"* %1835, %1826
  br i1 %1845, label %1846, label %1833

1846:                                             ; preds = %1844
  %1847 = bitcast %"class.std::__1::vector.3387"* %1821 to i8**
  %1848 = load i8*, i8** %1847, align 8
  br label %1849

1849:                                             ; preds = %1846, %1828
  %1850 = phi i8* [ %1848, %1846 ], [ %1829, %1828 ]
  store %"class.std::__1::unique_ptr.3389"* %1826, %"class.std::__1::unique_ptr.3389"** %1830, align 8
  call void @_ZdlPv(i8* %1850) #18
  br label %1851

1851:                                             ; preds = %1849, %1824
  %1852 = bitcast %"class.std::__1::vector.3387"* %1821 to i8*
  call void @_ZdlPv(i8* %1852) #18
  br label %1853

1853:                                             ; preds = %1808, %1851
  %1854 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 18
  %1855 = load i32, i32* %1854, align 8
  %1856 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1856)
  switch i32 %1855, label %1859 [
    i32 2, label %1858
    i32 1, label %1857
  ]

1857:                                             ; preds = %1853
  br label %1859

1858:                                             ; preds = %1853
  br label %1859

1859:                                             ; preds = %1853, %1857, %1858
  %1860 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum9CompliantE, i64 0, i64 0), %1857 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum12NotCompliantE, i64 0, i64 0), %1858 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network37CertificateTransparencyComplianceEnum7UnknownE, i64 0, i64 0), %1853 ]
  %1861 = call i64 @strlen(i8* nonnull %1860) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %1860, i64 %1861) #17
  %1862 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %1863 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1862, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1856)
  %1864 = getelementptr inbounds i8, i8* %1529, i64 120
  %1865 = icmp eq %"class.WTF::StringImpl"* %1863, null
  br i1 %1865, label %1883, label %1866

1866:                                             ; preds = %1859
  %1867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1863, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1868 = load atomic i32, i32* %1867 monotonic, align 4
  %1869 = and i32 %1868, 2
  %1870 = icmp eq i32 %1869, 0
  br i1 %1870, label %1871, label %1883

1871:                                             ; preds = %1866
  %1872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1863, i64 0, i32 0
  %1873 = load i32, i32* %1872, align 4
  %1874 = zext i32 %1873 to i33
  %1875 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1874, i33 1) #17
  %1876 = extractvalue { i33, i1 } %1875, 1
  %1877 = extractvalue { i33, i1 } %1875, 0
  %1878 = icmp slt i33 %1877, 0
  %1879 = or i1 %1876, %1878
  br i1 %1879, label %1880, label %1881, !prof !4

1880:                                             ; preds = %1871
  call void @llvm.trap() #17
  unreachable

1881:                                             ; preds = %1871
  %1882 = trunc i33 %1877 to i32
  store i32 %1882, i32* %1872, align 4
  br label %1883

1883:                                             ; preds = %1881, %1866, %1859
  %1884 = ptrtoint %"class.WTF::StringImpl"* %1863 to i64
  %1885 = bitcast i8* %1864 to i64*
  %1886 = bitcast i8* %1864 to %"class.WTF::StringImpl"**
  %1887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1886, align 8
  store i64 %1884, i64* %1885, align 8
  %1888 = icmp eq %"class.WTF::StringImpl"* %1887, null
  br i1 %1888, label %1902, label %1889

1889:                                             ; preds = %1883
  %1890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1891 = load atomic i32, i32* %1890 monotonic, align 4
  %1892 = and i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1887, i64 0, i32 0
  %1895 = load i32, i32* %1894, align 4
  br i1 %1893, label %1896, label %1898

1896:                                             ; preds = %1889
  %1897 = add i32 %1895, -1
  store i32 %1897, i32* %1894, align 4
  br label %1898

1898:                                             ; preds = %1896, %1889
  %1899 = phi i32 [ %1897, %1896 ], [ %1895, %1889 ]
  %1900 = icmp eq i32 %1899, 0
  br i1 %1900, label %1901, label %1902

1901:                                             ; preds = %1898
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1887) #17
  br label %1902

1902:                                             ; preds = %1883, %1898, %1901
  %1903 = ptrtoint i8* %1529 to i64
  br i1 %1865, label %1917, label %1904

1904:                                             ; preds = %1902
  %1905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1863, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1906 = load atomic i32, i32* %1905 monotonic, align 4
  %1907 = and i32 %1906, 2
  %1908 = icmp eq i32 %1907, 0
  %1909 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1863, i64 0, i32 0
  %1910 = load i32, i32* %1909, align 4
  br i1 %1908, label %1911, label %1913

1911:                                             ; preds = %1904
  %1912 = add i32 %1910, -1
  store i32 %1912, i32* %1909, align 4
  br label %1913

1913:                                             ; preds = %1911, %1904
  %1914 = phi i32 [ %1912, %1911 ], [ %1910, %1904 ]
  %1915 = icmp eq i32 %1914, 0
  br i1 %1915, label %1916, label %1917

1916:                                             ; preds = %1913
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1863) #17
  br label %1917

1917:                                             ; preds = %1916, %1913, %1902
  %1918 = load i8, i8* %1446, align 8, !range !2
  %1919 = icmp eq i8 %1918, 0
  br i1 %1919, label %1920, label %1921, !prof !4

1920:                                             ; preds = %1917
  call void @llvm.trap() #17
  unreachable

1921:                                             ; preds = %1917
  %1922 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %1923 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1922, align 8
  %1924 = icmp eq %"class.WTF::StringImpl"* %1923, null
  br i1 %1924, label %2270, label %1925

1925:                                             ; preds = %1921
  %1926 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1923, i64 0, i32 1
  %1927 = load i32, i32* %1926, align 4
  %1928 = icmp eq i32 %1927, 0
  br i1 %1928, label %2270, label %2247

1929:                                             ; preds = %1516, %2244
  %1930 = phi %"class.blink::ResourceResponse::SignedCertificateTimestamp"* [ %1510, %1516 ], [ %2245, %2244 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1517) #17
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::Network::SignedCertificateTimestamp"*), %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1518, align 8
  %1931 = call i8* @_Znwm(i64 72) #18
  %1932 = bitcast i8* %1931 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network26SignedCertificateTimestampE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1932, align 8
  %1933 = getelementptr inbounds i8, i8* %1931, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %1933, i8 0, i64 64, i1 false) #17
  %1934 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 0, i32 0, i32 0
  %1935 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1934, align 8
  %1936 = icmp eq %"class.WTF::StringImpl"* %1935, null
  br i1 %1936, label %1952, label %1937

1937:                                             ; preds = %1929
  %1938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1935, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1939 = load atomic i32, i32* %1938 monotonic, align 4
  %1940 = and i32 %1939, 2
  %1941 = icmp eq i32 %1940, 0
  br i1 %1941, label %1942, label %1952

1942:                                             ; preds = %1937
  %1943 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1935, i64 0, i32 0
  %1944 = load i32, i32* %1943, align 4
  %1945 = zext i32 %1944 to i33
  %1946 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1945, i33 1) #17
  %1947 = extractvalue { i33, i1 } %1946, 1
  %1948 = extractvalue { i33, i1 } %1946, 0
  %1949 = icmp slt i33 %1948, 0
  %1950 = or i1 %1947, %1949
  br i1 %1950, label %1951, label %1955, !prof !4

1951:                                             ; preds = %1942
  call void @llvm.trap() #17
  unreachable

1952:                                             ; preds = %1937, %1929
  %1953 = ptrtoint %"class.WTF::StringImpl"* %1935 to i64
  %1954 = bitcast i8* %1933 to i64*
  store i64 %1953, i64* %1954, align 8
  br label %1975

1955:                                             ; preds = %1942
  %1956 = trunc i33 %1948 to i32
  store i32 %1956, i32* %1943, align 4
  %1957 = bitcast i8* %1933 to %"class.WTF::StringImpl"**
  %1958 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1957, align 8
  %1959 = ptrtoint %"class.WTF::StringImpl"* %1935 to i64
  %1960 = bitcast i8* %1933 to i64*
  store i64 %1959, i64* %1960, align 8
  %1961 = icmp eq %"class.WTF::StringImpl"* %1958, null
  br i1 %1961, label %1975, label %1962

1962:                                             ; preds = %1955
  %1963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1958, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1964 = load atomic i32, i32* %1963 monotonic, align 4
  %1965 = and i32 %1964, 2
  %1966 = icmp eq i32 %1965, 0
  %1967 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1958, i64 0, i32 0
  %1968 = load i32, i32* %1967, align 4
  br i1 %1966, label %1969, label %1971

1969:                                             ; preds = %1962
  %1970 = add i32 %1968, -1
  store i32 %1970, i32* %1967, align 4
  br label %1971

1971:                                             ; preds = %1969, %1962
  %1972 = phi i32 [ %1970, %1969 ], [ %1968, %1962 ]
  %1973 = icmp eq i32 %1972, 0
  br i1 %1973, label %1974, label %1975

1974:                                             ; preds = %1971
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1958) #17
  br label %1975

1975:                                             ; preds = %1952, %1955, %1971, %1974
  %1976 = getelementptr inbounds i8, i8* %1931, i64 16
  %1977 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 1, i32 0, i32 0
  %1978 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1977, align 8
  %1979 = icmp eq %"class.WTF::StringImpl"* %1978, null
  br i1 %1979, label %1997, label %1980

1980:                                             ; preds = %1975
  %1981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1978, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1982 = load atomic i32, i32* %1981 monotonic, align 4
  %1983 = and i32 %1982, 2
  %1984 = icmp eq i32 %1983, 0
  br i1 %1984, label %1985, label %1997

1985:                                             ; preds = %1980
  %1986 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1978, i64 0, i32 0
  %1987 = load i32, i32* %1986, align 4
  %1988 = zext i32 %1987 to i33
  %1989 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1988, i33 1) #17
  %1990 = extractvalue { i33, i1 } %1989, 1
  %1991 = extractvalue { i33, i1 } %1989, 0
  %1992 = icmp slt i33 %1991, 0
  %1993 = or i1 %1990, %1992
  br i1 %1993, label %1994, label %1995, !prof !4

1994:                                             ; preds = %1985
  call void @llvm.trap() #17
  unreachable

1995:                                             ; preds = %1985
  %1996 = trunc i33 %1991 to i32
  store i32 %1996, i32* %1986, align 4
  br label %1997

1997:                                             ; preds = %1995, %1980, %1975
  %1998 = ptrtoint %"class.WTF::StringImpl"* %1978 to i64
  %1999 = bitcast i8* %1976 to i64*
  %2000 = bitcast i8* %1976 to %"class.WTF::StringImpl"**
  %2001 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2000, align 8
  store i64 %1998, i64* %1999, align 8
  %2002 = icmp eq %"class.WTF::StringImpl"* %2001, null
  br i1 %2002, label %2016, label %2003

2003:                                             ; preds = %1997
  %2004 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2001, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2005 = load atomic i32, i32* %2004 monotonic, align 4
  %2006 = and i32 %2005, 2
  %2007 = icmp eq i32 %2006, 0
  %2008 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2001, i64 0, i32 0
  %2009 = load i32, i32* %2008, align 4
  br i1 %2007, label %2010, label %2012

2010:                                             ; preds = %2003
  %2011 = add i32 %2009, -1
  store i32 %2011, i32* %2008, align 4
  br label %2012

2012:                                             ; preds = %2010, %2003
  %2013 = phi i32 [ %2011, %2010 ], [ %2009, %2003 ]
  %2014 = icmp eq i32 %2013, 0
  br i1 %2014, label %2015, label %2016

2015:                                             ; preds = %2012
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2001) #17
  br label %2016

2016:                                             ; preds = %1997, %2012, %2015
  %2017 = getelementptr inbounds i8, i8* %1931, i64 24
  %2018 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 2, i32 0, i32 0
  %2019 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2018, align 8
  %2020 = icmp eq %"class.WTF::StringImpl"* %2019, null
  br i1 %2020, label %2038, label %2021

2021:                                             ; preds = %2016
  %2022 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2019, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2023 = load atomic i32, i32* %2022 monotonic, align 4
  %2024 = and i32 %2023, 2
  %2025 = icmp eq i32 %2024, 0
  br i1 %2025, label %2026, label %2038

2026:                                             ; preds = %2021
  %2027 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2019, i64 0, i32 0
  %2028 = load i32, i32* %2027, align 4
  %2029 = zext i32 %2028 to i33
  %2030 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2029, i33 1) #17
  %2031 = extractvalue { i33, i1 } %2030, 1
  %2032 = extractvalue { i33, i1 } %2030, 0
  %2033 = icmp slt i33 %2032, 0
  %2034 = or i1 %2031, %2033
  br i1 %2034, label %2035, label %2036, !prof !4

2035:                                             ; preds = %2026
  call void @llvm.trap() #17
  unreachable

2036:                                             ; preds = %2026
  %2037 = trunc i33 %2032 to i32
  store i32 %2037, i32* %2027, align 4
  br label %2038

2038:                                             ; preds = %2036, %2021, %2016
  %2039 = ptrtoint %"class.WTF::StringImpl"* %2019 to i64
  %2040 = bitcast i8* %2017 to i64*
  %2041 = bitcast i8* %2017 to %"class.WTF::StringImpl"**
  %2042 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2041, align 8
  store i64 %2039, i64* %2040, align 8
  %2043 = icmp eq %"class.WTF::StringImpl"* %2042, null
  br i1 %2043, label %2057, label %2044

2044:                                             ; preds = %2038
  %2045 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2042, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2046 = load atomic i32, i32* %2045 monotonic, align 4
  %2047 = and i32 %2046, 2
  %2048 = icmp eq i32 %2047, 0
  %2049 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2042, i64 0, i32 0
  %2050 = load i32, i32* %2049, align 4
  br i1 %2048, label %2051, label %2053

2051:                                             ; preds = %2044
  %2052 = add i32 %2050, -1
  store i32 %2052, i32* %2049, align 4
  br label %2053

2053:                                             ; preds = %2051, %2044
  %2054 = phi i32 [ %2052, %2051 ], [ %2050, %2044 ]
  %2055 = icmp eq i32 %2054, 0
  br i1 %2055, label %2056, label %2057

2056:                                             ; preds = %2053
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2042) #17
  br label %2057

2057:                                             ; preds = %2038, %2053, %2056
  %2058 = getelementptr inbounds i8, i8* %1931, i64 32
  %2059 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 3, i32 0, i32 0
  %2060 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2059, align 8
  %2061 = icmp eq %"class.WTF::StringImpl"* %2060, null
  br i1 %2061, label %2079, label %2062

2062:                                             ; preds = %2057
  %2063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2060, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2064 = load atomic i32, i32* %2063 monotonic, align 4
  %2065 = and i32 %2064, 2
  %2066 = icmp eq i32 %2065, 0
  br i1 %2066, label %2067, label %2079

2067:                                             ; preds = %2062
  %2068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2060, i64 0, i32 0
  %2069 = load i32, i32* %2068, align 4
  %2070 = zext i32 %2069 to i33
  %2071 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2070, i33 1) #17
  %2072 = extractvalue { i33, i1 } %2071, 1
  %2073 = extractvalue { i33, i1 } %2071, 0
  %2074 = icmp slt i33 %2073, 0
  %2075 = or i1 %2072, %2074
  br i1 %2075, label %2076, label %2077, !prof !4

2076:                                             ; preds = %2067
  call void @llvm.trap() #17
  unreachable

2077:                                             ; preds = %2067
  %2078 = trunc i33 %2073 to i32
  store i32 %2078, i32* %2068, align 4
  br label %2079

2079:                                             ; preds = %2077, %2062, %2057
  %2080 = ptrtoint %"class.WTF::StringImpl"* %2060 to i64
  %2081 = bitcast i8* %2058 to i64*
  %2082 = bitcast i8* %2058 to %"class.WTF::StringImpl"**
  %2083 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2082, align 8
  store i64 %2080, i64* %2081, align 8
  %2084 = icmp eq %"class.WTF::StringImpl"* %2083, null
  br i1 %2084, label %2098, label %2085

2085:                                             ; preds = %2079
  %2086 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2083, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2087 = load atomic i32, i32* %2086 monotonic, align 4
  %2088 = and i32 %2087, 2
  %2089 = icmp eq i32 %2088, 0
  %2090 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2083, i64 0, i32 0
  %2091 = load i32, i32* %2090, align 4
  br i1 %2089, label %2092, label %2094

2092:                                             ; preds = %2085
  %2093 = add i32 %2091, -1
  store i32 %2093, i32* %2090, align 4
  br label %2094

2094:                                             ; preds = %2092, %2085
  %2095 = phi i32 [ %2093, %2092 ], [ %2091, %2085 ]
  %2096 = icmp eq i32 %2095, 0
  br i1 %2096, label %2097, label %2098

2097:                                             ; preds = %2094
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2083) #17
  br label %2098

2098:                                             ; preds = %2079, %2094, %2097
  %2099 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 4
  %2100 = load i64, i64* %2099, align 8
  %2101 = sitofp i64 %2100 to double
  %2102 = getelementptr inbounds i8, i8* %1931, i64 40
  %2103 = bitcast i8* %2102 to double*
  store double %2101, double* %2103, align 8
  %2104 = getelementptr inbounds i8, i8* %1931, i64 48
  %2105 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 5, i32 0, i32 0
  %2106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2105, align 8
  %2107 = icmp eq %"class.WTF::StringImpl"* %2106, null
  br i1 %2107, label %2125, label %2108

2108:                                             ; preds = %2098
  %2109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2110 = load atomic i32, i32* %2109 monotonic, align 4
  %2111 = and i32 %2110, 2
  %2112 = icmp eq i32 %2111, 0
  br i1 %2112, label %2113, label %2125

2113:                                             ; preds = %2108
  %2114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2106, i64 0, i32 0
  %2115 = load i32, i32* %2114, align 4
  %2116 = zext i32 %2115 to i33
  %2117 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2116, i33 1) #17
  %2118 = extractvalue { i33, i1 } %2117, 1
  %2119 = extractvalue { i33, i1 } %2117, 0
  %2120 = icmp slt i33 %2119, 0
  %2121 = or i1 %2118, %2120
  br i1 %2121, label %2122, label %2123, !prof !4

2122:                                             ; preds = %2113
  call void @llvm.trap() #17
  unreachable

2123:                                             ; preds = %2113
  %2124 = trunc i33 %2119 to i32
  store i32 %2124, i32* %2114, align 4
  br label %2125

2125:                                             ; preds = %2123, %2108, %2098
  %2126 = ptrtoint %"class.WTF::StringImpl"* %2106 to i64
  %2127 = bitcast i8* %2104 to i64*
  %2128 = bitcast i8* %2104 to %"class.WTF::StringImpl"**
  %2129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2128, align 8
  store i64 %2126, i64* %2127, align 8
  %2130 = icmp eq %"class.WTF::StringImpl"* %2129, null
  br i1 %2130, label %2144, label %2131

2131:                                             ; preds = %2125
  %2132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2133 = load atomic i32, i32* %2132 monotonic, align 4
  %2134 = and i32 %2133, 2
  %2135 = icmp eq i32 %2134, 0
  %2136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2129, i64 0, i32 0
  %2137 = load i32, i32* %2136, align 4
  br i1 %2135, label %2138, label %2140

2138:                                             ; preds = %2131
  %2139 = add i32 %2137, -1
  store i32 %2139, i32* %2136, align 4
  br label %2140

2140:                                             ; preds = %2138, %2131
  %2141 = phi i32 [ %2139, %2138 ], [ %2137, %2131 ]
  %2142 = icmp eq i32 %2141, 0
  br i1 %2142, label %2143, label %2144

2143:                                             ; preds = %2140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2129) #17
  br label %2144

2144:                                             ; preds = %2125, %2140, %2143
  %2145 = getelementptr inbounds i8, i8* %1931, i64 56
  %2146 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 6, i32 0, i32 0
  %2147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2146, align 8
  %2148 = icmp eq %"class.WTF::StringImpl"* %2147, null
  br i1 %2148, label %2166, label %2149

2149:                                             ; preds = %2144
  %2150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2151 = load atomic i32, i32* %2150 monotonic, align 4
  %2152 = and i32 %2151, 2
  %2153 = icmp eq i32 %2152, 0
  br i1 %2153, label %2154, label %2166

2154:                                             ; preds = %2149
  %2155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2147, i64 0, i32 0
  %2156 = load i32, i32* %2155, align 4
  %2157 = zext i32 %2156 to i33
  %2158 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2157, i33 1) #17
  %2159 = extractvalue { i33, i1 } %2158, 1
  %2160 = extractvalue { i33, i1 } %2158, 0
  %2161 = icmp slt i33 %2160, 0
  %2162 = or i1 %2159, %2161
  br i1 %2162, label %2163, label %2164, !prof !4

2163:                                             ; preds = %2154
  call void @llvm.trap() #17
  unreachable

2164:                                             ; preds = %2154
  %2165 = trunc i33 %2160 to i32
  store i32 %2165, i32* %2155, align 4
  br label %2166

2166:                                             ; preds = %2164, %2149, %2144
  %2167 = ptrtoint %"class.WTF::StringImpl"* %2147 to i64
  %2168 = bitcast i8* %2145 to i64*
  %2169 = bitcast i8* %2145 to %"class.WTF::StringImpl"**
  %2170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2169, align 8
  store i64 %2167, i64* %2168, align 8
  %2171 = icmp eq %"class.WTF::StringImpl"* %2170, null
  br i1 %2171, label %2185, label %2172

2172:                                             ; preds = %2166
  %2173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2174 = load atomic i32, i32* %2173 monotonic, align 4
  %2175 = and i32 %2174, 2
  %2176 = icmp eq i32 %2175, 0
  %2177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2170, i64 0, i32 0
  %2178 = load i32, i32* %2177, align 4
  br i1 %2176, label %2179, label %2181

2179:                                             ; preds = %2172
  %2180 = add i32 %2178, -1
  store i32 %2180, i32* %2177, align 4
  br label %2181

2181:                                             ; preds = %2179, %2172
  %2182 = phi i32 [ %2180, %2179 ], [ %2178, %2172 ]
  %2183 = icmp eq i32 %2182, 0
  br i1 %2183, label %2184, label %2185

2184:                                             ; preds = %2181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2170) #17
  br label %2185

2185:                                             ; preds = %2166, %2181, %2184
  %2186 = getelementptr inbounds i8, i8* %1931, i64 64
  %2187 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 0, i32 7, i32 0, i32 0
  %2188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2187, align 8
  %2189 = icmp eq %"class.WTF::StringImpl"* %2188, null
  br i1 %2189, label %2207, label %2190

2190:                                             ; preds = %2185
  %2191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2192 = load atomic i32, i32* %2191 monotonic, align 4
  %2193 = and i32 %2192, 2
  %2194 = icmp eq i32 %2193, 0
  br i1 %2194, label %2195, label %2207

2195:                                             ; preds = %2190
  %2196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2188, i64 0, i32 0
  %2197 = load i32, i32* %2196, align 4
  %2198 = zext i32 %2197 to i33
  %2199 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2198, i33 1) #17
  %2200 = extractvalue { i33, i1 } %2199, 1
  %2201 = extractvalue { i33, i1 } %2199, 0
  %2202 = icmp slt i33 %2201, 0
  %2203 = or i1 %2200, %2202
  br i1 %2203, label %2204, label %2205, !prof !4

2204:                                             ; preds = %2195
  call void @llvm.trap() #17
  unreachable

2205:                                             ; preds = %2195
  %2206 = trunc i33 %2201 to i32
  store i32 %2206, i32* %2196, align 4
  br label %2207

2207:                                             ; preds = %2205, %2190, %2185
  %2208 = ptrtoint %"class.WTF::StringImpl"* %2188 to i64
  %2209 = bitcast i8* %2186 to i64*
  %2210 = bitcast i8* %2186 to %"class.WTF::StringImpl"**
  %2211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2210, align 8
  store i64 %2208, i64* %2209, align 8
  %2212 = icmp eq %"class.WTF::StringImpl"* %2211, null
  br i1 %2212, label %2226, label %2213

2213:                                             ; preds = %2207
  %2214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2215 = load atomic i32, i32* %2214 monotonic, align 4
  %2216 = and i32 %2215, 2
  %2217 = icmp eq i32 %2216, 0
  %2218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2211, i64 0, i32 0
  %2219 = load i32, i32* %2218, align 4
  br i1 %2217, label %2220, label %2222

2220:                                             ; preds = %2213
  %2221 = add i32 %2219, -1
  store i32 %2221, i32* %2218, align 4
  br label %2222

2222:                                             ; preds = %2220, %2213
  %2223 = phi i32 [ %2221, %2220 ], [ %2219, %2213 ]
  %2224 = icmp eq i32 %2223, 0
  br i1 %2224, label %2225, label %2226

2225:                                             ; preds = %2222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2211) #17
  br label %2226

2226:                                             ; preds = %2225, %2222, %2207
  store i8* %1931, i8** %1519, align 8
  %2227 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %1521, align 8
  %2228 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %1523, align 8
  %2229 = icmp ult %"class.std::__1::unique_ptr.3389"* %2227, %2228
  br i1 %2229, label %2230, label %2235

2230:                                             ; preds = %2226
  %2231 = ptrtoint i8* %1931 to i64
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1518, align 8
  %2232 = bitcast %"class.std::__1::unique_ptr.3389"* %2227 to i64*
  store i64 %2231, i64* %2232, align 8
  %2233 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %2227, i64 1
  %2234 = ptrtoint %"class.std::__1::unique_ptr.3389"* %2233 to i64
  store i64 %2234, i64* %1524, align 8
  br label %2236

2235:                                             ; preds = %2226
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network26SignedCertificateTimestampENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3387"* nonnull %1504, %"class.std::__1::unique_ptr.3389"* nonnull dereferenceable(8) %38) #17
  br label %2236

2236:                                             ; preds = %2230, %2235
  %2237 = load %"class.blink::protocol::Network::SignedCertificateTimestamp"*, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1518, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %1518, align 8
  %2238 = icmp eq %"class.blink::protocol::Network::SignedCertificateTimestamp"* %2237, null
  br i1 %2238, label %2244, label %2239

2239:                                             ; preds = %2236
  %2240 = bitcast %"class.blink::protocol::Network::SignedCertificateTimestamp"* %2237 to void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)***
  %2241 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)**, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*** %2240, align 8
  %2242 = getelementptr inbounds void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %2241, i64 2
  %2243 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %2242, align 8
  call void %2243(%"class.blink::protocol::Network::SignedCertificateTimestamp"* nonnull %2237) #17
  br label %2244

2244:                                             ; preds = %2236, %2239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1517) #17
  %2245 = getelementptr inbounds %"class.blink::ResourceResponse::SignedCertificateTimestamp", %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %1930, i64 1
  %2246 = icmp eq %"class.blink::ResourceResponse::SignedCertificateTimestamp"* %2245, %1514
  br i1 %2246, label %1525, label %1929

2247:                                             ; preds = %1925
  %2248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1923, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2249 = load atomic i32, i32* %2248 monotonic, align 4
  %2250 = and i32 %2249, 2
  %2251 = icmp eq i32 %2250, 0
  br i1 %2251, label %2252, label %2264

2252:                                             ; preds = %2247
  %2253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1923, i64 0, i32 0
  %2254 = load i32, i32* %2253, align 4
  %2255 = zext i32 %2254 to i33
  %2256 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2255, i33 1) #17
  %2257 = extractvalue { i33, i1 } %2256, 1
  %2258 = extractvalue { i33, i1 } %2256, 0
  %2259 = icmp slt i33 %2258, 0
  %2260 = or i1 %2257, %2259
  br i1 %2260, label %2261, label %2262, !prof !4

2261:                                             ; preds = %2252
  call void @llvm.trap() #17
  unreachable

2262:                                             ; preds = %2252
  %2263 = trunc i33 %2258 to i32
  store i32 %2263, i32* %2253, align 4
  br label %2264

2264:                                             ; preds = %2262, %2247
  %2265 = getelementptr inbounds i8, i8* %1529, i64 24
  %2266 = bitcast i8* %2265 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %2266, %"class.WTF::StringImpl"* nonnull %1923) #17
  %2267 = load i8, i8* %1446, align 8, !range !2
  %2268 = icmp eq i8 %2267, 0
  br i1 %2268, label %2269, label %2270, !prof !4

2269:                                             ; preds = %2264
  call void @llvm.trap() #17
  unreachable

2270:                                             ; preds = %1925, %1921, %2264
  %2271 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 0
  %2272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2271, align 8
  %2273 = icmp eq %"class.WTF::StringImpl"* %2272, null
  br i1 %2273, label %2298, label %2274

2274:                                             ; preds = %2270
  %2275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2272, i64 0, i32 1
  %2276 = load i32, i32* %2275, align 4
  %2277 = icmp eq i32 %2276, 0
  br i1 %2277, label %2298, label %2278

2278:                                             ; preds = %2274
  %2279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2280 = load atomic i32, i32* %2279 monotonic, align 4
  %2281 = and i32 %2280, 2
  %2282 = icmp eq i32 %2281, 0
  br i1 %2282, label %2283, label %2295

2283:                                             ; preds = %2278
  %2284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2272, i64 0, i32 0
  %2285 = load i32, i32* %2284, align 4
  %2286 = zext i32 %2285 to i33
  %2287 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2286, i33 1) #17
  %2288 = extractvalue { i33, i1 } %2287, 1
  %2289 = extractvalue { i33, i1 } %2287, 0
  %2290 = icmp slt i33 %2289, 0
  %2291 = or i1 %2288, %2290
  br i1 %2291, label %2292, label %2293, !prof !4

2292:                                             ; preds = %2283
  call void @llvm.trap() #17
  unreachable

2293:                                             ; preds = %2283
  %2294 = trunc i33 %2289 to i32
  store i32 %2294, i32* %2284, align 4
  br label %2295

2295:                                             ; preds = %2278, %2293
  %2296 = getelementptr inbounds i8, i8* %1529, i64 48
  %2297 = bitcast i8* %2296 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %2297, %"class.WTF::StringImpl"* nonnull %2272) #17
  br label %2298

2298:                                             ; preds = %2270, %2274, %2295
  %2299 = getelementptr inbounds i8, i8* %429, i64 224
  %2300 = bitcast i8* %2299 to %"class.blink::protocol::Network::SecurityDetails"**
  %2301 = load %"class.blink::protocol::Network::SecurityDetails"*, %"class.blink::protocol::Network::SecurityDetails"** %2300, align 8
  %2302 = bitcast i8* %2299 to i64*
  store i64 %1903, i64* %2302, align 8
  %2303 = icmp eq %"class.blink::protocol::Network::SecurityDetails"* %2301, null
  br i1 %2303, label %2309, label %2304

2304:                                             ; preds = %2298
  %2305 = bitcast %"class.blink::protocol::Network::SecurityDetails"* %2301 to void (%"class.blink::protocol::Network::SecurityDetails"*)***
  %2306 = load void (%"class.blink::protocol::Network::SecurityDetails"*)**, void (%"class.blink::protocol::Network::SecurityDetails"*)*** %2305, align 8
  %2307 = getelementptr inbounds void (%"class.blink::protocol::Network::SecurityDetails"*)*, void (%"class.blink::protocol::Network::SecurityDetails"*)** %2306, i64 2
  %2308 = load void (%"class.blink::protocol::Network::SecurityDetails"*)*, void (%"class.blink::protocol::Network::SecurityDetails"*)** %2307, align 8
  call void %2308(%"class.blink::protocol::Network::SecurityDetails"* nonnull %2301) #17
  br label %2309

2309:                                             ; preds = %1444, %2298, %2304
  br i1 %1426, label %2323, label %2310

2310:                                             ; preds = %2309
  %2311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2312 = load atomic i32, i32* %2311 monotonic, align 4
  %2313 = and i32 %2312, 2
  %2314 = icmp eq i32 %2313, 0
  %2315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1425, i64 0, i32 0
  %2316 = load i32, i32* %2315, align 4
  br i1 %2314, label %2317, label %2319

2317:                                             ; preds = %2310
  %2318 = add i32 %2316, -1
  store i32 %2318, i32* %2315, align 4
  br label %2319

2319:                                             ; preds = %2317, %2310
  %2320 = phi i32 [ %2318, %2317 ], [ %2316, %2310 ]
  %2321 = icmp eq i32 %2320, 0
  br i1 %2321, label %2322, label %2323

2322:                                             ; preds = %2319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1425) #17
  br label %2323

2323:                                             ; preds = %2322, %2319, %2309
  br i1 %551, label %2337, label %2324

2324:                                             ; preds = %2323
  %2325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2326 = load atomic i32, i32* %2325 monotonic, align 4
  %2327 = and i32 %2326, 2
  %2328 = icmp eq i32 %2327, 0
  %2329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 0
  %2330 = load i32, i32* %2329, align 4
  br i1 %2328, label %2331, label %2333

2331:                                             ; preds = %2324
  %2332 = add i32 %2330, -1
  store i32 %2332, i32* %2329, align 4
  br label %2333

2333:                                             ; preds = %2331, %2324
  %2334 = phi i32 [ %2332, %2331 ], [ %2330, %2324 ]
  %2335 = icmp eq i32 %2334, 0
  br i1 %2335, label %2336, label %2337

2336:                                             ; preds = %2333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %550) #17
  br label %2337

2337:                                             ; preds = %2323, %2333, %2336
  %2338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %2339 = icmp eq %"class.WTF::StringImpl"* %2338, null
  br i1 %2339, label %2353, label %2340

2340:                                             ; preds = %2337
  %2341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2342 = load atomic i32, i32* %2341 monotonic, align 4
  %2343 = and i32 %2342, 2
  %2344 = icmp eq i32 %2343, 0
  %2345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2338, i64 0, i32 0
  %2346 = load i32, i32* %2345, align 4
  br i1 %2344, label %2347, label %2349

2347:                                             ; preds = %2340
  %2348 = add i32 %2346, -1
  store i32 %2348, i32* %2345, align 4
  br label %2349

2349:                                             ; preds = %2347, %2340
  %2350 = phi i32 [ %2348, %2347 ], [ %2346, %2340 ]
  %2351 = icmp eq i32 %2350, 0
  br i1 %2351, label %2352, label %2353

2352:                                             ; preds = %2349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2338) #17
  br label %2353

2353:                                             ; preds = %2337, %2349, %2352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #17
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %14) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #17
  br i1 %499, label %2367, label %2354

2354:                                             ; preds = %2353
  %2355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2356 = load atomic i32, i32* %2355 monotonic, align 4
  %2357 = and i32 %2356, 2
  %2358 = icmp eq i32 %2357, 0
  %2359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %2360 = load i32, i32* %2359, align 4
  br i1 %2358, label %2361, label %2363

2361:                                             ; preds = %2354
  %2362 = add i32 %2360, -1
  store i32 %2362, i32* %2359, align 4
  br label %2363

2363:                                             ; preds = %2361, %2354
  %2364 = phi i32 [ %2362, %2361 ], [ %2360, %2354 ]
  %2365 = icmp eq i32 %2364, 0
  br i1 %2365, label %2366, label %2367

2366:                                             ; preds = %2363
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #17
  br label %2367

2367:                                             ; preds = %3, %2366, %2363, %2353
  %2368 = phi i64 [ 0, %3 ], [ %634, %2353 ], [ %634, %2363 ], [ %634, %2366 ]
  %2369 = inttoptr i64 %2368 to %"class.blink::protocol::Network::Response"*
  ret %"class.blink::protocol::Network::Response"* %2369
}

declare void @_ZN5blink8protocol7Network8Frontend5flushEv(%"class.blink::protocol::Network::Frontend"*) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData16SetXHRReplayDataERKN3WTF6StringEPNS_13XHRReplayDataE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::XHRReplayData"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent25WillSendNavigationRequestEmPNS_14DocumentLoaderERKNS_4KURLERKN3WTF12AtomicStringEPNS_15EncodedFormDataE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* nocapture readnone dereferenceable(8), %"class.blink::EncodedFormData"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* %2) #17
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %10, align 8
  %12 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #17
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %20
  tail call void @llvm.trap() #17
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %6, %15, %30
  %33 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %34 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  %35 = call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %34, %"class.WTF::String"* nonnull dereferenceable(8) %8) #17
  %36 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %35, i64 0, i32 21, i32 0
  %39 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %38, align 8
  %40 = icmp eq %"class.blink::EncodedFormData"* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  br label %58

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #17
  %45 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  br label %54

46:                                               ; preds = %32
  %47 = icmp eq %"class.blink::EncodedFormData"* %5, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  br label %58

50:                                               ; preds = %46
  %51 = call %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"* nonnull %5) #17
  %52 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  %53 = icmp eq %"class.blink::EncodedFormData"* %51, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %43, %50
  %55 = phi %"class.blink::NetworkResourcesData"* [ %45, %43 ], [ %52, %50 ]
  %56 = phi %"class.blink::EncodedFormData"* [ %39, %43 ], [ %51, %50 ]
  %57 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %56, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %57) #17
  br label %58

58:                                               ; preds = %41, %48, %50, %54
  %59 = phi i1 [ true, %48 ], [ true, %50 ], [ false, %54 ], [ true, %41 ]
  %60 = phi %"class.blink::EncodedFormData"* [ null, %48 ], [ null, %50 ], [ %56, %54 ], [ null, %41 ]
  %61 = phi %"class.blink::NetworkResourcesData"* [ %49, %48 ], [ %52, %50 ], [ %55, %54 ], [ %42, %41 ]
  call void @_ZN5blink20NetworkResourcesData15ResourceCreatedERKN3WTF6StringES4_RKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::NetworkResourcesData"* %61, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::KURL"* dereferenceable(112) %3, %"class.blink::EncodedFormData"* %60) #17
  %62 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %33, align 8
  call void @_ZN5blink20NetworkResourcesData15SetResourceTypeERKN3WTF6StringENS_18InspectorPageAgent12ResourceTypeE(%"class.blink::NetworkResourcesData"* %62, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 0) #17
  br i1 %59, label %70, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %60, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #17
  %65 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %60) #17
  %69 = bitcast %"class.blink::EncodedFormData"* %60 to i8*
  call void @free(i8* %69) #17
  br label %70

70:                                               ; preds = %58, %63, %68
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #17
  br label %86

86:                                               ; preds = %70, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %86, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14SetDevToolsIdsERNS_15ResourceRequestERKNS_18FetchInitiatorInfoE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::FetchInitiatorInfo"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca [23 x i8], align 1
  %5 = alloca %"class.absl::optional.2312", align 8
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names9kInternalE, align 8
  %7 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %8, %10
  br i1 %11, label %49, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds [23 x i8], [23 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 23, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 5
  %15 = bitcast %"class.base::UnguessableToken"* %14 to i8*
  %16 = getelementptr inbounds [23 x i8], [23 x i8]* %4, i64 0, i64 7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 8 %15, i64 16, i1 false)
  %17 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 34, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds i8, i8* %18, i64 713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* nonnull align 1 %13, i64 23, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 23, i8* nonnull %13)
  %20 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 42
  %22 = load i64, i64* %21, align 8
  %23 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* null, i64 %22) #17
  %24 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  store i8 1, i8* %20, align 8
  %25 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = bitcast %"class.WTF::String"* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 35, i32 0, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.2314"* %27, %"class.WTF::String"* dereferenceable(8) %25) #17
  %28 = load i8, i8* %20, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #17
  br label %47

47:                                               ; preds = %46, %43, %30
  store i8 0, i8* %20, align 8
  br label %48

48:                                               ; preds = %47, %12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  br label %49

49:                                               ; preds = %3, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14PrepareRequestEPNS_14DocumentLoaderERNS_15ResourceRequestERNS_21ResourceLoaderOptionsENS_12ResourceTypeE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::DocumentLoader"* readonly, %"class.blink::ResourceRequest"* dereferenceable(1032), %"struct.blink::ResourceLoaderOptions"* nocapture readonly dereferenceable(112), i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::Vector.386", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.absl::optional.2312", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::Vector.386", align 8
  %18 = alloca i32, align 4
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names9kInternalE, align 8
  %20 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %712, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %273, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14
  %31 = bitcast %"class.WTF::Vector.386"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #17
  call void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.386"* nonnull sret %12, %"class.blink::InspectorAgentState::MapField.1363"* %30)
  %32 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %12, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %12, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 2
  %41 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %40, i64 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %40, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 2, i32 0, i32 1
  %44 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 1
  %45 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %48 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names8kRefererE, align 8
  %49 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %50 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  %51 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 22
  %54 = bitcast %"class.WTF::String"* %53 to i64*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 23
  br label %96

57:                                               ; preds = %270
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  br label %59

59:                                               ; preds = %57, %29
  %60 = phi %"class.WTF::String"* [ %58, %57 ], [ %33, %29 ]
  %61 = icmp eq %"class.WTF::String"* %60, null
  br i1 %61, label %95, label %62, !prof !3

62:                                               ; preds = %59
  %63 = bitcast %"class.WTF::String"* %60 to i8*
  %64 = load i32, i32* %34, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %93, label %66, !prof !4

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 %67
  br label %69

69:                                               ; preds = %87, %66
  %70 = phi %"class.WTF::String"* [ %88, %87 ], [ %60, %66 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #17
  br label %87

87:                                               ; preds = %86, %83, %69
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 1
  %89 = icmp eq %"class.WTF::String"* %88, %68
  br i1 %89, label %90, label %69

90:                                               ; preds = %87
  store i32 0, i32* %34, align 4
  %91 = bitcast %"class.WTF::Vector.386"* %12 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %62
  %94 = phi i8* [ %92, %90 ], [ %63, %62 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %94) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %32, align 8
  br label %95

95:                                               ; preds = %59, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #17
  br label %273

96:                                               ; preds = %39, %270
  %97 = phi %"class.WTF::String"* [ %33, %39 ], [ %271, %270 ]
  %98 = call { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1365"* %41, %"class.WTF::String"* dereferenceable(8) %97) #17
  %99 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %98, 0
  %100 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %42, align 8
  %101 = load i32, i32* %43, align 8
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %100, i64 %102
  %104 = icmp eq %"struct.WTF::KeyValuePair.1368"* %99, %103
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %99, i64 0, i32 1
  %106 = select i1 %104, %"class.WTF::String"* %44, %"class.WTF::String"* %105
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %46, align 8
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %133, label %110

110:                                              ; preds = %96
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 acquire, align 4
  %113 = and i32 %112, 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %110
  %116 = load atomic i32, i32* %111 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %133

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i33
  %123 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %122, i33 1) #17
  %124 = extractvalue { i33, i1 } %123, 1
  %125 = extractvalue { i33, i1 } %123, 0
  %126 = icmp slt i33 %125, 0
  %127 = or i1 %124, %126
  br i1 %127, label %128, label %129, !prof !4

128:                                              ; preds = %119
  call void @llvm.trap() #17
  unreachable

129:                                              ; preds = %119
  %130 = trunc i33 %125 to i32
  store i32 %130, i32* %120, align 4
  br label %133

131:                                              ; preds = %110
  %132 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %108) #17
  br label %133

133:                                              ; preds = %96, %115, %129, %131
  %134 = phi %"class.WTF::StringImpl"* [ %132, %131 ], [ %108, %115 ], [ %108, %129 ], [ null, %96 ]
  %135 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  store i64 %135, i64* %47, align 8
  %136 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %13) #17
  %137 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* %48) #17
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  %139 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #17
  br label %153

153:                                              ; preds = %133, %149, %152
  %154 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #17
  br label %168

168:                                              ; preds = %153, %164, %167
  br i1 %138, label %169, label %208

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %190, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %190

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i33
  %182 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %181, i33 1) #17
  %183 = extractvalue { i33, i1 } %182, 1
  %184 = extractvalue { i33, i1 } %182, 0
  %185 = icmp slt i33 %184, 0
  %186 = or i1 %183, %185
  br i1 %186, label %187, label %188, !prof !4

187:                                              ; preds = %178
  call void @llvm.trap() #17
  unreachable

188:                                              ; preds = %178
  %189 = trunc i33 %184 to i32
  store i32 %189, i32* %179, align 4
  br label %190

190:                                              ; preds = %188, %173, %169
  %191 = ptrtoint %"class.WTF::StringImpl"* %171 to i64
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %191, i64* %54, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #17
  br label %207

207:                                              ; preds = %190, %203, %206
  store i32 0, i32* %56, align 8
  br label %254

208:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  %209 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %235, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 acquire, align 4
  %215 = and i32 %214, 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %233, label %217

217:                                              ; preds = %212
  %218 = load atomic i32, i32* %213 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %235

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = zext i32 %223 to i33
  %225 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %224, i33 1) #17
  %226 = extractvalue { i33, i1 } %225, 1
  %227 = extractvalue { i33, i1 } %225, 0
  %228 = icmp slt i33 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %230, label %231, !prof !4

230:                                              ; preds = %221
  call void @llvm.trap() #17
  unreachable

231:                                              ; preds = %221
  %232 = trunc i33 %227 to i32
  store i32 %232, i32* %222, align 4
  br label %235

233:                                              ; preds = %212
  %234 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %210) #17
  br label %235

235:                                              ; preds = %208, %217, %231, %233
  %236 = phi %"class.WTF::StringImpl"* [ %234, %233 ], [ %210, %217 ], [ %210, %231 ], [ null, %208 ]
  %237 = ptrtoint %"class.WTF::StringImpl"* %236 to i64
  store i64 %237, i64* %51, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %49, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14) #17
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #17
  br label %253

253:                                              ; preds = %235, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  br label %254

254:                                              ; preds = %253, %207
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #17
  br label %270

270:                                              ; preds = %254, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #17
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 1
  %272 = icmp eq %"class.WTF::String"* %271, %37
  br i1 %272, label %57, label %96

273:                                              ; preds = %95, %25
  %274 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0
  %275 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 8
  %276 = load i16, i16* %275, align 8
  %277 = or i16 %276, 4
  store i16 %277, i16* %275, align 8
  %278 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 2
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %294, label %281

281:                                              ; preds = %273
  %282 = call i32 @_ZNK5blink19ResourceRequestHead12GetCacheModeEv(%"class.blink::ResourceRequestHead"* %274) #17
  %283 = add i32 %282, -5
  %284 = icmp ult i32 %283, 3
  br i1 %284, label %285, label %289

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 15
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 16
  br i1 %288, label %289, label %290

289:                                              ; preds = %285, %281
  br label %290

290:                                              ; preds = %285, %289
  %291 = phi i32 [ 2, %289 ], [ 7, %285 ]
  call void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"* %274, i32 %291) #17
  %292 = load i16, i16* %275, align 8
  %293 = or i16 %292, 256
  store i16 %293, i16* %275, align 8
  br label %294

294:                                              ; preds = %273, %290
  %295 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 2
  %296 = load i8, i8* %295, align 1, !range !2
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %302, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 10
  %300 = load i8, i8* %299, align 8
  %301 = or i8 %300, 1
  store i8 %301, i8* %299, align 8
  br label %302

302:                                              ; preds = %294, %298
  %303 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 2
  %304 = load i8, i8* %303, align 1, !range !2
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %409, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %308 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %307, align 8
  %309 = icmp eq %"class.blink::WorkerGlobalScope"* %308, null
  br i1 %309, label %313, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %308, i64 0, i32 0, i32 1
  %312 = bitcast %"class.blink::ExecutionContext.base"* %311 to %"class.blink::ExecutionContext"*
  br label %327

313:                                              ; preds = %306
  %314 = icmp eq %"class.blink::DocumentLoader"* %1, null
  br i1 %314, label %327, label %315

315:                                              ; preds = %313
  %316 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %1, i64 0, i32 21, i32 0, i32 0
  %317 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %316, align 8
  %318 = icmp eq %"class.blink::LocalFrame"* %317, null
  br i1 %318, label %327, label %319

319:                                              ; preds = %315
  %320 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %317) #17
  %321 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %320, i64 0, i32 12, i32 0, i32 0
  %322 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %321, align 8
  %323 = icmp eq %"class.blink::LocalDOMWindow"* %322, null
  %324 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %322, i64 0, i32 1
  %325 = bitcast %"class.blink::ExecutionContext.base"* %324 to %"class.blink::ExecutionContext"*
  %326 = select i1 %323, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %325
  br label %327

327:                                              ; preds = %315, %313, %319, %310
  %328 = phi %"class.blink::ExecutionContext"* [ %312, %310 ], [ %326, %319 ], [ null, %315 ], [ null, %313 ]
  %329 = call %"class.WTF::StringImpl"* @_ZN5blink23RequestDebugHeaderScope32CaptureStackIdForCurrentLocationEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %328) #17
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %409, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %332) #17
  store i8 1, i8* %332, align 8
  %333 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %333, align 8
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %352

338:                                              ; preds = %331
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i33
  %342 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %341, i33 1) #17
  %343 = extractvalue { i33, i1 } %342, 1
  %344 = extractvalue { i33, i1 } %342, 0
  %345 = icmp slt i33 %344, 0
  %346 = or i1 %343, %345
  br i1 %346, label %347, label %348, !prof !4

347:                                              ; preds = %338
  call void @llvm.trap() #17
  unreachable

348:                                              ; preds = %338
  %349 = trunc i33 %344 to i32
  store i32 %349, i32* %339, align 4
  %350 = load i8, i8* %332, align 8, !range !2
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %355, label %352

352:                                              ; preds = %331, %348
  %353 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 39, i32 0, i32 0
  %354 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.2314"* %353, %"class.WTF::String"* dereferenceable(8) %354) #17
  br label %377

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0, i32 0
  %357 = load i8, i8* %356, align 8, !range !2
  %358 = icmp eq i8 %357, 0
  br i1 %358, label %377, label %359

359:                                              ; preds = %355
  %360 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 39, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  %362 = icmp eq %"class.WTF::StringImpl"* %361, null
  br i1 %362, label %376, label %363

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %361, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %361) #17
  br label %376

376:                                              ; preds = %375, %372, %359
  store i8 0, i8* %356, align 8
  br label %377

377:                                              ; preds = %352, %355, %376
  %378 = load i8, i8* %332, align 8, !range !2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %397, label %380

380:                                              ; preds = %377
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %333, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #17
  br label %396

396:                                              ; preds = %395, %392, %380
  store i8 0, i8* %332, align 8
  br label %397

397:                                              ; preds = %377, %396
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %332) #17
  %398 = load atomic i32, i32* %334 monotonic, align 4
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  br i1 %400, label %403, label %405

403:                                              ; preds = %397
  %404 = add i32 %402, -1
  store i32 %404, i32* %401, align 4
  br label %405

405:                                              ; preds = %403, %397
  %406 = phi i32 [ %404, %403 ], [ %402, %397 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #17
  br label %409

409:                                              ; preds = %302, %327, %408, %405
  %410 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19
  %411 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3, i32 0, i32 2
  %412 = load i32, i32* %411, align 4
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %712, label %414

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %2, i64 0, i32 0, i32 52
  %416 = getelementptr inbounds %class.scoped_refptr.2323, %class.scoped_refptr.2323* %415, i64 0, i32 0
  %417 = load %"class.base::RefCountedData.2324"*, %"class.base::RefCountedData.2324"** %416, align 8
  %418 = icmp eq %"class.base::RefCountedData.2324"* %417, null
  br i1 %418, label %421, label %419

419:                                              ; preds = %414
  %420 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %417, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %426

421:                                              ; preds = %414
  %422 = call i8* @_Znwm(i64 32) #18
  %423 = bitcast i8* %422 to %"class.base::RefCountedData.2324"*
  %424 = bitcast i8* %422 to i32*
  store i32 0, i32* %424, align 4
  %425 = getelementptr inbounds i8, i8* %422, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %425, i8 0, i64 24, i1 false) #17
  br label %426

426:                                              ; preds = %419, %421
  %427 = phi i32* [ %420, %419 ], [ %424, %421 ]
  %428 = phi %"class.base::RefCountedData.2324"* [ %417, %419 ], [ %423, %421 ]
  %429 = atomicrmw add i32* %427, i32 1 monotonic
  %430 = ptrtoint %"class.base::RefCountedData.2324"* %428 to i64
  %431 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %431) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #17
  %432 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3
  %433 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %432, i64 0, i32 0
  %434 = call { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1359"* %433, %"class.WTF::String"* nonnull dereferenceable(8) %16) #17
  %435 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %434, 0
  %436 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %432, i64 0, i32 0, i32 0
  %437 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3, i32 0, i32 1
  %439 = load i32, i32* %438, align 8
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %437, i64 %440
  %442 = icmp eq %"struct.WTF::KeyValuePair.1362"* %435, %441
  %443 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 1
  %444 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %435, i64 0, i32 1
  %445 = select i1 %442, i8* %443, i8* %444
  %446 = load i8, i8* %445, align 8, !range !2
  %447 = icmp eq i8 %446, 0
  %448 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %449 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %448, align 8
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %426
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #17
  br label %464

464:                                              ; preds = %426, %460, %463
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %431) #17
  br i1 %447, label %465, label %669

465:                                              ; preds = %464
  %466 = bitcast %"class.WTF::Vector.386"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %466) #17
  call void @_ZNK5blink19InspectorAgentState8MapFieldIbE4KeysEv(%"class.WTF::Vector.386"* nonnull sret %17, %"class.blink::InspectorAgentState::MapField"* %410)
  %467 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %17, i64 0, i32 0, i32 0, i32 0
  %468 = load %"class.WTF::String"*, %"class.WTF::String"** %467, align 8
  %469 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %17, i64 0, i32 0, i32 0, i32 2
  %470 = load i32, i32* %469, align 4
  %471 = zext i32 %470 to i64
  %472 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %468, i64 %471
  %473 = icmp eq i32 %470, 0
  br i1 %473, label %513, label %474

474:                                              ; preds = %465
  %475 = bitcast i32* %18 to i8*
  %476 = bitcast %"class.WTF::StringView"* %10 to i8*
  %477 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  %478 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %479 = bitcast i8** %478 to %"class.WTF::StringImpl"**
  %480 = bitcast %"class.WTF::StringView"* %10 to i64*
  %481 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %428, i64 0, i32 1
  %482 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  %483 = bitcast %"class.WTF::StringView"* %11 to i8*
  %484 = bitcast %"class.WTF::StringView"* %11 to i64*
  %485 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %486 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %487 = bitcast %"class.WTF::StringView"* %8 to i8*
  %488 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %489 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %490 = bitcast i8** %489 to %"class.WTF::StringImpl"**
  %491 = bitcast %"class.WTF::StringView"* %8 to i64*
  %492 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %493 = bitcast %"class.WTF::StringView"* %9 to i8*
  %494 = bitcast %"class.WTF::StringView"* %9 to i64*
  %495 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %496 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %497 = bitcast %"class.WTF::StringView"* %6 to i8*
  %498 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %499 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %500 = bitcast i8** %499 to %"class.WTF::StringImpl"**
  %501 = bitcast %"class.WTF::StringView"* %6 to i64*
  %502 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %503 = bitcast %"class.WTF::StringView"* %7 to i8*
  %504 = bitcast %"class.WTF::StringView"* %7 to i64*
  %505 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %506 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %507 = getelementptr inbounds %"class.base::internal::flat_tree.2326", %"class.base::internal::flat_tree.2326"* %481, i64 0, i32 0, i32 0, i32 0
  %508 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %428, i64 0, i32 1, i32 0, i32 0, i32 1
  %509 = bitcast i32** %508 to i64*
  %510 = getelementptr inbounds %"class.base::internal::flat_tree.2326", %"class.base::internal::flat_tree.2326"* %481, i64 0, i32 0
  br label %549

511:                                              ; preds = %664
  %512 = load %"class.WTF::String"*, %"class.WTF::String"** %467, align 8
  br label %513

513:                                              ; preds = %511, %465
  %514 = phi %"class.WTF::String"* [ %512, %511 ], [ %468, %465 ]
  %515 = icmp eq %"class.WTF::String"* %514, null
  br i1 %515, label %667, label %516, !prof !3

516:                                              ; preds = %513
  %517 = bitcast %"class.WTF::String"* %514 to i8*
  %518 = load i32, i32* %469, align 4
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %547, label %520, !prof !4

520:                                              ; preds = %516
  %521 = zext i32 %518 to i64
  %522 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %514, i64 %521
  br label %523

523:                                              ; preds = %541, %520
  %524 = phi %"class.WTF::String"* [ %542, %541 ], [ %514, %520 ]
  %525 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %524, i64 0, i32 0, i32 0
  %526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %525, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %526, null
  br i1 %527, label %541, label %528

528:                                              ; preds = %523
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %526) #17
  br label %541

541:                                              ; preds = %540, %537, %523
  %542 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %524, i64 1
  %543 = icmp eq %"class.WTF::String"* %542, %522
  br i1 %543, label %544, label %523

544:                                              ; preds = %541
  store i32 0, i32* %469, align 4
  %545 = bitcast %"class.WTF::Vector.386"* %17 to i8**
  %546 = load i8*, i8** %545, align 8
  br label %547

547:                                              ; preds = %544, %516
  %548 = phi i8* [ %546, %544 ], [ %517, %516 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %548) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %467, align 8
  br label %667

549:                                              ; preds = %474, %664
  %550 = phi %"class.WTF::String"* [ %468, %474 ], [ %665, %664 ]
  %551 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %550, i64 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %552, null
  br i1 %553, label %571, label %554

554:                                              ; preds = %549
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %573

559:                                              ; preds = %554
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %561 = load i32, i32* %560, align 4
  %562 = zext i32 %561 to i33
  %563 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %562, i33 1) #17
  %564 = extractvalue { i33, i1 } %563, 1
  %565 = extractvalue { i33, i1 } %563, 0
  %566 = icmp slt i33 %565, 0
  %567 = or i1 %564, %566
  br i1 %567, label %568, label %569, !prof !4

568:                                              ; preds = %559
  call void @llvm.trap() #17
  unreachable

569:                                              ; preds = %559
  %570 = trunc i33 %565 to i32
  store i32 %570, i32* %560, align 4
  br label %573

571:                                              ; preds = %549
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %475) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #17
  store i8* null, i8** %478, align 8
  %572 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %572, i64* %480, align 8
  br label %577

573:                                              ; preds = %554, %569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %475) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #17
  store %"class.WTF::StringImpl"* %552, %"class.WTF::StringImpl"** %477, align 8
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 1
  %575 = load i32, i32* %574, align 4
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 1
  store %"class.WTF::StringImpl"* %576, %"class.WTF::StringImpl"** %479, align 8
  br label %577

577:                                              ; preds = %573, %571
  %578 = phi i32 [ %575, %573 ], [ 0, %571 ]
  store i32 %578, i32* %482, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #17
  %579 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum4GzipE, i64 0, i64 0)) #19
  %580 = icmp ult i64 %579, 4294967296
  br i1 %580, label %582, label %581, !prof !3

581:                                              ; preds = %577
  call void @llvm.trap() #17
  unreachable

582:                                              ; preds = %577
  %583 = trunc i64 %579 to i32
  %584 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %584, i64* %484, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum4GzipE, i64 0, i64 0), i8** %485, align 8
  store i32 %583, i32* %486, align 8
  %585 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #17
  br i1 %585, label %619, label %586

586:                                              ; preds = %582
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %487) #17
  br i1 %553, label %587, label %589

587:                                              ; preds = %586
  store i8* null, i8** %489, align 8
  %588 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %588, i64* %491, align 8
  br label %593

589:                                              ; preds = %586
  store %"class.WTF::StringImpl"* %552, %"class.WTF::StringImpl"** %488, align 8
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 1
  %591 = load i32, i32* %590, align 4
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 1
  store %"class.WTF::StringImpl"* %592, %"class.WTF::StringImpl"** %490, align 8
  br label %593

593:                                              ; preds = %589, %587
  %594 = phi i32 [ %591, %589 ], [ 0, %587 ]
  store i32 %594, i32* %492, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %493) #17
  %595 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum7DeflateE, i64 0, i64 0)) #19
  %596 = icmp ult i64 %595, 4294967296
  br i1 %596, label %598, label %597, !prof !3

597:                                              ; preds = %593
  call void @llvm.trap() #17
  unreachable

598:                                              ; preds = %593
  %599 = trunc i64 %595 to i32
  %600 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %600, i64* %494, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum7DeflateE, i64 0, i64 0), i8** %495, align 8
  store i32 %599, i32* %496, align 8
  %601 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %487) #17
  br i1 %601, label %619, label %602

602:                                              ; preds = %598
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %497) #17
  br i1 %553, label %603, label %605

603:                                              ; preds = %602
  store i8* null, i8** %499, align 8
  %604 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %604, i64* %501, align 8
  br label %609

605:                                              ; preds = %602
  store %"class.WTF::StringImpl"* %552, %"class.WTF::StringImpl"** %498, align 8
  %606 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 1
  %607 = load i32, i32* %606, align 4
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 1
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %500, align 8
  br label %609

609:                                              ; preds = %605, %603
  %610 = phi i32 [ %607, %605 ], [ 0, %603 ]
  store i32 %610, i32* %502, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %503) #17
  %611 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum2BrE, i64 0, i64 0)) #19
  %612 = icmp ult i64 %611, 4294967296
  br i1 %612, label %614, label %613, !prof !3

613:                                              ; preds = %609
  call void @llvm.trap() #17
  unreachable

614:                                              ; preds = %609
  %615 = trunc i64 %611 to i32
  %616 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %616, i64* %504, align 8
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum2BrE, i64 0, i64 0), i8** %505, align 8
  store i32 %615, i32* %506, align 8
  %617 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %503) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %497) #17
  %618 = select i1 %617, i32 0, i32 3
  br label %619

619:                                              ; preds = %582, %598, %614
  %620 = phi i32 [ 2, %582 ], [ 1, %598 ], [ %618, %614 ]
  store i32 %620, i32* %18, align 4
  %621 = load i32*, i32** %507, align 8
  %622 = load i64, i64* %509, align 8
  %623 = ptrtoint i32* %621 to i64
  %624 = sub i64 %622, %623
  %625 = icmp eq i64 %624, 0
  %626 = inttoptr i64 %622 to i32*
  br i1 %625, label %642, label %627

627:                                              ; preds = %619
  %628 = ashr exact i64 %624, 2
  br label %629

629:                                              ; preds = %629, %627
  %630 = phi i32* [ %621, %627 ], [ %640, %629 ]
  %631 = phi i64 [ %628, %627 ], [ %639, %629 ]
  %632 = lshr i64 %631, 1
  %633 = getelementptr inbounds i32, i32* %630, i64 %632
  %634 = load i32, i32* %633, align 4
  %635 = icmp slt i32 %634, %620
  %636 = getelementptr inbounds i32, i32* %633, i64 1
  %637 = xor i64 %632, -1
  %638 = add i64 %631, %637
  %639 = select i1 %635, i64 %638, i64 %632
  %640 = select i1 %635, i32* %636, i32* %630
  %641 = icmp eq i64 %639, 0
  br i1 %641, label %642, label %629

642:                                              ; preds = %629, %619
  %643 = phi i32* [ %621, %619 ], [ %640, %629 ]
  %644 = icmp eq i32* %643, %626
  br i1 %644, label %648, label %645

645:                                              ; preds = %642
  %646 = load i32, i32* %643, align 4
  %647 = icmp slt i32 %620, %646
  br i1 %647, label %648, label %650

648:                                              ; preds = %645, %642
  %649 = call i32* @_ZNSt3__16vectorIN3net12SourceStream10SourceTypeENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.2327"* %510, i32* %643, i32* nonnull dereferenceable(4) %18) #17
  br label %650

650:                                              ; preds = %645, %648
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %475) #17
  br i1 %553, label %664, label %651

651:                                              ; preds = %650
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %653 = load atomic i32, i32* %652 monotonic, align 4
  %654 = and i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %657 = load i32, i32* %656, align 4
  br i1 %655, label %658, label %660

658:                                              ; preds = %651
  %659 = add i32 %657, -1
  store i32 %659, i32* %656, align 4
  br label %660

660:                                              ; preds = %658, %651
  %661 = phi i32 [ %659, %658 ], [ %657, %651 ]
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %664

663:                                              ; preds = %660
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %552) #17
  br label %664

664:                                              ; preds = %650, %660, %663
  %665 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %550, i64 1
  %666 = icmp eq %"class.WTF::String"* %665, %472
  br i1 %666, label %511, label %549

667:                                              ; preds = %547, %513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %466) #17
  %668 = icmp eq %"class.base::RefCountedData.2324"* %428, null
  br i1 %668, label %672, label %669

669:                                              ; preds = %464, %667
  %670 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %428, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %671 = atomicrmw add i32* %670, i32 1 monotonic
  br label %672

672:                                              ; preds = %669, %667
  %673 = phi i1 [ false, %669 ], [ true, %667 ]
  %674 = bitcast %class.scoped_refptr.2323* %415 to i64*
  %675 = load %"class.base::RefCountedData.2324"*, %"class.base::RefCountedData.2324"** %416, align 8
  store i64 %430, i64* %674, align 8
  %676 = icmp eq %"class.base::RefCountedData.2324"* %675, null
  br i1 %676, label %694, label %677

677:                                              ; preds = %672
  %678 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %675, i64 0, i32 0
  %679 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %675, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %680 = atomicrmw sub i32* %679, i32 1 acq_rel
  %681 = icmp eq i32 %680, 1
  br i1 %681, label %682, label %694

682:                                              ; preds = %677
  %683 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2325", %"class.base::RefCountedThreadSafe.2325"* %678, i64 2
  %684 = bitcast %"class.base::RefCountedThreadSafe.2325"* %683 to i32**
  %685 = load i32*, i32** %684, align 8
  %686 = icmp eq i32* %685, null
  br i1 %686, label %692, label %687

687:                                              ; preds = %682
  %688 = ptrtoint i32* %685 to i64
  %689 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2325", %"class.base::RefCountedThreadSafe.2325"* %678, i64 4
  %690 = bitcast %"class.base::RefCountedThreadSafe.2325"* %689 to i64*
  store i64 %688, i64* %690, align 8
  %691 = bitcast i32* %685 to i8*
  call void @_ZdlPv(i8* %691) #18
  br label %692

692:                                              ; preds = %687, %682
  %693 = bitcast %"class.base::RefCountedData.2324"* %675 to i8*
  call void @_ZdlPv(i8* %693) #18
  br label %694

694:                                              ; preds = %672, %677, %692
  br i1 %673, label %712, label %695

695:                                              ; preds = %694
  %696 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %428, i64 0, i32 0
  %697 = getelementptr inbounds %"class.base::RefCountedData.2324", %"class.base::RefCountedData.2324"* %428, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %698 = atomicrmw sub i32* %697, i32 1 acq_rel
  %699 = icmp eq i32 %698, 1
  br i1 %699, label %700, label %712

700:                                              ; preds = %695
  %701 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2325", %"class.base::RefCountedThreadSafe.2325"* %696, i64 2
  %702 = bitcast %"class.base::RefCountedThreadSafe.2325"* %701 to i32**
  %703 = load i32*, i32** %702, align 8
  %704 = icmp eq i32* %703, null
  br i1 %704, label %710, label %705

705:                                              ; preds = %700
  %706 = ptrtoint i32* %703 to i64
  %707 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2325", %"class.base::RefCountedThreadSafe.2325"* %696, i64 4
  %708 = bitcast %"class.base::RefCountedThreadSafe.2325"* %707 to i64*
  store i64 %706, i64* %708, align 8
  %709 = bitcast i32* %703 to i8*
  call void @_ZdlPv(i8* %709) #18
  br label %710

710:                                              ; preds = %705, %700
  %711 = bitcast %"class.base::RefCountedData.2324"* %428 to i8*
  call void @_ZdlPv(i8* %711) #18
  br label %712

712:                                              ; preds = %710, %695, %694, %5, %409
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink19InspectorAgentState8MapFieldIN3WTF6StringEE4KeysEv(%"class.WTF::Vector.386"* noalias sret, %"class.blink::InspectorAgentState::MapField.1363"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.386"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #17
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %1, i64 0, i32 2, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %1, i64 0, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %11, i64 %14
  br i1 %9, label %28, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.1368"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.1368"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.1368"* %23, %15
  br i1 %24, label %28, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.1368"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.1368"* %26, %15
  br i1 %27, label %28, label %29

28:                                               ; preds = %22, %63, %73, %70, %2, %25
  ret void

29:                                               ; preds = %25, %75
  %30 = phi i32 [ %77, %75 ], [ 0, %25 ]
  %31 = phi i32 [ %76, %75 ], [ 0, %25 ]
  %32 = phi %"struct.WTF::KeyValuePair.1368"* [ %67, %75 ], [ %26, %25 ]
  %33 = icmp eq i32 %31, %30
  br i1 %33, label %61, label %34, !prof !4

34:                                               ; preds = %29
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %32, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %36, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #17
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !4

55:                                               ; preds = %46
  tail call void @llvm.trap() #17
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %56, %41, %34
  %59 = load i32, i32* %5, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %5, align 4
  br label %63

61:                                               ; preds = %29
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %32, i64 0, i32 0
  tail call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.386"* %0, %"class.WTF::String"* dereferenceable(8) %62) #17
  br label %63

63:                                               ; preds = %58, %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %32, i64 1
  %65 = icmp eq %"struct.WTF::KeyValuePair.1368"* %64, %15
  br i1 %65, label %28, label %66

66:                                               ; preds = %63, %70
  %67 = phi %"struct.WTF::KeyValuePair.1368"* [ %71, %70 ], [ %64, %63 ]
  %68 = bitcast %"struct.WTF::KeyValuePair.1368"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  switch i64 %69, label %73 [
    i64 -1, label %70
    i64 0, label %70
  ]

70:                                               ; preds = %66, %66
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %67, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair.1368"* %71, %15
  br i1 %72, label %28, label %66

73:                                               ; preds = %66
  %74 = icmp eq %"struct.WTF::KeyValuePair.1368"* %67, %15
  br i1 %74, label %28, label %75

75:                                               ; preds = %73
  %76 = load i32, i32* %5, align 4
  %77 = load i32, i32* %4, align 8
  br label %29
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #4

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink19ResourceRequestHead12SetCacheModeENS_5mojom14FetchCacheModeE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink23RequestDebugHeaderScope32CaptureStackIdForCurrentLocationEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent15WillSendRequestEPNS_14DocumentLoaderERKNS_4KURLERKNS_15ResourceRequestERKNS_16ResourceResponseERKNS_21ResourceLoaderOptionsENS_12ResourceTypeENS_22RenderBlockingBehaviorEN4base9TimeTicksE(%"class.blink::InspectorNetworkAgent"* nocapture, %"class.blink::DocumentLoader"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ResourceRequest"* dereferenceable(1032), %"class.blink::ResourceResponse"* dereferenceable(1072), %"struct.blink::ResourceLoaderOptions"* nocapture readonly dereferenceable(112), i8 zeroext, i8 zeroext, i64) local_unnamed_addr #0 align 2 {
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names9kInternalE, align 8
  %11 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = tail call i32 @_ZN5blink18InspectorPageAgent14ToResourceTypeENS_12ResourceTypeE(i8 zeroext %6) #17
  tail call void @_ZN5blink21InspectorNetworkAgent23WillSendRequestInternalEPNS_14DocumentLoaderERKNS_4KURLERKNS_15ResourceRequestERKNS_16ResourceResponseERKNS_21ResourceLoaderOptionsENS_18InspectorPageAgent12ResourceTypeEN4base9TimeTicksE(%"class.blink::InspectorNetworkAgent"* %0, %"class.blink::DocumentLoader"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::ResourceRequest"* dereferenceable(1032) %3, %"class.blink::ResourceResponse"* dereferenceable(1072) %4, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112) %5, i32 %17, i64 %8)
  br label %18

18:                                               ; preds = %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent20MarkResourceAsCachedEPNS_14DocumentLoaderEm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::DocumentLoader"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %1, i64 %2) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink8protocol7Network8Frontend22requestServedFromCacheERKN3WTF6StringE(%"class.blink::protocol::Network::Frontend"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %3, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend22requestServedFromCacheERKN3WTF6StringE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent26DidReceiveResourceResponseEmPNS_14DocumentLoaderERKNS_16ResourceResponseEPKNS_8ResourceE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, %"class.blink::ResourceResponse"* dereferenceable(1072), %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %2, i64 %1) #17
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %3) #17
  %16 = icmp eq i32 %15, 304
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #17
  store i8 1, i8* %7, align 1
  %17 = call fastcc %"class.blink::protocol::Network::Response"* @_ZN5blinkL30BuildObjectForResourceResponseERKNS_16ResourceResponseEPKNS_8ResourceEPb(%"class.blink::ResourceResponse"* dereferenceable(1072) %3, %"class.blink::Resource"* %4, i8* nonnull %7)
  %18 = ptrtoint %"class.blink::protocol::Network::Response"* %17 to i64
  %19 = icmp ne %"class.blink::Resource"* %4, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %4, i64 0, i32 1
  %22 = load i8, i8* %21, align 8
  %23 = call i32 @_ZN5blink18InspectorPageAgent14ToResourceTypeENS_12ResourceTypeE(i8 zeroext %22) #17
  br label %24

24:                                               ; preds = %5, %20
  %25 = phi i32 [ %23, %20 ], [ 14, %5 ]
  %26 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %27 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %26, align 8
  %28 = call i32 @_ZN5blink20NetworkResourcesData15GetResourceTypeERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %29 = icmp ult i32 %28, 14
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = trunc i32 %28 to i16
  %32 = lshr i16 9121, %31
  %33 = and i16 %32, 1
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = sext i32 %28 to i64
  %37 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN5blink21InspectorNetworkAgent26DidReceiveResourceResponseEmPNS_14DocumentLoaderERKNS_16ResourceResponseEPKNS_8ResourceE, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %30, %35, %24
  %40 = phi i32 [ %25, %24 ], [ %25, %30 ], [ %38, %35 ]
  br i1 %19, label %41, label %43

41:                                               ; preds = %39
  %42 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %26, align 8
  call void @_ZN5blink20NetworkResourcesData11AddResourceERKN3WTF6StringEPKNS_8ResourceE(%"class.blink::NetworkResourcesData"* %42, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::Resource"* nonnull %4) #17
  br label %43

43:                                               ; preds = %41, %39
  %44 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.blink::DocumentLoader"* %2, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %2, i64 0, i32 21, i32 0, i32 0
  %49 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %48, align 8
  %50 = icmp eq %"class.blink::LocalFrame"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %49, i64 0, i32 0
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %52) #17
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %45, align 8
  br label %55

54:                                               ; preds = %47, %43
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  br label %55

55:                                               ; preds = %54, %51
  %56 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #17
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %57, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* %2) #17
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %57, align 8
  %59 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %26, align 8
  call void @_ZN5blink20NetworkResourcesData16ResponseReceivedERKN3WTF6StringES4_RKNS_16ResourceResponseE(%"class.blink::NetworkResourcesData"* %59, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ResourceResponse"* dereferenceable(1072) %3) #17
  %60 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %26, align 8
  call void @_ZN5blink20NetworkResourcesData15SetResourceTypeERKN3WTF6StringENS_18InspectorPageAgent12ResourceTypeE(%"class.blink::NetworkResourcesData"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 %40) #17
  %61 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %3, i64 0, i32 41, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %55
  %65 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %26, align 8
  %66 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %3, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1, i32 0, i32 10
  call void @_ZN5blink20NetworkResourcesData14SetCertificateERKN3WTF6StringERKNS1_6VectorINS1_12AtomicStringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NetworkResourcesData"* %65, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::Vector.1258"* dereferenceable(16) %66) #17
  br label %67

67:                                               ; preds = %55, %64
  br i1 %46, label %71, label %68

68:                                               ; preds = %67
  %69 = call i64 @_ZNK5blink14DocumentLoader22MainResourceIdentifierEv(%"class.blink::DocumentLoader"* nonnull %2) #17
  %70 = icmp eq i64 %69, %1
  br i1 %70, label %194, label %71

71:                                               ; preds = %67, %68
  %72 = icmp ne %"class.blink::protocol::Network::Response"* %17, null
  %73 = load i8, i8* %7, align 1
  %74 = icmp eq i8 %73, 0
  %75 = and i1 %72, %74
  br i1 %75, label %76, label %184

76:                                               ; preds = %71
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %129, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %129, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #17
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  call void @llvm.trap() #17
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83
  %101 = load atomic i32, i32* %84 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %116

106:                                              ; preds = %100
  %107 = zext i32 %105 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #17
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !4

113:                                              ; preds = %106
  call void @llvm.trap() #17
  unreachable

114:                                              ; preds = %106
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %104, align 4
  br label %116

116:                                              ; preds = %100, %114
  %117 = phi i32 [ %115, %114 ], [ %105, %100 ]
  %118 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %119 = load atomic i32, i32* %84 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %124 = add i32 %117, -1
  store i32 %124, i32* %123, align 4
  br label %125

125:                                              ; preds = %122, %116
  %126 = phi i32 [ %124, %122 ], [ %117, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %129

129:                                              ; preds = %76, %128, %125, %79
  %130 = phi i8 [ 0, %79 ], [ 1, %125 ], [ 1, %128 ], [ 0, %76 ]
  %131 = phi i64 [ 0, %79 ], [ %118, %125 ], [ %118, %128 ], [ 0, %76 ]
  %132 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %133 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %132, align 8
  %134 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %135 = add i64 %134, -9223372036854775807
  %136 = icmp ult i64 %135, 2
  br i1 %136, label %140, label %137

137:                                              ; preds = %129
  %138 = sitofp i64 %134 to double
  %139 = fdiv double %138, 1.000000e+06
  br label %143

140:                                              ; preds = %129
  %141 = icmp slt i64 %134, 0
  %142 = select i1 %141, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %143

143:                                              ; preds = %137, %140
  %144 = phi double [ %142, %140 ], [ %139, %137 ]
  %145 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #17
  %146 = call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %40) #17
  %147 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %11, i64 0, i32 0
  store i8 %130, i8* %148, align 8
  %149 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %11, i64 0, i32 1
  %150 = bitcast %"class.WTF::String"* %149 to i64*
  store i64 %131, i64* %150, align 8
  call void @_ZN5blink8protocol7Network8Frontend16responseReceivedERKN3WTF6StringES6_dS6_NSt3__110unique_ptrINS1_8ResponseENS7_14default_deleteIS9_EEEEN5crdtp6detail10ValueMaybeIS4_EE(%"class.blink::protocol::Network::Frontend"* %133, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %144, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::protocol::Network::Response"* nonnull %17, %"class.crdtp::detail::ValueMaybe"* nonnull %11) #17
  %151 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %11, i64 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #17
  br label %167

167:                                              ; preds = %143, %163, %166
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #17
  br label %183

183:                                              ; preds = %182, %179, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #17
  br label %184

184:                                              ; preds = %183, %71
  %185 = phi i64 [ 0, %183 ], [ %18, %71 ]
  %186 = and i1 %19, %16
  br i1 %186, label %187, label %194

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %4, i64 0, i32 5
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %187
  %192 = shl i64 %189, 32
  %193 = ashr exact i64 %192, 32
  call void @_ZN5blink21InspectorNetworkAgent14DidReceiveDataEmPNS_14DocumentLoaderEPKcm(%"class.blink::InspectorNetworkAgent"* %0, i64 %1, %"class.blink::DocumentLoader"* %2, i8* null, i64 %193)
  br label %194

194:                                              ; preds = %184, %191, %187, %68
  %195 = phi i64 [ %18, %68 ], [ %185, %187 ], [ %185, %191 ], [ %185, %184 ]
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #17
  br label %211

211:                                              ; preds = %194, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #17
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #17
  br label %227

227:                                              ; preds = %211, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #17
  %228 = icmp eq i64 %195, 0
  br i1 %228, label %235, label %229

229:                                              ; preds = %227
  %230 = inttoptr i64 %195 to %"class.blink::protocol::Network::Response"*
  %231 = inttoptr i64 %195 to void (%"class.blink::protocol::Network::Response"*)***
  %232 = load void (%"class.blink::protocol::Network::Response"*)**, void (%"class.blink::protocol::Network::Response"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.blink::protocol::Network::Response"*)*, void (%"class.blink::protocol::Network::Response"*)** %232, i64 2
  %234 = load void (%"class.blink::protocol::Network::Response"*)*, void (%"class.blink::protocol::Network::Response"*)** %233, align 8
  call void %234(%"class.blink::protocol::Network::Response"* nonnull %230) #17
  br label %235

235:                                              ; preds = %227, %229
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #17
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #17
  br label %251

251:                                              ; preds = %235, %247, %250
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData11AddResourceERKN3WTF6StringEPKNS_8ResourceE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Resource"*) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData16ResponseReceivedERKN3WTF6StringES4_RKNS_16ResourceResponseE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ResourceResponse"* dereferenceable(1072)) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData14SetCertificateERKN3WTF6StringERKNS1_6VectorINS1_12AtomicStringELj0ENS1_18PartitionAllocatorEEE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.1258"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21InspectorNetworkAgent12IsNavigationEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"*, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::DocumentLoader"* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @_ZNK5blink14DocumentLoader22MainResourceIdentifierEv(%"class.blink::DocumentLoader"* nonnull %0) #17
  %6 = icmp eq i64 %5, %1
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i1 [ false, %2 ], [ %6, %4 ]
  ret i1 %8
}

declare void @_ZN5blink8protocol7Network8Frontend16responseReceivedERKN3WTF6StringES6_dS6_NSt3__110unique_ptrINS1_8ResponseENS7_14default_deleteIS9_EEEEN5crdtp6detail10ValueMaybeIS4_EE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), double, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Response"*, %"class.crdtp::detail::ValueMaybe"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14DidReceiveDataEmPNS_14DocumentLoaderEPKcm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %9 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %2, i64 %1) #17
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq i8* %3, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %12, align 8
  %14 = call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %15 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %14, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %14, i64 0, i32 18, i32 0, i32 0
  %22 = load %"class.blink::Resource"*, %"class.blink::Resource"** %21, align 8
  %23 = icmp eq %"class.blink::Resource"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %22, i64 0, i32 23, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 1
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %14, i64 0, i32 12
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 399
  br i1 %31, label %32, label %34

32:                                               ; preds = %20, %28, %24
  %33 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %12, align 8
  call void @_ZN5blink20NetworkResourcesData20MaybeAddResourceDataERKN3WTF6StringEPKcm(%"class.blink::NetworkResourcesData"* %33, %"class.WTF::String"* nonnull dereferenceable(8) %6, i8* nonnull %3, i64 %4) #17
  br label %34

34:                                               ; preds = %16, %28, %32, %11, %5
  %35 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %35, align 8
  %37 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %38 = add i64 %37, -9223372036854775807
  %39 = icmp ult i64 %38, 2
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = sitofp i64 %37 to double
  %42 = fdiv double %41, 1.000000e+06
  br label %46

43:                                               ; preds = %34
  %44 = icmp slt i64 %37, 0
  %45 = select i1 %44, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %46

46:                                               ; preds = %40, %43
  %47 = phi double [ %45, %43 ], [ %42, %40 ]
  %48 = trunc i64 %4 to i32
  %49 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %50 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %49, align 8
  %51 = call i64 @_ZN5blink20NetworkResourcesData35GetAndClearPendingEncodedDataLengthERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %50, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %52 = trunc i64 %51 to i32
  call void @_ZN5blink8protocol7Network8Frontend12dataReceivedERKN3WTF6StringEdii(%"class.blink::protocol::Network::Frontend"* %36, %"class.WTF::String"* nonnull dereferenceable(8) %6, double %47, i32 %48, i32 %52) #17
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #17
  br label %68

68:                                               ; preds = %46, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData20MaybeAddResourceDataERKN3WTF6StringEPKcm(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), i8*, i64) local_unnamed_addr #4

declare void @_ZN5blink8protocol7Network8Frontend12dataReceivedERKN3WTF6StringEdii(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, i32, i32) local_unnamed_addr #4

declare i64 @_ZN5blink20NetworkResourcesData35GetAndClearPendingEncodedDataLengthERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14DidReceiveBlobEmPNS_14DocumentLoaderE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %2, i64 %1) #17
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %9, align 8
  call void @_ZN5blink20NetworkResourcesData12BlobReceivedERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::NetworkResourcesData"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::BlobDataHandle"* %3) #17
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %25, %22, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData12BlobReceivedERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::BlobDataHandle"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent27DidReceiveEncodedDataLengthEPNS_14DocumentLoaderEmm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::DocumentLoader"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %1, i64 %2) #17
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %9, align 8
  call void @_ZN5blink20NetworkResourcesData27AddPendingEncodedDataLengthERKN3WTF6StringEm(%"class.blink::NetworkResourcesData"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %5, i64 %3) #17
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %4, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData27AddPendingEncodedDataLengthERKN3WTF6StringEm(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent16DidFinishLoadingEmPNS_14DocumentLoaderEN4base9TimeTicksEllb(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, i64, i64, i64, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %10 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %2, i64 %1) #17
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %13, align 8
  %15 = call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %14, %"class.WTF::String"* nonnull dereferenceable(8) %8) #17
  %16 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %13, align 8
  %17 = call i64 @_ZN5blink20NetworkResourcesData35GetAndClearPendingEncodedDataLengthERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %16, %"class.WTF::String"* nonnull dereferenceable(8) %8) #17
  %18 = trunc i64 %17 to i32
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %34

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %21, align 8
  %23 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %24 = add i64 %23, -9223372036854775807
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = sitofp i64 %23 to double
  %28 = fdiv double %27, 1.000000e+06
  br label %32

29:                                               ; preds = %20
  %30 = icmp slt i64 %23, 0
  %31 = select i1 %30, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi double [ %31, %29 ], [ %28, %26 ]
  call void @_ZN5blink8protocol7Network8Frontend12dataReceivedERKN3WTF6StringEdii(%"class.blink::protocol::Network::Frontend"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %8, double %33, i32 0, i32 %18) #17
  br label %34

34:                                               ; preds = %32, %7
  %35 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %15, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %15, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %15, i64 0, i32 18, i32 0, i32 0
  %42 = load %"class.blink::Resource"*, %"class.blink::Resource"** %41, align 8
  %43 = icmp eq %"class.blink::Resource"* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %42, i64 0, i32 23, i32 1
  %46 = load i8, i8* %45, align 8
  %47 = icmp eq i8 %46, 1
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %15, i64 0, i32 12
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %50, 399
  br i1 %51, label %52, label %54

52:                                               ; preds = %40, %48, %44
  %53 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %13, align 8
  call void @_ZN5blink20NetworkResourcesData20MaybeAddResourceDataERKN3WTF6StringEPKcm(%"class.blink::NetworkResourcesData"* %53, %"class.WTF::String"* nonnull dereferenceable(8) %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #17
  br label %54

54:                                               ; preds = %36, %34, %52, %48
  %55 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %13, align 8
  call void @_ZN5blink20NetworkResourcesData24MaybeDecodeDataToContentERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %55, %"class.WTF::String"* nonnull dereferenceable(8) %8) #17
  %56 = icmp eq i64 %3, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  br label %59

59:                                               ; preds = %57, %54
  %60 = phi i64 [ %58, %57 ], [ %3, %54 ]
  %61 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %61, align 8
  %63 = add i64 %60, -9223372036854775807
  %64 = icmp ult i64 %63, 2
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = sitofp i64 %60 to double
  %67 = fdiv double %66, 1.000000e+06
  br label %71

68:                                               ; preds = %59
  %69 = icmp slt i64 %60, 0
  %70 = select i1 %69, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi double [ %70, %68 ], [ %67, %65 ]
  %73 = sitofp i64 %4 to double
  %74 = zext i1 %6 to i8
  %75 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %9, i64 0, i32 0
  store i8 1, i8* %75, align 1
  %76 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %9, i64 0, i32 1
  store i8 %74, i8* %76, align 1
  call void @_ZN5blink8protocol7Network8Frontend15loadingFinishedERKN3WTF6StringEddN5crdtp6detail10ValueMaybeIbEE(%"class.blink::protocol::Network::Frontend"* %62, %"class.WTF::String"* nonnull dereferenceable(8) %8, double %72, double %73, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %9) #17
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #17
  br label %92

92:                                               ; preds = %71, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData24MaybeDecodeDataToContentERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent30DidReceiveCorsRedirectResponseEmPNS_14DocumentLoaderERKNS_16ResourceResponseEPNS_8ResourceE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.blink::DocumentLoader"*, %"class.blink::ResourceResponse"* dereferenceable(1072), %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink21InspectorNetworkAgent26DidReceiveResourceResponseEmPNS_14DocumentLoaderERKNS_16ResourceResponseEPKNS_8ResourceE(%"class.blink::InspectorNetworkAgent"* %0, i64 %1, %"class.blink::DocumentLoader"* %2, %"class.blink::ResourceResponse"* dereferenceable(1072) %3, %"class.blink::Resource"* %4)
  tail call void @_ZN5blink21InspectorNetworkAgent16DidFinishLoadingEmPNS_14DocumentLoaderEN4base9TimeTicksEllb(%"class.blink::InspectorNetworkAgent"* %0, i64 %1, %"class.blink::DocumentLoader"* %2, i64 0, i64 -1, i64 undef, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14DidFailLoadingEPNS_13CoreProbeSinkEmPNS_14DocumentLoaderERKNS_13ResourceErrorERKN4base16UnguessableTokenE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::CoreProbeSink"* nocapture readnone, i64, %"class.blink::DocumentLoader"*, %"class.blink::ResourceError"* dereferenceable(208), %"class.base::UnguessableToken"* nocapture readnone dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %11 = alloca %"class.absl::optional.2272", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.crdtp::detail::ValueMaybe.3271", align 1
  %14 = alloca %"class.crdtp::detail::ValueMaybe", align 8
  %15 = alloca %"class.crdtp::detail::PtrMaybe.3272", align 8
  %16 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* %3, i64 %2) #17
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK5blink13ResourceError20IsTrustTokenCacheHitEv(%"class.blink::ResourceError"* %4) #17
  br i1 %19, label %20, label %37

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %21, align 8
  call void @_ZN5blink8protocol7Network8Frontend22requestServedFromCacheERKN3WTF6StringE(%"class.blink::protocol::Network::Frontend"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  %23 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %21, align 8
  %24 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %25 = add i64 %24, -9223372036854775807
  %26 = icmp ult i64 %25, 2
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = sitofp i64 %24 to double
  %29 = fdiv double %28, 1.000000e+06
  br label %33

30:                                               ; preds = %20
  %31 = icmp slt i64 %24, 0
  %32 = select i1 %31, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %33

33:                                               ; preds = %27, %30
  %34 = phi double [ %32, %30 ], [ %29, %27 ]
  %35 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %10, i64 0, i32 0
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %10, i64 0, i32 1
  store i8 0, i8* %36, align 1
  call void @_ZN5blink8protocol7Network8Frontend15loadingFinishedERKN3WTF6StringEddN5crdtp6detail10ValueMaybeIbEE(%"class.blink::protocol::Network::Frontend"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %34, double 0.000000e+00, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %10) #17
  br label %263

37:                                               ; preds = %6
  %38 = tail call zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"* %4) #17
  %39 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %4, i64 0, i32 0
  %41 = load i32, i32* %40, align 8, !noalias !20
  switch i32 %41, label %55 [
    i32 -20, label %42
    i32 -27, label %42
  ]

42:                                               ; preds = %37, %37
  %43 = tail call i64 @_ZNK5blink13ResourceError31GetResourceRequestBlockedReasonEv(%"class.blink::ResourceError"* %4) #17, !noalias !20
  %44 = trunc i64 %43 to i8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = lshr i64 %43, 32
  %48 = trunc i64 %47 to i32
  %49 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_118BuildBlockedReasonENS_28ResourceRequestBlockedReasonE(i32 %48) #17, !noalias !20
  %50 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  br label %55

51:                                               ; preds = %42
  %52 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE, i64 0, i64 0)) #19, !noalias !20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network17BlockedReasonEnum5OtherE, i64 0, i64 0), i64 %52) #17, !noalias !20
  %53 = bitcast %"class.WTF::String"* %8 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !20
  br label %55

55:                                               ; preds = %37, %46, %51
  %56 = phi i8 [ 1, %51 ], [ 1, %46 ], [ 0, %37 ]
  %57 = phi i64 [ %54, %51 ], [ %50, %46 ], [ 0, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %58 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %58) #17
  %59 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 48, i1 false) #17, !alias.scope !23
  %60 = load i8, i8* %59, align 8, !range !2, !noalias !23
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %187, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %4, i64 0, i32 8, i32 0, i32 0, i32 0, i32 2, i32 0
  %64 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN7network15CorsErrorStatusC1ERKS0_(%"struct.network::CorsErrorStatus"* %64, %"struct.network::CorsErrorStatus"* dereferenceable(40) %63) #17
  store i8 1, i8* %58, align 8, !alias.scope !23
  %65 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = call i8* @_Znwm(i64 24) #18
  %68 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network15CorsErrorStatusE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #17
  %70 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #17
  switch i32 %66, label %95 [
    i32 0, label %96
    i32 1, label %71
    i32 2, label %72
    i32 3, label %73
    i32 4, label %74
    i32 5, label %75
    i32 6, label %76
    i32 7, label %77
    i32 8, label %78
    i32 9, label %79
    i32 10, label %80
    i32 11, label %81
    i32 12, label %82
    i32 13, label %83
    i32 14, label %84
    i32 15, label %85
    i32 16, label %86
    i32 17, label %87
    i32 18, label %88
    i32 19, label %89
    i32 20, label %90
    i32 21, label %91
    i32 22, label %92
    i32 23, label %93
    i32 24, label %94
  ]

71:                                               ; preds = %62
  br label %96

72:                                               ; preds = %62
  br label %96

73:                                               ; preds = %62
  br label %96

74:                                               ; preds = %62
  br label %96

75:                                               ; preds = %62
  br label %96

76:                                               ; preds = %62
  br label %96

77:                                               ; preds = %62
  br label %96

78:                                               ; preds = %62
  br label %96

79:                                               ; preds = %62
  br label %96

80:                                               ; preds = %62
  br label %96

81:                                               ; preds = %62
  br label %96

82:                                               ; preds = %62
  br label %96

83:                                               ; preds = %62
  br label %96

84:                                               ; preds = %62
  br label %96

85:                                               ; preds = %62
  br label %96

86:                                               ; preds = %62
  br label %96

87:                                               ; preds = %62
  br label %96

88:                                               ; preds = %62
  br label %96

89:                                               ; preds = %62
  br label %96

90:                                               ; preds = %62
  br label %96

91:                                               ; preds = %62
  br label %96

92:                                               ; preds = %62
  br label %96

93:                                               ; preds = %62
  br label %96

94:                                               ; preds = %62
  br label %96

95:                                               ; preds = %62
  unreachable

96:                                               ; preds = %62, %94, %93, %92, %91, %90, %89, %88, %87, %86, %85, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71
  %97 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum22InsecurePrivateNetworkE, i64 0, i64 0), %94 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum27RedirectContainsCredentialsE, i64 0, i64 0), %93 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum35HeaderDisallowedByPreflightResponseE, i64 0, i64 0), %92 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum35MethodDisallowedByPreflightResponseE, i64 0, i64 0), %91 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum36InvalidAllowHeadersPreflightResponseE, i64 0, i64 0), %90 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum36InvalidAllowMethodsPreflightResponseE, i64 0, i64 0), %89 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum29PreflightInvalidAllowExternalE, i64 0, i64 0), %88 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum29PreflightMissingAllowExternalE, i64 0, i64 0), %87 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum32PreflightInvalidAllowCredentialsE, i64 0, i64 0), %86 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum28PreflightAllowOriginMismatchE, i64 0, i64 0), %85 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum32PreflightInvalidAllowOriginValueE, i64 0, i64 0), %84 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum34PreflightMultipleAllowOriginValuesE, i64 0, i64 0), %83 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum33PreflightMissingAllowOriginHeaderE, i64 0, i64 0), %82 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum33PreflightWildcardOriginNotAllowedE, i64 0, i64 0), %81 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum27PreflightDisallowedRedirectE, i64 0, i64 0), %80 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum22PreflightInvalidStatusE, i64 0, i64 0), %79 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum18CorsDisabledSchemeE, i64 0, i64 0), %78 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum23InvalidAllowCredentialsE, i64 0, i64 0), %77 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum19AllowOriginMismatchE, i64 0, i64 0), %76 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum23InvalidAllowOriginValueE, i64 0, i64 0), %75 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum25MultipleAllowOriginValuesE, i64 0, i64 0), %74 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum24MissingAllowOriginHeaderE, i64 0, i64 0), %73 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum24WildcardOriginNotAllowedE, i64 0, i64 0), %72 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum15InvalidResponseE, i64 0, i64 0), %71 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network13CorsErrorEnum16DisallowedByModeE, i64 0, i64 0), %62 ]
  %98 = call i64 @strlen(i8* nonnull %97) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %97, i64 %98) #17
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #17
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #17
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !4

116:                                              ; preds = %107
  call void @llvm.trap() #17
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %96
  %120 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  %121 = bitcast i8* %69 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %123 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = bitcast %"class.std::__1::basic_string"* %122 to i8*
  %130 = select i1 %126, i8* %128, i8* %129
  %131 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = zext i8 %125 to i64
  %134 = select i1 %126, i64 %132, i64 %133
  %135 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %130, i64 %134) #17
  %136 = getelementptr inbounds i8, i8* %67, i64 16
  %137 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %119
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %157

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #17
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !4

152:                                              ; preds = %143
  call void @llvm.trap() #17
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %157

155:                                              ; preds = %119
  %156 = bitcast i8* %136 to i64*
  store i64 0, i64* %156, align 8
  br label %171

157:                                              ; preds = %153, %138
  %158 = ptrtoint %"class.WTF::StringImpl"* %135 to i64
  %159 = bitcast i8* %136 to i64*
  store i64 %158, i64* %159, align 8
  %160 = load atomic i32, i32* %139 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %157
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %157
  %168 = phi i32 [ %166, %165 ], [ %164, %157 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #17
  br label %171

171:                                              ; preds = %170, %167, %155
  br i1 %101, label %185, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #17
  br label %185

185:                                              ; preds = %184, %181, %171
  %186 = ptrtoint i8* %67 to i64
  br label %187

187:                                              ; preds = %55, %185
  %188 = phi i64 [ %186, %185 ], [ 0, %55 ]
  %189 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %190 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %189, align 8
  %191 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %192 = add i64 %191, -9223372036854775807
  %193 = icmp ult i64 %192, 2
  br i1 %193, label %197, label %194

194:                                              ; preds = %187
  %195 = sitofp i64 %191 to double
  %196 = fdiv double %195, 1.000000e+06
  br label %200

197:                                              ; preds = %187
  %198 = icmp slt i64 %191, 0
  %199 = select i1 %198, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %200

200:                                              ; preds = %194, %197
  %201 = phi double [ %199, %197 ], [ %196, %194 ]
  %202 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #17
  %203 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %204 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %203, align 8
  %205 = call i32 @_ZN5blink20NetworkResourcesData15GetResourceTypeERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %204, %"class.WTF::String"* nonnull dereferenceable(8) %9) #17
  %206 = call %"class.WTF::StringImpl"* @_ZN5blink18InspectorPageAgent16ResourceTypeJsonENS0_12ResourceTypeE(i32 %205) #17
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %206, %"class.WTF::StringImpl"** %207, align 8
  %208 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %4, i64 0, i32 4
  %209 = zext i1 %38 to i8
  %210 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %13, i64 0, i32 0
  store i8 1, i8* %210, align 1
  %211 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %13, i64 0, i32 1
  store i8 %209, i8* %211, align 1
  %212 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 0
  store i8 %56, i8* %212, align 8
  %213 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 1
  %214 = bitcast %"class.WTF::String"* %213 to i64*
  store i64 %57, i64* %214, align 8
  %215 = bitcast %"class.crdtp::detail::PtrMaybe.3272"* %15 to i64*
  store i64 %188, i64* %215, align 8
  call void @_ZN5blink8protocol7Network8Frontend13loadingFailedERKN3WTF6StringEdS6_S6_N5crdtp6detail10ValueMaybeIbEENS9_IS4_EENS8_8PtrMaybeINS1_15CorsErrorStatusEEE(%"class.blink::protocol::Network::Frontend"* %190, %"class.WTF::String"* nonnull dereferenceable(8) %9, double %201, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* dereferenceable(8) %208, %"class.crdtp::detail::ValueMaybe.3271"* nonnull %13, %"class.crdtp::detail::ValueMaybe"* nonnull %14, %"class.crdtp::detail::PtrMaybe.3272"* nonnull %15) #17
  %216 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3272", %"class.crdtp::detail::PtrMaybe.3272"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"class.blink::protocol::Network::CorsErrorStatus"*, %"class.blink::protocol::Network::CorsErrorStatus"** %216, align 8
  store %"class.blink::protocol::Network::CorsErrorStatus"* null, %"class.blink::protocol::Network::CorsErrorStatus"** %216, align 8
  %218 = icmp eq %"class.blink::protocol::Network::CorsErrorStatus"* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %200
  %220 = bitcast %"class.blink::protocol::Network::CorsErrorStatus"* %217 to void (%"class.blink::protocol::Network::CorsErrorStatus"*)***
  %221 = load void (%"class.blink::protocol::Network::CorsErrorStatus"*)**, void (%"class.blink::protocol::Network::CorsErrorStatus"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.blink::protocol::Network::CorsErrorStatus"*)*, void (%"class.blink::protocol::Network::CorsErrorStatus"*)** %221, i64 2
  %223 = load void (%"class.blink::protocol::Network::CorsErrorStatus"*)*, void (%"class.blink::protocol::Network::CorsErrorStatus"*)** %222, align 8
  call void %223(%"class.blink::protocol::Network::CorsErrorStatus"* nonnull %217) #17
  br label %224

224:                                              ; preds = %200, %219
  %225 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %14, i64 0, i32 1, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #17
  br label %241

241:                                              ; preds = %224, %237, %240
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #17
  br label %257

257:                                              ; preds = %256, %253, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #17
  %258 = load i8, i8* %58, align 8, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.absl::optional.2272", %"class.absl::optional.2272"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN7network15CorsErrorStatusD1Ev(%"struct.network::CorsErrorStatus"* %261) #17
  store i8 0, i8* %58, align 8
  br label %262

262:                                              ; preds = %260, %257
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %58) #17
  br label %263

263:                                              ; preds = %262, %33
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %263
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #17
  br label %279

279:                                              ; preds = %263, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  ret void
}

declare zeroext i1 @_ZNK5blink13ResourceError20IsTrustTokenCacheHitEv(%"class.blink::ResourceError"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14ScriptImportedEmRKN3WTF6StringE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  call void @_ZN5blink20NetworkResourcesData18SetResourceContentERKN3WTF6StringES4_b(%"class.blink::NetworkResourcesData"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext false) #17
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #17
  br label %25

25:                                               ; preds = %3, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink20NetworkResourcesData18SetResourceContentERKN3WTF6StringES4_b(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent24DidReceiveScriptResponseEm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZN5blink20NetworkResourcesData15SetResourceTypeERKN3WTF6StringENS_18InspectorPageAgent12ResourceTypeE(%"class.blink::NetworkResourcesData"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 5) #17
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #17
  br label %24

24:                                               ; preds = %2, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

declare i64 @_ZNK5blink14DocumentLoader22MainResourceIdentifierEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent11WillLoadXHREPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS_4KURLEbRKNS_13HTTPHeaderMapEb(%"class.blink::InspectorNetworkAgent"* nocapture, %"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"class.blink::HTTPHeaderMap"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::KURL", align 8
  %9 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 112, i1 false) #17, !alias.scope !26
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %3) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %8) #17
  %10 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13XHRReplayDataEEEPhm(i64 176) #17
  %11 = bitcast i8* %10 to %"class.blink::XHRReplayData"*
  call void @_ZN5blink13XHRReplayDataC1EPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS_4KURLEbb(%"class.blink::XHRReplayData"* %11, %"class.blink::ExecutionContext"* %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i1 zeroext %4, i1 zeroext %6) #17
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 7
  %17 = ptrtoint i8* %10 to i64
  %18 = bitcast %"class.blink::Member.1193"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %7
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #17
  br label %23

23:                                               ; preds = %7, %21
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %9) #17
  %24 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %5, i64 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %5, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %5, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %28, i64 %31
  br i1 %26, label %47, label %33

33:                                               ; preds = %23
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %33, %39
  %36 = phi %"struct.WTF::KeyValuePair.1201"* [ %40, %39 ], [ %28, %33 ]
  %37 = bitcast %"struct.WTF::KeyValuePair.1201"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  switch i64 %38, label %42 [
    i64 -1, label %39
    i64 0, label %39
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %36, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair.1201"* %40, %32
  br i1 %41, label %47, label %35

42:                                               ; preds = %35, %33
  %43 = phi %"struct.WTF::KeyValuePair.1201"* [ %28, %33 ], [ %36, %35 ]
  %44 = icmp eq %"struct.WTF::KeyValuePair.1201"* %43, %32
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::Member.1193", %"class.blink::Member.1193"* %16, i64 0, i32 0, i32 0
  br label %48

47:                                               ; preds = %39, %48, %62, %59, %23, %42
  ret void

48:                                               ; preds = %45, %62
  %49 = phi %"struct.WTF::KeyValuePair.1201"* [ %43, %45 ], [ %56, %62 ]
  %50 = load %"class.blink::XHRReplayData"*, %"class.blink::XHRReplayData"** %46, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %49, i64 0, i32 0
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %49, i64 0, i32 1
  call void @_ZN5blink13XHRReplayData9AddHeaderERKN3WTF12AtomicStringES4_(%"class.blink::XHRReplayData"* %50, %"class.WTF::AtomicString"* dereferenceable(8) %51, %"class.WTF::AtomicString"* dereferenceable(8) %52) #17
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.1201"* %53, %32
  br i1 %54, label %47, label %55

55:                                               ; preds = %48, %59
  %56 = phi %"struct.WTF::KeyValuePair.1201"* [ %60, %59 ], [ %53, %48 ]
  %57 = bitcast %"struct.WTF::KeyValuePair.1201"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %62 [
    i64 -1, label %59
    i64 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %56, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair.1201"* %60, %32
  br i1 %61, label %47, label %55

62:                                               ; preds = %55
  %63 = icmp eq %"struct.WTF::KeyValuePair.1201"* %56, %32
  br i1 %63, label %47, label %48
}

declare void @_ZN5blink13XHRReplayData9AddHeaderERKN3WTF12AtomicStringES4_(%"class.blink::XHRReplayData"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent12DidFinishXHREPNS_14XMLHttpRequestE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 9, i32 0
  %4 = ptrtoint %"class.blink::XMLHttpRequest"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::HashSet.1223", %"class.WTF::HashSet.1223"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %5, align 8
  %7 = icmp eq %"class.blink::Member.1226"* %6, null
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  br i1 %7, label %71, label %10

10:                                               ; preds = %2
  %11 = add i32 %9, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %6, i64 %33
  %35 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %35, align 8
  %37 = icmp eq %"class.blink::XMLHttpRequest"* %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %10
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %57, %38
  %53 = phi %"class.blink::XMLHttpRequest"* [ %36, %38 ], [ %64, %57 ]
  %54 = phi i64 [ %33, %38 ], [ %61, %57 ]
  %55 = phi i64 [ 0, %38 ], [ %59, %57 ]
  %56 = icmp eq %"class.blink::XMLHttpRequest"* %53, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %52
  %58 = icmp eq i64 %55, 0
  %59 = select i1 %58, i64 %51, i64 %55
  %60 = add i64 %59, %54
  %61 = and i64 %60, %12
  %62 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %6, i64 %61
  %63 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %63, align 8
  %65 = icmp eq %"class.blink::XMLHttpRequest"* %64, %1
  br i1 %65, label %66, label %52

66:                                               ; preds = %57, %10
  %67 = phi %"class.blink::Member.1226"* [ %34, %10 ], [ %62, %57 ]
  %68 = icmp eq %"class.blink::Member.1226"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = zext i32 %9 to i64
  br label %74

71:                                               ; preds = %52, %66, %2
  %72 = zext i32 %9 to i64
  %73 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %6, i64 %72
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i64 [ %70, %69 ], [ %72, %71 ]
  %76 = phi %"class.blink::Member.1226"* [ %67, %69 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %6, i64 %75
  %78 = icmp eq %"class.blink::Member.1226"* %77, %76
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::HashSet.1223", %"class.WTF::HashSet.1223"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.1224"* %80, %"class.blink::Member.1226"* %76) #17
  br label %81

81:                                               ; preds = %74, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN5blink21InspectorNetworkAgent26WillSendEventSourceRequestEv(%"class.blink::InspectorNetworkAgent"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = bitcast i8* %2 to i64*
  store i64 38654705665, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent28WillDispatchEventSourceEventEmRKN3WTF12AtomicStringES4_RKNS1_6StringE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %7, align 8
  %9 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %13 = add i64 %12, -9223372036854775807
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = sitofp i64 %12 to double
  %17 = fdiv double %16, 1.000000e+06
  br label %21

18:                                               ; preds = %5
  %19 = icmp slt i64 %12, 0
  %20 = select i1 %19, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %21

21:                                               ; preds = %15, %18
  %22 = phi double [ %20, %18 ], [ %17, %15 ]
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  call void @_ZN5blink8protocol7Network8Frontend26eventSourceMessageReceivedERKN3WTF6StringEdS6_S6_S6_(%"class.blink::protocol::Network::Frontend"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %6, double %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::String"* dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %4) #17
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %21, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend26eventSourceMessageReceivedERKN3WTF6StringEdS6_S6_S6_(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #4

declare %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEi(%"class.blink::SourceLocation"*, i32) local_unnamed_addr #4

declare %"class.blink::ScriptableDocumentParser"* @_ZNK5blink8Document27GetScriptableDocumentParserEv(%"class.blink::Document"*) local_unnamed_addr #4

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #4

declare %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent18DidCreateWebSocketEPNS_16ExecutionContextEmRKNS_4KURLERKN3WTF6StringE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ExecutionContext"*, i64, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.crdtp::detail::PtrMaybe.3430", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.crdtp::detail::PtrMaybe.3430", align 8
  %13 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %1) #17
  %14 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* %13) #17
  %15 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %14 to i64
  %16 = icmp eq %"class.blink::SourceLocation"* %13, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %13) #17
  %18 = bitcast %"class.blink::SourceLocation"* %13 to i8*
  tail call void @free(i8* %18) #17
  br label %19

19:                                               ; preds = %5, %17
  %20 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %14, null
  br i1 %20, label %21, label %54

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %22, align 8
  %24 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %27) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 112, i1 false) #17, !alias.scope !29
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %7, %"class.blink::KURL"* dereferenceable(112) %3) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %7) #17
  %28 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 4
  %29 = bitcast %"class.crdtp::detail::PtrMaybe.3430"* %8 to i64*
  store i64 0, i64* %29, align 8
  call void @_ZN5blink8protocol7Network8Frontend16webSocketCreatedERKN3WTF6StringES6_N5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"* %23, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %28, %"class.crdtp::detail::PtrMaybe.3430"* nonnull %8) #17
  %30 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3430", %"class.crdtp::detail::PtrMaybe.3430"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %30, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %30, align 8
  %32 = icmp eq %"class.blink::protocol::Network::Initiator"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::protocol::Network::Initiator"* %31 to void (%"class.blink::protocol::Network::Initiator"*)***
  %35 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %35, i64 2
  %37 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %36, align 8
  call void %37(%"class.blink::protocol::Network::Initiator"* nonnull %31) #17
  br label %38

38:                                               ; preds = %21, %33
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %27) #17
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %178, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %178

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #17
  br label %178

54:                                               ; preds = %19
  %55 = tail call i8* @_Znwm(i64 88) #18
  %56 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = getelementptr inbounds i8, i8* %55, i64 32
  %59 = bitcast i8* %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %55, i64 40
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds i8, i8* %55, i64 48
  %62 = bitcast i8* %61 to double*
  store double 0.000000e+00, double* %62, align 8
  %63 = getelementptr inbounds i8, i8* %55, i64 56
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds i8, i8* %55, i64 64
  %65 = bitcast i8* %64 to double*
  store double 0.000000e+00, double* %65, align 8
  %66 = getelementptr inbounds i8, i8* %55, i64 72
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds i8, i8* %55, i64 80
  %68 = bitcast i8* %67 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 17, i1 false) #17
  %69 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #17
  %70 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ScriptE, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %54
  %73 = tail call i64 @strlen(i8* nonnull %70) #19
  br label %74

74:                                               ; preds = %54, %72
  %75 = phi i64 [ %73, %72 ], [ 0, %54 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %70, i64 %75) #17
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #17
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %97, !prof !4

93:                                               ; preds = %84
  call void @llvm.trap() #17
  unreachable

94:                                               ; preds = %79, %74
  %95 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %96 = bitcast i8* %57 to i64*
  store i64 %95, i64* %96, align 8
  br label %117

97:                                               ; preds = %84
  %98 = trunc i33 %90 to i32
  store i32 %98, i32* %85, align 4
  %99 = bitcast i8* %57 to %"class.WTF::StringImpl"**
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = ptrtoint %"class.WTF::StringImpl"* %77 to i64
  %102 = bitcast i8* %57 to i64*
  store i64 %101, i64* %102, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #17
  br label %117

117:                                              ; preds = %94, %97, %113, %116
  %118 = ptrtoint i8* %55 to i64
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #17
  br label %134

134:                                              ; preds = %133, %130, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #17
  %135 = getelementptr inbounds i8, i8* %55, i64 16
  %136 = bitcast i8* %135 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"**
  %137 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %136, align 8
  %138 = bitcast i8* %135 to i64*
  store i64 %15, i64* %138, align 8
  %139 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %137, null
  br i1 %139, label %145, label %140

140:                                              ; preds = %134
  %141 = bitcast %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %137 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %142 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %142, i64 2
  %144 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %143, align 8
  call void %144(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %137) #17
  br label %145

145:                                              ; preds = %134, %140
  %146 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %146, align 8
  %148 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #17
  %149 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %150, align 8
  %151 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %151) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %151, i8 -86, i64 112, i1 false) #17, !alias.scope !32
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %11, %"class.blink::KURL"* dereferenceable(112) %3) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %11) #17
  %152 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 4
  %153 = bitcast %"class.crdtp::detail::PtrMaybe.3430"* %12 to i64*
  store i64 %118, i64* %153, align 8
  call void @_ZN5blink8protocol7Network8Frontend16webSocketCreatedERKN3WTF6StringES6_N5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"* %147, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %152, %"class.crdtp::detail::PtrMaybe.3430"* nonnull %12) #17
  %154 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3430", %"class.crdtp::detail::PtrMaybe.3430"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %154, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %154, align 8
  %156 = icmp eq %"class.blink::protocol::Network::Initiator"* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %145
  %158 = bitcast %"class.blink::protocol::Network::Initiator"* %155 to void (%"class.blink::protocol::Network::Initiator"*)***
  %159 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %159, i64 2
  %161 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %160, align 8
  call void %161(%"class.blink::protocol::Network::Initiator"* nonnull %155) #17
  br label %162

162:                                              ; preds = %145, %157
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %151) #17
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #17
  br label %178

178:                                              ; preds = %38, %50, %53, %177, %174, %162
  %179 = phi i8* [ %148, %162 ], [ %148, %174 ], [ %148, %177 ], [ %24, %53 ], [ %24, %50 ], [ %24, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #17
  ret void
}

declare %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"*) local_unnamed_addr #4

declare void @_ZN5blink8protocol7Network8Frontend16webSocketCreatedERKN3WTF6StringES6_N5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::PtrMaybe.3430"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent33WillSendWebSocketHandshakeRequestEPNS_16ExecutionContextEmPN7network5mojom5blink25WebSocketHandshakeRequestE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, i64, %"class.network::mojom::blink::WebSocketHandshakeRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HTTPHeaderMap", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.base::Time", align 8
  %10 = bitcast %"class.blink::HTTPHeaderMap"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %11 = bitcast %"class.blink::HTTPHeaderMap"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* nonnull %5) #17
  %12 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeRequest", %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.mojo::InlinedStructPtr.3434"*, %"class.mojo::InlinedStructPtr.3434"** %12, align 8
  %14 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeRequest", %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %21 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %22 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %23 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %24 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  br label %71

27:                                               ; preds = %163, %4
  %28 = call i8* @_Znwm(i64 16) #18
  %29 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network16WebSocketRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %28 to %"class.blink::protocol::Network::WebSocketRequest"*
  %33 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nonnull dereferenceable(24) %5)
  %34 = ptrtoint %"class.blink::protocol::Object"* %33 to i64
  store i64 %34, i64* %31, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %35, align 8
  %37 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  %38 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %39, align 8
  %40 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %41 = add i64 %40, -9223372036854775807
  %42 = icmp ult i64 %41, 2
  br i1 %42, label %46, label %43

43:                                               ; preds = %27
  %44 = sitofp i64 %40 to double
  %45 = fdiv double %44, 1.000000e+06
  br label %49

46:                                               ; preds = %27
  %47 = icmp slt i64 %40, 0
  %48 = select i1 %47, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %49

49:                                               ; preds = %43, %46
  %50 = phi double [ %48, %46 ], [ %45, %43 ]
  %51 = bitcast %"class.base::Time"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #17
  %52 = call i64 @_ZN4base4Time3NowEv() #17
  %53 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %9, i64 0, i32 0, i32 0
  store i64 %52, i64* %53, align 8
  %54 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %9) #17
  call void @_ZN5blink8protocol7Network8Frontend33webSocketWillSendHandshakeRequestERKN3WTF6StringEddNSt3__110unique_ptrINS1_16WebSocketRequestENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"* %36, %"class.WTF::String"* nonnull dereferenceable(8) %8, double %50, double %54, %"class.blink::protocol::Network::WebSocketRequest"* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #17
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #17
  br label %70

70:                                               ; preds = %69, %66, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  ret void

71:                                               ; preds = %19, %163
  %72 = phi %"class.mojo::InlinedStructPtr.3434"* [ %13, %19 ], [ %164, %163 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %99, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 acquire, align 4
  %79 = and i32 %78, 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %97, label %81

81:                                               ; preds = %76
  %82 = load atomic i32, i32* %77 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %99

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = zext i32 %87 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #17
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !4

94:                                               ; preds = %85
  call void @llvm.trap() #17
  unreachable

95:                                               ; preds = %85
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %86, align 4
  br label %99

97:                                               ; preds = %76
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %74) #17
  br label %99

99:                                               ; preds = %71, %81, %95, %97
  %100 = phi %"class.WTF::StringImpl"* [ %98, %97 ], [ %74, %81 ], [ %74, %95 ], [ null, %71 ]
  %101 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  store i64 %101, i64* %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %102 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %72, i64 0, i32 0, i32 1, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %128, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 acquire, align 4
  %108 = and i32 %107, 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %126, label %110

110:                                              ; preds = %105
  %111 = load atomic i32, i32* %106 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %128

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i33
  %118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %117, i33 1) #17
  %119 = extractvalue { i33, i1 } %118, 1
  %120 = extractvalue { i33, i1 } %118, 0
  %121 = icmp slt i33 %120, 0
  %122 = or i1 %119, %121
  br i1 %122, label %123, label %124, !prof !4

123:                                              ; preds = %114
  call void @llvm.trap() #17
  unreachable

124:                                              ; preds = %114
  %125 = trunc i33 %120 to i32
  store i32 %125, i32* %115, align 4
  br label %128

126:                                              ; preds = %105
  %127 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %128

128:                                              ; preds = %99, %110, %124, %126
  %129 = phi %"class.WTF::StringImpl"* [ %127, %126 ], [ %103, %110 ], [ %103, %124 ], [ null, %99 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  store i64 %130, i64* %23, align 8
  %131 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %24, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #17
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #17
  br label %147

147:                                              ; preds = %128, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #17
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  %164 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %72, i64 1
  %165 = icmp eq %"class.mojo::InlinedStructPtr.3434"* %164, %17
  br i1 %165, label %27, label %71
}

declare void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.crdtp::ErrorSupport", align 8
  %3 = tail call i8* @_Znwm(i64 80) #18
  %4 = bitcast i8* %3 to %"class.blink::protocol::DictionaryValue"*
  tail call void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"* nonnull %4) #17
  %5 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %9, i64 %12
  br i1 %7, label %26, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.1201"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.1201"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.1201"* %21, %13
  br i1 %22, label %26, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.1201"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.1201"* %24, %13
  br i1 %25, label %26, label %52

26:                                               ; preds = %20, %52, %65, %62, %1, %23
  %27 = bitcast %"class.crdtp::ErrorSupport"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %2, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 48, i1 false) #17
  %30 = bitcast i8* %3 to %"class.blink::protocol::Value"*
  %31 = call %"class.blink::protocol::Object"* @_ZN5blink8protocol6Object9fromValueEPNS0_5ValueEPN5crdtp12ErrorSupportE(%"class.blink::protocol::Value"* nonnull %30, %"class.crdtp::ErrorSupport"* nonnull %2) #17
  %32 = getelementptr inbounds %"class.crdtp::ErrorSupport", %"class.crdtp::ErrorSupport"* %2, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %40

40:                                               ; preds = %37, %26
  %41 = load %"struct.crdtp::ErrorSupport::Segment"*, %"struct.crdtp::ErrorSupport::Segment"** %28, align 8
  %42 = icmp eq %"struct.crdtp::ErrorSupport::Segment"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = ptrtoint %"struct.crdtp::ErrorSupport::Segment"* %41 to i64
  %45 = bitcast %"struct.crdtp::ErrorSupport::Segment"** %29 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"struct.crdtp::ErrorSupport::Segment"* %41 to i8*
  call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #17
  %48 = bitcast i8* %3 to void (%"class.blink::protocol::DictionaryValue"*)***
  %49 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %49, i64 2
  %51 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %50, align 8
  call void %51(%"class.blink::protocol::DictionaryValue"* nonnull %4) #17
  ret %"class.blink::protocol::Object"* %31

52:                                               ; preds = %23, %65
  %53 = phi %"struct.WTF::KeyValuePair.1201"* [ %59, %65 ], [ %24, %23 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %53, i64 0, i32 1, i32 0
  tail call void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %54, %"class.WTF::String"* dereferenceable(8) %55) #17
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %53, i64 1
  %57 = icmp eq %"struct.WTF::KeyValuePair.1201"* %56, %13
  br i1 %57, label %26, label %58

58:                                               ; preds = %52, %62
  %59 = phi %"struct.WTF::KeyValuePair.1201"* [ %63, %62 ], [ %56, %52 ]
  %60 = bitcast %"struct.WTF::KeyValuePair.1201"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  switch i64 %61, label %65 [
    i64 -1, label %62
    i64 0, label %62
  ]

62:                                               ; preds = %58, %58
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %59, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair.1201"* %63, %13
  br i1 %64, label %26, label %58

65:                                               ; preds = %58
  %66 = icmp eq %"struct.WTF::KeyValuePair.1201"* %59, %13
  br i1 %66, label %26, label %52
}

declare void @_ZN5blink8protocol7Network8Frontend33webSocketWillSendHandshakeRequestERKN3WTF6StringEddNSt3__110unique_ptrINS1_16WebSocketRequestENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, double, %"class.blink::protocol::Network::WebSocketRequest"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent36DidReceiveWebSocketHandshakeResponseEPNS_16ExecutionContextEmPN7network5mojom5blink25WebSocketHandshakeRequestEPNS5_26WebSocketHandshakeResponseE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, i64, %"class.network::mojom::blink::WebSocketHandshakeRequest"* readonly, %"class.network::mojom::blink::WebSocketHandshakeResponse"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::HTTPHeaderMap", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.3449", align 8
  %11 = alloca %"class.blink::HTTPHeaderMap", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = bitcast %"class.blink::HTTPHeaderMap"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = bitcast %"class.blink::HTTPHeaderMap"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* nonnull %6) #17
  %17 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeResponse", %"class.network::mojom::blink::WebSocketHandshakeResponse"* %4, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"class.mojo::InlinedStructPtr.3434"*, %"class.mojo::InlinedStructPtr.3434"** %17, align 8
  %19 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeResponse", %"class.network::mojom::blink::WebSocketHandshakeResponse"* %4, i64 0, i32 5, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %18, i64 %21
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  %26 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %27 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  %28 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %29 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %6, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  %33 = bitcast %"class.WTF::StringAppend.3449"* %10 to i8*
  %34 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %10, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %112

38:                                               ; preds = %385, %5
  %39 = call i8* @_Znwm(i64 72) #18
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network17WebSocketResponseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 16
  %42 = getelementptr inbounds i8, i8* %39, i64 40
  %43 = getelementptr inbounds i8, i8* %39, i64 64
  %44 = bitcast i8* %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds i8, i8* %39, i64 8
  %46 = bitcast i8* %45 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 17, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 17, i1 false) #17
  %47 = bitcast i8* %39 to %"class.blink::protocol::Network::WebSocketResponse"*
  %48 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeResponse", %"class.network::mojom::blink::WebSocketHandshakeResponse"* %4, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %46, align 8
  %50 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeResponse", %"class.network::mojom::blink::WebSocketHandshakeResponse"* %4, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #17
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %71, !prof !4

67:                                               ; preds = %58
  call void @llvm.trap() #17
  unreachable

68:                                               ; preds = %53, %38
  %69 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %70 = bitcast i8* %41 to i64*
  store i64 %69, i64* %70, align 8
  br label %91

71:                                               ; preds = %58
  %72 = trunc i33 %64 to i32
  store i32 %72, i32* %59, align 4
  %73 = bitcast i8* %41 to %"class.WTF::StringImpl"**
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %76 = bitcast i8* %41 to i64*
  store i64 %75, i64* %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #17
  br label %91

91:                                               ; preds = %68, %71, %87, %90
  %92 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nonnull dereferenceable(24) %6)
  %93 = ptrtoint %"class.blink::protocol::Object"* %92 to i64
  %94 = getelementptr inbounds i8, i8* %39, i64 24
  %95 = bitcast i8* %94 to %"class.blink::protocol::Object"**
  %96 = load %"class.blink::protocol::Object"*, %"class.blink::protocol::Object"** %95, align 8
  %97 = bitcast i8* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %"class.blink::protocol::Object"* %96, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %91
  %100 = bitcast %"class.blink::protocol::Object"* %96 to void (%"class.blink::protocol::Object"*)***
  %101 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %101, i64 2
  %103 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %102, align 8
  call void %103(%"class.blink::protocol::Object"* nonnull %96) #17
  br label %104

104:                                              ; preds = %99, %91
  %105 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeResponse", %"class.network::mojom::blink::WebSocketHandshakeResponse"* %4, i64 0, i32 6, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %408, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %408, label %388

112:                                              ; preds = %24, %385
  %113 = phi %"class.mojo::InlinedStructPtr.3434"* [ %18, %24 ], [ %386, %385 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %114 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 acquire, align 4
  %120 = and i32 %119, 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %117
  %123 = load atomic i32, i32* %118 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %140

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = zext i32 %128 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #17
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !4

135:                                              ; preds = %126
  call void @llvm.trap() #17
  unreachable

136:                                              ; preds = %126
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %127, align 4
  br label %140

138:                                              ; preds = %117
  %139 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %115) #17
  br label %140

140:                                              ; preds = %112, %122, %136, %138
  %141 = phi %"class.WTF::StringImpl"* [ %139, %138 ], [ %115, %122 ], [ %115, %136 ], [ null, %112 ]
  %142 = ptrtoint %"class.WTF::StringImpl"* %141 to i64
  store i64 %142, i64* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  %143 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %113, i64 0, i32 0, i32 1, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %169, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 acquire, align 4
  %149 = and i32 %148, 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %146
  %152 = load atomic i32, i32* %147 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %169

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = zext i32 %157 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #17
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !4

164:                                              ; preds = %155
  call void @llvm.trap() #17
  unreachable

165:                                              ; preds = %155
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %156, align 4
  br label %169

167:                                              ; preds = %146
  %168 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %144) #17
  br label %169

169:                                              ; preds = %140, %151, %165, %167
  %170 = phi %"class.WTF::StringImpl"* [ %168, %167 ], [ %144, %151 ], [ %144, %165 ], [ null, %140 ]
  %171 = ptrtoint %"class.WTF::StringImpl"* %170 to i64
  store i64 %171, i64* %28, align 8
  %172 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %29, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #17
  %173 = extractvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %172, 1
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %189, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %174) #17
  br label %189

189:                                              ; preds = %169, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #17
  br label %205

205:                                              ; preds = %189, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %206 = and i8 %173, 1
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %385

208:                                              ; preds = %205
  %209 = extractvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %172, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #17
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %209, i64 0, i32 1
  %211 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %210, i64 0, i32 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %258, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %231

221:                                              ; preds = %214
  %222 = zext i32 %220 to i33
  %223 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #17
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !4

228:                                              ; preds = %221
  call void @llvm.trap() #17
  unreachable

229:                                              ; preds = %221
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %219, align 4
  br label %231

231:                                              ; preds = %214, %229
  %232 = phi i32 [ %230, %229 ], [ %220, %214 ]
  %233 = load atomic i32, i32* %215 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  br i1 %235, label %237, label %247

237:                                              ; preds = %231
  %238 = zext i32 %232 to i33
  %239 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %238, i33 1) #17
  %240 = extractvalue { i33, i1 } %239, 1
  %241 = extractvalue { i33, i1 } %239, 0
  %242 = icmp slt i33 %241, 0
  %243 = or i1 %240, %242
  br i1 %243, label %244, label %245, !prof !4

244:                                              ; preds = %237
  call void @llvm.trap() #17
  unreachable

245:                                              ; preds = %237
  %246 = trunc i33 %241 to i32
  store i32 %246, i32* %236, align 4
  br label %247

247:                                              ; preds = %245, %231
  %248 = phi i32 [ %246, %245 ], [ %232, %231 ]
  %249 = load atomic i32, i32* %215 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %247
  %253 = add i32 %248, -1
  store i32 %253, i32* %236, align 4
  br label %254

254:                                              ; preds = %252, %247
  %255 = phi i32 [ %253, %252 ], [ %248, %247 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #17
  br label %258

258:                                              ; preds = %208, %254, %257
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %34, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %35, align 8
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %278, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = zext i32 %268 to i33
  %270 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %269, i33 1) #17
  %271 = extractvalue { i33, i1 } %270, 1
  %272 = extractvalue { i33, i1 } %270, 0
  %273 = icmp slt i33 %272, 0
  %274 = or i1 %271, %273
  br i1 %274, label %275, label %276, !prof !4

275:                                              ; preds = %266
  call void @llvm.trap() #17
  unreachable

276:                                              ; preds = %266
  %277 = trunc i33 %272 to i32
  store i32 %277, i32* %267, align 4
  br label %278

278:                                              ; preds = %258, %261, %276
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %9, %"class.WTF::StringAppend.3449"* nonnull dereferenceable(16) %10, %"class.WTF::StringImpl"* %259)
  %279 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %9) #17
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %317, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 acquire, align 4
  %284 = and i32 %283, 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %281
  %287 = load atomic i32, i32* %282 monotonic, align 4
  %288 = and i32 %287, 2
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %304

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = zext i32 %292 to i33
  %294 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %293, i33 1) #17
  %295 = extractvalue { i33, i1 } %294, 1
  %296 = extractvalue { i33, i1 } %294, 0
  %297 = icmp slt i33 %296, 0
  %298 = or i1 %295, %297
  br i1 %298, label %299, label %300, !prof !4

299:                                              ; preds = %290
  call void @llvm.trap() #17
  unreachable

300:                                              ; preds = %290
  %301 = trunc i33 %296 to i32
  store i32 %301, i32* %291, align 4
  br label %304

302:                                              ; preds = %281
  %303 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %279) #17
  br label %304

304:                                              ; preds = %302, %300, %286
  %305 = phi %"class.WTF::StringImpl"* [ %279, %300 ], [ %279, %286 ], [ %303, %302 ]
  %306 = load atomic i32, i32* %282 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #17
  br label %317

317:                                              ; preds = %278, %313, %316
  %318 = phi %"class.WTF::StringImpl"* [ %305, %313 ], [ %305, %316 ], [ null, %278 ]
  %319 = ptrtoint %"class.WTF::StringImpl"* %318 to i64
  %320 = bitcast %"class.WTF::AtomicString"* %210 to i64*
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  store i64 %319, i64* %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %336, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  br i1 %327, label %330, label %332

330:                                              ; preds = %323
  %331 = add i32 %329, -1
  store i32 %331, i32* %328, align 4
  br label %332

332:                                              ; preds = %330, %323
  %333 = phi i32 [ %331, %330 ], [ %329, %323 ]
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %336

335:                                              ; preds = %332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %321) #17
  br label %336

336:                                              ; preds = %335, %332, %317
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #17
  br label %352

352:                                              ; preds = %351, %348, %336
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #17
  br label %368

368:                                              ; preds = %352, %364, %367
  %369 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %370 = icmp eq %"class.WTF::StringImpl"* %369, null
  br i1 %370, label %384, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %369, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %369) #17
  br label %384

384:                                              ; preds = %368, %380, %383
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br label %385

385:                                              ; preds = %205, %384
  %386 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %113, i64 1
  %387 = icmp eq %"class.mojo::InlinedStructPtr.3434"* %386, %22
  br i1 %387, label %38, label %112

388:                                              ; preds = %108
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %405

393:                                              ; preds = %388
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %395 = load i32, i32* %394, align 4
  %396 = zext i32 %395 to i33
  %397 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %396, i33 1) #17
  %398 = extractvalue { i33, i1 } %397, 1
  %399 = extractvalue { i33, i1 } %397, 0
  %400 = icmp slt i33 %399, 0
  %401 = or i1 %398, %400
  br i1 %401, label %402, label %403, !prof !4

402:                                              ; preds = %393
  call void @llvm.trap() #17
  unreachable

403:                                              ; preds = %393
  %404 = trunc i33 %399 to i32
  store i32 %404, i32* %394, align 4
  br label %405

405:                                              ; preds = %388, %403
  %406 = getelementptr inbounds i8, i8* %39, i64 32
  %407 = bitcast i8* %406 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %407, %"class.WTF::StringImpl"* nonnull %106) #17
  br label %408

408:                                              ; preds = %104, %405, %108
  %409 = icmp eq %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, null
  br i1 %409, label %565, label %410

410:                                              ; preds = %408
  %411 = bitcast %"class.blink::HTTPHeaderMap"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %411) #17
  %412 = bitcast %"class.blink::HTTPHeaderMap"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %412, i8 -86, i64 24, i1 false)
  call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* nonnull %11) #17
  %413 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeRequest", %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %414 = load %"class.mojo::InlinedStructPtr.3434"*, %"class.mojo::InlinedStructPtr.3434"** %413, align 8
  %415 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeRequest", %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %414, i64 %417
  %419 = icmp eq i32 %416, 0
  br i1 %419, label %428, label %420

420:                                              ; preds = %410
  %421 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  %422 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %423 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %424 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %425 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %11, i64 0, i32 0, i32 0
  %426 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %427 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  br label %449

428:                                              ; preds = %541, %410
  %429 = call fastcc %"class.blink::protocol::Object"* @_ZN5blink12_GLOBAL__N_121BuildObjectForHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* nonnull dereferenceable(24) %11)
  %430 = ptrtoint %"class.blink::protocol::Object"* %429 to i64
  %431 = getelementptr inbounds i8, i8* %39, i64 48
  %432 = bitcast i8* %431 to %"class.blink::protocol::Object"**
  %433 = load %"class.blink::protocol::Object"*, %"class.blink::protocol::Object"** %432, align 8
  %434 = bitcast i8* %431 to i64*
  store i64 %430, i64* %434, align 8
  %435 = icmp eq %"class.blink::protocol::Object"* %433, null
  br i1 %435, label %441, label %436

436:                                              ; preds = %428
  %437 = bitcast %"class.blink::protocol::Object"* %433 to void (%"class.blink::protocol::Object"*)***
  %438 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %437, align 8
  %439 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %438, i64 2
  %440 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %439, align 8
  call void %440(%"class.blink::protocol::Object"* nonnull %433) #17
  br label %441

441:                                              ; preds = %428, %436
  %442 = getelementptr inbounds %"class.network::mojom::blink::WebSocketHandshakeRequest", %"class.network::mojom::blink::WebSocketHandshakeRequest"* %3, i64 0, i32 2, i32 0, i32 0
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %442, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %564, label %445

445:                                              ; preds = %441
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %564, label %544

449:                                              ; preds = %420, %541
  %450 = phi %"class.mojo::InlinedStructPtr.3434"* [ %414, %420 ], [ %542, %541 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %421) #17
  %451 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %450, i64 0, i32 0, i32 0, i32 0, i32 0
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %477, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 acquire, align 4
  %457 = and i32 %456, 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %475, label %459

459:                                              ; preds = %454
  %460 = load atomic i32, i32* %455 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %477

463:                                              ; preds = %459
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  %466 = zext i32 %465 to i33
  %467 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %466, i33 1) #17
  %468 = extractvalue { i33, i1 } %467, 1
  %469 = extractvalue { i33, i1 } %467, 0
  %470 = icmp slt i33 %469, 0
  %471 = or i1 %468, %470
  br i1 %471, label %472, label %473, !prof !4

472:                                              ; preds = %463
  call void @llvm.trap() #17
  unreachable

473:                                              ; preds = %463
  %474 = trunc i33 %469 to i32
  store i32 %474, i32* %464, align 4
  br label %477

475:                                              ; preds = %454
  %476 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %452) #17
  br label %477

477:                                              ; preds = %449, %459, %473, %475
  %478 = phi %"class.WTF::StringImpl"* [ %476, %475 ], [ %452, %459 ], [ %452, %473 ], [ null, %449 ]
  %479 = ptrtoint %"class.WTF::StringImpl"* %478 to i64
  store i64 %479, i64* %422, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #17
  %480 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %450, i64 0, i32 0, i32 1, i32 0, i32 0
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %482 = icmp eq %"class.WTF::StringImpl"* %481, null
  br i1 %482, label %506, label %483

483:                                              ; preds = %477
  %484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load atomic i32, i32* %484 acquire, align 4
  %486 = and i32 %485, 4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %504, label %488

488:                                              ; preds = %483
  %489 = load atomic i32, i32* %484 monotonic, align 4
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %506

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  %495 = zext i32 %494 to i33
  %496 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %495, i33 1) #17
  %497 = extractvalue { i33, i1 } %496, 1
  %498 = extractvalue { i33, i1 } %496, 0
  %499 = icmp slt i33 %498, 0
  %500 = or i1 %497, %499
  br i1 %500, label %501, label %502, !prof !4

501:                                              ; preds = %492
  call void @llvm.trap() #17
  unreachable

502:                                              ; preds = %492
  %503 = trunc i33 %498 to i32
  store i32 %503, i32* %493, align 4
  br label %506

504:                                              ; preds = %483
  %505 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %481) #17
  br label %506

506:                                              ; preds = %477, %488, %502, %504
  %507 = phi %"class.WTF::StringImpl"* [ %505, %504 ], [ %481, %488 ], [ %481, %502 ], [ null, %477 ]
  %508 = ptrtoint %"class.WTF::StringImpl"* %507 to i64
  store i64 %508, i64* %424, align 8
  %509 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %425, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #17
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %426, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %506
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #17
  br label %525

525:                                              ; preds = %506, %521, %524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #17
  %526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %526, null
  br i1 %527, label %541, label %528

528:                                              ; preds = %525
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %526, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %526) #17
  br label %541

541:                                              ; preds = %525, %537, %540
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %421) #17
  %542 = getelementptr inbounds %"class.mojo::InlinedStructPtr.3434", %"class.mojo::InlinedStructPtr.3434"* %450, i64 1
  %543 = icmp eq %"class.mojo::InlinedStructPtr.3434"* %542, %418
  br i1 %543, label %428, label %449

544:                                              ; preds = %445
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %561

549:                                              ; preds = %544
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  %552 = zext i32 %551 to i33
  %553 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %552, i33 1) #17
  %554 = extractvalue { i33, i1 } %553, 1
  %555 = extractvalue { i33, i1 } %553, 0
  %556 = icmp slt i33 %555, 0
  %557 = or i1 %554, %556
  br i1 %557, label %558, label %559, !prof !4

558:                                              ; preds = %549
  call void @llvm.trap() #17
  unreachable

559:                                              ; preds = %549
  %560 = trunc i33 %555 to i32
  store i32 %560, i32* %550, align 4
  br label %561

561:                                              ; preds = %544, %559
  %562 = getelementptr inbounds i8, i8* %39, i64 56
  %563 = bitcast i8* %562 to %"class.crdtp::detail::ValueMaybe"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %563, %"class.WTF::StringImpl"* nonnull %443) #17
  br label %564

564:                                              ; preds = %441, %561, %445
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %411) #17
  br label %565

565:                                              ; preds = %408, %564
  %566 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %567 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %566, align 8
  %568 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %568) #17
  %569 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %570 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %569, %"class.WTF::StringImpl"** %570, align 8
  %571 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %572 = add i64 %571, -9223372036854775807
  %573 = icmp ult i64 %572, 2
  br i1 %573, label %577, label %574

574:                                              ; preds = %565
  %575 = sitofp i64 %571 to double
  %576 = fdiv double %575, 1.000000e+06
  br label %580

577:                                              ; preds = %565
  %578 = icmp slt i64 %571, 0
  %579 = select i1 %578, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %580

580:                                              ; preds = %574, %577
  %581 = phi double [ %579, %577 ], [ %576, %574 ]
  call void @_ZN5blink8protocol7Network8Frontend34webSocketHandshakeResponseReceivedERKN3WTF6StringEdNSt3__110unique_ptrINS1_17WebSocketResponseENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"* %567, %"class.WTF::String"* nonnull dereferenceable(8) %14, double %581, %"class.blink::protocol::Network::WebSocketResponse"* nonnull %47) #17
  %582 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %570, align 8
  %583 = icmp eq %"class.WTF::StringImpl"* %582, null
  br i1 %583, label %597, label %584

584:                                              ; preds = %580
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %586 = load atomic i32, i32* %585 monotonic, align 4
  %587 = and i32 %586, 2
  %588 = icmp eq i32 %587, 0
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %582, i64 0, i32 0
  %590 = load i32, i32* %589, align 4
  br i1 %588, label %591, label %593

591:                                              ; preds = %584
  %592 = add i32 %590, -1
  store i32 %592, i32* %589, align 4
  br label %593

593:                                              ; preds = %591, %584
  %594 = phi i32 [ %592, %591 ], [ %590, %584 ]
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %597

596:                                              ; preds = %593
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %582) #17
  br label %597

597:                                              ; preds = %596, %593, %580
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %568) #17
  call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.3449"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #17
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !4

43:                                               ; preds = %34
  tail call void @llvm.trap() #17
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #17
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend34webSocketHandshakeResponseReceivedERKN3WTF6StringEdNSt3__110unique_ptrINS1_17WebSocketResponseENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.blink::protocol::Network::WebSocketResponse"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent17DidCloseWebSocketEPNS_16ExecutionContextEm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ExecutionContext"* nocapture readnone, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %11 = add i64 %10, -9223372036854775807
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = sitofp i64 %10 to double
  %15 = fdiv double %14, 1.000000e+06
  br label %19

16:                                               ; preds = %3
  %17 = icmp slt i64 %10, 0
  %18 = select i1 %17, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %19

19:                                               ; preds = %13, %16
  %20 = phi double [ %18, %16 ], [ %15, %13 ]
  call void @_ZN5blink8protocol7Network8Frontend15webSocketClosedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, double %20) #17
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend15webSocketClosedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent26DidReceiveWebSocketMessageEmibRKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, i32, i1 zeroext, %"class.WTF::Vector.3462"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.1293", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3462", %"class.WTF::Vector.3462"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::span"*, %"class.base::span"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.3462", %"class.WTF::Vector.3462"* %4, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %5
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 4
  %16 = add nsw i64 %15, -16
  %17 = lshr exact i64 %16, 4
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 7
  %20 = icmp ult i64 %16, 112
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = sub nsw i64 %18, %19
  br label %64

23:                                               ; preds = %64, %13
  %24 = phi i64 [ undef, %13 ], [ %91, %64 ]
  %25 = phi i64 [ 0, %13 ], [ %91, %64 ]
  %26 = phi %"class.base::span"* [ %9, %13 ], [ %92, %64 ]
  %27 = icmp eq i64 %19, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %34, %28 ], [ %25, %23 ]
  %30 = phi %"class.base::span"* [ %35, %28 ], [ %26, %23 ]
  %31 = phi i64 [ %36, %28 ], [ %19, %23 ]
  %32 = getelementptr inbounds %"class.base::span", %"class.base::span"* %30, i64 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %29
  %35 = getelementptr inbounds %"class.base::span", %"class.base::span"* %30, i64 1
  %36 = add i64 %31, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %28, !llvm.loop !35

38:                                               ; preds = %23, %28, %5
  %39 = phi i64 [ 0, %5 ], [ %24, %23 ], [ %34, %28 ]
  %40 = bitcast %"class.WTF::Vector.1293"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %6, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #17
  %44 = icmp ult i64 %39, 4294967296
  br i1 %44, label %46, label %45, !prof !3

45:                                               ; preds = %38
  tail call void @llvm.trap() #17
  unreachable

46:                                               ; preds = %38
  %47 = trunc i64 %39 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %58, label %49, !prof !4

49:                                               ; preds = %46
  %50 = and i64 %39, 4294967295
  %51 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %50) #17
  %52 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %51) #17
  %53 = ptrtoint i8* %52 to i64
  %54 = bitcast %"class.WTF::Vector.1293"* %6 to i64*
  store atomic i64 %53, i64* %54 monotonic, align 8
  %55 = trunc i64 %51 to i32
  store i32 %55, i32* %42, align 8
  %56 = load %"class.base::span"*, %"class.base::span"** %8, align 8
  %57 = load i32, i32* %10, align 4
  br label %58

58:                                               ; preds = %46, %49
  %59 = phi i32 [ %11, %46 ], [ %57, %49 ]
  %60 = phi %"class.base::span"* [ %9, %46 ], [ %56, %49 ]
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds %"class.base::span", %"class.base::span"* %60, i64 %61
  %63 = icmp eq i32 %59, 0
  br i1 %63, label %95, label %140

64:                                               ; preds = %64, %21
  %65 = phi i64 [ 0, %21 ], [ %91, %64 ]
  %66 = phi %"class.base::span"* [ %9, %21 ], [ %92, %64 ]
  %67 = phi i64 [ %22, %21 ], [ %93, %64 ]
  %68 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 0, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, %65
  %71 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 1, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, %70
  %74 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, %73
  %77 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 3, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, %76
  %80 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 4, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, %79
  %83 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 5, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, %82
  %86 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 6, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 7, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, %88
  %92 = getelementptr inbounds %"class.base::span", %"class.base::span"* %66, i64 8
  %93 = add i64 %67, -8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %23, label %64

95:                                               ; preds = %146, %58
  %96 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %96, align 8
  %98 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #17
  %99 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %100, align 8
  %101 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %102 = add i64 %101, -9223372036854775807
  %103 = icmp ult i64 %102, 2
  br i1 %103, label %107, label %104

104:                                              ; preds = %95
  %105 = sitofp i64 %101 to double
  %106 = fdiv double %105, 1.000000e+06
  br label %110

107:                                              ; preds = %95
  %108 = icmp slt i64 %101, 0
  %109 = select i1 %108, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %110

110:                                              ; preds = %104, %107
  %111 = phi double [ %109, %107 ], [ %106, %104 ]
  %112 = load i8*, i8** %41, align 8
  %113 = load i32, i32* %43, align 4
  %114 = zext i32 %113 to i64
  %115 = call fastcc %"class.blink::protocol::Network::WebSocketFrame"* @_ZN5blink12_GLOBAL__N_126WebSocketMessageToProtocolEibPKcm(i32 %2, i1 zeroext %3, i8* %112, i64 %114)
  call void @_ZN5blink8protocol7Network8Frontend22webSocketFrameReceivedERKN3WTF6StringEdNSt3__110unique_ptrINS1_14WebSocketFrameENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"* %97, %"class.WTF::String"* nonnull dereferenceable(8) %7, double %111, %"class.blink::protocol::Network::WebSocketFrame"* %115) #17
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #17
  br label %131

131:                                              ; preds = %110, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #17
  %132 = load i8*, i8** %41, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %139, label %134, !prof !3

134:                                              ; preds = %131
  %135 = load i32, i32* %43, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137, !prof !4

137:                                              ; preds = %134
  store i32 0, i32* %43, align 4
  br label %138

138:                                              ; preds = %137, %134
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #17
  store i8* null, i8** %41, align 8
  br label %139

139:                                              ; preds = %131, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #17
  ret void

140:                                              ; preds = %58, %146
  %141 = phi %"class.base::span"* [ %150, %146 ], [ %60, %58 ]
  %142 = getelementptr inbounds %"class.base::span", %"class.base::span"* %141, i64 0, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = icmp ult i64 %143, 4294967296
  br i1 %144, label %146, label %145, !prof !3

145:                                              ; preds = %140
  call void @llvm.trap() #17
  unreachable

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.base::span", %"class.base::span"* %141, i64 0, i32 1
  %148 = load i8*, i8** %147, align 8
  %149 = trunc i64 %143 to i32
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.1293"* nonnull %6, i8* %148, i32 %149)
  %150 = getelementptr inbounds %"class.base::span", %"class.base::span"* %141, i64 1
  %151 = icmp eq %"class.base::span"* %150, %62
  br i1 %151, label %95, label %140
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.1293"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !3

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #17
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #17
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.1293"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !3

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #17
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #17
  %50 = bitcast %"class.WTF::Vector.1293"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !3

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #17
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #17
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !3

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #17
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #17
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.1293"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i64 0, i64 0), i8* %96, i8* %97) #17
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #17
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #17
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %105 = getelementptr inbounds %"class.WTF::Vector.1293", %"class.WTF::Vector.1293"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !3

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #17
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend22webSocketFrameReceivedERKN3WTF6StringEdNSt3__110unique_ptrINS1_14WebSocketFrameENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.blink::protocol::Network::WebSocketFrame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::protocol::Network::WebSocketFrame"* @_ZN5blink12_GLOBAL__N_126WebSocketMessageToProtocolEibPKcm(i32, i1 zeroext, i8*, i64) unnamed_addr #0 {
  %5 = tail call i8* @_Znwm(i64 32) #18
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network14WebSocketFrameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 24
  %8 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  %10 = bitcast i8* %9 to double*
  %11 = getelementptr inbounds i8, i8* %5, i64 16
  %12 = bitcast i8* %5 to %"class.blink::protocol::Network::WebSocketFrame"*
  %13 = sitofp i32 %0 to double
  store double %13, double* %10, align 8
  %14 = zext i1 %1 to i8
  store i8 %14, i8* %11, align 8
  %15 = icmp eq i32 %0, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8* %2, i64 %3) #17
  br label %20

18:                                               ; preds = %4
  %19 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %3, i8* %2, i32 0) #17
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi %"class.WTF::StringImpl"* [ %17, %16 ], [ %19, %18 ]
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #17
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %28
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %43

40:                                               ; preds = %20
  %41 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %42 = bitcast i8* %7 to i64*
  store i64 %41, i64* %42, align 8
  br label %58

43:                                               ; preds = %23, %38
  %44 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %45 = bitcast i8* %7 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %43
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %53, %52 ], [ %51, %43 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %58

58:                                               ; preds = %40, %57, %54
  ret %"class.blink::protocol::Network::WebSocketFrame"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent23DidSendWebSocketMessageEmibPKcm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, i32, i1 zeroext, i8*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %8, align 8
  %10 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* null, i64 %1) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %14 = add i64 %13, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = sitofp i64 %13 to double
  %18 = fdiv double %17, 1.000000e+06
  br label %22

19:                                               ; preds = %6
  %20 = icmp slt i64 %13, 0
  %21 = select i1 %20, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi double [ %21, %19 ], [ %18, %16 ]
  %24 = tail call fastcc %"class.blink::protocol::Network::WebSocketFrame"* @_ZN5blink12_GLOBAL__N_126WebSocketMessageToProtocolEibPKcm(i32 %2, i1 zeroext %3, i8* %4, i64 %5)
  call void @_ZN5blink8protocol7Network8Frontend18webSocketFrameSentERKN3WTF6StringEdNSt3__110unique_ptrINS1_14WebSocketFrameENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %7, double %23, %"class.blink::protocol::Network::WebSocketFrame"* %24) #17
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %22, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend18webSocketFrameSentERKN3WTF6StringEdNSt3__110unique_ptrINS1_14WebSocketFrameENS7_14default_deleteIS9_EEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.blink::protocol::Network::WebSocketFrame"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent31DidReceiveWebSocketMessageErrorEmRKN3WTF6StringE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory9RequestIdEPNS_14DocumentLoaderEm(%"class.blink::DocumentLoader"* null, i64 %1) #17
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %11 = add i64 %10, -9223372036854775807
  %12 = icmp ult i64 %11, 2
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = sitofp i64 %10 to double
  %15 = fdiv double %14, 1.000000e+06
  br label %19

16:                                               ; preds = %3
  %17 = icmp slt i64 %10, 0
  %18 = select i1 %17, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %19

19:                                               ; preds = %13, %16
  %20 = phi double [ %18, %16 ], [ %15, %13 ]
  call void @_ZN5blink8protocol7Network8Frontend19webSocketFrameErrorERKN3WTF6StringEdS6_(%"class.blink::protocol::Network::Frontend"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4, double %20, %"class.WTF::String"* dereferenceable(8) %2) #17
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend19webSocketFrameErrorERKN3WTF6StringEdS6_(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent19WebTransportCreatedEPNS_16ExecutionContextEmRKNS_4KURLE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::ExecutionContext"*, i64, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.crdtp::detail::PtrMaybe.3430", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.crdtp::detail::PtrMaybe.3430", align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %1) #17
  %13 = tail call %"class.v8_inspector::protocol::Runtime::API::StackTrace"* @_ZNK5blink14SourceLocation20BuildInspectorObjectEv(%"class.blink::SourceLocation"* %12) #17
  %14 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %13 to i64
  %15 = icmp eq %"class.blink::SourceLocation"* %12, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %12) #17
  %17 = bitcast %"class.blink::SourceLocation"* %12 to i8*
  tail call void @free(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %16
  %19 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %13, null
  br i1 %19, label %20, label %64

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %21, align 8
  %23 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  %24 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 112, i1 false) #17, !alias.scope !37
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %3) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %6) #17
  %27 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4
  %28 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %29 = add i64 %28, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %34, label %31

31:                                               ; preds = %20
  %32 = sitofp i64 %28 to double
  %33 = fdiv double %32, 1.000000e+06
  br label %37

34:                                               ; preds = %20
  %35 = icmp slt i64 %28, 0
  %36 = select i1 %35, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %37

37:                                               ; preds = %31, %34
  %38 = phi double [ %36, %34 ], [ %33, %31 ]
  %39 = bitcast %"class.crdtp::detail::PtrMaybe.3430"* %7 to i64*
  store i64 0, i64* %39, align 8
  call void @_ZN5blink8protocol7Network8Frontend19webTransportCreatedERKN3WTF6StringES6_dN5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"* %22, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %27, double %38, %"class.crdtp::detail::PtrMaybe.3430"* nonnull %7) #17
  %40 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3430", %"class.crdtp::detail::PtrMaybe.3430"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %40, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %40, align 8
  %42 = icmp eq %"class.blink::protocol::Network::Initiator"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.blink::protocol::Network::Initiator"* %41 to void (%"class.blink::protocol::Network::Initiator"*)***
  %45 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %45, i64 2
  %47 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %46, align 8
  call void %47(%"class.blink::protocol::Network::Initiator"* nonnull %41) #17
  br label %48

48:                                               ; preds = %37, %43
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #17
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %199, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %199

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %199

64:                                               ; preds = %18
  %65 = tail call i8* @_Znwm(i64 88) #18
  %66 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol7Network9InitiatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 8
  %68 = getelementptr inbounds i8, i8* %65, i64 32
  %69 = bitcast i8* %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 40
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds i8, i8* %65, i64 48
  %72 = bitcast i8* %71 to double*
  store double 0.000000e+00, double* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 56
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds i8, i8* %65, i64 64
  %75 = bitcast i8* %74 to double*
  store double 0.000000e+00, double* %75, align 8
  %76 = getelementptr inbounds i8, i8* %65, i64 72
  store i8 0, i8* %76, align 8
  %77 = getelementptr inbounds i8, i8* %65, i64 80
  %78 = bitcast i8* %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 17, i1 false) #17
  %79 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #17
  %80 = load i8*, i8** @_ZN5blink8protocol7Network9Initiator8TypeEnum6ScriptE, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %64
  %83 = tail call i64 @strlen(i8* nonnull %80) #19
  br label %84

84:                                               ; preds = %64, %82
  %85 = phi i64 [ %83, %82 ], [ 0, %64 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %80, i64 %85) #17
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %104, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %104

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #17
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %107, !prof !4

103:                                              ; preds = %94
  call void @llvm.trap() #17
  unreachable

104:                                              ; preds = %89, %84
  %105 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %106 = bitcast i8* %67 to i64*
  store i64 %105, i64* %106, align 8
  br label %127

107:                                              ; preds = %94
  %108 = trunc i33 %100 to i32
  store i32 %108, i32* %95, align 4
  %109 = bitcast i8* %67 to %"class.WTF::StringImpl"**
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %112 = bitcast i8* %67 to i64*
  store i64 %111, i64* %112, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #17
  br label %127

127:                                              ; preds = %104, %107, %123, %126
  %128 = ptrtoint i8* %65 to i64
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #17
  br label %144

144:                                              ; preds = %143, %140, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #17
  %145 = getelementptr inbounds i8, i8* %65, i64 16
  %146 = bitcast i8* %145 to %"class.v8_inspector::protocol::Runtime::API::StackTrace"**
  %147 = load %"class.v8_inspector::protocol::Runtime::API::StackTrace"*, %"class.v8_inspector::protocol::Runtime::API::StackTrace"** %146, align 8
  %148 = bitcast i8* %145 to i64*
  store i64 %14, i64* %148, align 8
  %149 = icmp eq %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %147, null
  br i1 %149, label %155, label %150

150:                                              ; preds = %144
  %151 = bitcast %"class.v8_inspector::protocol::Runtime::API::StackTrace"* %147 to void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)***
  %152 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %152, i64 2
  %154 = load void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::API::StackTrace"*)** %153, align 8
  call void %154(%"class.v8_inspector::protocol::Runtime::API::StackTrace"* nonnull %147) #17
  br label %155

155:                                              ; preds = %144, %150
  %156 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %156, align 8
  %158 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #17
  %159 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %2) #17
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %161) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 112, i1 false) #17, !alias.scope !40
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %10, %"class.blink::KURL"* dereferenceable(112) %3) #17
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %10) #17
  %162 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 4
  %163 = call i64 @_ZN4base9TimeTicks3NowEv() #17
  %164 = add i64 %163, -9223372036854775807
  %165 = icmp ult i64 %164, 2
  br i1 %165, label %169, label %166

166:                                              ; preds = %155
  %167 = sitofp i64 %163 to double
  %168 = fdiv double %167, 1.000000e+06
  br label %172

169:                                              ; preds = %155
  %170 = icmp slt i64 %163, 0
  %171 = select i1 %170, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %172

172:                                              ; preds = %166, %169
  %173 = phi double [ %171, %169 ], [ %168, %166 ]
  %174 = bitcast %"class.crdtp::detail::PtrMaybe.3430"* %11 to i64*
  store i64 %128, i64* %174, align 8
  call void @_ZN5blink8protocol7Network8Frontend19webTransportCreatedERKN3WTF6StringES6_dN5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"* %157, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %162, double %173, %"class.crdtp::detail::PtrMaybe.3430"* nonnull %11) #17
  %175 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.3430", %"class.crdtp::detail::PtrMaybe.3430"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %176 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %175, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %175, align 8
  %177 = icmp eq %"class.blink::protocol::Network::Initiator"* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.blink::protocol::Network::Initiator"* %176 to void (%"class.blink::protocol::Network::Initiator"*)***
  %180 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %180, i64 2
  %182 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %181, align 8
  call void %182(%"class.blink::protocol::Network::Initiator"* nonnull %176) #17
  br label %183

183:                                              ; preds = %172, %178
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %161) #17
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #17
  br label %199

199:                                              ; preds = %48, %60, %63, %198, %195, %183
  %200 = phi i8* [ %158, %183 ], [ %158, %195 ], [ %158, %198 ], [ %23, %63 ], [ %23, %60 ], [ %23, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend19webTransportCreatedERKN3WTF6StringES6_dN5crdtp6detail8PtrMaybeINS1_9InitiatorEEE(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), double, %"class.crdtp::detail::PtrMaybe.3430"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent33WebTransportConnectionEstablishedEm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = sitofp i64 %9 to double
  %14 = fdiv double %13, 1.000000e+06
  br label %18

15:                                               ; preds = %2
  %16 = icmp slt i64 %9, 0
  %17 = select i1 %16, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi double [ %17, %15 ], [ %14, %12 ]
  call void @_ZN5blink8protocol7Network8Frontend33webTransportConnectionEstablishedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3, double %19) #17
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #17
  br label %35

35:                                               ; preds = %18, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend33webTransportConnectionEstablishedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent18WebTransportClosedEm(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %4, align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory20SubresourceRequestIdEm(i64 %1) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = sitofp i64 %9 to double
  %14 = fdiv double %13, 1.000000e+06
  br label %18

15:                                               ; preds = %2
  %16 = icmp slt i64 %9, 0
  %17 = select i1 %16, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi double [ %17, %15 ], [ %14, %12 ]
  call void @_ZN5blink8protocol7Network8Frontend18webTransportClosedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %3, double %19) #17
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #17
  br label %35

35:                                               ; preds = %18, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret void
}

declare void @_ZN5blink8protocol7Network8Frontend18webTransportClosedERKN3WTF6StringEd(%"class.blink::protocol::Network::Frontend"*, %"class.WTF::String"* dereferenceable(8), double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent6enableEN5crdtp6detail10ValueMaybeIiEES4_S4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::WebVector.3050", align 8
  %7 = alloca %"class.blink::WebVector.3050", align 8
  %8 = alloca %"class.blink::WebVector.3050", align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 16
  %11 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %2, i64 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %2, i64 0, i32 1
  %15 = select i1 %13, i32* @_ZN5blink12_GLOBAL__N_123kDefaultTotalBufferSizeE, i32* %14
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 16, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %16
  br i1 %19, label %42, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 16, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %16
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::InspectorAgentState::SimpleField.1369"* %10 to void (%"class.blink::InspectorAgentState::SimpleField.1369"*)***
  %26 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)**, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %26, i64 2
  %28 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %27, align 8
  tail call void %28(%"class.blink::InspectorAgentState::SimpleField.1369"* %10) #17
  br label %42

29:                                               ; preds = %20
  store i32 %16, i32* %17, align 4
  %30 = bitcast %"class.blink::WebVector.3050"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %8, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %16, %"class.blink::WebVector.3050"* nonnull %8) #17
  %32 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 16, i32 0, i32 2
  %33 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 16, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %33, %"class.WTF::String"* dereferenceable(8) %34, %"class.blink::WebVector.3050"* nonnull %8) #17
  %35 = load i8*, i8** %31, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %8, i64 0, i32 0, i32 0, i32 1
  %39 = ptrtoint i8* %35 to i64
  %40 = bitcast i8** %38 to i64*
  store i64 %39, i64* %40, align 8
  call void @_ZdlPv(i8* nonnull %35) #18
  br label %41

41:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  br label %42

42:                                               ; preds = %5, %24, %41
  %43 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 17
  %44 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %3, i64 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %3, i64 0, i32 1
  %48 = select i1 %46, i32* @_ZN5blink12_GLOBAL__N_126kDefaultResourceBufferSizeE, i32* %47
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 17, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %49
  br i1 %52, label %75, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 17, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, %49
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = bitcast %"class.blink::InspectorAgentState::SimpleField.1369"* %43 to void (%"class.blink::InspectorAgentState::SimpleField.1369"*)***
  %59 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)**, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %59, i64 2
  %61 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %60, align 8
  call void %61(%"class.blink::InspectorAgentState::SimpleField.1369"* %43) #17
  br label %75

62:                                               ; preds = %53
  store i32 %49, i32* %50, align 4
  %63 = bitcast %"class.blink::WebVector.3050"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #17
  %64 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %49, %"class.blink::WebVector.3050"* nonnull %7) #17
  %65 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 17, i32 0, i32 2
  %66 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 17, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %66, %"class.WTF::String"* dereferenceable(8) %67, %"class.blink::WebVector.3050"* nonnull %7) #17
  %68 = load i8*, i8** %64, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %7, i64 0, i32 0, i32 0, i32 1
  %72 = ptrtoint i8* %68 to i64
  %73 = bitcast i8** %71 to i64*
  store i64 %72, i64* %73, align 8
  call void @_ZdlPv(i8* nonnull %68) #18
  br label %74

74:                                               ; preds = %70, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #17
  br label %75

75:                                               ; preds = %42, %57, %74
  %76 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 18
  %77 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77)
  store i32 0, i32* %9, align 4
  %78 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %4, i64 0, i32 0
  %79 = load i8, i8* %78, align 4, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2124", %"class.crdtp::detail::ValueMaybe.2124"* %4, i64 0, i32 1
  %82 = select i1 %80, i32* %9, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 18, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, %83
  br i1 %86, label %109, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 18, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, %83
  br i1 %90, label %91, label %96

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::InspectorAgentState::SimpleField.1369"* %76 to void (%"class.blink::InspectorAgentState::SimpleField.1369"*)***
  %93 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)**, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %93, i64 2
  %95 = load void (%"class.blink::InspectorAgentState::SimpleField.1369"*)*, void (%"class.blink::InspectorAgentState::SimpleField.1369"*)** %94, align 8
  call void %95(%"class.blink::InspectorAgentState::SimpleField.1369"* %76) #17
  br label %109

96:                                               ; preds = %87
  store i32 %83, i32* %84, align 4
  %97 = bitcast %"class.blink::WebVector.3050"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #17
  %98 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32 %83, %"class.blink::WebVector.3050"* nonnull %6) #17
  %99 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 18, i32 0, i32 2
  %100 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 18, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %100, %"class.WTF::String"* dereferenceable(8) %101, %"class.blink::WebVector.3050"* nonnull %6) #17
  %102 = load i8*, i8** %98, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %6, i64 0, i32 0, i32 0, i32 1
  %106 = ptrtoint i8* %102 to i64
  %107 = bitcast i8** %105 to i64*
  store i64 %106, i64* %107, align 8
  call void @_ZdlPv(i8* nonnull %102) #18
  br label %108

108:                                              ; preds = %104, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #17
  br label %109

109:                                              ; preds = %75, %91, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77)
  call void @_ZN5blink21InspectorNetworkAgent6EnableEv(%"class.blink::InspectorNetworkAgent"* %1)
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent6enableEN5crdtp6detail10ValueMaybeIiEES4_S4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.2124"* nocapture readonly) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %7 = bitcast i32* %6 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent6enableEN5crdtp6detail10ValueMaybeIiEES4_S4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %7, %"class.crdtp::detail::ValueMaybe.2124"* %2, %"class.crdtp::detail::ValueMaybe.2124"* %3, %"class.crdtp::detail::ValueMaybe.2124"* %4)
  ret void
}

declare void @_ZN5blink20NetworkResourcesData26SetResourcesDataSizeLimitsEmm(%"class.blink::NetworkResourcesData"*, i64, i64) local_unnamed_addr #4

declare void @_ZN5blink13CoreProbeSink24AddInspectorNetworkAgentEPNS_21InspectorNetworkAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorNetworkAgent"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = tail call zeroext i1 @_ZN3WTF12IsMainThreadEv() #17
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #17
  tail call void @_ZN5blink20NetworkStateNotifier13ClearOverrideEv(%"class.blink::NetworkStateNotifier"* %7) #17
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %9, align 8
  tail call void @_ZN5blink13CoreProbeSink27RemoveInspectorNetworkAgentEPNS_21InspectorNetworkAgentE(%"class.blink::CoreProbeSink"* %10, %"class.blink::InspectorNetworkAgent"* %1) #17
  %11 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"* %11) #17
  %12 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %13 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %12, align 8
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  call void @_ZN5blink20NetworkResourcesData5ClearERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %8, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %32 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 19
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %32) #17, !noalias !43
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %4) #17
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %31, %38
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #4

declare dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() local_unnamed_addr #4

declare void @_ZN5blink20NetworkStateNotifier13ClearOverrideEv(%"class.blink::NetworkStateNotifier"*) local_unnamed_addr #4

declare void @_ZN5blink13CoreProbeSink27RemoveInspectorNetworkAgentEPNS_21InspectorNetworkAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorNetworkAgent"*) local_unnamed_addr #4

declare void @_ZN5blink19InspectorAgentState14ClearAllFieldsEv(%"class.blink::InspectorAgentState"*) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData5ClearERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 19
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %3)
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent19setExtraHTTPHeadersENSt3__110unique_ptrINS_8protocol6ObjectENS1_14default_deleteIS4_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.blink::protocol::Object"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair.3491", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 14
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::MapField.1363"* %6)
  %7 = tail call %"class.blink::protocol::DictionaryValue"* @_ZNK5blink8protocol6Object7toValueEv(%"class.blink::protocol::Object"* %2) #17
  %8 = getelementptr inbounds %"class.blink::protocol::DictionaryValue", %"class.blink::protocol::DictionaryValue"* %7, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = bitcast %"struct.std::__1::pair.3491"* %4 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::pair.3491", %"struct.std::__1::pair.3491"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.3491", %"struct.std::__1::pair.3491"* %4, i64 0, i32 1
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.3491", %"struct.std::__1::pair.3491"* %4, i64 0, i32 0
  br label %33

18:                                               ; preds = %78, %3
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %19 = icmp eq %"class.blink::protocol::DictionaryValue"* %7, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.blink::protocol::DictionaryValue"* %7 to void (%"class.blink::protocol::DictionaryValue"*)***
  %22 = load void (%"class.blink::protocol::DictionaryValue"*)**, void (%"class.blink::protocol::DictionaryValue"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %22, i64 2
  %24 = load void (%"class.blink::protocol::DictionaryValue"*)*, void (%"class.blink::protocol::DictionaryValue"*)** %23, align 8
  call void %24(%"class.blink::protocol::DictionaryValue"* nonnull %7) #17
  br label %25

25:                                               ; preds = %18, %20
  %26 = icmp eq %"class.blink::protocol::Object"* %2, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.blink::protocol::Object"* %2 to void (%"class.blink::protocol::Object"*)***
  %29 = load void (%"class.blink::protocol::Object"*)**, void (%"class.blink::protocol::Object"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %29, i64 2
  %31 = load void (%"class.blink::protocol::Object"*)*, void (%"class.blink::protocol::Object"*)** %30, align 8
  call void %31(%"class.blink::protocol::Object"* nonnull %2) #17
  br label %32

32:                                               ; preds = %25, %27
  ret void

33:                                               ; preds = %11, %78
  %34 = phi i64 [ 0, %11 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #17
  %35 = call { %"class.WTF::StringImpl"*, %"class.blink::protocol::Value"* } @_ZNK5blink8protocol15DictionaryValue2atEm(%"class.blink::protocol::DictionaryValue"* %7, i64 %34) #17
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::protocol::Value"* } %35, 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %13, align 8
  %37 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::protocol::Value"* } %35, 1
  store %"class.blink::protocol::Value"* %37, %"class.blink::protocol::Value"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %38 = icmp eq %"class.blink::protocol::Value"* %37, null
  br i1 %38, label %62, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.blink::protocol::Value"* %37 to i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)***
  %41 = load i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)**, i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)*, i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)** %41, i64 6
  %43 = load i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)*, i1 (%"class.blink::protocol::Value"*, %"class.WTF::String"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.blink::protocol::Value"* nonnull %37, %"class.WTF::String"* nonnull %5) #17
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField.1363"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  br label %46

46:                                               ; preds = %45, %39
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #17
  br label %62

62:                                               ; preds = %33, %46, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #17
  br label %78

78:                                               ; preds = %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #17
  %79 = add nuw i64 %34, 1
  %80 = load i64, i64* %8, align 8
  %81 = icmp ult i64 %79, %80
  br i1 %81, label %33, label %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearEv(%"class.blink::InspectorAgentState::MapField.1363"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend.3949", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.1368"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.1368"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.1368"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.1368"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.1368"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend.3949"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %43

34:                                               ; preds = %118, %128, %125
  %35 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.1368"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.1368"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"* nonnull %37, i32 %40) #17
  %41 = bitcast %"class.WTF::HashMap.1364"* %4 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %42

42:                                               ; preds = %36, %39
  ret void

43:                                               ; preds = %26, %128
  %44 = phi %"struct.WTF::KeyValuePair.1368"* [ %24, %26 ], [ %122, %128 ]
  %45 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %44, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #17
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !4

63:                                               ; preds = %54
  call void @llvm.trap() #17
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %43, %49, %64
  %67 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %47)
  %68 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 0
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %31, align 8
  %69 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %67, 1
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %32, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %3)
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %45, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.3050"* null) #17
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #17
  br label %86

86:                                               ; preds = %66, %82, %85
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %101, %98, %86
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %44, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair.1368"* %119, %13
  br i1 %120, label %34, label %121

121:                                              ; preds = %118, %125
  %122 = phi %"struct.WTF::KeyValuePair.1368"* [ %126, %125 ], [ %119, %118 ]
  %123 = bitcast %"struct.WTF::KeyValuePair.1368"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  switch i64 %124, label %128 [
    i64 -1, label %125
    i64 0, label %125
  ]

125:                                              ; preds = %121, %121
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %122, i64 1
  %127 = icmp eq %"struct.WTF::KeyValuePair.1368"* %126, %13
  br i1 %127, label %34, label %121

128:                                              ; preds = %121
  %129 = icmp eq %"struct.WTF::KeyValuePair.1368"* %122, %13
  br i1 %129, label %34, label %43
}

declare %"class.blink::protocol::DictionaryValue"* @_ZNK5blink8protocol6Object7toValueEv(%"class.blink::protocol::Object"*) local_unnamed_addr #4

declare { %"class.WTF::StringImpl"*, %"class.blink::protocol::Value"* } @_ZNK5blink8protocol15DictionaryValue2atEm(%"class.blink::protocol::DictionaryValue"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE3SetERKS3_S6_(%"class.blink::InspectorAgentState::MapField.1363"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WebVector.3050", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend.3949", align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* %10) #17
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField.1363"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %167

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %14, i64 0, i32 0
  %16 = tail call { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1365"* %15, %"class.WTF::String"* dereferenceable(8) %1) #17
  %17 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %16, 0
  %18 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %14, i64 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair.1368"* %17, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %17, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %29 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"* %28) #17
  br i1 %29, label %167, label %30

30:                                               ; preds = %13, %25
  %31 = tail call { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1365"* %15, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #17
  %32 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %31, 1
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %76

35:                                               ; preds = %30
  %36 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %31, 0
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %36, i64 0, i32 1
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #17
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !4

54:                                               ; preds = %45
  tail call void @llvm.trap() #17
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %40, %35
  %58 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %59 = bitcast %"class.WTF::String"* %37 to i64*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  store i64 %58, i64* %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #17
  br label %76

76:                                               ; preds = %30, %57, %72, %75
  %77 = bitcast %"class.blink::WebVector.3050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #17
  %78 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::WebVector.3050"* nonnull %4) #17
  %80 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 2
  %81 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %80, align 8
  %82 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  %83 = bitcast %"class.WTF::StringAppend.3949"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #17
  %84 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %105, label %88

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #17
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !4

102:                                              ; preds = %93
  call void @llvm.trap() #17
  unreachable

103:                                              ; preds = %93
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %94, align 4
  br label %105

105:                                              ; preds = %76, %88, %103
  %106 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %84, %"class.WTF::StringImpl"* %86)
  %107 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %6, i64 0, i32 0, i32 0, i32 0
  %108 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %6, i64 0, i32 1, i32 0, i32 0
  %110 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %106, 1
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %109, align 8
  %111 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %6)
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %112, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %81, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::WebVector.3050"* nonnull %4) #17
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %105, %124, %127
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #17
  br label %144

144:                                              ; preds = %143, %140, %128
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #17
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #17
  %161 = load i8*, i8** %78, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = ptrtoint i8* %161 to i64
  %165 = bitcast i8** %79 to i64*
  store i64 %164, i64* %165, align 8
  call void @_ZdlPv(i8* nonnull %161) #18
  br label %166

166:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #17
  br label %167

167:                                              ; preds = %166, %25, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent19setExtraHTTPHeadersENSt3__110unique_ptrINS_8protocol6ObjectENS1_14default_deleteIS4_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.blink::protocol::Object"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent19setExtraHTTPHeadersENSt3__110unique_ptrINS_8protocol6ObjectENS1_14default_deleteIS4_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, %"class.blink::protocol::Object"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent19setAttachDebugStackEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3050", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  br i1 %2, label %6, label %20

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 10, i32 2
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 22, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22, i1 false) #17
  %14 = getelementptr inbounds i8, i8* %13, i64 22
  store i8 0, i8* %14, align 2
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %15 = load i8, i8* %12, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %52

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %52

20:                                               ; preds = %6, %3
  %21 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 15
  %22 = zext i1 %2 to i8
  %23 = zext i1 %2 to i32
  %24 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 15, i32 2
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = zext i8 %25 to i32
  %27 = icmp eq i32 %23, %26
  br i1 %27, label %51, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 15, i32 1
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = zext i8 %30 to i32
  %32 = icmp eq i32 %23, %31
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %21 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %35 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %35, i64 2
  %37 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %36, align 8
  tail call void %37(%"class.blink::InspectorAgentState::SimpleField"* %21) #17
  br label %51

38:                                               ; preds = %28
  store i8 %22, i8* %24, align 1
  %39 = bitcast %"class.blink::WebVector.3050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3050"* nonnull %4) #17
  %41 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 15, i32 0, i32 2
  %42 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 15, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %42, %"class.WTF::String"* dereferenceable(8) %43, %"class.blink::WebVector.3050"* nonnull %4) #17
  %44 = load i8*, i8** %40, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 1
  %48 = ptrtoint i8* %44 to i64
  %49 = bitcast i8** %47 to i64*
  store i64 %48, i64* %49, align 8
  call void @_ZdlPv(i8* nonnull %44) #18
  br label %50

50:                                               ; preds = %46, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #17
  br label %51

51:                                               ; preds = %20, %33, %50
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %52

52:                                               ; preds = %17, %10, %51
  ret void
}

declare void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent19setAttachDebugStackEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent19setAttachDebugStackEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21InspectorNetworkAgent22CanGetResponseBodyBlobERKN3WTF6StringE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %4, align 8
  %6 = tail call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %5, %"class.WTF::String"* dereferenceable(8) %1) #17
  %7 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %6, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %6, i64 0, i32 19, i32 0
  %10 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %9, align 8
  %11 = icmp eq %"class.blink::BlobDataHandle"* %10, null
  br i1 %11, label %63, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %13, align 8
  %15 = icmp eq %"class.blink::WorkerGlobalScope"* %14, null
  br i1 %15, label %16, label %63

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %6, i64 0, i32 4, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #17
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %28
  tail call void @llvm.trap() #17
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %16, %23, %38
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %41, align 8
  %42 = call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #17
  br label %58

58:                                               ; preds = %40, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %59 = icmp eq %"class.blink::LocalFrame"* %42, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %58
  %61 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %42) #17
  %62 = icmp ne %"class.blink::Document"* %61, null
  br label %63

63:                                               ; preds = %12, %8, %2, %60, %58
  %64 = phi i1 [ false, %8 ], [ true, %12 ], [ false, %58 ], [ %62, %60 ], [ false, %2 ]
  ret i1 %64
}

declare %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent19GetResponseBodyBlobERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.base::OnceCallback.3498", align 8
  %7 = ptrtoint %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to i64
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %8, align 8
  %10 = tail call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %9, %"class.WTF::String"* dereferenceable(8) %1) #17
  %11 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %10, i64 0, i32 19, i32 0
  %12 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %13, align 8
  %15 = icmp eq %"class.blink::WorkerGlobalScope"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %14, i64 0, i32 0, i32 1
  br label %26

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %23 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %22) #17
  %24 = icmp eq %"class.blink::LocalDOMWindow"* %23, null
  %25 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %23, i64 0, i32 1
  br i1 %24, label %29, label %26

26:                                               ; preds = %18, %16
  %27 = phi %"class.blink::ExecutionContext.base"* [ %17, %16 ], [ %25, %18 ]
  %28 = icmp eq %"class.blink::ExecutionContext.base"* %27, null
  br i1 %28, label %29, label %43

29:                                               ; preds = %18, %26
  %30 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #17
  call void @_ZN5crdtp16DispatchResponse13InternalErrorEv(%"class.crdtp::DispatchResponse"* nonnull sret %5) #17
  %31 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)***
  %32 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %32, i64 1
  %34 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %33, align 8
  call void %34(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #17
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %140

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #18
  br label %140

43:                                               ; preds = %26
  %44 = tail call i8* @_Znwm(i64 56) #18
  %45 = bitcast i8* %44 to %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*
  %46 = icmp eq %"class.blink::BlobDataHandle"* %12, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %43, %47, %51
  %55 = getelementptr inbounds %"class.blink::ExecutionContext.base", %"class.blink::ExecutionContext.base"* %27, i64 0, i32 1
  %56 = bitcast %"class.blink::MojoBindingContext"* %55 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %57 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %56, align 8
  %58 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %57, i64 6
  %59 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %58, align 8
  %60 = call %"class.base::SingleThreadTaskRunner"* %59(%"class.blink::MojoBindingContext"* %55, i8 zeroext 15) #17
  %61 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %10, i64 0, i32 13, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #17
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %69
  call void @llvm.trap() #17
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %54, %64, %79
  %82 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %83 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %10, i64 0, i32 14, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #17
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !4

100:                                              ; preds = %91
  call void @llvm.trap() #17
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %81, %86, %101
  %104 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %105 = call i8* @_Znwm(i64 64) #18, !noalias !46
  %106 = bitcast i8* %105 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %106, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN3WTF6StringES6_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS7_14default_deleteISD_EEEE13scoped_refptrINS3_12SharedBufferEEEJS4_S4_SG_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKN3WTF6StringES5_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS6_14default_deleteISC_EEEE13scoped_refptrINS2_12SharedBufferEEEJS3_S3_SF_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !46
  %107 = getelementptr inbounds i8, i8* %105, i64 32
  %108 = bitcast i8* %107 to void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)**
  store void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)* @_ZN5blink12_GLOBAL__N_132ResponseBodyFileReaderLoaderDoneERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE13scoped_refptrINS1_12SharedBufferEE, void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)** %108, align 8, !noalias !46
  %109 = getelementptr inbounds i8, i8* %105, i64 40
  %110 = bitcast i8* %109 to i64*
  store i64 %82, i64* %110, align 8, !noalias !46
  %111 = getelementptr inbounds i8, i8* %105, i64 48
  %112 = bitcast i8* %111 to i64*
  store i64 %104, i64* %112, align 8, !noalias !46
  %113 = getelementptr inbounds i8, i8* %105, i64 56
  %114 = bitcast i8* %113 to i64*
  store i64 %7, i64* %114, align 8, !noalias !46
  %115 = ptrtoint %"class.blink::BlobDataHandle"* %12 to i64
  %116 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds i8, i8* %44, i64 8
  %118 = bitcast i8* %117 to i64*
  store i64 %115, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %44, i64 16
  %120 = getelementptr inbounds i8, i8* %44, i64 32
  %121 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #17
  %122 = ptrtoint i8* %105 to i64
  %123 = bitcast i8* %120 to i64*
  store i64 %122, i64* %123, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %121, align 8
  %124 = getelementptr inbounds i8, i8* %44, i64 40
  %125 = bitcast i8* %124 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false) #17
  %126 = call noalias i8* @malloc(i64 296) #17
  %127 = bitcast i8* %126 to %"class.blink::FileReaderLoader"*
  %128 = bitcast i8* %44 to %"class.blink::FileReaderLoaderClient"*
  call void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"* %127, i32 4, %"class.blink::FileReaderLoaderClient"* nonnull %128, %"class.base::SingleThreadTaskRunner"* %60) #17
  %129 = ptrtoint i8* %126 to i64
  %130 = bitcast i8* %124 to %"class.blink::FileReaderLoader"**
  %131 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %130, align 8
  store i64 %129, i64* %125, align 8
  %132 = icmp eq %"class.blink::FileReaderLoader"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %103
  %134 = bitcast %"class.blink::FileReaderLoader"* %131 to void (%"class.blink::FileReaderLoader"*)***
  %135 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %135, i64 1
  %137 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %136, align 8
  call void %137(%"class.blink::FileReaderLoader"* nonnull %131) #17
  br label %138

138:                                              ; preds = %133, %103
  %139 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %139) #17
  call fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient5StartEv(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nonnull %45)
  br label %147

140:                                              ; preds = %40, %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #17
  %141 = icmp eq %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %140
  %143 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)***
  %144 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %144, i64 4
  %146 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %145, align 8
  call void %146(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* nonnull %2) #17
  br label %147

147:                                              ; preds = %138, %140, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink21InspectorNetworkAgent25GetTargetExecutionContextEv(%"class.blink::InspectorNetworkAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %2, align 8
  %4 = icmp eq %"class.blink::WorkerGlobalScope"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"class.blink::ExecutionContext.base"* %6 to %"class.blink::ExecutionContext"*
  br label %18

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %11, align 8
  %13 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %12) #17
  %14 = icmp eq %"class.blink::LocalDOMWindow"* %13, null
  %15 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %13, i64 0, i32 1
  %16 = bitcast %"class.blink::ExecutionContext.base"* %15 to %"class.blink::ExecutionContext"*
  %17 = select i1 %14, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %16
  br label %18

18:                                               ; preds = %8, %5
  %19 = phi %"class.blink::ExecutionContext"* [ %7, %5 ], [ %17, %8 ]
  ret %"class.blink::ExecutionContext"* %19
}

declare void @_ZN5crdtp16DispatchResponse13InternalErrorEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_132ResponseBodyFileReaderLoaderDoneERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE13scoped_refptrINS1_12SharedBufferEE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*) #0 {
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %11, label %12, label %37

12:                                               ; preds = %4
  %13 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #17
  %14 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 18, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0), i64 18, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %16, i64 18
  store i8 0, i8* %17, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %6) #17
  %18 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)***
  %19 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %19, i64 1
  %21 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %20, align 8
  call void %21(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #17
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %12, %27
  %31 = load i8, i8* %15, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %33, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #17
  br label %95

37:                                               ; preds = %4
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #17
  store i8 -86, i8* %8, align 1
  %40 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %40) #17
  %41 = call zeroext i1 @_ZN5blink18InspectorPageAgent19SharedBufferContentE13scoped_refptrIKN3WTF12SharedBufferEERKNS2_6StringES8_PS6_Pb(%"class.WTF::SharedBuffer"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull %7, i8* nonnull %8) #17
  br i1 %41, label %42, label %48

42:                                               ; preds = %37
  %43 = load i8, i8* %8, align 1, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)***
  %46 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)*** %45, align 8
  %47 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)** %46, align 8
  call void %47(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext %44) #17
  br label %73

48:                                               ; preds = %37
  %49 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #17
  %50 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 20, i8* %51, align 1
  %52 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0), i64 20, i1 false) #17
  %53 = getelementptr inbounds i8, i8* %52, i64 20
  store i8 0, i8* %53, align 4
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull %10) #17
  %54 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)***
  %55 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %55, i64 1
  %57 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %56, align 8
  call void %57(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %9) #17
  %58 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %48, %63
  %67 = load i8, i8* %51, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #17
  br label %73

73:                                               ; preds = %72, %42
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #17
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #17
  br label %89

89:                                               ; preds = %73, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #17
  %90 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %3) #17
  %94 = bitcast %"class.WTF::SharedBuffer"* %3 to i8*
  call void @free(i8* %94) #17
  br label %95

95:                                               ; preds = %36, %89, %93
  %96 = icmp eq %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %95
  %98 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)***
  %99 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %99, i64 4
  %101 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %100, align 8
  call void %101(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* nonnull %2) #17
  br label %102

102:                                              ; preds = %95, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient5StartEv(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call noalias i8* @malloc(i64 48) #17
  %4 = bitcast i8* %3 to %"class.WTF::SharedBuffer"*
  tail call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %4) #17
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 6
  %6 = ptrtoint i8* %3 to i64
  %7 = bitcast %class.scoped_refptr.1323* %5 to i64*
  %8 = getelementptr inbounds %class.scoped_refptr.1323, %class.scoped_refptr.1323* %5, i64 0, i32 0
  %9 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %8, align 8
  store i64 %6, i64* %7, align 8
  %10 = icmp eq %"class.WTF::SharedBuffer"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #17
  %13 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %9) #17
  %17 = bitcast %"class.WTF::SharedBuffer"* %9 to i8*
  tail call void @free(i8* %17) #17
  br label %18

18:                                               ; preds = %1, %11, %16
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %20 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 1, i32 0
  %22 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %21, align 8
  %23 = icmp eq %"class.blink::BlobDataHandle"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %18, %24, %28
  call void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"* %20, %"class.blink::BlobDataHandle"* %22) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent15getResponseBodyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = tail call zeroext i1 @_ZN5blink21InspectorNetworkAgent22CanGetResponseBodyBlobERKN3WTF6StringE(%"class.blink::InspectorNetworkAgent"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5blink21InspectorNetworkAgent19GetResponseBodyBlobERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2)
  br label %59

9:                                                ; preds = %3
  %10 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #17
  store i8 -86, i8* %5, align 1
  %12 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN5blink21InspectorNetworkAgent15GetResponseBodyERKN3WTF6StringEPS2_Pb(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorNetworkAgent"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull %4, i8* nonnull %5)
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = load i8, i8* %5, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)***
  %20 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)*** %19, align 8
  %21 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::String"*, i1)** %20, align 8
  call void %21(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext %18) #17
  br label %27

22:                                               ; preds = %9
  %23 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)***
  %24 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %24, i64 1
  %26 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.crdtp::DispatchResponse"*)** %25, align 8
  call void %26(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %6) #17
  br label %27

27:                                               ; preds = %22, %16
  %28 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #18
  br label %36

36:                                               ; preds = %27, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #17
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #17
  br label %52

52:                                               ; preds = %51, %48, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  %53 = icmp eq %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)***
  %56 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %56, i64 4
  %58 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %57, align 8
  call void %58(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* nonnull %2) #17
  br label %59

59:                                               ; preds = %8, %52, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent15GetResponseBodyERKN3WTF6StringEPS2_Pb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %11, align 8
  %13 = tail call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %12, %"class.WTF::String"* dereferenceable(8) %2) #17
  %14 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %13, null
  br i1 %14, label %15, label %27

15:                                               ; preds = %5
  %16 = tail call i8* @_Znwm(i64 48) #18
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %19, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i64 39, i1 false) #17
  %20 = getelementptr inbounds i8, i8* %16, i64 39
  store i8 0, i8* %20, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #17
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %235

25:                                               ; preds = %15
  %26 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %26) #18
  br label %235

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %70, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #17
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %36
  tail call void @llvm.trap() #17
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %31, %46
  %49 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %50 = bitcast %"class.WTF::String"* %3 to i64*
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %49, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %67

67:                                               ; preds = %66, %63, %48
  %68 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 8
  %69 = load i8, i8* %68, align 8, !range !2
  store i8 %69, i8* %4, align 1
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %235

70:                                               ; preds = %27
  %71 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 10
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = tail call i8* @_Znwm(i64 64) #18
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %78, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0), i64 48, i1 false) #17
  %79 = getelementptr inbounds i8, i8* %75, i64 48
  store i8 0, i8* %79, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #17
  %80 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %235

84:                                               ; preds = %74
  %85 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %85) #18
  br label %235

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 17, i32 0
  %88 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %87, align 8
  %89 = icmp eq %"class.WTF::SharedBuffer"* %88, null
  br i1 %89, label %216, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %88, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #17
  %92 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 14, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %124, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #17
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !4

109:                                              ; preds = %102
  tail call void @llvm.trap() #17
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %95, %110
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = load atomic i32, i32* %96 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %119 = add i32 %113, -1
  store i32 %119, i32* %118, align 4
  br label %120

120:                                              ; preds = %117, %112
  %121 = phi i32 [ %119, %117 ], [ %113, %112 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #17
  br label %124

124:                                              ; preds = %90, %123, %120
  %125 = phi i1 [ true, %123 ], [ true, %120 ], [ false, %90 ]
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #17
  %126 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %124
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %88) #17
  %130 = bitcast %"class.WTF::SharedBuffer"* %88 to i8*
  tail call void @free(i8* %130) #17
  br i1 %125, label %132, label %216

131:                                              ; preds = %124
  br i1 %125, label %132, label %216

132:                                              ; preds = %129, %131
  %133 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %87, align 8
  %134 = icmp eq %"class.WTF::SharedBuffer"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %133, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %136) #17
  br label %137

137:                                              ; preds = %132, %135
  %138 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #17
  %139 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 13, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %159, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = zext i32 %149 to i33
  %151 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %150, i33 1) #17
  %152 = extractvalue { i33, i1 } %151, 1
  %153 = extractvalue { i33, i1 } %151, 0
  %154 = icmp slt i33 %153, 0
  %155 = or i1 %152, %154
  br i1 %155, label %156, label %157, !prof !4

156:                                              ; preds = %147
  tail call void @llvm.trap() #17
  unreachable

157:                                              ; preds = %147
  %158 = trunc i33 %153 to i32
  store i32 %158, i32* %148, align 4
  br label %159

159:                                              ; preds = %137, %142, %157
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %160, align 8
  %161 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #17
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %181, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #17
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !4

178:                                              ; preds = %169
  tail call void @llvm.trap() #17
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %159, %164, %179
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %162, %"class.WTF::StringImpl"** %182, align 8
  %183 = call zeroext i1 @_ZN5blink18InspectorPageAgent19SharedBufferContentE13scoped_refptrIKN3WTF12SharedBufferEERKNS2_6StringES8_PS6_Pb(%"class.WTF::SharedBuffer"* %133, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* %3, i8* %4) #17
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #17
  br label %199

199:                                              ; preds = %181, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #17
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #17
  br label %215

215:                                              ; preds = %214, %211, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %235

216:                                              ; preds = %86, %129, %131
  %217 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %13, i64 0, i32 18, i32 0, i32 0
  %218 = load %"class.blink::Resource"*, %"class.blink::Resource"** %217, align 8
  %219 = icmp eq %"class.blink::Resource"* %218, null
  br i1 %219, label %223, label %220

220:                                              ; preds = %216
  %221 = tail call zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"* nonnull %218, %"class.WTF::String"* %3, i8* %4) #17
  br i1 %221, label %222, label %223

222:                                              ; preds = %220
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %235

223:                                              ; preds = %216, %220
  %224 = tail call i8* @_Znwm(i64 64) #18
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %224, i8** %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = bitcast i64* %226 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %227, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %224, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13, i64 0, i64 0), i64 48, i1 false) #17
  %228 = getelementptr inbounds i8, i8* %224, i64 48
  store i8 0, i8* %228, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #17
  %229 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %223
  %234 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %234) #18
  br label %235

235:                                              ; preds = %233, %223, %84, %74, %25, %15, %222, %215, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent15getResponseBodyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent15getResponseBodyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14setBlockedURLsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 13
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %4)
  %5 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %9 = icmp eq %"class.WTF::String"* %6, %8
  br i1 %9, label %10, label %48

10:                                               ; preds = %48, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %11 = icmp eq %"class.std::__1::vector.2044"* %2, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %10
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %7, align 8
  %18 = icmp eq %"class.WTF::String"* %17, %13
  br i1 %18, label %43, label %19

19:                                               ; preds = %15, %38
  %20 = phi %"class.WTF::String"* [ %21, %38 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 -1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #17
  br label %38

38:                                               ; preds = %37, %34, %19
  %39 = icmp eq %"class.WTF::String"* %21, %13
  br i1 %39, label %40, label %19

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector.2044"* %2 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %15
  %44 = phi i8* [ %42, %40 ], [ %16, %15 ]
  store %"class.WTF::String"* %13, %"class.WTF::String"** %7, align 8
  tail call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %43, %12
  %46 = bitcast %"class.std::__1::vector.2044"* %2 to i8*
  tail call void @_ZdlPv(i8* %46) #18
  br label %47

47:                                               ; preds = %10, %45
  ret void

48:                                               ; preds = %3, %48
  %49 = phi %"class.WTF::String"* [ %50, %48 ], [ %6, %3 ]
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"* %4, %"class.WTF::String"* dereferenceable(8) %49, i1 zeroext true)
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  %51 = icmp eq %"class.WTF::String"* %50, %8
  br i1 %51, label %10, label %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend.3949", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %9, i64 %12
  br i1 %7, label %36, label %14

14:                                               ; preds = %1
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"struct.WTF::KeyValuePair.1362"* [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"struct.WTF::KeyValuePair.1362"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %17, i64 1
  %22 = icmp eq %"struct.WTF::KeyValuePair.1362"* %21, %13
  br i1 %22, label %36, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"struct.WTF::KeyValuePair.1362"* [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"struct.WTF::KeyValuePair.1362"* %24, %13
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::String"* %2 to i8*
  %29 = bitcast %"class.WTF::StringAppend.3949"* %3 to i8*
  %30 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  br label %72

34:                                               ; preds = %147, %157, %154
  %35 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %8, align 8
  br label %36

36:                                               ; preds = %20, %1, %34, %23
  %37 = phi %"struct.WTF::KeyValuePair.1362"* [ %35, %34 ], [ %9, %23 ], [ %9, %1 ], [ %9, %20 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.1362"* %37, null
  br i1 %38, label %71, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %39
  %43 = zext i32 %40 to i64
  br label %44

44:                                               ; preds = %65, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %65 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %37, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair.1362"* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"*
  %50 = ptrtoint i8* %48 to i64
  switch i64 %50, label %51 [
    i64 -1, label %65
    i64 0, label %65
  ]

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  %53 = bitcast i8* %52 to i32*
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = bitcast i8* %48 to i32*
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #17
  br label %65

65:                                               ; preds = %64, %61, %44, %44
  %66 = add nuw nsw i64 %45, 1
  %67 = icmp eq i64 %66, %43
  br i1 %67, label %68, label %44

68:                                               ; preds = %65, %39
  %69 = bitcast %"struct.WTF::KeyValuePair.1362"* %37 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #17
  %70 = bitcast %"class.WTF::HashMap.1358"* %4 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %71

71:                                               ; preds = %36, %68
  ret void

72:                                               ; preds = %26, %157
  %73 = phi %"struct.WTF::KeyValuePair.1362"* [ %24, %26 ], [ %151, %157 ]
  %74 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #17
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %73, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #17
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !4

92:                                               ; preds = %83
  call void @llvm.trap() #17
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %72, %78, %93
  %96 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %30, %"class.WTF::StringImpl"* %76)
  %97 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %31, align 8
  %98 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %96, 1
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %32, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %3)
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %74, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.blink::WebVector.3050"* null) #17
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #17
  br label %115

115:                                              ; preds = %95, %111, %114
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #17
  br label %131

131:                                              ; preds = %130, %127, %115
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #17
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %73, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair.1362"* %148, %13
  br i1 %149, label %34, label %150

150:                                              ; preds = %147, %154
  %151 = phi %"struct.WTF::KeyValuePair.1362"* [ %155, %154 ], [ %148, %147 ]
  %152 = bitcast %"struct.WTF::KeyValuePair.1362"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  switch i64 %153, label %157 [
    i64 -1, label %154
    i64 0, label %154
  ]

154:                                              ; preds = %150, %150
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %151, i64 1
  %156 = icmp eq %"struct.WTF::KeyValuePair.1362"* %155, %13
  br i1 %156, label %34, label %150

157:                                              ; preds = %150
  %158 = icmp eq %"struct.WTF::KeyValuePair.1362"* %151, %13
  br i1 %158, label %34, label %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"class.blink::WebVector.3050", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.3949", align 8
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %4, align 1
  %9 = zext i1 %2 to i32
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %9, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %135

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %16, i64 0, i32 0
  %18 = tail call { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1359"* %17, %"class.WTF::String"* dereferenceable(8) %1) #17
  %19 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %18, 0
  %20 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %16, i64 0, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %21, i64 %24
  %26 = icmp eq %"struct.WTF::KeyValuePair.1362"* %19, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %19, i64 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, %8
  br i1 %30, label %135, label %31

31:                                               ; preds = %15, %27
  %32 = call { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1359"* %17, %"class.WTF::String"* dereferenceable(8) %1, i8* nonnull dereferenceable(1) %4) #17
  %33 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %32, 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = load i8, i8* %4, align 1, !range !2
  br label %42

38:                                               ; preds = %31
  %39 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %32, 0
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %39, i64 0, i32 1
  %41 = load i8, i8* %4, align 1, !range !2
  store i8 %41, i8* %40, align 1
  br label %42

42:                                               ; preds = %36, %38
  %43 = phi i8 [ %37, %36 ], [ %41, %38 ]
  %44 = bitcast %"class.blink::WebVector.3050"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %5, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #17
  %47 = icmp ne i8 %43, 0
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %47, %"class.blink::WebVector.3050"* nonnull %5) #17
  %48 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %49 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %48, align 8
  %50 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #17
  %51 = bitcast %"class.WTF::StringAppend.3949"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #17
  %52 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #17
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !4

70:                                               ; preds = %61
  call void @llvm.trap() #17
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %42, %56, %71
  %74 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %52, %"class.WTF::StringImpl"* %54)
  %75 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %7, i64 0, i32 0, i32 0, i32 0
  %76 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %7, i64 0, i32 1, i32 0, i32 0
  %78 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %74, 1
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %77, align 8
  %79 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %7)
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::WebVector.3050"* nonnull %5) #17
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #17
  br label %96

96:                                               ; preds = %73, %92, %95
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #17
  br label %112

112:                                              ; preds = %111, %108, %96
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #17
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #17
  %129 = load i8*, i8** %45, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = ptrtoint i8* %129 to i64
  %133 = bitcast i8** %46 to i64*
  store i64 %132, i64* %133, align 8
  call void @_ZdlPv(i8* nonnull %129) #18
  br label %134

134:                                              ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #17
  br label %135

135:                                              ; preds = %134, %27, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent14setBlockedURLsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent14setBlockedURLsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, %"class.std::__1::vector.2044"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent9replayXHRERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.blink::XMLHttpRequest"*, align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #17
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %19
  tail call void @llvm.trap() #17
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %33 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %32, align 8
  %34 = tail call %"class.blink::XHRReplayData"* @_ZN5blink20NetworkResourcesData13XhrReplayDataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %33, %"class.WTF::String"* dereferenceable(8) %2) #17
  %35 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %32, align 8
  %36 = tail call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %35, %"class.WTF::String"* dereferenceable(8) %2) #17
  %37 = icmp ne %"class.blink::XHRReplayData"* %34, null
  %38 = icmp ne %"class.blink::NetworkResourcesData::ResourceData"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %52, label %40

40:                                               ; preds = %31
  %41 = tail call i8* @_Znwm(i64 48) #18
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %44, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %41, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i64 35, i1 false) #17
  %45 = getelementptr inbounds i8, i8* %41, i64 35
  store i8 0, i8* %45, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %4) #17
  %46 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %180

50:                                               ; preds = %40
  %51 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %51) #18
  br label %180

52:                                               ; preds = %31
  %53 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %53, align 8
  %55 = icmp eq %"class.blink::ExecutionContext"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %54, i64 0, i32 13
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %56, %52
  %61 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %32, align 8
  tail call void @_ZN5blink20NetworkResourcesData16SetXHRReplayDataERKN3WTF6StringEPNS_13XHRReplayDataE(%"class.blink::NetworkResourcesData"* %61, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::XHRReplayData"* null) #17
  %62 = tail call i8* @_Znwm(i64 32) #18
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %65, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i64 28, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 28
  store i8 0, i8* %66, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #17
  %67 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %180

71:                                               ; preds = %60
  %72 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %72) #18
  br label %180

73:                                               ; preds = %56
  %74 = bitcast %"class.blink::XMLHttpRequest"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #17
  %75 = tail call %"class.blink::XMLHttpRequest"* @_ZN5blink14XMLHttpRequest6CreateEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* nonnull %54) #17
  store %"class.blink::XMLHttpRequest"* %75, %"class.blink::XMLHttpRequest"** %6, align 8
  %76 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 3
  %77 = bitcast %"class.blink::ExecutionContext"* %54 to void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)***
  %78 = load void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)**, void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)** %78, i64 29
  %80 = load void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)*, void (%"class.blink::ExecutionContext"*, %"class.blink::KURL"*)** %79, align 8
  tail call void %80(%"class.blink::ExecutionContext"* nonnull %54, %"class.blink::KURL"* dereferenceable(112) %76) #17
  %81 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 2
  %82 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 4
  %83 = load i8, i8* %82, align 8, !range !2
  %84 = icmp ne i8 %83, 0
  %85 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %85) #17
  %86 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %87, align 8
  %88 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %88, align 2
  %89 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %90 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %91 = bitcast %"class.WTF::StringImpl"** %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #17
  %92 = bitcast i8** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %93 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  call void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS_4KURLEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %75, %"class.WTF::AtomicString"* dereferenceable(8) %81, %"class.blink::KURL"* dereferenceable(112) %76, i1 zeroext %84, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %93) #17
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %85) #17
  %94 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 7
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %73
  %98 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %98) #17
  %99 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %100, align 8
  %101 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %101, align 2
  %102 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %103 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %104 = bitcast %"class.WTF::StringImpl"** %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #17
  %105 = bitcast i8** %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %99, align 8
  %106 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  call void @_ZN5blink14XMLHttpRequest18setWithCredentialsEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %75, i1 zeroext true, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %106) #17
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %98) #17
  br label %107

107:                                              ; preds = %73, %97
  %108 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 6, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 6, i32 0, i32 0, i32 0
  %112 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %34, i64 0, i32 6, i32 0, i32 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %112, i64 %115
  br i1 %110, label %126, label %117

117:                                              ; preds = %107
  %118 = icmp eq i32 %114, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %117, %123
  %120 = phi %"struct.WTF::KeyValuePair.1201"* [ %124, %123 ], [ %112, %117 ]
  %121 = bitcast %"struct.WTF::KeyValuePair.1201"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  switch i64 %122, label %128 [
    i64 -1, label %123
    i64 0, label %123
  ]

123:                                              ; preds = %119, %119
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %120, i64 1
  %125 = icmp eq %"struct.WTF::KeyValuePair.1201"* %124, %116
  br i1 %125, label %126, label %119

126:                                              ; preds = %123, %107
  %127 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %6, align 8
  br label %142

128:                                              ; preds = %119, %117
  %129 = phi %"struct.WTF::KeyValuePair.1201"* [ %112, %117 ], [ %120, %119 ]
  %130 = icmp eq %"struct.WTF::KeyValuePair.1201"* %129, %116
  %131 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %6, align 8
  br i1 %130, label %142, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  %134 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  %136 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  %137 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %138 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %139 = bitcast %"class.WTF::StringImpl"** %138 to i8*
  %140 = bitcast i8** %137 to i8*
  %141 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  br label %161

142:                                              ; preds = %177, %175, %126, %128
  %143 = phi %"class.blink::XMLHttpRequest"* [ %131, %128 ], [ %127, %126 ], [ %176, %175 ], [ %179, %177 ]
  %144 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %36, i64 0, i32 21, i32 0
  %145 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %144, align 8
  %146 = icmp eq %"class.blink::EncodedFormData"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %145, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %148) #17
  br label %149

149:                                              ; preds = %142, %147
  %150 = bitcast %"class.blink::DummyExceptionStateForTesting"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %150) #17
  %151 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %152, align 8
  %153 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %153, align 2
  %154 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 1, i32 2
  %155 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %156 = bitcast %"class.WTF::StringImpl"** %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #17
  %157 = bitcast i8** %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %158 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %10, i64 0, i32 0
  call void @_ZN5blink14XMLHttpRequest25SendForInspectorXHRReplayE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %143, %"class.blink::EncodedFormData"* %145, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %158) #17
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %150) #17
  %159 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 9, i32 0, i32 0
  %160 = call { %"class.blink::Member.1226"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1224"* %159, %"class.blink::XMLHttpRequest"** nonnull dereferenceable(8) %6, %"class.blink::XMLHttpRequest"** nonnull dereferenceable(8) %6) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #17
  br label %180

161:                                              ; preds = %132, %177
  %162 = phi %"class.blink::XMLHttpRequest"* [ %131, %132 ], [ %179, %177 ]
  %163 = phi %"struct.WTF::KeyValuePair.1201"* [ %129, %132 ], [ %169, %177 ]
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %163, i64 0, i32 0
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %163, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %133) #17
  store i16 1, i16* %135, align 8
  store i16 0, i16* %136, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 16, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 36, i1 false) #17
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  call void @_ZN5blink14XMLHttpRequest16setRequestHeaderERKN3WTF12AtomicStringES4_RNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %162, %"class.WTF::AtomicString"* dereferenceable(8) %164, %"class.WTF::AtomicString"* dereferenceable(8) %165, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %141) #17
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %133) #17
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %163, i64 1
  %167 = icmp eq %"struct.WTF::KeyValuePair.1201"* %166, %116
  br i1 %167, label %175, label %168

168:                                              ; preds = %161, %172
  %169 = phi %"struct.WTF::KeyValuePair.1201"* [ %173, %172 ], [ %166, %161 ]
  %170 = bitcast %"struct.WTF::KeyValuePair.1201"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  switch i64 %171, label %177 [
    i64 -1, label %172
    i64 0, label %172
  ]

172:                                              ; preds = %168, %168
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %169, i64 1
  %174 = icmp eq %"struct.WTF::KeyValuePair.1201"* %173, %116
  br i1 %174, label %175, label %168

175:                                              ; preds = %161, %172
  %176 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %6, align 8
  br label %142

177:                                              ; preds = %168
  %178 = icmp eq %"struct.WTF::KeyValuePair.1201"* %169, %116
  %179 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %6, align 8
  br i1 %178, label %142, label %161

180:                                              ; preds = %71, %60, %50, %40, %149
  br i1 %13, label %194, label %181

181:                                              ; preds = %180
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %194

194:                                              ; preds = %180, %190, %193
  ret void
}

declare %"class.blink::XHRReplayData"* @_ZN5blink20NetworkResourcesData13XhrReplayDataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare %"class.blink::XMLHttpRequest"* @_ZN5blink14XMLHttpRequest6CreateEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #4

declare void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS_4KURLEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #17
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #17
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #17
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

declare void @_ZN5blink14XMLHttpRequest18setWithCredentialsEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN5blink14XMLHttpRequest16setRequestHeaderERKN3WTF12AtomicStringES4_RNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN5blink14XMLHttpRequest25SendForInspectorXHRReplayE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::EncodedFormData"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent9replayXHRERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent9replayXHRERKN3WTF6StringE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, %"class.WTF::String"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent20canClearBrowserCacheEPb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readnone, i8* nocapture) unnamed_addr #0 align 2 {
  store i8 1, i8* %2, align 1
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent20canClearBrowserCacheEPb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readnone, i8* nocapture) unnamed_addr #0 align 2 {
  store i8 1, i8* %2, align 1, !noalias !53
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readnone, i8* nocapture) unnamed_addr #0 align 2 {
  store i8 1, i8* %2, align 1
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readnone, i8* nocapture) unnamed_addr #0 align 2 {
  store i8 1, i8* %2, align 1, !noalias !56
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent20setAcceptedEncodingsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::HashSet.2497", align 8
  %11 = alloca %"class.absl::optional.2312", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = bitcast %"class.WTF::HashSet.2497"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::HashSet.2497", %"class.WTF::HashSet.2497"* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::HashSet.2497", %"class.WTF::HashSet.2497"* %10, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::HashSet.2497", %"class.WTF::HashSet.2497"* %10, i64 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::HashSet.2497"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 20, i1 false) #17
  %20 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %2, i64 0, i32 0, i32 1
  %23 = load %"class.WTF::String"*, %"class.WTF::String"** %22, align 8
  %24 = icmp eq %"class.WTF::String"* %21, %23
  br i1 %24, label %174, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::StringView"* %8 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  %31 = bitcast %"class.WTF::StringView"* %8 to i64*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %9 to i8*
  %34 = bitcast %"class.WTF::StringView"* %9 to i64*
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %37 = bitcast %"class.WTF::StringView"* %6 to i8*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %40 = bitcast i8** %39 to %"class.WTF::StringImpl"**
  %41 = bitcast %"class.WTF::StringView"* %6 to i64*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %43 = bitcast %"class.WTF::StringView"* %7 to i8*
  %44 = bitcast %"class.WTF::StringView"* %7 to i64*
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %47 = bitcast %"class.WTF::StringView"* %4 to i8*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  %51 = bitcast %"class.WTF::StringView"* %4 to i64*
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %53 = bitcast %"class.WTF::StringView"* %5 to i8*
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %57 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %11, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.WTF::HashSet.2497", %"class.WTF::HashSet.2497"* %10, i64 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.absl::optional.2312", %"class.absl::optional.2312"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %72

70:                                               ; preds = %168
  %71 = icmp eq %"class.WTF::String"* %170, %23
  br i1 %71, label %171, label %72

72:                                               ; preds = %25, %70
  %73 = phi %"class.WTF::String"* [ %21, %25 ], [ %170, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  store i8 0, i8* %26, align 8, !alias.scope !59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17, !noalias !59
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8, !noalias !59
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  store i8* null, i8** %29, align 8, !noalias !59
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %78, i64* %31, align 8, !noalias !59
  br label %83

79:                                               ; preds = %72
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %28, align 8, !noalias !59
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 1
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %30, align 8, !noalias !59
  br label %83

83:                                               ; preds = %79, %77
  %84 = phi i32 [ %81, %79 ], [ 0, %77 ]
  store i32 %84, i32* %32, align 8, !noalias !59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #17, !noalias !59
  %85 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum4GzipE, i64 0, i64 0)) #19, !noalias !59
  %86 = icmp ult i64 %85, 4294967296
  br i1 %86, label %88, label %87, !prof !3

87:                                               ; preds = %83
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %83
  %89 = trunc i64 %85 to i32
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !59
  store i64 %90, i64* %34, align 8, !noalias !59
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum4GzipE, i64 0, i64 0), i8** %35, align 8, !noalias !59
  store i32 %89, i32* %36, align 8, !noalias !59
  %91 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #17, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #17, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17, !noalias !59
  br i1 %91, label %128, label %92

92:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #17, !noalias !59
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8, !noalias !59
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  store i8* null, i8** %39, align 8, !noalias !59
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %96, i64* %41, align 8, !noalias !59
  br label %101

97:                                               ; preds = %92
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %38, align 8, !noalias !59
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %40, align 8, !noalias !59
  br label %101

101:                                              ; preds = %97, %95
  %102 = phi i32 [ %99, %97 ], [ 0, %95 ]
  store i32 %102, i32* %42, align 8, !noalias !59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #17, !noalias !59
  %103 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum2BrE, i64 0, i64 0)) #19
  %104 = icmp ult i64 %103, 4294967296
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %101
  call void @llvm.trap() #17
  unreachable

106:                                              ; preds = %101
  %107 = trunc i64 %103 to i32
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %108, i64* %44, align 8, !noalias !59
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum2BrE, i64 0, i64 0), i8** %45, align 8, !noalias !59
  store i32 %107, i32* %46, align 8, !noalias !59
  %109 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #17, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #17, !noalias !59
  br i1 %109, label %128, label %110

110:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17, !noalias !59
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8, !noalias !59
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  store i8* null, i8** %49, align 8, !noalias !59
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %114, i64* %51, align 8, !noalias !59
  br label %119

115:                                              ; preds = %110
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %48, align 8, !noalias !59
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %50, align 8, !noalias !59
  br label %119

119:                                              ; preds = %115, %113
  %120 = phi i32 [ %117, %115 ], [ 0, %113 ]
  store i32 %120, i32* %52, align 8, !noalias !59
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #17, !noalias !59
  %121 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum7DeflateE, i64 0, i64 0)) #19
  %122 = icmp ult i64 %121, 4294967296
  br i1 %122, label %124, label %123, !prof !3

123:                                              ; preds = %119
  call void @llvm.trap() #17
  unreachable

124:                                              ; preds = %119
  %125 = trunc i64 %121 to i32
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %126, i64* %54, align 8, !noalias !59
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network19ContentEncodingEnum7DeflateE, i64 0, i64 0), i8** %55, align 8, !noalias !59
  store i32 %125, i32* %56, align 8, !noalias !59
  %127 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #17, !noalias !59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17, !noalias !59
  br i1 %127, label %128, label %129

128:                                              ; preds = %124, %106, %88
  call void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.2314"* nonnull %57, %"class.WTF::String"* dereferenceable(8) %73) #17
  br label %129

129:                                              ; preds = %124, %128
  %130 = load i8, i8* %26, align 8, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %145

132:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #17
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.WTF::String"* %73, i32 0) #17
  %133 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %13, i64 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #17, !noalias !62
  %134 = bitcast %"class.std::__1::basic_string"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %134, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #17, !noalias !62
  call void @_ZN5crdtp16DispatchResponse13InvalidParamsENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %12) #17
  %135 = load i8, i8* %63, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %138) #18
  br label %139

139:                                              ; preds = %132, %137
  %140 = load i8, i8* %66, align 1
  %141 = icmp slt i8 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %139
  %143 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %143) #18
  br label %144

144:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #17
  br label %147

145:                                              ; preds = %129
  %146 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2498"* nonnull %59, %"class.WTF::String"* dereferenceable(8) %58, %"class.WTF::String"* dereferenceable(8) %58) #17
  br label %147

147:                                              ; preds = %145, %144
  %148 = phi i32 [ 0, %145 ], [ 1, %144 ]
  %149 = load i8, i8* %26, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %168, label %151

151:                                              ; preds = %147
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #17
  br label %167

167:                                              ; preds = %166, %163, %151
  store i8 0, i8* %26, align 8
  br label %168

168:                                              ; preds = %147, %167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  %169 = icmp eq i32 %148, 0
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 1
  br i1 %169, label %70, label %251

171:                                              ; preds = %70
  %172 = load i32, i32* %18, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %3, %171
  %175 = getelementptr inbounds %"class.WTF::HashSet.2497", %"class.WTF::HashSet.2497"* %10, i64 0, i32 0
  %176 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERA5_KcSD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2498"* nonnull %175, [5 x i8]* nonnull dereferenceable(5) @.str.1, [5 x i8]* nonnull dereferenceable(5) @.str.1) #17
  br label %177

177:                                              ; preds = %174, %171
  %178 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 19
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %178)
  %179 = load i32, i32* %18, align 4
  %180 = icmp eq i32 %179, 0
  %181 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %182 = load i32, i32* %17, align 8
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %181, i64 %183
  br i1 %180, label %200, label %185

185:                                              ; preds = %177
  %186 = icmp eq i32 %182, 0
  br i1 %186, label %194, label %187

187:                                              ; preds = %185, %191
  %188 = phi %"class.WTF::String"* [ %192, %191 ], [ %181, %185 ]
  %189 = bitcast %"class.WTF::String"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  switch i64 %190, label %194 [
    i64 -1, label %191
    i64 0, label %191
  ]

191:                                              ; preds = %187, %187
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %193 = icmp eq %"class.WTF::String"* %192, %184
  br i1 %193, label %200, label %187

194:                                              ; preds = %187, %185
  %195 = phi %"class.WTF::String"* [ %181, %185 ], [ %188, %187 ]
  %196 = icmp eq %"class.WTF::String"* %195, %184
  br i1 %196, label %200, label %197

197:                                              ; preds = %194
  %198 = bitcast %"class.WTF::String"* %14 to i8*
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  br label %201

200:                                              ; preds = %191, %239, %249, %246, %177, %194
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %251

201:                                              ; preds = %197, %249
  %202 = phi %"class.WTF::String"* [ %195, %197 ], [ %243, %249 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %199, align 8
  %203 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %199, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %223, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i33
  %215 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %214, i33 1) #17
  %216 = extractvalue { i33, i1 } %215, 1
  %217 = extractvalue { i33, i1 } %215, 0
  %218 = icmp slt i33 %217, 0
  %219 = or i1 %216, %218
  br i1 %219, label %220, label %221, !prof !4

220:                                              ; preds = %211
  call void @llvm.trap() #17
  unreachable

221:                                              ; preds = %211
  %222 = trunc i33 %217 to i32
  store i32 %222, i32* %212, align 4
  br label %223

223:                                              ; preds = %201, %206, %221
  call void @_ZN5blink19InspectorAgentState8MapFieldIbE3SetERKN3WTF6StringEb(%"class.blink::InspectorAgentState::MapField"* %178, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext true)
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %239, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  br i1 %230, label %233, label %235

233:                                              ; preds = %226
  %234 = add i32 %232, -1
  store i32 %234, i32* %231, align 4
  br label %235

235:                                              ; preds = %233, %226
  %236 = phi i32 [ %234, %233 ], [ %232, %226 ]
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

238:                                              ; preds = %235
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %224) #17
  br label %239

239:                                              ; preds = %223, %235, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #17
  %240 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %202, i64 1
  %241 = icmp eq %"class.WTF::String"* %240, %184
  br i1 %241, label %200, label %242

242:                                              ; preds = %239, %246
  %243 = phi %"class.WTF::String"* [ %247, %246 ], [ %240, %239 ]
  %244 = bitcast %"class.WTF::String"* %243 to i64*
  %245 = load i64, i64* %244, align 8
  switch i64 %245, label %249 [
    i64 -1, label %246
    i64 0, label %246
  ]

246:                                              ; preds = %242, %242
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %243, i64 1
  %248 = icmp eq %"class.WTF::String"* %247, %184
  br i1 %248, label %200, label %242

249:                                              ; preds = %242
  %250 = icmp eq %"class.WTF::String"* %243, %184
  br i1 %250, label %200, label %201

251:                                              ; preds = %168, %200
  %252 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %253 = icmp eq %"class.WTF::String"* %252, null
  br i1 %253, label %285, label %254, !prof !3

254:                                              ; preds = %251
  %255 = load i32, i32* %17, align 8
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %283, label %257

257:                                              ; preds = %254
  %258 = zext i32 %255 to i64
  br label %259

259:                                              ; preds = %280, %257
  %260 = phi i64 [ 0, %257 ], [ %281, %280 ]
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %252, i64 %260
  %262 = bitcast %"class.WTF::String"* %261 to i8**
  %263 = load i8*, i8** %262, align 8
  %264 = bitcast i8* %263 to %"class.WTF::StringImpl"*
  %265 = ptrtoint i8* %263 to i64
  switch i64 %265, label %266 [
    i64 -1, label %280
    i64 0, label %280
  ]

266:                                              ; preds = %259
  %267 = getelementptr inbounds i8, i8* %263, i64 8
  %268 = bitcast i8* %267 to i32*
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = bitcast i8* %263 to i32*
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %266
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %266
  %277 = phi i32 [ %275, %274 ], [ %273, %266 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #17
  br label %280

280:                                              ; preds = %279, %276, %259, %259
  %281 = add nuw nsw i64 %260, 1
  %282 = icmp eq i64 %281, %258
  br i1 %282, label %283, label %259

283:                                              ; preds = %280, %254
  %284 = bitcast %"class.WTF::String"* %252 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %284) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %16, align 8
  br label %285

285:                                              ; preds = %251, %283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  %286 = icmp eq %"class.std::__1::vector.2044"* %2, null
  br i1 %286, label %322, label %287

287:                                              ; preds = %285
  %288 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %289 = icmp eq %"class.WTF::String"* %288, null
  br i1 %289, label %320, label %290

290:                                              ; preds = %287
  %291 = bitcast %"class.WTF::String"* %288 to i8*
  %292 = load %"class.WTF::String"*, %"class.WTF::String"** %22, align 8
  %293 = icmp eq %"class.WTF::String"* %292, %288
  br i1 %293, label %318, label %294

294:                                              ; preds = %290, %313
  %295 = phi %"class.WTF::String"* [ %296, %313 ], [ %292, %290 ]
  %296 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %295, i64 -1
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %294
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #17
  br label %313

313:                                              ; preds = %312, %309, %294
  %314 = icmp eq %"class.WTF::String"* %296, %288
  br i1 %314, label %315, label %294

315:                                              ; preds = %313
  %316 = bitcast %"class.std::__1::vector.2044"* %2 to i8**
  %317 = load i8*, i8** %316, align 8
  br label %318

318:                                              ; preds = %315, %290
  %319 = phi i8* [ %317, %315 ], [ %291, %290 ]
  store %"class.WTF::String"* %288, %"class.WTF::String"** %22, align 8
  call void @_ZdlPv(i8* %319) #18
  br label %320

320:                                              ; preds = %318, %287
  %321 = bitcast %"class.std::__1::vector.2044"* %2 to i8*
  call void @_ZdlPv(i8* %321) #18
  br label %322

322:                                              ; preds = %285, %320
  ret void
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent20setAcceptedEncodingsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, %"class.std::__1::vector.2044"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent20setAcceptedEncodingsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, %"class.std::__1::vector.2044"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %4 = getelementptr inbounds i32, i32* %3, i64 126
  %5 = bitcast i32* %4 to %"class.blink::InspectorAgentState::MapField"*
  tail call void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearEv(%"class.blink::InspectorAgentState::MapField"* %5) #17, !noalias !65
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent24emulateNetworkConditionsEbdddN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, i1 zeroext, double, double, double, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::OnceCallback.434", align 8
  %9 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %10 = alloca %"class.base::OnceCallback.434", align 8
  %11 = alloca %"class.base::OnceCallback.434", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.base::Location", align 8
  %32 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = zext i1 %2 to i8
  %35 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %312, label %38

38:                                               ; preds = %7
  %39 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %6, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %45, i64* %46, align 8
  br label %54

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %53 = bitcast i8** %52 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %53, align 8
  br label %54

54:                                               ; preds = %47, %43
  %55 = phi i32 [ %50, %47 ], [ 0, %43 ]
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 %55, i32* %56, align 8
  %57 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #17
  %58 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum4NoneE, i64 0, i64 0)) #19
  %59 = icmp ult i64 %58, 4294967296
  br i1 %59, label %61, label %60, !prof !3

60:                                               ; preds = %54
  tail call void @llvm.trap() #17
  unreachable

61:                                               ; preds = %54
  %62 = trunc i64 %58 to i32
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %64 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum4NoneE, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 %62, i32* %66, align 8
  %67 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %28, %"class.WTF::StringView"* nonnull dereferenceable(24) %29) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #17
  br i1 %67, label %312, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #17
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %76

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* null, i8** %73, align 8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %74, i64* %75, align 8
  br label %83

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 1
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %82 = bitcast i8** %81 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %82, align 8
  br label %83

83:                                               ; preds = %76, %72
  %84 = phi i32 [ %79, %76 ], [ 0, %72 ]
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 %84, i32* %85, align 8
  %86 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #17
  %87 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular2gE, i64 0, i64 0)) #19
  %88 = icmp ult i64 %87, 4294967296
  br i1 %88, label %90, label %89, !prof !3

89:                                               ; preds = %83
  call void @llvm.trap() #17
  unreachable

90:                                               ; preds = %83
  %91 = trunc i64 %87 to i32
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %93 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular2gE, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 %91, i32* %95, align 8
  %96 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %26, %"class.WTF::StringView"* nonnull dereferenceable(24) %27) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #17
  br i1 %96, label %312, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #17
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* null, i8** %102, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %103, i64* %104, align 8
  br label %112

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 1
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %111 = bitcast i8** %110 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %111, align 8
  br label %112

112:                                              ; preds = %105, %101
  %113 = phi i32 [ %108, %105 ], [ 0, %101 ]
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 %113, i32* %114, align 8
  %115 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #17
  %116 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular3gE, i64 0, i64 0)) #19
  %117 = icmp ult i64 %116, 4294967296
  br i1 %117, label %119, label %118, !prof !3

118:                                              ; preds = %112
  call void @llvm.trap() #17
  unreachable

119:                                              ; preds = %112
  %120 = trunc i64 %116 to i32
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %122 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular3gE, i64 0, i64 0), i8** %123, align 8
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 %120, i32* %124, align 8
  %125 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %24, %"class.WTF::StringView"* nonnull dereferenceable(24) %25) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #17
  br i1 %125, label %312, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #17
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* null, i8** %131, align 8
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %133 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %132, i64* %133, align 8
  br label %141

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 1
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %140 = bitcast i8** %139 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %140, align 8
  br label %141

141:                                              ; preds = %134, %130
  %142 = phi i32 [ %137, %134 ], [ 0, %130 ]
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %142, i32* %143, align 8
  %144 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #17
  %145 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular4gE, i64 0, i64 0)) #19
  %146 = icmp ult i64 %145, 4294967296
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %141
  call void @llvm.trap() #17
  unreachable

148:                                              ; preds = %141
  %149 = trunc i64 %145 to i32
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum10Cellular4gE, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 %149, i32* %153, align 8
  %154 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %22, %"class.WTF::StringView"* nonnull dereferenceable(24) %23) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #17
  br i1 %154, label %312, label %155

155:                                              ; preds = %148
  %156 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156) #17
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %159, label %163

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* null, i8** %160, align 8
  %161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %162 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %161, i64* %162, align 8
  br label %170

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 1
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %169 = bitcast i8** %168 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %169, align 8
  br label %170

170:                                              ; preds = %163, %159
  %171 = phi i32 [ %166, %163 ], [ 0, %159 ]
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %171, i32* %172, align 8
  %173 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #17
  %174 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum9BluetoothE, i64 0, i64 0)) #19
  %175 = icmp ult i64 %174, 4294967296
  br i1 %175, label %177, label %176, !prof !3

176:                                              ; preds = %170
  call void @llvm.trap() #17
  unreachable

177:                                              ; preds = %170
  %178 = trunc i64 %174 to i32
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum9BluetoothE, i64 0, i64 0), i8** %181, align 8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %178, i32* %182, align 8
  %183 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156) #17
  br i1 %183, label %312, label %184

184:                                              ; preds = %177
  %185 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #17
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %188, label %192

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %189, align 8
  %190 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %191 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %190, i64* %191, align 8
  br label %199

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %186, %"class.WTF::StringImpl"** %193, align 8
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 1
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %198 = bitcast i8** %197 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %198, align 8
  br label %199

199:                                              ; preds = %192, %188
  %200 = phi i32 [ %195, %192 ], [ 0, %188 ]
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %200, i32* %201, align 8
  %202 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #17
  %203 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum8EthernetE, i64 0, i64 0)) #19
  %204 = icmp ult i64 %203, 4294967296
  br i1 %204, label %206, label %205, !prof !3

205:                                              ; preds = %199
  call void @llvm.trap() #17
  unreachable

206:                                              ; preds = %199
  %207 = trunc i64 %203 to i32
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %209 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum8EthernetE, i64 0, i64 0), i8** %210, align 8
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %207, i32* %211, align 8
  %212 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #17
  br i1 %212, label %312, label %213

213:                                              ; preds = %206
  %214 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #17
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %218, align 8
  %219 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %220 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %219, i64* %220, align 8
  br label %228

221:                                              ; preds = %213
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %222, align 8
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 1
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %227 = bitcast i8** %226 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %227, align 8
  br label %228

228:                                              ; preds = %221, %217
  %229 = phi i32 [ %224, %221 ], [ 0, %217 ]
  %230 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %229, i32* %230, align 8
  %231 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #17
  %232 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum4WifiE, i64 0, i64 0)) #19
  %233 = icmp ult i64 %232, 4294967296
  br i1 %233, label %235, label %234, !prof !3

234:                                              ; preds = %228
  call void @llvm.trap() #17
  unreachable

235:                                              ; preds = %228
  %236 = trunc i64 %232 to i32
  %237 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %238 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum4WifiE, i64 0, i64 0), i8** %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %236, i32* %240, align 8
  %241 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #17
  br i1 %241, label %312, label %242

242:                                              ; preds = %235
  %243 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #17
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %245 = icmp eq %"class.WTF::StringImpl"* %244, null
  br i1 %245, label %246, label %250

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %247, align 8
  %248 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %249 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %248, i64* %249, align 8
  br label %257

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 1
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %256 = bitcast i8** %255 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %256, align 8
  br label %257

257:                                              ; preds = %250, %246
  %258 = phi i32 [ %253, %250 ], [ 0, %246 ]
  %259 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %258, i32* %259, align 8
  %260 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #17
  %261 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum5WimaxE, i64 0, i64 0)) #19
  %262 = icmp ult i64 %261, 4294967296
  br i1 %262, label %264, label %263, !prof !3

263:                                              ; preds = %257
  call void @llvm.trap() #17
  unreachable

264:                                              ; preds = %257
  %265 = trunc i64 %261 to i32
  %266 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %267 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum5WimaxE, i64 0, i64 0), i8** %268, align 8
  %269 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %265, i32* %269, align 8
  %270 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #17
  br i1 %270, label %312, label %271

271:                                              ; preds = %264
  %272 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #17
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %275, label %279

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %276, align 8
  %277 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %278 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %277, i64* %278, align 8
  br label %286

279:                                              ; preds = %271
  %280 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %280, align 8
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 1
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 1
  %284 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %285 = bitcast i8** %284 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %283, %"class.WTF::StringImpl"** %285, align 8
  br label %286

286:                                              ; preds = %279, %275
  %287 = phi i32 [ %282, %279 ], [ 0, %275 ]
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %287, i32* %288, align 8
  %289 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %289) #17
  %290 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum5OtherE, i64 0, i64 0)) #19
  %291 = icmp ult i64 %290, 4294967296
  br i1 %291, label %293, label %292, !prof !3

292:                                              ; preds = %286
  call void @llvm.trap() #17
  unreachable

293:                                              ; preds = %286
  %294 = trunc i64 %290 to i32
  %295 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %296 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network18ConnectionTypeEnum5OtherE, i64 0, i64 0), i8** %297, align 8
  %298 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %294, i32* %298, align 8
  %299 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %289) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #17
  br i1 %299, label %312, label %300

300:                                              ; preds = %293
  %301 = call i8* @_Znwm(i64 32) #18
  %302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %301, i8** %302, align 8
  %303 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %304 = bitcast i64* %303 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %304, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %301, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i64 23, i1 false) #17
  %305 = getelementptr inbounds i8, i8* %301, i64 23
  store i8 0, i8* %305, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %30) #17
  %306 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %306, i64 0, i32 1, i32 0
  %308 = load i8, i8* %307, align 1
  %309 = icmp slt i8 %308, 0
  br i1 %309, label %310, label %409

310:                                              ; preds = %300
  %311 = load i8*, i8** %302, align 8
  call void @_ZdlPv(i8* %311) #18
  br label %409

312:                                              ; preds = %7, %293, %264, %235, %206, %177, %148, %119, %90, %61
  %313 = phi i32 [ 9, %7 ], [ 6, %264 ], [ 5, %235 ], [ 4, %206 ], [ 3, %177 ], [ 2, %148 ], [ 1, %119 ], [ 0, %90 ], [ 8, %61 ], [ 7, %293 ]
  %314 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 2, i32 0, i32 0
  %315 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %314, align 8
  %316 = icmp eq %"class.blink::WorkerGlobalScope"* %315, null
  br i1 %316, label %395, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %315, i64 0, i32 0, i32 1
  %319 = bitcast %"class.blink::ExecutionContext.base"* %318 to %"class.blink::ExecutionContext"*
  %320 = bitcast %"class.blink::ExecutionContext.base"* %318 to i1 (%"class.blink::ExecutionContext"*)***
  %321 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %320, align 8
  %322 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %321, i64 8
  %323 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %322, align 8
  %324 = call zeroext i1 %323(%"class.blink::ExecutionContext"* %319) #17
  br i1 %324, label %334, label %325

325:                                              ; preds = %317
  %326 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %314, align 8
  %327 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %326, i64 0, i32 0, i32 1
  %328 = bitcast %"class.blink::ExecutionContext.base"* %327 to %"class.blink::ExecutionContext"*
  %329 = bitcast %"class.blink::ExecutionContext.base"* %327 to i1 (%"class.blink::ExecutionContext"*)***
  %330 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %329, align 8
  %331 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %330, i64 7
  %332 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %331, align 8
  %333 = call zeroext i1 %332(%"class.blink::ExecutionContext"* %328) #17
  br i1 %333, label %334, label %385

334:                                              ; preds = %325, %317
  %335 = call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #17
  %336 = bitcast %"class.blink::Thread"* %335 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %337 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %336, align 8
  %338 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %337, i64 3
  %339 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %338, align 8
  %340 = call %"class.base::SingleThreadTaskRunner"* %339(%"class.blink::Thread"* %335) #17
  %341 = bitcast %"class.base::Location"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %341) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.9, i64 0, i64 0), i32 1989) #17
  %342 = bitcast %"class.base::OnceCallback.434"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %342)
  %343 = call i8* @_Znwm(i64 80) #18, !noalias !68
  %344 = bitcast i8* %343 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %344, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS3_EE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !68
  %345 = getelementptr inbounds i8, i8* %343, i64 32
  %346 = bitcast i8* %345 to void (i1, double, double, double, i32)**
  store void (i1, double, double, double, i32)* @_ZN5blink12_GLOBAL__N_123SetNetworkStateOverrideEbdddNS_17WebConnectionTypeE, void (i1, double, double, double, i32)** %346, align 8, !noalias !68
  %347 = getelementptr inbounds i8, i8* %343, i64 40
  store i8 %34, i8* %347, align 1, !noalias !68
  %348 = getelementptr inbounds i8, i8* %343, i64 48
  %349 = bitcast i8* %348 to double*
  store double %3, double* %349, align 8, !noalias !68
  %350 = getelementptr inbounds i8, i8* %343, i64 56
  %351 = bitcast i8* %350 to double*
  store double %4, double* %351, align 8, !noalias !68
  %352 = getelementptr inbounds i8, i8* %343, i64 64
  %353 = bitcast i8* %352 to double*
  store double %5, double* %353, align 8, !noalias !68
  %354 = getelementptr inbounds i8, i8* %343, i64 72
  %355 = bitcast i8* %354 to i32*
  store i32 %313, i32* %355, align 4, !noalias !68
  %356 = bitcast %"class.base::OnceCallback.434"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #17, !noalias !75
  %357 = getelementptr inbounds %"class.base::OnceCallback.434", %"class.base::OnceCallback.434"* %11, i64 0, i32 0, i32 0, i32 0
  %358 = ptrtoint i8* %343 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %357, align 8, !noalias !76
  %359 = getelementptr inbounds %"class.base::OnceCallback.434", %"class.base::OnceCallback.434"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %359, align 8, !noalias !76
  %360 = getelementptr inbounds %"class.base::OnceCallback.434", %"class.base::OnceCallback.434"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %360) #17, !noalias !76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #17, !noalias !75
  %361 = getelementptr inbounds %"class.base::OnceCallback.434", %"class.base::OnceCallback.434"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %361) #17, !noalias !75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %342)
  %362 = bitcast %"class.base::OnceCallback.434"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %362)
  %363 = bitcast %"class.WTF::CrossThreadOnceFunction"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363)
  %364 = bitcast %"class.base::SingleThreadTaskRunner"* %340 to %"class.base::TaskRunner"*
  %365 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %365, align 8
  %366 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %367 = bitcast %"class.base::OnceCallback.434"* %8 to i64*
  store i64 %358, i64* %367, align 8, !alias.scope !79
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %366, align 8, !noalias !79
  %368 = bitcast %"class.base::SingleThreadTaskRunner"* %340 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.434"*, i64)***
  %369 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.434"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.434"*, i64)*** %368, align 8
  %370 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.434"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback.434"*, i64)** %369, align 8
  %371 = call zeroext i1 %370(%"class.base::TaskRunner"* %364, %"class.base::Location"* nonnull dereferenceable(32) %31, %"class.base::OnceCallback.434"* nonnull %8, i64 0) #17
  %372 = getelementptr inbounds %"class.base::OnceCallback.434", %"class.base::OnceCallback.434"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %372) #17
  %373 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %373) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %362)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363)
  %374 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %32, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %374) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %341) #17
  %375 = icmp eq %"class.base::SingleThreadTaskRunner"* %340, null
  br i1 %375, label %384, label %376

376:                                              ; preds = %334
  %377 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %340, i64 0, i32 0, i32 0, i32 1
  %378 = getelementptr inbounds %"class.base::RefCountedThreadSafe.426", %"class.base::RefCountedThreadSafe.426"* %377, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = atomicrmw sub i32* %378, i32 1 acq_rel
  %380 = icmp eq i32 %379, 1
  br i1 %380, label %381, label %384

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"class.base::RefCountedThreadSafe.426", %"class.base::RefCountedThreadSafe.426"* %377, i64 -2
  %383 = bitcast %"class.base::RefCountedThreadSafe.426"* %382 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %383) #17
  br label %384

384:                                              ; preds = %334, %376, %381
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %409

385:                                              ; preds = %325
  %386 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %387 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %386, i64 0, i32 1, i32 0
  store i8 13, i8* %387, align 1
  %388 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %388, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 13, i1 false) #17
  %389 = getelementptr inbounds i8, i8* %388, i64 13
  store i8 0, i8* %389, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %33) #17
  %390 = load i8, i8* %387, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %409

392:                                              ; preds = %385
  %393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #18
  br label %409

395:                                              ; preds = %312
  %396 = fcmp une double %3, 0.000000e+00
  %397 = or i1 %396, %2
  %398 = fcmp une double %4, 0.000000e+00
  %399 = or i1 %397, %398
  %400 = fcmp une double %5, 0.000000e+00
  %401 = or i1 %399, %400
  %402 = call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #17
  br i1 %401, label %403, label %407

403:                                              ; preds = %395
  %404 = xor i1 %2, true
  %405 = fptosi double %3 to i64
  %406 = fmul double %4, 0x3EE0000000000000
  call void @_ZN5blink20NetworkStateNotifier32SetNetworkConnectionInfoOverrideEbNS_17WebConnectionTypeEN4absl8optionalINS_26WebEffectiveConnectionTypeEEEld(%"class.blink::NetworkStateNotifier"* %402, i1 zeroext %404, i32 %313, i64 0, i64 %405, double %406) #17
  br label %408

407:                                              ; preds = %395
  call void @_ZN5blink20NetworkStateNotifier13ClearOverrideEv(%"class.blink::NetworkStateNotifier"* %402) #17
  br label %408

408:                                              ; preds = %403, %407
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %409

409:                                              ; preds = %392, %385, %310, %300, %408, %384
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123SetNetworkStateOverrideEbdddNS_17WebConnectionTypeE(i1 zeroext, double, double, double, i32) #0 {
  %6 = fcmp une double %1, 0.000000e+00
  %7 = or i1 %6, %0
  %8 = fcmp une double %2, 0.000000e+00
  %9 = or i1 %7, %8
  %10 = fcmp une double %3, 0.000000e+00
  %11 = or i1 %9, %10
  %12 = tail call dereferenceable(280) %"class.blink::NetworkStateNotifier"* @_ZN5blink23GetNetworkStateNotifierEv() #17
  br i1 %11, label %13, label %17

13:                                               ; preds = %5
  %14 = xor i1 %0, true
  %15 = fptosi double %1 to i64
  %16 = fmul double %2, 0x3EE0000000000000
  tail call void @_ZN5blink20NetworkStateNotifier32SetNetworkConnectionInfoOverrideEbNS_17WebConnectionTypeEN4absl8optionalINS_26WebEffectiveConnectionTypeEEEld(%"class.blink::NetworkStateNotifier"* %12, i1 zeroext %14, i32 %4, i64 0, i64 %15, double %16) #17
  br label %18

17:                                               ; preds = %5
  tail call void @_ZN5blink20NetworkStateNotifier13ClearOverrideEv(%"class.blink::NetworkStateNotifier"* %12) #17
  br label %18

18:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent24emulateNetworkConditionsEbdddN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, i1 zeroext, double, double, double, %"class.crdtp::detail::ValueMaybe"* nocapture readonly) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %9 = bitcast i32* %8 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent24emulateNetworkConditionsEbdddN5crdtp6detail10ValueMaybeIN3WTF6StringEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %9, i1 zeroext %2, double %3, double %4, double %5, %"class.crdtp::detail::ValueMaybe"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent16setCacheDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3050", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 11
  %6 = zext i1 %2 to i8
  %7 = zext i1 %2 to i32
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 11, i32 2
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %35, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 11, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %7, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %5 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, i64 2
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %20, align 8
  tail call void %21(%"class.blink::InspectorAgentState::SimpleField"* %5) #17
  br label %35

22:                                               ; preds = %12
  store i8 %6, i8* %8, align 1
  %23 = bitcast %"class.blink::WebVector.3050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3050"* nonnull %4) #17
  %25 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 11, i32 0, i32 2
  %26 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 11, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %26, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::WebVector.3050"* nonnull %4) #17
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = ptrtoint i8* %28 to i64
  %33 = bitcast i8** %31 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %28) #18
  br label %34

34:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  br label %35

35:                                               ; preds = %3, %17, %34
  br i1 %2, label %36, label %40

36:                                               ; preds = %35
  %37 = call zeroext i1 @_ZN3WTF12IsMainThreadEv() #17
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #17
  call void @_ZN5blink11MemoryCache14EvictResourcesEv(%"class.blink::MemoryCache"* %39) #17
  br label %40

40:                                               ; preds = %38, %36, %35
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() local_unnamed_addr #4

declare void @_ZN5blink11MemoryCache14EvictResourcesEv(%"class.blink::MemoryCache"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent16setCacheDisabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent16setCacheDisabledEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %5, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent22setBypassServiceWorkerEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3050", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 12
  %6 = zext i1 %2 to i8
  %7 = zext i1 %2 to i32
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %35, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 12, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %7, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %5 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, i64 2
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %20, align 8
  tail call void %21(%"class.blink::InspectorAgentState::SimpleField"* %5) #17
  br label %35

22:                                               ; preds = %12
  store i8 %6, i8* %8, align 1
  %23 = bitcast %"class.blink::WebVector.3050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %24 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #17
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3050"* nonnull %4) #17
  %25 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 12, i32 0, i32 2
  %26 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 12, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %26, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::WebVector.3050"* nonnull %4) #17
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = ptrtoint i8* %28 to i64
  %33 = bitcast i8** %31 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %28) #18
  br label %34

34:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  br label %35

35:                                               ; preds = %3, %17, %34
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent22setBypassServiceWorkerEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3050", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorNetworkAgent"*
  %7 = getelementptr inbounds i32, i32* %5, i64 58
  %8 = bitcast i32* %7 to %"class.blink::InspectorAgentState::SimpleField"*
  %9 = zext i1 %2 to i8
  %10 = zext i1 %2 to i32
  %11 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %6, i64 0, i32 12, i32 2
  %12 = load i8, i8* %11, align 1, !range !2, !noalias !82
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %10, %13
  br i1 %14, label %41, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds i32, i32* %5, i64 64
  %17 = bitcast i32* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !2, !noalias !82
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %10, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast i32* %7 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %22, align 8, !noalias !82
  %24 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %23, i64 2
  %25 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %24, align 8
  tail call void %25(%"class.blink::InspectorAgentState::SimpleField"* %8) #17
  br label %41

26:                                               ; preds = %15
  store i8 %9, i8* %11, align 1, !noalias !82
  %27 = bitcast %"class.blink::WebVector.3050"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17, !noalias !82
  %28 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #17, !noalias !82
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3050"* nonnull %4) #17
  %29 = getelementptr inbounds i32, i32* %5, i64 62
  %30 = bitcast i32* %29 to %"class.blink::InspectorSessionState"**
  %31 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %30, align 8, !noalias !82
  %32 = getelementptr inbounds i32, i32* %5, i64 60
  %33 = bitcast i32* %32 to %"class.WTF::String"*
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %31, %"class.WTF::String"* dereferenceable(8) %33, %"class.blink::WebVector.3050"* nonnull %4) #17
  %34 = load i8*, i8** %28, align 8, !noalias !82
  %35 = icmp eq i8* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.blink::WebVector.3050", %"class.blink::WebVector.3050"* %4, i64 0, i32 0, i32 0, i32 1
  %38 = ptrtoint i8* %34 to i64
  %39 = bitcast i8** %37 to i64*
  store i64 %38, i64* %39, align 8, !noalias !82
  call void @_ZdlPv(i8* nonnull %34) #18
  br label %40

40:                                               ; preds = %36, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17, !noalias !82
  br label %41

41:                                               ; preds = %3, %21, %40
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %5, align 8
  %7 = sext i32 %2 to i64
  %8 = sext i32 %3 to i64
  tail call void @_ZN5blink20NetworkResourcesData26SetResourcesDataSizeLimitsEmm(%"class.blink::NetworkResourcesData"* %6, i64 %7, i64 %8) #17
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %6 = getelementptr inbounds i32, i32* %5, i64 20
  %7 = bitcast i32* %6 to %"class.blink::NetworkResourcesData"**
  %8 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %7, align 8, !noalias !85
  %9 = sext i32 %2 to i64
  %10 = sext i32 %3 to i64
  tail call void @_ZN5blink20NetworkResourcesData26SetResourcesDataSizeLimitsEmm(%"class.blink::NetworkResourcesData"* %8, i64 %9, i64 %10) #17, !noalias !85
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent14getCertificateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2041"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.3526", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #17
  %10 = ptrtoint i8* %9 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.2041", %"class.std::__1::unique_ptr.2041"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.std::__1::vector.2044"*, %"class.std::__1::vector.2044"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.2041"* %3 to i64*
  store i64 %10, i64* %13, align 8
  %14 = icmp eq %"class.std::__1::vector.2044"* %12, null
  br i1 %14, label %52, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %12, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = icmp eq %"class.WTF::String"* %17, null
  br i1 %18, label %50, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::String"* %17 to i8*
  %21 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %12, i64 0, i32 0, i32 1
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %23 = icmp eq %"class.WTF::String"* %22, %17
  br i1 %23, label %48, label %24

24:                                               ; preds = %19, %43
  %25 = phi %"class.WTF::String"* [ %26, %43 ], [ %22, %19 ]
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 -1
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = icmp eq %"class.WTF::String"* %26, %17
  br i1 %44, label %45, label %24

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.2044"* %12 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %19
  %49 = phi i8* [ %47, %45 ], [ %20, %19 ]
  store %"class.WTF::String"* %17, %"class.WTF::String"** %21, align 8
  tail call void @_ZdlPv(i8* %49) #18
  br label %50

50:                                               ; preds = %48, %15
  %51 = bitcast %"class.std::__1::vector.2044"* %12 to i8*
  tail call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %4, %50
  %53 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #17
  %54 = bitcast %"class.blink::HeapVector.3526"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #17
  %55 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %55, align 8
  call void @_ZN5blink20NetworkResourcesData9ResourcesEv(%"class.blink::HeapVector.3526"* nonnull sret %5, %"class.blink::NetworkResourcesData"* %56) #17
  %57 = getelementptr inbounds %"class.blink::HeapVector.3526", %"class.blink::HeapVector.3526"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::Member.3532"*, %"class.blink::Member.3532"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HeapVector.3526", %"class.blink::HeapVector.3526"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %307, label %64

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  %66 = bitcast %"class.WTF::String"* %7 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %75

73:                                               ; preds = %303
  %74 = icmp eq %"class.blink::Member.3532"* %305, %62
  br i1 %74, label %307, label %75

75:                                               ; preds = %64, %73
  %76 = phi %"class.blink::Member.3532"* [ %58, %64 ], [ %305, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %65) #17
  %77 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %78, i64 0, i32 5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %6, %"class.blink::KURL"* dereferenceable(112) %79) #17
  %80 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %6) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %65) #17
  %81 = call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %80, %"class.blink::SecurityOrigin"* %53) #17
  br i1 %81, label %82, label %293

82:                                               ; preds = %75
  %83 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %77, align 8
  %84 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %83, i64 0, i32 20, i32 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8, !noalias !88
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = zext i32 %85 to i64
  %89 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %88) #17, !noalias !88
  %90 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #17, !noalias !88
  %91 = ptrtoint i8* %90 to i64
  %92 = bitcast i8* %90 to %"class.WTF::AtomicString"*
  br label %93

93:                                               ; preds = %87, %82
  %94 = phi i64 [ 0, %82 ], [ %91, %87 ]
  %95 = phi %"class.WTF::AtomicString"* [ null, %82 ], [ %92, %87 ]
  %96 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %83, i64 0, i32 20, i32 0, i32 0, i32 2
  %97 = load i32, i32* %96, align 4, !noalias !88
  %98 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %83, i64 0, i32 20, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %98, align 8, !noalias !88
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 %100
  %102 = icmp eq i32 %97, 0
  br i1 %102, label %131, label %103

103:                                              ; preds = %93, %127
  %104 = phi %"class.WTF::AtomicString"* [ %128, %127 ], [ %95, %93 ]
  %105 = phi %"class.WTF::AtomicString"* [ %129, %127 ], [ %99, %93 ]
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8, !noalias !88
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %104, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8, !noalias !88
  %109 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4, !noalias !88
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %117 = load i32, i32* %116, align 4, !noalias !88
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #17
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !4

124:                                              ; preds = %115
  call void @llvm.trap() #17, !noalias !88
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4, !noalias !88
  br label %127

127:                                              ; preds = %125, %110, %103
  %128 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %104, i64 1
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %105, i64 1
  %130 = icmp eq %"class.WTF::AtomicString"* %129, %101
  br i1 %130, label %131, label %103

131:                                              ; preds = %127, %93
  %132 = icmp ne i32 %97, 0
  %133 = inttoptr i64 %94 to %"class.WTF::AtomicString"*
  %134 = icmp eq i64 %94, 0
  br i1 %134, label %161, label %135, !prof !3

135:                                              ; preds = %131
  br i1 %102, label %159, label %136, !prof !4

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %133, i64 %100
  br label %138

138:                                              ; preds = %156, %136
  %139 = phi %"class.WTF::AtomicString"* [ %157, %156 ], [ %133, %136 ]
  %140 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #17
  br label %156

156:                                              ; preds = %155, %152, %138
  %157 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %139, i64 1
  %158 = icmp eq %"class.WTF::AtomicString"* %157, %137
  br i1 %158, label %159, label %138

159:                                              ; preds = %156, %135
  %160 = inttoptr i64 %94 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %160) #17
  br i1 %132, label %162, label %293

161:                                              ; preds = %131
  br i1 %132, label %162, label %293

162:                                              ; preds = %159, %161
  %163 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %77, align 8
  %164 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %163, i64 0, i32 20, i32 0, i32 0, i32 1
  %165 = load i32, i32* %164, align 8, !noalias !91
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %173, label %167

167:                                              ; preds = %162
  %168 = zext i32 %165 to i64
  %169 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %168) #17, !noalias !91
  %170 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %169, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #17, !noalias !91
  %171 = ptrtoint i8* %170 to i64
  %172 = bitcast i8* %170 to %"class.WTF::AtomicString"*
  br label %173

173:                                              ; preds = %167, %162
  %174 = phi i64 [ 0, %162 ], [ %171, %167 ]
  %175 = phi %"class.WTF::AtomicString"* [ null, %162 ], [ %172, %167 ]
  %176 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %163, i64 0, i32 20, i32 0, i32 0, i32 2
  %177 = load i32, i32* %176, align 4, !noalias !91
  %178 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %163, i64 0, i32 20, i32 0, i32 0, i32 0
  %179 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %178, align 8, !noalias !91
  %180 = zext i32 %177 to i64
  %181 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %179, i64 %180
  %182 = icmp eq i32 %177, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %173
  %184 = inttoptr i64 %174 to %"class.WTF::AtomicString"*
  %185 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %184, i64 %180
  br label %217

186:                                              ; preds = %173, %210
  %187 = phi %"class.WTF::AtomicString"* [ %211, %210 ], [ %175, %173 ]
  %188 = phi %"class.WTF::AtomicString"* [ %212, %210 ], [ %179, %173 ]
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8, !noalias !91
  %191 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %187, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"** %191, align 8, !noalias !91
  %192 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %192, label %210, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4, !noalias !91
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %200 = load i32, i32* %199, align 4, !noalias !91
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #17
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !4

207:                                              ; preds = %198
  call void @llvm.trap() #17, !noalias !91
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4, !noalias !91
  br label %210

210:                                              ; preds = %208, %193, %186
  %211 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %187, i64 1
  %212 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 1
  %213 = icmp eq %"class.WTF::AtomicString"* %212, %181
  br i1 %213, label %214, label %186

214:                                              ; preds = %210
  %215 = inttoptr i64 %174 to %"class.WTF::AtomicString"*
  %216 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %215, i64 %180
  br i1 %182, label %217, label %246

217:                                              ; preds = %290, %183, %214
  %218 = phi %"class.WTF::AtomicString"* [ %185, %183 ], [ %216, %214 ], [ %216, %290 ]
  %219 = phi %"class.WTF::AtomicString"* [ %184, %183 ], [ %215, %214 ], [ %215, %290 ]
  %220 = icmp eq i64 %174, 0
  br i1 %220, label %245, label %221, !prof !3

221:                                              ; preds = %217
  br i1 %182, label %243, label %222, !prof !4

222:                                              ; preds = %221, %240
  %223 = phi %"class.WTF::AtomicString"* [ %241, %240 ], [ %219, %221 ]
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %223, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #17
  br label %240

240:                                              ; preds = %239, %236, %222
  %241 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %223, i64 1
  %242 = icmp eq %"class.WTF::AtomicString"* %241, %218
  br i1 %242, label %243, label %222

243:                                              ; preds = %240, %221
  %244 = inttoptr i64 %174 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %244) #17
  br label %245

245:                                              ; preds = %217, %243
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %293

246:                                              ; preds = %214, %290
  %247 = phi %"class.WTF::AtomicString"* [ %291, %290 ], [ %215, %214 ]
  %248 = load %"class.std::__1::vector.2044"*, %"class.std::__1::vector.2044"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #17
  %249 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %247, i64 0, i32 0
  call void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* nonnull sret %8, %"class.WTF::String"* %249) #17
  %250 = load i8, i8* %69, align 1
  %251 = icmp slt i8 %250, 0
  %252 = load i8*, i8** %70, align 8
  %253 = select i1 %251, i8* %252, i8* %67
  %254 = load i64, i64* %71, align 8
  %255 = zext i8 %250 to i64
  %256 = select i1 %251, i64 %254, i64 %255
  %257 = call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %256, i8* %253, i32 0) #17
  store %"class.WTF::StringImpl"* %257, %"class.WTF::StringImpl"** %72, align 8
  %258 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %248, i64 0, i32 0, i32 1
  %259 = load %"class.WTF::String"*, %"class.WTF::String"** %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %248, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = load %"class.WTF::String"*, %"class.WTF::String"** %260, align 8
  %262 = icmp ult %"class.WTF::String"* %259, %261
  br i1 %262, label %263, label %269

263:                                              ; preds = %246
  %264 = ptrtoint %"class.WTF::StringImpl"* %257 to i64
  %265 = bitcast %"class.WTF::String"* %259 to i64*
  store i64 %264, i64* %265, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %72, align 8
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %259, i64 1
  %267 = ptrtoint %"class.WTF::String"* %266 to i64
  %268 = bitcast %"class.WTF::String"** %258 to i64*
  store i64 %267, i64* %268, align 8
  br label %285

269:                                              ; preds = %246
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.2044"* %248, %"class.WTF::String"* nonnull dereferenceable(8) %7) #17
  %270 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %271 = icmp eq %"class.WTF::StringImpl"* %270, null
  br i1 %271, label %285, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = load atomic i32, i32* %273 monotonic, align 4
  %275 = and i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %270, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  br i1 %276, label %279, label %281

279:                                              ; preds = %272
  %280 = add i32 %278, -1
  store i32 %280, i32* %277, align 4
  br label %281

281:                                              ; preds = %279, %272
  %282 = phi i32 [ %280, %279 ], [ %278, %272 ]
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %285

284:                                              ; preds = %281
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %270) #17
  br label %285

285:                                              ; preds = %263, %269, %281, %284
  %286 = load i8, i8* %69, align 1
  %287 = icmp slt i8 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %285
  %289 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %289) #18
  br label %290

290:                                              ; preds = %285, %288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #17
  %291 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %247, i64 1
  %292 = icmp eq %"class.WTF::AtomicString"* %291, %216
  br i1 %292, label %217, label %246

293:                                              ; preds = %75, %159, %161, %245
  %294 = phi i32 [ 1, %245 ], [ 0, %161 ], [ 0, %159 ], [ 0, %75 ]
  %295 = icmp eq %"class.blink::SecurityOrigin"* %80, null
  br i1 %295, label %303, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %80, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %297) #17
  %298 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %303

301:                                              ; preds = %296
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %80) #17
  %302 = bitcast %"class.blink::SecurityOrigin"* %80 to i8*
  call void @free(i8* %302) #17
  br label %303

303:                                              ; preds = %293, %296, %301
  %304 = icmp eq i32 %294, 0
  %305 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %76, i64 1
  br i1 %304, label %73, label %306

306:                                              ; preds = %303
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #17
  br label %308

307:                                              ; preds = %73, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #17
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  br label %308

308:                                              ; preds = %306, %307
  %309 = icmp eq %"class.blink::SecurityOrigin"* %53, null
  br i1 %309, label %317, label %310

310:                                              ; preds = %308
  %311 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %53, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %311) #17
  %312 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %310
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %53) #17
  %316 = bitcast %"class.blink::SecurityOrigin"* %53 to i8*
  call void @free(i8* %316) #17
  br label %317

317:                                              ; preds = %308, %310, %315
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink20NetworkResourcesData9ResourcesEv(%"class.blink::HeapVector.3526"* sret, %"class.blink::NetworkResourcesData"*) local_unnamed_addr #4

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent14getCertificateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2041"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent14getCertificateERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.2041"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent13DidCommitLoadEPNS_10LocalFrameEPNS_14DocumentLoaderE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::LocalFrame"* nocapture readnone, %"class.blink::DocumentLoader"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %2, i64 0, i32 21, i32 0, i32 0
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %9, align 8
  %11 = icmp eq %"class.blink::LocalFrame"* %6, %10
  br i1 %11, label %12, label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 2
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #17
  tail call void @_ZN5blink11MemoryCache14EvictResourcesEv(%"class.blink::MemoryCache"* %17) #17
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %19, align 8
  %21 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #17
  %22 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory8LoaderIdEPNS_14DocumentLoaderE(%"class.blink::DocumentLoader"* %2) #17
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  call void @_ZN5blink20NetworkResourcesData5ClearERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %20, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %18, %35, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #17
  br label %40

40:                                               ; preds = %3, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent24FrameScheduledNavigationEPNS_10LocalFrameERKNS_4KURLEN4base9TimeDeltaENS_22ClientNavigationReasonE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::LocalFrame"*, %"class.blink::KURL"* nocapture readnone dereferenceable(112), i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.std::__1::unique_ptr.1207", align 8
  %8 = alloca %"struct.blink::FetchInitiatorInfo", align 8
  %9 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %10) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.1207"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %15 = bitcast %"struct.blink::FetchInitiatorInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %8, i64 0, i32 1
  %18 = bitcast %"class.WTF::TextPosition"* %17 to i64*
  store i64 -1, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %8, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %8, i64 0, i32 3
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %8, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = call %"class.blink::protocol::Network::Initiator"* @_ZN5blink21InspectorNetworkAgent20BuildInitiatorObjectEPNS_8DocumentERKNS_18FetchInitiatorInfoEi(%"class.blink::Document"* %14, %"struct.blink::FetchInitiatorInfo"* nonnull dereferenceable(32) %8, i32 1)
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::Network::Initiator"* %22, %"class.blink::protocol::Network::Initiator"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8, i32 0
  %25 = call { %"struct.WTF::KeyValuePair.1206"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES1_SB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_(%"class.WTF::HashTable.1203"* %24, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.std::__1::unique_ptr.1207"* nonnull dereferenceable(8) %7) #17
  %26 = extractvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } %25, 1
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %5
  %30 = extractvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } %25, 0
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %30, i64 0, i32 1
  %32 = bitcast %"class.std::__1::unique_ptr.1207"* %7 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %23, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.1207"* %31 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %"class.blink::protocol::Network::Initiator"* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %29
  %39 = bitcast %"class.blink::protocol::Network::Initiator"* %35 to void (%"class.blink::protocol::Network::Initiator"*)***
  %40 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %40, i64 2
  %42 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %41, align 8
  call void %42(%"class.blink::protocol::Network::Initiator"* nonnull %35) #17
  br label %43

43:                                               ; preds = %5, %29, %38
  %44 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %23, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %23, align 8
  %45 = icmp eq %"class.blink::protocol::Network::Initiator"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.blink::protocol::Network::Initiator"* %44 to void (%"class.blink::protocol::Network::Initiator"*)***
  %48 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %48, i64 2
  %50 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %49, align 8
  call void %50(%"class.blink::protocol::Network::Initiator"* nonnull %44) #17
  br label %51

51:                                               ; preds = %43, %46
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %67

67:                                               ; preds = %51, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %83

83:                                               ; preds = %67, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent31FrameClearedScheduledNavigationEPNS_10LocalFrameE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %6) #17
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::HashMap.1202", %"class.WTF::HashMap.1202"* %4, i64 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1203"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %3) #17
  %11 = extractvalue { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } %10, 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.1202", %"class.WTF::HashMap.1202"* %4, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %13, i64 %16
  %18 = icmp eq %"struct.WTF::KeyValuePair.1206"* %17, %11
  br i1 %18, label %20, label %19

19:                                               ; preds = %2
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable.1203"* %9, %"struct.WTF::KeyValuePair.1206"* %11) #17
  br label %20

20:                                               ; preds = %2, %19
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %20, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret void
}

declare zeroext i1 @_ZN5blink18InspectorPageAgent19SharedBufferContentE13scoped_refptrIKN3WTF12SharedBufferEERKNS2_6StringES8_PS6_Pb(%"class.WTF::SharedBuffer"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"*, %"class.WTF::String"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent20searchInResponseBodyERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIbEES8_PNSt3__110unique_ptrINS9_6vectorINSA_IN12v8_inspector8protocol8Debugger3API11SearchMatchENS9_14default_deleteISG_EEEENS9_9allocatorISJ_EEEENSH_ISM_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3271"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3271"* nocapture readonly, %"class.std::__1::unique_ptr.3538"* nocapture) unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::vector.3541", align 16
  %12 = alloca %"class.v8_inspector::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.v8_inspector::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #17
  store i8 -86, i8* %9, align 1
  %20 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @_ZN5blink21InspectorNetworkAgent15GetResponseBodyERKN3WTF6StringEPS2_Pb(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorNetworkAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull %8, i8* nonnull %9)
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %30, label %24

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %22, i32* %25, align 8
  %26 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #17
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  br label %167

30:                                               ; preds = %7
  %31 = bitcast %"class.std::__1::vector.3541"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::vector.3541", %"class.std::__1::vector.3541"* %11, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.3541", %"class.std::__1::vector.3541"* %11, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.3541", %"class.std::__1::vector.3541"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 0, i32 3
  %36 = bitcast %"class.std::__1::vector.3541"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 24, i1 false)
  %37 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %35, align 8
  %38 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #17
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %41, %45
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #17
  %55 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #17
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %60, align 8
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %61, i64* %62, align 8
  br label %70

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 1
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %69, align 8
  br label %70

70:                                               ; preds = %59, %63
  %71 = phi i32 [ %66, %63 ], [ 0, %59 ]
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %71, i32* %72, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16)
  store i8 0, i8* %16, align 1
  %73 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %4, i64 0, i32 0
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %4, i64 0, i32 1
  %77 = select i1 %75, i8* %16, i8* %76
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp ne i8 %78, 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17)
  store i8 0, i8* %17, align 1
  %80 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %5, i64 0, i32 0
  %81 = load i8, i8* %80, align 1, !range !2
  %82 = icmp eq i8 %81, 0
  %83 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.3271", %"class.crdtp::detail::ValueMaybe.3271"* %5, i64 0, i32 1
  %84 = select i1 %82, i8* %17, i8* %83
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp ne i8 %85, 0
  %87 = bitcast %"class.v8_inspector::V8InspectorSession"* %37 to void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)***
  %88 = load void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)**, void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*, void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)** %88, i64 13
  %90 = load void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)*, void (%"class.std::__1::vector.3541"*, %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i1, i1)** %89, align 8
  call void %90(%"class.std::__1::vector.3541"* nonnull sret %11, %"class.v8_inspector::V8InspectorSession"* %37, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %12, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %14, i1 zeroext %79, i1 zeroext %86) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #17
  %91 = call i8* @_Znwm(i64 24) #18
  %92 = bitcast %"class.std::__1::vector.3541"* %11 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 16
  %94 = bitcast i8* %91 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %94, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.3543"** %34 to i64*
  %96 = load i64, i64* %95, align 16
  %97 = getelementptr inbounds i8, i8* %91, i64 16
  %98 = bitcast i8* %97 to i64*
  store i64 %96, i64* %98, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 24, i1 false) #17
  %99 = ptrtoint i8* %91 to i64
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.3538", %"class.std::__1::unique_ptr.3538"* %6, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::vector.3541"*, %"class.std::__1::vector.3541"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3538"* %6 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %"class.std::__1::vector.3541"* %101, null
  br i1 %103, label %133, label %104

104:                                              ; preds = %70
  %105 = getelementptr inbounds %"class.std::__1::vector.3541", %"class.std::__1::vector.3541"* %101, i64 0, i32 0, i32 0
  %106 = load %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::unique_ptr.3543"** %105, align 8
  %107 = icmp eq %"class.std::__1::unique_ptr.3543"* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.std::__1::unique_ptr.3543"* %106 to i8*
  %110 = getelementptr inbounds %"class.std::__1::vector.3541", %"class.std::__1::vector.3541"* %101, i64 0, i32 0, i32 1
  %111 = load %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::unique_ptr.3543"** %110, align 8
  %112 = icmp eq %"class.std::__1::unique_ptr.3543"* %111, %106
  br i1 %112, label %129, label %113

113:                                              ; preds = %108, %124
  %114 = phi %"class.std::__1::unique_ptr.3543"* [ %115, %124 ], [ %111, %108 ]
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3543", %"class.std::__1::unique_ptr.3543"* %114, i64 -1
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3543", %"class.std::__1::unique_ptr.3543"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.v8_inspector::protocol::Debugger::API::SearchMatch"*, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %116, align 8
  store %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* null, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %116, align 8
  %118 = icmp eq %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = bitcast %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %117 to void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)***
  %121 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)**, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %121, i64 2
  %123 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %122, align 8
  call void %123(%"class.v8_inspector::protocol::Debugger::API::SearchMatch"* nonnull %117) #17
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.std::__1::unique_ptr.3543"* %115, %106
  br i1 %125, label %126, label %113

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.3541"* %101 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %108
  %130 = phi i8* [ %128, %126 ], [ %109, %108 ]
  store %"class.std::__1::unique_ptr.3543"* %106, %"class.std::__1::unique_ptr.3543"** %110, align 8
  call void @_ZdlPv(i8* %130) #18
  br label %131

131:                                              ; preds = %129, %104
  %132 = bitcast %"class.std::__1::vector.3541"* %101 to i8*
  call void @_ZdlPv(i8* %132) #18
  br label %133

133:                                              ; preds = %131, %70
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  %134 = load %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::unique_ptr.3543"** %32, align 16
  %135 = icmp eq %"class.std::__1::unique_ptr.3543"* %134, null
  br i1 %135, label %158, label %136

136:                                              ; preds = %133
  %137 = bitcast %"class.std::__1::unique_ptr.3543"* %134 to i8*
  %138 = load %"class.std::__1::unique_ptr.3543"*, %"class.std::__1::unique_ptr.3543"** %33, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.3543"* %138, %134
  br i1 %139, label %156, label %140

140:                                              ; preds = %136, %151
  %141 = phi %"class.std::__1::unique_ptr.3543"* [ %142, %151 ], [ %138, %136 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3543", %"class.std::__1::unique_ptr.3543"* %141, i64 -1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.3543", %"class.std::__1::unique_ptr.3543"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.v8_inspector::protocol::Debugger::API::SearchMatch"*, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %143, align 8
  store %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* null, %"class.v8_inspector::protocol::Debugger::API::SearchMatch"** %143, align 8
  %145 = icmp eq %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.v8_inspector::protocol::Debugger::API::SearchMatch"* %144 to void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)***
  %148 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)**, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %148, i64 2
  %150 = load void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)*, void (%"class.v8_inspector::protocol::Debugger::API::SearchMatch"*)** %149, align 8
  call void %150(%"class.v8_inspector::protocol::Debugger::API::SearchMatch"* nonnull %144) #17
  br label %151

151:                                              ; preds = %146, %140
  %152 = icmp eq %"class.std::__1::unique_ptr.3543"* %142, %134
  br i1 %152, label %153, label %140

153:                                              ; preds = %151
  %154 = bitcast %"class.std::__1::vector.3541"* %11 to i8**
  %155 = load i8*, i8** %154, align 16
  br label %156

156:                                              ; preds = %153, %136
  %157 = phi i8* [ %155, %153 ], [ %137, %136 ]
  store %"class.std::__1::unique_ptr.3543"* %134, %"class.std::__1::unique_ptr.3543"** %33, align 8
  call void @_ZdlPv(i8* %157) #18
  br label %158

158:                                              ; preds = %156, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %159 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %160 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  call void @_ZdlPv(i8* %166) #18
  br label %167

167:                                              ; preds = %24, %158, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #17
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #17
  br label %183

183:                                              ; preds = %167, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  ret void
}

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent20searchInResponseBodyERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIbEES8_PNSt3__110unique_ptrINS9_6vectorINSA_IN12v8_inspector8protocol8Debugger3API11SearchMatchENS9_14default_deleteISG_EEEENS9_9allocatorISJ_EEEENSH_ISM_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.crdtp::detail::ValueMaybe.3271"* nocapture readonly, %"class.crdtp::detail::ValueMaybe.3271"* nocapture readonly, %"class.std::__1::unique_ptr.3538"* nocapture) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %1, i64 -1, i32 19, i32 3, i32 0, i32 3
  %9 = bitcast i32* %8 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent20searchInResponseBodyERKN3WTF6StringES4_N5crdtp6detail10ValueMaybeIbEES8_PNSt3__110unique_ptrINS9_6vectorINSA_IN12v8_inspector8protocol8Debugger3API11SearchMatchENS9_14default_deleteISG_EEEENS9_9allocatorISJ_EEEENSH_ISM_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorNetworkAgent"* %9, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe.3271"* %4, %"class.crdtp::detail::ValueMaybe.3271"* %5, %"class.std::__1::unique_ptr.3538"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21InspectorNetworkAgent20FetchResourceContentEPNS_8DocumentERKNS_4KURLEPN3WTF6StringEPb(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.blink::Document"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"*, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::HeapVector.3526", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %9, align 8
  %11 = tail call %"class.blink::Resource"* @_ZNK5blink15ResourceFetcher14CachedResourceERKNS_4KURLE(%"class.blink::ResourceFetcher"* %10, %"class.blink::KURL"* dereferenceable(112) %2) #17
  %12 = icmp eq %"class.blink::Resource"* %11, null
  br i1 %12, label %13, label %37

13:                                               ; preds = %5
  %14 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #17
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %9, align 8
  %17 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"* %16, %"class.blink::KURL"* dereferenceable(112) %2) #17
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = call %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"* %14, %"class.blink::KURL"* dereferenceable(112) %2, %"class.WTF::String"* nonnull dereferenceable(8) %6) #17
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #17
  br label %35

35:                                               ; preds = %34, %31, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %36 = icmp eq %"class.blink::Resource"* %19, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %5, %35
  %38 = phi %"class.blink::Resource"* [ %19, %35 ], [ %11, %5 ]
  %39 = call zeroext i1 @_ZN5blink18InspectorPageAgent21CachedResourceContentEPKNS_8ResourceEPN3WTF6StringEPb(%"class.blink::Resource"* nonnull %38, %"class.WTF::String"* %3, i8* %4) #17
  br i1 %39, label %110, label %40

40:                                               ; preds = %35, %37
  %41 = bitcast %"class.blink::HeapVector.3526"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #17
  %42 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %43 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %42, align 8
  call void @_ZN5blink20NetworkResourcesData9ResourcesEv(%"class.blink::HeapVector.3526"* nonnull sret %7, %"class.blink::NetworkResourcesData"* %43) #17
  %44 = getelementptr inbounds %"class.blink::HeapVector.3526", %"class.blink::HeapVector.3526"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::Member.3532"*, %"class.blink::Member.3532"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::HeapVector.3526", %"class.blink::HeapVector.3526"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %108, label %51

51:                                               ; preds = %40
  %52 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  br label %55

53:                                               ; preds = %55
  %54 = icmp eq %"class.blink::Member.3532"* %61, %49
  br i1 %54, label %108, label %55

55:                                               ; preds = %51, %53
  %56 = phi %"class.blink::Member.3532"* [ %45, %51 ], [ %61, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %52) #17
  %57 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %58, i64 0, i32 5
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %59) #17
  %60 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.blink::KURL"* dereferenceable(112) %2) #17
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %52) #17
  %61 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %56, i64 1
  br i1 %60, label %62, label %53

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::Member.3532", %"class.blink::Member.3532"* %56, i64 0, i32 0, i32 0
  %64 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %64, i64 0, i32 6, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #17
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %73
  call void @llvm.trap() #17
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %62, %68, %83
  %86 = ptrtoint %"class.WTF::StringImpl"* %66 to i64
  %87 = bitcast %"class.WTF::String"* %3 to i64*
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  store i64 %86, i64* %87, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #17
  br label %104

104:                                              ; preds = %103, %100, %85
  %105 = load %"class.blink::NetworkResourcesData::ResourceData"*, %"class.blink::NetworkResourcesData::ResourceData"** %63, align 8
  %106 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %105, i64 0, i32 8
  %107 = load i8, i8* %106, align 8, !range !2
  store i8 %107, i8* %4, align 1
  br label %108

108:                                              ; preds = %53, %40, %104
  %109 = phi i1 [ true, %104 ], [ false, %40 ], [ false, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #17
  br label %110

110:                                              ; preds = %108, %37
  %111 = phi i1 [ true, %37 ], [ %109, %108 ]
  ret i1 %111
}

declare %"class.blink::Resource"* @_ZNK5blink15ResourceFetcher14CachedResourceERKNS_4KURLE(%"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink15ResourceFetcher18GetCacheIdentifierERKNS_4KURLE(%"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink21InspectorNetworkAgent23NavigationInitiatorInfoEPNS_10LocalFrameE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::vector.3051", align 8
  %6 = alloca %"struct.blink::FetchInitiatorInfo", align 8
  %7 = alloca %"class.std::__1::vector.3051", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 2
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  br label %101

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %17 = tail call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %16) #17
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::HashMap.1202", %"class.WTF::HashMap.1202"* %14, i64 0, i32 0
  %20 = call { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1203"* %19, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %21 = extractvalue { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } %20, 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #17
  br label %37

37:                                               ; preds = %13, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  %38 = bitcast %"class.std::__1::vector.3051"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"class.std::__1::vector.3051", %"class.std::__1::vector.3051"* %5, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.3051", %"class.std::__1::vector.3051"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #17
  %41 = getelementptr inbounds %"class.WTF::HashMap.1202", %"class.WTF::HashMap.1202"* %14, i64 0, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %42, i64 %45
  %47 = icmp eq %"struct.WTF::KeyValuePair.1206"* %21, %46
  br i1 %47, label %54, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %21, i64 0, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %49, align 8
  %51 = bitcast %"class.blink::protocol::Network::Initiator"* %50 to void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)***
  %52 = load void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)**, void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)*** %51, align 8
  %53 = load void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)*, void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)** %52, align 8
  call void %53(%"class.blink::protocol::Network::Initiator"* %50, %"class.std::__1::vector.3051"* nonnull %5) #17
  br label %74

54:                                               ; preds = %37
  %55 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #17
  %56 = bitcast %"struct.blink::FetchInitiatorInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #17
  %57 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  %58 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %6, i64 0, i32 1
  %59 = bitcast %"class.WTF::TextPosition"* %58 to i64*
  store i64 -1, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %6, i64 0, i32 2
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %6, i64 0, i32 3
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"struct.blink::FetchInitiatorInfo", %"struct.blink::FetchInitiatorInfo"* %6, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %63 = call %"class.blink::protocol::Network::Initiator"* @_ZN5blink21InspectorNetworkAgent20BuildInitiatorObjectEPNS_8DocumentERKNS_18FetchInitiatorInfoEi(%"class.blink::Document"* %55, %"struct.blink::FetchInitiatorInfo"* nonnull dereferenceable(32) %6, i32 1)
  %64 = bitcast %"class.blink::protocol::Network::Initiator"* %63 to void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)***
  %65 = load void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)**, void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)*** %64, align 8
  %66 = load void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)*, void (%"class.blink::protocol::Network::Initiator"*, %"class.std::__1::vector.3051"*)** %65, align 8
  call void %66(%"class.blink::protocol::Network::Initiator"* %63, %"class.std::__1::vector.3051"* nonnull %5) #17
  %67 = icmp eq %"class.blink::protocol::Network::Initiator"* %63, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %54
  %69 = bitcast %"class.blink::protocol::Network::Initiator"* %63 to void (%"class.blink::protocol::Network::Initiator"*)***
  %70 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %70, i64 2
  %72 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %71, align 8
  call void %72(%"class.blink::protocol::Network::Initiator"* nonnull %63) #17
  br label %73

73:                                               ; preds = %54, %68
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #17
  br label %74

74:                                               ; preds = %73, %48
  %75 = bitcast %"class.std::__1::vector.3051"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #17
  %76 = getelementptr inbounds %"class.std::__1::vector.3051", %"class.std::__1::vector.3051"* %7, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.3051", %"class.std::__1::vector.3051"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #17
  %78 = load i8*, i8** %39, align 8
  %79 = bitcast i8** %40 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = ptrtoint i8* %78 to i64
  %82 = sub i64 %80, %81
  %83 = call { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %78, i64 %82, %"class.std::__1::vector.3051"* nonnull %7) #17
  %84 = load i8*, i8** %76, align 8
  %85 = bitcast i8** %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint i8* %84 to i64
  %88 = sub i64 %86, %87
  call void @_ZN3WTF6StringC1EPKcm(%"class.WTF::String"* nonnull %3, i8* %84, i64 %88) #17
  %89 = load i8*, i8** %76, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %74
  %92 = ptrtoint i8* %89 to i64
  store i64 %92, i64* %85, align 8
  call void @_ZdlPv(i8* nonnull %89) #18
  br label %93

93:                                               ; preds = %74, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #17
  %94 = load i8*, i8** %39, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = ptrtoint i8* %94 to i64
  store i64 %97, i64* %79, align 8
  call void @_ZdlPv(i8* nonnull %94) #18
  br label %98

98:                                               ; preds = %93, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #17
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  br label %101

101:                                              ; preds = %98, %11
  %102 = phi %"class.WTF::StringImpl"* [ %100, %98 ], [ null, %11 ]
  ret %"class.WTF::StringImpl"* %102
}

declare { i32, i64 } @_ZN5crdtp4json17ConvertCBORToJSONENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector.3051"*) local_unnamed_addr #4

declare void @_ZN3WTF6StringC1EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgentC2EPNS_15InspectedFramesEPNS_17WorkerGlobalScopeEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::WorkerGlobalScope"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorNetworkAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network8Metainfo10domainNameE, i64 0, i64 0)) #19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol7Network8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #17
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #17
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %28 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.227"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorNetworkAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*], [22 x i8*] }, { [28 x i8*], [22 x i8*] }* @_ZTVN5blink21InspectorNetworkAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*], [22 x i8*] }, { [28 x i8*], [22 x i8*] }* @_ZTVN5blink21InspectorNetworkAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::WorkerGlobalScope"* %2, %"class.blink::WorkerGlobalScope"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 3
  store %"class.v8_inspector::V8InspectorSession"* %3, %"class.v8_inspector::V8InspectorSession"** %33, align 8
  %34 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20NetworkResourcesDataEEEPhm(i64 72) #17
  %35 = bitcast i8* %34 to %"class.blink::NetworkResourcesData"*
  call void @_ZN5blink20NetworkResourcesDataC1Emm(%"class.blink::NetworkResourcesData"* %35, i64 100000000, i64 10000000) #17
  %36 = getelementptr inbounds i8, i8* %34, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %41 = bitcast %"class.blink::NetworkResourcesData"** %40 to i8**
  store i8* %34, i8** %41, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 5
  %43 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %32, align 8
  %44 = icmp eq %"class.blink::WorkerGlobalScope"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %27
  %46 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %43, i64 0, i32 0, i32 4
  br label %51

47:                                               ; preds = %27
  %48 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %1, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %49, i64 0, i32 0, i32 24
  br label %51

51:                                               ; preds = %47, %45
  %52 = phi %"class.base::UnguessableToken"* [ %46, %45 ], [ %50, %47 ]
  %53 = bitcast %"class.base::UnguessableToken"* %42 to i8*
  %54 = bitcast %"class.base::UnguessableToken"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 9
  %58 = bitcast %"class.blink::HeapHashSet.1220"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 20, i1 false) #17
  %59 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10
  %60 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %59, i64 0, i32 0, i32 0
  %62 = bitcast %"class.blink::XHRReplayData"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 28, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %60) #17
  %64 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %65 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 1
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 10, i32 2
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11
  %68 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %67, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %68) #17
  %71 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 1
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 2
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12
  %75 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %74, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %75) #17
  %78 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %78, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %79 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 1
  store i8 0, i8* %79, align 8
  %80 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 12, i32 2
  store i8 0, i8* %80, align 1
  %81 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13
  %82 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %81, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %81, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %82) #17
  %85 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %86 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 1
  store i8 0, i8* %86, align 8
  %87 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 13, i32 3
  %88 = bitcast %"class.WTF::HashMap.1358"* %87 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 20, i1 false) #17
  %89 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14
  %90 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %89, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %89, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %90) #17
  %93 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %93, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %94 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15
  %96 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %95, i64 0, i32 0
  %97 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %95, i64 0, i32 0, i32 0
  %98 = bitcast %"class.WTF::StringImpl"** %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 28, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %96) #17
  %100 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %100, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %101 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 1
  store i8 0, i8* %101, align 8
  %102 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 15, i32 2
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16
  %104 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %103, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %103, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %104) #17
  %107 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %107, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %108 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 1
  store i32 100000000, i32* %108, align 8
  %109 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 16, i32 2
  store i32 100000000, i32* %109, align 4
  %110 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17
  %111 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %110, i64 0, i32 0
  %112 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %110, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %111) #17
  %114 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %114, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8
  %115 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 1
  store i32 10000000, i32* %115, align 8
  %116 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 17, i32 2
  store i32 10000000, i32* %116, align 4
  %117 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18
  %118 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %117, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %117, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %118) #17
  %121 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %121, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %122 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 1
  store i32 0, i32* %122, align 8
  %123 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 18, i32 2
  store i32 0, i32* %123, align 4
  %124 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19
  %125 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %124, i64 0, i32 0
  %126 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %124, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %125) #17
  %128 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %128, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %129 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 1
  store i8 0, i8* %129, align 8
  %130 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 19, i32 3
  %131 = bitcast %"class.WTF::HashMap.1358"* %130 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 20, i1 false) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent24ShouldForceCorsPreflightEPb(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i8* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i8 1, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21InspectorNetworkAgent18getRequestPostDataERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend26GetRequestPostDataCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::OnceCallback.3498", align 8
  %7 = alloca %"class.WTF::RetainedRefWrapper", align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %class.scoped_refptr.3565, align 8
  %14 = ptrtoint %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2 to i64
  %15 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %16 = load %"class.blink::NetworkResourcesData"*, %"class.blink::NetworkResourcesData"** %15, align 8
  %17 = tail call %"class.blink::NetworkResourcesData::ResourceData"* @_ZN5blink20NetworkResourcesData4DataERKN3WTF6StringE(%"class.blink::NetworkResourcesData"* %16, %"class.WTF::String"* dereferenceable(8) %1) #17
  %18 = icmp eq %"class.blink::NetworkResourcesData::ResourceData"* %17, null
  br i1 %18, label %19, label %46

19:                                               ; preds = %3
  %20 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #17
  %21 = tail call i8* @_Znwm(i64 48) #18
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0), i64 35, i1 false) #17
  %25 = getelementptr inbounds i8, i8* %21, i64 35
  store i8 0, i8* %25, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull %9) #17
  %26 = bitcast %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)***
  %27 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %27, i64 1
  %29 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %28, align 8
  call void %29(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %8) #17
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %19
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %19, %35
  %39 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %38
  %44 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %44) #18
  br label %45

45:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #17
  br label %289

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.blink::NetworkResourcesData::ResourceData", %"class.blink::NetworkResourcesData::ResourceData"* %17, i64 0, i32 21, i32 0
  %48 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %47, align 8
  %49 = icmp eq %"class.blink::EncodedFormData"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %51) #17
  %52 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %48, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %82

55:                                               ; preds = %46, %50
  %56 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #17
  %57 = tail call i8* @_Znwm(i64 48) #18
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i64 38, i1 false) #17
  %61 = getelementptr inbounds i8, i8* %57, i64 38
  store i8 0, i8* %61, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull %11) #17
  %62 = bitcast %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)***
  %63 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %63, i64 1
  %65 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %64, align 8
  call void %65(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %10) #17
  %66 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %55
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %55, %71
  %75 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %74
  %80 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #17
  br label %279

82:                                               ; preds = %50
  %83 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::WorkerGlobalScope"*, %"class.blink::WorkerGlobalScope"** %83, align 8
  %85 = icmp eq %"class.blink::WorkerGlobalScope"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::WorkerGlobalScope", %"class.blink::WorkerGlobalScope"* %84, i64 0, i32 0, i32 1
  br label %96

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %90, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %91, align 8
  %93 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %92) #17
  %94 = icmp eq %"class.blink::LocalDOMWindow"* %93, null
  %95 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %93, i64 0, i32 1
  br i1 %94, label %99, label %96

96:                                               ; preds = %88, %86
  %97 = phi %"class.blink::ExecutionContext.base"* [ %87, %86 ], [ %95, %88 ]
  %98 = icmp eq %"class.blink::ExecutionContext.base"* %97, null
  br i1 %98, label %99, label %114

99:                                               ; preds = %88, %96
  %100 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #17
  call void @_ZN5crdtp16DispatchResponse13InternalErrorEv(%"class.crdtp::DispatchResponse"* nonnull sret %12) #17
  %101 = bitcast %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)***
  %102 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %102, i64 1
  %104 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.crdtp::DispatchResponse"*)** %103, align 8
  call void %104(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %12) #17
  %105 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #18
  br label %113

113:                                              ; preds = %110, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #17
  br label %281

114:                                              ; preds = %96
  %115 = bitcast %class.scoped_refptr.3565* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #17
  %116 = getelementptr inbounds %"class.blink::ExecutionContext.base", %"class.blink::ExecutionContext.base"* %97, i64 0, i32 1
  %117 = bitcast %"class.blink::MojoBindingContext"* %116 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %118 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %117, align 8
  %119 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %118, i64 6
  %120 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %119, align 8
  %121 = tail call %"class.base::SingleThreadTaskRunner"* %120(%"class.blink::MojoBindingContext"* %116, i8 zeroext 15) #17
  %122 = ptrtoint %"class.base::SingleThreadTaskRunner"* %121 to i64
  %123 = tail call noalias i8* @malloc(i64 48) #17
  %124 = bitcast i8* %123 to i32*
  store i32 1, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %123, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 %14, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %123, i64 16
  %128 = bitcast i8* %127 to i64*
  store i64 %122, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %123, i64 24
  store i8 0, i8* %129, align 8
  %130 = getelementptr inbounds i8, i8* %123, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 16, i1 false) #17
  %131 = bitcast %class.scoped_refptr.3565* %13 to i8**
  store i8* %123, i8** %131, align 8
  %132 = load i32, i32* %52, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %278, label %134

134:                                              ; preds = %114
  %135 = bitcast i8* %130 to %"class.WTF::Vector.386"*
  %136 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %48, i64 0, i32 2
  %137 = getelementptr inbounds i8, i8* %123, i64 40
  %138 = bitcast i8* %137 to i32*
  %139 = icmp ugt i32 %132, 4
  %140 = select i1 %139, i32 %132, i32 4
  %141 = zext i32 %140 to i64
  %142 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %141) #17
  %143 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %142, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  %144 = ptrtoint i8* %143 to i64
  %145 = bitcast i8* %130 to i64*
  store atomic i64 %144, i64* %145 monotonic, align 8
  %146 = lshr i64 %142, 3
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %138, align 8
  %148 = bitcast i8* %143 to %"class.WTF::String"*
  %149 = getelementptr inbounds i8, i8* %123, i64 44
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %123, i64 44
  %154 = bitcast i8* %153 to i32*
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %148, i64 %152
  %156 = zext i32 %132 to i64
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %148, i64 %156
  %158 = bitcast %"class.WTF::String"* %155 to i8*
  %159 = ptrtoint %"class.WTF::String"* %157 to i64
  %160 = ptrtoint %"class.WTF::String"* %155 to i64
  %161 = sub i64 %159, %160
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 %161, i1 false) #17
  store i32 %132, i32* %154, align 4
  %162 = load i32, i32* %52, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %278, label %164

164:                                              ; preds = %134
  %165 = bitcast %"class.logging::CheckError"* %4 to i8*
  %166 = bitcast %"class.base::OnceCallback.3498"* %6 to i8*
  %167 = bitcast %"class.logging::CheckError"* %5 to i8*
  %168 = bitcast i8* %127 to %"class.base::SingleThreadTaskRunner"**
  %169 = bitcast %"class.WTF::RetainedRefWrapper"* %7 to i8*
  %170 = icmp eq i8* %123, null
  %171 = bitcast i8* %123 to %"class.base::subtle::RefCountedBase"*
  %172 = getelementptr inbounds %"class.WTF::RetainedRefWrapper", %"class.WTF::RetainedRefWrapper"* %7, i64 0, i32 0, i32 0
  %173 = ptrtoint i8* %123 to i64
  %174 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %6, i64 0, i32 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %6, i64 0, i32 0
  %176 = getelementptr inbounds %"class.WTF::RetainedRefWrapper", %"class.WTF::RetainedRefWrapper"* %7, i64 0, i32 0
  br label %177

177:                                              ; preds = %274, %164
  %178 = phi i32 [ 0, %164 ], [ %275, %274 ]
  %179 = call dereferenceable(88) %"class.blink::FormDataElement"* @_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3094"* %136, i32 %178) #17
  %180 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %179, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  switch i32 %181, label %274 [
    i32 0, label %182
    i32 2, label %208
  ]

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %179, i64 0, i32 1, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %179, i64 0, i32 1, i32 0, i32 0, i32 2
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i64
  %188 = call %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8* %184, i64 %187) #17
  %189 = ptrtoint %"class.WTF::StringImpl"* %188 to i64
  %190 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.386"* %135, i32 %178) #17
  %191 = bitcast %"class.WTF::String"* %190 to i64*
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %190, i64 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  store i64 %189, i64* %191, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %274, label %195

195:                                              ; preds = %182
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %274

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #17
  br label %274

208:                                              ; preds = %177
  %209 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %179, i64 0, i32 4, i32 0
  %210 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %209, align 8
  %211 = icmp eq %"class.blink::BlobDataHandle"* %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = atomicrmw add i32* %213, i32 1 monotonic
  %215 = icmp sgt i32 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)) #17
  %217 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #17
  br label %220

218:                                              ; preds = %208
  %219 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.386"* %135, i32 %178) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #17
  br label %273

220:                                              ; preds = %216, %212
  %221 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.386"* %135, i32 %178) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #17
  %222 = call i8* @_Znwm(i64 56) #18
  %223 = bitcast i8* %222 to %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*
  %224 = atomicrmw add i32* %213, i32 1 monotonic
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %220
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)) #17
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #17
  br label %228

228:                                              ; preds = %226, %220
  %229 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %168, align 8
  %230 = icmp eq %"class.base::SingleThreadTaskRunner"* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %229, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = atomicrmw add i32* %232, i32 1 monotonic
  br label %234

234:                                              ; preds = %231, %228
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #17
  br i1 %170, label %236, label %235

235:                                              ; preds = %234
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %171) #17
  br label %236

236:                                              ; preds = %235, %234
  %237 = ptrtoint %"class.WTF::String"* %221 to i64
  %238 = call i8* @_Znwm(i64 64) #18, !noalias !94
  %239 = bitcast i8* %238 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %239, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS6_12SharedBufferEEEJNS6_18RetainedRefWrapperIS5_EENS6_17UnretainedWrapperIS7_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS5_12SharedBufferEEEJNS5_18RetainedRefWrapperIS4_EENS5_17UnretainedWrapperIS6_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !94
  %240 = getelementptr inbounds i8, i8* %238, i64 32
  %241 = bitcast i8* %240 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)* @_ZN5blink12_GLOBAL__N_123InspectorPostBodyParser16BlobReadCallbackEPN3WTF6StringE13scoped_refptrINS2_12SharedBufferEE to i64), i64 0>, <2 x i64>* %241, align 8, !noalias !94
  %242 = getelementptr inbounds i8, i8* %238, i64 48
  %243 = bitcast i8* %242 to i64*
  store i64 %173, i64* %243, align 8, !noalias !94
  store %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* null, %"class.blink::(anonymous namespace)::InspectorPostBodyParser"** %172, align 8, !noalias !94
  %244 = getelementptr inbounds i8, i8* %238, i64 56
  %245 = bitcast i8* %244 to i64*
  store i64 %237, i64* %245, align 8, !noalias !94
  %246 = ptrtoint %"class.blink::BlobDataHandle"* %210 to i64
  %247 = bitcast i8* %222 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %248 = getelementptr inbounds i8, i8* %222, i64 8
  %249 = bitcast i8* %248 to i64*
  store i64 %246, i64* %249, align 8
  %250 = getelementptr inbounds i8, i8* %222, i64 16
  %251 = getelementptr inbounds i8, i8* %222, i64 32
  call void @llvm.memset.p0i8.i64(i8* align 8 %250, i8 0, i64 16, i1 false) #17
  %252 = ptrtoint i8* %238 to i64
  %253 = bitcast i8* %251 to i64*
  store i64 %252, i64* %253, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %174, align 8
  %254 = getelementptr inbounds i8, i8* %222, i64 40
  %255 = bitcast i8* %254 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 16, i1 false) #17
  %256 = call noalias i8* @malloc(i64 296) #17
  %257 = bitcast i8* %256 to %"class.blink::FileReaderLoader"*
  %258 = bitcast i8* %222 to %"class.blink::FileReaderLoaderClient"*
  call void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"* %257, i32 4, %"class.blink::FileReaderLoaderClient"* nonnull %258, %"class.base::SingleThreadTaskRunner"* %229) #17
  %259 = ptrtoint i8* %256 to i64
  %260 = bitcast i8* %254 to %"class.blink::FileReaderLoader"**
  %261 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %260, align 8
  store i64 %259, i64* %255, align 8
  %262 = icmp eq %"class.blink::FileReaderLoader"* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %236
  %264 = bitcast %"class.blink::FileReaderLoader"* %261 to void (%"class.blink::FileReaderLoader"*)***
  %265 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %265, i64 1
  %267 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %266, align 8
  call void %267(%"class.blink::FileReaderLoader"* nonnull %261) #17
  br label %268

268:                                              ; preds = %263, %236
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %175) #17
  call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_123InspectorPostBodyParserEED2Ev(%class.scoped_refptr.3565* nonnull %176) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #17
  call fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient5StartEv(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nonnull %223) #17
  %269 = atomicrmw sub i32* %213, i32 1 acq_rel
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %210) #17
  %272 = bitcast %"class.blink::BlobDataHandle"* %210 to i8*
  call void @free(i8* %272) #17
  br label %273

273:                                              ; preds = %271, %268, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #17
  br label %274

274:                                              ; preds = %273, %207, %204, %182, %177
  %275 = add nuw i32 %178, 1
  %276 = load i32, i32* %52, align 4
  %277 = icmp ult i32 %275, %276
  br i1 %277, label %177, label %278

278:                                              ; preds = %274, %114, %134
  call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_123InspectorPostBodyParserEED2Ev(%class.scoped_refptr.3565* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #17
  br label %279

279:                                              ; preds = %278, %81
  %280 = phi i64 [ %14, %81 ], [ 0, %278 ]
  br i1 %49, label %289, label %281

281:                                              ; preds = %113, %279
  %282 = phi i64 [ %14, %113 ], [ %280, %279 ]
  %283 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %283) #17
  %284 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %281
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %48) #17
  %288 = bitcast %"class.blink::EncodedFormData"* %48 to i8*
  call void @free(i8* %288) #17
  br label %289

289:                                              ; preds = %287, %281, %279, %45
  %290 = phi i64 [ %14, %45 ], [ %280, %279 ], [ %282, %281 ], [ %282, %287 ]
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %298, label %292

292:                                              ; preds = %289
  %293 = inttoptr i64 %290 to %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*
  %294 = inttoptr i64 %290 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)***
  %295 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)** %295, i64 4
  %297 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)** %296, align 8
  call void %297(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* nonnull %293) #17
  br label %298

298:                                              ; preds = %289, %292
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_123InspectorPostBodyParserEED2Ev(%class.scoped_refptr.3565* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %class.scoped_refptr.3565, %class.scoped_refptr.3565* %0, i64 0, i32 0
  %6 = load %"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.blink::(anonymous namespace)::InspectorPostBodyParser"** %5, align 8
  %7 = icmp eq %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %6, null
  br i1 %7, label %163, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorPostBodyParser", %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorPostBodyParser", %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #17
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorPostBodyParser", %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %163

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 6
  %16 = bitcast %"class.base::RefCounted.3567"* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %99

19:                                               ; preds = %14
  %20 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %20) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 48, i1 false) #17
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %23 = bitcast %union.anon.3859* %22 to i8*
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 8
  %28 = bitcast %"class.base::RefCounted.3567"* %27 to %"class.WTF::String"**
  %29 = load %"class.WTF::String"*, %"class.WTF::String"** %28, align 8
  %30 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 11, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %19
  %36 = bitcast %"class.WTF::StringView"* %3 to i8*
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  %40 = bitcast %"class.WTF::StringView"* %3 to i64*
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  br label %84

42:                                               ; preds = %95, %19
  %43 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 2
  %44 = bitcast %"class.base::RefCounted.3567"* %43 to %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"**
  %45 = load %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"** %44, align 8
  %46 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #17
  %47 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #17
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  %49 = bitcast %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %45 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.WTF::String"*)***
  %50 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.WTF::String"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.WTF::String"*)*** %49, align 8
  %51 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.WTF::String"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.WTF::String"*)** %50, align 8
  call void %51(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %45, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %67

67:                                               ; preds = %66, %63, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #17
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #17
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %83

83:                                               ; preds = %82, %79, %67
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %20) #17
  br label %99

84:                                               ; preds = %95, %35
  %85 = phi %"class.WTF::String"* [ %29, %35 ], [ %97, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #17
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  store i8* null, i8** %38, align 8
  %90 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %90, i64* %40, align 8
  br label %95

91:                                               ; preds = %84
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %37, align 8
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %39, align 8
  br label %95

95:                                               ; preds = %91, %89
  %96 = phi i32 [ %93, %91 ], [ 0, %89 ]
  store i32 %96, i32* %41, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #17
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 1
  %98 = icmp eq %"class.WTF::String"* %97, %33
  br i1 %98, label %42, label %84

99:                                               ; preds = %14, %83
  %100 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 8
  %101 = bitcast %"class.base::RefCounted.3567"* %100 to %"class.WTF::String"**
  %102 = load %"class.WTF::String"*, %"class.WTF::String"** %101, align 8
  %103 = icmp eq %"class.WTF::String"* %102, null
  br i1 %103, label %138, label %104, !prof !3

104:                                              ; preds = %99
  %105 = bitcast %"class.WTF::String"* %102 to i8*
  %106 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 11, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %136, label %109, !prof !4

109:                                              ; preds = %104
  %110 = zext i32 %107 to i64
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %102, i64 %110
  br label %112

112:                                              ; preds = %130, %109
  %113 = phi %"class.WTF::String"* [ %131, %130 ], [ %102, %109 ]
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #17
  br label %130

130:                                              ; preds = %129, %126, %112
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 1
  %132 = icmp eq %"class.WTF::String"* %131, %111
  br i1 %132, label %133, label %112

133:                                              ; preds = %130
  store i32 0, i32* %106, align 4
  %134 = bitcast %"class.base::RefCounted.3567"* %100 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %133, %104
  %137 = phi i8* [ %135, %133 ], [ %105, %104 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %137) #17
  store %"class.WTF::String"* null, %"class.WTF::String"** %101, align 8
  br label %138

138:                                              ; preds = %136, %99
  %139 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 4
  %140 = bitcast %"class.base::RefCounted.3567"* %139 to %"class.base::SingleThreadTaskRunner"**
  %141 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %140, align 8
  %142 = icmp eq %"class.base::SingleThreadTaskRunner"* %141, null
  br i1 %142, label %151, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %141, i64 0, i32 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.base::RefCountedThreadSafe.426", %"class.base::RefCountedThreadSafe.426"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw sub i32* %145, i32 1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %151

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.base::RefCountedThreadSafe.426", %"class.base::RefCountedThreadSafe.426"* %144, i64 -2
  %150 = bitcast %"class.base::RefCountedThreadSafe.426"* %149 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %150) #17
  br label %151

151:                                              ; preds = %148, %143, %138
  %152 = getelementptr inbounds %"class.base::RefCounted.3567", %"class.base::RefCounted.3567"* %9, i64 2
  %153 = bitcast %"class.base::RefCounted.3567"* %152 to %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"**
  %154 = load %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"** %153, align 8
  store %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* null, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"** %153, align 8
  %155 = icmp eq %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %151
  %157 = bitcast %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %154 to void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)***
  %158 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)** %158, i64 4
  %160 = load void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*)** %159, align 8
  call void %160(%"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* nonnull %154) #17
  br label %161

161:                                              ; preds = %156, %151
  %162 = bitcast %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %6 to i8*
  call void @free(i8* %162) #17
  br label %163

163:                                              ; preds = %8, %161, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink21InspectorNetworkAgent18getRequestPostDataERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend26GetRequestPostDataCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 -1, i32 19, i32 3, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZN5blink21InspectorNetworkAgent18getRequestPostDataERKN3WTF6StringENSt3__110unique_ptrINS_8protocol7Network7Backend26GetRequestPostDataCallbackENS5_14default_deleteISA_EEEE(%"class.blink::InspectorNetworkAgent"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::protocol::Network::Backend::GetRequestPostDataCallback"* %2)
  ret void
}

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink21InspectorNetworkAgent15IsCacheDisabledEPb(%"class.blink::InspectorNetworkAgent"* nocapture readonly, i8* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorNetworkAgent", %"class.blink::InspectorNetworkAgent"* %0, i64 0, i32 11, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i8 1, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #17
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #18
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Network::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Network::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Network::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol7Network10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Network::Backend"* %26) #17
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #17
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %16, align 8
  store %"class.blink::protocol::Network::Frontend"* null, %"class.blink::protocol::Network::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Network::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Network::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbED0Ev(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1362"* %4, null
  br i1 %5, label %38, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi i64 [ 0, %10 ], [ %34, %33 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.1362"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %18 = ptrtoint i8* %16 to i64
  switch i64 %18, label %19 [
    i64 -1, label %33
    i64 0, label %33
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %16, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %16 to i32*
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %19
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32 [ %28, %27 ], [ %26, %19 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %33

33:                                               ; preds = %32, %29, %12, %12
  %34 = add nuw nsw i64 %13, 1
  %35 = icmp eq i64 %34, %11
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %6
  %37 = bitcast %"struct.WTF::KeyValuePair.1362"* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #17
  store %"struct.WTF::KeyValuePair.1362"* null, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  br label %38

38:                                               ; preds = %36, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #17
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"class.blink::InspectorAgentState::MapField"* %0 to i8*
  tail call void @_ZdlPv(i8* %56) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::MapField"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #17
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %122, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %122, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %122, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %122, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0
  br label %42

42:                                               ; preds = %31, %120
  %43 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %114, %120 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  store i8* null, i8** %35, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %48, i64* %37, align 8
  br label %53

49:                                               ; preds = %42
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %34, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 1
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %36, align 8
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %51, %49 ], [ 0, %47 ]
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = icmp eq i32 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %59, label %64, label %110

60:                                               ; preds = %53
  %61 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %56, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %61, label %62, label %110

62:                                               ; preds = %60
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %64

64:                                               ; preds = %62, %58
  %65 = phi %"class.WTF::StringImpl"* [ %63, %62 ], [ %45, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  br label %70

70:                                               ; preds = %64, %67
  %71 = phi i32 [ %69, %67 ], [ 0, %64 ]
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %44, i32 %71, i32 -1) #17
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %77, !prof !4

76:                                               ; preds = %70
  call void @llvm.trap() #17
  unreachable

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %79, i64 %82, i8* nonnull %4) #17
  br i1 %83, label %84, label %93

84:                                               ; preds = %77
  %85 = call { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1359"* %41, %"class.WTF::String"* nonnull dereferenceable(8) %3, i8* nonnull dereferenceable(1) %4) #17
  %86 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %85, 1
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %85, 0
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %90, i64 0, i32 1
  %92 = load i8, i8* %4, align 1, !range !2
  store i8 %92, i8* %91, align 1
  br label %93

93:                                               ; preds = %89, %84, %77
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #17
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  br label %110

110:                                              ; preds = %58, %60, %109
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %112 = icmp eq %"struct.WTF::KeyValuePair"* %111, %18
  br i1 %112, label %122, label %113

113:                                              ; preds = %110, %117
  %114 = phi %"struct.WTF::KeyValuePair"* [ %118, %117 ], [ %111, %110 ]
  %115 = bitcast %"struct.WTF::KeyValuePair"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  switch i64 %116, label %120 [
    i64 -1, label %117
    i64 0, label %117
  ]

117:                                              ; preds = %113, %113
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 1
  %119 = icmp eq %"struct.WTF::KeyValuePair"* %118, %18
  br i1 %119, label %122, label %113

120:                                              ; preds = %113
  %121 = icmp eq %"struct.WTF::KeyValuePair"* %114, %18
  br i1 %121, label %122, label %42

122:                                              ; preds = %25, %110, %120, %117, %9, %28, %1
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1359"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1362"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* null)
  %9 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1362"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1362"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1362"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1362"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1362"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1362"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1362"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1362"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.1362"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !2
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.1362"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } undef, %"struct.WTF::KeyValuePair.1362"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.1362"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1359"*, %"struct.WTF::KeyValuePair.1362"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1362"*
  %37 = call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* %36, i32 %32, %"struct.WTF::KeyValuePair.1362"* %1) #17
  ret %"struct.WTF::KeyValuePair.1362"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1359"*, %"struct.WTF::KeyValuePair.1362"*, i32, %"struct.WTF::KeyValuePair.1362"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1359", align 8
  %6 = bitcast %"class.WTF::HashTable.1359"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1359"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1362"* %1, %"struct.WTF::KeyValuePair.1362"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1359"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1359"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %22 to i64
  br label %71

24:                                               ; preds = %114
  %25 = bitcast %"class.WTF::HashTable.1359"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1359"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %115, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1362"* [ null, %16 ], [ %118, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %116, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1362"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.1362"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #17
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1362"* %33

71:                                               ; preds = %21, %114
  %72 = phi i64 [ %115, %114 ], [ %23, %21 ]
  %73 = phi i32 [ %116, %114 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.1362"* [ %117, %114 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.1362"* [ %118, %114 ], [ null, %21 ]
  %76 = phi i32 [ %119, %114 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.1362"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %114
    i64 0, label %114
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1359"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #17
  %85 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #17
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.1362"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %74, i64 %77, i32 1
  %107 = load i8, i8* %106, align 8, !range !2
  store i8 %107, i8* %105, align 8
  %108 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %15, align 8
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %108, i64 %77
  %110 = icmp eq %"struct.WTF::KeyValuePair.1362"* %109, %3
  %111 = select i1 %110, %"struct.WTF::KeyValuePair.1362"* %85, %"struct.WTF::KeyValuePair.1362"* %75
  %112 = load i32, i32* %12, align 8
  %113 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %108 to i64
  br label %114

114:                                              ; preds = %71, %71, %102
  %115 = phi i64 [ %72, %71 ], [ %113, %102 ], [ %72, %71 ]
  %116 = phi i32 [ %73, %71 ], [ %112, %102 ], [ %73, %71 ]
  %117 = phi %"struct.WTF::KeyValuePair.1362"* [ %74, %71 ], [ %108, %102 ], [ %74, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.1362"* [ %75, %71 ], [ %111, %102 ], [ %75, %71 ]
  %119 = add i32 %76, 1
  %120 = icmp eq i32 %119, %116
  br i1 %120, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1359"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.1362"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.1362"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.1362"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.1362"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1362"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.1362"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.1362"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.1362"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } undef, %"struct.WTF::KeyValuePair.1362"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.1362"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEED0Ev(%"class.blink::InspectorAgentState::MapField.1363"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState8MapFieldIN3WTF6StringEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1368"* %4, null
  br i1 %5, label %9, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"* nonnull %4, i32 %8) #17
  store %"struct.WTF::KeyValuePair.1368"* null, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #17
  br label %26

26:                                               ; preds = %25, %22, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %26, %39, %42
  %44 = bitcast %"class.blink::InspectorAgentState::MapField.1363"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE6DecodeEv(%"class.blink::InspectorAgentState::MapField.1363"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %6) #17
  %8 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %7, null
  br i1 %8, label %177, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %7, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %177, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"struct.WTF::KeyValuePair"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %177, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %177, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::StringView"* %2 to i8*
  %33 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = bitcast %"class.WTF::StringView"* %2 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %4 to i8*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0
  br label %44

44:                                               ; preds = %31, %175
  %45 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %169, %175 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  store i8* null, i8** %35, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %50, i64* %37, align 8
  br label %55

51:                                               ; preds = %44
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %34, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %36, align 8
  br label %55

55:                                               ; preds = %49, %51
  %56 = phi i32 [ %53, %51 ], [ 0, %49 ]
  store i32 %56, i32* %38, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = icmp eq i32 %56, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %61, label %66, label %165

62:                                               ; preds = %55
  %63 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %58, %"class.WTF::StringView"* nonnull dereferenceable(24) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  br i1 %63, label %64, label %165

64:                                               ; preds = %62
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ %47, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %40, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %66, %69
  %73 = phi i32 [ %71, %69 ], [ 0, %66 ]
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %46, i32 %73, i32 -1) #17
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #17
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %79, !prof !4

78:                                               ; preds = %72
  call void @llvm.trap() #17
  unreachable

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8* %81, i64 %84, %"class.WTF::String"* nonnull %4) #17
  br i1 %85, label %86, label %132

86:                                               ; preds = %79
  %87 = call { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1365"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #17
  %88 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %87, 1
  %89 = and i8 %88, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %132

91:                                               ; preds = %86
  %92 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %87, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %92, i64 0, i32 1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #17
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !4

110:                                              ; preds = %101
  call void @llvm.trap() #17
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %91
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"class.WTF::String"* %93 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #17
  br label %132

132:                                              ; preds = %131, %128, %113, %86, %79
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #17
  br label %148

148:                                              ; preds = %132, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #17
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #17
  br label %164

164:                                              ; preds = %148, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  br label %165

165:                                              ; preds = %60, %62, %164
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %167 = icmp eq %"struct.WTF::KeyValuePair"* %166, %18
  br i1 %167, label %177, label %168

168:                                              ; preds = %165, %172
  %169 = phi %"struct.WTF::KeyValuePair"* [ %173, %172 ], [ %166, %165 ]
  %170 = bitcast %"struct.WTF::KeyValuePair"* %169 to i64*
  %171 = load i64, i64* %170, align 8
  switch i64 %171, label %175 [
    i64 -1, label %172
    i64 0, label %172
  ]

172:                                              ; preds = %168, %168
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %169, i64 1
  %174 = icmp eq %"struct.WTF::KeyValuePair"* %173, %18
  br i1 %174, label %177, label %168

175:                                              ; preds = %168
  %176 = icmp eq %"struct.WTF::KeyValuePair"* %169, %18
  br i1 %176, label %177, label %44

177:                                              ; preds = %25, %165, %175, %172, %9, %28, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.1368"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #17
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.1368"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #17
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPN3WTF6StringE(i8*, i64, %"class.WTF::String"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERS1_SF_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1365"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1368"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* null)
  %9 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1368"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1368"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1368"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1368"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1368"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1368"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1368"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1368"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1368"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.1368"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } undef, %"struct.WTF::KeyValuePair.1368"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.1368"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1365"*, %"struct.WTF::KeyValuePair.1368"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1368"*
  %37 = call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* %36, i32 %32, %"struct.WTF::KeyValuePair.1368"* %1) #17
  ret %"struct.WTF::KeyValuePair.1368"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERS3_SC_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1368"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1368"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #17
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1365"*, %"struct.WTF::KeyValuePair.1368"*, i32, %"struct.WTF::KeyValuePair.1368"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1365", align 8
  %6 = bitcast %"class.WTF::HashTable.1365"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1365"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1368"* %1, %"struct.WTF::KeyValuePair.1368"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1365"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1365"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.1365"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1365"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1368"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1368"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1368"* nonnull %37, i32 %34) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1368"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1368"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1368"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1368"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1365"* nonnull %5, %"struct.WTF::KeyValuePair.1368"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.1368"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.1368"* %53, %"struct.WTF::KeyValuePair.1368"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.1368"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.1368"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1365"*, %"struct.WTF::KeyValuePair.1368"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1365"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #17
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.1368"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.1368"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.1368"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1365"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.1368"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.1368"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.1368"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.1368"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1368"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.1368"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.1368"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.1368"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } undef, %"struct.WTF::KeyValuePair.1368"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.1368"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %3, align 8
  store %"class.blink::protocol::Network::Frontend"* null, %"class.blink::protocol::Network::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Network::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Network::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !4

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [22 x i8*] }, { [11 x i8*], [22 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Network::Frontend"*, %"class.blink::protocol::Network::Frontend"** %5, align 8
  store %"class.blink::protocol::Network::Frontend"* null, %"class.blink::protocol::Network::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Network::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Network::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !3

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !4

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #17
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol7Network8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #17
  ret void
}

declare void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.386"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #4

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #4

declare dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink19ResourceRequestHead16HttpHeaderFieldsEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19ResourceRequestHead10HttpMethodEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #4

declare i32 @_ZNK5blink19ResourceRequestHead8PriorityEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL18FragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.3742"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #17
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %6, i8* %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #17
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #17
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %28) #17
  %29 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #17
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #17
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %25) #17
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %47, i8* %50) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #17
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #17
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %59
  call void @llvm.trap() #17
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #17
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #17
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #17
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %89) #17
  %90 = bitcast %"class.WTF::StringTypeAdapter.3751"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #17
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #17
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.3751"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %2, i16* %86) #17
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %108, i16* %111) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #17
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #17
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !4

127:                                              ; preds = %120
  call void @llvm.trap() #17
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #17
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #17
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

declare i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #4

declare void @_ZN5blink8protocol6Binary8fromSpanEPKhm(%"class.blink::protocol::Binary"* sret, i8*, i64) local_unnamed_addr #4

declare void @_ZNK5blink15EncodedFormData7FlattenERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(%"class.blink::EncodedFormData"*, %"class.WTF::Vector.1293"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network13PostDataEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.3322"*, %"class.std::__1::unique_ptr.3324"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3324"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3322"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3322"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3324"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3324"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3324"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3324"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3324"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3324"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3324"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3322", %"class.std::__1::vector.3322"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3324"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3324"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Network::PostDataEntry"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3324"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3324"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3324"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3324"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !101

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3324"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3324"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3324"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3324"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3324"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3324"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3324"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3324"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3324"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3324"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3324"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3324"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3324"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3324"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3324"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3324"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3324"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3324"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3324"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3324"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3324"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3324"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3324"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3324"*, %"class.std::__1::unique_ptr.3324"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3324"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3324"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3324"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3324"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3324"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3324"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3324", %"class.std::__1::unique_ptr.3324"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Network::PostDataEntry"*, %"class.blink::protocol::Network::PostDataEntry"** %142, align 8
  store %"class.blink::protocol::Network::PostDataEntry"* null, %"class.blink::protocol::Network::PostDataEntry"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Network::PostDataEntry"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Network::PostDataEntry"* %143 to void (%"class.blink::protocol::Network::PostDataEntry"*)***
  %147 = load void (%"class.blink::protocol::Network::PostDataEntry"*)**, void (%"class.blink::protocol::Network::PostDataEntry"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Network::PostDataEntry"*)*, void (%"class.blink::protocol::Network::PostDataEntry"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Network::PostDataEntry"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3324"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

declare %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1198"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0)) #17
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #17
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.1201"*
  %31 = call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* %30, i32 %17, %"struct.WTF::KeyValuePair.1201"* null) #17
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1198"*, %"struct.WTF::KeyValuePair.1201"*, i32, %"struct.WTF::KeyValuePair.1201"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1198", align 8
  %6 = bitcast %"class.WTF::HashTable.1198"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1198"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1201"* %1, %"struct.WTF::KeyValuePair.1201"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1198"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1198"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.1198"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1198"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1201"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1201"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1201"* nonnull %37, i32 %34) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1201"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.1201"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.1201"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.1201"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1198"* nonnull %5, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.1201"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.1201"* %53, %"struct.WTF::KeyValuePair.1201"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.1201"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.1201"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.1198"*, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1198"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #17
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.1201"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.1201"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.1201"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1198"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #17
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair.1201"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair.1201"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair.1201"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair.1201"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.1201"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #17
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #17
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #17
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair.1201"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair.1201"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair.1201"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } undef, %"struct.WTF::KeyValuePair.1201"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair.1201"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #17
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #17
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #17
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #17
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #17
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #17
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1201"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.1201"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #17
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.1201"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #17
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"*, %"class.WTF::AtomicString"* dereferenceable(8), %"struct.WTF::KeyValuePair.1201"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1201"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* null)
  %11 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1201"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #17
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.1201"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.1201"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.1201"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %105, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br i1 %70, label %105, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.1201"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.1201"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.1201"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #17
  %85 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.1201"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  %93 = call dereferenceable(16) %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.1201"* %92, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16) %2) #17
  %94 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, %96
  %100 = shl i32 %99, 1
  %101 = load i32, i32* %14, align 8
  %102 = icmp ult i32 %100, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %91
  %104 = call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* %92)
  br label %105

105:                                              ; preds = %58, %62, %91, %103
  %106 = phi i8 [ 1, %91 ], [ 1, %103 ], [ 0, %62 ], [ 0, %58 ]
  %107 = phi %"struct.WTF::KeyValuePair.1201"* [ %92, %91 ], [ %104, %103 ], [ %51, %62 ], [ %51, %58 ]
  %108 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } undef, %"struct.WTF::KeyValuePair.1201"* %107, 0
  %109 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %108, i8 %106, 1
  ret { %"struct.WTF::KeyValuePair.1201"*, i8 } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1198"*, %"struct.WTF::KeyValuePair.1201"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1201"*
  %37 = call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* %36, i32 %32, %"struct.WTF::KeyValuePair.1201"* %1) #17
  ret %"struct.WTF::KeyValuePair.1201"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF12KeyValuePairINS_12AtomicStringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !4

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.1201"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #17
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #17
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !4

61:                                               ; preds = %52
  tail call void @llvm.trap() #17
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::AtomicString"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #17
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.1201"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.1201"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* null)
  %11 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.1201"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #17
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair.1201"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair.1201"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair.1201"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #17
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #17
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair.1201"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair.1201"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair.1201"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #17
  %85 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair.1201"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1201"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair.1201"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1198"* %0, %"struct.WTF::KeyValuePair.1201"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair.1201"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } undef, %"struct.WTF::KeyValuePair.1201"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair.1201"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair.1201"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1201"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1201"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #17
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %13) #17
  %14 = getelementptr inbounds %"class.WTF::StringAppend.3742", %"class.WTF::StringAppend.3742"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %45, i8* %46) #17
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #17
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"*, i8*) unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"*, i16*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"*, i16*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2044"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2044"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2044"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !102

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #17
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #18
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #4

declare %"struct.blink::ResourceLoadInfo"* @_ZNK5blink16ResourceResponse19GetResourceLoadInfoEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16ResourceLoadInfoEED2Ev(%class.scoped_refptr.1271*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.1271, %class.scoped_refptr.1271* %0, i64 0, i32 0
  %3 = load %"struct.blink::ResourceLoadInfo"*, %"struct.blink::ResourceLoadInfo"** %2, align 8
  %4 = icmp eq %"struct.blink::ResourceLoadInfo"* %3, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %65

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #17
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 5, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %44

44:                                               ; preds = %43, %40, %27
  %45 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 4
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %45) #17
  %46 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 3
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %46) #17
  %47 = getelementptr inbounds %"struct.blink::ResourceLoadInfo", %"struct.blink::ResourceLoadInfo"* %3, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #17
  br label %63

63:                                               ; preds = %44, %59, %62
  %64 = bitcast %"struct.blink::ResourceLoadInfo"* %3 to i8*
  tail call void @free(i8* %64) #17
  br label %65

65:                                               ; preds = %5, %63, %1
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse14HttpStatusTextEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink16ResourceResponse16ConnectionReusedEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare i32 @_ZNK5blink16ResourceResponse12ConnectionIDEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink16ResourceResponse9WasCachedEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare double @_ZNK4base4Time20ToJsTimeIgnoringNullEv(%"class.base::Time"*) local_unnamed_addr #4

declare %"class.blink::ResourceLoadTiming"* @_ZNK5blink16ResourceResponse21GetResourceLoadTimingEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3net9IPAddress7IsValidEv(%"class.net::IPAddress"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink16ResourceResponse6IsHTTPEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.1198"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEEaSERKSB_(%"class.WTF::HashTable.1198"*, %"class.WTF::HashTable.1198"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.1198", align 8
  %4 = bitcast %"class.WTF::HashTable.1198"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable.1198"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #17
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1198"* nonnull %3, i32 %11) #17
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %1, i64 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair.1201"*, %"struct.WTF::KeyValuePair.1201"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %17, i64 %20
  br i1 %15, label %49, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"struct.WTF::KeyValuePair.1201"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"struct.WTF::KeyValuePair.1201"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %25, i64 1
  %30 = icmp eq %"struct.WTF::KeyValuePair.1201"* %29, %21
  br i1 %30, label %49, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"struct.WTF::KeyValuePair.1201"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"struct.WTF::KeyValuePair.1201"* %32, %21
  br i1 %33, label %49, label %34

34:                                               ; preds = %31, %47
  %35 = phi %"struct.WTF::KeyValuePair.1201"* [ %41, %47 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %35, i64 0, i32 0
  %37 = call { %"struct.WTF::KeyValuePair.1201"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1198"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %36, %"struct.WTF::KeyValuePair.1201"* dereferenceable(16) %35) #17
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %35, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair.1201"* %38, %21
  br i1 %39, label %49, label %40

40:                                               ; preds = %34, %44
  %41 = phi %"struct.WTF::KeyValuePair.1201"* [ %45, %44 ], [ %38, %34 ]
  %42 = bitcast %"struct.WTF::KeyValuePair.1201"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  switch i64 %43, label %47 [
    i64 -1, label %44
    i64 0, label %44
  ]

44:                                               ; preds = %40, %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1201", %"struct.WTF::KeyValuePair.1201"* %41, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair.1201"* %45, %21
  br i1 %46, label %49, label %40

47:                                               ; preds = %40
  %48 = icmp eq %"struct.WTF::KeyValuePair.1201"* %41, %21
  br i1 %48, label %49, label %34

49:                                               ; preds = %28, %34, %47, %44, %2, %13, %31
  %50 = bitcast %"class.WTF::HashTable.1198"* %3 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.WTF::HashTable.1198"* %0 to i64*
  %53 = load i64, i64* %52, align 8
  store atomic i64 %53, i64* %50 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %54 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %6, align 8
  store i32 %56, i32* %54, align 4
  store i32 %55, i32* %6, align 8
  %57 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %7, align 4
  store i32 %59, i32* %57, align 4
  store i32 %58, i32* %7, align 4
  %60 = getelementptr inbounds %"class.WTF::HashTable.1198", %"class.WTF::HashTable.1198"* %0, i64 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 2147483647
  %63 = load i32, i32* %8, align 8
  %64 = and i32 %63, 2147483647
  %65 = and i32 %61, -2147483648
  %66 = or i32 %64, %65
  store i32 %66, i32* %60, align 8
  %67 = and i32 %63, -2147483648
  %68 = or i32 %67, %62
  store i32 %68, i32* %8, align 8
  %69 = icmp eq i64 %53, 0
  br i1 %69, label %72, label %70, !prof !3

70:                                               ; preds = %49
  %71 = inttoptr i64 %53 to %"struct.WTF::KeyValuePair.1201"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1201"* nonnull %71, i32 %55) #17
  store %"struct.WTF::KeyValuePair.1201"* null, %"struct.WTF::KeyValuePair.1201"** %5, align 8
  br label %72

72:                                               ; preds = %49, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret %"class.WTF::HashTable.1198"* %0
}

declare double @_ZNK5blink18ResourceLoadTiming25CalculateMillisecondDeltaEN4base9TimeTicksE(%"class.blink::ResourceLoadTiming"*, i64) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #4

declare void @_ZNK3net9IPAddress8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPAddress"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.3806"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #17
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %8) #17
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #17
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3806"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #17
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3806"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #17
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  call void @llvm.trap() #17
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #17
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3806"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #17
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3806"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #17
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  call void @llvm.trap() #17
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #17
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.3806"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %14) #17
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %9) #17
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %9) #17
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #17
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %25, i8* %26) #17
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #17
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #17
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #17
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #17
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.3806"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #17
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #17
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #17
  %15 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #17
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %1) #17
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %34, i8* %37) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %6) #17
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %40) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.3806"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %5, i8* %10) #17
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #17
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #17
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %3, i8* %14) #17
  %15 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.3806", %"class.WTF::StringAppend.3806"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #17
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %3, i16* %1) #17
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %34, i16* %37) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #17
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.3742"* %6) #17
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %5, i16* %40) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #17
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol7Network26SignedCertificateTimestampENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.3387"*, %"class.std::__1::unique_ptr.3389"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3387", %"class.std::__1::vector.3387"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3389"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.3387"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.3387"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.3387", %"class.std::__1::vector.3387"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3389"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3389"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3389"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3389"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3389"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3389"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3389"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3387", %"class.std::__1::vector.3387"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3389"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3389"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Network::SignedCertificateTimestamp"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3389"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3389"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3389"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3389"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !103

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3389"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3389"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3389"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3389"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3389"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3389"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3389"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3389"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3389"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3389"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3389"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3389"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3389"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3389"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3389"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3389"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3389"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3389"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3389"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3389"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3389"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3389"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3389"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3389"*, %"class.std::__1::unique_ptr.3389"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3389"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3389"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3389"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3389"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3389"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.3389"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3389", %"class.std::__1::unique_ptr.3389"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Network::SignedCertificateTimestamp"*, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %142, align 8
  store %"class.blink::protocol::Network::SignedCertificateTimestamp"* null, %"class.blink::protocol::Network::SignedCertificateTimestamp"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Network::SignedCertificateTimestamp"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Network::SignedCertificateTimestamp"* %143 to void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)***
  %147 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)**, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)*, void (%"class.blink::protocol::Network::SignedCertificateTimestamp"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Network::SignedCertificateTimestamp"* nonnull %143) #17
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.3389"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN3WTF6StringEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.2314"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.2314", %"class.absl::optional_internal::optional_data_base.2314"* %0, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.2314", %"class.absl::optional_internal::optional_data_base.2314"* %0, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #17
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #17
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %6
  %29 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %30 = bitcast %"class.WTF::String"* %7 to i64*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  store i64 %29, i64* %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %70, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %70

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #17
  br label %70

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.2314", %"class.absl::optional_internal::optional_data_base.2314"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #17
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !4

66:                                               ; preds = %57
  tail call void @llvm.trap() #17
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %47, %52, %67
  store i8 1, i8* %3, align 8
  br label %70

70:                                               ; preds = %46, %43, %28, %69
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare i32 @_ZNK5blink19ResourceRequestHead12GetCacheModeEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #4

declare i64 @_ZNK5blink13ResourceError31GetResourceRequestBlockedReasonEv(%"class.blink::ResourceError"*) local_unnamed_addr #4

declare void @_ZN7network15CorsErrorStatusC1ERKS0_(%"struct.network::CorsErrorStatus"*, %"struct.network::CorsErrorStatus"* dereferenceable(40)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network15CorsErrorStatusD1Ev(%"struct.network::CorsErrorStatus"*) unnamed_addr #5

declare void @_ZN5blink8protocol15DictionaryValue9setStringERKN3WTF6StringES5_(%"class.blink::protocol::DictionaryValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.blink::protocol::Object"* @_ZN5blink8protocol6Object9fromValueEPNS0_5ValueEPN5crdtp12ErrorSupportE(%"class.blink::protocol::Value"*, %"class.crdtp::ErrorSupport"*) local_unnamed_addr #4

declare void @_ZN5blink8protocol15DictionaryValueC1Ev(%"class.blink::protocol::DictionaryValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientD2Ev(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 6, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #17
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #17
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #17
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %14, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %14, align 8
  %16 = icmp eq %"class.blink::FileReaderLoader"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::FileReaderLoader"* %15 to void (%"class.blink::FileReaderLoader"*)***
  %19 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %19, i64 1
  %21 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %20, align 8
  tail call void %21(%"class.blink::FileReaderLoader"* nonnull %15) #17
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %23) #17
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #17
  br label %40

40:                                               ; preds = %22, %36, %39
  %41 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #17
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 1, i32 0
  %59 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %58, align 8
  %60 = icmp eq %"class.blink::BlobDataHandle"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw sub i32* %62, i32 1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %59) #17
  %66 = bitcast %"class.blink::BlobDataHandle"* %59 to i8*
  tail call void @free(i8* %66) #17
  br label %67

67:                                               ; preds = %57, %61, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientD0Ev(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClientD2Ev(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0) #17
  %2 = bitcast %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient15DidStartLoadingEv(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nocapture) unnamed_addr #14 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv(%"class.blink::FileReaderLoaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient23DidReceiveDataForClientEPKcj(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nocapture readonly, i8*, i32) unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 6, i32 0
  %7 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %6, align 8
  %8 = zext i32 %2 to i64
  tail call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %7, i8* %1, i64 %8) #17
  br label %9

9:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient16DidFinishLoadingEv(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  br label %7

7:                                                ; preds = %1, %5
  tail call fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient4DoneE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, %"class.WTF::SharedBuffer"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient7DidFailENS_13FileErrorCodeE(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*, i32) unnamed_addr #0 align 2 {
  tail call fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient4DoneE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, %"class.WTF::SharedBuffer"* null)
  ret void
}

declare void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"*, i32, %"class.blink::FileReaderLoaderClient"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_131InspectorFileReaderLoaderClient4DoneE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*, %"class.WTF::SharedBuffer"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.1323, align 8
  %4 = alloca %"class.base::OnceCallback.3498", align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient", %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, i64 0, i32 4
  %6 = icmp eq %"class.WTF::SharedBuffer"* %1, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #17
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %class.scoped_refptr.1323* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %class.scoped_refptr.1323, %class.scoped_refptr.1323* %3, i64 0, i32 0
  store %"class.WTF::SharedBuffer"* %1, %"class.WTF::SharedBuffer"** %11, align 8
  %12 = bitcast %"class.base::OnceCallback.3498"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.3498"* %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback.3498"* %4 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback.3498", %"class.base::OnceCallback.3498"* %4, i64 0, i32 0
  %18 = inttoptr i64 %15 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323*)**
  %21 = load void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323*)*, void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323*)** %20, align 8
  call void %21(%"class.base::internal::BindStateBase"* %18, %class.scoped_refptr.1323* nonnull dereferenceable(8) %3) #17
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #17
  %22 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %11, align 8
  %23 = icmp eq %"class.WTF::SharedBuffer"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %22, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #17
  %26 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %22) #17
  %30 = bitcast %"class.WTF::SharedBuffer"* %22 to i8*
  call void @free(i8* %30) #17
  br label %31

31:                                               ; preds = %9, %24, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %32 = icmp eq %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* %0 to void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)***
  %35 = load void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)**, void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)** %35, i64 1
  %37 = load void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)*, void (%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"*)** %36, align 8
  call void %37(%"class.blink::(anonymous namespace)::InspectorFileReaderLoaderClient"* nonnull %0) #17
  br label %38

38:                                               ; preds = %33, %31
  br i1 %6, label %46, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %40) #17
  %41 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %1) #17
  %45 = bitcast %"class.WTF::SharedBuffer"* %1 to i8*
  call void @free(i8* %45) #17
  br label %46

46:                                               ; preds = %38, %39, %44
  ret void
}

declare void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #4

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #4

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS4_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i1, double, double, double, i32)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8*
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to double*
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to double*
  %10 = getelementptr inbounds void ()*, void ()** %4, i64 3
  %11 = bitcast void ()** %10 to double*
  %12 = getelementptr inbounds void ()*, void ()** %4, i64 4
  %13 = bitcast void ()** %12 to i32*
  %14 = load void (i1, double, double, double, i32)*, void (i1, double, double, double, i32)** %3, align 8
  %15 = load i8, i8* %5, align 1, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = load double, double* %7, align 8
  %18 = load double, double* %9, align 8
  %19 = load double, double* %11, align 8
  %20 = load i32, i32* %13, align 4
  tail call void %14(i1 zeroext %16, double %17, double %18, double %19, i32 %20) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvbdddN5blink17WebConnectionTypeEEJbdddS3_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare void @_ZN5blink20NetworkStateNotifier32SetNetworkConnectionInfoOverrideEbNS_17WebConnectionTypeEN4absl8optionalINS_26WebEffectiveConnectionTypeEEEld(%"class.blink::NetworkStateNotifier"*, i1 zeroext, i32, i64, i64, double) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.38, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZNK3WTF6String6Latin1Ev(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.38, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #17
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"class.blink::FormDataElement"* @_ZNK3WTF6VectorIN5blink15FormDataElementELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3094"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3094", %"class.WTF::Vector.3094"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.3094", %"class.WTF::Vector.3094"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::FormDataElement"*, %"class.blink::FormDataElement"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::FormDataElement", %"class.blink::FormDataElement"* %24, i64 %25
  ret %"class.blink::FormDataElement"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.386"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #17
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i8* %14, i8* %15) #17
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #17
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  %23 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_123InspectorPostBodyParser16BlobReadCallbackEPN3WTF6StringE13scoped_refptrINS2_12SharedBufferEE(%"class.blink::(anonymous namespace)::InspectorPostBodyParser"* nocapture, %"class.WTF::String"* nocapture, %"class.WTF::SharedBuffer"*) #0 align 2 {
  %4 = icmp eq %"class.WTF::SharedBuffer"* %2, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %3
  %6 = tail call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* nonnull %2) #17
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String26FromUTF8WithLatin1FallbackEPKhm(i8* %6, i64 %8) #17
  %10 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  %11 = bitcast %"class.WTF::String"* %1 to i64*
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #17
  br label %30

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::InspectorPostBodyParser", %"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %0, i64 0, i32 3
  store i8 1, i8* %29, align 8
  br label %37

30:                                               ; preds = %5, %24, %27
  %31 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #17
  %32 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %2) #17
  %36 = bitcast %"class.WTF::SharedBuffer"* %2 to i8*
  tail call void @free(i8* %36) #17
  br label %37

37:                                               ; preds = %28, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS6_12SharedBufferEEEJNS6_18RetainedRefWrapperIS5_EENS6_17UnretainedWrapperIS7_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_(%"class.base::internal::BindStateBase"* nocapture readonly, %class.scoped_refptr.1323* nocapture dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.WTF::String"**
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = bitcast i8* %15 to %"class.blink::(anonymous namespace)::InspectorPostBodyParser"*
  %17 = and i64 %11, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %2
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %11, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)**
  %25 = load void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)*, void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)** %24, align 8
  br label %28

26:                                               ; preds = %2
  %27 = inttoptr i64 %11 to void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.blink::(anonymous namespace)::InspectorPostBodyParser"*, %"class.WTF::String"*, %"class.WTF::SharedBuffer"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %class.scoped_refptr.1323, %class.scoped_refptr.1323* %1, i64 0, i32 0
  %31 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %30, align 8
  store %"class.WTF::SharedBuffer"* null, %"class.WTF::SharedBuffer"** %30, align 8
  tail call void %29(%"class.blink::(anonymous namespace)::InspectorPostBodyParser"* %16, %"class.WTF::String"* %9, %"class.WTF::SharedBuffer"* %31) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS5_12SharedBufferEEEJNS5_18RetainedRefWrapperIS4_EENS5_17UnretainedWrapperIS6_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %class.scoped_refptr.3565*
  tail call fastcc void @_ZN13scoped_refptrIN5blink12_GLOBAL__N_123InspectorPostBodyParserEED2Ev(%class.scoped_refptr.3565* %5) #17
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #18
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #17
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #17
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #17
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #17
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #17
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #17
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #17
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #17
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #17
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #17
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #17
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17WorkerGlobalScopeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerGlobalScope"*
  %4 = bitcast i8* %1 to void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)**, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)*, void (%"class.blink::WorkerGlobalScope"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WorkerGlobalScope"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20NetworkResourcesDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::NetworkResourcesData"*
  tail call void @_ZNK5blink20NetworkResourcesData5TraceEPNS_7VisitorE(%"class.blink::NetworkResourcesData"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink20NetworkResourcesData5TraceEPNS_7VisitorE(%"class.blink::NetworkResourcesData"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1226"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #17
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.1226"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv) #17
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13XHRReplayDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #17, !range !104
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %70, i64 6
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %3, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_16ExecutionContextEEEvRKNS_14LivenessBrokerEPKv) #17
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13XHRReplayData5TraceEPNS_7VisitorE(%"class.blink::XHRReplayData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::XHRReplayData", %"class.blink::XHRReplayData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakMember.779"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %74, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember.779"* %3 to i8*
  %10 = and i64 %5, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4138
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %7
  %16 = getelementptr inbounds i8, i8* %11, i64 4160
  br label %55

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %11, i64 4096
  %19 = bitcast i8* %18 to %"class.blink::NormalPage"*
  %20 = getelementptr inbounds i8, i8* %11, i64 4400
  %21 = bitcast i8* %20 to i8**
  %22 = bitcast i8* %20 to i64*
  %23 = load i64, i64* %22, align 16
  %24 = sub i64 %5, %23
  %25 = lshr i64 %24, 3
  %26 = lshr i64 %24, 6
  %27 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %19, i64 0, i32 2, i32 0, i32 1, i64 %26
  %28 = load atomic i8, i8* %27 acquire, align 1
  %29 = trunc i64 %25 to i32
  %30 = and i32 %29, 7
  %31 = shl i32 2, %30
  %32 = trunc i32 %31 to i8
  %33 = add i8 %32, -1
  %34 = and i8 %33, %28
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %17, %36
  %37 = phi i64 [ %38, %36 ], [ %26, %17 ]
  %38 = add i64 %37, -1
  %39 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %19, i64 0, i32 2, i32 0, i32 1, i64 %38
  %40 = load atomic i8, i8* %39 acquire, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %36, label %42

42:                                               ; preds = %36, %17
  %43 = phi i64 [ %26, %17 ], [ %38, %36 ]
  %44 = phi i8 [ %34, %17 ], [ %40, %36 ]
  %45 = zext i8 %44 to i32
  %46 = tail call i32 @llvm.ctlz.i32(i32 %45, i1 true) #17, !range !104
  %47 = add nsw i32 %46, -24
  %48 = shl i64 %43, 3
  %49 = or i64 %48, 7
  %50 = sext i32 %47 to i64
  %51 = sub i64 %49, %50
  %52 = shl i64 %51, 3
  %53 = load i8*, i8** %21, align 16
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  br label %55

55:                                               ; preds = %42, %15
  %56 = phi i8* [ %16, %15 ], [ %54, %42 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = getelementptr inbounds i8, i8* %56, i64 4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 acquire, align 2
  %61 = lshr i16 %60, 2
  %62 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %63 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %62, i64 0, i32 0
  %64 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %63, align 8
  %65 = zext i16 %61 to i64
  %66 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %64, i64 %65
  %67 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %66, align 8
  %68 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %67, i64 0, i32 0
  %69 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %68, align 8
  %70 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %71, i64 6
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %57, void (%"class.blink::Visitor"*, i8*)* %69, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_16ExecutionContextEEEvRKNS_14LivenessBrokerEPKv) #17
  br label %74

74:                                               ; preds = %2, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_16ExecutionContextEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ExecutionContext"**
  %4 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %3, align 8
  %5 = ptrtoint %"class.blink::ExecutionContext"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %10
    i64 -1, label %10
  ]

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ExecutionContext"* %4)
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br label %10

10:                                               ; preds = %2, %2, %8, %6
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16ExecutionContextEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #17
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #17
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ExecutionContext"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #17, !range !104
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #17
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.386"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #16 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #17
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #17
  %47 = bitcast %"class.WTF::Vector.386"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #17
  %51 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #17
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #17
  %87 = bitcast %"class.WTF::Vector.386"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #17
  %91 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #17
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !4

122:                                              ; preds = %113
  tail call void @llvm.trap() #17
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1365"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1368"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1368"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1368"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1368"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1368"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1368"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } undef, %"struct.WTF::KeyValuePair.1368"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %77, %"struct.WTF::KeyValuePair.1368"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1359"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1362"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1362"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1362"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1362"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1362"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1362"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } undef, %"struct.WTF::KeyValuePair.1362"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %77, %"struct.WTF::KeyValuePair.1362"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIN3net12SourceStream10SourceTypeENS_9allocatorIS3_EEE7emplaceIJS3_EEENS_11__wrap_iterIPS3_EENS8_IPKS3_EEDpOT_(%"class.std::__1::vector.2327"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.3931", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2327", %"class.std::__1::vector.2327"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.2327", %"class.std::__1::vector.2327"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2327", %"class.std::__1::vector.2327"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !105
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !105
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !108, !noalias !105
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !108, !noalias !105
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !105
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !105
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !108, !noalias !105
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !108, !noalias !105
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !105
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !105
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !108, !noalias !105
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !108, !noalias !105
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !105
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !105
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !108, !noalias !105
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !108, !noalias !105
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !110

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !105
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !105
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !108, !noalias !105
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !108, !noalias !105
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !112

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #17
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !113

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.2327", %"class.std::__1::vector.2327"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.3931"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #17
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.2327"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.3931"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.2327"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #20
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.2332"** %165 to %"class.std::__1::__compressed_pair.2329"**
  store %"class.std::__1::__compressed_pair.2329"* %159, %"class.std::__1::__compressed_pair.2329"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.2332"** %165 to %"class.std::__1::__compressed_pair.2329"**
  store %"class.std::__1::__compressed_pair.2329"* %159, %"class.std::__1::__compressed_pair.2329"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #20
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIN3net12SourceStream10SourceTypeERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.3931"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #17
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !114

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.3931"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #18
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #17
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3net12SourceStream10SourceTypeERNS_9allocatorIS3_EEE12emplace_backIJS3_EEEvDpOT_(%"struct.std::__1::__split_buffer.3931"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.3931", %"struct.std::__1::__split_buffer.3931"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #17
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.3931"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #20
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !115
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !115
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !118, !noalias !115
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !118, !noalias !115
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !115
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !115
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !118, !noalias !115
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !118, !noalias !115
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !115
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !115
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !118, !noalias !115
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !118, !noalias !115
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !115
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !115
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !118, !noalias !115
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !118, !noalias !115
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !120

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !115
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !115
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !118, !noalias !115
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !118, !noalias !115
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !121

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !122

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !123

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #18
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink13XHRReplayDataC1EPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS_4KURLEbb(%"class.blink::XHRReplayData"*, %"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13XHRReplayDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13XHRReplayDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13XHRReplayDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #1 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #17
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i8* %21, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.44, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #17
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13XHRReplayDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink13XHRReplayDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 144
  %4 = bitcast i8* %3 to %"class.blink::HTTPHeaderMap"*
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %4) #17
  %5 = getelementptr inbounds i8, i8* %0, i64 24
  %6 = bitcast i8* %5 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %6) #17
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to %"class.WTF::StringImpl"**
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #17
  br label %24

24:                                               ; preds = %1, %20, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13XHRReplayDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.1224"*, %"class.blink::Member.1226"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.1226"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #17
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !4

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #17
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #17
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.1226"*
  %47 = tail call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1224"* %0, %"class.blink::Member.1226"* %46, i32 %43, %"class.blink::Member.1226"* null) #17
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1224"*, i32, %"class.blink::Member.1226"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #17
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #17
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0)) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %31, align 8
  %33 = icmp eq %"class.blink::Member.1226"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.1226"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #17
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #17
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.1226"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.1226"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.1226"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.1226"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.1226"* %61, %"class.blink::Member.1226"* %55
  %63 = bitcast %"class.blink::Member.1226"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.1226"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.1226"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.1224"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #17
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.1226"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1224"* %0, %"class.blink::Member.1226"* %42, i32 %1, %"class.blink::Member.1226"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.1226"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.1226"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.1226"* %87, %"class.blink::Member.1226"* %82
  %89 = bitcast %"class.blink::Member.1226"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.1226"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.1226"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.1226"* %99, %"class.blink::Member.1226"* %88
  %101 = bitcast %"class.blink::Member.1226"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.1226"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.1226"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.1226"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1224"*, %"class.blink::Member.1226"*, i32, %"class.blink::Member.1226"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.1226"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.1226"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.1226"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #17
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.1224"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.1226"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #17
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.1226"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.1226"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #17
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.1226"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.1226"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.1226"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.1226"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.1226"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %70, align 8
  %72 = icmp eq %"class.blink::XMLHttpRequest"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::XMLHttpRequest"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.1226"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.1226"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.1226"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.1226"* %93, null
  %95 = ptrtoint %"class.blink::Member.1226"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::XMLHttpRequest"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::XMLHttpRequest"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::XMLHttpRequest"* %99, inttoptr (i64 -1 to %"class.blink::XMLHttpRequest"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.1226"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %113, align 8
  %115 = icmp eq %"class.blink::XMLHttpRequest"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.1226"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.1226"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.1226"* %118, %"class.blink::Member.1226"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.1226"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.1226"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.47, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([366 x i8], [366 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_14XMLHttpRequestEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #4

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #17
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %13
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #17
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !4

44:                                               ; preds = %37
  tail call void @llvm.trap() #17
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #17
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #17
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %2, i8* %14) #17
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #17
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #17
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #17
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %39
  call void @llvm.trap() #17
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #17
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #17
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %75
  call void @llvm.trap() #17
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #17
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #17
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.3449"* %8) #17
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.3449"* %8) #17
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #17
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %26, i8* %27) #17
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #17
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #17
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #17
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #17
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #17
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3942", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.3942"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #17
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.3942"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #17
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %48) #17
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %49, i8* %1) #17
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %52) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.3449"* %6) #17
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %53, i8* %56) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.3942", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.3942"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #17
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #17
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.3942"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #17
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #17
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %48) #17
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3942", %"class.WTF::StringTypeAdapter.3942"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %49, i16* %1) #17
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter"* nonnull %4, i16* %52) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #17
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.3449"* %6) #17
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %53, i16* %56) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.3449"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.3449", %"class.WTF::StringAppend.3449"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter"* nonnull %4, i8* %21) #17
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #17
  ret i32 %23
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #17
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.37, i64 0, i64 0), i8* %11, i8* %12) #17
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.38, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #17
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #17
  ret i64 %20
}

declare void @_ZN5blink19InspectorAgentState9SerializeEiPNS_9WebVectorIhEE(i32, %"class.blink::WebVector.3050"*) local_unnamed_addr #4

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.3050"*) local_unnamed_addr #4

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.3050"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.3949", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %31
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3949"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3949"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.3751", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3949"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #17
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #17
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.3751"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #17
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #17
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.3751"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %67, i8* %30) #17
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.3752"* nonnull %68, i8* %71) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #17
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !4

87:                                               ; preds = %80
  call void @llvm.trap() #17
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #17
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #17
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3949"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #17
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.3751"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #17
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #17
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.3751"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.3751"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #17
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #17
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.3751"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %144, i16* %107) #17
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.3751", %"class.WTF::StringTypeAdapter.3751"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.3752"* nonnull %145, i16* %148) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #17
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #17
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !4

164:                                              ; preds = %157
  call void @llvm.trap() #17
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #17
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #17
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.3949"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #17
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !4

20:                                               ; preds = %11
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #17
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !4

40:                                               ; preds = %33
  tail call void @llvm.trap() #17
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #17
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #17
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.3949"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %31, i8* %32) #17
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #17
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #17
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #17
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #17
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %46, i8* %47) #17
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #17
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #17
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIN3WTF6StringEE5ClearERKS3_(%"class.blink::InspectorAgentState::MapField.1363"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.3949", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1365"* %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.1364", %"class.WTF::HashMap.1364"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 2, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.1368"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1365"* %6, %"struct.WTF::KeyValuePair.1368"* %8) #17
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = bitcast %"class.WTF::StringAppend.3949"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField.1363", %"class.blink::InspectorAgentState::MapField.1363"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #17
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %30
  tail call void @llvm.trap() #17
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.3050"* null) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #17
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

declare void @_ZN5blink19InspectorAgentState9SerializeERKN3WTF6StringEPNS_9WebVectorIhEE(%"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.3050"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1365"*, %"struct.WTF::KeyValuePair.1368"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %18, %15, %2
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #17
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = bitcast %"struct.WTF::KeyValuePair.1368"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, 1
  %41 = and i32 %40, 2147483647
  %42 = and i32 %39, -2147483648
  %43 = or i32 %41, %42
  store i32 %43, i32* %38, align 8
  %44 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  store i32 %46, i32* %44, align 4
  %47 = mul i32 %46, 6
  %48 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %47, %49
  %51 = icmp ugt i32 %49, 8
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %60

53:                                               ; preds = %36
  %54 = lshr i32 %49, 1
  %55 = zext i32 %54 to i64
  %56 = shl nuw nsw i64 %55, 4
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 0, i64 %56, i1 false) #17
  %58 = bitcast i8* %57 to %"struct.WTF::KeyValuePair.1368"*
  %59 = tail call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* %58, i32 %54, %"struct.WTF::KeyValuePair.1368"* null) #17
  br label %60

60:                                               ; preds = %53, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1365"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1368"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1368"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1368"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1368"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1368"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1368"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } undef, %"struct.WTF::KeyValuePair.1368"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %77, %"struct.WTF::KeyValuePair.1368"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1368"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.1365"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1368"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* null)
  %9 = load %"struct.WTF::KeyValuePair.1368"*, %"struct.WTF::KeyValuePair.1368"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1368"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1368"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1368"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1368"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %91, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1368"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1368"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1368"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1368"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1368"* dereferenceable(16) %79, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %80 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::HashTable.1365", %"class.WTF::HashTable.1365"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, %82
  %86 = shl i32 %85, 1
  %87 = load i32, i32* %12, align 8
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = tail call %"struct.WTF::KeyValuePair.1368"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1365"* %0, %"struct.WTF::KeyValuePair.1368"* %79)
  br label %91

91:                                               ; preds = %54, %78, %89
  %92 = phi i8 [ 1, %78 ], [ 1, %89 ], [ 0, %54 ]
  %93 = phi %"struct.WTF::KeyValuePair.1368"* [ %79, %78 ], [ %90, %89 ], [ %47, %54 ]
  %94 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } undef, %"struct.WTF::KeyValuePair.1368"* %93, 0
  %95 = insertvalue { %"struct.WTF::KeyValuePair.1368"*, i8 } %94, i8 %92, 1
  ret { %"struct.WTF::KeyValuePair.1368"*, i8 } %95
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEES4_EENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.1368"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #17
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #17
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.1368"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #17
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1368", %"struct.WTF::KeyValuePair.1368"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #17
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !4

62:                                               ; preds = %53
  tail call void @llvm.trap() #17
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::String"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %44, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #17
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKN3WTF6StringES6_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS7_14default_deleteISD_EEEE13scoped_refptrINS3_12SharedBufferEEEJS4_S4_SG_EEEFvSJ_EE7RunOnceEPNS0_13BindStateBaseEOSJ_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr.1323* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.WTF::String"*
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to %"class.WTF::String"*
  %9 = load void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)*, void (%"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.WTF::SharedBuffer"*)** %4, align 8
  %10 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %11 = bitcast void ()** %10 to %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"**
  %12 = load %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"** %11, align 8
  store %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* null, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"** %11, align 8
  %13 = getelementptr inbounds %class.scoped_refptr.1323, %class.scoped_refptr.1323* %1, i64 0, i32 0
  %14 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %13, align 8
  store %"class.WTF::SharedBuffer"* null, %"class.WTF::SharedBuffer"** %13, align 8
  tail call void %9(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %8, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %12, %"class.WTF::SharedBuffer"* %14) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKN3WTF6StringES5_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS6_14default_deleteISC_EEEE13scoped_refptrINS2_12SharedBufferEEEJS3_S3_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %51, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"**
  %6 = load %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"** %5, align 8
  store %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* null, %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* %6 to void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)***
  %10 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)**, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)*, void (%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::Network::Backend::GetResponseBodyCallback"* nonnull %6) #17
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #17
  br label %31

31:                                               ; preds = %30, %27, %13
  %32 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %33 = bitcast void ()** %32 to %"class.WTF::StringImpl"**
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #17
  br label %49

49:                                               ; preds = %31, %45, %48
  %50 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %50) #18
  br label %51

51:                                               ; preds = %49, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState8MapFieldIbE5ClearERKN3WTF6StringE(%"class.blink::InspectorAgentState::MapField"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.3949", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1359"* %6, %"class.WTF::String"* dereferenceable(8) %1) #17
  %8 = extractvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.1358", %"class.WTF::HashMap.1358"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.1362"* %8, %14
  br i1 %15, label %98, label %16

16:                                               ; preds = %2
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1359"* %6, %"struct.WTF::KeyValuePair.1362"* %8) #17
  %17 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 2
  %18 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %17, align 8
  %19 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #17
  %20 = bitcast %"class.WTF::StringAppend.3949"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #17
  %21 = getelementptr inbounds %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField"* %0, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #17
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !4

39:                                               ; preds = %30
  tail call void @llvm.trap() #17
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %16, %25, %40
  %43 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::StringImpl"* %23)
  %44 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 0
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::StringAppend.3949", %"class.WTF::StringAppend.3949"* %4, i64 0, i32 1, i32 0, i32 0
  %47 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %43, 1
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %46, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.3949"* nonnull %4)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::WebVector.3050"* null) #17
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #17
  br label %65

65:                                               ; preds = %42, %61, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #17
  br label %81

81:                                               ; preds = %80, %77, %65
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #17
  br label %97

97:                                               ; preds = %81, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #17
  br label %98

98:                                               ; preds = %2, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE5eraseEPKS3_(%"class.WTF::HashTable.1359"*, %"struct.WTF::KeyValuePair.1362"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.1362"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEbEEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #17
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.1362"*
  %42 = tail call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSD_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* %41, i32 %37, %"struct.WTF::KeyValuePair.1362"* null) #17
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1359"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1362"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1362"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1362"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1362"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1362"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1362"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } undef, %"struct.WTF::KeyValuePair.1362"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %77, %"struct.WTF::KeyValuePair.1362"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1362"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERKS1_RbEENS_18HashTableAddResultISC_S3_EEOT0_OT1_(%"class.WTF::HashTable.1359"*, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1362"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* null)
  %9 = load %"struct.WTF::KeyValuePair.1362"*, %"struct.WTF::KeyValuePair.1362"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1362"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1362"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1362"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1362"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %132, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1362"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1362"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1362"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1362"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #17
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !4

96:                                               ; preds = %87
  tail call void @llvm.trap() #17
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.1362"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #17
  br label %118

118:                                              ; preds = %99, %114, %117
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.1362", %"struct.WTF::KeyValuePair.1362"* %79, i64 0, i32 1
  %120 = load i8, i8* %2, align 1, !range !2
  store i8 %120, i8* %119, align 1
  %121 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = add i32 %122, 1
  store i32 %123, i32* %121, align 4
  %124 = getelementptr inbounds %"class.WTF::HashTable.1359", %"class.WTF::HashTable.1359"* %0, i64 0, i32 3
  %125 = load i32, i32* %124, align 8
  %126 = add i32 %125, %123
  %127 = shl i32 %126, 1
  %128 = load i32, i32* %12, align 8
  %129 = icmp ult i32 %127, %128
  br i1 %129, label %132, label %130

130:                                              ; preds = %118
  %131 = tail call %"struct.WTF::KeyValuePair.1362"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_bEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENS7_IbEEEES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.1359"* %0, %"struct.WTF::KeyValuePair.1362"* %79)
  br label %132

132:                                              ; preds = %54, %118, %130
  %133 = phi i8 [ 1, %118 ], [ 1, %130 ], [ 0, %54 ]
  %134 = phi %"struct.WTF::KeyValuePair.1362"* [ %79, %118 ], [ %131, %130 ], [ %47, %54 ]
  %135 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } undef, %"struct.WTF::KeyValuePair.1362"* %134, 0
  %136 = insertvalue { %"struct.WTF::KeyValuePair.1362"*, i8 } %135, i8 %133, 1
  ret { %"struct.WTF::KeyValuePair.1362"*, i8 } %136
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.1226"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.1224"*, %"class.blink::XMLHttpRequest"** dereferenceable(8), %"class.blink::XMLHttpRequest"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %4, align 8
  %6 = icmp eq %"class.blink::Member.1226"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1224"* %0, %"class.blink::Member.1226"* null)
  %9 = load %"class.blink::Member.1226"*, %"class.blink::Member.1226"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.1226"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::XMLHttpRequest"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %40, align 8
  %42 = icmp eq %"class.blink::XMLHttpRequest"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::XMLHttpRequest"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::XMLHttpRequest"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.1226"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.1226"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::XMLHttpRequest"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::XMLHttpRequest"* %59, inttoptr (i64 -1 to %"class.blink::XMLHttpRequest"*)
  %67 = select i1 %66, %"class.blink::Member.1226"* %60, %"class.blink::Member.1226"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.1226", %"class.blink::Member.1226"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %73, align 8
  %75 = icmp eq %"class.blink::XMLHttpRequest"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.1226"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.1226"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #17
  %80 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.1226"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %2, align 8
  %89 = ptrtoint %"class.blink::XMLHttpRequest"* %88 to i64
  %90 = bitcast %"class.blink::Member.1226"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::XMLHttpRequest"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #17
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.1226"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #17
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1224"* %0, %"class.blink::Member.1226"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.1226"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.1226"*, i8 } undef, %"class.blink::Member.1226"* %117, 0
  %119 = insertvalue { %"class.blink::Member.1226"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.1226"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.1224"*, %"class.blink::Member.1226"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1224", %"class.WTF::HashTable.1224"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #17
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %23, i8* %24) #17
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #17
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #17
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #17
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.1224"* %0, i32 %35, %"class.blink::Member.1226"* %1, i8* nonnull dereferenceable(1) %4) #17
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_14XMLHttpRequestEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #17
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.1226"*
  %44 = call %"class.blink::Member.1226"* @_ZN3WTF9HashTableIN5blink6MemberINS1_14XMLHttpRequestEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.1224"* %0, %"class.blink::Member.1226"* %43, i32 %40, %"class.blink::Member.1226"* %1) #17
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.1226"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.1226"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_RS1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2498"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2498"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #17
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !4

97:                                               ; preds = %88
  tail call void @llvm.trap() #17
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #17
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2498"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2498"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2498"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #17
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2498"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2498", align 8
  %6 = bitcast %"class.WTF::HashTable.2498"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2498"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2498"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2498"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.2498"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2498"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #17
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2498"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #17
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #17
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2498"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERA5_KcSD_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2498"*, [5 x i8]* dereferenceable(5), [5 x i8]* dereferenceable(5)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2498"* %0, %"class.WTF::String"* null)
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::String"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %20 = icmp eq [5 x i8]* %1, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #19
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %19, i64 %24) #17
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %26) #17
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi %"class.WTF::StringImpl"* [ %33, %31 ], [ %26, %23 ]
  %36 = phi i32 [ %32, %31 ], [ %29, %23 ]
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #17
  br label %51

51:                                               ; preds = %34, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %52 = and i32 %36, %16
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %53
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %127, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = xor i32 %36, -1
  %62 = lshr i32 %36, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %58, %107
  %75 = phi %"class.WTF::StringImpl"** [ %55, %58 ], [ %114, %107 ]
  %76 = phi %"class.WTF::String"* [ %54, %58 ], [ %113, %107 ]
  %77 = phi %"class.WTF::String"* [ null, %58 ], [ %108, %107 ]
  %78 = phi i64 [ %53, %58 ], [ %112, %107 ]
  %79 = phi i64 [ 0, %58 ], [ %110, %107 ]
  %80 = bitcast %"class.WTF::String"* %76 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, inttoptr (i64 -1 to i8*)
  br i1 %82, label %107, label %83

83:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #17
  br i1 %20, label %86, label %84

84:                                               ; preds = %83
  %85 = call i64 @strlen(i8* nonnull %19) #19
  br label %86

86:                                               ; preds = %84, %83
  %87 = phi i64 [ %85, %84 ], [ 0, %83 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %19, i64 %87) #17
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %90 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"* %89) #17
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #17
  br label %106

106:                                              ; preds = %86, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #17
  br i1 %90, label %140, label %107

107:                                              ; preds = %74, %106
  %108 = phi %"class.WTF::String"* [ %77, %106 ], [ %76, %74 ]
  %109 = icmp eq i64 %79, 0
  %110 = select i1 %109, i64 %73, i64 %79
  %111 = add i64 %110, %78
  %112 = and i64 %111, %17
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %112
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %117, label %74

117:                                              ; preds = %107
  %118 = icmp eq %"class.WTF::String"* %108, null
  br i1 %118, label %127, label %119

119:                                              ; preds = %117
  %120 = bitcast %"class.WTF::String"* %108 to i64*
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, 2147483647
  %124 = and i32 %123, 2147483647
  %125 = and i32 %122, -2147483648
  %126 = or i32 %124, %125
  store i32 %126, i32* %121, align 8
  br label %127

127:                                              ; preds = %51, %117, %119
  %128 = phi %"class.WTF::String"* [ %108, %119 ], [ %113, %117 ], [ %54, %51 ]
  call void @_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RA5_KcSA_EEvRT_OT0_OT1_(%"class.WTF::String"* dereferenceable(8) %128, [5 x i8]* dereferenceable(5) %1, [5 x i8]* dereferenceable(5) %2)
  %129 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.WTF::HashTable.2498", %"class.WTF::HashTable.2498"* %0, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, %131
  %135 = shl i32 %134, 1
  %136 = load i32, i32* %14, align 8
  %137 = icmp ult i32 %135, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %127
  %139 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2498"* %0, %"class.WTF::String"* %128)
  br label %140

140:                                              ; preds = %106, %127, %138
  %141 = phi i8 [ 1, %127 ], [ 1, %138 ], [ 0, %106 ]
  %142 = phi %"class.WTF::String"* [ %128, %127 ], [ %139, %138 ], [ %76, %106 ]
  %143 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %142, 0
  %144 = insertvalue { %"class.WTF::String"*, i8 } %143, i8 %141, 1
  ret { %"class.WTF::String"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF22IdentityHashTranslatorINS_10StringHashENS_10HashTraitsINS_6StringEEENS_18PartitionAllocatorEE9TranslateIS3_RA5_KcSA_EEvRT_OT0_OT1_(%"class.WTF::String"* dereferenceable(8), [5 x i8]* dereferenceable(5), [5 x i8]* dereferenceable(5)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 0
  %7 = icmp eq [5 x i8]* %2, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #19
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %6, i64 %11) #17
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"class.WTF::String"* %0 to i64*
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #17
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #17
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.2044"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2044"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2044"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2044", %"class.std::__1::vector.2044"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !124

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #17
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #18
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1206"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES1_SB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_(%"class.WTF::HashTable.1203"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.1207"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.1206"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.1203"* %0, %"struct.WTF::KeyValuePair.1206"* null)
  %9 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.1206"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #17
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.1206"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.1206"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.1206"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #17
  br i1 %57, label %125, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.1206"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.1206"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.1206"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #17
  %72 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.1206"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.1206"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #17
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %79, i64 0, i32 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %2, i64 0, i32 0, i32 0, i32 0
  %102 = bitcast %"class.std::__1::unique_ptr.1207"* %2 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %101, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %100, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %104, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.1207"* %100 to i64*
  store i64 %103, i64* %106, align 8
  %107 = icmp eq %"class.blink::protocol::Network::Initiator"* %105, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %99
  %109 = bitcast %"class.blink::protocol::Network::Initiator"* %105 to void (%"class.blink::protocol::Network::Initiator"*)***
  %110 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %110, i64 2
  %112 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %111, align 8
  tail call void %112(%"class.blink::protocol::Network::Initiator"* nonnull %105) #17
  br label %113

113:                                              ; preds = %99, %108
  %114 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.1203"* %0, %"struct.WTF::KeyValuePair.1206"* %79)
  br label %125

125:                                              ; preds = %54, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %54 ]
  %127 = phi %"struct.WTF::KeyValuePair.1206"* [ %79, %113 ], [ %124, %123 ], [ %47, %54 ]
  %128 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } undef, %"struct.WTF::KeyValuePair.1206"* %127, 0
  %129 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } %128, i8 %126, 1
  ret { %"struct.WTF::KeyValuePair.1206"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.1203"*, %"struct.WTF::KeyValuePair.1206"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #17
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #17
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %22, i8* %23) #17
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #17
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #17
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEEEEPKcv, i64 0, i64 0)) #17
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #17
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.1206"*
  %37 = call %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable.1203"* %0, %"struct.WTF::KeyValuePair.1206"* %36, i32 %32, %"struct.WTF::KeyValuePair.1206"* %1) #17
  ret %"struct.WTF::KeyValuePair.1206"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable.1203"*, %"struct.WTF::KeyValuePair.1206"*, i32, %"struct.WTF::KeyValuePair.1206"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1203", align 8
  %6 = bitcast %"class.WTF::HashTable.1203"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #17
  %7 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1203"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1206"* %1, %"struct.WTF::KeyValuePair.1206"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1203"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1203"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %22 to i64
  br label %84

24:                                               ; preds = %139
  %25 = bitcast %"class.WTF::HashTable.1203"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1203"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %140, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1206"* [ null, %16 ], [ %143, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %141, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1206"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %80, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %78, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %75, %39
  %42 = phi i64 [ 0, %39 ], [ %76, %75 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.1206"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %75, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %50 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %49, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %49, align 8
  %51 = icmp eq %"class.blink::protocol::Network::Initiator"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::protocol::Network::Initiator"* %50 to void (%"class.blink::protocol::Network::Initiator"*)***
  %54 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %54, i64 2
  %56 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %55, align 8
  call void %56(%"class.blink::protocol::Network::Initiator"* nonnull %50) #17
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %43, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  br label %59

59:                                               ; preds = %52, %47
  %60 = phi %"class.WTF::StringImpl"* [ %58, %52 ], [ %48, %47 ]
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #17
  br label %75

75:                                               ; preds = %74, %71, %59, %41
  %76 = add nuw nsw i64 %42, 1
  %77 = icmp eq i64 %76, %40
  br i1 %77, label %78, label %41

78:                                               ; preds = %75, %37
  %79 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #17
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %28, %78
  %81 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, -2147483648
  store i32 %83, i32* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #17
  ret %"struct.WTF::KeyValuePair.1206"* %33

84:                                               ; preds = %21, %139
  %85 = phi i64 [ %140, %139 ], [ %23, %21 ]
  %86 = phi i32 [ %141, %139 ], [ %13, %21 ]
  %87 = phi %"struct.WTF::KeyValuePair.1206"* [ %142, %139 ], [ %22, %21 ]
  %88 = phi %"struct.WTF::KeyValuePair.1206"* [ %143, %139 ], [ null, %21 ]
  %89 = phi i32 [ %144, %139 ], [ 0, %21 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %87, i64 %90
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"struct.WTF::KeyValuePair.1206"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %95 [
    i64 -1, label %139
    i64 0, label %139
  ]

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %91, i64 0, i32 0
  %97 = call { %"struct.WTF::KeyValuePair.1206"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1203"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %96) #17
  %98 = extractvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } %97, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %99, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %99, align 8
  %101 = icmp eq %"class.blink::protocol::Network::Initiator"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %95
  %103 = bitcast %"class.blink::protocol::Network::Initiator"* %100 to void (%"class.blink::protocol::Network::Initiator"*)***
  %104 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %104, i64 2
  %106 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %105, align 8
  call void %106(%"class.blink::protocol::Network::Initiator"* nonnull %100) #17
  br label %107

107:                                              ; preds = %102, %95
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %98, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #17
  br label %124

124:                                              ; preds = %107, %120, %123
  %125 = load i64, i64* %93, align 8
  %126 = bitcast %"struct.WTF::KeyValuePair.1206"* %98 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %98, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %87, i64 %90, i32 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.1207", %"class.std::__1::unique_ptr.1207"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.1207"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.1207"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %15, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %133, i64 %90
  %135 = icmp eq %"struct.WTF::KeyValuePair.1206"* %134, %3
  %136 = select i1 %135, %"struct.WTF::KeyValuePair.1206"* %98, %"struct.WTF::KeyValuePair.1206"* %88
  %137 = load i32, i32* %12, align 8
  %138 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %133 to i64
  br label %139

139:                                              ; preds = %84, %84, %124
  %140 = phi i64 [ %85, %84 ], [ %138, %124 ], [ %85, %84 ]
  %141 = phi i32 [ %86, %84 ], [ %137, %124 ], [ %86, %84 ]
  %142 = phi %"struct.WTF::KeyValuePair.1206"* [ %87, %84 ], [ %133, %124 ], [ %87, %84 ]
  %143 = phi %"struct.WTF::KeyValuePair.1206"* [ %88, %84 ], [ %136, %124 ], [ %88, %84 ]
  %144 = add i32 %89, 1
  %145 = icmp eq i32 %144, %141
  br i1 %145, label %24, label %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1206"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.1203"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #17
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.1206"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.1206"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.1206"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.1206"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.1206"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #17
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.1206"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.1206"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.1206"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } undef, %"struct.WTF::KeyValuePair.1206"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.1206"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable.1203"*, %"struct.WTF::KeyValuePair.1206"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Network::Initiator"*, %"class.blink::protocol::Network::Initiator"** %3, align 8
  store %"class.blink::protocol::Network::Initiator"* null, %"class.blink::protocol::Network::Initiator"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Network::Initiator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::protocol::Network::Initiator"* %4 to void (%"class.blink::protocol::Network::Initiator"*)***
  %8 = load void (%"class.blink::protocol::Network::Initiator"*)**, void (%"class.blink::protocol::Network::Initiator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %8, i64 2
  %10 = load void (%"class.blink::protocol::Network::Initiator"*)*, void (%"class.blink::protocol::Network::Initiator"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::Network::Initiator"* nonnull %4) #17
  br label %11

11:                                               ; preds = %6, %2
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #17
  br label %28

28:                                               ; preds = %11, %24, %27
  %29 = bitcast %"struct.WTF::KeyValuePair.1206"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  %33 = and i32 %32, 2147483647
  %34 = and i32 %31, -2147483648
  %35 = or i32 %33, %34
  store i32 %35, i32* %30, align 8
  %36 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, -1
  store i32 %38, i32* %36, align 4
  %39 = mul i32 %38, 6
  %40 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ult i32 %39, %41
  %43 = icmp ugt i32 %41, 8
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %28
  %46 = lshr i32 %41, 1
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  %49 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %48, i8* getelementptr inbounds ([202 x i8], [202 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEEEEPKcv, i64 0, i64 0)) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 %48, i1 false) #17
  %50 = bitcast i8* %49 to %"struct.WTF::KeyValuePair.1206"*
  %51 = tail call %"struct.WTF::KeyValuePair.1206"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable.1203"* %0, %"struct.WTF::KeyValuePair.1206"* %50, i32 %46, %"struct.WTF::KeyValuePair.1206"* null) #17
  br label %52

52:                                               ; preds = %45, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NSt3__110unique_ptrIN5blink8protocol7Network9InitiatorENS3_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1203"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1206"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1206"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1206"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1206"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1203", %"class.WTF::HashTable.1203"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1206", %"struct.WTF::KeyValuePair.1206"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1206"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1206"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } undef, %"struct.WTF::KeyValuePair.1206"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } %77, %"struct.WTF::KeyValuePair.1206"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1206"*, %"struct.WTF::KeyValuePair.1206"* } %78
}

declare void @_ZN5blink20NetworkResourcesDataC1Emm(%"class.blink::NetworkResourcesData"*, i64, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20NetworkResourcesDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #17
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #17
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20NetworkResourcesDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #17
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20NetworkResourcesDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20NetworkResourcesDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NetworkResourcesData"*
  tail call void @_ZN5blink20NetworkResourcesDataD1Ev(%"class.blink::NetworkResourcesData"* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20NetworkResourcesDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink20NetworkResourcesDataD1Ev(%"class.blink::NetworkResourcesData"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.3050"* null) #17
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #17
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #17
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiED0Ev(%"class.blink::InspectorAgentState::SimpleField.1369"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #17
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.1369"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.1369"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i32 %3, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.3050"* null) #17
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIiE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.1369"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #17
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #17
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %18
  tail call void @llvm.trap() #17
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.1369", %"class.blink::InspectorAgentState::SimpleField.1369"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8* %25, i64 %28, i32* %29) #17
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPi(i8*, i64, i32*) local_unnamed_addr #4

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN5blink8protocol7Network10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Network::Backend"*) local_unnamed_addr #4

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind readonly }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink12_GLOBAL__N_118BuildBlockedReasonERKNS_13ResourceErrorE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink12_GLOBAL__N_118BuildBlockedReasonERKNS_13ResourceErrorE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink13ResourceError15CorsErrorStatusEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink13ResourceError15CorsErrorStatusEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!28 = distinct !{!28, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!34 = distinct !{!34, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.disable"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!39 = distinct !{!39, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE: argument 0"}
!42 = distinct !{!42, !"_ZN5blink12_GLOBAL__N_118UrlWithoutFragmentERKNS_4KURLE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv: argument 0"}
!45 = distinct !{!45, !"_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv"}
!46 = !{!47, !49, !51}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvRKN3WTF6StringES6_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS7_14default_deleteISD_EEEE13scoped_refptrINS3_12SharedBufferEEEJS4_S4_SG_EEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvRKN3WTF6StringES6_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS7_14default_deleteISD_EEEE13scoped_refptrINS3_12SharedBufferEEEJS4_S4_SG_EEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceIRFvRKN3WTF6StringES4_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISB_EEEE13scoped_refptrINS1_12SharedBufferEEEJS2_S2_SE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceIRFvRKN3WTF6StringES4_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS5_14default_deleteISB_EEEE13scoped_refptrINS1_12SharedBufferEEEJS2_S2_SE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
!51 = distinct !{!51, !52, !"_ZN3WTF4BindIRFvRKNS_6StringES3_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS4_14default_deleteISA_EEEE13scoped_refptrINS_12SharedBufferEEEJS1_S1_SD_EFvSG_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF4BindIRFvRKNS_6StringES3_NSt3__110unique_ptrIN5blink8protocol7Network7Backend23GetResponseBodyCallbackENS4_14default_deleteISA_EEEE13scoped_refptrINS_12SharedBufferEEEJS1_S1_SD_EFvSG_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN5blink21InspectorNetworkAgent20canClearBrowserCacheEPb: argument 0"}
!55 = distinct !{!55, !"_ZN5blink21InspectorNetworkAgent20canClearBrowserCacheEPb"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb: argument 0"}
!58 = distinct !{!58, !"_ZN5blink21InspectorNetworkAgent22canClearBrowserCookiesEPb"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN5blink12_GLOBAL__N_128AcceptedEncodingFromProtocolERKN3WTF6StringE: argument 0"}
!61 = distinct !{!61, !"_ZN5blink12_GLOBAL__N_128AcceptedEncodingFromProtocolERKN3WTF6StringE"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv: argument 0"}
!67 = distinct !{!67, !"_ZN5blink21InspectorNetworkAgent30clearAcceptedEncodingsOverrideEv"}
!68 = !{!69, !71, !73}
!69 = distinct !{!69, !70, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvbdddN5blink17WebConnectionTypeEEJbdddS4_EEEDcOT0_DpOT1_: argument 0"}
!70 = distinct !{!70, !"_ZN4base8internal8BindImplINS_12OnceCallbackERFvbdddN5blink17WebConnectionTypeEEJbdddS4_EEEDcOT0_DpOT1_"}
!71 = distinct !{!71, !72, !"_ZN4base8BindOnceIRFvbdddN5blink17WebConnectionTypeEEJbdddS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8BindOnceIRFvbdddN5blink17WebConnectionTypeEEJbdddS2_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!73 = distinct !{!73, !74, !"_ZN3WTF19CrossThreadBindOnceIRFvbdddN5blink17WebConnectionTypeEEJRbRdS6_S6_RS2_EEEDaOT_DpOT0_: argument 0"}
!74 = distinct !{!74, !"_ZN3WTF19CrossThreadBindOnceIRFvbdddN5blink17WebConnectionTypeEEJRbRdS6_S6_RS2_EEEDaOT_DpOT0_"}
!75 = !{!73}
!76 = !{!77, !73}
!77 = distinct !{!77, !78, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!78 = distinct !{!78, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!81 = distinct !{!81, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZN5blink21InspectorNetworkAgent22setBypassServiceWorkerEb: argument 0"}
!84 = distinct !{!84, !"_ZN5blink21InspectorNetworkAgent22setBypassServiceWorkerEb"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii: argument 0"}
!87 = distinct !{!87, !"_ZN5blink21InspectorNetworkAgent24setDataSizeLimitsForTestEii"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN5blink20NetworkResourcesData12ResourceData11CertificateEv: argument 0"}
!90 = distinct !{!90, !"_ZN5blink20NetworkResourcesData12ResourceData11CertificateEv"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN5blink20NetworkResourcesData12ResourceData11CertificateEv: argument 0"}
!93 = distinct !{!93, !"_ZN5blink20NetworkResourcesData12ResourceData11CertificateEv"}
!94 = !{!95, !97, !99}
!95 = distinct !{!95, !96, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS6_12SharedBufferEEEJNS6_18RetainedRefWrapperIS5_EENS6_17UnretainedWrapperIS7_EEEEEDcOT0_DpOT1_: argument 0"}
!96 = distinct !{!96, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS6_12SharedBufferEEEJNS6_18RetainedRefWrapperIS5_EENS6_17UnretainedWrapperIS7_EEEEEDcOT0_DpOT1_"}
!97 = distinct !{!97, !98, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS4_12SharedBufferEEEJNS4_18RetainedRefWrapperIS3_EENS4_17UnretainedWrapperIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!98 = distinct !{!98, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPN3WTF6StringE13scoped_refptrINS4_12SharedBufferEEEJNS4_18RetainedRefWrapperIS3_EENS4_17UnretainedWrapperIS5_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!99 = distinct !{!99, !100, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPNS_6StringE13scoped_refptrINS_12SharedBufferEEEJNS_18RetainedRefWrapperIS3_EENS_17UnretainedWrapperIS4_EEEFvS8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!100 = distinct !{!100, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_123InspectorPostBodyParserEFvPNS_6StringE13scoped_refptrINS_12SharedBufferEEEJNS_18RetainedRefWrapperIS3_EENS_17UnretainedWrapperIS4_EEEFvS8_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!101 = distinct !{!101, !36}
!102 = distinct !{!102, !36}
!103 = distinct !{!103, !36}
!104 = !{i32 24, i32 33}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !111}
!111 = !{!"llvm.loop.isvectorized", i32 1}
!112 = distinct !{!112, !36}
!113 = distinct !{!113, !111}
!114 = distinct !{!114, !36}
!115 = !{!116}
!116 = distinct !{!116, !117}
!117 = distinct !{!117, !"LVerDomain"}
!118 = !{!119}
!119 = distinct !{!119, !117}
!120 = distinct !{!120, !111}
!121 = distinct !{!121, !36}
!122 = distinct !{!122, !36}
!123 = distinct !{!123, !111}
!124 = distinct !{!124, !36}
