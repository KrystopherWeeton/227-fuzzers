; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_box.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_box.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_Box = type { %class.CXFA_Node }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.2", %"class.pdfium::span.4", i32, %"class.fxcrt::UnownedPtr.6", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.1", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.8", %"class.cppgc::internal::BasicMember.9" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1" }
%"class.pdfium::span.2" = type { %"class.fxcrt::UnownedPtr.3", i64 }
%"class.fxcrt::UnownedPtr.3" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.4" = type { %"class.fxcrt::UnownedPtr.5", i64 }
%"class.fxcrt::UnownedPtr.5" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.6" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.1"* }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.9" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Document = type opaque
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.11", %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.13", %"class.std::__1::unique_ptr", %"class.std::__1::map", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.11" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%class.CXFA_Edge = type { %class.CXFA_Stroke }
%class.CXFA_Stroke = type { %class.CXFA_Node }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %class.CXFA_Stroke**, %class.CXFA_Stroke**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CXFA_Stroke** }
%class.CXFA_Fill = type { %class.CXFA_Node }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.43", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.53" }
%"class.fxcrt::UnownedPtr.43" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { float*, float*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { float* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.51", %"class.fxcrt::UnownedPtr.52" }
%"class.fxcrt::UnownedPtr.51" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type { i32, i32, i32 }
%"class.fxcrt::UnownedPtr.52" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type { i32, %class.CFX_PTemplate, %class.CFX_PTemplate, float, float, i8, i8, [256 x i32] }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::unique_ptr.55" = type opaque
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::unique_ptr.55"* }
%class.CFX_RectF = type { float, float, float, float }
%class.CXFA_Rectangle = type { %class.CXFA_Box }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.61" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.63" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.FX_PATHPOINT* }
%class.CFX_STemplate = type { float, float }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIP11CXFA_StrokeNS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZTV8CXFA_Box = hidden unnamed_addr constant { [7 x i8*], [5 x i8*], [4 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_Box*)* @_ZN8CXFA_BoxD2Ev to i8*), i8* bitcast (void (%class.CXFA_Box*)* @_ZN8CXFA_BoxD0Ev to i8*), i8* bitcast (void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)* @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (i16 (%class.CXFA_Node*)* @_ZNK9CXFA_Node16GetValueNodeTypeEv to i8*), i8* bitcast (i32 (%class.CXFA_Node*)* @_ZNK9CXFA_Node22GetDefaultFFWidgetTypeEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)* @_ZThn56_NK9CXFA_Node5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_Box*)* @_ZThn56_N8CXFA_BoxD1Ev to i8*), i8* bitcast (void (%class.CXFA_Box*)* @_ZThn56_N8CXFA_BoxD0Ev to i8*)], [4 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%class.CXFA_Box*)* @_ZThn64_N8CXFA_BoxD1Ev to i8*), i8* bitcast (void (%class.CXFA_Box*)* @_ZThn64_N8CXFA_BoxD0Ev to i8*)] }, align 8

@_ZN8CXFA_BoxC1EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object = hidden unnamed_addr alias void (%class.CXFA_Box*, %class.CXFA_Document*, i8, i32, i32, i16, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*), void (%class.CXFA_Box*, %class.CXFA_Document*, i8, i32, i32, i16, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*)* @_ZN8CXFA_BoxC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object
@_ZN8CXFA_BoxD1Ev = hidden unnamed_addr alias void (%class.CXFA_Box*), void (%class.CXFA_Box*)* @_ZN8CXFA_BoxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_BoxC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKN9CXFA_Node12PropertyDataEEENS6_IKNS7_13AttributeDataEEEP10CJX_Object(%class.CXFA_Box*, %class.CXFA_Document*, i8 zeroext, i32, i32, i16 signext, %"class.pdfium::span.2"* nocapture readonly, %"class.pdfium::span.4"* nocapture readonly, %class.CJX_Object*) unnamed_addr #0 align 2 {
  %10 = alloca %"class.pdfium::span.2", align 8
  %11 = alloca %"class.pdfium::span.4", align 8
  %12 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0
  %13 = bitcast %"class.pdfium::span.2"* %10 to i8*
  %14 = bitcast %"class.pdfium::span.2"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 16, i1 false)
  %15 = bitcast %"class.pdfium::span.4"* %11 to i8*
  %16 = bitcast %"class.pdfium::span.4"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %16, i64 16, i1 false)
  call void @_ZN9CXFA_NodeC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKNS_12PropertyDataEEENS6_IKNS_13AttributeDataEEEP10CJX_Object(%class.CXFA_Node* %12, %class.CXFA_Document* %1, i8 zeroext %2, i32 %3, i32 %4, i16 signext %5, %"class.pdfium::span.2"* nonnull %10, %"class.pdfium::span.4"* nonnull %11, %class.CJX_Object* %8) #10
  %17 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV8CXFA_Box, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast i32 (...)*** %18 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV8CXFA_Box, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*], [4 x i8*] }, { [7 x i8*], [5 x i8*], [4 x i8*] }* @_ZTV8CXFA_Box, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN9CXFA_NodeC2EP13CXFA_Document14XFA_PacketTypej14XFA_ObjectType11XFA_ElementN6pdfium4spanIKNS_12PropertyDataEEENS6_IKNS_13AttributeDataEEEP10CJX_Object(%class.CXFA_Node*, %class.CXFA_Document*, i8 zeroext, i32, i32, i16 signext, %"class.pdfium::span.2"*, %"class.pdfium::span.4"*, %class.CJX_Object*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_BoxD2Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N8CXFA_BoxD1Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 -1, i32 0, i32 10
  %3 = bitcast i8* %2 to %class.CXFA_Node*
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N8CXFA_BoxD1Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 -1, i32 0, i32 9
  %3 = bitcast %"class.fxcrt::UnownedPtr.6"* %2 to %class.CXFA_Node*
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_BoxD0Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N8CXFA_BoxD0Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 -1, i32 0, i32 10
  %3 = bitcast i8* %2 to %class.CXFA_Node*
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N8CXFA_BoxD0Ev(%class.CXFA_Box*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 -1, i32 0, i32 9
  %3 = bitcast %"class.fxcrt::UnownedPtr.6"* %2 to %class.CXFA_Node*
  tail call void @_ZN9CXFA_NodeD2Ev(%class.CXFA_Node* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN8CXFA_Box7GetHandEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call zeroext i16 @_ZNK10CJX_Object7GetEnumE13XFA_Attribute(%class.CJX_Object* %4, i16 signext 274) #10
  ret i16 %5
}

declare zeroext i16 @_ZNK10CJX_Object7GetEnumE13XFA_Attribute(%class.CJX_Object*, i16 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN8CXFA_Box11GetPresenceEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call i32 @_ZNK10CJX_Object7TryEnumE13XFA_Attributeb(%class.CJX_Object* %4, i16 signext 106, i1 zeroext true) #10
  %6 = trunc i32 %5 to i8
  %7 = lshr i32 %5, 16
  %8 = trunc i32 %7 to i16
  %9 = icmp eq i8 %6, 0
  %10 = select i1 %9, i16 39, i16 %8
  ret i16 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK10CJX_Object7TryEnumE13XFA_Attributeb(%class.CJX_Object*, i16 signext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8CXFA_Box10CountEdgesEv(%class.CXFA_Box*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0
  %3 = tail call i64 @_ZN9CXFA_Node13CountChildrenE11XFA_Elementb(%class.CXFA_Node* %2, i16 signext 102, i1 zeroext false) #10
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

declare i64 @_ZN9CXFA_Node13CountChildrenE11XFA_Elementb(%class.CXFA_Node*, i16 signext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Edge* @_ZN8CXFA_Box15GetEdgeIfExistsEi(%class.CXFA_Box* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %5 = bitcast %"class.cppgc::internal::BasicMember.0"* %4 to %class.CJX_Object**
  %6 = load %class.CJX_Object*, %class.CJX_Object** %5, align 8
  br i1 %3, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %6, i32 0, i16 signext 102) #10
  br label %12

9:                                                ; preds = %2
  %10 = tail call { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object* %6, i32 %1, i16 signext 102) #10
  %11 = extractvalue { %class.CXFA_Node*, i32 } %10, 0
  br label %12

12:                                               ; preds = %9, %7
  %13 = phi %class.CXFA_Node* [ %8, %7 ], [ %11, %9 ]
  %14 = bitcast %class.CXFA_Node* %13 to %class.CXFA_Edge*
  ret %class.CXFA_Edge* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box10GetStrokesEv(%"class.std::__1::vector.25"* noalias sret, %class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8CXFA_Box18GetStrokesInternalEb(%"class.std::__1::vector.25"* sret %0, %class.CXFA_Box* %1, i1 zeroext false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box18GetStrokesInternalEb(%"class.std::__1::vector.25"* noalias sret, %class.CXFA_Box* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.25"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  tail call void @_ZNSt3__16vectorIP11CXFA_StrokeNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.25"* %0, i64 8) #10
  %6 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %1, i64 0, i32 0, i32 0, i32 6
  %7 = bitcast %"class.cppgc::internal::BasicMember.0"* %6 to %class.CJX_Object**
  br label %8

8:                                                ; preds = %78, %3
  %9 = phi i64 [ 0, %3 ], [ %79, %78 ]
  %10 = phi i32 [ 0, %3 ], [ %80, %78 ]
  %11 = phi i32 [ 0, %3 ], [ %81, %78 ]
  %12 = icmp eq i32 %11, 0
  %13 = load %class.CJX_Object*, %class.CJX_Object** %7, align 8
  br i1 %12, label %35, label %14

14:                                               ; preds = %8
  %15 = tail call { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object* %13, i32 %11, i16 signext 148) #10
  %16 = extractvalue { %class.CXFA_Node*, i32 } %15, 0
  %17 = icmp eq %class.CXFA_Node* %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %14
  br i1 %2, label %29, label %19

19:                                               ; preds = %18
  %20 = add nsw i32 %11, -1
  %21 = icmp ult i32 %20, 2
  %22 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %4, align 8
  %23 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %22, i64 2
  %24 = select i1 %21, %class.CXFA_Stroke** %22, %class.CXFA_Stroke** %23
  %25 = bitcast %class.CXFA_Stroke** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %22, i64 %9
  %28 = bitcast %class.CXFA_Stroke** %27 to i64*
  store i64 %26, i64* %28, align 8
  br label %29

29:                                               ; preds = %19, %18
  %30 = trunc i64 %9 to i32
  br label %44

31:                                               ; preds = %14
  %32 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %4, align 8
  %33 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %32, i64 %9
  %34 = bitcast %class.CXFA_Stroke** %33 to %class.CXFA_Node**
  store %class.CXFA_Node* %16, %class.CXFA_Node** %34, align 8
  br label %44

35:                                               ; preds = %8
  %36 = tail call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %13, i32 0, i16 signext 148) #10
  %37 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %4, align 8
  %38 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %37, i64 %9
  %39 = bitcast %class.CXFA_Stroke** %38 to %class.CXFA_Node**
  store %class.CXFA_Node* %36, %class.CXFA_Node** %39, align 8
  %40 = load %class.CJX_Object*, %class.CJX_Object** %7, align 8
  %41 = tail call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %40, i32 0, i16 signext 102) #10
  %42 = trunc i64 %9 to i32
  %43 = or i32 %42, 1
  br label %52

44:                                               ; preds = %31, %29
  %45 = phi i32 [ %30, %29 ], [ %10, %31 ]
  %46 = load %class.CJX_Object*, %class.CJX_Object** %7, align 8
  %47 = or i32 %45, 1
  %48 = tail call { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object* %46, i32 %11, i16 signext 102) #10
  %49 = extractvalue { %class.CXFA_Node*, i32 } %48, 0
  %50 = icmp ne %class.CXFA_Node* %49, null
  %51 = or i1 %12, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %35, %44
  %53 = phi %class.CXFA_Node* [ %41, %35 ], [ %49, %44 ]
  %54 = phi i32 [ %43, %35 ], [ %47, %44 ]
  %55 = zext i32 %54 to i64
  %56 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %4, align 8
  %57 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %56, i64 %55
  %58 = bitcast %class.CXFA_Stroke** %57 to %class.CXFA_Node**
  store %class.CXFA_Node* %53, %class.CXFA_Node** %58, align 8
  br label %78

59:                                               ; preds = %44
  br i1 %2, label %78, label %60

60:                                               ; preds = %59
  %61 = add nsw i32 %11, -1
  %62 = icmp ult i32 %61, 2
  %63 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %4, align 8
  br i1 %62, label %64, label %71

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %63, i64 1
  %66 = bitcast %class.CXFA_Stroke** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i32 %47 to i64
  %69 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %63, i64 %68
  %70 = bitcast %class.CXFA_Stroke** %69 to i64*
  store i64 %67, i64* %70, align 8
  br label %78

71:                                               ; preds = %60
  %72 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %63, i64 3
  %73 = bitcast %class.CXFA_Stroke** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = zext i32 %47 to i64
  %76 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %63, i64 %75
  %77 = bitcast %class.CXFA_Stroke** %76 to i64*
  store i64 %74, i64* %77, align 8
  br label %78

78:                                               ; preds = %59, %71, %64, %52
  %79 = add nuw nsw i64 %9, 2
  %80 = add nuw nsw i32 %10, 2
  %81 = add nuw nsw i32 %11, 1
  %82 = icmp eq i32 %81, 4
  br i1 %82, label %83, label %8

83:                                               ; preds = %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8CXFA_Box10IsCircularEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call zeroext i1 @_ZNK10CJX_Object10GetBooleanE13XFA_Attribute(%class.CJX_Object* %4, i16 signext 192) #10
  ret i1 %5
}

declare zeroext i1 @_ZNK10CJX_Object10GetBooleanE13XFA_Attribute(%class.CJX_Object*, i16 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8CXFA_Box13GetStartAngleEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call i64 @_ZNK10CJX_Object10TryIntegerE13XFA_Attributeb(%class.CJX_Object* %4, i16 signext 116, i1 zeroext false) #10
  ret i64 %5
}

declare i64 @_ZNK10CJX_Object10TryIntegerE13XFA_Attributeb(%class.CJX_Object*, i16 signext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8CXFA_Box13GetSweepAngleEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call i64 @_ZNK10CJX_Object10TryIntegerE13XFA_Attributeb(%class.CJX_Object* %4, i16 signext 139, i1 zeroext false) #10
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Fill* @_ZN8CXFA_Box25GetOrCreateFillIfPossibleEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CJX_Object**
  %4 = load %class.CJX_Object*, %class.CJX_Object** %3, align 8
  %5 = tail call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %4, i32 0, i16 signext 245) #10
  %6 = bitcast %class.CXFA_Node* %5 to %class.CXFA_Fill*
  ret %class.CXFA_Fill* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8CXFA_Box10Get3DStyleEv(%class.CXFA_Box* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.25", align 8
  %3 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i16, i16* %3, align 4
  %5 = icmp eq i16 %4, 17
  br i1 %5, label %69, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::vector.25"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %2, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.25"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN8CXFA_Box18GetStrokesInternalEb(%"class.std::__1::vector.25"* nonnull sret %2, %class.CXFA_Box* %0, i1 zeroext true)
  %11 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %8, align 8
  %12 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %9, align 8
  %13 = icmp eq %class.CXFA_Stroke** %11, %12
  br i1 %13, label %58, label %14

14:                                               ; preds = %6
  %15 = ptrtoint %class.CXFA_Stroke** %11 to i64
  %16 = ptrtoint %class.CXFA_Stroke** %12 to i64
  %17 = bitcast %class.CXFA_Stroke** %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %15
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %24, label %41

22:                                               ; preds = %24
  %23 = icmp eq i64 %29, %20
  br i1 %23, label %41, label %24

24:                                               ; preds = %14, %22
  %25 = phi i64 [ %29, %22 ], [ 1, %14 ]
  %26 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %11, i64 %25
  %27 = load %class.CXFA_Stroke*, %class.CXFA_Stroke** %26, align 8
  %28 = icmp eq %class.CXFA_Stroke* %27, null
  %29 = add nuw i64 %25, 1
  br i1 %28, label %22, label %30

30:                                               ; preds = %24
  %31 = icmp eq i64 %18, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30
  %33 = ptrtoint %class.CXFA_Stroke* %27 to i64
  br label %41

34:                                               ; preds = %30
  %35 = inttoptr i64 %18 to %class.CXFA_Stroke*
  %36 = call zeroext i16 @_ZN11CXFA_Stroke13GetStrokeTypeEv(%class.CXFA_Stroke* nonnull %35) #10
  %37 = call zeroext i16 @_ZN11CXFA_Stroke13GetStrokeTypeEv(%class.CXFA_Stroke* nonnull %27) #10
  %38 = icmp eq i16 %36, %37
  %39 = ptrtoint %class.CXFA_Stroke* %27 to i64
  %40 = select i1 %38, i64 %18, i64 %39
  br label %41

41:                                               ; preds = %22, %34, %32, %14
  %42 = phi i64 [ %33, %32 ], [ %40, %34 ], [ %18, %14 ], [ %18, %22 ]
  %43 = inttoptr i64 %42 to %class.CXFA_Stroke*
  %44 = call zeroext i16 @_ZN11CXFA_Stroke13GetStrokeTypeEv(%class.CXFA_Stroke* %43) #10
  switch i16 %44, label %53 [
    i16 265, label %45
    i16 248, label %45
    i16 156, label %45
    i16 105, label %45
  ]

45:                                               ; preds = %41, %41, %41, %41
  %46 = icmp eq i16 %44, 165
  %47 = inttoptr i64 %42 to %class.CXFA_Stroke*
  br i1 %46, label %53, label %48

48:                                               ; preds = %45
  %49 = call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* %47) #10
  %50 = zext i1 %49 to i64
  %51 = call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* %47) #10
  %52 = bitcast float %51 to i32
  br label %53

53:                                               ; preds = %48, %45, %41
  %54 = phi i16 [ 165, %41 ], [ 165, %45 ], [ %44, %48 ]
  %55 = phi i64 [ 0, %41 ], [ 0, %45 ], [ %50, %48 ]
  %56 = phi i32 [ 0, %41 ], [ 0, %45 ], [ %52, %48 ]
  %57 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %8, align 8
  br label %58

58:                                               ; preds = %53, %6
  %59 = phi %class.CXFA_Stroke** [ %57, %53 ], [ %11, %6 ]
  %60 = phi i16 [ %54, %53 ], [ 165, %6 ]
  %61 = phi i64 [ %55, %53 ], [ 0, %6 ]
  %62 = phi i32 [ %56, %53 ], [ 0, %6 ]
  %63 = icmp eq %class.CXFA_Stroke** %59, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %58
  %65 = ptrtoint %class.CXFA_Stroke** %59 to i64
  %66 = bitcast %class.CXFA_Stroke*** %9 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast %class.CXFA_Stroke** %59 to i8*
  call void @_ZdlPv(i8* %67) #11
  br label %68

68:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  br label %69

69:                                               ; preds = %1, %68
  %70 = phi i16 [ %60, %68 ], [ 165, %1 ]
  %71 = phi i64 [ %61, %68 ], [ 0, %1 ]
  %72 = phi i32 [ %62, %68 ], [ 0, %1 ]
  %73 = zext i32 %72 to i64
  %74 = shl nuw i64 %73, 32
  %75 = shl nsw i64 %71, 16
  %76 = and i64 %75, 16711680
  %77 = zext i16 %70 to i64
  %78 = or i64 %76, %77
  %79 = or i64 %78, %74
  ret i64 %79
}

declare zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke*) local_unnamed_addr #2

declare float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box4DrawEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrixb(%class.CXFA_Box*, %class.CFGAS_GEGraphics*, %class.CFX_RectF* nocapture readonly dereferenceable(16), %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.std::__1::vector.25", align 8
  %7 = alloca %"class.std::__1::vector.25", align 8
  %8 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %9 = bitcast %"class.cppgc::internal::BasicMember.0"* %8 to %class.CJX_Object**
  %10 = load %class.CJX_Object*, %class.CJX_Object** %9, align 8
  %11 = tail call i32 @_ZNK10CJX_Object7TryEnumE13XFA_Attributeb(%class.CJX_Object* %10, i16 signext 106, i1 zeroext true) #10
  %12 = trunc i32 %11 to i8
  %13 = icmp eq i8 %12, 0
  %14 = and i32 %11, -65536
  %15 = icmp eq i32 %14, 2555904
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %75

17:                                               ; preds = %5
  %18 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 2
  %19 = load i16, i16* %18, align 4
  switch i16 %19, label %75 [
    i16 221, label %20
    i16 73, label %20
    i16 17, label %20
  ]

20:                                               ; preds = %17, %17, %17
  %21 = icmp ne i16 %19, 17
  %22 = bitcast %"class.std::__1::vector.25"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %6, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  %26 = xor i1 %4, true
  %27 = and i1 %21, %26
  br i1 %27, label %28, label %50

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::vector.25"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  call void @_ZN8CXFA_Box18GetStrokesInternalEb(%"class.std::__1::vector.25"* nonnull sret %7, %class.CXFA_Box* %0, i1 zeroext false) #10
  %30 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %23, align 8
  %31 = icmp eq %class.CXFA_Stroke** %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = bitcast %class.CXFA_Stroke*** %24 to i64*
  br label %38

34:                                               ; preds = %28
  %35 = ptrtoint %class.CXFA_Stroke** %30 to i64
  %36 = bitcast %class.CXFA_Stroke*** %24 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %class.CXFA_Stroke** %30 to i8*
  call void @_ZdlPv(i8* %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #10
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = bitcast %"class.std::__1::vector.25"* %7 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.25"* %6 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %7, i64 0, i32 0, i32 1
  %44 = bitcast %class.CXFA_Stroke*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %39, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %class.CXFA_Stroke*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %class.CXFA_Stroke*** %25 to i64*
  store i64 %48, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %50

50:                                               ; preds = %20, %38
  %51 = bitcast %class.CFX_RectF* %2 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %54 = bitcast float* %53 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 4
  call void @_ZN8CXFA_Box8DrawFillERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrixb(%class.CXFA_Box* %0, %"class.std::__1::vector.25"* nonnull dereferenceable(24) %6, %class.CFGAS_GEGraphics* %1, <2 x float> %52, <2 x float> %55, %class.CFX_Matrix* dereferenceable(24) %3, i1 zeroext %4)
  %56 = load i16, i16* %18, align 4
  %57 = icmp eq i16 %56, 17
  %58 = or i1 %57, %4
  br i1 %58, label %59, label %62

59:                                               ; preds = %50
  %60 = load <2 x float>, <2 x float>* %51, align 4
  %61 = load <2 x float>, <2 x float>* %54, align 4
  call void @_ZN8CXFA_Box18StrokeArcOrRoundedEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrixb(%class.CXFA_Box* %0, %class.CFGAS_GEGraphics* %1, <2 x float> %60, <2 x float> %61, %class.CFX_Matrix* dereferenceable(24) %3, i1 zeroext %4)
  br label %67

62:                                               ; preds = %50
  switch i16 %56, label %67 [
    i16 221, label %63
    i16 73, label %63
  ]

63:                                               ; preds = %62, %62
  %64 = bitcast %class.CXFA_Box* %0 to %class.CXFA_Rectangle*
  %65 = load <2 x float>, <2 x float>* %51, align 4
  %66 = load <2 x float>, <2 x float>* %54, align 4
  call void @_ZN14CXFA_Rectangle4DrawERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrix(%class.CXFA_Rectangle* %64, %"class.std::__1::vector.25"* nonnull dereferenceable(24) %6, %class.CFGAS_GEGraphics* %1, <2 x float> %65, <2 x float> %66, %class.CFX_Matrix* dereferenceable(24) %3) #10
  br label %67

67:                                               ; preds = %62, %63, %59
  %68 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %23, align 8
  %69 = icmp eq %class.CXFA_Stroke** %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = ptrtoint %class.CXFA_Stroke** %68 to i64
  %72 = bitcast %class.CXFA_Stroke*** %24 to i64*
  store i64 %71, i64* %72, align 8
  %73 = bitcast %class.CXFA_Stroke** %68 to i8*
  call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  br label %75

75:                                               ; preds = %74, %17, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box8DrawFillERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrixb(%class.CXFA_Box*, %"class.std::__1::vector.25"* dereferenceable(24), %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #4 align 2 {
  %8 = alloca <4 x float>, align 16
  %9 = bitcast <4 x float>* %8 to { <2 x float>, <2 x float> }*
  %10 = bitcast <4 x float>* %8 to %class.CFX_RectF*
  %11 = alloca %class.CFGAS_GEPath, align 8
  %12 = bitcast <4 x float>* %8 to <2 x float>*
  store <2 x float> %3, <2 x float>* %12, align 16
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %4, <2 x float>* %13, align 8
  %14 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %15 = bitcast %"class.cppgc::internal::BasicMember.0"* %14 to %class.CJX_Object**
  %16 = load %class.CJX_Object*, %class.CJX_Object** %15, align 8
  %17 = tail call { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object* %16, i32 0, i16 signext 245) #10
  %18 = extractvalue { %class.CXFA_Node*, i32 } %17, 0
  %19 = bitcast %class.CXFA_Node* %18 to %class.CXFA_Fill*
  %20 = icmp eq %class.CXFA_Node* %18, null
  br i1 %20, label %72, label %21

21:                                               ; preds = %7
  %22 = tail call zeroext i1 @_ZN9CXFA_Fill9IsVisibleEv(%class.CXFA_Fill* nonnull %19) #10
  br i1 %22, label %23, label %72

23:                                               ; preds = %21
  tail call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %2) #10
  %24 = bitcast %class.CFGAS_GEPath* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = bitcast %class.CFGAS_GEPath* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %11) #10
  %26 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 2
  %27 = load i16, i16* %26, align 4
  %28 = icmp eq i16 %27, 17
  %29 = or i1 %28, %6
  br i1 %29, label %30, label %68

30:                                               ; preds = %23
  %31 = load %class.CJX_Object*, %class.CJX_Object** %15, align 8
  %32 = call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %31, i32 0, i16 signext 102) #10
  %33 = icmp eq %class.CXFA_Node* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = bitcast %class.CXFA_Node* %32 to %class.CXFA_Stroke*
  %36 = call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* nonnull %35) #10
  %37 = fpext float %36 to double
  br label %38

38:                                               ; preds = %30, %34
  %39 = phi double [ %37, %34 ], [ 0.000000e+00, %30 ]
  %40 = call double @llvm.maxnum.f64(double %39, double 0.000000e+00) #10
  %41 = fptrunc double %40 to float
  %42 = fmul float %41, 5.000000e-01
  %43 = load %class.CJX_Object*, %class.CJX_Object** %15, align 8
  %44 = call zeroext i16 @_ZNK10CJX_Object7GetEnumE13XFA_Attribute(%class.CJX_Object* %43, i16 signext 274) #10
  switch i16 %44, label %63 [
    i16 252, label %45
    i16 54, label %54
  ]

45:                                               ; preds = %38
  %46 = fmul float %42, 2.000000e+00
  %47 = load <4 x float>, <4 x float>* %8, align 16
  %48 = insertelement <2 x float> undef, float %42, i32 0
  %49 = insertelement <2 x float> %48, float %46, i32 1
  %50 = shufflevector <2 x float> %49, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %51 = fsub <4 x float> %47, %50
  %52 = fadd <4 x float> %47, %50
  %53 = shufflevector <4 x float> %51, <4 x float> %52, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %53, <4 x float>* %8, align 16
  br label %63

54:                                               ; preds = %38
  %55 = fmul float %42, 2.000000e+00
  %56 = load <4 x float>, <4 x float>* %8, align 16
  %57 = insertelement <2 x float> undef, float %42, i32 0
  %58 = insertelement <2 x float> %57, float %55, i32 1
  %59 = shufflevector <2 x float> %58, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %60 = fadd <4 x float> %56, %59
  %61 = fsub <4 x float> %56, %59
  %62 = shufflevector <4 x float> %60, <4 x float> %61, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %62, <4 x float>* %8, align 16
  br label %63

63:                                               ; preds = %38, %54, %45
  %64 = load <2 x float>, <2 x float>* %12, align 16
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1, i64 0
  %66 = bitcast float* %65 to <2 x float>*
  %67 = load <2 x float>, <2 x float>* %66, align 8
  call void @_ZN8CXFA_Box19GetPathArcOrRoundedE9CFX_RectFbP12CFGAS_GEPath(%class.CXFA_Box* %0, <2 x float> %64, <2 x float> %67, i1 zeroext %6, %class.CFGAS_GEPath* nonnull %11)
  br label %71

68:                                               ; preds = %23
  switch i16 %27, label %71 [
    i16 221, label %69
    i16 73, label %69
  ]

69:                                               ; preds = %68, %68
  %70 = bitcast %class.CXFA_Box* %0 to %class.CXFA_Rectangle*
  call void @_ZN14CXFA_Rectangle11GetFillPathERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEERK9CFX_RectFP12CFGAS_GEPath(%class.CXFA_Rectangle* %70, %"class.std::__1::vector.25"* dereferenceable(24) %1, %class.CFX_RectF* nonnull dereferenceable(16) %10, %class.CFGAS_GEPath* nonnull %11) #10
  br label %71

71:                                               ; preds = %68, %69, %63
  call void @_ZN12CFGAS_GEPath5CloseEv(%class.CFGAS_GEPath* nonnull %11) #10
  call void @_ZN9CXFA_Fill4DrawEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK9CFX_RectFRK10CFX_Matrix(%class.CXFA_Fill* nonnull %19, %class.CFGAS_GEGraphics* %2, %class.CFGAS_GEPath* nonnull dereferenceable(24) %11, %class.CFX_RectF* nonnull dereferenceable(16) %10, %class.CFX_Matrix* dereferenceable(24) %5) #10
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %2) #10
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  br label %72

72:                                               ; preds = %21, %7, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box18StrokeArcOrRoundedEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrixb(%class.CXFA_Box* nocapture readonly, %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #4 align 2 {
  %7 = alloca %class.CFGAS_GEPath, align 8
  %8 = alloca %class.CFGAS_GEPath, align 8
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_STemplate, align 4
  %11 = alloca %class.CFGAS_GEColor, align 8
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %class.CFX_STemplate, align 4
  %14 = alloca %class.CFGAS_GEColor, align 8
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_STemplate, align 4
  %17 = alloca %class.CFGAS_GEColor, align 8
  %18 = alloca %class.CFX_PTemplate, align 4
  %19 = alloca %class.CFX_STemplate, align 4
  %20 = alloca %class.CFGAS_GEColor, align 8
  %21 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %22 = bitcast %"class.cppgc::internal::BasicMember.0"* %21 to %class.CJX_Object**
  %23 = load %class.CJX_Object*, %class.CJX_Object** %22, align 8
  %24 = tail call %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object* %23, i32 0, i16 signext 102) #10
  %25 = icmp eq %class.CXFA_Node* %24, null
  br i1 %25, label %126, label %26

26:                                               ; preds = %6
  %27 = bitcast %class.CXFA_Node* %24 to %class.CXFA_Stroke*
  %28 = tail call zeroext i1 @_ZN11CXFA_Stroke9IsVisibleEv(%class.CXFA_Stroke* nonnull %27) #10
  br i1 %28, label %29, label %126

29:                                               ; preds = %26
  %30 = tail call i64 @_ZN8CXFA_Box10Get3DStyleEv(%class.CXFA_Box* %0)
  %31 = trunc i64 %30 to i16
  %32 = icmp eq i16 %31, 165
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = lshr i64 %30, 32
  %35 = trunc i64 %34 to i32
  %36 = and i64 %30, 16711680
  %37 = icmp eq i64 %36, 0
  %38 = bitcast i32 %35 to float
  %39 = fcmp ult float %38, 0x3F50624DE0000000
  %40 = or i1 %37, %39
  br label %41

41:                                               ; preds = %33, %29
  %42 = phi i1 [ true, %29 ], [ %40, %33 ]
  %43 = tail call float @_ZNK11CXFA_Stroke12GetThicknessEv(%class.CXFA_Stroke* nonnull %27) #10
  %44 = fmul float %43, 5.000000e-01
  %45 = fcmp olt float %44, 0.000000e+00
  %46 = select i1 %45, float 0.000000e+00, float %44
  %47 = load %class.CJX_Object*, %class.CJX_Object** %22, align 8
  %48 = tail call zeroext i16 @_ZNK10CJX_Object7GetEnumE13XFA_Attribute(%class.CJX_Object* %47, i16 signext 274) #10
  switch i16 %48, label %65 [
    i16 252, label %49
    i16 54, label %57
  ]

49:                                               ; preds = %41
  %50 = insertelement <2 x float> undef, float %46, i32 0
  %51 = shufflevector <2 x float> %50, <2 x float> undef, <2 x i32> zeroinitializer
  %52 = fsub <2 x float> %2, %51
  %53 = fmul float %46, 2.000000e+00
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = shufflevector <2 x float> %54, <2 x float> undef, <2 x i32> zeroinitializer
  %56 = fadd <2 x float> %55, %3
  br label %65

57:                                               ; preds = %41
  %58 = insertelement <2 x float> undef, float %46, i32 0
  %59 = shufflevector <2 x float> %58, <2 x float> undef, <2 x i32> zeroinitializer
  %60 = fadd <2 x float> %59, %2
  %61 = fmul float %46, 2.000000e+00
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = shufflevector <2 x float> %62, <2 x float> undef, <2 x i32> zeroinitializer
  %64 = fsub <2 x float> %3, %63
  br label %65

65:                                               ; preds = %41, %57, %49
  %66 = phi <2 x float> [ %2, %41 ], [ %60, %57 ], [ %52, %49 ]
  %67 = phi <2 x float> [ %3, %41 ], [ %64, %57 ], [ %56, %49 ]
  %68 = xor i1 %5, true
  %69 = or i1 %42, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %65
  %71 = fcmp olt float %46, 0x3F50624DE0000000
  br i1 %71, label %126, label %72

72:                                               ; preds = %70
  %73 = bitcast %class.CFGAS_GEPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #10
  %74 = bitcast %class.CFGAS_GEPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %7) #10
  call void @_ZN8CXFA_Box19GetPathArcOrRoundedE9CFX_RectFbP12CFGAS_GEPath(%class.CXFA_Box* %0, <2 x float> %66, <2 x float> %67, i1 zeroext %5, %class.CFGAS_GEPath* nonnull %7)
  call void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke* nonnull %27, %class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %7, %class.CFX_Matrix* dereferenceable(24) %4) #10
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #10
  br label %126

75:                                               ; preds = %65
  tail call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %1) #10
  tail call void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics* %1, float %46) #10
  %76 = fmul <2 x float> %67, <float 5.000000e-01, float 5.000000e-01>
  %77 = extractelement <2 x float> %76, i32 0
  %78 = extractelement <2 x float> %76, i32 1
  %79 = fcmp olt float %78, %77
  %80 = select i1 %79, float %78, float %77
  %81 = select i1 %5, float %80, float %78
  %82 = select i1 %5, float %80, float %77
  %83 = extractelement <2 x float> %66, i32 0
  %84 = fadd float %83, %77
  %85 = extractelement <2 x float> %66, i32 1
  %86 = fadd float %85, %78
  %87 = fsub float %84, %82
  %88 = fsub float %86, %81
  %89 = fadd float %82, %82
  %90 = fadd float %81, %81
  %91 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #10
  %92 = bitcast %class.CFGAS_GEPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %8) #10
  %93 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  %94 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float %87, float* %94, align 4, !alias.scope !2
  %95 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float %88, float* %95, align 4, !alias.scope !2
  %96 = bitcast %class.CFX_STemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #10
  %97 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %10, i64 0, i32 0
  store float %89, float* %97, align 4, !alias.scope !5
  %98 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %10, i64 0, i32 1
  store float %90, float* %98, align 4, !alias.scope !5
  call void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, %class.CFX_STemplate* nonnull dereferenceable(8) %10, float 0x4002D97C80000000, float 0x400921FB60000000) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  %99 = bitcast %class.CFGAS_GEColor* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #10
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %11, i32 -8355712) #10
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %11) #10
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #10
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, %class.CFX_Matrix* dereferenceable(24) %4) #10
  call void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath* nonnull %8) #10
  %100 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #10
  %101 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 0
  store float %87, float* %101, align 4, !alias.scope !8
  %102 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  store float %88, float* %102, align 4, !alias.scope !8
  %103 = bitcast %class.CFX_STemplate* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #10
  %104 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %13, i64 0, i32 0
  store float %89, float* %104, align 4, !alias.scope !11
  %105 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %13, i64 0, i32 1
  store float %90, float* %105, align 4, !alias.scope !11
  call void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %12, %class.CFX_STemplate* nonnull dereferenceable(8) %13, float 0xBFE921FB60000000, float 0x400921FB60000000) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #10
  %106 = bitcast %class.CFGAS_GEColor* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #10
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %14, i32 -1) #10
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %14) #10
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #10
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, %class.CFX_Matrix* dereferenceable(24) %4) #10
  %107 = fadd float %46, %87
  %108 = fmul float %46, 2.000000e+00
  %109 = fsub float %89, %108
  %110 = fadd float %46, %88
  %111 = fsub float %90, %108
  call void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath* nonnull %8) #10
  %112 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #10
  %113 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 0
  store float %107, float* %113, align 4, !alias.scope !14
  %114 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  store float %110, float* %114, align 4, !alias.scope !14
  %115 = bitcast %class.CFX_STemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #10
  %116 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %16, i64 0, i32 0
  store float %109, float* %116, align 4, !alias.scope !17
  %117 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %16, i64 0, i32 1
  store float %111, float* %117, align 4, !alias.scope !17
  call void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, %class.CFX_STemplate* nonnull dereferenceable(8) %16, float 0x4002D97C80000000, float 0x400921FB60000000) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #10
  %118 = bitcast %class.CFGAS_GEColor* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #10
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %17, i32 -12566464) #10
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %17) #10
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #10
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, %class.CFX_Matrix* dereferenceable(24) %4) #10
  call void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath* nonnull %8) #10
  %119 = bitcast %class.CFX_PTemplate* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #10
  %120 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 0
  store float %107, float* %120, align 4, !alias.scope !20
  %121 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  store float %110, float* %121, align 4, !alias.scope !20
  %122 = bitcast %class.CFX_STemplate* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #10
  %123 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %19, i64 0, i32 0
  store float %109, float* %123, align 4, !alias.scope !23
  %124 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %19, i64 0, i32 1
  store float %111, float* %124, align 4, !alias.scope !23
  call void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* nonnull %8, %class.CFX_PTemplate* nonnull dereferenceable(8) %18, %class.CFX_STemplate* nonnull dereferenceable(8) %19, float 0xBFE921FB60000000, float 0x400921FB60000000) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #10
  %125 = bitcast %class.CFGAS_GEColor* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #10
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %20, i32 -4144960) #10
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEColor* nonnull dereferenceable(24) %20) #10
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #10
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %1, %class.CFGAS_GEPath* nonnull dereferenceable(24) %8, %class.CFX_Matrix* dereferenceable(24) %4) #10
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %1) #10
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #10
  br label %126

126:                                              ; preds = %72, %75, %70, %26, %6
  ret void
}

declare void @_ZN14CXFA_Rectangle4DrawERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEEP16CFGAS_GEGraphics9CFX_RectFRK10CFX_Matrix(%class.CXFA_Rectangle*, %"class.std::__1::vector.25"* dereferenceable(24), %class.CFGAS_GEGraphics*, <2 x float>, <2 x float>, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN9CXFA_Fill9IsVisibleEv(%class.CXFA_Fill*) local_unnamed_addr #2

declare void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #2

declare void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8CXFA_Box19GetPathArcOrRoundedE9CFX_RectFbP12CFGAS_GEPath(%class.CXFA_Box* nocapture readonly, <2 x float>, <2 x float>, i1 zeroext, %class.CFGAS_GEPath*) local_unnamed_addr #4 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %class.CFX_RectF*
  %8 = alloca %class.CFX_PTemplate, align 4
  %9 = alloca %class.CFX_STemplate, align 4
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %1, <2 x float>* %10, align 8
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %2, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1, i64 0
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 3
  %14 = fmul <2 x float> %2, <float 5.000000e-01, float 5.000000e-01>
  %15 = getelementptr inbounds %class.CXFA_Box, %class.CXFA_Box* %0, i64 0, i32 0, i32 0, i32 6
  %16 = bitcast %"class.cppgc::internal::BasicMember.0"* %15 to %class.CJX_Object**
  %17 = load %class.CJX_Object*, %class.CJX_Object** %16, align 8
  %18 = tail call zeroext i1 @_ZNK10CJX_Object10GetBooleanE13XFA_Attribute(%class.CJX_Object* %17, i16 signext 192) #10
  %19 = or i1 %18, %3
  %20 = extractelement <2 x float> %1, i32 0
  %21 = extractelement <2 x float> %1, i32 1
  %22 = extractelement <2 x float> %14, i32 0
  %23 = extractelement <2 x float> %14, i32 1
  %24 = fcmp olt float %23, %22
  %25 = select i1 %24, float %23, float %22
  %26 = select i1 %19, float %25, float %23
  %27 = select i1 %19, float %25, float %22
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  %29 = fadd float %22, %20
  %30 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %7, i64 0, i32 1
  %31 = fadd float %21, %23
  %32 = fsub float %29, %27
  store float %32, float* %28, align 8
  %33 = fsub float %31, %26
  store float %33, float* %30, align 4
  %34 = fadd float %27, %27
  store float %34, float* %12, align 8
  %35 = fadd float %26, %26
  store float %35, float* %13, align 4
  %36 = load %class.CJX_Object*, %class.CJX_Object** %16, align 8
  %37 = tail call i64 @_ZNK10CJX_Object10TryIntegerE13XFA_Attributeb(%class.CJX_Object* %36, i16 signext 116, i1 zeroext false) #10
  %38 = load %class.CJX_Object*, %class.CJX_Object** %16, align 8
  %39 = tail call i64 @_ZNK10CJX_Object10TryIntegerE13XFA_Attributeb(%class.CJX_Object* %38, i16 signext 139, i1 zeroext false) #10
  %40 = or i64 %39, %37
  %41 = trunc i64 %40 to i8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %5
  call void @_ZN12CFGAS_GEPath10AddEllipseERK9CFX_RectF(%class.CFGAS_GEPath* %4, %class.CFX_RectF* nonnull dereferenceable(16) %7) #10
  br label %69

44:                                               ; preds = %5
  %45 = trunc i64 %37 to i8
  %46 = trunc i64 %39 to i8
  %47 = lshr i64 %39, 32
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %37, 32
  %50 = trunc i64 %49 to i32
  %51 = bitcast %class.CFX_PTemplate* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 0
  store float %32, float* %52, align 4, !alias.scope !26
  %53 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %8, i64 0, i32 1
  store float %33, float* %53, align 4, !alias.scope !26
  %54 = bitcast %class.CFX_STemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  %55 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %9, i64 0, i32 0
  store float %34, float* %55, align 4, !alias.scope !29
  %56 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %9, i64 0, i32 1
  store float %35, float* %56, align 4, !alias.scope !29
  %57 = icmp eq i8 %45, 0
  %58 = sub i32 0, %50
  %59 = sitofp i32 %58 to float
  %60 = fmul float %59, 0x400921FB60000000
  %61 = fdiv float %60, 1.800000e+02
  %62 = select i1 %57, float 0.000000e+00, float %61
  %63 = icmp eq i8 %46, 0
  %64 = sub i32 0, %48
  %65 = sitofp i32 %64 to float
  %66 = fmul float %65, 0x400921FB60000000
  %67 = fdiv float %66, 1.800000e+02
  %68 = select i1 %63, float 0xC01921FB60000000, float %67
  call void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath* %4, %class.CFX_PTemplate* nonnull dereferenceable(8) %8, %class.CFX_STemplate* nonnull dereferenceable(8) %9, float %62, float %68) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %69

69:                                               ; preds = %44, %43
  ret void
}

declare void @_ZN14CXFA_Rectangle11GetFillPathERKNSt3__16vectorIP11CXFA_StrokeNS0_9allocatorIS3_EEEERK9CFX_RectFP12CFGAS_GEPath(%class.CXFA_Rectangle*, %"class.std::__1::vector.25"* dereferenceable(24), %class.CFX_RectF* dereferenceable(16), %class.CFGAS_GEPath*) local_unnamed_addr #2

declare void @_ZN12CFGAS_GEPath5CloseEv(%class.CFGAS_GEPath*) local_unnamed_addr #2

declare void @_ZN9CXFA_Fill4DrawEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK9CFX_RectFRK10CFX_Matrix(%class.CXFA_Fill*, %class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_RectF* dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath*) unnamed_addr #3

declare void @_ZN12CFGAS_GEPath10AddEllipseERK9CFX_RectF(%class.CFGAS_GEPath*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN12CFGAS_GEPath6AddArcERK13CFX_PTemplateIfERK13CFX_STemplateIfEff(%class.CFGAS_GEPath*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_STemplate* dereferenceable(8), float, float) local_unnamed_addr #2

declare void @_ZN11CXFA_Stroke6StrokeEP16CFGAS_GEGraphicsRK12CFGAS_GEPathRK10CFX_Matrix(%class.CXFA_Stroke*, %class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics*, float) local_unnamed_addr #2

declare void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #3

declare void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN12CFGAS_GEPath5ClearEv(%class.CFGAS_GEPath*) local_unnamed_addr #2

declare void @_ZNK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node*, %"class.cppgc::Visitor"*) unnamed_addr #2

declare signext i16 @_ZNK9CXFA_Node16GetValueNodeTypeEv(%class.CXFA_Node*) unnamed_addr #2

declare i32 @_ZNK9CXFA_Node22GetDefaultFFWidgetTypeEv(%class.CXFA_Node*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn56_NK9CXFA_Node5TraceEPN5cppgc7VisitorE(%class.CXFA_Node*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2

declare zeroext i16 @_ZN11CXFA_Stroke13GetStrokeTypeEv(%class.CXFA_Stroke*) local_unnamed_addr #2

declare %class.CXFA_Node* @_ZN10CJX_Object27GetOrCreatePropertyInternalEi11XFA_Element(%class.CJX_Object*, i32, i16 signext) local_unnamed_addr #2

declare { %class.CXFA_Node*, i32 } @_ZNK10CJX_Object19GetPropertyInternalEi11XFA_Element(%class.CJX_Object*, i32, i16 signext) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIP11CXFA_StrokeNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.25"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.CXFA_Stroke*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %class.CXFA_Stroke*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %class.CXFA_Stroke**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %class.CXFA_Stroke*, %class.CXFA_Stroke** %13, i64 %18
  %20 = bitcast %class.CXFA_Stroke** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %class.CXFA_Stroke** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.25"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.25"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #11
  %54 = bitcast i8* %53 to %class.CXFA_Stroke**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %class.CXFA_Stroke** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %57, i64 %33
  %59 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %57, i64 %56
  %60 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %58, i64 %1
  %61 = bitcast %class.CXFA_Stroke** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #10
  %63 = ptrtoint %class.CXFA_Stroke** %59 to i64
  %64 = ptrtoint %class.CXFA_Stroke** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %0, i64 0, i32 0, i32 0
  %66 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %class.CXFA_Stroke** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %class.CXFA_Stroke*, %class.CXFA_Stroke** %58, i64 %71
  %73 = ptrtoint %class.CXFA_Stroke** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %class.CXFA_Stroke** %72 to i8*
  %77 = bitcast %class.CXFA_Stroke** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #10
  %78 = load %class.CXFA_Stroke**, %class.CXFA_Stroke*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %class.CXFA_Stroke** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %class.CXFA_Stroke** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %class.CXFA_Stroke** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #11
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare double @llvm.maxnum.f64(double, double) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!4 = distinct !{!4, !"_ZNK9CFX_RectF7TopLeftEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!7 = distinct !{!7, !"_ZNK9CFX_RectF4SizeEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!10 = distinct !{!10, !"_ZNK9CFX_RectF7TopLeftEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!13 = distinct !{!13, !"_ZNK9CFX_RectF4SizeEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!16 = distinct !{!16, !"_ZNK9CFX_RectF7TopLeftEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!19 = distinct !{!19, !"_ZNK9CFX_RectF4SizeEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!22 = distinct !{!22, !"_ZNK9CFX_RectF7TopLeftEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!25 = distinct !{!25, !"_ZNK9CFX_RectF4SizeEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!28 = distinct !{!28, !"_ZNK9CFX_RectF7TopLeftEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK9CFX_RectF4SizeEv: argument 0"}
!31 = distinct !{!31, !"_ZNK9CFX_RectF4SizeEv"}
