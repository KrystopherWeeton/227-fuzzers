; ModuleID = '../../net/dns/https_record_rdata.cc'
source_filename = "../../net/dns/https_record_rdata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.absl::nullopt_t" = type { i8 }
%"class.net::HttpsRecordRdata" = type { %"class.net::RecordRdata" }
%"class.net::RecordRdata" = type { i32 (...)** }
%"class.net::MalformedHttpsRecordRdata" = type { %"class.net::HttpsRecordRdata" }
%"class.net::AliasFormHttpsRecordRdata" = type { %"class.net::HttpsRecordRdata", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::ServiceFormHttpsRecordRdata" = type { %"class.net::HttpsRecordRdata", i16, %"class.std::__1::basic_string", %"class.std::__1::set", %"class.std::__1::vector", i8, %"class.absl::optional", %"class.std::__1::vector.33", %"class.std::__1::basic_string", %"class.std::__1::vector.33", %"class.std::__1::map" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { i16 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.35" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.net::IPAddress"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::BigEndianReader" = type { i8*, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__tree_node.69" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.70" }
%"struct.std::__1::pair.70" = type { i16, %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i16, [4 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEEbRKN4absl9nullopt_tENSF_INS1_9IPAddressENS7_ISM_EEEES9_SO_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEERbRN4absl8optionalItEENSF_INS1_9IPAddressENS7_ISN_EEEES9_SP_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN3net25MalformedHttpsRecordRdataD0Ev = comdat any

$_ZN3net25AliasFormHttpsRecordRdataD2Ev = comdat any

$_ZN3net25AliasFormHttpsRecordRdataD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA4_hEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA16_hEEEvDpOT_ = comdat any

$_ZNSt3__13setItNS_4lessItEENS_9allocatorItEEE6insertIPKtEEvT_S9_ = comdat any

$_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = comdat any

@.str = private unnamed_addr constant [36 x i8] c"../../net/dns/https_record_rdata.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"reader.ReadU16(&priority)\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"IsAlias()\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"!IsMalformed()\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"!IsAlias()\00", align 1
@_ZTVN3net25MalformedHttpsRecordRdataE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpsRecordRdata"*)* @_ZN3net16HttpsRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::MalformedHttpsRecordRdata"*)* @_ZN3net25MalformedHttpsRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net16HttpsRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata4TypeEv to i8*), i8* bitcast (i1 (%"class.net::MalformedHttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)* @_ZNK3net25MalformedHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE to i8*), i8* bitcast (i1 (%"class.net::MalformedHttpsRecordRdata"*)* @_ZNK3net25MalformedHttpsRecordRdata7IsAliasEv to i8*), i8* bitcast (i1 (%"class.net::MalformedHttpsRecordRdata"*)* @_ZNK3net25MalformedHttpsRecordRdata11IsMalformedEv to i8*)] }, align 8
@_ZTVN3net25AliasFormHttpsRecordRdataE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::AliasFormHttpsRecordRdata"*)* @_ZN3net25AliasFormHttpsRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::AliasFormHttpsRecordRdata"*)* @_ZN3net25AliasFormHttpsRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net16HttpsRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata4TypeEv to i8*), i8* bitcast (i1 (%"class.net::AliasFormHttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)* @_ZNK3net25AliasFormHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE to i8*), i8* bitcast (i1 (%"class.net::AliasFormHttpsRecordRdata"*)* @_ZNK3net25AliasFormHttpsRecordRdata7IsAliasEv to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata11IsMalformedEv to i8*)] }, align 8
@_ZN3net27ServiceFormHttpsRecordRdata14kSupportedKeysE = hidden constant [7 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6], align 2
@_ZTVN3net27ServiceFormHttpsRecordRdataE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ServiceFormHttpsRecordRdata"*)* @_ZN3net27ServiceFormHttpsRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::ServiceFormHttpsRecordRdata"*)* @_ZN3net27ServiceFormHttpsRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net16HttpsRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata4TypeEv to i8*), i8* bitcast (i1 (%"class.net::ServiceFormHttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)* @_ZNK3net27ServiceFormHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE to i8*), i8* bitcast (i1 (%"class.net::ServiceFormHttpsRecordRdata"*)* @_ZNK3net27ServiceFormHttpsRecordRdata7IsAliasEv to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata11IsMalformedEv to i8*)] }, align 8
@_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE = linkonce_odr hidden constant %"struct.absl::nullopt_t" undef, comdat, align 1
@.str.5 = private unnamed_addr constant [83 x i8] c"unparsed_params .emplace(param_key, static_cast<std::string>(param_value)) .second\00", align 1
@_ZTVN3net16HttpsRecordRdataE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpsRecordRdata"*)* @_ZN3net16HttpsRecordRdataD2Ev to i8*), i8* bitcast (void (%"class.net::HttpsRecordRdata"*)* @_ZN3net16HttpsRecordRdataD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*, %"class.net::RecordRdata"*)* @_ZNK3net16HttpsRecordRdata7IsEqualEPKNS_11RecordRdataE to i8*), i8* bitcast (i16 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata4TypeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.net::HttpsRecordRdata"*)* @_ZNK3net16HttpsRecordRdata11IsMalformedEv to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [34 x i8] c"mandatory_keys.insert(key).second\00", align 1

@_ZN3net16HttpsRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::HttpsRecordRdata"*), void (%"class.net::HttpsRecordRdata"*)* @_ZN3net16HttpsRecordRdataD2Ev
@_ZN3net25MalformedHttpsRecordRdataC1Ev = hidden unnamed_addr alias void (%"class.net::MalformedHttpsRecordRdata"*), void (%"class.net::MalformedHttpsRecordRdata"*)* @_ZN3net25MalformedHttpsRecordRdataC2Ev
@_ZN3net25AliasFormHttpsRecordRdataC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.net::AliasFormHttpsRecordRdata"*, %"class.std::__1::basic_string"*), void (%"class.net::AliasFormHttpsRecordRdata"*, %"class.std::__1::basic_string"*)* @_ZN3net25AliasFormHttpsRecordRdataC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3net27ServiceFormHttpsRecordRdataC1EtNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_3setItNS1_4lessItEENS5_ItEEEENS1_6vectorIS7_NS5_IS7_EEEEbN4absl8optionalItEENSD_INS_9IPAddressENS5_ISJ_EEEES7_SL_NS1_3mapItS7_SA_NS5_INS1_4pairIKtS7_EEEEEE = hidden unnamed_addr alias void (%"class.net::ServiceFormHttpsRecordRdata"*, i16, %"class.std::__1::basic_string"*, %"class.std::__1::set"*, %"class.std::__1::vector"*, i1, i32, %"class.std::__1::vector.33"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.33"*, %"class.std::__1::map"*), void (%"class.net::ServiceFormHttpsRecordRdata"*, i16, %"class.std::__1::basic_string"*, %"class.std::__1::set"*, %"class.std::__1::vector"*, i1, i32, %"class.std::__1::vector.33"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector.33"*, %"class.std::__1::map"*)* @_ZN3net27ServiceFormHttpsRecordRdataC2EtNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_3setItNS1_4lessItEENS5_ItEEEENS1_6vectorIS7_NS5_IS7_EEEEbN4absl8optionalItEENSD_INS_9IPAddressENS5_ISJ_EEEES7_SL_NS1_3mapItS7_SA_NS5_INS1_4pairIKtS7_EEEEEE
@_ZN3net27ServiceFormHttpsRecordRdataD1Ev = hidden unnamed_addr alias void (%"class.net::ServiceFormHttpsRecordRdata"*), void (%"class.net::ServiceFormHttpsRecordRdata"*)* @_ZN3net27ServiceFormHttpsRecordRdataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::HttpsRecordRdata"* @_ZN3net16HttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BigEndianReader", align 8
  %5 = alloca i16, align 2
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = call zeroext i1 @_ZN3net11RecordRdata12HasValidSizeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEt(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, i16 zeroext 65) #13
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = call i8* @_Znwm(i64 8) #14
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25MalformedHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = ptrtoint i8* %11 to i64
  br label %44

14:                                               ; preds = %2
  %15 = bitcast %"class.base::BigEndianReader"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = bitcast %"class.base::BigEndianReader"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = load i64, i64* %8, align 8
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %4, i8* %17, i64 %18) #13
  %19 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %19) #13
  store i16 -21846, i16* %5, align 2
  %20 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %4, i16* nonnull %5) #13
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 134, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %24

24:                                               ; preds = %14, %21
  %25 = load i16, i16* %5, align 2
  %26 = icmp eq i16 %25, 0
  %27 = load i8*, i8** %7, align 8
  %28 = load i64, i64* %8, align 8
  br i1 %26, label %29, label %32

29:                                               ; preds = %24
  %30 = call %"class.net::AliasFormHttpsRecordRdata"* @_ZN3net25AliasFormHttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %27, i64 %28)
  %31 = ptrtoint %"class.net::AliasFormHttpsRecordRdata"* %30 to i64
  br label %35

32:                                               ; preds = %24
  %33 = call %"class.net::ServiceFormHttpsRecordRdata"* @_ZN3net27ServiceFormHttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %27, i64 %28)
  %34 = ptrtoint %"class.net::ServiceFormHttpsRecordRdata"* %33 to i64
  br label %35

35:                                               ; preds = %32, %29
  %36 = phi i64 [ %31, %29 ], [ %34, %32 ]
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = call i8* @_Znwm(i64 8) #14
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25MalformedHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = ptrtoint i8* %39 to i64
  br label %42

42:                                               ; preds = %38, %35
  %43 = phi i64 [ %41, %38 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  br label %44

44:                                               ; preds = %42, %10
  %45 = phi i64 [ %43, %42 ], [ %13, %10 ]
  %46 = inttoptr i64 %45 to %"class.net::HttpsRecordRdata"*
  ret %"class.net::HttpsRecordRdata"* %46
}

declare zeroext i1 @_ZN3net11RecordRdata12HasValidSizeERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEt(%"class.base::BasicStringPiece"* dereferenceable(16), i16 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"*, i16*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AliasFormHttpsRecordRdata"* @_ZN3net25AliasFormHttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca [15 x i8], align 8
  %6 = alloca %"class.base::BigEndianReader", align 8
  %7 = alloca i16, align 2
  %8 = alloca %"class.absl::optional.50", align 8
  %9 = bitcast %"class.base::BigEndianReader"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %6, i64 0, i32 1
  %11 = bitcast %"class.base::BigEndianReader"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %6, i8* %0, i64 %1) #13
  %12 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #13
  store i16 -21846, i16* %7, align 2
  %13 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %6, i16* nonnull %7) #13
  %14 = load i16, i16* %7, align 2
  %15 = icmp eq i16 %14, 0
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %85

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  call void @_ZN3net17DnsDomainToStringERN4base15BigEndianReaderEb(%"class.absl::optional.50"* nonnull sret %8, %"class.base::BigEndianReader"* nonnull dereferenceable(16) %6, i1 zeroext true) #13
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %83, label %21

21:                                               ; preds = %17
  %22 = bitcast i8** %10 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.base::BigEndianReader"* %6 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %52, label %27

27:                                               ; preds = %21
  %28 = bitcast i16* %3 to i8*
  %29 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  br label %30

30:                                               ; preds = %27, %43
  %31 = phi i16 [ -21846, %27 ], [ %44, %43 ]
  %32 = phi i8 [ 0, %27 ], [ 1, %43 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %28) #13
  store i16 -21846, i16* %3, align 2
  %33 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %6, i16* nonnull %3) #13
  br i1 %33, label %34, label %41

34:                                               ; preds = %30
  %35 = icmp eq i8 %32, 0
  %36 = load i16, i16* %3, align 2
  %37 = icmp ugt i16 %36, %31
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #13
  %40 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %6, %"class.base::BasicStringPiece"* nonnull %4) #13
  br i1 %40, label %43, label %42

41:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28) #13
  br label %69

42:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28) #13
  br label %69

43:                                               ; preds = %39
  %44 = load i16, i16* %3, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %28) #13
  %45 = load i64, i64* %22, align 8
  %46 = load i64, i64* %24, align 8
  %47 = icmp eq i64 %45, %46
  br i1 %47, label %48, label %30

48:                                               ; preds = %43
  %49 = load i8, i8* %18, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

52:                                               ; preds = %21, %48
  %53 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %54)
  %55 = call i8* @_Znwm(i64 32) #14
  %56 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i64* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %60, i64 15, i1 false) #13
  %61 = getelementptr inbounds i8, i8* %56, i64 23
  %62 = load i8, i8* %61, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #13
  %63 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25AliasFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds i8, i8* %55, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %58, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %55, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* nonnull align 8 %54, i64 15, i1 false) #13
  %67 = getelementptr inbounds i8, i8* %55, i64 31
  store i8 %62, i8* %67, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %54)
  %68 = ptrtoint i8* %55 to i64
  br label %69

69:                                               ; preds = %52, %42, %41
  %70 = phi i64 [ 0, %41 ], [ 0, %42 ], [ %68, %52 ]
  %71 = load i8, i8* %18, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %79, %73
  store i8 0, i8* %18, align 8
  br label %83

83:                                               ; preds = %17, %69, %82
  %84 = phi i64 [ %70, %69 ], [ %70, %82 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #13
  br label %85

85:                                               ; preds = %2, %83
  %86 = phi i64 [ %84, %83 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %87 = inttoptr i64 %86 to %"class.net::AliasFormHttpsRecordRdata"*
  ret %"class.net::AliasFormHttpsRecordRdata"* %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ServiceFormHttpsRecordRdata"* @_ZN3net27ServiceFormHttpsRecordRdata5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i16, align 2
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BigEndianReader", align 8
  %6 = alloca %"class.std::__1::vector.33", align 16
  %7 = alloca [16 x i8], align 16
  %8 = alloca i16, align 2
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca i16, align 2
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca %"class.base::BigEndianReader", align 8
  %13 = alloca %"class.std::__1::vector.33", align 16
  %14 = alloca i32, align 4
  %15 = alloca i16, align 2
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca i16, align 2
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca i16, align 2
  %20 = alloca %"class.base::BasicStringPiece", align 8
  %21 = alloca %"class.base::BigEndianReader", align 8
  %22 = alloca %"class.std::__1::vector", align 16
  %23 = alloca %"class.base::BasicStringPiece", align 8
  %24 = alloca i8*, align 8
  %25 = alloca i64, align 8
  %26 = alloca i16, align 2
  %27 = alloca %"class.base::BasicStringPiece", align 8
  %28 = alloca %"class.base::BigEndianReader", align 8
  %29 = alloca %"class.std::__1::set", align 16
  %30 = alloca i16, align 2
  %31 = alloca %"class.logging::CheckError", align 8
  %32 = alloca i16, align 2
  %33 = alloca %"class.base::BasicStringPiece", align 8
  %34 = alloca i16, align 2
  %35 = alloca %"class.base::BasicStringPiece", align 8
  %36 = alloca %"class.base::BigEndianReader", align 8
  %37 = alloca i16, align 2
  %38 = alloca %"class.absl::optional.50", align 8
  %39 = alloca %"class.std::__1::set", align 8
  %40 = alloca %"class.std::__1::vector", align 8
  %41 = alloca i8, align 1
  %42 = alloca %"class.std::__1::vector.33", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.std::__1::vector.33", align 8
  %45 = alloca %"class.std::__1::map", align 8
  %46 = alloca %"class.std::__1::set", align 16
  %47 = alloca %"class.std::__1::vector", align 16
  %48 = alloca i8, align 1
  %49 = alloca i32, align 4
  %50 = bitcast i32* %49 to %"class.absl::optional"*
  %51 = alloca %"class.std::__1::vector.33", align 16
  %52 = alloca %"class.std::__1::basic_string", align 8
  %53 = alloca %"class.std::__1::basic_string", align 8
  %54 = alloca %"class.std::__1::vector.33", align 16
  %55 = alloca %"class.std::__1::map", align 8
  %56 = alloca %"class.std::__1::basic_string", align 8
  %57 = alloca %"class.logging::CheckError", align 8
  %58 = bitcast %"class.base::BigEndianReader"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %36, i64 0, i32 1
  %60 = bitcast %"class.base::BigEndianReader"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %36, i8* %0, i64 %1) #13
  %61 = bitcast i16* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %61) #13
  store i16 -21846, i16* %37, align 2
  %62 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %37) #13
  %63 = xor i1 %62, true
  %64 = load i16, i16* %37, align 2
  %65 = icmp eq i16 %64, 0
  %66 = or i1 %65, %63
  br i1 %66, label %1036, label %67

67:                                               ; preds = %2
  %68 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 32, i1 false)
  call void @_ZN3net17DnsDomainToStringERN4base15BigEndianReaderEb(%"class.absl::optional.50"* nonnull sret %38, %"class.base::BigEndianReader"* nonnull dereferenceable(16) %36, i1 zeroext true) #13
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %1034, label %71

71:                                               ; preds = %67
  %72 = bitcast i8** %59 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.base::BigEndianReader"* %36 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %73, %75
  br i1 %76, label %77, label %169

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::set"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #13
  %80 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %39, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %39, i64 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_node_base"** %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = bitcast %"class.std::__1::vector"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #13
  store i8 1, i8* %41, align 1
  %85 = bitcast %"class.std::__1::vector.33"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #13
  %86 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #13
  %87 = bitcast %"class.std::__1::vector.33"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #13
  %88 = bitcast %"class.std::__1::map"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  %89 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %45, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %45, i64 0, i32 0, i32 1, i32 0, i32 0
  %91 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %45, i64 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::__tree_node_base"** %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %90, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = call %"class.net::ServiceFormHttpsRecordRdata"* @_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEEbRKN4absl9nullopt_tENSF_INS1_9IPAddressENS7_ISM_EEEES9_SO_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i16* nonnull dereferenceable(2) %37, %"class.std::__1::basic_string"* dereferenceable(24) %78, %"class.std::__1::set"* nonnull dereferenceable(24) %39, %"class.std::__1::vector"* nonnull dereferenceable(24) %40, i8* nonnull dereferenceable(1) %41, %"struct.absl::nullopt_t"* nonnull dereferenceable(1) @_ZN4absl39AbslInternalInlineVariableHoldernulloptIvE9kInstanceE, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %42, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %43, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %44, %"class.std::__1::map"* nonnull dereferenceable(24) %45)
  %94 = ptrtoint %"class.net::ServiceFormHttpsRecordRdata"* %93 to i64
  %95 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %45, i64 0, i32 0
  %96 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node.69"**
  %97 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %96, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* nonnull %95, %"class.std::__1::__tree_node.69"* %97) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  %98 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %44, i64 0, i32 0, i32 0
  %99 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %98, align 8
  %100 = icmp eq %"class.net::IPAddress"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %77
  %102 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %44, i64 0, i32 0, i32 1
  %103 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %102, align 8
  %104 = icmp eq %"class.net::IPAddress"* %103, %99
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"class.net::IPAddress"* [ %107, %105 ], [ %103, %101 ]
  %107 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %106, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %107) #13
  %108 = icmp eq %"class.net::IPAddress"* %107, %99
  br i1 %108, label %109, label %105

109:                                              ; preds = %105
  %110 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %98, align 8
  br label %111

111:                                              ; preds = %109, %101
  %112 = phi %"class.net::IPAddress"* [ %110, %109 ], [ %99, %101 ]
  store %"class.net::IPAddress"* %99, %"class.net::IPAddress"** %102, align 8
  %113 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %112, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %77, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #13
  %115 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #14
  br label %122

122:                                              ; preds = %114, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %123 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %42, i64 0, i32 0, i32 0
  %124 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %123, align 8
  %125 = icmp eq %"class.net::IPAddress"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %42, i64 0, i32 0, i32 1
  %128 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %127, align 8
  %129 = icmp eq %"class.net::IPAddress"* %128, %124
  br i1 %129, label %136, label %130

130:                                              ; preds = %126, %130
  %131 = phi %"class.net::IPAddress"* [ %132, %130 ], [ %128, %126 ]
  %132 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %131, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %132) #13
  %133 = icmp eq %"class.net::IPAddress"* %132, %124
  br i1 %133, label %134, label %130

134:                                              ; preds = %130
  %135 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %123, align 8
  br label %136

136:                                              ; preds = %134, %126
  %137 = phi %"class.net::IPAddress"* [ %135, %134 ], [ %124, %126 ]
  store %"class.net::IPAddress"* %124, %"class.net::IPAddress"** %127, align 8
  %138 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %137, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %122, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #13
  %140 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %141 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %140, align 8
  %142 = icmp eq %"class.std::__1::basic_string"* %141, null
  br i1 %142, label %165, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.std::__1::basic_string"* %141 to i8*
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 1
  %146 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %145, align 8
  %147 = icmp eq %"class.std::__1::basic_string"* %146, %141
  br i1 %147, label %163, label %148

148:                                              ; preds = %143, %158
  %149 = phi %"class.std::__1::basic_string"* [ %150, %158 ], [ %146, %143 ]
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 -1
  %151 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %155, label %158

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  call void @_ZdlPv(i8* %157) #14
  br label %158

158:                                              ; preds = %155, %148
  %159 = icmp eq %"class.std::__1::basic_string"* %150, %141
  br i1 %159, label %160, label %148

160:                                              ; preds = %158
  %161 = bitcast %"class.std::__1::vector"* %40 to i8**
  %162 = load i8*, i8** %161, align 8
  br label %163

163:                                              ; preds = %160, %143
  %164 = phi i8* [ %162, %160 ], [ %144, %143 ]
  store %"class.std::__1::basic_string"* %141, %"class.std::__1::basic_string"** %145, align 8
  call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %139, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #13
  %166 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %39, i64 0, i32 0
  %167 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node"**
  %168 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %166, %"class.std::__1::__tree_node"* %168) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #13
  br label %1020

169:                                              ; preds = %71
  %170 = bitcast i16* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %170) #13
  store i16 -21846, i16* %32, align 2
  %171 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %32) #13
  br i1 %171, label %173, label %172

172:                                              ; preds = %169
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %170) #13
  br label %1020

173:                                              ; preds = %169
  %174 = bitcast %"class.base::BasicStringPiece"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 0, i64 16, i1 false) #13
  %175 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %33) #13
  br i1 %175, label %177, label %176

176:                                              ; preds = %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %170) #13
  br label %1020

177:                                              ; preds = %173
  %178 = load i16, i16* %32, align 2
  %179 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %170) #13
  %183 = bitcast %"class.std::__1::set"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #13
  %184 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0, i32 2, i32 0, i32 0
  %187 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0, i32 1, i32 0, i32 0
  %188 = bitcast %"class.std::__1::__tree_node_base"** %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %187, %"class.std::__1::__tree_end_node"** %184, align 16
  %189 = icmp eq i16 %178, 0
  br i1 %189, label %190, label %350

190:                                              ; preds = %177
  %191 = bitcast %"class.base::BigEndianReader"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #13
  %192 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %28, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 -86, i64 16, i1 false) #13
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %28, i8* %180, i64 %182) #13
  %193 = bitcast %"class.std::__1::set"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #13
  %194 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0, i32 2, i32 0, i32 0
  %197 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %198 = bitcast %"class.std::__1::__tree_node_base"** %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %197, %"class.std::__1::__tree_end_node"** %194, align 16
  %199 = bitcast i16* %30 to i8*
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %197, i64 0, i32 0
  %201 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.std::__1::__tree_node"**
  %202 = bitcast %"class.logging::CheckError"* %31 to i8*
  %203 = bitcast %"class.std::__1::set"* %29 to i64*
  %204 = bitcast i8** %192 to i64*
  %205 = bitcast %"class.base::BigEndianReader"* %28 to i64*
  br label %206

206:                                              ; preds = %302, %190
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %199) #13
  store i16 -21846, i16* %30, align 2
  %207 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %28, i16* nonnull %30) #13
  %208 = xor i1 %207, true
  %209 = load i16, i16* %30, align 2
  %210 = icmp eq i16 %209, 0
  %211 = or i1 %210, %208
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %201, align 8
  br label %308

214:                                              ; preds = %206
  %215 = load i64, i64* %196, align 16
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %214
  %218 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %201, align 8
  br label %245

219:                                              ; preds = %214
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %221 = icmp eq %"class.std::__1::__tree_node_base"* %220, null
  %222 = bitcast %"class.std::__1::__tree_node_base"* %220 to %"class.std::__1::__tree_node"*
  br i1 %221, label %228, label %223

223:                                              ; preds = %219, %223
  %224 = phi %"class.std::__1::__tree_node_base"* [ %226, %223 ], [ %220, %219 ]
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 1
  %226 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %225, align 8
  %227 = icmp eq %"class.std::__1::__tree_node_base"* %226, null
  br i1 %227, label %239, label %223

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::__tree_end_node"* [ %233, %228 ], [ %197, %219 ]
  %230 = bitcast %"class.std::__1::__tree_end_node"* %229 to %"class.std::__1::__tree_node_base"*
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %229, i64 2
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"class.std::__1::__tree_end_node"**
  %233 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 0, i32 0
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, %230
  br i1 %236, label %228, label %237

237:                                              ; preds = %228
  %238 = bitcast %"class.std::__1::__tree_end_node"* %233 to %"class.std::__1::__tree_node_base"*
  br label %239

239:                                              ; preds = %223, %237
  %240 = phi %"class.std::__1::__tree_node_base"* [ %238, %237 ], [ %224, %223 ]
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %240, i64 0, i32 4, i64 1
  %242 = bitcast i8* %241 to i16*
  %243 = load i16, i16* %242, align 2
  %244 = icmp ugt i16 %209, %243
  br i1 %244, label %245, label %306

245:                                              ; preds = %239, %217
  %246 = phi %"class.std::__1::__tree_node"* [ %218, %217 ], [ %222, %239 ]
  %247 = icmp eq %"class.std::__1::__tree_node"* %246, null
  br i1 %247, label %274, label %248

248:                                              ; preds = %245, %270
  %249 = phi %"class.std::__1::__tree_node"* [ %273, %270 ], [ %246, %245 ]
  %250 = phi %"class.std::__1::__tree_node_base"** [ %272, %270 ], [ %195, %245 ]
  %251 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 1
  %252 = load i16, i16* %251, align 2
  %253 = icmp ult i16 %209, %252
  br i1 %253, label %254, label %260

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0, i32 0
  %256 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %255, align 8
  %257 = icmp eq %"class.std::__1::__tree_node_base"* %256, null
  br i1 %257, label %258, label %270

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

260:                                              ; preds = %248
  %261 = icmp ult i16 %252, %209
  br i1 %261, label %262, label %268

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 1
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, null
  br i1 %265, label %266, label %270

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %249, i64 0, i32 0, i32 0
  br label %274

270:                                              ; preds = %262, %254
  %271 = phi %"class.std::__1::__tree_node_base"* [ %256, %254 ], [ %264, %262 ]
  %272 = phi %"class.std::__1::__tree_node_base"** [ %255, %254 ], [ %263, %262 ]
  %273 = bitcast %"class.std::__1::__tree_node_base"* %271 to %"class.std::__1::__tree_node"*
  br label %248

274:                                              ; preds = %268, %266, %258, %245
  %275 = phi %"class.std::__1::__tree_end_node"* [ %259, %258 ], [ %267, %266 ], [ %269, %268 ], [ %197, %245 ]
  %276 = phi %"class.std::__1::__tree_node_base"** [ %255, %258 ], [ %263, %266 ], [ %250, %268 ], [ %200, %245 ]
  %277 = bitcast %"class.std::__1::__tree_node_base"** %276 to %"class.std::__1::__tree_node"**
  %278 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %277, align 8
  %279 = icmp eq %"class.std::__1::__tree_node"* %278, null
  br i1 %279, label %280, label %300

280:                                              ; preds = %274
  %281 = call i8* @_Znwm(i64 32) #14, !noalias !3
  %282 = getelementptr inbounds i8, i8* %281, i64 26
  %283 = bitcast i8* %282 to i16*
  store i16 %209, i16* %283, align 2, !noalias !3
  %284 = bitcast i8* %281 to %"class.std::__1::__tree_node_base"*
  %285 = getelementptr inbounds i8, i8* %281, i64 16
  %286 = bitcast i8* %285 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %275, %"class.std::__1::__tree_end_node"** %286, align 8
  %287 = bitcast %"class.std::__1::__tree_node_base"** %276 to i8**
  store i8* %281, i8** %287, align 8
  %288 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %194, align 16
  %289 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %288, i64 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, null
  br i1 %291, label %295, label %292

292:                                              ; preds = %280
  %293 = ptrtoint %"class.std::__1::__tree_node_base"* %290 to i64
  store i64 %293, i64* %203, align 16
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  br label %295

295:                                              ; preds = %292, %280
  %296 = phi %"class.std::__1::__tree_node_base"* [ %284, %280 ], [ %294, %292 ]
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %297, %"class.std::__1::__tree_node_base"* %296) #13
  %298 = load i64, i64* %196, align 16
  %299 = add i64 %298, 1
  store i64 %299, i64* %196, align 16
  br label %302

300:                                              ; preds = %274
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %31, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #13
  %301 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %31) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  br label %302

302:                                              ; preds = %300, %295
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %199) #13
  %303 = load i64, i64* %204, align 8
  %304 = load i64, i64* %205, align 8
  %305 = icmp eq i64 %303, %304
  br i1 %305, label %311, label %206

306:                                              ; preds = %239
  %307 = bitcast %"class.std::__1::__tree_node_base"* %220 to %"class.std::__1::__tree_node"*
  br label %308

308:                                              ; preds = %306, %212
  %309 = phi %"class.std::__1::__tree_node"* [ %213, %212 ], [ %307, %306 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %199) #13
  %310 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %310, %"class.std::__1::__tree_node"* %309) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #13
  br label %1015

311:                                              ; preds = %302
  %312 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0
  %313 = bitcast %"class.std::__1::__tree_end_node"* %187 to %"class.std::__1::__tree_node"**
  %314 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %313, align 8
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %312, %"class.std::__1::__tree_node"* %314) #13
  %315 = bitcast %"class.std::__1::set"* %29 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 16
  %317 = bitcast %"class.std::__1::set"* %46 to <2 x i64>*
  store <2 x i64> %316, <2 x i64>* %317, align 16
  %318 = load i64, i64* %196, align 16
  store i64 %318, i64* %186, align 16
  %319 = icmp eq i64 %318, 0
  %320 = extractelement <2 x i64> %316, i32 1
  br i1 %319, label %321, label %323

321:                                              ; preds = %311
  %322 = inttoptr i64 %320 to %"class.std::__1::__tree_node"*
  store %"class.std::__1::__tree_end_node"* %187, %"class.std::__1::__tree_end_node"** %184, align 16
  br label %327

323:                                              ; preds = %311
  %324 = inttoptr i64 %320 to %"class.std::__1::__tree_node_base"*
  %325 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %324, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %187, %"class.std::__1::__tree_end_node"** %325, align 8
  store %"class.std::__1::__tree_end_node"* %197, %"class.std::__1::__tree_end_node"** %194, align 16
  %326 = bitcast %"class.std::__1::__tree_end_node"* %197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 16, i1 false) #13
  br label %327

327:                                              ; preds = %321, %323
  %328 = phi %"class.std::__1::__tree_node"* [ %322, %321 ], [ null, %323 ]
  %329 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %29, i64 0, i32 0
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %329, %"class.std::__1::__tree_node"* %328) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #13
  %330 = load i64, i64* %72, align 8
  %331 = load i64, i64* %74, align 8
  %332 = icmp eq i64 %330, %331
  br i1 %332, label %350, label %333

333:                                              ; preds = %327
  %334 = bitcast i16* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %334) #13
  store i16 -21846, i16* %26, align 2
  %335 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %26) #13
  %336 = load i16, i16* %26, align 2
  %337 = icmp ne i16 %336, 0
  %338 = and i1 %335, %337
  br i1 %338, label %339, label %348

339:                                              ; preds = %333
  %340 = bitcast %"class.base::BasicStringPiece"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 0, i64 16, i1 false) #13
  %341 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %27) #13
  br i1 %341, label %342, label %349

342:                                              ; preds = %339
  %343 = load i16, i16* %26, align 2
  %344 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %27, i64 0, i32 1
  %347 = load i64, i64* %346, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %334) #13
  br label %350

348:                                              ; preds = %333
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %334) #13
  br label %1015

349:                                              ; preds = %339
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %334) #13
  br label %1015

350:                                              ; preds = %342, %327, %177
  %351 = phi i64 [ %182, %327 ], [ %182, %177 ], [ %347, %342 ]
  %352 = phi i8* [ %180, %327 ], [ %180, %177 ], [ %345, %342 ]
  %353 = phi i16 [ 0, %327 ], [ %178, %177 ], [ %343, %342 ]
  %354 = bitcast %"class.std::__1::vector"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #13
  %355 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 1
  %357 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %354, i8 0, i64 24, i1 false) #13
  %358 = icmp eq i16 %353, 1
  br i1 %358, label %359, label %491

359:                                              ; preds = %350
  %360 = bitcast %"class.base::BigEndianReader"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %360) #13
  %361 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %21, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %360, i8 -86, i64 16, i1 false) #13
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %21, i8* %352, i64 %351) #13
  %362 = bitcast %"class.std::__1::vector"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #13
  %363 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %364 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 1
  %365 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %362, i8 0, i64 24, i1 false) #13
  %366 = bitcast %"class.base::BasicStringPiece"* %23 to i8*
  %367 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 0
  %368 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %23, i64 0, i32 1
  %369 = bitcast i8** %24 to i8*
  %370 = bitcast i64* %25 to i8*
  %371 = bitcast %"class.std::__1::basic_string"** %364 to i64*
  %372 = bitcast i8** %361 to i64*
  %373 = bitcast %"class.base::BigEndianReader"* %21 to i64*
  br label %374

374:                                              ; preds = %409, %359
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %366) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 0, i64 16, i1 false) #13
  %375 = call zeroext i1 @_ZN4base15BigEndianReader20ReadU8LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %21, %"class.base::BasicStringPiece"* nonnull %23) #13
  br i1 %375, label %376, label %437

376:                                              ; preds = %374
  %377 = load i64, i64* %368, align 8
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %437, label %379

379:                                              ; preds = %376
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #13
  %380 = load i8*, i8** %367, align 8
  store i8* %380, i8** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %370) #13
  store i64 %377, i64* %25, align 8
  %381 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %364, align 8
  %382 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %365, align 16
  %383 = icmp ult %"class.std::__1::basic_string"* %381, %382
  br i1 %383, label %384, label %408

384:                                              ; preds = %379
  %385 = icmp ugt i64 %377, -17
  br i1 %385, label %386, label %388

386:                                              ; preds = %384
  %387 = bitcast %"class.std::__1::basic_string"* %381 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %387) #15
  unreachable

388:                                              ; preds = %384
  %389 = icmp ult i64 %377, 23
  br i1 %389, label %398, label %390

390:                                              ; preds = %388
  %391 = add nuw i64 %377, 16
  %392 = and i64 %391, -16
  %393 = call i8* @_Znwm(i64 %392) #14
  %394 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %381, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %393, i8** %394, align 8
  %395 = or i64 %392, -9223372036854775808
  %396 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %381, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %395, i64* %396, align 8
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %381, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %377, i64* %397, align 8
  br label %403

398:                                              ; preds = %388
  %399 = trunc i64 %377 to i8
  %400 = bitcast %"class.std::__1::basic_string"* %381 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %401 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %400, i64 0, i32 1, i32 0
  store i8 %399, i8* %401, align 1
  %402 = bitcast %"class.std::__1::basic_string"* %381 to i8*
  br label %403

403:                                              ; preds = %398, %390
  %404 = phi i8* [ %393, %390 ], [ %402, %398 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %404, i8* align 1 %380, i64 %377, i1 false) #13
  %405 = getelementptr inbounds i8, i8* %404, i64 %377
  store i8 0, i8* %405, align 1
  %406 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %381, i64 1
  %407 = ptrtoint %"class.std::__1::basic_string"* %406 to i64
  store i64 %407, i64* %371, align 8
  br label %409

408:                                              ; preds = %379
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector"* nonnull %22, i8** nonnull dereferenceable(8) %24, i64* nonnull dereferenceable(8) %25) #13
  br label %409

409:                                              ; preds = %408, %403
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %370) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366) #13
  %410 = load i64, i64* %372, align 8
  %411 = load i64, i64* %373, align 8
  %412 = icmp eq i64 %410, %411
  br i1 %412, label %413, label %374

413:                                              ; preds = %409
  %414 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %355, align 16
  %415 = icmp eq %"class.std::__1::basic_string"* %414, null
  br i1 %415, label %462, label %416

416:                                              ; preds = %413
  %417 = bitcast %"class.std::__1::basic_string"* %414 to i8*
  %418 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %356, align 8
  %419 = icmp eq %"class.std::__1::basic_string"* %418, %414
  br i1 %419, label %435, label %420

420:                                              ; preds = %416, %430
  %421 = phi %"class.std::__1::basic_string"* [ %422, %430 ], [ %418, %416 ]
  %422 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %421, i64 -1
  %423 = bitcast %"class.std::__1::basic_string"* %422 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %424 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %423, i64 0, i32 1, i32 0
  %425 = load i8, i8* %424, align 1
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %420
  %428 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %422, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  call void @_ZdlPv(i8* %429) #14
  br label %430

430:                                              ; preds = %427, %420
  %431 = icmp eq %"class.std::__1::basic_string"* %422, %414
  br i1 %431, label %432, label %420

432:                                              ; preds = %430
  %433 = bitcast %"class.std::__1::vector"* %47 to i8**
  %434 = load i8*, i8** %433, align 16
  br label %435

435:                                              ; preds = %432, %416
  %436 = phi i8* [ %434, %432 ], [ %417, %416 ]
  store %"class.std::__1::basic_string"* %414, %"class.std::__1::basic_string"** %356, align 8
  call void @_ZdlPv(i8* %436) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %354, i8 0, i64 24, i1 false) #13
  br label %462

437:                                              ; preds = %376, %374
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %366) #13
  %438 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %363, align 16
  %439 = icmp eq %"class.std::__1::basic_string"* %438, null
  br i1 %439, label %461, label %440

440:                                              ; preds = %437
  %441 = bitcast %"class.std::__1::basic_string"* %438 to i8*
  %442 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %364, align 8
  %443 = icmp eq %"class.std::__1::basic_string"* %442, %438
  br i1 %443, label %459, label %444

444:                                              ; preds = %440, %454
  %445 = phi %"class.std::__1::basic_string"* [ %446, %454 ], [ %442, %440 ]
  %446 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %445, i64 -1
  %447 = bitcast %"class.std::__1::basic_string"* %446 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %448 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %447, i64 0, i32 1, i32 0
  %449 = load i8, i8* %448, align 1
  %450 = icmp slt i8 %449, 0
  br i1 %450, label %451, label %454

451:                                              ; preds = %444
  %452 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %446, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load i8*, i8** %452, align 8
  call void @_ZdlPv(i8* %453) #14
  br label %454

454:                                              ; preds = %451, %444
  %455 = icmp eq %"class.std::__1::basic_string"* %446, %438
  br i1 %455, label %456, label %444

456:                                              ; preds = %454
  %457 = bitcast %"class.std::__1::vector"* %22 to i8**
  %458 = load i8*, i8** %457, align 16
  br label %459

459:                                              ; preds = %456, %440
  %460 = phi i8* [ %458, %456 ], [ %441, %440 ]
  store %"class.std::__1::basic_string"* %438, %"class.std::__1::basic_string"** %364, align 8
  call void @_ZdlPv(i8* %460) #14
  br label %461

461:                                              ; preds = %437, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %360) #13
  br label %989

462:                                              ; preds = %435, %413
  %463 = bitcast %"class.std::__1::vector"* %22 to <2 x i64>*
  %464 = load <2 x i64>, <2 x i64>* %463, align 16
  %465 = bitcast %"class.std::__1::vector"* %47 to <2 x i64>*
  store <2 x i64> %464, <2 x i64>* %465, align 16
  %466 = bitcast %"class.std::__1::basic_string"** %365 to i64*
  %467 = load i64, i64* %466, align 16
  %468 = bitcast %"class.std::__1::basic_string"** %357 to i64*
  store i64 %467, i64* %468, align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %360) #13
  %469 = load i64, i64* %72, align 8
  %470 = load i64, i64* %74, align 8
  %471 = icmp eq i64 %469, %470
  br i1 %471, label %472, label %474

472:                                              ; preds = %462
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #13
  store i8 1, i8* %48, align 1
  %473 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %473) #13
  store i32 -1431655936, i32* %49, align 4
  br label %559

474:                                              ; preds = %462
  %475 = bitcast i16* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %475) #13
  store i16 -21846, i16* %19, align 2
  %476 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %19) #13
  %477 = load i16, i16* %19, align 2
  %478 = icmp ugt i16 %477, 1
  %479 = and i1 %476, %478
  br i1 %479, label %480, label %489

480:                                              ; preds = %474
  %481 = bitcast %"class.base::BasicStringPiece"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %481) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %481, i8 0, i64 16, i1 false) #13
  %482 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %20) #13
  br i1 %482, label %483, label %490

483:                                              ; preds = %480
  %484 = load i16, i16* %19, align 2
  %485 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 0
  %486 = load i8*, i8** %485, align 8
  %487 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %20, i64 0, i32 1
  %488 = load i64, i64* %487, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %481) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %475) #13
  br label %491

489:                                              ; preds = %474
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %475) #13
  br label %989

490:                                              ; preds = %480
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %481) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %475) #13
  br label %989

491:                                              ; preds = %483, %350
  %492 = phi i64 [ %351, %350 ], [ %488, %483 ]
  %493 = phi i8* [ %352, %350 ], [ %486, %483 ]
  %494 = phi i16 [ %353, %350 ], [ %484, %483 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #13
  store i8 1, i8* %48, align 1
  %495 = icmp eq i16 %494, 2
  br i1 %495, label %496, label %521

496:                                              ; preds = %491
  %497 = icmp eq i64 %492, 0
  br i1 %497, label %498, label %987

498:                                              ; preds = %496
  store i8 0, i8* %48, align 1
  %499 = load i64, i64* %72, align 8
  %500 = load i64, i64* %74, align 8
  %501 = icmp eq i64 %499, %500
  br i1 %501, label %502, label %504

502:                                              ; preds = %498
  %503 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %503) #13
  store i32 -1431655936, i32* %49, align 4
  br label %559

504:                                              ; preds = %498
  %505 = bitcast i16* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %505) #13
  store i16 -21846, i16* %17, align 2
  %506 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %17) #13
  %507 = load i16, i16* %17, align 2
  %508 = icmp ugt i16 %507, 2
  %509 = and i1 %506, %508
  br i1 %509, label %510, label %519

510:                                              ; preds = %504
  %511 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %511) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %511, i8 0, i64 16, i1 false) #13
  %512 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %18) #13
  br i1 %512, label %513, label %520

513:                                              ; preds = %510
  %514 = load i16, i16* %17, align 2
  %515 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  %516 = load i8*, i8** %515, align 8
  %517 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  %518 = load i64, i64* %517, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %511) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %505) #13
  br label %521

519:                                              ; preds = %504
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %505) #13
  br label %987

520:                                              ; preds = %510
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %511) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %505) #13
  br label %987

521:                                              ; preds = %513, %491
  %522 = phi i64 [ %492, %491 ], [ %518, %513 ]
  %523 = phi i8* [ %493, %491 ], [ %516, %513 ]
  %524 = phi i16 [ %494, %491 ], [ %514, %513 ]
  %525 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %525) #13
  store i32 -1431655936, i32* %49, align 4
  %526 = icmp eq i16 %524, 3
  br i1 %526, label %527, label %559

527:                                              ; preds = %521
  %528 = icmp eq i64 %522, 2
  br i1 %528, label %529, label %984

529:                                              ; preds = %527
  %530 = load i8, i8* %523, align 1
  %531 = zext i8 %530 to i32
  %532 = shl nuw nsw i32 %531, 8
  %533 = getelementptr inbounds i8, i8* %523, i64 1
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = or i32 %532, %535
  %537 = shl nuw i32 %536, 16
  %538 = or i32 %537, 1
  store i32 %538, i32* %49, align 4
  %539 = load i64, i64* %72, align 8
  %540 = load i64, i64* %74, align 8
  %541 = icmp eq i64 %539, %540
  br i1 %541, label %559, label %542

542:                                              ; preds = %529
  %543 = bitcast i16* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %543) #13
  store i16 -21846, i16* %15, align 2
  %544 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %15) #13
  %545 = load i16, i16* %15, align 2
  %546 = icmp ugt i16 %545, 3
  %547 = and i1 %544, %546
  br i1 %547, label %548, label %557

548:                                              ; preds = %542
  %549 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %549) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %549, i8 0, i64 16, i1 false) #13
  %550 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %16) #13
  br i1 %550, label %551, label %558

551:                                              ; preds = %548
  %552 = load i16, i16* %15, align 2
  %553 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  %554 = load i8*, i8** %553, align 8
  %555 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  %556 = load i64, i64* %555, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %549) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %543) #13
  br label %559

557:                                              ; preds = %542
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %543) #13
  br label %984

558:                                              ; preds = %548
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %549) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %543) #13
  br label %984

559:                                              ; preds = %472, %529, %551, %502, %521
  %560 = phi i8* [ %525, %521 ], [ %503, %502 ], [ %525, %551 ], [ %525, %529 ], [ %473, %472 ]
  %561 = phi i64 [ %522, %521 ], [ 0, %502 ], [ %556, %551 ], [ 2, %529 ], [ %351, %472 ]
  %562 = phi i8* [ %523, %521 ], [ %493, %502 ], [ %554, %551 ], [ %523, %529 ], [ %352, %472 ]
  %563 = phi i16 [ %524, %521 ], [ 2, %502 ], [ %552, %551 ], [ 3, %529 ], [ 1, %472 ]
  %564 = bitcast %"class.std::__1::vector.33"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %564) #13
  %565 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %51, i64 0, i32 0, i32 0
  %566 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %51, i64 0, i32 0, i32 1
  %567 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %51, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %564, i8 0, i64 24, i1 false) #13
  %568 = icmp eq i16 %563, 4
  br i1 %568, label %569, label %653

569:                                              ; preds = %559
  %570 = bitcast i32* %14 to [4 x i8]*
  %571 = bitcast %"class.base::BigEndianReader"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %571) #13
  %572 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %12, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %571, i8 -86, i64 16, i1 false) #13
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %12, i8* %562, i64 %561) #13
  %573 = bitcast %"class.std::__1::vector.33"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %573) #13
  %574 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %13, i64 0, i32 0, i32 0
  %575 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %13, i64 0, i32 0, i32 1
  %576 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %573, i8 0, i64 24, i1 false) #13
  %577 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %577) #13
  %578 = bitcast %"class.net::IPAddress"** %575 to i64*
  %579 = bitcast i8** %572 to i64*
  %580 = bitcast %"class.base::BigEndianReader"* %12 to i64*
  store i32 -1431655766, i32* %14, align 4
  br label %581

581:                                              ; preds = %591, %569
  %582 = call zeroext i1 @_ZN4base15BigEndianReader9ReadBytesEPvm(%"class.base::BigEndianReader"* nonnull %12, i8* nonnull %577, i64 4) #13
  br i1 %582, label %583, label %610

583:                                              ; preds = %581
  %584 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %575, align 8
  %585 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %576, align 16
  %586 = icmp ult %"class.net::IPAddress"* %584, %585
  br i1 %586, label %587, label %590

587:                                              ; preds = %583
  call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* %584, i8* nonnull %577, i64 4) #13
  %588 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %584, i64 1
  %589 = ptrtoint %"class.net::IPAddress"* %588 to i64
  store i64 %589, i64* %578, align 8
  br label %591

590:                                              ; preds = %583
  call void @_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA4_hEEEvDpOT_(%"class.std::__1::vector.33"* nonnull %13, [4 x i8]* nonnull dereferenceable(4) %570) #13
  br label %591

591:                                              ; preds = %590, %587
  %592 = load i64, i64* %579, align 8
  %593 = load i64, i64* %580, align 8
  %594 = icmp eq i64 %592, %593
  br i1 %594, label %595, label %581

595:                                              ; preds = %591
  %596 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %565, align 16
  %597 = icmp eq %"class.net::IPAddress"* %596, null
  br i1 %597, label %626, label %598

598:                                              ; preds = %595
  %599 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %566, align 8
  %600 = icmp eq %"class.net::IPAddress"* %599, %596
  br i1 %600, label %607, label %601

601:                                              ; preds = %598, %601
  %602 = phi %"class.net::IPAddress"* [ %603, %601 ], [ %599, %598 ]
  %603 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %602, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %603) #13
  %604 = icmp eq %"class.net::IPAddress"* %603, %596
  br i1 %604, label %605, label %601

605:                                              ; preds = %601
  %606 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %565, align 16
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi %"class.net::IPAddress"* [ %606, %605 ], [ %596, %598 ]
  store %"class.net::IPAddress"* %596, %"class.net::IPAddress"** %566, align 8
  %609 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %608, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %609) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %564, i8 0, i64 24, i1 false) #13
  br label %626

610:                                              ; preds = %581
  %611 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %574, align 16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %577) #13
  %612 = icmp eq %"class.net::IPAddress"* %611, null
  br i1 %612, label %625, label %613

613:                                              ; preds = %610
  %614 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %575, align 8
  %615 = icmp eq %"class.net::IPAddress"* %614, %611
  br i1 %615, label %622, label %616

616:                                              ; preds = %613, %616
  %617 = phi %"class.net::IPAddress"* [ %618, %616 ], [ %614, %613 ]
  %618 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %617, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %618) #13
  %619 = icmp eq %"class.net::IPAddress"* %618, %611
  br i1 %619, label %620, label %616

620:                                              ; preds = %616
  %621 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %574, align 16
  br label %622

622:                                              ; preds = %620, %613
  %623 = phi %"class.net::IPAddress"* [ %621, %620 ], [ %611, %613 ]
  store %"class.net::IPAddress"* %611, %"class.net::IPAddress"** %575, align 8
  %624 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %623, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %624) #14
  br label %625

625:                                              ; preds = %610, %622
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %573) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %571) #13
  br label %967

626:                                              ; preds = %607, %595
  %627 = bitcast %"class.std::__1::vector.33"* %13 to <2 x i64>*
  %628 = load <2 x i64>, <2 x i64>* %627, align 16
  %629 = bitcast %"class.std::__1::vector.33"* %51 to <2 x i64>*
  store <2 x i64> %628, <2 x i64>* %629, align 16
  %630 = bitcast %"class.net::IPAddress"** %576 to i64*
  %631 = load i64, i64* %630, align 16
  %632 = bitcast %"class.net::IPAddress"** %567 to i64*
  store i64 %631, i64* %632, align 16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %577) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %573) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %571) #13
  %633 = load i64, i64* %72, align 8
  %634 = load i64, i64* %74, align 8
  %635 = icmp eq i64 %633, %634
  br i1 %635, label %653, label %636

636:                                              ; preds = %626
  %637 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %637) #13
  store i16 -21846, i16* %10, align 2
  %638 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %10) #13
  %639 = load i16, i16* %10, align 2
  %640 = icmp ugt i16 %639, 4
  %641 = and i1 %638, %640
  br i1 %641, label %642, label %651

642:                                              ; preds = %636
  %643 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %643) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %643, i8 0, i64 16, i1 false) #13
  %644 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %11) #13
  br i1 %644, label %645, label %652

645:                                              ; preds = %642
  %646 = load i16, i16* %10, align 2
  %647 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  %650 = load i64, i64* %649, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %643) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %637) #13
  br label %653

651:                                              ; preds = %636
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %637) #13
  br label %967

652:                                              ; preds = %642
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %643) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %637) #13
  br label %967

653:                                              ; preds = %645, %626, %559
  %654 = phi i64 [ %561, %626 ], [ %561, %559 ], [ %650, %645 ]
  %655 = phi i8* [ %562, %626 ], [ %562, %559 ], [ %648, %645 ]
  %656 = phi i16 [ 4, %626 ], [ %563, %559 ], [ %646, %645 ]
  %657 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %657) #13
  %658 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %657, i8 0, i64 24, i1 false) #13
  %659 = icmp eq i16 %656, 5
  br i1 %659, label %660, label %706

660:                                              ; preds = %653
  %661 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %661) #13
  %662 = icmp ugt i64 %654, -17
  br i1 %662, label %663, label %665

663:                                              ; preds = %660
  %664 = bitcast %"class.std::__1::basic_string"* %53 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %664) #15
  unreachable

665:                                              ; preds = %660
  %666 = icmp ult i64 %654, 23
  br i1 %666, label %675, label %667

667:                                              ; preds = %665
  %668 = add nuw i64 %654, 16
  %669 = and i64 %668, -16
  %670 = call i8* @_Znwm(i64 %669) #14
  %671 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %670, i8** %671, align 8
  %672 = or i64 %669, -9223372036854775808
  %673 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %672, i64* %673, align 8
  %674 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %654, i64* %674, align 8
  br label %680

675:                                              ; preds = %665
  %676 = trunc i64 %654 to i8
  %677 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %677, i64 0, i32 1, i32 0
  store i8 %676, i8* %678, align 1
  %679 = icmp eq i64 %654, 0
  br i1 %679, label %682, label %680

680:                                              ; preds = %675, %667
  %681 = phi i8* [ %670, %667 ], [ %661, %675 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %681, i8* align 1 %655, i64 %654, i1 false) #13
  br label %682

682:                                              ; preds = %675, %680
  %683 = phi i8* [ %661, %675 ], [ %681, %680 ]
  %684 = getelementptr inbounds i8, i8* %683, i64 %654
  store i8 0, i8* %684, align 1
  %685 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %686 = load i64, i64* %72, align 8
  %687 = load i64, i64* %74, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %657, i8* nonnull align 8 %661, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %661) #13
  %688 = icmp eq i64 %686, %687
  br i1 %688, label %706, label %689

689:                                              ; preds = %682
  %690 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %690) #13
  store i16 -21846, i16* %8, align 2
  %691 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %8) #13
  %692 = load i16, i16* %8, align 2
  %693 = icmp ugt i16 %692, 5
  %694 = and i1 %691, %693
  br i1 %694, label %695, label %704

695:                                              ; preds = %689
  %696 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %696) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %696, i8 0, i64 16, i1 false) #13
  %697 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %9) #13
  br i1 %697, label %698, label %705

698:                                              ; preds = %695
  %699 = load i16, i16* %8, align 2
  %700 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %701 = load i8*, i8** %700, align 8
  %702 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %703 = load i64, i64* %702, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %696) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %690) #13
  br label %706

704:                                              ; preds = %689
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %690) #13
  br label %958

705:                                              ; preds = %695
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %696) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %690) #13
  br label %958

706:                                              ; preds = %698, %682, %653
  %707 = phi i64 [ %654, %682 ], [ %654, %653 ], [ %703, %698 ]
  %708 = phi i8* [ %655, %682 ], [ %655, %653 ], [ %701, %698 ]
  %709 = phi i16 [ 5, %682 ], [ %656, %653 ], [ %699, %698 ]
  %710 = bitcast %"class.std::__1::vector.33"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %710) #13
  %711 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %54, i64 0, i32 0, i32 0
  %712 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %54, i64 0, i32 0, i32 1
  %713 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %54, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %710, i8 0, i64 24, i1 false) #13
  %714 = icmp eq i16 %709, 6
  br i1 %714, label %715, label %798

715:                                              ; preds = %706
  %716 = bitcast %"class.base::BigEndianReader"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %716) #13
  %717 = getelementptr inbounds %"class.base::BigEndianReader", %"class.base::BigEndianReader"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %716, i8 -86, i64 16, i1 false) #13
  call void @_ZN4base15BigEndianReaderC1EPKcm(%"class.base::BigEndianReader"* nonnull %5, i8* %708, i64 %707) #13
  %718 = bitcast %"class.std::__1::vector.33"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %718) #13
  %719 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 0
  %720 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 1
  %721 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %718, i8 0, i64 24, i1 false) #13
  %722 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %722) #13
  %723 = bitcast %"class.net::IPAddress"** %720 to i64*
  %724 = bitcast i8** %717 to i64*
  %725 = bitcast %"class.base::BigEndianReader"* %5 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %722, i8 -86, i64 16, i1 false) #13
  br label %726

726:                                              ; preds = %736, %715
  %727 = call zeroext i1 @_ZN4base15BigEndianReader9ReadBytesEPvm(%"class.base::BigEndianReader"* nonnull %5, i8* nonnull %722, i64 16) #13
  br i1 %727, label %728, label %755

728:                                              ; preds = %726
  %729 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %720, align 8
  %730 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %721, align 16
  %731 = icmp ult %"class.net::IPAddress"* %729, %730
  br i1 %731, label %732, label %735

732:                                              ; preds = %728
  call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* %729, i8* nonnull %722, i64 16) #13
  %733 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %729, i64 1
  %734 = ptrtoint %"class.net::IPAddress"* %733 to i64
  store i64 %734, i64* %723, align 8
  br label %736

735:                                              ; preds = %728
  call void @_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA16_hEEEvDpOT_(%"class.std::__1::vector.33"* nonnull %6, [16 x i8]* nonnull dereferenceable(16) %7) #13
  br label %736

736:                                              ; preds = %735, %732
  %737 = load i64, i64* %724, align 8
  %738 = load i64, i64* %725, align 8
  %739 = icmp eq i64 %737, %738
  br i1 %739, label %740, label %726

740:                                              ; preds = %736
  %741 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %711, align 16
  %742 = icmp eq %"class.net::IPAddress"* %741, null
  br i1 %742, label %771, label %743

743:                                              ; preds = %740
  %744 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %712, align 8
  %745 = icmp eq %"class.net::IPAddress"* %744, %741
  br i1 %745, label %752, label %746

746:                                              ; preds = %743, %746
  %747 = phi %"class.net::IPAddress"* [ %748, %746 ], [ %744, %743 ]
  %748 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %747, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %748) #13
  %749 = icmp eq %"class.net::IPAddress"* %748, %741
  br i1 %749, label %750, label %746

750:                                              ; preds = %746
  %751 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %711, align 16
  br label %752

752:                                              ; preds = %750, %743
  %753 = phi %"class.net::IPAddress"* [ %751, %750 ], [ %741, %743 ]
  store %"class.net::IPAddress"* %741, %"class.net::IPAddress"** %712, align 8
  %754 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %753, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %754) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %710, i8 0, i64 24, i1 false) #13
  br label %771

755:                                              ; preds = %726
  %756 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %719, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %722) #13
  %757 = icmp eq %"class.net::IPAddress"* %756, null
  br i1 %757, label %770, label %758

758:                                              ; preds = %755
  %759 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %720, align 8
  %760 = icmp eq %"class.net::IPAddress"* %759, %756
  br i1 %760, label %767, label %761

761:                                              ; preds = %758, %761
  %762 = phi %"class.net::IPAddress"* [ %763, %761 ], [ %759, %758 ]
  %763 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %762, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %763) #13
  %764 = icmp eq %"class.net::IPAddress"* %763, %756
  br i1 %764, label %765, label %761

765:                                              ; preds = %761
  %766 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %719, align 16
  br label %767

767:                                              ; preds = %765, %758
  %768 = phi %"class.net::IPAddress"* [ %766, %765 ], [ %756, %758 ]
  store %"class.net::IPAddress"* %756, %"class.net::IPAddress"** %720, align 8
  %769 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %768, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %769) #14
  br label %770

770:                                              ; preds = %755, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %718) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %716) #13
  br label %940

771:                                              ; preds = %752, %740
  %772 = bitcast %"class.std::__1::vector.33"* %6 to <2 x i64>*
  %773 = load <2 x i64>, <2 x i64>* %772, align 16
  %774 = bitcast %"class.std::__1::vector.33"* %54 to <2 x i64>*
  store <2 x i64> %773, <2 x i64>* %774, align 16
  %775 = bitcast %"class.net::IPAddress"** %721 to i64*
  %776 = load i64, i64* %775, align 16
  %777 = bitcast %"class.net::IPAddress"** %713 to i64*
  store i64 %776, i64* %777, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %722) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %718) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %716) #13
  %778 = load i64, i64* %72, align 8
  %779 = load i64, i64* %74, align 8
  %780 = icmp eq i64 %778, %779
  br i1 %780, label %798, label %781

781:                                              ; preds = %771
  %782 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %782) #13
  store i16 -21846, i16* %3, align 2
  %783 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %3) #13
  %784 = load i16, i16* %3, align 2
  %785 = icmp ugt i16 %784, 6
  %786 = and i1 %783, %785
  br i1 %786, label %787, label %796

787:                                              ; preds = %781
  %788 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %788) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %788, i8 0, i64 16, i1 false) #13
  %789 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %4) #13
  br i1 %789, label %790, label %797

790:                                              ; preds = %787
  %791 = load i16, i16* %3, align 2
  %792 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %793 = load i8*, i8** %792, align 8
  %794 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %795 = load i64, i64* %794, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %788) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %782) #13
  br label %798

796:                                              ; preds = %781
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %782) #13
  br label %940

797:                                              ; preds = %787
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %788) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %782) #13
  br label %940

798:                                              ; preds = %790, %771, %706
  %799 = phi i64 [ %707, %771 ], [ %707, %706 ], [ %795, %790 ]
  %800 = phi i8* [ %708, %771 ], [ %708, %706 ], [ %793, %790 ]
  %801 = phi i16 [ 6, %771 ], [ %709, %706 ], [ %791, %790 ]
  %802 = bitcast %"class.std::__1::map"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %802) #13
  %803 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %55, i64 0, i32 0, i32 0
  %804 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %55, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %805 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %55, i64 0, i32 0, i32 2, i32 0, i32 0
  %806 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %807 = bitcast %"class.std::__1::__tree_node_base"** %804 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %807, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %806, %"class.std::__1::__tree_end_node"** %803, align 8
  %808 = icmp ugt i16 %801, 6
  br i1 %808, label %809, label %926

809:                                              ; preds = %798
  %810 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %810) #13
  %811 = icmp ugt i64 %799, -17
  br i1 %811, label %826, label %812

812:                                              ; preds = %809
  %813 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %814 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %815 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %816 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %817 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %816, i64 0, i32 1, i32 0
  %818 = bitcast %"class.std::__1::__tree_end_node"* %806 to %"class.std::__1::__tree_node.69"**
  %819 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %806, i64 0, i32 0
  %820 = bitcast %"class.logging::CheckError"* %57 to i8*
  %821 = bitcast %"class.std::__1::map"* %55 to i64*
  %822 = bitcast i16* %34 to i8*
  %823 = bitcast %"class.base::BasicStringPiece"* %35 to i8*
  %824 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %35, i64 0, i32 0
  %825 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %35, i64 0, i32 1
  br label %828

826:                                              ; preds = %921, %809
  %827 = bitcast %"class.std::__1::basic_string"* %56 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %827) #15
  unreachable

828:                                              ; preds = %812, %921
  %829 = phi i16 [ %801, %812 ], [ %922, %921 ]
  %830 = phi i8* [ %800, %812 ], [ %923, %921 ]
  %831 = phi i64 [ %799, %812 ], [ %924, %921 ]
  %832 = icmp ult i64 %831, 23
  br i1 %832, label %838, label %833

833:                                              ; preds = %828
  %834 = add nuw i64 %831, 16
  %835 = and i64 %834, -16
  %836 = call i8* @_Znwm(i64 %835) #14
  store i8* %836, i8** %813, align 8, !alias.scope !6
  %837 = or i64 %835, -9223372036854775808
  store i64 %837, i64* %814, align 8, !alias.scope !6
  store i64 %831, i64* %815, align 8, !alias.scope !6
  br label %841

838:                                              ; preds = %828
  %839 = trunc i64 %831 to i8
  store i8 %839, i8* %817, align 1, !alias.scope !6
  %840 = icmp eq i64 %831, 0
  br i1 %840, label %843, label %841

841:                                              ; preds = %838, %833
  %842 = phi i8* [ %836, %833 ], [ %810, %838 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %842, i8* align 1 %830, i64 %831, i1 false) #13
  br label %843

843:                                              ; preds = %838, %841
  %844 = phi i8* [ %810, %838 ], [ %842, %841 ]
  %845 = getelementptr inbounds i8, i8* %844, i64 %831
  store i8 0, i8* %845, align 1
  %846 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %818, align 8
  %847 = icmp eq %"class.std::__1::__tree_node.69"* %846, null
  br i1 %847, label %874, label %848

848:                                              ; preds = %843, %870
  %849 = phi %"class.std::__1::__tree_node.69"* [ %873, %870 ], [ %846, %843 ]
  %850 = phi %"class.std::__1::__tree_node_base"** [ %872, %870 ], [ %804, %843 ]
  %851 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 1, i32 0, i32 0
  %852 = load i16, i16* %851, align 2
  %853 = icmp ult i16 %829, %852
  br i1 %853, label %854, label %860

854:                                              ; preds = %848
  %855 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 0, i32 0, i32 0
  %856 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %855, align 8
  %857 = icmp eq %"class.std::__1::__tree_node_base"* %856, null
  br i1 %857, label %858, label %870

858:                                              ; preds = %854
  %859 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 0, i32 0
  br label %874

860:                                              ; preds = %848
  %861 = icmp ult i16 %852, %829
  br i1 %861, label %862, label %868

862:                                              ; preds = %860
  %863 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 0, i32 1
  %864 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %863, align 8
  %865 = icmp eq %"class.std::__1::__tree_node_base"* %864, null
  br i1 %865, label %866, label %870

866:                                              ; preds = %862
  %867 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 0, i32 0
  br label %874

868:                                              ; preds = %860
  %869 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %849, i64 0, i32 0, i32 0
  br label %874

870:                                              ; preds = %862, %854
  %871 = phi %"class.std::__1::__tree_node_base"* [ %856, %854 ], [ %864, %862 ]
  %872 = phi %"class.std::__1::__tree_node_base"** [ %855, %854 ], [ %863, %862 ]
  %873 = bitcast %"class.std::__1::__tree_node_base"* %871 to %"class.std::__1::__tree_node.69"*
  br label %848

874:                                              ; preds = %843, %868, %866, %858
  %875 = phi %"class.std::__1::__tree_end_node"* [ %859, %858 ], [ %867, %866 ], [ %869, %868 ], [ %806, %843 ]
  %876 = phi %"class.std::__1::__tree_node_base"** [ %855, %858 ], [ %863, %866 ], [ %850, %868 ], [ %819, %843 ]
  %877 = bitcast %"class.std::__1::__tree_node_base"** %876 to %"class.std::__1::__tree_node.69"**
  %878 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %877, align 8
  %879 = icmp eq %"class.std::__1::__tree_node.69"* %878, null
  br i1 %879, label %880, label %901

880:                                              ; preds = %874
  %881 = call i8* @_Znwm(i64 64) #14, !noalias !9
  %882 = getelementptr inbounds i8, i8* %881, i64 32
  %883 = bitcast i8* %882 to i16*
  store i16 %829, i16* %883, align 8, !noalias !9
  %884 = getelementptr inbounds i8, i8* %881, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %884, i8* nonnull align 8 %810, i64 24, i1 false) #13, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %810, i8 0, i64 24, i1 false) #13, !noalias !9
  %885 = bitcast i8* %881 to %"class.std::__1::__tree_node_base"*
  %886 = getelementptr inbounds i8, i8* %881, i64 16
  %887 = bitcast i8* %886 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %881, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %875, %"class.std::__1::__tree_end_node"** %887, align 8
  %888 = bitcast %"class.std::__1::__tree_node_base"** %876 to i8**
  store i8* %881, i8** %888, align 8
  %889 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %803, align 8
  %890 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %889, i64 0, i32 0
  %891 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %890, align 8
  %892 = icmp eq %"class.std::__1::__tree_node_base"* %891, null
  br i1 %892, label %896, label %893

893:                                              ; preds = %880
  %894 = ptrtoint %"class.std::__1::__tree_node_base"* %891 to i64
  store i64 %894, i64* %821, align 8
  %895 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %876, align 8
  br label %896

896:                                              ; preds = %880, %893
  %897 = phi %"class.std::__1::__tree_node_base"* [ %885, %880 ], [ %895, %893 ]
  %898 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %804, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %898, %"class.std::__1::__tree_node_base"* %897) #13
  %899 = load i64, i64* %805, align 8
  %900 = add i64 %899, 1
  store i64 %900, i64* %805, align 8
  br label %903

901:                                              ; preds = %874
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %820) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %57, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 439, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.5, i64 0, i64 0)) #13
  %902 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %57) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %57) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %820) #13
  br label %903

903:                                              ; preds = %896, %901
  %904 = load i8, i8* %817, align 1
  %905 = icmp slt i8 %904, 0
  br i1 %905, label %906, label %908

906:                                              ; preds = %903
  %907 = load i8*, i8** %813, align 8
  call void @_ZdlPv(i8* %907) #14
  br label %908

908:                                              ; preds = %903, %906
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %810) #13
  %909 = load i64, i64* %72, align 8
  %910 = load i64, i64* %74, align 8
  %911 = icmp eq i64 %909, %910
  br i1 %911, label %926, label %912

912:                                              ; preds = %908
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %822) #13
  store i16 -21846, i16* %34, align 2
  %913 = call zeroext i1 @_ZN4base15BigEndianReader7ReadU16EPt(%"class.base::BigEndianReader"* nonnull %36, i16* nonnull %34) #13
  %914 = load i16, i16* %34, align 2
  %915 = icmp ugt i16 %914, %829
  %916 = and i1 %913, %915
  br i1 %916, label %917, label %920

917:                                              ; preds = %912
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %823) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %823, i8 0, i64 16, i1 false) #13
  %918 = call zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"* nonnull %36, %"class.base::BasicStringPiece"* nonnull %35) #13
  br i1 %918, label %921, label %919

919:                                              ; preds = %917
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %823) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %822) #13
  br label %935

920:                                              ; preds = %912
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %822) #13
  br label %935

921:                                              ; preds = %917
  %922 = load i16, i16* %34, align 2
  %923 = load i8*, i8** %824, align 8
  %924 = load i64, i64* %825, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %823) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %822) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %810) #13
  %925 = icmp ugt i64 %924, -17
  br i1 %925, label %826, label %828

926:                                              ; preds = %908, %798
  %927 = load i8, i8* %68, align 8, !range !2
  %928 = icmp eq i8 %927, 0
  br i1 %928, label %929, label %930

929:                                              ; preds = %926
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #15
  unreachable

930:                                              ; preds = %926
  %931 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %932 = call %"class.net::ServiceFormHttpsRecordRdata"* @_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEERbRN4absl8optionalItEENSF_INS1_9IPAddressENS7_ISN_EEEES9_SP_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i16* nonnull dereferenceable(2) %37, %"class.std::__1::basic_string"* dereferenceable(24) %931, %"class.std::__1::set"* nonnull dereferenceable(24) %46, %"class.std::__1::vector"* nonnull dereferenceable(24) %47, i8* nonnull dereferenceable(1) %48, %"class.absl::optional"* nonnull dereferenceable(4) %50, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %51, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %52, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %54, %"class.std::__1::map"* nonnull dereferenceable(24) %55)
  %933 = ptrtoint %"class.net::ServiceFormHttpsRecordRdata"* %932 to i64
  %934 = bitcast %"class.std::__1::__tree_end_node"* %806 to %"class.std::__1::__tree_node.69"**
  br label %935

935:                                              ; preds = %920, %919, %930
  %936 = phi %"class.std::__1::__tree_node.69"** [ %818, %920 ], [ %818, %919 ], [ %934, %930 ]
  %937 = phi i64 [ 0, %920 ], [ 0, %919 ], [ %933, %930 ]
  %938 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %55, i64 0, i32 0
  %939 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %936, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* nonnull %938, %"class.std::__1::__tree_node.69"* %939) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %802) #13
  br label %940

940:                                              ; preds = %796, %797, %935, %770
  %941 = phi i64 [ %937, %935 ], [ 0, %770 ], [ 0, %797 ], [ 0, %796 ]
  %942 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %711, align 16
  %943 = icmp eq %"class.net::IPAddress"* %942, null
  br i1 %943, label %956, label %944

944:                                              ; preds = %940
  %945 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %712, align 8
  %946 = icmp eq %"class.net::IPAddress"* %945, %942
  br i1 %946, label %953, label %947

947:                                              ; preds = %944, %947
  %948 = phi %"class.net::IPAddress"* [ %949, %947 ], [ %945, %944 ]
  %949 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %948, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %949) #13
  %950 = icmp eq %"class.net::IPAddress"* %949, %942
  br i1 %950, label %951, label %947

951:                                              ; preds = %947
  %952 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %711, align 16
  br label %953

953:                                              ; preds = %951, %944
  %954 = phi %"class.net::IPAddress"* [ %952, %951 ], [ %942, %944 ]
  store %"class.net::IPAddress"* %942, %"class.net::IPAddress"** %712, align 8
  %955 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %954, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %955) #14
  br label %956

956:                                              ; preds = %940, %953
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %710) #13
  %957 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %958

958:                                              ; preds = %704, %705, %956
  %959 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %685, %704 ], [ %685, %705 ], [ %957, %956 ]
  %960 = phi i64 [ 0, %704 ], [ 0, %705 ], [ %941, %956 ]
  %961 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %959, i64 0, i32 1, i32 0
  %962 = load i8, i8* %961, align 1
  %963 = icmp slt i8 %962, 0
  br i1 %963, label %964, label %966

964:                                              ; preds = %958
  %965 = load i8*, i8** %658, align 8
  call void @_ZdlPv(i8* %965) #14
  br label %966

966:                                              ; preds = %958, %964
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %657) #13
  br label %967

967:                                              ; preds = %651, %652, %966, %625
  %968 = phi i64 [ %960, %966 ], [ 0, %625 ], [ 0, %652 ], [ 0, %651 ]
  %969 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %565, align 16
  %970 = icmp eq %"class.net::IPAddress"* %969, null
  br i1 %970, label %983, label %971

971:                                              ; preds = %967
  %972 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %566, align 8
  %973 = icmp eq %"class.net::IPAddress"* %972, %969
  br i1 %973, label %980, label %974

974:                                              ; preds = %971, %974
  %975 = phi %"class.net::IPAddress"* [ %976, %974 ], [ %972, %971 ]
  %976 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %975, i64 -1
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %976) #13
  %977 = icmp eq %"class.net::IPAddress"* %976, %969
  br i1 %977, label %978, label %974

978:                                              ; preds = %974
  %979 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %565, align 16
  br label %980

980:                                              ; preds = %978, %971
  %981 = phi %"class.net::IPAddress"* [ %979, %978 ], [ %969, %971 ]
  store %"class.net::IPAddress"* %969, %"class.net::IPAddress"** %566, align 8
  %982 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %981, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %982) #14
  br label %983

983:                                              ; preds = %967, %980
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %564) #13
  br label %984

984:                                              ; preds = %557, %558, %527, %983
  %985 = phi i8* [ %560, %983 ], [ %525, %527 ], [ %525, %558 ], [ %525, %557 ]
  %986 = phi i64 [ %968, %983 ], [ 0, %527 ], [ 0, %558 ], [ 0, %557 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %985) #13
  br label %987

987:                                              ; preds = %519, %520, %496, %984
  %988 = phi i64 [ %986, %984 ], [ 0, %496 ], [ 0, %520 ], [ 0, %519 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #13
  br label %989

989:                                              ; preds = %489, %490, %987, %461
  %990 = phi i64 [ %988, %987 ], [ 0, %461 ], [ 0, %490 ], [ 0, %489 ]
  %991 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %355, align 16
  %992 = icmp eq %"class.std::__1::basic_string"* %991, null
  br i1 %992, label %1014, label %993

993:                                              ; preds = %989
  %994 = bitcast %"class.std::__1::basic_string"* %991 to i8*
  %995 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %356, align 8
  %996 = icmp eq %"class.std::__1::basic_string"* %995, %991
  br i1 %996, label %1012, label %997

997:                                              ; preds = %993, %1007
  %998 = phi %"class.std::__1::basic_string"* [ %999, %1007 ], [ %995, %993 ]
  %999 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %998, i64 -1
  %1000 = bitcast %"class.std::__1::basic_string"* %999 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1001 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1000, i64 0, i32 1, i32 0
  %1002 = load i8, i8* %1001, align 1
  %1003 = icmp slt i8 %1002, 0
  br i1 %1003, label %1004, label %1007

1004:                                             ; preds = %997
  %1005 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %999, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1006 = load i8*, i8** %1005, align 8
  call void @_ZdlPv(i8* %1006) #14
  br label %1007

1007:                                             ; preds = %1004, %997
  %1008 = icmp eq %"class.std::__1::basic_string"* %999, %991
  br i1 %1008, label %1009, label %997

1009:                                             ; preds = %1007
  %1010 = bitcast %"class.std::__1::vector"* %47 to i8**
  %1011 = load i8*, i8** %1010, align 16
  br label %1012

1012:                                             ; preds = %1009, %993
  %1013 = phi i8* [ %1011, %1009 ], [ %994, %993 ]
  store %"class.std::__1::basic_string"* %991, %"class.std::__1::basic_string"** %356, align 8
  call void @_ZdlPv(i8* %1013) #14
  br label %1014

1014:                                             ; preds = %989, %1012
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #13
  br label %1015

1015:                                             ; preds = %308, %348, %349, %1014
  %1016 = phi i64 [ %990, %1014 ], [ 0, %349 ], [ 0, %348 ], [ 0, %308 ]
  %1017 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %46, i64 0, i32 0
  %1018 = bitcast %"class.std::__1::__tree_end_node"* %187 to %"class.std::__1::__tree_node"**
  %1019 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %1018, align 8
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %1017, %"class.std::__1::__tree_node"* %1019) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #13
  br label %1020

1020:                                             ; preds = %1015, %176, %172, %165
  %1021 = phi i64 [ 0, %172 ], [ 0, %176 ], [ %1016, %1015 ], [ %94, %165 ]
  %1022 = load i8, i8* %68, align 8
  %1023 = icmp eq i8 %1022, 0
  br i1 %1023, label %1034, label %1024

1024:                                             ; preds = %1020
  %1025 = getelementptr inbounds %"class.absl::optional.50", %"class.absl::optional.50"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1026 = bitcast %"class.std::__1::basic_string"* %1025 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1027 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1026, i64 0, i32 1, i32 0
  %1028 = load i8, i8* %1027, align 1
  %1029 = icmp slt i8 %1028, 0
  br i1 %1029, label %1030, label %1033

1030:                                             ; preds = %1024
  %1031 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1025, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1032 = load i8*, i8** %1031, align 8
  call void @_ZdlPv(i8* %1032) #14
  br label %1033

1033:                                             ; preds = %1030, %1024
  store i8 0, i8* %68, align 8
  br label %1034

1034:                                             ; preds = %67, %1020, %1033
  %1035 = phi i64 [ %1021, %1020 ], [ %1021, %1033 ], [ 0, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #13
  br label %1036

1036:                                             ; preds = %2, %1034
  %1037 = phi i64 [ %1035, %1034 ], [ 0, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %61) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #13
  %1038 = inttoptr i64 %1037 to %"class.net::ServiceFormHttpsRecordRdata"*
  ret %"class.net::ServiceFormHttpsRecordRdata"* %1038
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net16HttpsRecordRdataD0Ev(%"class.net::HttpsRecordRdata"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpsRecordRdata7IsEqualEPKNS_11RecordRdataE(%"class.net::HttpsRecordRdata"*, %"class.net::RecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::RecordRdata"* %1 to i16 (%"class.net::RecordRdata"*)***
  %4 = load i16 (%"class.net::RecordRdata"*)**, i16 (%"class.net::RecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %4, i64 3
  %6 = load i16 (%"class.net::RecordRdata"*)*, i16 (%"class.net::RecordRdata"*)** %5, align 8
  %7 = tail call zeroext i16 %6(%"class.net::RecordRdata"* %1) #13
  %8 = icmp eq i16 %7, 65
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast %"class.net::RecordRdata"* %1 to %"class.net::HttpsRecordRdata"*
  %11 = bitcast %"class.net::HttpsRecordRdata"* %0 to i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)***
  %12 = load i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)** %12, i64 4
  %14 = load i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*, %"class.net::HttpsRecordRdata"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.net::HttpsRecordRdata"* %0, %"class.net::HttpsRecordRdata"* %10) #13
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZNK3net16HttpsRecordRdata4TypeEv(%"class.net::HttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i16 65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AliasFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata11AsAliasFormEv(%"class.net::HttpsRecordRdata"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.net::HttpsRecordRdata"* %0 to i1 (%"class.net::HttpsRecordRdata"*)***
  %5 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %5, i64 5
  %7 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.net::HttpsRecordRdata"* %0) #13
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 166, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %12

12:                                               ; preds = %1, %9
  %13 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %4, align 8
  %14 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %13, i64 6
  %15 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.net::HttpsRecordRdata"* %0) #13
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %12, %17
  %21 = bitcast %"class.net::HttpsRecordRdata"* %0 to %"class.net::AliasFormHttpsRecordRdata"*
  ret %"class.net::AliasFormHttpsRecordRdata"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AliasFormHttpsRecordRdata"* @_ZNK3net16HttpsRecordRdata11AsAliasFormEv(%"class.net::HttpsRecordRdata"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::AliasFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata11AsAliasFormEv(%"class.net::HttpsRecordRdata"* %0)
  ret %"class.net::AliasFormHttpsRecordRdata"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ServiceFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata13AsServiceFormEv(%"class.net::HttpsRecordRdata"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.net::HttpsRecordRdata"* %0 to i1 (%"class.net::HttpsRecordRdata"*)***
  %5 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %5, i64 5
  %7 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.net::HttpsRecordRdata"* %0) #13
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %12

12:                                               ; preds = %1, %9
  %13 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %4, align 8
  %14 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %13, i64 6
  %15 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.net::HttpsRecordRdata"* %0) #13
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 177, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %12, %17
  %21 = bitcast %"class.net::HttpsRecordRdata"* %0 to %"class.net::ServiceFormHttpsRecordRdata"*
  ret %"class.net::ServiceFormHttpsRecordRdata"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::ServiceFormHttpsRecordRdata"* @_ZNK3net16HttpsRecordRdata13AsServiceFormEv(%"class.net::HttpsRecordRdata"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.net::ServiceFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata13AsServiceFormEv(%"class.net::HttpsRecordRdata"* %0)
  ret %"class.net::ServiceFormHttpsRecordRdata"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpsRecordRdata11IsMalformedEv(%"class.net::HttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net25MalformedHttpsRecordRdataC2Ev(%"class.net::MalformedHttpsRecordRdata"* nocapture) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::MalformedHttpsRecordRdata", %"class.net::MalformedHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25MalformedHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net25MalformedHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE(%"class.net::MalformedHttpsRecordRdata"* nocapture readnone, %"class.net::HttpsRecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HttpsRecordRdata"* %1 to i1 (%"class.net::HttpsRecordRdata"*)***
  %4 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %4, i64 6
  %6 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.net::HttpsRecordRdata"* %1) #13
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net25MalformedHttpsRecordRdata7IsAliasEv(%"class.net::MalformedHttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net25MalformedHttpsRecordRdata11IsMalformedEv(%"class.net::MalformedHttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net25AliasFormHttpsRecordRdataC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::AliasFormHttpsRecordRdata"* nocapture, %"class.std::__1::basic_string"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25AliasFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  ret void
}

declare void @_ZN3net17DnsDomainToStringERN4base15BigEndianReaderEb(%"class.absl::optional.50"* sret, %"class.base::BigEndianReader"* dereferenceable(16), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net25AliasFormHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE(%"class.net::AliasFormHttpsRecordRdata"* nocapture readonly, %"class.net::HttpsRecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HttpsRecordRdata"* %1 to i1 (%"class.net::HttpsRecordRdata"*)***
  %4 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %4, i64 5
  %6 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.net::HttpsRecordRdata"* %1) #13
  br i1 %7, label %8, label %61

8:                                                ; preds = %2
  %9 = tail call %"class.net::AliasFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata11AsAliasFormEv(%"class.net::HttpsRecordRdata"* %1) #13
  %10 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %9, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp eq i64 %19, %27
  br i1 %28, label %29, label %61

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %33 = select i1 %15, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %37 = select i1 %23, i8* %35, i8* %36
  %38 = icmp eq i64 %19, 0
  br i1 %15, label %45, label %39

39:                                               ; preds = %29
  br i1 %38, label %61, label %40

40:                                               ; preds = %39
  %41 = ptrtoint i8* %31 to i64
  %42 = trunc i64 %41 to i8
  %43 = load i8, i8* %37, align 1
  %44 = icmp eq i8 %43, %42
  br i1 %44, label %49, label %61

45:                                               ; preds = %29
  br i1 %38, label %61, label %46

46:                                               ; preds = %45
  %47 = tail call i32 @bcmp(i8* %33, i8* %37, i64 %19) #13
  %48 = icmp eq i32 %47, 0
  br label %61

49:                                               ; preds = %40, %56
  %50 = phi i64 [ %53, %56 ], [ %18, %40 ]
  %51 = phi i8* [ %54, %56 ], [ %32, %40 ]
  %52 = phi i8* [ %57, %56 ], [ %37, %40 ]
  %53 = add i64 %50, -1
  %54 = getelementptr inbounds i8, i8* %51, i64 1
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds i8, i8* %52, i64 1
  %58 = load i8, i8* %54, align 1
  %59 = load i8, i8* %57, align 1
  %60 = icmp eq i8 %58, %59
  br i1 %60, label %49, label %61

61:                                               ; preds = %56, %49, %40, %46, %45, %39, %8, %2
  %62 = phi i1 [ false, %2 ], [ false, %8 ], [ %48, %46 ], [ true, %45 ], [ true, %39 ], [ false, %40 ], [ true, %49 ], [ false, %56 ]
  ret i1 %62
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net25AliasFormHttpsRecordRdata7IsAliasEv(%"class.net::AliasFormHttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ServiceFormHttpsRecordRdataC2EtNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_3setItNS1_4lessItEENS5_ItEEEENS1_6vectorIS7_NS5_IS7_EEEEbN4absl8optionalItEENSD_INS_9IPAddressENS5_ISJ_EEEES7_SL_NS1_3mapItS7_SA_NS5_INS1_4pairIKtS7_EEEEEE(%"class.net::ServiceFormHttpsRecordRdata"*, i16 zeroext, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::set"*, %"class.std::__1::vector"* nocapture, i1 zeroext, i32, %"class.std::__1::vector.33"* nocapture, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::vector.33"* nocapture, %"class.std::__1::map"*) unnamed_addr #0 align 2 {
  %12 = zext i1 %5 to i8
  %13 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ServiceFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 1
  store i16 %1, i16* %14, align 8
  %15 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3
  %19 = bitcast %"class.std::__1::set"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::set"* %18 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__compressed_pair.19"* %23 to i64*
  %25 = bitcast %"class.std::__1::__compressed_pair.19"* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  br i1 %30, label %32, label %34

32:                                               ; preds = %11
  %33 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %18, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"** %33, align 8
  br label %40

34:                                               ; preds = %11
  %35 = inttoptr i64 %26 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %36, align 8
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #13
  br label %40

40:                                               ; preds = %32, %34
  %41 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4
  %42 = bitcast %"class.std::__1::vector"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  %43 = bitcast %"class.std::__1::vector"* %4 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.std::__1::basic_string"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #13
  %57 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 5
  store i8 %12, i8* %57, align 8
  %58 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 6
  %59 = bitcast %"class.absl::optional"* %58 to i32*
  store i32 %6, i32* %59, align 2
  %60 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7
  %61 = bitcast %"class.std::__1::vector.33"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #13
  %62 = bitcast %"class.std::__1::vector.33"* %7 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.33"* %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %7, i64 0, i32 0, i32 1
  %66 = bitcast %"class.net::IPAddress"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7, i32 0, i32 1
  %69 = bitcast %"class.net::IPAddress"** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"class.net::IPAddress"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.net::IPAddress"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.std::__1::vector.33"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #13
  %76 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 8
  %77 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #13
  %79 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9
  %80 = bitcast %"class.std::__1::vector.33"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #13
  %81 = bitcast %"class.std::__1::vector.33"* %9 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.33"* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %9, i64 0, i32 0, i32 1
  %85 = bitcast %"class.net::IPAddress"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9, i32 0, i32 1
  %88 = bitcast %"class.net::IPAddress"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast %"class.net::IPAddress"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.net::IPAddress"** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.std::__1::vector.33"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #13
  %95 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10
  %96 = bitcast %"class.std::__1::map"* %10 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::map"* %95 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1
  %101 = bitcast %"class.std::__1::__compressed_pair.41"* %100 to i64*
  %102 = bitcast %"class.std::__1::__compressed_pair.41"* %99 to i64*
  %103 = load i64, i64* %101, align 8
  store i64 %103, i64* %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  %108 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  br i1 %107, label %109, label %111

109:                                              ; preds = %40
  %110 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %95, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %110, align 8
  br label %117

111:                                              ; preds = %40
  %112 = inttoptr i64 %103 to %"class.std::__1::__tree_node_base"*
  %113 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %108, %"class.std::__1::__tree_end_node"** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %115, %"class.std::__1::__tree_end_node"** %113, align 8
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #13
  br label %117

117:                                              ; preds = %109, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ServiceFormHttpsRecordRdataD2Ev(%"class.net::ServiceFormHttpsRecordRdata"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ServiceFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10, i32 0
  %4 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.69"**
  %6 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* %3, %"class.std::__1::__tree_node.69"* %6) #13
  %7 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9, i32 0, i32 0
  %8 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %7, align 8
  %9 = icmp eq %"class.net::IPAddress"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9, i32 0, i32 1
  %12 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %11, align 8
  %13 = icmp eq %"class.net::IPAddress"* %12, %8
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"class.net::IPAddress"* [ %16, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %15, i64 -1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %16) #13
  %17 = icmp eq %"class.net::IPAddress"* %16, %8
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  %19 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %7, align 8
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi %"class.net::IPAddress"* [ %19, %18 ], [ %8, %10 ]
  store %"class.net::IPAddress"* %8, %"class.net::IPAddress"** %11, align 8
  %22 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %21, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 8
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %23, %29
  %33 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %33, align 8
  %35 = icmp eq %"class.net::IPAddress"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7, i32 0, i32 1
  %38 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %37, align 8
  %39 = icmp eq %"class.net::IPAddress"* %38, %34
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"class.net::IPAddress"* [ %42, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %41, i64 -1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %42) #13
  %43 = icmp eq %"class.net::IPAddress"* %42, %34
  br i1 %43, label %44, label %40

44:                                               ; preds = %40
  %45 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %33, align 8
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi %"class.net::IPAddress"* [ %45, %44 ], [ %34, %36 ]
  store %"class.net::IPAddress"* %34, %"class.net::IPAddress"** %37, align 8
  %48 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %47, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %32, %46
  %50 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %52, null
  br i1 %53, label %76, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %56 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4, i32 0, i32 1
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %58 = icmp eq %"class.std::__1::basic_string"* %57, %52
  br i1 %58, label %74, label %59

59:                                               ; preds = %54, %69
  %60 = phi %"class.std::__1::basic_string"* [ %61, %69 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %66, %59
  %70 = icmp eq %"class.std::__1::basic_string"* %61, %52
  br i1 %70, label %71, label %59

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector"* %50 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %54
  %75 = phi i8* [ %73, %71 ], [ %55, %54 ]
  store %"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"** %56, align 8
  tail call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %49, %74
  %77 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0
  %78 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_node"**
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  tail call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* %77, %"class.std::__1::__tree_node"* %80) #13
  %81 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 2
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #14
  br label %89

89:                                               ; preds = %76, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27ServiceFormHttpsRecordRdataD0Ev(%"class.net::ServiceFormHttpsRecordRdata"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net27ServiceFormHttpsRecordRdataD2Ev(%"class.net::ServiceFormHttpsRecordRdata"* %0) #13
  %2 = bitcast %"class.net::ServiceFormHttpsRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net27ServiceFormHttpsRecordRdata7IsEqualEPKNS_16HttpsRecordRdataE(%"class.net::ServiceFormHttpsRecordRdata"* readonly, %"class.net::HttpsRecordRdata"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::HttpsRecordRdata"* %1 to i1 (%"class.net::HttpsRecordRdata"*)***
  %4 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %4, i64 5
  %6 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.net::HttpsRecordRdata"* %1) #13
  br i1 %7, label %372, label %8

8:                                                ; preds = %2
  %9 = load i1 (%"class.net::HttpsRecordRdata"*)**, i1 (%"class.net::HttpsRecordRdata"*)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %9, i64 6
  %11 = load i1 (%"class.net::HttpsRecordRdata"*)*, i1 (%"class.net::HttpsRecordRdata"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.net::HttpsRecordRdata"* %1) #13
  br i1 %12, label %372, label %13

13:                                               ; preds = %8
  %14 = tail call %"class.net::ServiceFormHttpsRecordRdata"* @_ZN3net16HttpsRecordRdata13AsServiceFormEv(%"class.net::HttpsRecordRdata"* %1) #13
  %15 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 1
  %16 = load i16, i16* %15, align 8
  %17 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 1
  %18 = load i16, i16* %17, align 8
  %19 = icmp eq i16 %16, %18
  br i1 %19, label %20, label %372

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 2
  %22 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp eq i64 %30, %38
  br i1 %39, label %40, label %372

40:                                               ; preds = %20
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %44 = select i1 %26, i8* %42, i8* %43
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %48 = select i1 %34, i8* %46, i8* %47
  %49 = icmp eq i64 %30, 0
  br i1 %26, label %56, label %50

50:                                               ; preds = %40
  br i1 %49, label %72, label %51

51:                                               ; preds = %50
  %52 = ptrtoint i8* %42 to i64
  %53 = trunc i64 %52 to i8
  %54 = load i8, i8* %48, align 1
  %55 = icmp eq i8 %54, %53
  br i1 %55, label %57, label %372

56:                                               ; preds = %40
  br i1 %49, label %72, label %69

57:                                               ; preds = %51, %64
  %58 = phi i64 [ %61, %64 ], [ %29, %51 ]
  %59 = phi i8* [ %62, %64 ], [ %43, %51 ]
  %60 = phi i8* [ %65, %64 ], [ %48, %51 ]
  %61 = add i64 %58, -1
  %62 = getelementptr inbounds i8, i8* %59, i64 1
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds i8, i8* %60, i64 1
  %66 = load i8, i8* %62, align 1
  %67 = load i8, i8* %65, align 1
  %68 = icmp eq i8 %66, %67
  br i1 %68, label %57, label %372

69:                                               ; preds = %56
  %70 = tail call i32 @bcmp(i8* %44, i8* %48, i64 %30) #13
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %372

72:                                               ; preds = %57, %50, %56, %69
  %73 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %74, %76
  br i1 %77, label %78, label %372

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %82 = icmp eq %"class.std::__1::__tree_end_node"* %80, %81
  br i1 %82, label %156, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %86

86:                                               ; preds = %153, %83
  %87 = phi %"class.std::__1::__tree_end_node"* [ %154, %153 ], [ %85, %83 ]
  %88 = phi %"class.std::__1::__tree_end_node"* [ %125, %153 ], [ %80, %83 ]
  %89 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %89, i64 0, i32 1
  %91 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.std::__1::__tree_node"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 1
  %93 = load i16, i16* %90, align 2
  %94 = load i16, i16* %92, align 2
  %95 = icmp eq i16 %93, %94
  br i1 %95, label %96, label %372

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 1, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = bitcast %"class.std::__1::__tree_end_node"* %88 to %"class.std::__1::__tree_node_base"*
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 2
  %103 = bitcast %"class.std::__1::__tree_end_node"* %102 to %"class.std::__1::__tree_end_node"**
  %104 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %104, i64 0, i32 0
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node_base"* %106, %101
  br i1 %107, label %124, label %115

108:                                              ; preds = %96, %108
  %109 = phi %"class.std::__1::__tree_node_base"* [ %111, %108 ], [ %98, %96 ]
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %108

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %109, i64 0, i32 0
  br label %124

115:                                              ; preds = %100, %115
  %116 = phi %"class.std::__1::__tree_end_node"** [ %119, %115 ], [ %103, %100 ]
  %117 = bitcast %"class.std::__1::__tree_end_node"** %116 to %"class.std::__1::__tree_node_base"**
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %118, i64 0, i32 2
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %119, align 8
  %121 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 0, i32 0
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node_base"* %122, %118
  br i1 %123, label %124, label %115

124:                                              ; preds = %115, %113, %100
  %125 = phi %"class.std::__1::__tree_end_node"* [ %114, %113 ], [ %104, %100 ], [ %120, %115 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 1, i32 0
  %127 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %126, align 8
  %128 = icmp eq %"class.std::__1::__tree_node_base"* %127, null
  br i1 %128, label %129, label %137

129:                                              ; preds = %124
  %130 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 2
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.std::__1::__tree_end_node"**
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %130
  br i1 %136, label %153, label %144

137:                                              ; preds = %124, %137
  %138 = phi %"class.std::__1::__tree_node_base"* [ %140, %137 ], [ %127, %124 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %137

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 0
  br label %153

144:                                              ; preds = %129, %144
  %145 = phi %"class.std::__1::__tree_end_node"** [ %148, %144 ], [ %132, %129 ]
  %146 = bitcast %"class.std::__1::__tree_end_node"** %145 to %"class.std::__1::__tree_node_base"**
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %147, i64 0, i32 2
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, %147
  br i1 %152, label %153, label %144

153:                                              ; preds = %144, %142, %129
  %154 = phi %"class.std::__1::__tree_end_node"* [ %143, %142 ], [ %133, %129 ], [ %149, %144 ]
  %155 = icmp eq %"class.std::__1::__tree_end_node"* %125, %81
  br i1 %155, label %156, label %86

156:                                              ; preds = %153, %78
  %157 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4
  %158 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 4
  %159 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 4, i32 0, i32 1
  %160 = bitcast %"class.std::__1::basic_string"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.std::__1::vector"* %157 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = sub i64 %161, %163
  %165 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 4, i32 0, i32 1
  %166 = bitcast %"class.std::__1::basic_string"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector"* %158 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = icmp eq i64 %164, %170
  %172 = inttoptr i64 %163 to %"class.std::__1::basic_string"*
  %173 = inttoptr i64 %161 to %"class.std::__1::basic_string"*
  br i1 %171, label %174, label %372

174:                                              ; preds = %156
  %175 = icmp eq %"class.std::__1::basic_string"* %172, %173
  br i1 %175, label %234, label %176

176:                                              ; preds = %174
  %177 = inttoptr i64 %169 to %"class.std::__1::basic_string"*
  br label %178

178:                                              ; preds = %176, %230
  %179 = phi %"class.std::__1::basic_string"* [ %232, %230 ], [ %177, %176 ]
  %180 = phi %"class.std::__1::basic_string"* [ %231, %230 ], [ %172, %176 ]
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = zext i8 %183 to i64
  %188 = select i1 %184, i64 %186, i64 %187
  %189 = bitcast %"class.std::__1::basic_string"* %179 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = icmp slt i8 %191, 0
  %193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = zext i8 %191 to i64
  %196 = select i1 %192, i64 %194, i64 %195
  %197 = icmp eq i64 %188, %196
  br i1 %197, label %198, label %372

198:                                              ; preds = %178
  %199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %202 = select i1 %184, i8* %200, i8* %201
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  %206 = select i1 %192, i8* %204, i8* %205
  %207 = icmp eq i64 %188, 0
  br i1 %184, label %214, label %208

208:                                              ; preds = %198
  br i1 %207, label %230, label %209

209:                                              ; preds = %208
  %210 = ptrtoint i8* %200 to i64
  %211 = trunc i64 %210 to i8
  %212 = load i8, i8* %206, align 1
  %213 = icmp eq i8 %212, %211
  br i1 %213, label %215, label %372

214:                                              ; preds = %198
  br i1 %207, label %230, label %227

215:                                              ; preds = %209, %222
  %216 = phi i64 [ %219, %222 ], [ %187, %209 ]
  %217 = phi i8* [ %220, %222 ], [ %201, %209 ]
  %218 = phi i8* [ %223, %222 ], [ %206, %209 ]
  %219 = add i64 %216, -1
  %220 = getelementptr inbounds i8, i8* %217, i64 1
  %221 = icmp eq i64 %219, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %215
  %223 = getelementptr inbounds i8, i8* %218, i64 1
  %224 = load i8, i8* %220, align 1
  %225 = load i8, i8* %223, align 1
  %226 = icmp eq i8 %224, %225
  br i1 %226, label %215, label %372

227:                                              ; preds = %214
  %228 = tail call i32 @bcmp(i8* %202, i8* %206, i64 %188) #13
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %372

230:                                              ; preds = %215, %227, %214, %208
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %179, i64 1
  %233 = icmp eq %"class.std::__1::basic_string"* %231, %173
  br i1 %233, label %234, label %178

234:                                              ; preds = %230, %174
  %235 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 5
  %236 = load i8, i8* %235, align 8, !range !2
  %237 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 5
  %238 = load i8, i8* %237, align 8, !range !2
  %239 = icmp eq i8 %236, %238
  br i1 %239, label %240, label %372

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %242 = load i8, i8* %241, align 2, !range !2
  %243 = icmp ne i8 %242, 0
  %244 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %245 = load i8, i8* %244, align 2, !range !2
  %246 = icmp ne i8 %245, 0
  %247 = xor i1 %243, %246
  %248 = xor i1 %243, true
  %249 = or i1 %247, %248
  br i1 %249, label %259, label %250

250:                                              ; preds = %240
  %251 = icmp eq i8 %245, 0
  br i1 %251, label %252, label %253, !prof !12

252:                                              ; preds = %250
  tail call void @llvm.trap() #13
  unreachable

253:                                              ; preds = %250
  %254 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %255 = load i16, i16* %254, align 2
  %256 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %257 = load i16, i16* %256, align 2
  %258 = icmp eq i16 %255, %257
  br i1 %258, label %260, label %372

259:                                              ; preds = %240
  br i1 %247, label %372, label %260

260:                                              ; preds = %259, %253
  %261 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7
  %262 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 7
  %263 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 7, i32 0, i32 1
  %264 = bitcast %"class.net::IPAddress"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.std::__1::vector.33"* %261 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 %265, %267
  %269 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 7, i32 0, i32 1
  %270 = bitcast %"class.net::IPAddress"** %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.std::__1::vector.33"* %262 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = sub i64 %271, %273
  %275 = icmp eq i64 %268, %274
  %276 = inttoptr i64 %267 to %"class.net::IPAddress"*
  %277 = inttoptr i64 %265 to %"class.net::IPAddress"*
  br i1 %275, label %278, label %372

278:                                              ; preds = %260
  %279 = icmp eq %"class.net::IPAddress"* %276, %277
  br i1 %279, label %290, label %280

280:                                              ; preds = %278
  %281 = inttoptr i64 %273 to %"class.net::IPAddress"*
  br label %282

282:                                              ; preds = %280, %286
  %283 = phi %"class.net::IPAddress"* [ %288, %286 ], [ %281, %280 ]
  %284 = phi %"class.net::IPAddress"* [ %287, %286 ], [ %276, %280 ]
  %285 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %284, %"class.net::IPAddress"* dereferenceable(17) %283) #13
  br i1 %285, label %286, label %372

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %284, i64 1
  %288 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %283, i64 1
  %289 = icmp eq %"class.net::IPAddress"* %287, %277
  br i1 %289, label %290, label %282

290:                                              ; preds = %286, %278
  %291 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 8
  %292 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 8
  %293 = bitcast %"class.std::__1::basic_string"* %291 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %294 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %293, i64 0, i32 1, i32 0
  %295 = load i8, i8* %294, align 1
  %296 = icmp slt i8 %295, 0
  %297 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %298 = load i64, i64* %297, align 8
  %299 = zext i8 %295 to i64
  %300 = select i1 %296, i64 %298, i64 %299
  %301 = bitcast %"class.std::__1::basic_string"* %292 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  %305 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = zext i8 %303 to i64
  %308 = select i1 %304, i64 %306, i64 %307
  %309 = icmp eq i64 %300, %308
  br i1 %309, label %310, label %372

310:                                              ; preds = %290
  %311 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %291, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = bitcast %"class.std::__1::basic_string"* %291 to i8*
  %314 = select i1 %296, i8* %312, i8* %313
  %315 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load i8*, i8** %315, align 8
  %317 = bitcast %"class.std::__1::basic_string"* %292 to i8*
  %318 = select i1 %304, i8* %316, i8* %317
  %319 = icmp eq i64 %300, 0
  br i1 %296, label %326, label %320

320:                                              ; preds = %310
  br i1 %319, label %342, label %321

321:                                              ; preds = %320
  %322 = ptrtoint i8* %312 to i64
  %323 = trunc i64 %322 to i8
  %324 = load i8, i8* %318, align 1
  %325 = icmp eq i8 %324, %323
  br i1 %325, label %327, label %372

326:                                              ; preds = %310
  br i1 %319, label %342, label %339

327:                                              ; preds = %321, %334
  %328 = phi i64 [ %331, %334 ], [ %299, %321 ]
  %329 = phi i8* [ %332, %334 ], [ %313, %321 ]
  %330 = phi i8* [ %335, %334 ], [ %318, %321 ]
  %331 = add i64 %328, -1
  %332 = getelementptr inbounds i8, i8* %329, i64 1
  %333 = icmp eq i64 %331, 0
  br i1 %333, label %342, label %334

334:                                              ; preds = %327
  %335 = getelementptr inbounds i8, i8* %330, i64 1
  %336 = load i8, i8* %332, align 1
  %337 = load i8, i8* %335, align 1
  %338 = icmp eq i8 %336, %337
  br i1 %338, label %327, label %372

339:                                              ; preds = %326
  %340 = tail call i32 @bcmp(i8* %314, i8* %318, i64 %300) #13
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %372

342:                                              ; preds = %327, %320, %326, %339
  %343 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9
  %344 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 9
  %345 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 9, i32 0, i32 1
  %346 = bitcast %"class.net::IPAddress"** %345 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.std::__1::vector.33"* %343 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = sub i64 %347, %349
  %351 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %14, i64 0, i32 9, i32 0, i32 1
  %352 = bitcast %"class.net::IPAddress"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"class.std::__1::vector.33"* %344 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = sub i64 %353, %355
  %357 = icmp eq i64 %350, %356
  %358 = inttoptr i64 %349 to %"class.net::IPAddress"*
  %359 = inttoptr i64 %347 to %"class.net::IPAddress"*
  br i1 %357, label %360, label %372

360:                                              ; preds = %342
  %361 = icmp eq %"class.net::IPAddress"* %358, %359
  br i1 %361, label %372, label %362

362:                                              ; preds = %360
  %363 = inttoptr i64 %355 to %"class.net::IPAddress"*
  br label %364

364:                                              ; preds = %362, %368
  %365 = phi %"class.net::IPAddress"* [ %370, %368 ], [ %363, %362 ]
  %366 = phi %"class.net::IPAddress"* [ %369, %368 ], [ %358, %362 ]
  %367 = tail call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %366, %"class.net::IPAddress"* dereferenceable(17) %365) #13
  br i1 %367, label %368, label %372

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %366, i64 1
  %370 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %365, i64 1
  %371 = icmp eq %"class.net::IPAddress"* %369, %359
  br i1 %371, label %372, label %364

372:                                              ; preds = %64, %86, %178, %227, %209, %222, %282, %334, %368, %364, %51, %321, %259, %290, %156, %20, %360, %342, %260, %253, %72, %13, %69, %234, %339, %2, %8
  %373 = phi i1 [ false, %8 ], [ false, %2 ], [ false, %339 ], [ false, %259 ], [ false, %234 ], [ false, %69 ], [ false, %13 ], [ false, %72 ], [ false, %253 ], [ false, %260 ], [ false, %342 ], [ true, %360 ], [ false, %20 ], [ false, %156 ], [ false, %290 ], [ false, %321 ], [ false, %51 ], [ false, %364 ], [ true, %368 ], [ false, %334 ], [ false, %282 ], [ false, %222 ], [ false, %209 ], [ false, %227 ], [ false, %178 ], [ false, %86 ], [ false, %64 ]
  ret i1 %373
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net27ServiceFormHttpsRecordRdata7IsAliasEv(%"class.net::ServiceFormHttpsRecordRdata"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.net::ServiceFormHttpsRecordRdata"* @_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEEbRKN4absl9nullopt_tENSF_INS1_9IPAddressENS7_ISM_EEEES9_SO_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i16* dereferenceable(2), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), i8* dereferenceable(1), %"struct.absl::nullopt_t"* dereferenceable(1), %"class.std::__1::vector.33"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.33"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #9 comdat {
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::set", align 8
  %13 = alloca [15 x i8], align 8
  %14 = alloca %"class.std::__1::map", align 8
  %15 = tail call i8* @_Znwm(i64 192) #14
  %16 = bitcast i8* %15 to %"class.net::ServiceFormHttpsRecordRdata"*
  %17 = load i16, i16* %0, align 2
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to i8*
  %23 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %22, i64 15, i1 false)
  %24 = getelementptr inbounds i8, i8* %18, i64 23
  %25 = load i8, i8* %24, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  %26 = bitcast %"class.std::__1::set"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::set"* %12 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::__compressed_pair.19"* %30 to i64*
  %32 = bitcast %"class.std::__1::__compressed_pair.19"* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %34, align 8
  store i64 %36, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %37, label %39, label %42

39:                                               ; preds = %10
  %40 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %40, align 8
  %41 = ptrtoint %"class.std::__1::__tree_end_node"* %38 to i64
  br label %48

42:                                               ; preds = %10
  %43 = inttoptr i64 %33 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %44, align 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #13
  br label %48

48:                                               ; preds = %39, %42
  %49 = phi i64 [ %41, %39 ], [ %27, %42 ]
  %50 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::basic_string"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  %56 = load i8, i8* %4, align 1, !range !2
  %57 = bitcast %"class.std::__1::vector.33"* %6 to <2 x i64>*
  %58 = load <2 x i64>, <2 x i64>* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"class.net::IPAddress"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.33"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #13
  %63 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast i64* %66 to i8*
  %68 = getelementptr inbounds [15 x i8], [15 x i8]* %13, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 %67, i64 15, i1 false)
  %69 = getelementptr inbounds i8, i8* %63, i64 23
  %70 = load i8, i8* %69, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #13
  %71 = bitcast %"class.std::__1::vector.33"* %8 to <2 x i64>*
  %72 = load <2 x i64>, <2 x i64>* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.net::IPAddress"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector.33"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #13
  %77 = bitcast %"class.std::__1::map"* %9 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::map"* %14 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 1
  %82 = bitcast %"class.std::__1::__compressed_pair.41"* %81 to i64*
  %83 = bitcast %"class.std::__1::__compressed_pair.41"* %80 to i64*
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  %88 = icmp eq i64 %87, 0
  %89 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %90 = inttoptr i64 %84 to %"class.std::__1::__tree_node.69"*
  br i1 %88, label %91, label %94

91:                                               ; preds = %48
  %92 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %92, align 8
  %93 = ptrtoint %"class.std::__1::__tree_end_node"* %89 to i64
  br label %100

94:                                               ; preds = %48
  %95 = inttoptr i64 %84 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %95, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %98, %"class.std::__1::__tree_end_node"** %96, align 8
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false) #13
  br label %100

100:                                              ; preds = %91, %94
  %101 = phi i64 [ %93, %91 ], [ %78, %94 ]
  %102 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ServiceFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %15, i64 8
  %104 = bitcast i8* %103 to i16*
  store i16 %17, i16* %104, align 8
  %105 = getelementptr inbounds i8, i8* %15, i64 16
  %106 = bitcast i8* %105 to i64*
  store i64 %20, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %15, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %23, i64 15, i1 false)
  %108 = getelementptr inbounds i8, i8* %15, i64 39
  store i8 %25, i8* %108, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 15, i1 false)
  %109 = getelementptr inbounds i8, i8* %15, i64 40
  %110 = bitcast i8* %109 to i64*
  store i64 %49, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %15, i64 48
  %112 = bitcast i8* %111 to i64*
  store i64 %33, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %15, i64 56
  %114 = bitcast i8* %113 to i64*
  %115 = load i64, i64* %35, align 8
  store i64 %115, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %100
  %118 = bitcast i8* %109 to i8**
  store i8* %111, i8** %118, align 8
  br label %125

119:                                              ; preds = %100
  %120 = inttoptr i64 %33 to %"class.std::__1::__tree_node_base"*
  %121 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 2
  %123 = bitcast %"class.std::__1::__tree_end_node"** %122 to i8**
  store i8* %111, i8** %123, align 8
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %121, align 8
  %124 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false) #13
  br label %125

125:                                              ; preds = %119, %117
  %126 = getelementptr inbounds i8, i8* %15, i64 64
  %127 = bitcast i8* %126 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %127, align 8
  %128 = getelementptr inbounds i8, i8* %15, i64 80
  %129 = bitcast i8* %128 to i64*
  store i64 %54, i64* %129, align 8
  %130 = getelementptr inbounds i8, i8* %15, i64 88
  store i8 %56, i8* %130, align 8
  %131 = getelementptr inbounds i8, i8* %15, i64 90
  %132 = bitcast i8* %131 to i32*
  store i32 0, i32* %132, align 2
  %133 = getelementptr inbounds i8, i8* %15, i64 96
  %134 = bitcast i8* %133 to <2 x i64>*
  store <2 x i64> %58, <2 x i64>* %134, align 8
  %135 = getelementptr inbounds i8, i8* %15, i64 112
  %136 = bitcast i8* %135 to i64*
  store i64 %61, i64* %136, align 8
  %137 = getelementptr inbounds i8, i8* %15, i64 120
  %138 = bitcast i8* %137 to i64*
  store i64 %65, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %15, i64 128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* nonnull align 8 %68, i64 15, i1 false)
  %140 = getelementptr inbounds i8, i8* %15, i64 143
  store i8 %70, i8* %140, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 15, i1 false)
  %141 = getelementptr inbounds i8, i8* %15, i64 144
  %142 = bitcast i8* %141 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %142, align 8
  %143 = getelementptr inbounds i8, i8* %15, i64 160
  %144 = bitcast i8* %143 to i64*
  store i64 %75, i64* %144, align 8
  %145 = getelementptr inbounds i8, i8* %15, i64 168
  %146 = bitcast i8* %145 to i64*
  store i64 %101, i64* %146, align 8
  %147 = getelementptr inbounds i8, i8* %15, i64 176
  %148 = bitcast i8* %147 to i64*
  store i64 %84, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %15, i64 184
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %86, align 8
  store i64 %151, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %125
  %154 = bitcast i8* %145 to i8**
  store i8* %147, i8** %154, align 8
  br label %161

155:                                              ; preds = %125
  %156 = inttoptr i64 %84 to %"class.std::__1::__tree_node_base"*
  %157 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %156, i64 0, i32 2
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to i8**
  store i8* %147, i8** %159, align 8
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %157, align 8
  %160 = bitcast %"class.std::__1::__tree_end_node"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 16, i1 false) #13
  br label %161

161:                                              ; preds = %155, %153
  %162 = phi %"class.std::__1::__tree_node.69"* [ null, %155 ], [ %90, %153 ]
  %163 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* nonnull %163, %"class.std::__1::__tree_node.69"* %162) #13
  %164 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0
  %165 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %166 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %165, align 8
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %164, %"class.std::__1::__tree_node"* %166) #13
  ret %"class.net::ServiceFormHttpsRecordRdata"* %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.net::ServiceFormHttpsRecordRdata"* @_ZNSt3__111make_uniqueIN3net27ServiceFormHttpsRecordRdataEJRtNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_3setItNS_4lessItEENS7_ItEEEENS_6vectorIS9_NS7_IS9_EEEERbRN4absl8optionalItEENSF_INS1_9IPAddressENS7_ISN_EEEES9_SP_NS_3mapItS9_SC_NS7_INS_4pairIKtS9_EEEEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(i16* dereferenceable(2), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), i8* dereferenceable(1), %"class.absl::optional"* dereferenceable(4), %"class.std::__1::vector.33"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.33"* dereferenceable(24), %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #9 comdat {
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::set", align 8
  %13 = alloca [15 x i8], align 8
  %14 = alloca %"class.std::__1::map", align 8
  %15 = tail call i8* @_Znwm(i64 192) #14
  %16 = bitcast i8* %15 to %"class.net::ServiceFormHttpsRecordRdata"*
  %17 = load i16, i16* %0, align 2
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to i8*
  %23 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %22, i64 15, i1 false)
  %24 = getelementptr inbounds i8, i8* %18, i64 23
  %25 = load i8, i8* %24, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13
  %26 = bitcast %"class.std::__1::set"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::set"* %12 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::__compressed_pair.19"* %30 to i64*
  %32 = bitcast %"class.std::__1::__compressed_pair.19"* %29 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %34, align 8
  store i64 %36, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  br i1 %37, label %39, label %42

39:                                               ; preds = %10
  %40 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %40, align 8
  %41 = ptrtoint %"class.std::__1::__tree_end_node"* %38 to i64
  br label %48

42:                                               ; preds = %10
  %43 = inttoptr i64 %33 to %"class.std::__1::__tree_node_base"*
  %44 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %44, align 8
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #13
  br label %48

48:                                               ; preds = %39, %42
  %49 = phi i64 [ %41, %39 ], [ %27, %42 ]
  %50 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"class.std::__1::basic_string"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  %56 = load i8, i8* %4, align 1, !range !2
  %57 = bitcast %"class.absl::optional"* %5 to i32*
  %58 = load i32, i32* %57, align 2
  %59 = bitcast %"class.std::__1::vector.33"* %6 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast %"class.net::IPAddress"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.33"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #13
  %65 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast i64* %68 to i8*
  %70 = getelementptr inbounds [15 x i8], [15 x i8]* %13, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %70, i8* align 8 %69, i64 15, i1 false)
  %71 = getelementptr inbounds i8, i8* %65, i64 23
  %72 = load i8, i8* %71, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #13
  %73 = bitcast %"class.std::__1::vector.33"* %8 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast %"class.net::IPAddress"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.std::__1::vector.33"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #13
  %79 = bitcast %"class.std::__1::map"* %9 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::map"* %14 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1
  %83 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::__compressed_pair.41"* %83 to i64*
  %85 = bitcast %"class.std::__1::__compressed_pair.41"* %82 to i64*
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %87, align 8
  store i64 %89, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %92 = inttoptr i64 %86 to %"class.std::__1::__tree_node.69"*
  br i1 %90, label %93, label %96

93:                                               ; preds = %48
  %94 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %94, align 8
  %95 = ptrtoint %"class.std::__1::__tree_end_node"* %91 to i64
  br label %102

96:                                               ; preds = %48
  %97 = inttoptr i64 %86 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %100, %"class.std::__1::__tree_end_node"** %98, align 8
  %101 = bitcast %"class.std::__1::__tree_end_node"* %100 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #13
  br label %102

102:                                              ; preds = %93, %96
  %103 = phi i64 [ %95, %93 ], [ %80, %96 ]
  %104 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27ServiceFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %105 = getelementptr inbounds i8, i8* %15, i64 8
  %106 = bitcast i8* %105 to i16*
  store i16 %17, i16* %106, align 8
  %107 = getelementptr inbounds i8, i8* %15, i64 16
  %108 = bitcast i8* %107 to i64*
  store i64 %20, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %15, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %23, i64 15, i1 false)
  %110 = getelementptr inbounds i8, i8* %15, i64 39
  store i8 %25, i8* %110, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 15, i1 false)
  %111 = getelementptr inbounds i8, i8* %15, i64 40
  %112 = bitcast i8* %111 to i64*
  store i64 %49, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %15, i64 48
  %114 = bitcast i8* %113 to i64*
  store i64 %33, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %15, i64 56
  %116 = bitcast i8* %115 to i64*
  %117 = load i64, i64* %35, align 8
  store i64 %117, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %102
  %120 = bitcast i8* %111 to i8**
  store i8* %113, i8** %120, align 8
  br label %127

121:                                              ; preds = %102
  %122 = inttoptr i64 %33 to %"class.std::__1::__tree_node_base"*
  %123 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 2
  %125 = bitcast %"class.std::__1::__tree_end_node"** %124 to i8**
  store i8* %113, i8** %125, align 8
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %123, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #13
  br label %127

127:                                              ; preds = %121, %119
  %128 = getelementptr inbounds i8, i8* %15, i64 64
  %129 = bitcast i8* %128 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %129, align 8
  %130 = getelementptr inbounds i8, i8* %15, i64 80
  %131 = bitcast i8* %130 to i64*
  store i64 %54, i64* %131, align 8
  %132 = getelementptr inbounds i8, i8* %15, i64 88
  store i8 %56, i8* %132, align 8
  %133 = getelementptr inbounds i8, i8* %15, i64 90
  %134 = bitcast i8* %133 to i32*
  store i32 %58, i32* %134, align 2
  %135 = getelementptr inbounds i8, i8* %15, i64 96
  %136 = bitcast i8* %135 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %136, align 8
  %137 = getelementptr inbounds i8, i8* %15, i64 112
  %138 = bitcast i8* %137 to i64*
  store i64 %63, i64* %138, align 8
  %139 = getelementptr inbounds i8, i8* %15, i64 120
  %140 = bitcast i8* %139 to i64*
  store i64 %67, i64* %140, align 8
  %141 = getelementptr inbounds i8, i8* %15, i64 128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %70, i64 15, i1 false)
  %142 = getelementptr inbounds i8, i8* %15, i64 143
  store i8 %72, i8* %142, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 15, i1 false)
  %143 = getelementptr inbounds i8, i8* %15, i64 144
  %144 = bitcast i8* %143 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %144, align 8
  %145 = getelementptr inbounds i8, i8* %15, i64 160
  %146 = bitcast i8* %145 to i64*
  store i64 %77, i64* %146, align 8
  %147 = getelementptr inbounds i8, i8* %15, i64 168
  %148 = bitcast i8* %147 to i64*
  store i64 %103, i64* %148, align 8
  %149 = getelementptr inbounds i8, i8* %15, i64 176
  %150 = bitcast i8* %149 to i64*
  store i64 %86, i64* %150, align 8
  %151 = getelementptr inbounds i8, i8* %15, i64 184
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %88, align 8
  store i64 %153, i64* %152, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %127
  %156 = bitcast i8* %147 to i8**
  store i8* %149, i8** %156, align 8
  br label %163

157:                                              ; preds = %127
  %158 = inttoptr i64 %86 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 2
  %161 = bitcast %"class.std::__1::__tree_end_node"** %160 to i8**
  store i8* %149, i8** %161, align 8
  store %"class.std::__1::__tree_end_node"* %91, %"class.std::__1::__tree_end_node"** %159, align 8
  %162 = bitcast %"class.std::__1::__tree_end_node"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 16, i1 false) #13
  br label %163

163:                                              ; preds = %157, %155
  %164 = phi %"class.std::__1::__tree_node.69"* [ null, %157 ], [ %92, %155 ]
  %165 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %14, i64 0, i32 0
  call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* nonnull %165, %"class.std::__1::__tree_node.69"* %164) #13
  %166 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %12, i64 0, i32 0
  %167 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %168 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %167, align 8
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %166, %"class.std::__1::__tree_node"* %168) #13
  ret %"class.net::ServiceFormHttpsRecordRdata"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net27ServiceFormHttpsRecordRdata12IsCompatibleEv(%"class.net::ServiceFormHttpsRecordRdata"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::set", align 8
  %3 = bitcast %"class.std::__1::set"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %4, align 8
  call void @_ZNSt3__13setItNS_4lessItEENS_9allocatorItEEE6insertIPKtEEvT_S9_(%"class.std::__1::set"* nonnull %2, i16* getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN3net27ServiceFormHttpsRecordRdata14kSupportedKeysE, i64 0, i64 0), i16* getelementptr inbounds ([7 x i16], [7 x i16]* @_ZN3net27ServiceFormHttpsRecordRdata14kSupportedKeysE, i64 1, i64 0)) #13
  %8 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.net::ServiceFormHttpsRecordRdata", %"class.net::ServiceFormHttpsRecordRdata"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %11 = icmp eq %"class.std::__1::__tree_end_node"* %9, %10
  %12 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  br i1 %11, label %73, label %14

14:                                               ; preds = %1
  %15 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br label %16

16:                                               ; preds = %14, %70
  %17 = phi %"class.std::__1::__tree_end_node"* [ %9, %14 ], [ %71, %70 ]
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"*
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %18, i64 0, i32 1
  %20 = load i16, i16* %19, align 2
  br i1 %15, label %73, label %21

21:                                               ; preds = %16, %21
  %22 = phi %"class.std::__1::__tree_end_node"* [ %32, %21 ], [ %6, %16 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %33, %21 ], [ %13, %16 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = icmp ult i16 %25, %20
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__tree_node_base"** %27 to %"class.std::__1::__tree_node"**
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %31 = select i1 %26, %"class.std::__1::__tree_node"** %28, %"class.std::__1::__tree_node"** %30
  %32 = select i1 %26, %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"* %29
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %34 = icmp eq %"class.std::__1::__tree_node"* %33, null
  br i1 %34, label %35, label %21

35:                                               ; preds = %21
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %32, %6
  br i1 %36, label %73, label %37

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %38, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = icmp ult i16 %20, %40
  br i1 %41, label %73, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 1, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 2
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_end_node"**
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %47
  br i1 %53, label %70, label %61

54:                                               ; preds = %42, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %44, %42 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %54

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0
  br label %70

61:                                               ; preds = %46, %61
  %62 = phi %"class.std::__1::__tree_end_node"** [ %65, %61 ], [ %49, %46 ]
  %63 = bitcast %"class.std::__1::__tree_end_node"** %62 to %"class.std::__1::__tree_node_base"**
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 2
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, %64
  br i1 %69, label %70, label %61

70:                                               ; preds = %61, %46, %59
  %71 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %50, %46 ], [ %66, %61 ]
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %71, %10
  br i1 %72, label %73, label %16

73:                                               ; preds = %16, %35, %37, %70, %1
  %74 = phi %"class.std::__1::__tree_node"* [ %13, %1 ], [ null, %16 ], [ %13, %35 ], [ %13, %37 ], [ %13, %70 ]
  %75 = phi i1 [ true, %1 ], [ false, %16 ], [ false, %35 ], [ false, %37 ], [ true, %70 ]
  %76 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0
  call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* nonnull %76, %"class.std::__1::__tree_node"* %74) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  ret i1 %75
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net27ServiceFormHttpsRecordRdata14IsSupportedKeyEt(i16 zeroext) local_unnamed_addr #4 align 2 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #13, !srcloc !14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net16HttpsRecordRdataD2Ev(%"class.net::HttpsRecordRdata"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net25MalformedHttpsRecordRdataD0Ev(%"class.net::MalformedHttpsRecordRdata"*) unnamed_addr #9 comdat align 2 {
  %2 = bitcast %"class.net::MalformedHttpsRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net25AliasFormHttpsRecordRdataD2Ev(%"class.net::AliasFormHttpsRecordRdata"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25AliasFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net25AliasFormHttpsRecordRdataD0Ev(%"class.net::AliasFormHttpsRecordRdata"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net25AliasFormHttpsRecordRdataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::AliasFormHttpsRecordRdata", %"class.net::AliasFormHttpsRecordRdata"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.net::AliasFormHttpsRecordRdata"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

declare zeroext i1 @_ZN4base15BigEndianReader21ReadU16LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE7destroyEPNS_11__tree_nodeItPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZN4base15BigEndianReader20ReadU8LengthPrefixedEPNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::BigEndianReader"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJPKcmEEEvDpOT_(%"class.std::__1::vector"*, i8** dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 24
  %21 = icmp ult i64 %20, 384307168202282325
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 768614336404564650, %15 ]
  %29 = mul i64 %28, 24
  %30 = tail call i8* @_Znwm(i64 %29) #14
  %31 = bitcast i8* %30 to %"class.std::__1::basic_string"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"class.std::__1::basic_string"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %33
  %37 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  %38 = load i8*, i8** %1, align 8
  %39 = load i64, i64* %2, align 8
  %40 = icmp ugt i64 %39, -17
  br i1 %40, label %41, label %43

41:                                               ; preds = %32
  %42 = bitcast %"class.std::__1::basic_string"* %35 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %42) #15
  unreachable

43:                                               ; preds = %32
  %44 = icmp ult i64 %39, 23
  br i1 %44, label %53, label %45

45:                                               ; preds = %43
  %46 = add nuw i64 %39, 16
  %47 = and i64 %46, -16
  %48 = tail call i8* @_Znwm(i64 %47) #14
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = or i64 %47, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 %10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %39, i64* %52, align 8
  br label %59

53:                                               ; preds = %43
  %54 = trunc i64 %39 to i8
  %55 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 %54, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %58 = icmp eq i64 %39, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %53, %45
  %60 = phi i8* [ %48, %45 ], [ %57, %53 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %38, i64 %39, i1 false) #13
  br label %61

61:                                               ; preds = %53, %59
  %62 = phi i8* [ %57, %53 ], [ %60, %59 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %39
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 1
  %65 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %66, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %69 = icmp eq %"class.std::__1::basic_string"* %68, %67
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  br label %83

72:                                               ; preds = %61, %72
  %73 = phi %"class.std::__1::basic_string"* [ %75, %72 ], [ %35, %61 ]
  %74 = phi %"class.std::__1::basic_string"* [ %76, %72 ], [ %68, %61 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %77 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %78 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #13
  %79 = icmp eq %"class.std::__1::basic_string"* %76, %67
  br i1 %79, label %80, label %72

80:                                               ; preds = %72
  %81 = load i64, i64* %7, align 8
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  br label %83

83:                                               ; preds = %70, %80
  %84 = phi %"class.std::__1::basic_string"* [ %67, %70 ], [ %82, %80 ]
  %85 = phi %"class.std::__1::basic_string"* [ %35, %70 ], [ %75, %80 ]
  %86 = phi i64 [ %71, %70 ], [ %81, %80 ]
  %87 = ptrtoint %"class.std::__1::basic_string"* %85 to i64
  store i64 %87, i64* %7, align 8
  store i64 %65, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %88 = inttoptr i64 %86 to %"class.std::__1::basic_string"*
  %89 = icmp eq %"class.std::__1::basic_string"* %84, %88
  br i1 %89, label %102, label %90

90:                                               ; preds = %83, %100
  %91 = phi %"class.std::__1::basic_string"* [ %92, %100 ], [ %84, %83 ]
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 -1
  %93 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  tail call void @_ZdlPv(i8* %99) #14
  br label %100

100:                                              ; preds = %97, %90
  %101 = icmp eq %"class.std::__1::basic_string"* %92, %88
  br i1 %101, label %102, label %90

102:                                              ; preds = %100, %83
  %103 = icmp eq i64 %86, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %86 to i8*
  tail call void @_ZdlPv(i8* %105) #14
  br label %106

106:                                              ; preds = %102, %104
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"*, %"class.std::__1::__tree_node.69"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.69"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.69"* %1 to %"class.std::__1::__tree_node.69"**
  %6 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* %0, %"class.std::__1::__tree_node.69"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.69"**
  %9 = load %"class.std::__1::__tree_node.69"*, %"class.std::__1::__tree_node.69"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.40"* %0, %"class.std::__1::__tree_node.69"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.69", %"class.std::__1::__tree_node.69"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.69"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base15BigEndianReader9ReadBytesEPvm(%"class.base::BigEndianReader"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA4_hEEEvDpOT_(%"class.std::__1::vector.33"*, [4 x i8]* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 17
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1085102592571150095
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 17
  %20 = icmp ult i64 %19, 542551296285575047
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 1085102592571150095, %14 ]
  %28 = mul i64 %27, 17
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.net::IPAddress"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPAddress"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPAddress"* %35 to i64
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %1, i64 0, i64 0
  tail call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* %34, i8* %37, i64 4) #13
  %38 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %34, i64 1
  %39 = ptrtoint %"class.net::IPAddress"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %41 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %40, align 8
  %42 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %3, align 8
  %43 = icmp eq %"class.net::IPAddress"* %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = ptrtoint %"class.net::IPAddress"* %34 to i64
  store i64 %45, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %61

46:                                               ; preds = %31, %46
  %47 = phi %"class.net::IPAddress"* [ %49, %46 ], [ %34, %31 ]
  %48 = phi %"class.net::IPAddress"* [ %50, %46 ], [ %42, %31 ]
  %49 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %47, i64 -1
  %50 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %48, i64 -1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %49, %"class.net::IPAddress"* dereferenceable(17) %50) #13
  %51 = icmp eq %"class.net::IPAddress"* %50, %41
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %40, align 8
  %54 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %3, align 8
  %55 = ptrtoint %"class.net::IPAddress"* %49 to i64
  store i64 %55, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %56 = icmp eq %"class.net::IPAddress"* %54, %53
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"class.net::IPAddress"* [ %59, %57 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %58, i64 -1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %59) #13
  %60 = icmp eq %"class.net::IPAddress"* %59, %53
  br i1 %60, label %61, label %57

61:                                               ; preds = %57, %44, %52
  %62 = phi %"class.net::IPAddress"* [ %41, %44 ], [ %53, %52 ], [ %53, %57 ]
  %63 = icmp eq %"class.net::IPAddress"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %62, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %61, %64
  ret void
}

declare void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #1

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net9IPAddressENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRA16_hEEEvDpOT_(%"class.std::__1::vector.33"*, [16 x i8]* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 17
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1085102592571150095
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 17
  %20 = icmp ult i64 %19, 542551296285575047
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 1085102592571150095, %14 ]
  %28 = mul i64 %27, 17
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.net::IPAddress"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPAddress"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPAddress"* %35 to i64
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  tail call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* %34, i8* %37, i64 16) #13
  %38 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %34, i64 1
  %39 = ptrtoint %"class.net::IPAddress"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %41 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %40, align 8
  %42 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %3, align 8
  %43 = icmp eq %"class.net::IPAddress"* %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = ptrtoint %"class.net::IPAddress"* %34 to i64
  store i64 %45, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %61

46:                                               ; preds = %31, %46
  %47 = phi %"class.net::IPAddress"* [ %49, %46 ], [ %34, %31 ]
  %48 = phi %"class.net::IPAddress"* [ %50, %46 ], [ %42, %31 ]
  %49 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %47, i64 -1
  %50 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %48, i64 -1
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %49, %"class.net::IPAddress"* dereferenceable(17) %50) #13
  %51 = icmp eq %"class.net::IPAddress"* %50, %41
  br i1 %51, label %52, label %46

52:                                               ; preds = %46
  %53 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %40, align 8
  %54 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %3, align 8
  %55 = ptrtoint %"class.net::IPAddress"* %49 to i64
  store i64 %55, i64* %6, align 8
  store i64 %39, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %56 = icmp eq %"class.net::IPAddress"* %54, %53
  br i1 %56, label %61, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"class.net::IPAddress"* [ %59, %57 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %58, i64 -1
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %59) #13
  %60 = icmp eq %"class.net::IPAddress"* %59, %53
  br i1 %60, label %61, label %57

61:                                               ; preds = %57, %44, %52
  %62 = phi %"class.net::IPAddress"* [ %41, %44 ], [ %53, %52 ], [ %53, %57 ]
  %63 = icmp eq %"class.net::IPAddress"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %62, i64 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %61, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__13setItNS_4lessItEENS_9allocatorItEEE6insertIPKtEEvT_S9_(%"class.std::__1::set"*, i16*, i16*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq i16* %1, %2
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = ptrtoint %"class.std::__1::__tree_end_node"* %4 to i64
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::set"* %0 to i64*
  %12 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %14

13:                                               ; preds = %106, %3
  ret void

14:                                               ; preds = %6, %106
  %15 = phi i16* [ %1, %6 ], [ %107, %106 ]
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %17 = icmp eq %"class.std::__1::__tree_end_node"* %16, %4
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br i1 %17, label %45, label %19

19:                                               ; preds = %14
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %18, %19 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 1
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %37, label %21

26:                                               ; preds = %19, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %31, %26 ], [ %4, %19 ]
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 2
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_end_node"**
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %28
  br i1 %34, label %26, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  br label %37

37:                                               ; preds = %21, %35
  %38 = phi %"class.std::__1::__tree_node_base"* [ %36, %35 ], [ %22, %21 ]
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 4, i64 1
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %15, align 2
  %44 = icmp ult i16 %42, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %37, %14
  %46 = phi i64 [ %39, %37 ], [ %7, %14 ]
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 1
  br label %79

51:                                               ; preds = %37
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %52, label %79, label %53

53:                                               ; preds = %51, %72
  %54 = phi %"class.std::__1::__tree_node_base"* [ %73, %72 ], [ %18, %51 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %74, %72 ], [ %10, %51 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 4, i64 1
  %57 = bitcast i8* %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp ult i16 %43, %58
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

66:                                               ; preds = %53
  %67 = icmp ult i16 %58, %43
  br i1 %67, label %68, label %77

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %68, %60
  %73 = phi %"class.std::__1::__tree_node_base"* [ %62, %60 ], [ %70, %68 ]
  %74 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %69, %68 ]
  br label %53

75:                                               ; preds = %68
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

77:                                               ; preds = %66
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %54 to i64
  br label %79

79:                                               ; preds = %51, %45, %48, %64, %75, %77
  %80 = phi i64 [ %46, %48 ], [ %65, %64 ], [ %76, %75 ], [ %78, %77 ], [ %7, %45 ], [ %7, %51 ]
  %81 = phi %"class.std::__1::__tree_node_base"** [ %50, %48 ], [ %61, %64 ], [ %69, %75 ], [ %55, %77 ], [ %9, %45 ], [ %9, %51 ]
  %82 = bitcast %"class.std::__1::__tree_node_base"** %81 to %"class.std::__1::__tree_node"**
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %106

85:                                               ; preds = %79
  %86 = tail call i8* @_Znwm(i64 32) #14, !noalias !15
  %87 = getelementptr inbounds i8, i8* %86, i64 26
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %15, align 2, !noalias !15
  store i16 %89, i16* %88, align 2, !noalias !15
  %90 = bitcast i8* %86 to %"class.std::__1::__tree_node_base"*
  %91 = getelementptr inbounds i8, i8* %86, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 16, i1 false) #13
  %92 = bitcast i8* %91 to i64*
  store i64 %80, i64* %92, align 8
  %93 = bitcast %"class.std::__1::__tree_node_base"** %81 to i8**
  store i8* %86, i8** %93, align 8
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %85
  %99 = ptrtoint %"class.std::__1::__tree_node_base"* %96 to i64
  store i64 %99, i64* %11, align 8
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  br label %101

101:                                              ; preds = %98, %85
  %102 = phi %"class.std::__1::__tree_node_base"* [ %90, %85 ], [ %100, %98 ]
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"* %102) #13
  %104 = load i64, i64* %12, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %12, align 8
  br label %106

106:                                              ; preds = %79, %101
  %107 = getelementptr inbounds i16, i16* %15, i64 1
  %108 = icmp eq i16* %107, %2
  br i1 %108, label %13, label %14
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE16__construct_nodeIJRKtEEENS_10unique_ptrINS_11__tree_nodeItPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE16__construct_nodeIJRKtEEENS_10unique_ptrINS_11__tree_nodeItPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE16__construct_nodeIJRtS7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISK_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeItNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareItS8_NS_4lessItEELb1EEENS5_IS8_EEE16__construct_nodeIJRtS7_EEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISK_EEEEEEDpOT_"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{i32 -2139870370}
!14 = !{i32 -2139870349}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE16__construct_nodeIJRKtEEENS_10unique_ptrINS_11__tree_nodeItPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeItNS_4lessItEENS_9allocatorItEEE16__construct_nodeIJRKtEEENS_10unique_ptrINS_11__tree_nodeItPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
