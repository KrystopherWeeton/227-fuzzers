; ModuleID = '../../gpu/vulkan/vulkan_surface.cc'
source_filename = "../../gpu/vulkan/vulkan_surface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::VulkanSurface" = type { i32 (...)**, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceFormatKHR, %"class.gpu::VulkanDeviceQueue"*, i64, i32, %"class.gfx::Size", i32, i32, %"class.std::__1::unique_ptr.4" }
%struct.VkInstance_T = type opaque
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.gpu::VulkanDeviceQueue" = type { %"class.base::internal::flat_tree", %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %struct.VkInstance_T*, %struct.VmaAllocator_T*, %"class.std::__1::unique_ptr", %struct.VkPhysicalDeviceFeatures2, i8, %struct.VkPhysicalDeviceProtectedMemoryFeatures }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::BasicStringPiece"* }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%struct.VmaAllocator_T = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gpu::VulkanFenceHelper"* }
%"class.gpu::VulkanFenceHelper" = type opaque
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProtectedMemoryFeatures = type { i32, i8*, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.gpu::VulkanSwapChain"* }
%"class.gpu::VulkanSwapChain" = type { %"class.base::Lock", i64, %"class.gpu::VulkanDeviceQueue"*, i8, %struct.VkSwapchainKHR_T*, %"class.gfx::Size", %"class.std::__1::vector.7", i32, i8, i8, [2 x i8], %"class.base::ConditionVariable", i8, i32, %"class.absl::optional", i8, %class.scoped_refptr, %"class.base::circular_deque" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.VkSwapchainKHR_T = type opaque
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.gpu::VulkanSwapChain::ImageData"*, %"struct.gpu::VulkanSwapChain::ImageData"*, %"class.std::__1::__compressed_pair.9" }
%"struct.gpu::VulkanSwapChain::ImageData" = type { %struct.VkImage_T*, i32, %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%struct.VkImage_T = type opaque
%struct.VkSemaphore_T = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.gpu::VulkanSwapChain::ImageData"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.14 = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.gpu::VulkanSwapChain::PendingSemaphores"*, i64 }
%"struct.gpu::VulkanSwapChain::PendingSemaphores" = type { %struct.VkSemaphore_T*, %struct.VkSemaphore_T* }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"struct.gpu::VulkanFunctionPointers" = type { i8*, %"class.gpu::VulkanFunctionPointers::VulkanFunction", %"class.gpu::VulkanFunctionPointers::VulkanFunction.74", %"class.gpu::VulkanFunctionPointers::VulkanFunction.75", %"class.gpu::VulkanFunctionPointers::VulkanFunction.76", %"class.gpu::VulkanFunctionPointers::VulkanFunction.77", %"class.gpu::VulkanFunctionPointers::VulkanFunction.78", %"class.gpu::VulkanFunctionPointers::VulkanFunction.79", %"class.gpu::VulkanFunctionPointers::VulkanFunction.80", %"class.gpu::VulkanFunctionPointers::VulkanFunction.81", %"class.gpu::VulkanFunctionPointers::VulkanFunction.82", %"class.gpu::VulkanFunctionPointers::VulkanFunction.83", %"class.gpu::VulkanFunctionPointers::VulkanFunction.84", %"class.gpu::VulkanFunctionPointers::VulkanFunction.85", %"class.gpu::VulkanFunctionPointers::VulkanFunction.86", %"class.gpu::VulkanFunctionPointers::VulkanFunction.87", %"class.gpu::VulkanFunctionPointers::VulkanFunction.88", %"class.gpu::VulkanFunctionPointers::VulkanFunction.89", %"class.gpu::VulkanFunctionPointers::VulkanFunction.90", %"class.gpu::VulkanFunctionPointers::VulkanFunction.91", %"class.gpu::VulkanFunctionPointers::VulkanFunction.92", %"class.gpu::VulkanFunctionPointers::VulkanFunction.93", %"class.gpu::VulkanFunctionPointers::VulkanFunction.94", %"class.gpu::VulkanFunctionPointers::VulkanFunction.95", %"class.gpu::VulkanFunctionPointers::VulkanFunction.96", %"class.gpu::VulkanFunctionPointers::VulkanFunction.97", %"class.gpu::VulkanFunctionPointers::VulkanFunction.98", %"class.gpu::VulkanFunctionPointers::VulkanFunction.99", %"class.gpu::VulkanFunctionPointers::VulkanFunction.100", %"class.gpu::VulkanFunctionPointers::VulkanFunction.101", %"class.gpu::VulkanFunctionPointers::VulkanFunction.102", %"class.gpu::VulkanFunctionPointers::VulkanFunction.103", %"class.gpu::VulkanFunctionPointers::VulkanFunction.104", %"class.gpu::VulkanFunctionPointers::VulkanFunction.105", %"class.gpu::VulkanFunctionPointers::VulkanFunction.106", %"class.gpu::VulkanFunctionPointers::VulkanFunction.107", %"class.gpu::VulkanFunctionPointers::VulkanFunction.108", %"class.gpu::VulkanFunctionPointers::VulkanFunction.109", %"class.gpu::VulkanFunctionPointers::VulkanFunction.110", %"class.gpu::VulkanFunctionPointers::VulkanFunction.111", %"class.gpu::VulkanFunctionPointers::VulkanFunction.112", %"class.gpu::VulkanFunctionPointers::VulkanFunction.113", %"class.gpu::VulkanFunctionPointers::VulkanFunction.114", %"class.gpu::VulkanFunctionPointers::VulkanFunction.115", %"class.gpu::VulkanFunctionPointers::VulkanFunction.116", %"class.gpu::VulkanFunctionPointers::VulkanFunction.117", %"class.gpu::VulkanFunctionPointers::VulkanFunction.118", %"class.gpu::VulkanFunctionPointers::VulkanFunction.119", %"class.gpu::VulkanFunctionPointers::VulkanFunction.120", %"class.gpu::VulkanFunctionPointers::VulkanFunction.121", %"class.gpu::VulkanFunctionPointers::VulkanFunction.122", %"class.gpu::VulkanFunctionPointers::VulkanFunction.123", %"class.gpu::VulkanFunctionPointers::VulkanFunction.124", %"class.gpu::VulkanFunctionPointers::VulkanFunction.125", %"class.gpu::VulkanFunctionPointers::VulkanFunction.126", %"class.gpu::VulkanFunctionPointers::VulkanFunction.127", %"class.gpu::VulkanFunctionPointers::VulkanFunction.128", %"class.gpu::VulkanFunctionPointers::VulkanFunction.129", %"class.gpu::VulkanFunctionPointers::VulkanFunction.130", %"class.gpu::VulkanFunctionPointers::VulkanFunction.131", %"class.gpu::VulkanFunctionPointers::VulkanFunction.132", %"class.gpu::VulkanFunctionPointers::VulkanFunction.133", %"class.gpu::VulkanFunctionPointers::VulkanFunction.134", %"class.gpu::VulkanFunctionPointers::VulkanFunction.135", %"class.gpu::VulkanFunctionPointers::VulkanFunction.136", %"class.gpu::VulkanFunctionPointers::VulkanFunction.137", %"class.gpu::VulkanFunctionPointers::VulkanFunction.138", %"class.gpu::VulkanFunctionPointers::VulkanFunction.139", %"class.gpu::VulkanFunctionPointers::VulkanFunction.140", %"class.gpu::VulkanFunctionPointers::VulkanFunction.141", %"class.gpu::VulkanFunctionPointers::VulkanFunction.142", %"class.gpu::VulkanFunctionPointers::VulkanFunction.143", %"class.gpu::VulkanFunctionPointers::VulkanFunction.144", %"class.gpu::VulkanFunctionPointers::VulkanFunction.145", %"class.gpu::VulkanFunctionPointers::VulkanFunction.141", %"class.gpu::VulkanFunctionPointers::VulkanFunction.146", %"class.gpu::VulkanFunctionPointers::VulkanFunction.147", %"class.gpu::VulkanFunctionPointers::VulkanFunction.148", %"class.gpu::VulkanFunctionPointers::VulkanFunction.149", %"class.gpu::VulkanFunctionPointers::VulkanFunction.150", %"class.gpu::VulkanFunctionPointers::VulkanFunction.151", %"class.gpu::VulkanFunctionPointers::VulkanFunction.152", %"class.gpu::VulkanFunctionPointers::VulkanFunction.153", %"class.gpu::VulkanFunctionPointers::VulkanFunction.154", %"class.gpu::VulkanFunctionPointers::VulkanFunction.155", %"class.gpu::VulkanFunctionPointers::VulkanFunction.156", %"class.gpu::VulkanFunctionPointers::VulkanFunction.157", %"class.gpu::VulkanFunctionPointers::VulkanFunction.158", %"class.gpu::VulkanFunctionPointers::VulkanFunction.159", %"class.gpu::VulkanFunctionPointers::VulkanFunction.160", %"class.gpu::VulkanFunctionPointers::VulkanFunction.161", %"class.gpu::VulkanFunctionPointers::VulkanFunction.162", %"class.gpu::VulkanFunctionPointers::VulkanFunction.163", %"class.gpu::VulkanFunctionPointers::VulkanFunction.164", %"class.gpu::VulkanFunctionPointers::VulkanFunction.165", %"class.gpu::VulkanFunctionPointers::VulkanFunction.166", %"class.gpu::VulkanFunctionPointers::VulkanFunction.167", %"class.gpu::VulkanFunctionPointers::VulkanFunction.168", %"class.gpu::VulkanFunctionPointers::VulkanFunction.169", %"class.gpu::VulkanFunctionPointers::VulkanFunction.170", %"class.gpu::VulkanFunctionPointers::VulkanFunction.171" }
%"class.gpu::VulkanFunctionPointers::VulkanFunction" = type { void ()* (%struct.VkInstance_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.74" = type { i32 (i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.75" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.76" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.77" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.78" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.79" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.80" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.81" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.82" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.83" = type { void ()* (%struct.VkDevice_T*, i8*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.84" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.85" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.86" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.87" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.88" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.89" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.90" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.91" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.92" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.93" = type { void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.94" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.95" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.96" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.97" = type { i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.98" = type { i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.99" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkCommandBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.100" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.101" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.102" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.103" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.104" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.105" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.106" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.107" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.108" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.109" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.110" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.111" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.112" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.113" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.114" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.115" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.116" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.117" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.118" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.119" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.120" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkPipelineCache_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.gpu::VulkanFunctionPointers::VulkanFunction.121" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.122" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.123" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.124" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.125" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.126" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.127" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.128" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.129" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.130" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.131" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.132" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.133" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.134" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.135" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.136" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.137" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.138" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.139" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.140" = type { i32 (%struct.VkDevice_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.142" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.143" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.144" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.145" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.141" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.146" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.147" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.148" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.149" = type { void (%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**)* }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.150" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.151" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.152" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.153" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.154" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.155" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.156" = type { i32 (%struct.VkQueue_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.157" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.158" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.159" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.160" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.161" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.162" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.163" = type { i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)* }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.164" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.165" = type { i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)* }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.166" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.167" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)* }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.168" = type { void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.169" = type { i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.170" = type { i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%"class.gpu::VulkanFunctionPointers::VulkanFunction.171" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageDrmFormatModifierPropertiesEXT*)* }
%struct.VkImageDrmFormatModifierPropertiesEXT = type { i32, i8*, i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.29", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.29" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::ScopedBlockingCall" = type { %"class.base::internal::UncheckedScopedBlockingCall" }
%"class.base::internal::UncheckedScopedBlockingCall" = type { %"class.base::internal::BlockingObserver"*, %"class.base::internal::UncheckedScopedBlockingCall"*, i8, [7 x i8], %"class.base::debug::ScopedActivity", %"class.absl::optional.56" }
%"class.base::internal::BlockingObserver" = type { i32 (...)** }
%"class.base::debug::ScopedActivity" = type <{ %"class.base::debug::GlobalActivityTracker::ScopedThreadActivity", i32, [4 x i8] }>
%"class.base::debug::GlobalActivityTracker::ScopedThreadActivity" = type { %"class.base::debug::ThreadActivityTracker::ScopedActivity.base", %"class.std::__1::unique_ptr.37" }
%"class.base::debug::ThreadActivityTracker::ScopedActivity.base" = type <{ %"class.base::debug::ThreadActivityTracker"*, i32 }>
%"class.base::debug::ThreadActivityTracker" = type <{ i32 (...)**, %"struct.base::debug::ThreadActivityTracker::Header"*, %"struct.base::debug::Activity"*, i32, i8, [3 x i8] }>
%"struct.base::debug::ThreadActivityTracker::Header" = type opaque
%"struct.base::debug::Activity" = type { i64, i64, i64, [10 x i64], i32, i32, i8, [7 x i8], %"union.base::debug::ActivityData" }
%"union.base::debug::ActivityData" = type { %struct.anon.31 }
%struct.anon.31 = type { i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.base::debug::ActivityUserData"* }
%"class.base::debug::ActivityUserData" = type { i32 (...)**, %"class.std::__1::map", i8*, i64, %"struct.base::debug::ActivityUserData::MemoryHeader"*, i32, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"struct.base::debug::ActivityUserData::MemoryHeader" = type { %"struct.base::debug::OwningProcess" }
%"struct.base::debug::OwningProcess" = type { %"struct.std::__1::atomic.48", i32, i64, i64 }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i32 }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" }
%"class.base::internal::IOJankMonitoringWindow::ScopedMonitoredCall" = type { %"class.base::TimeTicks", %class.scoped_refptr.61 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.61 = type { %"class.base::internal::IOJankMonitoringWindow"* }
%"class.base::internal::IOJankMonitoringWindow" = type <{ %"class.base::RefCountedThreadSafe.66", [4 x i8], %"class.base::Lock", [60 x i64], %"class.base::TimeTicks", %class.scoped_refptr.61, i8, [7 x i8] }>
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.70 }
%struct.anon.70 = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN3gpu13VulkanSurfaceE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::VulkanSurface"*)* @_ZN3gpu13VulkanSurfaceD2Ev to i8*), i8* bitcast (void (%"class.gpu::VulkanSurface"*)* @_ZN3gpu13VulkanSurfaceD0Ev to i8*), i8* bitcast (void (%"class.gpu::VulkanSurface"*)* @_ZN3gpu13VulkanSurface7DestroyEv to i8*), i8* bitcast (i1 (%"class.gpu::VulkanSurface"*, %"class.gfx::Size"*, i32)* @_ZN3gpu13VulkanSurface7ReshapeERKN3gfx4SizeENS1_16OverlayTransformE to i8*)] }, align 8
@_ZN3gpu12_GLOBAL__N_121kPreferredVkFormats32E = internal unnamed_addr constant [2 x i32] [i32 44, i32 37], align 4
@_ZN3gpu12_GLOBAL__N_121kPreferredVkFormats16E = internal unnamed_addr constant [1 x i32] [i32 4], align 4
@.str = private unnamed_addr constant [7 x i8] c"Finish\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../gpu/vulkan/vulkan_surface.cc\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"vkGetPhysicalDeviceSurfaceCapabilitiesKHR() failed: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3gpu13VulkanSurfaceD1Ev = hidden unnamed_addr alias void (%"class.gpu::VulkanSurface"*), void (%"class.gpu::VulkanSurface"*)* @_ZN3gpu13VulkanSurfaceD2Ev
@_ZN3gpu13VulkanSurfaceC1EP12VkInstance_TjP14VkSurfaceKHR_Tm = hidden unnamed_addr alias void (%"class.gpu::VulkanSurface"*, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, i64), void (%"class.gpu::VulkanSurface"*, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, i64)* @_ZN3gpu13VulkanSurfaceC2EP12VkInstance_TjP14VkSurfaceKHR_Tm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13VulkanSurfaceD2Ev(%"class.gpu::VulkanSurface"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13VulkanSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %3, align 8
  store %"class.gpu::VulkanSwapChain"* null, %"class.gpu::VulkanSwapChain"** %3, align 8
  %5 = icmp eq %"class.gpu::VulkanSwapChain"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"* nonnull %4) #7
  %7 = bitcast %"class.gpu::VulkanSwapChain"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13VulkanSurfaceD0Ev(%"class.gpu::VulkanSurface"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13VulkanSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %3, align 8
  store %"class.gpu::VulkanSwapChain"* null, %"class.gpu::VulkanSwapChain"** %3, align 8
  %5 = icmp eq %"class.gpu::VulkanSwapChain"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"* nonnull %4) #7
  %7 = bitcast %"class.gpu::VulkanSwapChain"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.gpu::VulkanSurface"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gpu13VulkanSurfaceC2EP12VkInstance_TjP14VkSurfaceKHR_Tm(%"class.gpu::VulkanSurface"* nocapture, %struct.VkInstance_T*, i32, %struct.VkSurfaceKHR_T*, i64) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu13VulkanSurfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 1
  store %struct.VkInstance_T* %1, %struct.VkInstance_T** %7, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 3
  store %struct.VkSurfaceKHR_T* %3, %struct.VkSurfaceKHR_T** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 6
  %12 = bitcast i32* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  store i64 %4, i64* %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11
  %15 = bitcast %"class.std::__1::unique_ptr.4"* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13VulkanSurface10InitializeEPNS_17VulkanDeviceQueueENS0_6FormatE(%"class.gpu::VulkanSurface"* nocapture, %"class.gpu::VulkanDeviceQueue"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.VkSurfaceCapabilitiesKHR, align 4
  %7 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 5
  store %"class.gpu::VulkanDeviceQueue"* %1, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  store i32 -1431655766, i32* %4, align 4
  %9 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 1
  %10 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %1, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 3
  %14 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %13, align 8
  %15 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %16 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %15, i64 0, i32 24, i32 0
  %17 = load i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)** %16, align 8
  %18 = call i32 %17(%struct.VkPhysicalDevice_T* %10, i32 %12, %struct.VkSurfaceKHR_T* %14, i32* nonnull %4) #7
  %19 = icmp ne i32 %18, 0
  %20 = load i32, i32* %4, align 4
  %21 = icmp eq i32 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %119, label %23

23:                                               ; preds = %3
  %24 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7
  store i32 0, i32* %5, align 4
  %25 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %26 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %25, i64 0, i32 1
  %27 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %28 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %13, align 8
  %29 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %30 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %29, i64 0, i32 23, i32 0
  %31 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %30, align 8
  %32 = call i32 %31(%struct.VkPhysicalDevice_T* %27, %struct.VkSurfaceKHR_T* %28, i32* nonnull %5, %struct.VkSurfaceFormatKHR* null) #7
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %117

34:                                               ; preds = %23
  %35 = load i32, i32* %5, align 4
  %36 = zext i32 %35 to i64
  %37 = icmp eq i32 %35, 0
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = shl nuw nsw i64 %36, 3
  %40 = call i8* @_Znwm(i64 %39) #8
  %41 = bitcast i8* %40 to %struct.VkSurfaceFormatKHR*
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %41, i64 %36
  %44 = add nsw i64 %36, -1
  %45 = getelementptr %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %41, i64 %44, i32 0
  %46 = ptrtoint i32* %45 to i64
  %47 = sub i64 8, %42
  %48 = add i64 %47, %46
  %49 = and i64 %48, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 0, i64 %49, i1 false) #7
  %50 = ptrtoint %struct.VkSurfaceFormatKHR* %43 to i64
  br label %51

51:                                               ; preds = %34, %38
  %52 = phi i64 [ 0, %34 ], [ %42, %38 ]
  %53 = phi i64 [ 0, %34 ], [ %50, %38 ]
  %54 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %55 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %54, i64 0, i32 1
  %56 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %55, align 8
  %57 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %13, align 8
  %58 = inttoptr i64 %52 to %struct.VkSurfaceFormatKHR*
  %59 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %60 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %59, i64 0, i32 23, i32 0
  %61 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)** %60, align 8
  %62 = call i32 %61(%struct.VkPhysicalDevice_T* %56, %struct.VkSurfaceKHR_T* %57, i32* nonnull %5, %struct.VkSurfaceFormatKHR* %58) #7
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %112

64:                                               ; preds = %51
  %65 = icmp eq i32 %2, 0
  %66 = select i1 %65, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @_ZN3gpu12_GLOBAL__N_121kPreferredVkFormats32E, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @_ZN3gpu12_GLOBAL__N_121kPreferredVkFormats16E, i64 0, i64 0)
  %67 = sub i64 %53, %52
  %68 = icmp eq i64 %67, 8
  br i1 %68, label %69, label %76

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %58, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  %74 = load i32, i32* %66, align 4
  %75 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 4, i32 0
  store i32 %74, i32* %75, align 8
  br label %93

76:                                               ; preds = %69, %64
  %77 = inttoptr i64 %53 to %struct.VkSurfaceFormatKHR*
  %78 = icmp eq %struct.VkSurfaceFormatKHR* %58, %77
  br i1 %78, label %112, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 4, i32 0
  %81 = load i32, i32* %66, align 4
  %82 = getelementptr inbounds i32, i32* %66, i64 1
  br label %83

83:                                               ; preds = %90, %79
  %84 = phi %struct.VkSurfaceFormatKHR* [ %58, %79 ], [ %91, %90 ]
  %85 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %84, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, %81
  br i1 %87, label %88, label %89

88:                                               ; preds = %121, %83
  store i32 %86, i32* %80, align 8
  br label %93

89:                                               ; preds = %83
  br i1 %65, label %121, label %90

90:                                               ; preds = %121, %89
  %91 = getelementptr inbounds %struct.VkSurfaceFormatKHR, %struct.VkSurfaceFormatKHR* %84, i64 1
  %92 = icmp eq %struct.VkSurfaceFormatKHR* %91, %77
  br i1 %92, label %112, label %83

93:                                               ; preds = %88, %73
  %94 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 4, i32 1
  store i32 0, i32* %94, align 4
  %95 = bitcast %struct.VkSurfaceCapabilitiesKHR* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %95) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %95, i8 -86, i64 52, i1 false)
  %96 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %97 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %96, i64 0, i32 1
  %98 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %97, align 8
  %99 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %13, align 8
  %100 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %101 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %100, i64 0, i32 22, i32 0
  %102 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %101, align 8
  %103 = call i32 %102(%struct.VkPhysicalDevice_T* %98, %struct.VkSurfaceKHR_T* %99, %struct.VkSurfaceCapabilitiesKHR* nonnull %6) #7
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %110

105:                                              ; preds = %93
  %106 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %6, i64 0, i32 9
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 23
  %109 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 9
  store i32 %108, i32* %109, align 4
  br label %110

110:                                              ; preds = %93, %105
  %111 = phi i1 [ true, %105 ], [ false, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %95) #7
  br label %112

112:                                              ; preds = %90, %76, %110, %51
  %113 = phi i1 [ false, %51 ], [ %111, %110 ], [ false, %76 ], [ false, %90 ]
  %114 = icmp eq i64 %52, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = inttoptr i64 %52 to i8*
  call void @_ZdlPv(i8* %116) #8
  br label %117

117:                                              ; preds = %115, %112, %23
  %118 = phi i1 [ false, %23 ], [ %113, %112 ], [ %113, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7
  br label %119

119:                                              ; preds = %3, %117
  %120 = phi i1 [ %118, %117 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  ret i1 %120

121:                                              ; preds = %89
  %122 = load i32, i32* %82, align 4
  %123 = icmp eq i32 %86, %122
  br i1 %123, label %88, label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13VulkanSurface7DestroyEv(%"class.gpu::VulkanSurface"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %2, align 8
  %4 = icmp eq %"class.gpu::VulkanSwapChain"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  tail call void @_ZN3gpu15VulkanSwapChain7DestroyEv(%"class.gpu::VulkanSwapChain"* nonnull %3) #7
  %6 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %2, align 8
  store %"class.gpu::VulkanSwapChain"* null, %"class.gpu::VulkanSwapChain"** %2, align 8
  %7 = icmp eq %"class.gpu::VulkanSwapChain"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  tail call void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"* nonnull %6) #7
  %9 = bitcast %"class.gpu::VulkanSwapChain"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %8, %5
  %11 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 1
  %12 = load %struct.VkInstance_T*, %struct.VkInstance_T** %11, align 8
  %13 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 3
  %14 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %13, align 8
  %15 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %16 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %15, i64 0, i32 21, i32 0
  %17 = load void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)** %16, align 8
  tail call void %17(%struct.VkInstance_T* %12, %struct.VkSurfaceKHR_T* %14, %struct.VkAllocationCallbacks* null) #7
  store %struct.VkSurfaceKHR_T* null, %struct.VkSurfaceKHR_T** %13, align 8
  ret void
}

declare void @_ZN3gpu15VulkanSwapChain7DestroyEv(%"class.gpu::VulkanSwapChain"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13VulkanSurface11SwapBuffersEv(%"class.gpu::VulkanSurface"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7
  %4 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %8 = bitcast %"class.gfx::Size"* %4 to i64*
  %9 = bitcast %"class.gfx::Size"* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %11, align 8
  %13 = call i32 @_ZN3gpu15VulkanSwapChain13PostSubBufferERKN3gfx4RectE(%"class.gpu::VulkanSwapChain"* %12, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3gpu13VulkanSurface13PostSubBufferERKN3gfx4RectE(%"class.gpu::VulkanSurface"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %3, align 8
  %5 = tail call i32 @_ZN3gpu15VulkanSwapChain13PostSubBufferERKN3gfx4RectE(%"class.gpu::VulkanSwapChain"* %4, %"class.gfx::Rect"* dereferenceable(16) %1) #7
  ret i32 %5
}

declare i32 @_ZN3gpu15VulkanSwapChain13PostSubBufferERKN3gfx4RectE(%"class.gpu::VulkanSwapChain"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13VulkanSurface18PostSubBufferAsyncERKN3gfx4RectEN4base12OnceCallbackIFvNS1_10SwapResultEEEE(%"class.gpu::VulkanSurface"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16), %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %5, align 8
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  call void @_ZN3gpu15VulkanSwapChain18PostSubBufferAsyncERKN3gfx4RectEN4base12OnceCallbackIFvNS1_10SwapResultEEEE(%"class.gpu::VulkanSwapChain"* %6, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.base::OnceCallback"* nonnull %4) #7
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #7
  ret void
}

declare void @_ZN3gpu15VulkanSwapChain18PostSubBufferAsyncERKN3gfx4RectEN4base12OnceCallbackIFvNS1_10SwapResultEEEE(%"class.gpu::VulkanSwapChain"*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::OnceCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu13VulkanSurface6FinishEv(%"class.gpu::VulkanSurface"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::ScopedBlockingCall", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast %"class.base::ScopedBlockingCall"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 80, i1 false)
  %5 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #7
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 214) #7
  call void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3, i32 1) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 5
  %7 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %6, align 8
  %8 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %7, i64 0, i32 6
  %9 = load %struct.VkQueue_T*, %struct.VkQueue_T** %8, align 8
  %10 = call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %11 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %10, i64 0, i32 85, i32 0
  %12 = load i32 (%struct.VkQueue_T*)*, i32 (%struct.VkQueue_T*)** %11, align 8
  %13 = call i32 %12(%struct.VkQueue_T* %9) #7
  call void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %4) #7
  ret void
}

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

declare void @_ZN4base18ScopedBlockingCallC1ERKNS_8LocationENS_12BlockingTypeE(%"class.base::ScopedBlockingCall"*, %"class.base::Location"* dereferenceable(32), i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base18ScopedBlockingCallD1Ev(%"class.base::ScopedBlockingCall"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13VulkanSurface7ReshapeERKN3gfx4SizeENS1_16OverlayTransformE(%"class.gpu::VulkanSurface"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN3gpu13VulkanSurface15CreateSwapChainERKN3gfx4SizeENS1_16OverlayTransformE(%"class.gpu::VulkanSurface"* %0, %"class.gfx::Size"* dereferenceable(8) %1, i32 %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu13VulkanSurface15CreateSwapChainERKN3gfx4SizeENS1_16OverlayTransformE(%"class.gpu::VulkanSurface"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkSurfaceCapabilitiesKHR, align 4
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = bitcast %struct.VkSurfaceCapabilitiesKHR* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 52, i1 false)
  %7 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 5
  %8 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::VulkanDeviceQueue", %"class.gpu::VulkanDeviceQueue"* %8, i64 0, i32 1
  %10 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %9, align 8
  %11 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 3
  %12 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %11, align 8
  %13 = tail call %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() #7
  %14 = getelementptr inbounds %"struct.gpu::VulkanFunctionPointers", %"struct.gpu::VulkanFunctionPointers"* %13, i64 0, i32 22, i32 0
  %15 = load i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)** %14, align 8
  %16 = call i32 %15(%struct.VkPhysicalDevice_T* %10, %struct.VkSurfaceKHR_T* %12, %struct.VkSurfaceCapabilitiesKHR* nonnull %4) #7
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 3) #7
  br i1 %19, label %20, label %137

20:                                               ; preds = %18
  %21 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %21) #7
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 231, i32 3) #7
  %22 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %22 to %"class.std::__1::basic_ostream"*
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i64 52) #7
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %24, i32 %16) #7
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %21) #7
  br label %137

26:                                               ; preds = %3
  switch i32 %2, label %41 [
    i32 0, label %32
    i32 6, label %31
    i32 2, label %27
    i32 3, label %28
    i32 4, label %29
    i32 5, label %30
  ]

27:                                               ; preds = %26
  br label %41

28:                                               ; preds = %26
  br label %41

29:                                               ; preds = %26
  br label %41

30:                                               ; preds = %26
  br label %41

31:                                               ; preds = %26
  br label %41

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 7
  %34 = load i32, i32* %33, align 4
  switch i32 %34, label %40 [
    i32 1, label %41
    i32 16, label %35
    i32 64, label %36
    i32 2, label %37
    i32 4, label %38
    i32 8, label %39
  ]

35:                                               ; preds = %32
  br label %41

36:                                               ; preds = %32
  br label %41

37:                                               ; preds = %32
  br label %41

38:                                               ; preds = %32
  br label %41

39:                                               ; preds = %32
  br label %41

40:                                               ; preds = %32
  br label %41

41:                                               ; preds = %26, %27, %28, %29, %30, %31, %40, %39, %38, %37, %36, %35, %32
  %42 = phi i32 [ %34, %32 ], [ %34, %35 ], [ %34, %36 ], [ %34, %37 ], [ %34, %38 ], [ %34, %39 ], [ %34, %40 ], [ 16, %27 ], [ 64, %28 ], [ 2, %29 ], [ 4, %30 ], [ 8, %31 ], [ 1, %26 ]
  %43 = phi i32 [ %34, %32 ], [ 2, %35 ], [ 3, %36 ], [ 4, %37 ], [ 5, %38 ], [ 6, %39 ], [ 0, %40 ], [ %2, %27 ], [ %2, %28 ], [ %2, %29 ], [ %2, %30 ], [ %2, %31 ], [ %2, %26 ]
  %44 = bitcast %"class.gfx::Size"* %1 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %46, 0
  %50 = icmp eq i32 %48, 0
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %41
  %53 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 2, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %54, %56
  %58 = icmp eq i32 %57, -1
  %59 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 3, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 3, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %58, i32 %60, i32 %54
  %64 = select i1 %58, i32 %62, i32 %56
  %65 = icmp sgt i32 %63, 0
  %66 = select i1 %65, i32 %63, i32 0
  %67 = icmp sgt i32 %64, 0
  %68 = select i1 %67, i32 %64, i32 0
  %69 = or i32 %43, 2
  %70 = icmp eq i32 %69, 6
  %71 = select i1 %70, i32 %68, i32 %66
  %72 = select i1 %70, i32 %66, i32 %68
  br label %73

73:                                               ; preds = %52, %41
  %74 = phi i32 [ %46, %41 ], [ %71, %52 ]
  %75 = phi i32 [ %48, %41 ], [ %72, %52 ]
  %76 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 8
  %77 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %74
  br i1 %79, label %80, label %101

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 8, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, %75
  br i1 %83, label %84, label %101

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 10
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, %43
  br i1 %87, label %88, label %101

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %90 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %89, align 8
  %91 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %91) #7
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94, !prof !2

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %90, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %95) #7
  br label %96

96:                                               ; preds = %88, %94
  %97 = getelementptr inbounds %"class.gpu::VulkanSwapChain", %"class.gpu::VulkanSwapChain"* %90, i64 0, i32 13
  %98 = load i32, i32* %97, align 4
  %99 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %91) #7
  %100 = icmp eq i32 %98, 0
  br i1 %100, label %137, label %101

101:                                              ; preds = %73, %96, %84, %80
  %102 = bitcast %"class.gfx::Size"* %76 to i64*
  %103 = zext i32 %75 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %74 to i64
  %106 = or i64 %104, %105
  store i64 %106, i64* %102, align 4
  %107 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 10
  store i32 %43, i32* %107, align 8
  %108 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 6
  %109 = call i8* @_Znwm(i64 240) #8
  %110 = bitcast i8* %109 to %"class.gpu::VulkanSwapChain"*
  %111 = load i64, i64* %108, align 8
  call void @_ZN3gpu15VulkanSwapChainC1Em(%"class.gpu::VulkanSwapChain"* nonnull %110, i64 %111) #7
  %112 = getelementptr inbounds %struct.VkSurfaceCapabilitiesKHR, %struct.VkSurfaceCapabilitiesKHR* %4, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp ugt i32 %113, 3
  %115 = select i1 %114, i32 %113, i32 3
  %116 = load %"class.gpu::VulkanDeviceQueue"*, %"class.gpu::VulkanDeviceQueue"** %7, align 8
  %117 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %11, align 8
  %118 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 4
  %119 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 9
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 11
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.4"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.gpu::VulkanSwapChain"* null, %"class.gpu::VulkanSwapChain"** %122, align 8
  %125 = call zeroext i1 @_ZN3gpu15VulkanSwapChain10InitializeEPNS_17VulkanDeviceQueueEP14VkSurfaceKHR_TRK18VkSurfaceFormatKHRRKN3gfx4SizeEjj29VkSurfaceTransformFlagBitsKHRNSt3__110unique_ptrIS0_NSD_14default_deleteIS0_EEEE(%"class.gpu::VulkanSwapChain"* nonnull %110, %"class.gpu::VulkanDeviceQueue"* %116, %struct.VkSurfaceKHR_T* %117, %struct.VkSurfaceFormatKHR* dereferenceable(8) %118, %"class.gfx::Size"* dereferenceable(8) %76, i32 %115, i32 %120, i32 %42, i64 %124) #7
  br i1 %125, label %126, label %136

126:                                              ; preds = %101
  %127 = ptrtoint i8* %109 to i64
  %128 = load %"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanSwapChain"** %122, align 8
  store i64 %127, i64* %123, align 8
  %129 = icmp eq %"class.gpu::VulkanSwapChain"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  call void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"* nonnull %128) #7
  %131 = bitcast %"class.gpu::VulkanSwapChain"* %128 to i8*
  call void @_ZdlPv(i8* %131) #8
  br label %132

132:                                              ; preds = %130, %126
  %133 = getelementptr inbounds %"class.gpu::VulkanSurface", %"class.gpu::VulkanSurface"* %0, i64 0, i32 7
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 8
  br label %137

136:                                              ; preds = %101
  call void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"* nonnull %110) #7
  call void @_ZdlPv(i8* nonnull %109) #8
  br label %137

137:                                              ; preds = %96, %132, %136, %20, %18
  %138 = phi i1 [ false, %18 ], [ false, %20 ], [ true, %96 ], [ true, %132 ], [ false, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %6) #7
  ret i1 %138
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

declare zeroext i1 @_ZN3gpu15VulkanSwapChain10InitializeEPNS_17VulkanDeviceQueueEP14VkSurfaceKHR_TRK18VkSurfaceFormatKHRRKN3gfx4SizeEjj29VkSurfaceTransformFlagBitsKHRNSt3__110unique_ptrIS0_NSD_14default_deleteIS0_EEEE(%"class.gpu::VulkanSwapChain"*, %"class.gpu::VulkanDeviceQueue"*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceFormatKHR* dereferenceable(8), %"class.gfx::Size"* dereferenceable(8), i32, i32, i32, i64) local_unnamed_addr #4

declare %"struct.gpu::VulkanFunctionPointers"* @_ZN3gpu25GetVulkanFunctionPointersEv() local_unnamed_addr #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gpu15VulkanSwapChainD1Ev(%"class.gpu::VulkanSwapChain"*) unnamed_addr #5

declare void @_ZN3gpu15VulkanSwapChainC1Em(%"class.gpu::VulkanSwapChain"*, i64) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
