; ModuleID = 'gen/third_party/blink/public/mojom/worker/shared_worker_connector.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/worker/shared_worker_connector.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter" = type { %"class.blink::mojom::blink::SharedWorkerConnector"* }
%"class.blink::mojom::blink::SharedWorkerConnector" = type { i32 (...)** }
%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting" = type { %"class.blink::mojom::blink::SharedWorkerConnector" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::SharedWorkerInfo"* }
%"class.blink::mojom::blink::SharedWorkerInfo" = type { %"class.blink::KURL", %"class.mojo::InlinedStructPtr", %"class.WTF::Vector", i32, %"class.mojo::StructPtr.40" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::WorkerOptions", i32, [4 x i8] }>
%"class.blink::mojom::blink::WorkerOptions" = type { i32, i32, %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr.5"*, i32, i32 }
%"class.mojo::StructPtr.5" = type { %"class.std::__1::unique_ptr.6" }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.9", %"class.WTF::HashMap", %"class.WTF::HashMap.16", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.21", i8, %"class.WTF::Vector.23", i32, %"class.mojo::StructPtr.28", %"class.WTF::Vector.23" }
%"class.mojo::StructPtr.9" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.16" = type { %"class.WTF::HashTable.17" }
%"class.WTF::HashTable.17" = type <{ %"struct.WTF::KeyValuePair.20"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.20" = type opaque
%"class.mojo::InlinedStructPtr.21" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.23", i8, i8, [6 x i8] }>
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::StructPtr.40" = type { %"class.std::__1::unique_ptr.41" }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::mojom::blink::FetchClientSettingsObject"* }
%"class.blink::mojom::blink::FetchClientSettingsObject" = type <{ i32, [4 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::PendingRemote.50" = type { %"struct.mojo::internal::PendingRemoteState" }

$_ZN5blink5mojom5blink21SharedWorkerConnectorD2Ev = comdat any

$_ZN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerConnector"*)* @_ZN5blink5mojom5blink21SharedWorkerConnectorD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)* @_ZN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)* @_ZN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTesting7ConnectEN4mojo9StructPtrINS1_16SharedWorkerInfoEEENS3_13PendingRemoteINS1_18SharedWorkerClientEEENS0_31SharedWorkerCreationContextTypeENS_21MessagePortDescriptorENS7_INS1_12BlobURLTokenEEEl to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterC1EPNS1_21SharedWorkerConnectorE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorkerConnector"*), void (%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"*, %"class.blink::mojom::blink::SharedWorkerConnector"*)* @_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterC2EPNS1_21SharedWorkerConnectorE
@_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"*), void (%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"*)* @_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTesting7ConnectEN4mojo9StructPtrINS1_16SharedWorkerInfoEEENS3_13PendingRemoteINS1_18SharedWorkerClientEEENS0_31SharedWorkerCreationContextTypeENS_21MessagePortDescriptorENS7_INS1_12BlobURLTokenEEEl(%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*, %"class.mojo::StructPtr"* nocapture, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.mojo::PendingRemote", align 4
  %10 = alloca %"class.blink::MessagePortDescriptor", align 8
  %11 = alloca %"class.mojo::PendingRemote.50", align 4
  %12 = bitcast %"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"* %0 to %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)***
  %13 = load %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)**, %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)** %13, i64 3
  %15 = load %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)*, %"class.blink::mojom::blink::SharedWorkerConnector"* (%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*)** %14, align 8
  %16 = tail call %"class.blink::mojom::blink::SharedWorkerConnector"* %15(%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"* %0) #8
  %17 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %18 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 0, i64* %19, align 8
  %21 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %9, i64 0, i32 0
  %22 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %21, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %22) #8
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %10, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %4) #8
  %23 = getelementptr inbounds %"class.mojo::PendingRemote.50", %"class.mojo::PendingRemote.50"* %11, i64 0, i32 0
  %24 = getelementptr inbounds %"class.mojo::PendingRemote.50", %"class.mojo::PendingRemote.50"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %23, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %24) #8
  %25 = bitcast %"class.blink::mojom::blink::SharedWorkerConnector"* %16 to void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)***
  %26 = load void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)**, void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)*, void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)** %26, i64 2
  %28 = load void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)*, void (%"class.blink::mojom::blink::SharedWorkerConnector"*, %"class.mojo::StructPtr"*, %"class.mojo::PendingRemote"*, i32, %"class.blink::MessagePortDescriptor"*, %"class.mojo::PendingRemote.50"*, i64)** %27, align 8
  call void %28(%"class.blink::mojom::blink::SharedWorkerConnector"* %16, %"class.mojo::StructPtr"* nonnull %8, %"class.mojo::PendingRemote"* nonnull %9, i32 %3, %"class.blink::MessagePortDescriptor"* nonnull %10, %"class.mojo::PendingRemote.50"* nonnull %11, i64 %6) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %23) #8
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %10) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %21) #8
  %29 = load %"class.blink::mojom::blink::SharedWorkerInfo"*, %"class.blink::mojom::blink::SharedWorkerInfo"** %18, align 8
  store %"class.blink::mojom::blink::SharedWorkerInfo"* null, %"class.blink::mojom::blink::SharedWorkerInfo"** %18, align 8
  %30 = icmp eq %"class.blink::mojom::blink::SharedWorkerInfo"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %7
  call void @_ZN5blink5mojom5blink16SharedWorkerInfoD1Ev(%"class.blink::mojom::blink::SharedWorkerInfo"* nonnull %29) #8
  %32 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerInfo", %"class.blink::mojom::blink::SharedWorkerInfo"* %29, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %7, %31
  ret void
}

declare void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterC2EPNS1_21SharedWorkerConnectorE(%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"* nocapture, %"class.blink::mojom::blink::SharedWorkerConnector"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter", %"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::SharedWorkerConnector"* %1, %"class.blink::mojom::blink::SharedWorkerConnector"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink32SharedWorkerConnectorAsyncWaiterD2Ev(%"class.blink::mojom::blink::SharedWorkerConnectorAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink21SharedWorkerConnectorD2Ev(%"class.blink::mojom::blink::SharedWorkerConnector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink42SharedWorkerConnectorInterceptorForTestingD0Ev(%"class.blink::mojom::blink::SharedWorkerConnectorInterceptorForTesting"*) unnamed_addr #5 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16SharedWorkerInfoD1Ev(%"class.blink::mojom::blink::SharedWorkerInfo"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
