; ModuleID = '../../ui/views/layout/grid_layout.cc'
source_filename = "../../ui/views/layout/grid_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::ColumnSet" = type { i32, i32, %"class.std::__1::vector.1", %"class.std::__1::vector.11", %"class.std::__1::vector" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.views::Column"* }
%"class.views::Column" = type { %"class.views::LayoutElement.base", i32, i32, i32, i32, i32, i32, i8, %"class.std::__1::vector", %"class.views::Column"* }
%"class.views::LayoutElement.base" = type <{ i32 (...)**, float, i32, i32 }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.views::ViewState"**, %"struct.views::ViewState"**, %"class.std::__1::__compressed_pair.299" }
%"struct.views::ViewState" = type { %"class.views::ColumnSet"*, %"class.views::View"*, i32, i32, i32, i32, i32, i32, i8, i8, %"class.gfx::Size", i32, i32, i32, i32, i32 }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.71", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.78", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.97", %"class.absl::optional.103", i8, [7 x i8], %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.140", i8, i8, [3 x i8], %"class.std::__1::vector.145", %"class.std::__1::unique_ptr.152", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.270", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289", %"class.base::ObserverList.295", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.13", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.21" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.26", %"class.std::__1::vector.42", %"class.ui::EventHandler"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.49" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.42" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.35" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::flat_map.38"* }
%"class.base::flat_map.38" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.62" }
%"class.std::__1::map.62" = type { %"class.std::__1::__tree.63" }
%"class.std::__1::__tree.63" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::vector.71"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.87", %"struct.std::__1::atomic.87", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.85, %class.SkTDArray.86, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.85 = type { i8*, i32, i32 }
%class.SkTDArray.86 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.92 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.87" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.92 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.93", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i8 }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i8 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.103" = type { %"class.absl::optional_internal::optional_data.104" }
%"class.absl::optional_internal::optional_data.104" = type { %"class.absl::optional_internal::optional_data_base.105" }
%"class.absl::optional_internal::optional_data_base.105" = type { %"class.absl::optional_internal::optional_data_dtor_base.106" }
%"class.absl::optional_internal::optional_data_dtor_base.106" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.120, float, [4 x i8] }>
%class.sk_sp.120 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.121", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.125", %"class.base::ObserverList.136", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.125" = type { %"class.std::__1::__tree.126" }
%"class.std::__1::__tree.126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::ObserverList.136" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList.137", i64, i32, [4 x i8] }>
%"class.base::LinkedList.137" = type { %"class.base::LinkNode.138" }
%"class.base::LinkNode.138" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.140" = type { %"class.absl::optional_internal::optional_data.141" }
%"class.absl::optional_internal::optional_data.141" = type { %"class.absl::optional_internal::optional_data_base.142" }
%"class.absl::optional_internal::optional_data_base.142" = type { %"class.absl::optional_internal::optional_data_dtor_base.143" }
%"class.absl::optional_internal::optional_data_dtor_base.143" = type { i8, %union.anon.144 }
%union.anon.144 = type { i8 }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.243", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.260", i32, [4 x i8], %"class.base::ObserverList.266", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.162", %"class.base::ObserverList.173", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.230", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.236", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.71", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.242" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.162" = type <{ %"class.std::__1::vector.163", %"class.base::LinkedList.170", i64, i32, [4 x i8] }>
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.165" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.87" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.170" = type { %"class.base::LinkNode.171" }
%"class.base::LinkNode.171" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.173" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList.174", i64, i32, [4 x i8] }>
%"class.base::LinkedList.174" = type { %"class.base::LinkNode.175" }
%"class.base::LinkNode.175" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.177", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.177" = type { %"class.std::__1::__list_imp.178" }
%"class.std::__1::__list_imp.178" = type { %"struct.std::__1::__list_node_base.179", %"class.std::__1::__compressed_pair.180" }
%"struct.std::__1::__list_node_base.179" = type { %"struct.std::__1::__list_node_base.179"*, %"struct.std::__1::__list_node_base.179"* }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.185", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.185" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.186 }
%class.scoped_refptr.186 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type { i32 (...)**, %"class.views::Widget"*, %"struct.views::WidgetDelegate::Params", %"class.views::View"*, i8, i8, %"class.views::View"*, %"class.std::__1::unique_ptr.208", i8, i8*, %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", %"class.std::__1::vector.217", %"class.std::__1::vector.217", %"class.std::__1::vector.217", %"class.base::OnceCallback.227", %"class.base::RepeatingCallback.228", %"class.base::OnceCallback.229" }
%"struct.views::WidgetDelegate::Params" = type { i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.absl::optional.194", %"class.std::__1::basic_string.199", i32, i8, i8, i8, i8, %"class.std::__1::basic_string" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.absl::optional.194" = type { %"class.absl::optional_internal::optional_data.195" }
%"class.absl::optional_internal::optional_data.195" = type { %"class.absl::optional_internal::optional_data_base.196" }
%"class.absl::optional_internal::optional_data_base.196" = type { %"class.absl::optional_internal::optional_data_dtor_base.197" }
%"class.absl::optional_internal::optional_data_dtor_base.197" = type { i8, %union.anon.198 }
%union.anon.198 = type { %"class.views::View"* }
%"class.std::__1::basic_string.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.202 }
%union.anon.202 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.189 }
%union.anon.189 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.std::__1::vector.217"* }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.219" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback.227" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.228" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback.229" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.304", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.71", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.78", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.97", %"class.absl::optional.103", i8, [7 x i8], %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.140", i8, i8, [3 x i8], %"class.std::__1::vector.145", %"class.std::__1::unique_ptr.152", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.270", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289", %"class.base::ObserverList.295", i32 }>
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.242" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.249" }
%"class.std::__1::map.249" = type { %"class.std::__1::__tree.250" }
%"class.std::__1::__tree.250" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.266" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList.267", i64, i32, [4 x i8] }>
%"class.base::LinkedList.267" = type { %"class.base::LinkNode.268" }
%"class.base::LinkNode.268" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.std::__1::vector.273"* }
%"class.std::__1::vector.273" = type { %"class.std::__1::__vector_base.274" }
%"class.std::__1::__vector_base.274" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.275" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.295" = type <{ %"class.std::__1::vector.19", %"class.base::LinkedList.296", i64, i32, [4 x i8] }>
%"class.base::LinkedList.296" = type { %"class.base::LinkNode.297" }
%"class.base::LinkNode.297" = type { %"class.base::internal::LinkNodeBase" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"struct.views::ViewState"** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.views::Column"**, %"class.views::Column"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.views::Column"** }
%"class.views::GridLayout" = type <{ %"class.views::LayoutManager", %"class.views::View"*, i8, [3 x i8], i32, i32, i32, %"class.views::ColumnSet"*, i8, [7 x i8], %"class.std::__1::vector.331", %"class.std::__1::vector.344", %"class.std::__1::vector.357", %"class.gfx::Size", i8, [7 x i8] }>
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.views::ViewState"* }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::unique_ptr.333"* }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"*, %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.views::ColumnSet"* }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.std::__1::unique_ptr.346"* }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"*, %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.views::Row"* }
%"class.views::Row" = type { %"class.views::LayoutElement.base", i32, %"class.views::ColumnSet"*, i32, i32 }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::unique_ptr.359"* }
%"class.views::LayoutElement" = type <{ i32 (...)**, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { i32*, i32*, %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"class.std::__1::__compressed_pair.323" }
%"struct.views::(anonymous namespace)::ColumnMinResizeData" = type { %"class.views::Column"*, i32, i32 }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"struct.views::(anonymous namespace)::ColumnMinResizeData"* }
%"struct.std::__1::default_delete.350" = type { i8 }
%"struct.std::__1::__split_buffer.407" = type { %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.340", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::allocator.342"* }
%"class.std::__1::allocator.342" = type { i8 }
%"class.views::SizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.views::SizeBound" = type { %"class.absl::optional.380" }
%"class.absl::optional.380" = type { %"class.absl::optional_internal::optional_data.381" }
%"class.absl::optional_internal::optional_data.381" = type { %"class.absl::optional_internal::optional_data_base.382" }
%"class.absl::optional_internal::optional_data_base.382" = type { %"class.absl::optional_internal::optional_data_dtor_base.383" }
%"class.absl::optional_internal::optional_data_dtor_base.383" = type { i8, %union.anon.384 }
%union.anon.384 = type { i32 }

$_ZN5views13LayoutElement10AdjustSizeEi = comdat any

$_ZNSt3__16vectorIPN5views9ViewStateENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_ = comdat any

$_ZNSt3__16vectorIPN5views6ColumnENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_ = comdat any

$_ZN5views6ColumnD2Ev = comdat any

$_ZN5views6ColumnD0Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5views6ColumnENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNKSt3__114default_deleteIN5views9ColumnSetEEclEPS2_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5views9ColumnSetENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN5views13LayoutElementD2Ev = comdat any

$_ZN5views3RowD0Ev = comdat any

$_ZN5views3Row9ResetSizeEv = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5views3RowENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZTVN5views3RowE = comdat any

@_ZTVN5views10GridLayoutE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::GridLayout"*)* @_ZN5views10GridLayoutD2Ev to i8*), i8* bitcast (void (%"class.views::GridLayout"*)* @_ZN5views10GridLayoutD0Ev to i8*), i8* bitcast (void (%"class.views::GridLayout"*, %"class.views::View"*)* @_ZN5views10GridLayout9InstalledEPNS_4ViewE to i8*), i8* bitcast (void (%"class.views::LayoutManager"*)* @_ZN5views13LayoutManager16InvalidateLayoutEv to i8*), i8* bitcast (void (%"class.views::GridLayout"*, %"class.views::View"*)* @_ZN5views10GridLayout6LayoutEPNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::GridLayout"*, %"class.views::View"*)* @_ZNK5views10GridLayout16GetPreferredSizeEPKNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::LayoutManager"*, %"class.views::View"*)* @_ZNK5views13LayoutManager14GetMinimumSizeEPKNS_4ViewE to i8*), i8* bitcast (i32 (%"class.views::GridLayout"*, %"class.views::View"*, i32)* @_ZNK5views10GridLayout26GetPreferredHeightForWidthEPKNS_4ViewEi to i8*), i8* bitcast (void (%"class.views::SizeBounds"*, %"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*)* @_ZNK5views13LayoutManager16GetAvailableSizeEPKNS_4ViewES3_ to i8*), i8* bitcast (void (%"class.views::GridLayout"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views10GridLayout9ViewAddedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::GridLayout"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views10GridLayout11ViewRemovedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*, i1, i1)* @_ZN5views13LayoutManager17ViewVisibilitySetEPNS_4ViewES2_bb to i8*), i8* bitcast (void (%"class.std::__1::vector.71"*, %"class.views::LayoutManager"*, %"class.views::View"*)* @_ZNK5views13LayoutManager25GetChildViewsInPaintOrderEPKNS_4ViewE to i8*)] }, align 8
@_ZTVN5views6ColumnE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Column"*)* @_ZN5views6ColumnD2Ev to i8*), i8* bitcast (void (%"class.views::Column"*)* @_ZN5views6ColumnD0Ev to i8*), i8* bitcast (void (%"class.views::Column"*, i32)* @_ZN5views6Column10AdjustSizeEi to i8*), i8* bitcast (void (%"class.views::Column"*)* @_ZN5views6Column9ResetSizeEv to i8*)] }, align 8
@_ZTVN5views3RowE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::LayoutElement"*)* @_ZN5views13LayoutElementD2Ev to i8*), i8* bitcast (void (%"class.views::Row"*)* @_ZN5views3RowD0Ev to i8*), i8* bitcast (void (%"class.views::LayoutElement"*, i32)* @_ZN5views13LayoutElement10AdjustSizeEi to i8*), i8* bitcast (void (%"class.views::Row"*)* @_ZN5views3Row9ResetSizeEv to i8*)] }, comdat, align 8

@_ZN5views9ColumnSetC1Ei = hidden unnamed_addr alias void (%"class.views::ColumnSet"*, i32), void (%"class.views::ColumnSet"*, i32)* @_ZN5views9ColumnSetC2Ei
@_ZN5views9ColumnSetD1Ev = hidden unnamed_addr alias void (%"class.views::ColumnSet"*), void (%"class.views::ColumnSet"*)* @_ZN5views9ColumnSetD2Ev
@_ZN5views10GridLayoutC1Ev = hidden unnamed_addr alias void (%"class.views::GridLayout"*), void (%"class.views::GridLayout"*)* @_ZN5views10GridLayoutC2Ev
@_ZN5views10GridLayoutD1Ev = hidden unnamed_addr alias void (%"class.views::GridLayout"*), void (%"class.views::GridLayout"*)* @_ZN5views10GridLayoutD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views6Column9ResetSizeEv(%"class.views::Column"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 5
  %7 = select i1 %4, i32* %6, i32* %5
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 0, i32 3
  store i32 %8, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.views::Column"* @_ZN5views6Column19GetLastMasterColumnEv(%"class.views::Column"* readonly) local_unnamed_addr #1 align 2 {
  br label %2

2:                                                ; preds = %7, %1
  %3 = phi %"class.views::Column"* [ %0, %1 ], [ %5, %7 ]
  %4 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %3, i64 0, i32 9
  %5 = load %"class.views::Column"*, %"class.views::Column"** %4, align 8
  %6 = icmp eq %"class.views::Column"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = icmp eq %"class.views::Column"* %5, %3
  br i1 %8, label %9, label %2

9:                                                ; preds = %7, %2
  %10 = phi %"class.views::Column"* [ null, %2 ], [ %3, %7 ]
  ret %"class.views::Column"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views6Column22UnifyLinkedColumnSizesEi(%"class.views::Column"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.views::Column"**, %"class.views::Column"*** %3, align 8
  %5 = ptrtoint %"class.views::Column"** %4 to i64
  %6 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 1
  %7 = load %"class.views::Column"**, %"class.views::Column"*** %6, align 8
  %8 = icmp eq %"class.views::Column"** %4, %7
  br i1 %8, label %106, label %9

9:                                                ; preds = %2
  %10 = getelementptr %"class.views::Column"*, %"class.views::Column"** %7, i64 -1
  %11 = ptrtoint %"class.views::Column"** %10 to i64
  %12 = sub i64 %11, %5
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 3
  %16 = icmp ult i64 %12, 24
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = sub nsw i64 %14, %15
  br label %64

19:                                               ; preds = %64, %9
  %20 = phi i32 [ undef, %9 ], [ %102, %64 ]
  %21 = phi i32 [ 0, %9 ], [ %102, %64 ]
  %22 = phi %"class.views::Column"** [ %4, %9 ], [ %103, %64 ]
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %39, label %24

24:                                               ; preds = %19, %24
  %25 = phi i32 [ %35, %24 ], [ %21, %19 ]
  %26 = phi %"class.views::Column"** [ %36, %24 ], [ %22, %19 ]
  %27 = phi i64 [ %37, %24 ], [ %15, %19 ]
  %28 = bitcast %"class.views::Column"** %26 to %"class.views::LayoutElement"**
  %29 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %28, align 8
  %30 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, %1
  %33 = icmp slt i32 %25, %31
  %34 = select i1 %33, i32 %31, i32 %25
  %35 = select i1 %32, i32 %25, i32 %34
  %36 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %26, i64 1
  %37 = add i64 %27, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %24, !llvm.loop !2

39:                                               ; preds = %24, %19
  %40 = phi i32 [ %20, %19 ], [ %35, %24 ]
  br i1 %8, label %106, label %41

41:                                               ; preds = %39
  %42 = getelementptr %"class.views::Column"*, %"class.views::Column"** %7, i64 -1
  %43 = ptrtoint %"class.views::Column"** %42 to i64
  %44 = sub i64 %43, %5
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %61, label %49

49:                                               ; preds = %41, %49
  %50 = phi %"class.views::Column"** [ %58, %49 ], [ %4, %41 ]
  %51 = phi i64 [ %59, %49 ], [ %47, %41 ]
  %52 = bitcast %"class.views::Column"** %50 to %"class.views::LayoutElement"**
  %53 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %52, align 8
  %54 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %40, %55
  %57 = select i1 %56, i32 %55, i32 %40
  store i32 %57, i32* %54, align 8
  %58 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %50, i64 1
  %59 = add i64 %51, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %49, !llvm.loop !4

61:                                               ; preds = %49, %41
  %62 = phi %"class.views::Column"** [ %4, %41 ], [ %58, %49 ]
  %63 = icmp ult i64 %44, 24
  br i1 %63, label %106, label %107

64:                                               ; preds = %64, %17
  %65 = phi i32 [ 0, %17 ], [ %102, %64 ]
  %66 = phi %"class.views::Column"** [ %4, %17 ], [ %103, %64 ]
  %67 = phi i64 [ %18, %17 ], [ %104, %64 ]
  %68 = bitcast %"class.views::Column"** %66 to %"class.views::LayoutElement"**
  %69 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %68, align 8
  %70 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp sgt i32 %71, %1
  %73 = icmp slt i32 %65, %71
  %74 = select i1 %73, i32 %71, i32 %65
  %75 = select i1 %72, i32 %65, i32 %74
  %76 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %66, i64 1
  %77 = bitcast %"class.views::Column"** %76 to %"class.views::LayoutElement"**
  %78 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %77, align 8
  %79 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %78, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, %1
  %82 = icmp slt i32 %75, %80
  %83 = select i1 %82, i32 %80, i32 %75
  %84 = select i1 %81, i32 %75, i32 %83
  %85 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %66, i64 2
  %86 = bitcast %"class.views::Column"** %85 to %"class.views::LayoutElement"**
  %87 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %86, align 8
  %88 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %87, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = icmp sgt i32 %89, %1
  %91 = icmp slt i32 %84, %89
  %92 = select i1 %91, i32 %89, i32 %84
  %93 = select i1 %90, i32 %84, i32 %92
  %94 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %66, i64 3
  %95 = bitcast %"class.views::Column"** %94 to %"class.views::LayoutElement"**
  %96 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %95, align 8
  %97 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %96, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = icmp sgt i32 %98, %1
  %100 = icmp slt i32 %93, %98
  %101 = select i1 %100, i32 %98, i32 %93
  %102 = select i1 %99, i32 %93, i32 %101
  %103 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %66, i64 4
  %104 = add i64 %67, -4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %19, label %64

106:                                              ; preds = %61, %107, %2, %39
  ret void

107:                                              ; preds = %61, %107
  %108 = phi %"class.views::Column"** [ %136, %107 ], [ %62, %61 ]
  %109 = bitcast %"class.views::Column"** %108 to %"class.views::LayoutElement"**
  %110 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %109, align 8
  %111 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %110, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = icmp slt i32 %40, %112
  %114 = select i1 %113, i32 %112, i32 %40
  store i32 %114, i32* %111, align 8
  %115 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %108, i64 1
  %116 = bitcast %"class.views::Column"** %115 to %"class.views::LayoutElement"**
  %117 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %116, align 8
  %118 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %117, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = icmp slt i32 %40, %119
  %121 = select i1 %120, i32 %119, i32 %40
  store i32 %121, i32* %118, align 8
  %122 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %108, i64 2
  %123 = bitcast %"class.views::Column"** %122 to %"class.views::LayoutElement"**
  %124 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %123, align 8
  %125 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %124, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = icmp slt i32 %40, %126
  %128 = select i1 %127, i32 %126, i32 %40
  store i32 %128, i32* %125, align 8
  %129 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %108, i64 3
  %130 = bitcast %"class.views::Column"** %129 to %"class.views::LayoutElement"**
  %131 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %130, align 8
  %132 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %131, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = icmp slt i32 %40, %133
  %135 = select i1 %134, i32 %133, i32 %40
  store i32 %135, i32* %132, align 8
  %136 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %108, i64 4
  %137 = icmp eq %"class.views::Column"** %136, %7
  br i1 %137, label %106, label %107
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views6Column10AdjustSizeEi(%"class.views::Column"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %1, i32 %8
  store i32 %10, i32* %7, align 8
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views13LayoutElement10AdjustSizeEi(%"class.views::LayoutElement"*, i32) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, %1
  %6 = select i1 %5, i32 %1, i32 %4
  store i32 %6, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSetC2Ei(%"class.views::ColumnSet"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 1
  store i32 2147483647, i32* %4, align 4
  %5 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__1::vector.1"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSetD2Ev(%"class.views::ColumnSet"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.views::Column"**, %"class.views::Column"*** %2, align 8
  %4 = icmp eq %"class.views::Column"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.views::Column"** %3 to i64
  %7 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.views::Column"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.views::Column"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %11, align 8
  %13 = icmp eq %"struct.views::ViewState"** %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.views::ViewState"** %12 to i64
  %16 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = bitcast %"struct.views::ViewState"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.views::ViewState"** %12 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::unique_ptr"* %22 to i8*
  %26 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, %22
  br i1 %28, label %45, label %29

29:                                               ; preds = %24, %40
  %30 = phi %"class.std::__1::unique_ptr"* [ %31, %40 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.views::Column"*, %"class.views::Column"** %32, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %32, align 8
  %34 = icmp eq %"class.views::Column"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.views::Column"* %33 to void (%"class.views::Column"*)***
  %37 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %37, i64 1
  %39 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %38, align 8
  tail call void %39(%"class.views::Column"* nonnull %33) #15
  br label %40

40:                                               ; preds = %35, %29
  %41 = icmp eq %"class.std::__1::unique_ptr"* %31, %22
  br i1 %41, label %42, label %29

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.1"* %20 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %24
  %46 = phi i8* [ %44, %42 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr"* %22, %"class.std::__1::unique_ptr"** %26, align 8
  tail call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %19, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet16AddPaddingColumnEfi(%"class.views::ColumnSet"*, float, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = tail call i8* @_Znwm(i64 80) #14
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to float*
  store float %1, float* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views6ColumnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 20
  %11 = bitcast i8* %10 to <4 x i32>*
  store <4 x i32> <i32 3, i32 3, i32 0, i32 -1>, <4 x i32>* %11, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 36
  %13 = bitcast i8* %12 to i32*
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 40
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 44
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds i8, i8* %6, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #15
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i8**
  store i8* %6, i8** %19, align 8
  %20 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %22 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = icmp ult %"class.std::__1::unique_ptr"* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %3
  %26 = ptrtoint i8* %6 to i64
  store %"class.views::Column"* null, %"class.views::Column"** %18, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = ptrtoint %"class.std::__1::unique_ptr"* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %33

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5views6ColumnENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %32, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #15
  br label %33

33:                                               ; preds = %31, %25
  %34 = load %"class.views::Column"*, %"class.views::Column"** %18, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %18, align 8
  %35 = icmp eq %"class.views::Column"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.views::Column"* %34 to void (%"class.views::Column"*)***
  %38 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %38, i64 1
  %40 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %39, align 8
  call void %40(%"class.views::Column"* nonnull %34) #15
  br label %41

41:                                               ; preds = %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet9AddColumnENS_10GridLayout9AlignmentES2_fNS1_10ColumnSizeEiib(%"class.views::ColumnSet"*, i32, i32, float, i32, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = zext i1 %7 to i8
  %11 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %12 = tail call i8* @_Znwm(i64 80) #14
  %13 = bitcast i8* %12 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to float*
  store float %3, float* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views6ColumnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 20
  %17 = bitcast i8* %16 to i32*
  store i32 %1, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %12, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 28
  %21 = bitcast i8* %20 to i32*
  store i32 %4, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %12, i64 32
  %23 = bitcast i8* %22 to i32*
  store i32 -1, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %12, i64 36
  %25 = bitcast i8* %24 to i32*
  store i32 %5, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %12, i64 40
  %27 = bitcast i8* %26 to i32*
  store i32 %6, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %12, i64 44
  store i8 %10, i8* %28, align 4
  %29 = getelementptr inbounds i8, i8* %12, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #15
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"* %9 to i8**
  store i8* %12, i8** %31, align 8
  %32 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %34, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr"* %33, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %8
  %38 = ptrtoint i8* %12 to i64
  store %"class.views::Column"* null, %"class.views::Column"** %30, align 8
  %39 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr"* %40 to i64
  %42 = bitcast %"class.std::__1::unique_ptr"** %32 to i64*
  store i64 %41, i64* %42, align 8
  br label %45

43:                                               ; preds = %8
  %44 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5views6ColumnENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %44, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %9) #15
  br label %45

45:                                               ; preds = %37, %43
  %46 = load %"class.views::Column"*, %"class.views::Column"** %30, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %30, align 8
  %47 = icmp eq %"class.views::Column"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.views::Column"* %46 to void (%"class.views::Column"*)***
  %50 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %50, i64 1
  %52 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %51, align 8
  call void %52(%"class.views::Column"* nonnull %46) #15
  br label %53

53:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet9AddColumnENS_10GridLayout9AlignmentES2_fNS1_10ColumnSizeEii(%"class.views::ColumnSet"*, i32, i32, float, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call i8* @_Znwm(i64 80) #14
  %11 = bitcast i8* %10 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to float*
  store float %3, float* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views6ColumnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %10, i64 24
  %17 = bitcast i8* %16 to i32*
  store i32 %2, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 28
  %19 = bitcast i8* %18 to i32*
  store i32 %4, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %10, i64 32
  %21 = bitcast i8* %20 to i32*
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %10, i64 36
  %23 = bitcast i8* %22 to i32*
  store i32 %5, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %10, i64 40
  %25 = bitcast i8* %24 to i32*
  store i32 %6, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %10, i64 44
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds i8, i8* %10, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #15
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::unique_ptr"* %8 to i8**
  store i8* %10, i8** %29, align 8
  %30 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %30, align 8
  %32 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr"* %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %7
  %36 = ptrtoint i8* %10 to i64
  store %"class.views::Column"* null, %"class.views::Column"** %28, align 8
  %37 = bitcast %"class.std::__1::unique_ptr"* %31 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = bitcast %"class.std::__1::unique_ptr"** %30 to i64*
  store i64 %39, i64* %40, align 8
  br label %43

41:                                               ; preds = %7
  %42 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5views6ColumnENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"* %42, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %8) #15
  br label %43

43:                                               ; preds = %41, %35
  %44 = load %"class.views::Column"*, %"class.views::Column"** %28, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %28, align 8
  %45 = icmp eq %"class.views::Column"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.views::Column"* %44 to void (%"class.views::Column"*)***
  %48 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %48, i64 1
  %50 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %49, align 8
  call void %50(%"class.views::Column"* nonnull %44) #15
  br label %51

51:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet15LinkColumnSizesERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.views::ColumnSet"* nocapture readonly, %"class.std::__1::vector.310"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %1, i64 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.310"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = icmp ult i64 %9, 2
  %11 = inttoptr i64 %7 to i32*
  br i1 %10, label %33, label %12

12:                                               ; preds = %2
  %13 = load i32, i32* %11, align 4
  %14 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  br label %15

15:                                               ; preds = %12, %15
  %16 = phi i32* [ %11, %12 ], [ %32, %15 ]
  %17 = phi i32 [ %13, %12 ], [ %20, %15 ]
  %18 = phi i64 [ 1, %12 ], [ %26, %15 ]
  %19 = getelementptr inbounds i32, i32* %16, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %17 to i64
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 %21, i32 0, i32 0, i32 0
  %24 = load %"class.views::Column"*, %"class.views::Column"** %23, align 8
  %25 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %24, i64 0, i32 4
  store i32 %20, i32* %25, align 8
  %26 = add nuw i64 %18, 1
  %27 = load i64, i64* %4, align 8
  %28 = load i64, i64* %6, align 8
  %29 = sub i64 %27, %28
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %26, %30
  %32 = inttoptr i64 %28 to i32*
  br i1 %31, label %15, label %33

33:                                               ; preds = %15, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet12AddViewStateEPNS_9ViewStateE(%"class.views::ColumnSet"*, %"struct.views::ViewState"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.views::ViewState"*, align 8
  store %"struct.views::ViewState"* %1, %"struct.views::ViewState"** %3, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %4, i64 0, i32 0, i32 0
  %6 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  %7 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"struct.views::ViewState"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"struct.views::ViewState"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %2
  %14 = ashr exact i64 %11, 3
  %15 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %17, %13
  %18 = phi %"struct.views::ViewState"** [ %30, %17 ], [ %6, %13 ]
  %19 = phi i64 [ %29, %17 ], [ %14, %13 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %18, i64 %20
  %22 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %21, align 8
  %23 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, %16
  %26 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %21, i64 1
  %27 = xor i64 %20, -1
  %28 = add i64 %19, %27
  %29 = select i1 %25, i64 %28, i64 %20
  %30 = select i1 %25, %"struct.views::ViewState"** %26, %"struct.views::ViewState"** %18
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %17

32:                                               ; preds = %17, %2
  %33 = phi %"struct.views::ViewState"** [ %6, %2 ], [ %30, %17 ]
  %34 = call %"struct.views::ViewState"** @_ZNSt3__16vectorIPN5views9ViewStateENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.11"* %4, %"struct.views::ViewState"** %33, %"struct.views::ViewState"** nonnull dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.views::ViewState"** @_ZNSt3__16vectorIPN5views9ViewStateENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.11"*, %"struct.views::ViewState"**, %"struct.views::ViewState"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"struct.views::ViewState"** %1 to i64
  %5 = bitcast %"struct.views::ViewState"** %1 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %9, align 8
  %11 = icmp ult %"struct.views::ViewState"** %8, %10
  %12 = ptrtoint %"struct.views::ViewState"** %8 to i64
  %13 = ptrtoint %"struct.views::ViewState"** %10 to i64
  br i1 %11, label %14, label %172

14:                                               ; preds = %3
  %15 = icmp eq %"struct.views::ViewState"** %8, %1
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = bitcast %"struct.views::ViewState"** %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.views::ViewState"** %1 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 1
  %21 = ptrtoint %"struct.views::ViewState"** %20 to i64
  %22 = bitcast %"struct.views::ViewState"*** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %439

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 1
  %25 = ptrtoint %"struct.views::ViewState"** %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %27
  %29 = bitcast %"struct.views::ViewState"*** %7 to i64*
  %30 = icmp ult %"struct.views::ViewState"** %28, %8
  br i1 %30, label %31, label %144

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %32
  %34 = bitcast %"struct.views::ViewState"** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = icmp ult i64 %39, 4
  br i1 %40, label %41, label %44

41:                                               ; preds = %139, %44, %31
  %42 = phi %"struct.views::ViewState"** [ %8, %44 ], [ %8, %31 ], [ %62, %139 ]
  %43 = phi %"struct.views::ViewState"** [ %28, %44 ], [ %28, %31 ], [ %63, %139 ]
  br label %151

44:                                               ; preds = %31
  %45 = sub nsw i64 0, %27
  %46 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %45
  %47 = bitcast %"struct.views::ViewState"** %46 to i8*
  %48 = xor i64 %4, -1
  %49 = getelementptr i8, i8* %47, i64 %48
  %50 = ptrtoint i8* %49 to i64
  %51 = lshr i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %52
  %54 = add nsw i64 %27, %51
  %55 = add nsw i64 %54, 1
  %56 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %55
  %57 = icmp ult %"struct.views::ViewState"** %8, %56
  %58 = icmp ult %"struct.views::ViewState"** %28, %53
  %59 = and i1 %57, %58
  br i1 %59, label %41, label %60

60:                                               ; preds = %44
  %61 = and i64 %39, 4611686018427387900
  %62 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %61
  %63 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %61
  %64 = add nsw i64 %61, -4
  %65 = lshr exact i64 %64, 2
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp ult i64 %64, 12
  br i1 %68, label %120, label %69

69:                                               ; preds = %60
  %70 = sub nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %117, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %118, %71 ]
  %74 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %72
  %75 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %72
  %76 = bitcast %"struct.views::ViewState"** %75 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !alias.scope !5
  %78 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %75, i64 2
  %79 = bitcast %"struct.views::ViewState"** %78 to <2 x i64>*
  %80 = load <2 x i64>, <2 x i64>* %79, align 8, !alias.scope !5
  %81 = bitcast %"struct.views::ViewState"** %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %81, align 8, !alias.scope !8, !noalias !5
  %82 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %74, i64 2
  %83 = bitcast %"struct.views::ViewState"** %82 to <2 x i64>*
  store <2 x i64> %80, <2 x i64>* %83, align 8, !alias.scope !8, !noalias !5
  %84 = or i64 %72, 4
  %85 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %84
  %86 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %84
  %87 = bitcast %"struct.views::ViewState"** %86 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 8, !alias.scope !5
  %89 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %86, i64 2
  %90 = bitcast %"struct.views::ViewState"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8, !alias.scope !5
  %92 = bitcast %"struct.views::ViewState"** %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %92, align 8, !alias.scope !8, !noalias !5
  %93 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %85, i64 2
  %94 = bitcast %"struct.views::ViewState"** %93 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %94, align 8, !alias.scope !8, !noalias !5
  %95 = or i64 %72, 8
  %96 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %95
  %97 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %95
  %98 = bitcast %"struct.views::ViewState"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !5
  %100 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %97, i64 2
  %101 = bitcast %"struct.views::ViewState"** %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !5
  %103 = bitcast %"struct.views::ViewState"** %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !8, !noalias !5
  %104 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %96, i64 2
  %105 = bitcast %"struct.views::ViewState"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !8, !noalias !5
  %106 = or i64 %72, 12
  %107 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %106
  %108 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %106
  %109 = bitcast %"struct.views::ViewState"** %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !5
  %111 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %108, i64 2
  %112 = bitcast %"struct.views::ViewState"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !5
  %114 = bitcast %"struct.views::ViewState"** %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !8, !noalias !5
  %115 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %107, i64 2
  %116 = bitcast %"struct.views::ViewState"** %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !8, !noalias !5
  %117 = add i64 %72, 16
  %118 = add i64 %73, -4
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %71, !llvm.loop !10

120:                                              ; preds = %71, %60
  %121 = phi i64 [ 0, %60 ], [ %117, %71 ]
  %122 = icmp eq i64 %67, 0
  br i1 %122, label %139, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %136, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %137, %123 ], [ %67, %120 ]
  %126 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %124
  %127 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, i64 %124
  %128 = bitcast %"struct.views::ViewState"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !5
  %130 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %127, i64 2
  %131 = bitcast %"struct.views::ViewState"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !5
  %133 = bitcast %"struct.views::ViewState"** %126 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %133, align 8, !alias.scope !8, !noalias !5
  %134 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %126, i64 2
  %135 = bitcast %"struct.views::ViewState"** %134 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8, !alias.scope !8, !noalias !5
  %136 = add i64 %124, 4
  %137 = add i64 %125, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %123, !llvm.loop !12

139:                                              ; preds = %123, %120
  %140 = icmp eq i64 %39, %61
  br i1 %140, label %141, label %41

141:                                              ; preds = %151, %139
  %142 = phi %"struct.views::ViewState"** [ %62, %139 ], [ %158, %151 ]
  %143 = ptrtoint %"struct.views::ViewState"** %142 to i64
  br label %144

144:                                              ; preds = %141, %23
  %145 = phi i64 [ %143, %141 ], [ %12, %23 ]
  store i64 %145, i64* %29, align 8
  %146 = icmp eq i64 %26, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = sub nsw i64 0, %27
  %149 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %8, i64 %148
  %150 = bitcast %"struct.views::ViewState"** %149 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %5, i64 %26, i1 false) #15
  br label %160

151:                                              ; preds = %41, %151
  %152 = phi %"struct.views::ViewState"** [ %158, %151 ], [ %42, %41 ]
  %153 = phi %"struct.views::ViewState"** [ %157, %151 ], [ %43, %41 ]
  %154 = bitcast %"struct.views::ViewState"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.views::ViewState"** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %153, i64 1
  %158 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %152, i64 1
  %159 = icmp ult %"struct.views::ViewState"** %157, %8
  br i1 %159, label %151, label %141, !llvm.loop !13

160:                                              ; preds = %144, %147
  %161 = icmp ugt %"struct.views::ViewState"** %1, %2
  br i1 %161, label %167, label %162

162:                                              ; preds = %160
  %163 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %7, align 8
  %164 = icmp ugt %"struct.views::ViewState"** %163, %2
  %165 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %2, i64 1
  %166 = select i1 %164, %"struct.views::ViewState"** %165, %"struct.views::ViewState"** %2
  br label %167

167:                                              ; preds = %162, %160
  %168 = phi %"struct.views::ViewState"** [ %2, %160 ], [ %166, %162 ]
  %169 = bitcast %"struct.views::ViewState"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"struct.views::ViewState"** %1 to i64*
  store i64 %170, i64* %171, align 8
  br label %439

172:                                              ; preds = %3
  %173 = bitcast %"struct.views::ViewState"*** %7 to i64*
  %174 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %12, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %172
  %181 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #16
  unreachable

182:                                              ; preds = %172
  %183 = bitcast %"struct.views::ViewState"*** %9 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = sub i64 %4, %175
  %189 = ashr exact i64 %188, 3
  br label %200

190:                                              ; preds = %182
  %191 = ashr exact i64 %184, 2
  %192 = icmp ult i64 %191, %178
  %193 = select i1 %192, i64 %178, i64 %191
  %194 = sub i64 %4, %175
  %195 = ashr exact i64 %194, 3
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %206, label %197

197:                                              ; preds = %190
  %198 = icmp ugt i64 %193, 2305843009213693951
  br i1 %198, label %199, label %200

199:                                              ; preds = %197
  tail call void @abort() #16
  unreachable

200:                                              ; preds = %187, %197
  %201 = phi i64 [ 2305843009213693951, %187 ], [ %193, %197 ]
  %202 = phi i64 [ %189, %187 ], [ %195, %197 ]
  %203 = shl i64 %201, 3
  %204 = tail call i8* @_Znwm(i64 %203) #14
  %205 = bitcast i8* %204 to %"struct.views::ViewState"**
  br label %206

206:                                              ; preds = %190, %200
  %207 = phi i64 [ %202, %200 ], [ %195, %190 ]
  %208 = phi i64 [ %201, %200 ], [ 0, %190 ]
  %209 = phi i8* [ %204, %200 ], [ null, %190 ]
  %210 = phi %"struct.views::ViewState"** [ %205, %200 ], [ null, %190 ]
  %211 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %210, i64 %207
  %212 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %210, i64 %208
  %213 = ptrtoint %"struct.views::ViewState"** %212 to i64
  %214 = icmp eq i64 %207, %208
  %215 = bitcast %"struct.views::ViewState"** %211 to i64*
  br i1 %214, label %216, label %240

216:                                              ; preds = %206
  %217 = icmp sgt i64 %207, 0
  br i1 %217, label %218, label %223

218:                                              ; preds = %216
  %219 = add nuw nsw i64 %207, 1
  %220 = sdiv i64 %219, -2
  %221 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %211, i64 %220
  %222 = bitcast %"struct.views::ViewState"** %221 to i64*
  br label %240

223:                                              ; preds = %216
  %224 = shl nsw i64 %207, 1
  %225 = icmp eq i64 %207, 0
  %226 = select i1 %225, i64 1, i64 %224
  %227 = icmp ugt i64 %226, 2305843009213693951
  br i1 %227, label %228, label %229

228:                                              ; preds = %223
  tail call void @abort() #16
  unreachable

229:                                              ; preds = %223
  %230 = lshr i64 %226, 2
  %231 = shl i64 %226, 3
  %232 = tail call i8* @_Znwm(i64 %231) #14
  %233 = bitcast i8* %232 to %"struct.views::ViewState"**
  %234 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %233, i64 %230
  %235 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %233, i64 %226
  %236 = ptrtoint %"struct.views::ViewState"** %235 to i64
  %237 = icmp eq %"struct.views::ViewState"** %210, null
  %238 = bitcast %"struct.views::ViewState"** %234 to i64*
  br i1 %237, label %240, label %239

239:                                              ; preds = %229
  tail call void @_ZdlPv(i8* %209) #14
  br label %240

240:                                              ; preds = %206, %218, %229, %239
  %241 = phi %"struct.views::ViewState"** [ %221, %218 ], [ %234, %229 ], [ %234, %239 ], [ %211, %206 ]
  %242 = phi i64 [ %213, %218 ], [ %236, %229 ], [ %236, %239 ], [ %213, %206 ]
  %243 = phi i64* [ %222, %218 ], [ %238, %229 ], [ %238, %239 ], [ %215, %206 ]
  %244 = bitcast %"struct.views::ViewState"** %2 to i64*
  %245 = load i64, i64* %244, align 8
  store i64 %245, i64* %243, align 8
  %246 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %241, i64 1
  %247 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %6, align 8
  %248 = ptrtoint %"struct.views::ViewState"** %247 to i64
  %249 = sub i64 %4, %248
  %250 = ashr exact i64 %249, 3
  %251 = sub nsw i64 0, %250
  %252 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %241, i64 %251
  %253 = ptrtoint %"struct.views::ViewState"** %252 to i64
  %254 = icmp sgt i64 %249, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %240
  %256 = bitcast %"struct.views::ViewState"** %252 to i8*
  %257 = bitcast %"struct.views::ViewState"** %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 %249, i1 false) #15
  br label %258

258:                                              ; preds = %255, %240
  %259 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %7, align 8
  %260 = icmp eq %"struct.views::ViewState"** %259, %1
  br i1 %260, label %432, label %261

261:                                              ; preds = %258
  %262 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %259, i64 -1
  %263 = ptrtoint %"struct.views::ViewState"** %262 to i64
  %264 = sub i64 %263, %4
  %265 = lshr i64 %264, 3
  %266 = add nuw nsw i64 %265, 1
  %267 = icmp ult i64 %266, 4
  br i1 %267, label %361, label %268

268:                                              ; preds = %261
  %269 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %259, i64 -1
  %270 = ptrtoint %"struct.views::ViewState"** %269 to i64
  %271 = sub i64 %270, %4
  %272 = lshr i64 %271, 3
  %273 = add nuw nsw i64 %272, 2
  %274 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %241, i64 %273
  %275 = add nuw nsw i64 %272, 1
  %276 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %275
  %277 = icmp ult %"struct.views::ViewState"** %246, %276
  %278 = icmp ugt %"struct.views::ViewState"** %274, %1
  %279 = and i1 %277, %278
  br i1 %279, label %361, label %280

280:                                              ; preds = %268
  %281 = and i64 %266, 4611686018427387900
  %282 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %281
  %283 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %281
  %284 = add nsw i64 %281, -4
  %285 = lshr exact i64 %284, 2
  %286 = add nuw nsw i64 %285, 1
  %287 = and i64 %286, 3
  %288 = icmp ult i64 %284, 12
  br i1 %288, label %340, label %289

289:                                              ; preds = %280
  %290 = sub nsw i64 %286, %287
  br label %291

291:                                              ; preds = %291, %289
  %292 = phi i64 [ 0, %289 ], [ %337, %291 ]
  %293 = phi i64 [ %290, %289 ], [ %338, %291 ]
  %294 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %292
  %295 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %292
  %296 = bitcast %"struct.views::ViewState"** %295 to <2 x i64>*
  %297 = load <2 x i64>, <2 x i64>* %296, align 8, !alias.scope !14
  %298 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %295, i64 2
  %299 = bitcast %"struct.views::ViewState"** %298 to <2 x i64>*
  %300 = load <2 x i64>, <2 x i64>* %299, align 8, !alias.scope !14
  %301 = bitcast %"struct.views::ViewState"** %294 to <2 x i64>*
  store <2 x i64> %297, <2 x i64>* %301, align 8, !alias.scope !17, !noalias !14
  %302 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %294, i64 2
  %303 = bitcast %"struct.views::ViewState"** %302 to <2 x i64>*
  store <2 x i64> %300, <2 x i64>* %303, align 8, !alias.scope !17, !noalias !14
  %304 = or i64 %292, 4
  %305 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %304
  %306 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %304
  %307 = bitcast %"struct.views::ViewState"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !14
  %309 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %306, i64 2
  %310 = bitcast %"struct.views::ViewState"** %309 to <2 x i64>*
  %311 = load <2 x i64>, <2 x i64>* %310, align 8, !alias.scope !14
  %312 = bitcast %"struct.views::ViewState"** %305 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %312, align 8, !alias.scope !17, !noalias !14
  %313 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %305, i64 2
  %314 = bitcast %"struct.views::ViewState"** %313 to <2 x i64>*
  store <2 x i64> %311, <2 x i64>* %314, align 8, !alias.scope !17, !noalias !14
  %315 = or i64 %292, 8
  %316 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %315
  %317 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %315
  %318 = bitcast %"struct.views::ViewState"** %317 to <2 x i64>*
  %319 = load <2 x i64>, <2 x i64>* %318, align 8, !alias.scope !14
  %320 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %317, i64 2
  %321 = bitcast %"struct.views::ViewState"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !14
  %323 = bitcast %"struct.views::ViewState"** %316 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %323, align 8, !alias.scope !17, !noalias !14
  %324 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %316, i64 2
  %325 = bitcast %"struct.views::ViewState"** %324 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %325, align 8, !alias.scope !17, !noalias !14
  %326 = or i64 %292, 12
  %327 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %326
  %328 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %326
  %329 = bitcast %"struct.views::ViewState"** %328 to <2 x i64>*
  %330 = load <2 x i64>, <2 x i64>* %329, align 8, !alias.scope !14
  %331 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %328, i64 2
  %332 = bitcast %"struct.views::ViewState"** %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !14
  %334 = bitcast %"struct.views::ViewState"** %327 to <2 x i64>*
  store <2 x i64> %330, <2 x i64>* %334, align 8, !alias.scope !17, !noalias !14
  %335 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %327, i64 2
  %336 = bitcast %"struct.views::ViewState"** %335 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %336, align 8, !alias.scope !17, !noalias !14
  %337 = add i64 %292, 16
  %338 = add i64 %293, -4
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %291, !llvm.loop !19

340:                                              ; preds = %291, %280
  %341 = phi i64 [ 0, %280 ], [ %337, %291 ]
  %342 = icmp eq i64 %287, 0
  br i1 %342, label %359, label %343

343:                                              ; preds = %340, %343
  %344 = phi i64 [ %356, %343 ], [ %341, %340 ]
  %345 = phi i64 [ %357, %343 ], [ %287, %340 ]
  %346 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %246, i64 %344
  %347 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %1, i64 %344
  %348 = bitcast %"struct.views::ViewState"** %347 to <2 x i64>*
  %349 = load <2 x i64>, <2 x i64>* %348, align 8, !alias.scope !14
  %350 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %347, i64 2
  %351 = bitcast %"struct.views::ViewState"** %350 to <2 x i64>*
  %352 = load <2 x i64>, <2 x i64>* %351, align 8, !alias.scope !14
  %353 = bitcast %"struct.views::ViewState"** %346 to <2 x i64>*
  store <2 x i64> %349, <2 x i64>* %353, align 8, !alias.scope !17, !noalias !14
  %354 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %346, i64 2
  %355 = bitcast %"struct.views::ViewState"** %354 to <2 x i64>*
  store <2 x i64> %352, <2 x i64>* %355, align 8, !alias.scope !17, !noalias !14
  %356 = add i64 %344, 4
  %357 = add i64 %345, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %343, !llvm.loop !20

359:                                              ; preds = %343, %340
  %360 = icmp eq i64 %266, %281
  br i1 %360, label %432, label %361

361:                                              ; preds = %359, %268, %261
  %362 = phi %"struct.views::ViewState"** [ %246, %268 ], [ %246, %261 ], [ %282, %359 ]
  %363 = phi %"struct.views::ViewState"** [ %1, %268 ], [ %1, %261 ], [ %283, %359 ]
  %364 = ptrtoint %"struct.views::ViewState"** %363 to i64
  %365 = getelementptr %"struct.views::ViewState"*, %"struct.views::ViewState"** %259, i64 -1
  %366 = ptrtoint %"struct.views::ViewState"** %365 to i64
  %367 = sub i64 %366, %364
  %368 = lshr i64 %367, 3
  %369 = add nuw nsw i64 %368, 1
  %370 = and i64 %369, 7
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %383, label %372

372:                                              ; preds = %361, %372
  %373 = phi %"struct.views::ViewState"** [ %380, %372 ], [ %362, %361 ]
  %374 = phi %"struct.views::ViewState"** [ %379, %372 ], [ %363, %361 ]
  %375 = phi i64 [ %381, %372 ], [ %370, %361 ]
  %376 = bitcast %"struct.views::ViewState"** %373 to i64*
  %377 = bitcast %"struct.views::ViewState"** %374 to i64*
  %378 = load i64, i64* %377, align 8
  store i64 %378, i64* %376, align 8
  %379 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %374, i64 1
  %380 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %373, i64 1
  %381 = add i64 %375, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %372, !llvm.loop !21

383:                                              ; preds = %372, %361
  %384 = phi %"struct.views::ViewState"** [ undef, %361 ], [ %380, %372 ]
  %385 = phi %"struct.views::ViewState"** [ %362, %361 ], [ %380, %372 ]
  %386 = phi %"struct.views::ViewState"** [ %363, %361 ], [ %379, %372 ]
  %387 = icmp ult i64 %367, 56
  br i1 %387, label %432, label %388

388:                                              ; preds = %383, %388
  %389 = phi %"struct.views::ViewState"** [ %430, %388 ], [ %385, %383 ]
  %390 = phi %"struct.views::ViewState"** [ %429, %388 ], [ %386, %383 ]
  %391 = bitcast %"struct.views::ViewState"** %389 to i64*
  %392 = bitcast %"struct.views::ViewState"** %390 to i64*
  %393 = load i64, i64* %392, align 8
  store i64 %393, i64* %391, align 8
  %394 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 1
  %395 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 1
  %396 = bitcast %"struct.views::ViewState"** %395 to i64*
  %397 = bitcast %"struct.views::ViewState"** %394 to i64*
  %398 = load i64, i64* %397, align 8
  store i64 %398, i64* %396, align 8
  %399 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 2
  %400 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 2
  %401 = bitcast %"struct.views::ViewState"** %400 to i64*
  %402 = bitcast %"struct.views::ViewState"** %399 to i64*
  %403 = load i64, i64* %402, align 8
  store i64 %403, i64* %401, align 8
  %404 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 3
  %405 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 3
  %406 = bitcast %"struct.views::ViewState"** %405 to i64*
  %407 = bitcast %"struct.views::ViewState"** %404 to i64*
  %408 = load i64, i64* %407, align 8
  store i64 %408, i64* %406, align 8
  %409 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 4
  %410 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 4
  %411 = bitcast %"struct.views::ViewState"** %410 to i64*
  %412 = bitcast %"struct.views::ViewState"** %409 to i64*
  %413 = load i64, i64* %412, align 8
  store i64 %413, i64* %411, align 8
  %414 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 5
  %415 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 5
  %416 = bitcast %"struct.views::ViewState"** %415 to i64*
  %417 = bitcast %"struct.views::ViewState"** %414 to i64*
  %418 = load i64, i64* %417, align 8
  store i64 %418, i64* %416, align 8
  %419 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 6
  %420 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 6
  %421 = bitcast %"struct.views::ViewState"** %420 to i64*
  %422 = bitcast %"struct.views::ViewState"** %419 to i64*
  %423 = load i64, i64* %422, align 8
  store i64 %423, i64* %421, align 8
  %424 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 7
  %425 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 7
  %426 = bitcast %"struct.views::ViewState"** %425 to i64*
  %427 = bitcast %"struct.views::ViewState"** %424 to i64*
  %428 = load i64, i64* %427, align 8
  store i64 %428, i64* %426, align 8
  %429 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %390, i64 8
  %430 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %389, i64 8
  %431 = icmp eq %"struct.views::ViewState"** %429, %259
  br i1 %431, label %432, label %388, !llvm.loop !22

432:                                              ; preds = %383, %388, %359, %258
  %433 = phi %"struct.views::ViewState"** [ %246, %258 ], [ %282, %359 ], [ %384, %383 ], [ %430, %388 ]
  %434 = ptrtoint %"struct.views::ViewState"** %433 to i64
  %435 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %6, align 8
  store i64 %253, i64* %174, align 8
  store i64 %434, i64* %173, align 8
  store i64 %242, i64* %183, align 8
  %436 = icmp eq %"struct.views::ViewState"** %435, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %432
  %438 = bitcast %"struct.views::ViewState"** %435 to i8*
  tail call void @_ZdlPv(i8* %438) #14
  br label %439

439:                                              ; preds = %437, %432, %16, %167
  %440 = phi %"struct.views::ViewState"** [ %1, %16 ], [ %1, %167 ], [ %241, %432 ], [ %241, %437 ]
  ret %"struct.views::ViewState"** %440
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet22CalculateMasterColumnsEv(%"class.views::ColumnSet"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %408, %1
  tail call void @_ZN5views9ColumnSet23AccumulateMasterColumnsEv(%"class.views::ColumnSet"* %0)
  ret void

8:                                                ; preds = %1, %408
  %9 = phi %"class.std::__1::unique_ptr"* [ %409, %408 ], [ %3, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.views::Column"*, %"class.views::Column"** %10, align 8
  %12 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %408, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %11, i64 0, i32 9
  %17 = load %"class.views::Column"*, %"class.views::Column"** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 %18, i32 0, i32 0, i32 0
  %21 = load %"class.views::Column"*, %"class.views::Column"** %20, align 8
  %22 = ptrtoint %"class.views::Column"* %21 to i64
  %23 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %21, i64 0, i32 9
  %24 = load %"class.views::Column"*, %"class.views::Column"** %23, align 8
  %25 = icmp eq %"class.views::Column"* %17, null
  %26 = icmp eq %"class.views::Column"* %24, null
  br i1 %25, label %27, label %259

27:                                               ; preds = %15
  br i1 %26, label %30, label %28

28:                                               ; preds = %27
  %29 = icmp eq %"class.views::Column"* %24, %21
  br i1 %29, label %183, label %176

30:                                               ; preds = %27
  store %"class.views::Column"* %11, %"class.views::Column"** %16, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.views::Column"** %23 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load %"class.views::Column"*, %"class.views::Column"** %10, align 8
  %35 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %34, i64 0, i32 8
  %36 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %34, i64 0, i32 8, i32 0, i32 1
  %37 = load %"class.views::Column"**, %"class.views::Column"*** %36, align 8
  %38 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %34, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %39 = load %"class.views::Column"**, %"class.views::Column"*** %38, align 8
  %40 = icmp eq %"class.views::Column"** %37, %39
  %41 = ptrtoint %"class.views::Column"** %39 to i64
  br i1 %40, label %47, label %42

42:                                               ; preds = %30
  %43 = bitcast %"class.views::Column"** %37 to i64*
  store i64 %22, i64* %43, align 8
  %44 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %37, i64 1
  %45 = ptrtoint %"class.views::Column"** %44 to i64
  %46 = bitcast %"class.views::Column"*** %36 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %30
  %48 = ptrtoint %"class.views::Column"** %37 to i64
  %49 = bitcast %"class.views::Column"*** %36 to i64*
  %50 = bitcast %"class.std::__1::vector"* %35 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %48, %51
  %53 = ashr exact i64 %52, 3
  %54 = add nsw i64 %53, 1
  %55 = icmp ugt i64 %54, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #16
  unreachable

58:                                               ; preds = %47
  %59 = bitcast %"class.views::Column"*** %38 to i64*
  %60 = sub i64 %41, %51
  %61 = ashr exact i64 %60, 3
  %62 = icmp ult i64 %61, 1152921504606846975
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = ashr exact i64 %60, 2
  %65 = icmp ult i64 %64, %54
  %66 = select i1 %65, i64 %54, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 2305843009213693951
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #16
  unreachable

71:                                               ; preds = %68, %58
  %72 = phi i64 [ %66, %68 ], [ 2305843009213693951, %58 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to %"class.views::Column"**
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"class.views::Column"** [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %78, i64 %53
  %80 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %78, i64 %77
  %81 = ptrtoint %"class.views::Column"** %80 to i64
  %82 = bitcast %"class.views::Column"** %79 to i64*
  store i64 %22, i64* %82, align 8
  %83 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %79, i64 1
  %84 = ptrtoint %"class.views::Column"** %83 to i64
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %86 = load %"class.views::Column"**, %"class.views::Column"*** %85, align 8
  %87 = load i64, i64* %49, align 8
  %88 = ptrtoint %"class.views::Column"** %86 to i64
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 3
  %91 = sub nsw i64 0, %90
  %92 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %79, i64 %91
  %93 = ptrtoint %"class.views::Column"** %92 to i64
  %94 = icmp sgt i64 %89, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %76
  %96 = bitcast %"class.views::Column"** %92 to i8*
  %97 = bitcast %"class.views::Column"** %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %89, i1 false) #15
  %98 = load %"class.views::Column"**, %"class.views::Column"*** %85, align 8
  br label %99

99:                                               ; preds = %95, %76
  %100 = phi %"class.views::Column"** [ %86, %76 ], [ %98, %95 ]
  store i64 %93, i64* %50, align 8
  store i64 %84, i64* %49, align 8
  store i64 %81, i64* %59, align 8
  %101 = icmp eq %"class.views::Column"** %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = bitcast %"class.views::Column"** %100 to i8*
  tail call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %42, %99, %102
  %105 = load %"class.views::Column"*, %"class.views::Column"** %10, align 8
  %106 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %105, i64 0, i32 8
  %107 = ptrtoint %"class.views::Column"* %105 to i64
  %108 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %105, i64 0, i32 8, i32 0, i32 1
  %109 = load %"class.views::Column"**, %"class.views::Column"*** %108, align 8
  %110 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %105, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %111 = load %"class.views::Column"**, %"class.views::Column"*** %110, align 8
  %112 = icmp ult %"class.views::Column"** %109, %111
  %113 = ptrtoint %"class.views::Column"** %111 to i64
  br i1 %112, label %114, label %119

114:                                              ; preds = %104
  %115 = bitcast %"class.views::Column"** %109 to i64*
  store i64 %107, i64* %115, align 8
  %116 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %109, i64 1
  %117 = ptrtoint %"class.views::Column"** %116 to i64
  %118 = bitcast %"class.views::Column"*** %108 to i64*
  store i64 %117, i64* %118, align 8
  br label %408

119:                                              ; preds = %104
  %120 = ptrtoint %"class.views::Column"** %109 to i64
  %121 = bitcast %"class.views::Column"*** %108 to i64*
  %122 = bitcast %"class.std::__1::vector"* %106 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %120, %123
  %125 = ashr exact i64 %124, 3
  %126 = add nsw i64 %125, 1
  %127 = icmp ugt i64 %126, 2305843009213693951
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = bitcast %"class.std::__1::vector"* %106 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %129) #16
  unreachable

130:                                              ; preds = %119
  %131 = bitcast %"class.views::Column"*** %110 to i64*
  %132 = sub i64 %113, %123
  %133 = ashr exact i64 %132, 3
  %134 = icmp ult i64 %133, 1152921504606846975
  br i1 %134, label %135, label %143

135:                                              ; preds = %130
  %136 = ashr exact i64 %132, 2
  %137 = icmp ult i64 %136, %126
  %138 = select i1 %137, i64 %126, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 2305843009213693951
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  tail call void @abort() #16
  unreachable

143:                                              ; preds = %140, %130
  %144 = phi i64 [ %138, %140 ], [ 2305843009213693951, %130 ]
  %145 = shl i64 %144, 3
  %146 = tail call i8* @_Znwm(i64 %145) #14
  %147 = bitcast i8* %146 to %"class.views::Column"**
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi %"class.views::Column"** [ %147, %143 ], [ null, %135 ]
  %151 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %150, i64 %125
  %152 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %150, i64 %149
  %153 = ptrtoint %"class.views::Column"** %152 to i64
  %154 = bitcast %"class.views::Column"** %151 to i64*
  store i64 %107, i64* %154, align 8
  %155 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %151, i64 1
  %156 = ptrtoint %"class.views::Column"** %155 to i64
  %157 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %106, i64 0, i32 0, i32 0
  %158 = load %"class.views::Column"**, %"class.views::Column"*** %157, align 8
  %159 = load i64, i64* %121, align 8
  %160 = ptrtoint %"class.views::Column"** %158 to i64
  %161 = sub i64 %159, %160
  %162 = ashr exact i64 %161, 3
  %163 = sub nsw i64 0, %162
  %164 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %151, i64 %163
  %165 = ptrtoint %"class.views::Column"** %164 to i64
  %166 = icmp sgt i64 %161, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %148
  %168 = bitcast %"class.views::Column"** %164 to i8*
  %169 = bitcast %"class.views::Column"** %158 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 %161, i1 false) #15
  %170 = load %"class.views::Column"**, %"class.views::Column"*** %157, align 8
  br label %171

171:                                              ; preds = %167, %148
  %172 = phi %"class.views::Column"** [ %158, %148 ], [ %170, %167 ]
  store i64 %165, i64* %122, align 8
  store i64 %156, i64* %121, align 8
  store i64 %153, i64* %131, align 8
  %173 = icmp eq %"class.views::Column"** %172, null
  br i1 %173, label %408, label %174

174:                                              ; preds = %171
  %175 = bitcast %"class.views::Column"** %172 to i8*
  tail call void @_ZdlPv(i8* %175) #14
  br label %408

176:                                              ; preds = %28, %176
  %177 = phi %"class.views::Column"* [ %179, %176 ], [ %24, %28 ]
  %178 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %177, i64 0, i32 9
  %179 = load %"class.views::Column"*, %"class.views::Column"** %178, align 8
  %180 = icmp eq %"class.views::Column"* %179, null
  %181 = icmp eq %"class.views::Column"* %179, %177
  %182 = or i1 %180, %181
  br i1 %182, label %183, label %176

183:                                              ; preds = %176, %28
  %184 = phi %"class.views::Column"* [ %24, %28 ], [ %179, %176 ]
  %185 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %184, i64 0, i32 8
  %186 = ptrtoint %"class.views::Column"* %11 to i64
  %187 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %184, i64 0, i32 8, i32 0, i32 1
  %188 = load %"class.views::Column"**, %"class.views::Column"*** %187, align 8
  %189 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %184, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %190 = load %"class.views::Column"**, %"class.views::Column"*** %189, align 8
  %191 = icmp ult %"class.views::Column"** %188, %190
  %192 = ptrtoint %"class.views::Column"** %190 to i64
  br i1 %191, label %193, label %198

193:                                              ; preds = %183
  %194 = bitcast %"class.views::Column"** %188 to i64*
  store i64 %186, i64* %194, align 8
  %195 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %188, i64 1
  %196 = ptrtoint %"class.views::Column"** %195 to i64
  %197 = bitcast %"class.views::Column"*** %187 to i64*
  store i64 %196, i64* %197, align 8
  br label %255

198:                                              ; preds = %183
  %199 = ptrtoint %"class.views::Column"** %188 to i64
  %200 = bitcast %"class.views::Column"*** %187 to i64*
  %201 = bitcast %"class.std::__1::vector"* %185 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = sub i64 %199, %202
  %204 = ashr exact i64 %203, 3
  %205 = add nsw i64 %204, 1
  %206 = icmp ugt i64 %205, 2305843009213693951
  br i1 %206, label %207, label %209

207:                                              ; preds = %198
  %208 = bitcast %"class.std::__1::vector"* %185 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %208) #16
  unreachable

209:                                              ; preds = %198
  %210 = bitcast %"class.views::Column"*** %189 to i64*
  %211 = sub i64 %192, %202
  %212 = ashr exact i64 %211, 3
  %213 = icmp ult i64 %212, 1152921504606846975
  br i1 %213, label %214, label %222

214:                                              ; preds = %209
  %215 = ashr exact i64 %211, 2
  %216 = icmp ult i64 %215, %205
  %217 = select i1 %216, i64 %205, i64 %215
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %227, label %219

219:                                              ; preds = %214
  %220 = icmp ugt i64 %217, 2305843009213693951
  br i1 %220, label %221, label %222

221:                                              ; preds = %219
  tail call void @abort() #16
  unreachable

222:                                              ; preds = %219, %209
  %223 = phi i64 [ %217, %219 ], [ 2305843009213693951, %209 ]
  %224 = shl i64 %223, 3
  %225 = tail call i8* @_Znwm(i64 %224) #14
  %226 = bitcast i8* %225 to %"class.views::Column"**
  br label %227

227:                                              ; preds = %222, %214
  %228 = phi i64 [ %223, %222 ], [ 0, %214 ]
  %229 = phi %"class.views::Column"** [ %226, %222 ], [ null, %214 ]
  %230 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %229, i64 %204
  %231 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %229, i64 %228
  %232 = ptrtoint %"class.views::Column"** %231 to i64
  %233 = bitcast %"class.views::Column"** %230 to i64*
  store i64 %186, i64* %233, align 8
  %234 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %230, i64 1
  %235 = ptrtoint %"class.views::Column"** %234 to i64
  %236 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %185, i64 0, i32 0, i32 0
  %237 = load %"class.views::Column"**, %"class.views::Column"*** %236, align 8
  %238 = load i64, i64* %200, align 8
  %239 = ptrtoint %"class.views::Column"** %237 to i64
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 3
  %242 = sub nsw i64 0, %241
  %243 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %230, i64 %242
  %244 = ptrtoint %"class.views::Column"** %243 to i64
  %245 = icmp sgt i64 %240, 0
  br i1 %245, label %246, label %250

246:                                              ; preds = %227
  %247 = bitcast %"class.views::Column"** %243 to i8*
  %248 = bitcast %"class.views::Column"** %237 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 %240, i1 false) #15
  %249 = load %"class.views::Column"**, %"class.views::Column"*** %236, align 8
  br label %250

250:                                              ; preds = %246, %227
  %251 = phi %"class.views::Column"** [ %237, %227 ], [ %249, %246 ]
  store i64 %244, i64* %201, align 8
  store i64 %235, i64* %200, align 8
  store i64 %232, i64* %210, align 8
  %252 = icmp eq %"class.views::Column"** %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = bitcast %"class.views::Column"** %251 to i8*
  tail call void @_ZdlPv(i8* %254) #14
  br label %255

255:                                              ; preds = %193, %250, %253
  %256 = load %"class.views::Column"*, %"class.views::Column"** %10, align 8
  %257 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %256, i64 0, i32 9
  %258 = bitcast %"class.views::Column"** %257 to i64*
  store i64 %22, i64* %258, align 8
  br label %408

259:                                              ; preds = %15
  br i1 %26, label %262, label %260

260:                                              ; preds = %259
  %261 = icmp eq %"class.views::Column"* %17, %11
  br i1 %261, label %349, label %342

262:                                              ; preds = %259
  store %"class.views::Column"* %11, %"class.views::Column"** %23, align 8
  %263 = load %"class.views::Column"*, %"class.views::Column"** %10, align 8
  br label %264

264:                                              ; preds = %269, %262
  %265 = phi %"class.views::Column"* [ %263, %262 ], [ %267, %269 ]
  %266 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %265, i64 0, i32 9
  %267 = load %"class.views::Column"*, %"class.views::Column"** %266, align 8
  %268 = icmp eq %"class.views::Column"* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %264
  %270 = icmp eq %"class.views::Column"* %267, %265
  br i1 %270, label %271, label %264

271:                                              ; preds = %264, %269
  %272 = phi %"class.views::Column"* [ null, %264 ], [ %265, %269 ]
  %273 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %272, i64 0, i32 8
  %274 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %272, i64 0, i32 8, i32 0, i32 1
  %275 = load %"class.views::Column"**, %"class.views::Column"*** %274, align 8
  %276 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %272, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %277 = load %"class.views::Column"**, %"class.views::Column"*** %276, align 8
  %278 = icmp eq %"class.views::Column"** %275, %277
  %279 = ptrtoint %"class.views::Column"** %277 to i64
  br i1 %278, label %285, label %280

280:                                              ; preds = %271
  %281 = bitcast %"class.views::Column"** %275 to i64*
  store i64 %22, i64* %281, align 8
  %282 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %275, i64 1
  %283 = ptrtoint %"class.views::Column"** %282 to i64
  %284 = bitcast %"class.views::Column"*** %274 to i64*
  store i64 %283, i64* %284, align 8
  br label %408

285:                                              ; preds = %271
  %286 = ptrtoint %"class.views::Column"** %275 to i64
  %287 = bitcast %"class.views::Column"*** %274 to i64*
  %288 = bitcast %"class.std::__1::vector"* %273 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = sub i64 %286, %289
  %291 = ashr exact i64 %290, 3
  %292 = add nsw i64 %291, 1
  %293 = icmp ugt i64 %292, 2305843009213693951
  br i1 %293, label %294, label %296

294:                                              ; preds = %285
  %295 = bitcast %"class.std::__1::vector"* %273 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %295) #16
  unreachable

296:                                              ; preds = %285
  %297 = bitcast %"class.views::Column"*** %276 to i64*
  %298 = sub i64 %279, %289
  %299 = ashr exact i64 %298, 3
  %300 = icmp ult i64 %299, 1152921504606846975
  br i1 %300, label %301, label %309

301:                                              ; preds = %296
  %302 = ashr exact i64 %298, 2
  %303 = icmp ult i64 %302, %292
  %304 = select i1 %303, i64 %292, i64 %302
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %301
  %307 = icmp ugt i64 %304, 2305843009213693951
  br i1 %307, label %308, label %309

308:                                              ; preds = %306
  tail call void @abort() #16
  unreachable

309:                                              ; preds = %306, %296
  %310 = phi i64 [ %304, %306 ], [ 2305843009213693951, %296 ]
  %311 = shl i64 %310, 3
  %312 = tail call i8* @_Znwm(i64 %311) #14
  %313 = bitcast i8* %312 to %"class.views::Column"**
  br label %314

314:                                              ; preds = %309, %301
  %315 = phi i64 [ %310, %309 ], [ 0, %301 ]
  %316 = phi %"class.views::Column"** [ %313, %309 ], [ null, %301 ]
  %317 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %316, i64 %291
  %318 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %316, i64 %315
  %319 = ptrtoint %"class.views::Column"** %318 to i64
  %320 = bitcast %"class.views::Column"** %317 to i64*
  store i64 %22, i64* %320, align 8
  %321 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %317, i64 1
  %322 = ptrtoint %"class.views::Column"** %321 to i64
  %323 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %273, i64 0, i32 0, i32 0
  %324 = load %"class.views::Column"**, %"class.views::Column"*** %323, align 8
  %325 = load i64, i64* %287, align 8
  %326 = ptrtoint %"class.views::Column"** %324 to i64
  %327 = sub i64 %325, %326
  %328 = ashr exact i64 %327, 3
  %329 = sub nsw i64 0, %328
  %330 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %317, i64 %329
  %331 = ptrtoint %"class.views::Column"** %330 to i64
  %332 = icmp sgt i64 %327, 0
  br i1 %332, label %333, label %337

333:                                              ; preds = %314
  %334 = bitcast %"class.views::Column"** %330 to i8*
  %335 = bitcast %"class.views::Column"** %324 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 %327, i1 false) #15
  %336 = load %"class.views::Column"**, %"class.views::Column"*** %323, align 8
  br label %337

337:                                              ; preds = %333, %314
  %338 = phi %"class.views::Column"** [ %324, %314 ], [ %336, %333 ]
  store i64 %331, i64* %288, align 8
  store i64 %322, i64* %287, align 8
  store i64 %319, i64* %297, align 8
  %339 = icmp eq %"class.views::Column"** %338, null
  br i1 %339, label %408, label %340

340:                                              ; preds = %337
  %341 = bitcast %"class.views::Column"** %338 to i8*
  tail call void @_ZdlPv(i8* %341) #14
  br label %408

342:                                              ; preds = %260, %342
  %343 = phi %"class.views::Column"* [ %345, %342 ], [ %17, %260 ]
  %344 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %343, i64 0, i32 9
  %345 = load %"class.views::Column"*, %"class.views::Column"** %344, align 8
  %346 = icmp eq %"class.views::Column"* %345, null
  %347 = icmp eq %"class.views::Column"* %345, %343
  %348 = or i1 %346, %347
  br i1 %348, label %349, label %342

349:                                              ; preds = %342, %260
  %350 = phi %"class.views::Column"* [ %17, %260 ], [ %345, %342 ]
  %351 = icmp eq %"class.views::Column"* %24, %21
  br i1 %351, label %359, label %352

352:                                              ; preds = %349, %352
  %353 = phi %"class.views::Column"* [ %355, %352 ], [ %24, %349 ]
  %354 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %353, i64 0, i32 9
  %355 = load %"class.views::Column"*, %"class.views::Column"** %354, align 8
  %356 = icmp eq %"class.views::Column"* %355, null
  %357 = icmp eq %"class.views::Column"* %355, %353
  %358 = or i1 %356, %357
  br i1 %358, label %359, label %352

359:                                              ; preds = %352, %349
  %360 = phi %"class.views::Column"* [ %24, %349 ], [ %355, %352 ]
  %361 = icmp eq %"class.views::Column"* %350, %360
  br i1 %361, label %408, label %362

362:                                              ; preds = %359
  %363 = icmp eq %"class.views::Column"* %17, %11
  br i1 %363, label %371, label %364

364:                                              ; preds = %362, %364
  %365 = phi %"class.views::Column"* [ %367, %364 ], [ %17, %362 ]
  %366 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %365, i64 0, i32 9
  %367 = load %"class.views::Column"*, %"class.views::Column"** %366, align 8
  %368 = icmp eq %"class.views::Column"* %367, null
  %369 = icmp eq %"class.views::Column"* %367, %365
  %370 = or i1 %368, %369
  br i1 %370, label %371, label %364

371:                                              ; preds = %364, %362
  %372 = phi %"class.views::Column"* [ %17, %362 ], [ %367, %364 ]
  %373 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %372, i64 0, i32 8
  %374 = icmp eq %"class.views::Column"* %24, %21
  br i1 %374, label %382, label %375

375:                                              ; preds = %371, %375
  %376 = phi %"class.views::Column"* [ %378, %375 ], [ %24, %371 ]
  %377 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %376, i64 0, i32 9
  %378 = load %"class.views::Column"*, %"class.views::Column"** %377, align 8
  %379 = icmp eq %"class.views::Column"* %378, null
  %380 = icmp eq %"class.views::Column"* %378, %376
  %381 = or i1 %379, %380
  br i1 %381, label %382, label %375

382:                                              ; preds = %375, %371
  %383 = phi %"class.views::Column"* [ %24, %371 ], [ %378, %375 ]
  %384 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %383, i64 0, i32 8
  %385 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %372, i64 0, i32 8, i32 0, i32 1
  %386 = load %"class.views::Column"**, %"class.views::Column"*** %385, align 8
  %387 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %384, i64 0, i32 0, i32 0
  %388 = load %"class.views::Column"**, %"class.views::Column"*** %387, align 8
  %389 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %383, i64 0, i32 8, i32 0, i32 1
  %390 = load %"class.views::Column"**, %"class.views::Column"*** %389, align 8
  %391 = tail call %"class.views::Column"** @_ZNSt3__16vectorIPN5views6ColumnENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %373, %"class.views::Column"** %386, %"class.views::Column"** %388, %"class.views::Column"** %390)
  %392 = bitcast %"class.std::__1::vector"* %384 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.views::Column"*** %389 to i64*
  store i64 %393, i64* %394, align 8
  %395 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %396 = load i64, i64* %395, align 8
  br label %397

397:                                              ; preds = %402, %382
  %398 = phi %"class.views::Column"* [ %21, %382 ], [ %400, %402 ]
  %399 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %398, i64 0, i32 9
  %400 = load %"class.views::Column"*, %"class.views::Column"** %399, align 8
  %401 = icmp eq %"class.views::Column"* %400, null
  br i1 %401, label %404, label %402

402:                                              ; preds = %397
  %403 = icmp eq %"class.views::Column"* %400, %398
  br i1 %403, label %404, label %397

404:                                              ; preds = %397, %402
  %405 = phi %"class.views::Column"* [ null, %397 ], [ %398, %402 ]
  %406 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %405, i64 0, i32 9
  %407 = bitcast %"class.views::Column"** %406 to i64*
  store i64 %396, i64* %407, align 8
  br label %408

408:                                              ; preds = %255, %404, %359, %114, %171, %174, %280, %337, %340, %8
  %409 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 1
  %410 = icmp eq %"class.std::__1::unique_ptr"* %409, %5
  br i1 %410, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.views::Column"** @_ZNSt3__16vectorIPN5views6ColumnENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"class.views::Column"**, %"class.views::Column"**, %"class.views::Column"**) local_unnamed_addr #2 comdat align 2 {
  %5 = bitcast %"class.views::Column"** %2 to i8*
  %6 = bitcast %"class.views::Column"** %1 to i8*
  %7 = ptrtoint %"class.views::Column"** %1 to i64
  %8 = ptrtoint %"class.views::Column"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.views::Column"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.views::Column"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.views::Column"**, %"class.views::Column"*** %18, align 8
  %20 = ptrtoint %"class.views::Column"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.views::Column"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %2, i64 %27
  %31 = icmp eq %"class.views::Column"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.views::Column"*, %"class.views::Column"** %3, i64 %33
  %35 = ptrtoint %"class.views::Column"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.views::Column"*, %"class.views::Column"** %3, i64 %41
  %43 = ptrtoint %"class.views::Column"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %49
  %51 = icmp ult %"class.views::Column"** %19, %50
  %52 = icmp ult %"class.views::Column"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %55
  %57 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %66
  %69 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %66
  %70 = bitcast %"class.views::Column"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !23
  %72 = getelementptr %"class.views::Column"*, %"class.views::Column"** %69, i64 2
  %73 = bitcast %"class.views::Column"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !23
  %75 = bitcast %"class.views::Column"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !26, !noalias !23
  %76 = getelementptr %"class.views::Column"*, %"class.views::Column"** %68, i64 2
  %77 = bitcast %"class.views::Column"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !26, !noalias !23
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %78
  %80 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %78
  %81 = bitcast %"class.views::Column"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !23
  %83 = getelementptr %"class.views::Column"*, %"class.views::Column"** %80, i64 2
  %84 = bitcast %"class.views::Column"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !23
  %86 = bitcast %"class.views::Column"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !26, !noalias !23
  %87 = getelementptr %"class.views::Column"*, %"class.views::Column"** %79, i64 2
  %88 = bitcast %"class.views::Column"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !26, !noalias !23
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %89
  %91 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %89
  %92 = bitcast %"class.views::Column"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !23
  %94 = getelementptr %"class.views::Column"*, %"class.views::Column"** %91, i64 2
  %95 = bitcast %"class.views::Column"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !23
  %97 = bitcast %"class.views::Column"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !26, !noalias !23
  %98 = getelementptr %"class.views::Column"*, %"class.views::Column"** %90, i64 2
  %99 = bitcast %"class.views::Column"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !26, !noalias !23
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %100
  %102 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %100
  %103 = bitcast %"class.views::Column"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !23
  %105 = getelementptr %"class.views::Column"*, %"class.views::Column"** %102, i64 2
  %106 = bitcast %"class.views::Column"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !23
  %108 = bitcast %"class.views::Column"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !26, !noalias !23
  %109 = getelementptr %"class.views::Column"*, %"class.views::Column"** %101, i64 2
  %110 = bitcast %"class.views::Column"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !26, !noalias !23
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !28

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %118
  %121 = getelementptr %"class.views::Column"*, %"class.views::Column"** %30, i64 %118
  %122 = bitcast %"class.views::Column"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !23
  %124 = getelementptr %"class.views::Column"*, %"class.views::Column"** %121, i64 2
  %125 = bitcast %"class.views::Column"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !23
  %127 = bitcast %"class.views::Column"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !26, !noalias !23
  %128 = getelementptr %"class.views::Column"*, %"class.views::Column"** %120, i64 2
  %129 = bitcast %"class.views::Column"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !26, !noalias !23
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !29

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.views::Column"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.views::Column"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.views::Column"** %137 to i64
  %139 = getelementptr %"class.views::Column"*, %"class.views::Column"** %3, i64 -1
  %140 = ptrtoint %"class.views::Column"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.views::Column"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.views::Column"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.views::Column"** %147 to i64*
  %151 = bitcast %"class.views::Column"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %148, i64 1
  %154 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !30

157:                                              ; preds = %146, %135
  %158 = phi %"class.views::Column"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.views::Column"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.views::Column"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.views::Column"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.views::Column"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.views::Column"** %163 to i64*
  %166 = bitcast %"class.views::Column"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 1
  %169 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 1
  %170 = bitcast %"class.views::Column"** %169 to i64*
  %171 = bitcast %"class.views::Column"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 2
  %174 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 2
  %175 = bitcast %"class.views::Column"** %174 to i64*
  %176 = bitcast %"class.views::Column"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 3
  %179 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 3
  %180 = bitcast %"class.views::Column"** %179 to i64*
  %181 = bitcast %"class.views::Column"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 4
  %184 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 4
  %185 = bitcast %"class.views::Column"** %184 to i64*
  %186 = bitcast %"class.views::Column"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 5
  %189 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 5
  %190 = bitcast %"class.views::Column"** %189 to i64*
  %191 = bitcast %"class.views::Column"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 6
  %194 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 6
  %195 = bitcast %"class.views::Column"** %194 to i64*
  %196 = bitcast %"class.views::Column"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 7
  %199 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 7
  %200 = bitcast %"class.views::Column"** %199 to i64*
  %201 = bitcast %"class.views::Column"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %164, i64 8
  %204 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %163, i64 8
  %205 = icmp eq %"class.views::Column"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !31

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.views::Column"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.views::Column"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.views::Column"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.views::Column"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.views::Column"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %1, i64 %12
  %219 = ptrtoint %"class.views::Column"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %1, i64 %221
  %223 = icmp ult %"class.views::Column"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %225
  %227 = bitcast %"class.views::Column"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.views::Column"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.views::Column"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.views::Column"*, %"class.views::Column"** %19, i64 %238
  %240 = bitcast %"class.views::Column"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %248
  %250 = icmp ult %"class.views::Column"** %216, %249
  %251 = icmp ult %"class.views::Column"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %254
  %256 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %265
  %268 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %265
  %269 = bitcast %"class.views::Column"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !32
  %271 = getelementptr %"class.views::Column"*, %"class.views::Column"** %268, i64 2
  %272 = bitcast %"class.views::Column"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !32
  %274 = bitcast %"class.views::Column"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !35, !noalias !32
  %275 = getelementptr %"class.views::Column"*, %"class.views::Column"** %267, i64 2
  %276 = bitcast %"class.views::Column"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !35, !noalias !32
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %277
  %279 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %277
  %280 = bitcast %"class.views::Column"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !32
  %282 = getelementptr %"class.views::Column"*, %"class.views::Column"** %279, i64 2
  %283 = bitcast %"class.views::Column"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !32
  %285 = bitcast %"class.views::Column"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !35, !noalias !32
  %286 = getelementptr %"class.views::Column"*, %"class.views::Column"** %278, i64 2
  %287 = bitcast %"class.views::Column"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !35, !noalias !32
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %288
  %290 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %288
  %291 = bitcast %"class.views::Column"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !32
  %293 = getelementptr %"class.views::Column"*, %"class.views::Column"** %290, i64 2
  %294 = bitcast %"class.views::Column"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !32
  %296 = bitcast %"class.views::Column"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !35, !noalias !32
  %297 = getelementptr %"class.views::Column"*, %"class.views::Column"** %289, i64 2
  %298 = bitcast %"class.views::Column"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !35, !noalias !32
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %299
  %301 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %299
  %302 = bitcast %"class.views::Column"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !32
  %304 = getelementptr %"class.views::Column"*, %"class.views::Column"** %301, i64 2
  %305 = bitcast %"class.views::Column"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !32
  %307 = bitcast %"class.views::Column"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !35, !noalias !32
  %308 = getelementptr %"class.views::Column"*, %"class.views::Column"** %300, i64 2
  %309 = bitcast %"class.views::Column"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !35, !noalias !32
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !37

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.views::Column"*, %"class.views::Column"** %216, i64 %317
  %320 = getelementptr %"class.views::Column"*, %"class.views::Column"** %222, i64 %317
  %321 = bitcast %"class.views::Column"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !32
  %323 = getelementptr %"class.views::Column"*, %"class.views::Column"** %320, i64 2
  %324 = bitcast %"class.views::Column"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !32
  %326 = bitcast %"class.views::Column"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !35, !noalias !32
  %327 = getelementptr %"class.views::Column"*, %"class.views::Column"** %319, i64 2
  %328 = bitcast %"class.views::Column"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !35, !noalias !32
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !38

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.views::Column"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.views::Column"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %216, i64 %341
  %343 = bitcast %"class.views::Column"** %342 to i8*
  %344 = bitcast %"class.views::Column"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #15
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.views::Column"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.views::Column"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.views::Column"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.views::Column"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %347, i64 1
  %352 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %346, i64 1
  %353 = icmp ult %"class.views::Column"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !39

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.views::Column"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #15
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #16
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #16
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #14
  %390 = bitcast i8* %389 to %"class.views::Column"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.views::Column"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %394, i64 %392
  %396 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %394, i64 %393
  %397 = ptrtoint %"class.views::Column"** %396 to i64
  %398 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.views::Column"*, %"class.views::Column"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %409
  %411 = icmp ult %"class.views::Column"** %395, %410
  %412 = icmp ugt %"class.views::Column"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %415
  %417 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %415
  %418 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %427
  %430 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %427
  %431 = bitcast %"class.views::Column"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !40
  %433 = getelementptr %"class.views::Column"*, %"class.views::Column"** %430, i64 2
  %434 = bitcast %"class.views::Column"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !40
  %436 = bitcast %"class.views::Column"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !43, !noalias !40
  %437 = getelementptr %"class.views::Column"*, %"class.views::Column"** %429, i64 2
  %438 = bitcast %"class.views::Column"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !43, !noalias !40
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %439
  %441 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %439
  %442 = bitcast %"class.views::Column"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !40
  %444 = getelementptr %"class.views::Column"*, %"class.views::Column"** %441, i64 2
  %445 = bitcast %"class.views::Column"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !40
  %447 = bitcast %"class.views::Column"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !43, !noalias !40
  %448 = getelementptr %"class.views::Column"*, %"class.views::Column"** %440, i64 2
  %449 = bitcast %"class.views::Column"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !43, !noalias !40
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %450
  %452 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %450
  %453 = bitcast %"class.views::Column"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !40
  %455 = getelementptr %"class.views::Column"*, %"class.views::Column"** %452, i64 2
  %456 = bitcast %"class.views::Column"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !40
  %458 = bitcast %"class.views::Column"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !43, !noalias !40
  %459 = getelementptr %"class.views::Column"*, %"class.views::Column"** %451, i64 2
  %460 = bitcast %"class.views::Column"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !43, !noalias !40
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %461
  %463 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %461
  %464 = bitcast %"class.views::Column"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !40
  %466 = getelementptr %"class.views::Column"*, %"class.views::Column"** %463, i64 2
  %467 = bitcast %"class.views::Column"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !40
  %469 = bitcast %"class.views::Column"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !43, !noalias !40
  %470 = getelementptr %"class.views::Column"*, %"class.views::Column"** %462, i64 2
  %471 = bitcast %"class.views::Column"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !43, !noalias !40
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !45

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.views::Column"*, %"class.views::Column"** %395, i64 %479
  %482 = getelementptr %"class.views::Column"*, %"class.views::Column"** %2, i64 %479
  %483 = bitcast %"class.views::Column"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !40
  %485 = getelementptr %"class.views::Column"*, %"class.views::Column"** %482, i64 2
  %486 = bitcast %"class.views::Column"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !40
  %488 = bitcast %"class.views::Column"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !43, !noalias !40
  %489 = getelementptr %"class.views::Column"*, %"class.views::Column"** %481, i64 2
  %490 = bitcast %"class.views::Column"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !43, !noalias !40
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !46

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.views::Column"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.views::Column"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.views::Column"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.views::Column"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.views::Column"*, %"class.views::Column"** %394, i64 %502
  %504 = ptrtoint %"class.views::Column"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.views::Column"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.views::Column"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.views::Column"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.views::Column"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.views::Column"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %511, i64 1
  %519 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !47

522:                                              ; preds = %510, %496
  %523 = phi %"class.views::Column"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.views::Column"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.views::Column"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.views::Column"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.views::Column"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.views::Column"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.views::Column"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.views::Column"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 1
  %535 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 1
  %536 = bitcast %"class.views::Column"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.views::Column"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 2
  %540 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 2
  %541 = bitcast %"class.views::Column"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.views::Column"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 3
  %545 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 3
  %546 = bitcast %"class.views::Column"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.views::Column"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 4
  %550 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 4
  %551 = bitcast %"class.views::Column"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.views::Column"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 5
  %555 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 5
  %556 = bitcast %"class.views::Column"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.views::Column"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 6
  %560 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 6
  %561 = bitcast %"class.views::Column"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.views::Column"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 7
  %565 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 7
  %566 = bitcast %"class.views::Column"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.views::Column"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %528, i64 8
  %570 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %530, i64 8
  %571 = icmp eq %"class.views::Column"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !48

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.views::Column"**, %"class.views::Column"*** %9, align 8
  %574 = ptrtoint %"class.views::Column"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %395, i64 %577
  %579 = ptrtoint %"class.views::Column"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.views::Column"** %578 to i8*
  %583 = bitcast %"class.views::Column"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #15
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.views::Column"**, %"class.views::Column"*** %18, align 8
  %586 = icmp eq %"class.views::Column"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.views::Column"*, %"class.views::Column"** %585, i64 -1
  %589 = ptrtoint %"class.views::Column"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.views::Column"*, %"class.views::Column"** %585, i64 -1
  %597 = ptrtoint %"class.views::Column"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.views::Column"*, %"class.views::Column"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %603
  %605 = icmp ult %"class.views::Column"** %398, %604
  %606 = icmp ugt %"class.views::Column"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %609
  %611 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %609
  %612 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %621
  %624 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %621
  %625 = bitcast %"class.views::Column"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !49
  %627 = getelementptr %"class.views::Column"*, %"class.views::Column"** %624, i64 2
  %628 = bitcast %"class.views::Column"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !49
  %630 = bitcast %"class.views::Column"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !52, !noalias !49
  %631 = getelementptr %"class.views::Column"*, %"class.views::Column"** %623, i64 2
  %632 = bitcast %"class.views::Column"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !52, !noalias !49
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %633
  %635 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %633
  %636 = bitcast %"class.views::Column"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !49
  %638 = getelementptr %"class.views::Column"*, %"class.views::Column"** %635, i64 2
  %639 = bitcast %"class.views::Column"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !49
  %641 = bitcast %"class.views::Column"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !52, !noalias !49
  %642 = getelementptr %"class.views::Column"*, %"class.views::Column"** %634, i64 2
  %643 = bitcast %"class.views::Column"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !52, !noalias !49
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %644
  %646 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %644
  %647 = bitcast %"class.views::Column"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !49
  %649 = getelementptr %"class.views::Column"*, %"class.views::Column"** %646, i64 2
  %650 = bitcast %"class.views::Column"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !49
  %652 = bitcast %"class.views::Column"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !52, !noalias !49
  %653 = getelementptr %"class.views::Column"*, %"class.views::Column"** %645, i64 2
  %654 = bitcast %"class.views::Column"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !52, !noalias !49
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %655
  %657 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %655
  %658 = bitcast %"class.views::Column"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !49
  %660 = getelementptr %"class.views::Column"*, %"class.views::Column"** %657, i64 2
  %661 = bitcast %"class.views::Column"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !49
  %663 = bitcast %"class.views::Column"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !52, !noalias !49
  %664 = getelementptr %"class.views::Column"*, %"class.views::Column"** %656, i64 2
  %665 = bitcast %"class.views::Column"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !52, !noalias !49
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !54

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.views::Column"*, %"class.views::Column"** %398, i64 %673
  %676 = getelementptr %"class.views::Column"*, %"class.views::Column"** %1, i64 %673
  %677 = bitcast %"class.views::Column"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !49
  %679 = getelementptr %"class.views::Column"*, %"class.views::Column"** %676, i64 2
  %680 = bitcast %"class.views::Column"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !49
  %682 = bitcast %"class.views::Column"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !52, !noalias !49
  %683 = getelementptr %"class.views::Column"*, %"class.views::Column"** %675, i64 2
  %684 = bitcast %"class.views::Column"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !52, !noalias !49
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !55

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.views::Column"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.views::Column"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.views::Column"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.views::Column"** %693 to i64
  %695 = getelementptr %"class.views::Column"*, %"class.views::Column"** %585, i64 -1
  %696 = ptrtoint %"class.views::Column"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.views::Column"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.views::Column"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.views::Column"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.views::Column"** %704 to i64*
  %708 = bitcast %"class.views::Column"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %705, i64 1
  %711 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !56

714:                                              ; preds = %702, %690
  %715 = phi %"class.views::Column"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.views::Column"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.views::Column"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.views::Column"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.views::Column"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.views::Column"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.views::Column"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.views::Column"** %722 to i64*
  %725 = bitcast %"class.views::Column"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 1
  %728 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 1
  %729 = bitcast %"class.views::Column"** %728 to i64*
  %730 = bitcast %"class.views::Column"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 2
  %733 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 2
  %734 = bitcast %"class.views::Column"** %733 to i64*
  %735 = bitcast %"class.views::Column"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 3
  %738 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 3
  %739 = bitcast %"class.views::Column"** %738 to i64*
  %740 = bitcast %"class.views::Column"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 4
  %743 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 4
  %744 = bitcast %"class.views::Column"** %743 to i64*
  %745 = bitcast %"class.views::Column"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 5
  %748 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 5
  %749 = bitcast %"class.views::Column"** %748 to i64*
  %750 = bitcast %"class.views::Column"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 6
  %753 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 6
  %754 = bitcast %"class.views::Column"** %753 to i64*
  %755 = bitcast %"class.views::Column"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 7
  %758 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 7
  %759 = bitcast %"class.views::Column"** %758 to i64*
  %760 = bitcast %"class.views::Column"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %723, i64 8
  %763 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %721, i64 8
  %764 = icmp eq %"class.views::Column"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !57

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.views::Column"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.views::Column"** %766 to i64
  %768 = load %"class.views::Column"**, %"class.views::Column"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.views::Column"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.views::Column"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #14
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.views::Column"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.views::Column"** %773
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet23AccumulateMasterColumnsEv(%"class.views::ColumnSet"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %3, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 1
  %11 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.views::Column"*** %10 to i64*
  %13 = bitcast %"class.std::__1::vector"* %8 to i64*
  %14 = bitcast %"class.views::Column"*** %11 to i64*
  br label %16

15:                                               ; preds = %105, %1
  ret void

16:                                               ; preds = %7, %105
  %17 = phi %"class.std::__1::unique_ptr"* [ %3, %7 ], [ %110, %105 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.views::Column"*, %"class.views::Column"** %18, align 8
  br label %20

20:                                               ; preds = %25, %16
  %21 = phi %"class.views::Column"* [ %19, %16 ], [ %23, %25 ]
  %22 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %21, i64 0, i32 9
  %23 = load %"class.views::Column"*, %"class.views::Column"** %22, align 8
  %24 = icmp eq %"class.views::Column"* %23, null
  br i1 %24, label %105, label %25

25:                                               ; preds = %20
  %26 = icmp eq %"class.views::Column"* %23, %21
  br i1 %26, label %27, label %20

27:                                               ; preds = %25
  %28 = ptrtoint %"class.views::Column"* %21 to i64
  %29 = icmp eq %"class.views::Column"* %21, null
  br i1 %29, label %105, label %30

30:                                               ; preds = %27
  %31 = load %"class.views::Column"**, %"class.views::Column"*** %9, align 8
  %32 = load %"class.views::Column"**, %"class.views::Column"*** %10, align 8
  %33 = icmp eq %"class.views::Column"** %31, %32
  %34 = ptrtoint %"class.views::Column"** %31 to i64
  br i1 %33, label %42, label %35

35:                                               ; preds = %30, %39
  %36 = phi %"class.views::Column"** [ %40, %39 ], [ %31, %30 ]
  %37 = load %"class.views::Column"*, %"class.views::Column"** %36, align 8
  %38 = icmp eq %"class.views::Column"* %37, %21
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %36, i64 1
  %41 = icmp eq %"class.views::Column"** %40, %32
  br i1 %41, label %45, label %35

42:                                               ; preds = %35, %30
  %43 = phi %"class.views::Column"** [ %31, %30 ], [ %36, %35 ]
  %44 = icmp eq %"class.views::Column"** %43, %32
  br i1 %44, label %45, label %105

45:                                               ; preds = %39, %42
  %46 = load %"class.views::Column"**, %"class.views::Column"*** %11, align 8
  %47 = icmp eq %"class.views::Column"** %32, %46
  %48 = ptrtoint %"class.views::Column"** %46 to i64
  br i1 %47, label %53, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.views::Column"** %32 to i64*
  store i64 %28, i64* %50, align 8
  %51 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %32, i64 1
  %52 = ptrtoint %"class.views::Column"** %51 to i64
  store i64 %52, i64* %12, align 8
  br label %105

53:                                               ; preds = %45
  %54 = ptrtoint %"class.views::Column"** %32 to i64
  %55 = sub i64 %54, %34
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #16
  unreachable

61:                                               ; preds = %53
  %62 = sub i64 %48, %34
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %57
  %68 = select i1 %67, i64 %57, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #16
  unreachable

73:                                               ; preds = %70, %61
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %61 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #14
  %77 = bitcast i8* %76 to %"class.views::Column"**
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %"class.views::Column"** [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %80, i64 %56
  %82 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %80, i64 %79
  %83 = ptrtoint %"class.views::Column"** %82 to i64
  %84 = bitcast %"class.views::Column"** %81 to i64*
  store i64 %28, i64* %84, align 8
  %85 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %81, i64 1
  %86 = ptrtoint %"class.views::Column"** %85 to i64
  %87 = load %"class.views::Column"**, %"class.views::Column"*** %9, align 8
  %88 = load i64, i64* %12, align 8
  %89 = ptrtoint %"class.views::Column"** %87 to i64
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %81, i64 %92
  %94 = ptrtoint %"class.views::Column"** %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %78
  %97 = bitcast %"class.views::Column"** %93 to i8*
  %98 = bitcast %"class.views::Column"** %87 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %90, i1 false) #15
  %99 = load %"class.views::Column"**, %"class.views::Column"*** %9, align 8
  br label %100

100:                                              ; preds = %96, %78
  %101 = phi %"class.views::Column"** [ %87, %78 ], [ %99, %96 ]
  store i64 %94, i64* %13, align 8
  store i64 %86, i64* %12, align 8
  store i64 %83, i64* %14, align 8
  %102 = icmp eq %"class.views::Column"** %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %100
  %104 = bitcast %"class.views::Column"** %101 to i8*
  tail call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %20, %42, %103, %100, %49, %27
  %106 = phi i64 [ %28, %27 ], [ %28, %42 ], [ %28, %49 ], [ %28, %100 ], [ %28, %103 ], [ 0, %20 ]
  %107 = load %"class.views::Column"*, %"class.views::Column"** %18, align 8
  %108 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %107, i64 0, i32 9
  %109 = bitcast %"class.views::Column"** %108 to i64*
  store i64 %106, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 1
  %111 = icmp eq %"class.std::__1::unique_ptr"* %110, %5
  br i1 %111, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet22UnifyLinkedColumnSizesEv(%"class.views::ColumnSet"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.views::Column"**, %"class.views::Column"*** %2, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 1
  %5 = load %"class.views::Column"**, %"class.views::Column"*** %4, align 8
  %6 = icmp eq %"class.views::Column"** %3, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 1
  br label %10

9:                                                ; preds = %147, %1
  ret void

10:                                               ; preds = %7, %147
  %11 = phi %"class.views::Column"** [ %3, %7 ], [ %148, %147 ]
  %12 = load %"class.views::Column"*, %"class.views::Column"** %11, align 8
  %13 = load i32, i32* %8, align 4
  %14 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %12, i64 0, i32 8, i32 0, i32 0
  %15 = load %"class.views::Column"**, %"class.views::Column"*** %14, align 8
  %16 = ptrtoint %"class.views::Column"** %15 to i64
  %17 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %12, i64 0, i32 8, i32 0, i32 1
  %18 = load %"class.views::Column"**, %"class.views::Column"*** %17, align 8
  %19 = icmp eq %"class.views::Column"** %15, %18
  br i1 %19, label %147, label %20

20:                                               ; preds = %10
  %21 = getelementptr %"class.views::Column"*, %"class.views::Column"** %18, i64 -1
  %22 = ptrtoint %"class.views::Column"** %21 to i64
  %23 = sub i64 %22, %16
  %24 = lshr i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 3
  %27 = icmp ult i64 %23, 24
  br i1 %27, label %72, label %28

28:                                               ; preds = %20
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i32 [ 0, %28 ], [ %68, %30 ]
  %32 = phi %"class.views::Column"** [ %15, %28 ], [ %69, %30 ]
  %33 = phi i64 [ %29, %28 ], [ %70, %30 ]
  %34 = bitcast %"class.views::Column"** %32 to %"class.views::LayoutElement"**
  %35 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %34, align 8
  %36 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %35, i64 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, %13
  %39 = icmp slt i32 %31, %37
  %40 = select i1 %39, i32 %37, i32 %31
  %41 = select i1 %38, i32 %31, i32 %40
  %42 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %32, i64 1
  %43 = bitcast %"class.views::Column"** %42 to %"class.views::LayoutElement"**
  %44 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %43, align 8
  %45 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, %13
  %48 = icmp slt i32 %41, %46
  %49 = select i1 %48, i32 %46, i32 %41
  %50 = select i1 %47, i32 %41, i32 %49
  %51 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %32, i64 2
  %52 = bitcast %"class.views::Column"** %51 to %"class.views::LayoutElement"**
  %53 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %52, align 8
  %54 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, %13
  %57 = icmp slt i32 %50, %55
  %58 = select i1 %57, i32 %55, i32 %50
  %59 = select i1 %56, i32 %50, i32 %58
  %60 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %32, i64 3
  %61 = bitcast %"class.views::Column"** %60 to %"class.views::LayoutElement"**
  %62 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %61, align 8
  %63 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %62, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp sgt i32 %64, %13
  %66 = icmp slt i32 %59, %64
  %67 = select i1 %66, i32 %64, i32 %59
  %68 = select i1 %65, i32 %59, i32 %67
  %69 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %32, i64 4
  %70 = add i64 %33, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %30

72:                                               ; preds = %30, %20
  %73 = phi i32 [ undef, %20 ], [ %68, %30 ]
  %74 = phi i32 [ 0, %20 ], [ %68, %30 ]
  %75 = phi %"class.views::Column"** [ %15, %20 ], [ %69, %30 ]
  %76 = icmp eq i64 %26, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %72, %77
  %78 = phi i32 [ %88, %77 ], [ %74, %72 ]
  %79 = phi %"class.views::Column"** [ %89, %77 ], [ %75, %72 ]
  %80 = phi i64 [ %90, %77 ], [ %26, %72 ]
  %81 = bitcast %"class.views::Column"** %79 to %"class.views::LayoutElement"**
  %82 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %81, align 8
  %83 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = icmp sgt i32 %84, %13
  %86 = icmp slt i32 %78, %84
  %87 = select i1 %86, i32 %84, i32 %78
  %88 = select i1 %85, i32 %78, i32 %87
  %89 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %79, i64 1
  %90 = add i64 %80, -1
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !58

92:                                               ; preds = %77, %72
  %93 = phi i32 [ %73, %72 ], [ %88, %77 ]
  %94 = getelementptr %"class.views::Column"*, %"class.views::Column"** %18, i64 -1
  %95 = ptrtoint %"class.views::Column"** %94 to i64
  %96 = sub i64 %95, %16
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %113, label %101

101:                                              ; preds = %92, %101
  %102 = phi %"class.views::Column"** [ %110, %101 ], [ %15, %92 ]
  %103 = phi i64 [ %111, %101 ], [ %99, %92 ]
  %104 = bitcast %"class.views::Column"** %102 to %"class.views::LayoutElement"**
  %105 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %104, align 8
  %106 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %105, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = icmp slt i32 %93, %107
  %109 = select i1 %108, i32 %107, i32 %93
  store i32 %109, i32* %106, align 8
  %110 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %102, i64 1
  %111 = add i64 %103, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %101, !llvm.loop !59

113:                                              ; preds = %101, %92
  %114 = phi %"class.views::Column"** [ %15, %92 ], [ %110, %101 ]
  %115 = icmp ult i64 %96, 24
  br i1 %115, label %147, label %116

116:                                              ; preds = %113, %116
  %117 = phi %"class.views::Column"** [ %145, %116 ], [ %114, %113 ]
  %118 = bitcast %"class.views::Column"** %117 to %"class.views::LayoutElement"**
  %119 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %118, align 8
  %120 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %119, i64 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = icmp slt i32 %93, %121
  %123 = select i1 %122, i32 %121, i32 %93
  store i32 %123, i32* %120, align 8
  %124 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %117, i64 1
  %125 = bitcast %"class.views::Column"** %124 to %"class.views::LayoutElement"**
  %126 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %125, align 8
  %127 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %126, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = icmp slt i32 %93, %128
  %130 = select i1 %129, i32 %128, i32 %93
  store i32 %130, i32* %127, align 8
  %131 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %117, i64 2
  %132 = bitcast %"class.views::Column"** %131 to %"class.views::LayoutElement"**
  %133 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %132, align 8
  %134 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %133, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = icmp slt i32 %93, %135
  %137 = select i1 %136, i32 %135, i32 %93
  store i32 %137, i32* %134, align 8
  %138 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %117, i64 3
  %139 = bitcast %"class.views::Column"** %138 to %"class.views::LayoutElement"**
  %140 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %139, align 8
  %141 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %140, i64 0, i32 3
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %93, %142
  %144 = select i1 %143, i32 %142, i32 %93
  store i32 %144, i32* %141, align 8
  %145 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %117, i64 4
  %146 = icmp eq %"class.views::Column"** %145, %18
  br i1 %146, label %147, label %116

147:                                              ; preds = %113, %116, %10
  %148 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %11, i64 1
  %149 = icmp eq %"class.views::Column"** %148, %5
  br i1 %149, label %9, label %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet20UpdateRemainingWidthEPNS_9ViewStateE(%"class.views::ColumnSet"* nocapture readonly, %"struct.views::ViewState"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %9
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %2
  %13 = sext i32 %6 to i64
  %14 = shl nsw i64 %13, 3
  %15 = add nsw i64 %14, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 7
  %19 = icmp ult i64 %15, 56
  br i1 %19, label %76, label %20

20:                                               ; preds = %12
  %21 = sub nsw i64 %17, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %72, %22 ]
  %24 = phi %"class.std::__1::unique_ptr"* [ %10, %20 ], [ %73, %22 ]
  %25 = phi i64 [ %21, %20 ], [ %74, %22 ]
  %26 = bitcast %"class.std::__1::unique_ptr"* %24 to %"class.views::LayoutElement"**
  %27 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %26, align 8
  %28 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %23
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 1
  %32 = bitcast %"class.std::__1::unique_ptr"* %31 to %"class.views::LayoutElement"**
  %33 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %32, align 8
  %34 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, %30
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 2
  %38 = bitcast %"class.std::__1::unique_ptr"* %37 to %"class.views::LayoutElement"**
  %39 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %38, align 8
  %40 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, %36
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 3
  %44 = bitcast %"class.std::__1::unique_ptr"* %43 to %"class.views::LayoutElement"**
  %45 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %44, align 8
  %46 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %45, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, %42
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 4
  %50 = bitcast %"class.std::__1::unique_ptr"* %49 to %"class.views::LayoutElement"**
  %51 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %50, align 8
  %52 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %51, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = add nsw i32 %53, %48
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 5
  %56 = bitcast %"class.std::__1::unique_ptr"* %55 to %"class.views::LayoutElement"**
  %57 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %56, align 8
  %58 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %57, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, %54
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 6
  %62 = bitcast %"class.std::__1::unique_ptr"* %61 to %"class.views::LayoutElement"**
  %63 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %62, align 8
  %64 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %63, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = add nsw i32 %65, %60
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 7
  %68 = bitcast %"class.std::__1::unique_ptr"* %67 to %"class.views::LayoutElement"**
  %69 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %68, align 8
  %70 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, %66
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 8
  %74 = add i64 %25, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %22

76:                                               ; preds = %22, %12
  %77 = phi i32 [ undef, %12 ], [ %72, %22 ]
  %78 = phi i32 [ 0, %12 ], [ %72, %22 ]
  %79 = phi %"class.std::__1::unique_ptr"* [ %10, %12 ], [ %73, %22 ]
  %80 = icmp eq i64 %18, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %76, %81
  %82 = phi i32 [ %89, %81 ], [ %78, %76 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %90, %81 ], [ %79, %76 ]
  %84 = phi i64 [ %91, %81 ], [ %18, %76 ]
  %85 = bitcast %"class.std::__1::unique_ptr"* %83 to %"class.views::LayoutElement"**
  %86 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %85, align 8
  %87 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %86, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, %82
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %91 = add i64 %84, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %81, !llvm.loop !60

93:                                               ; preds = %76, %81, %2
  %94 = phi i32 [ 0, %2 ], [ %77, %76 ], [ %89, %81 ]
  %95 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 13
  %96 = load i32, i32* %95, align 4
  %97 = sub nsw i32 %96, %94
  store i32 %97, i32* %95, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet24DistributeRemainingWidthEPNS_9ViewStateE(%"class.views::ColumnSet"* nocapture readonly, %"struct.views::ViewState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 13
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %111, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %8
  %12 = icmp sgt i32 %10, 0
  br i1 %12, label %13, label %111

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = sext i32 %8 to i64
  %17 = sext i32 %11 to i64
  br label %26

18:                                               ; preds = %45
  %19 = icmp sgt i32 %46, 0
  br i1 %19, label %20, label %80

20:                                               ; preds = %18
  br i1 %12, label %21, label %111

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = sitofp i32 %4 to float
  %24 = sext i32 %8 to i64
  %25 = sext i32 %11 to i64
  br label %51

26:                                               ; preds = %13, %45
  %27 = phi i64 [ %16, %13 ], [ %49, %45 ]
  %28 = phi float [ 0.000000e+00, %13 ], [ %48, %45 ]
  %29 = phi i32 [ 0, %13 ], [ %47, %45 ]
  %30 = phi i32 [ 0, %13 ], [ %46, %45 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 %27, i32 0, i32 0, i32 0
  %32 = load %"class.views::Column"*, %"class.views::Column"** %31, align 8
  %33 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %32, i64 0, i32 0, i32 1
  %34 = load float, float* %33, align 8
  %35 = fcmp ogt float %34, 0.000000e+00
  br i1 %35, label %36, label %39

36:                                               ; preds = %26
  %37 = fadd float %28, %34
  %38 = add nsw i32 %30, 1
  br label %45

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %32, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  %43 = zext i1 %42 to i32
  %44 = add nsw i32 %29, %43
  br label %45

45:                                               ; preds = %39, %36
  %46 = phi i32 [ %38, %36 ], [ %30, %39 ]
  %47 = phi i32 [ %29, %36 ], [ %44, %39 ]
  %48 = phi float [ %37, %36 ], [ %28, %39 ]
  %49 = add nsw i64 %27, 1
  %50 = icmp slt i64 %49, %17
  br i1 %50, label %26, label %18

51:                                               ; preds = %21, %75
  %52 = phi i64 [ %24, %21 ], [ %78, %75 ]
  %53 = phi i32 [ 0, %21 ], [ %77, %75 ]
  %54 = phi i32 [ %4, %21 ], [ %76, %75 ]
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 %52, i32 0, i32 0, i32 0
  %57 = bitcast %"class.views::Column"** %56 to %"class.views::LayoutElement"**
  %58 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %57, align 8
  %59 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %58, i64 0, i32 1
  %60 = load float, float* %59, align 8
  %61 = fcmp ogt float %60, 0.000000e+00
  br i1 %61, label %62, label %75

62:                                               ; preds = %51
  %63 = add nsw i32 %53, 1
  %64 = icmp eq i32 %63, %46
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = fmul float %60, %23
  %67 = fdiv float %66, %48
  %68 = fptosi float %67 to i32
  br label %69

69:                                               ; preds = %62, %65
  %70 = phi i32 [ %68, %65 ], [ %54, %62 ]
  %71 = sub nsw i32 %54, %70
  %72 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %58, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, %70
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %51, %69
  %76 = phi i32 [ %71, %69 ], [ %54, %51 ]
  %77 = phi i32 [ %63, %69 ], [ %53, %51 ]
  %78 = add nsw i64 %52, 1
  %79 = icmp slt i64 %78, %25
  br i1 %79, label %51, label %111

80:                                               ; preds = %18
  %81 = icmp slt i32 %47, 1
  %82 = xor i1 %12, true
  %83 = or i1 %81, %82
  br i1 %83, label %111, label %84

84:                                               ; preds = %80
  %85 = sdiv i32 %4, %47
  %86 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %87 = sext i32 %8 to i64
  %88 = sext i32 %11 to i64
  br label %89

89:                                               ; preds = %84, %106
  %90 = phi i64 [ %87, %84 ], [ %109, %106 ]
  %91 = phi i32 [ %85, %84 ], [ %108, %106 ]
  %92 = phi i32 [ %4, %84 ], [ %107, %106 ]
  %93 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %86, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 %90, i32 0, i32 0, i32 0
  %95 = load %"class.views::Column"*, %"class.views::Column"** %94, align 8
  %96 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %95, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %106

99:                                               ; preds = %89
  %100 = sub nsw i32 %92, %91
  %101 = icmp slt i32 %100, %91
  %102 = select i1 %101, i32 %92, i32 %91
  %103 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %95, i64 0, i32 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add nsw i32 %104, %102
  store i32 %105, i32* %103, align 8
  br label %106

106:                                              ; preds = %89, %99
  %107 = phi i32 [ %100, %99 ], [ %92, %89 ]
  %108 = phi i32 [ %102, %99 ], [ %91, %89 ]
  %109 = add nsw i64 %90, 1
  %110 = icmp slt i64 %109, %88
  br i1 %110, label %89, label %111

111:                                              ; preds = %106, %75, %80, %6, %20, %2
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5views9ColumnSet11LayoutWidthEv(%"class.views::ColumnSet"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %3, %5
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %3 to i64
  %9 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 -1, i32 0, i32 0, i32 0
  %10 = ptrtoint %"class.views::Column"** %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 3
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 7
  %15 = icmp ult i64 %11, 56
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = sub nsw i64 %13, %14
  br label %37

18:                                               ; preds = %37, %7
  %19 = phi i32 [ undef, %7 ], [ %87, %37 ]
  %20 = phi i32 [ 0, %7 ], [ %87, %37 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %3, %7 ], [ %88, %37 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %35, label %23

23:                                               ; preds = %18, %23
  %24 = phi i32 [ %31, %23 ], [ %20, %18 ]
  %25 = phi %"class.std::__1::unique_ptr"* [ %32, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %33, %23 ], [ %14, %18 ]
  %27 = bitcast %"class.std::__1::unique_ptr"* %25 to %"class.views::LayoutElement"**
  %28 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %27, align 8
  %29 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %28, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, %24
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %33 = add i64 %26, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %23, !llvm.loop !61

35:                                               ; preds = %18, %23, %1
  %36 = phi i32 [ 0, %1 ], [ %19, %18 ], [ %31, %23 ]
  ret i32 %36

37:                                               ; preds = %37, %16
  %38 = phi i32 [ 0, %16 ], [ %87, %37 ]
  %39 = phi %"class.std::__1::unique_ptr"* [ %3, %16 ], [ %88, %37 ]
  %40 = phi i64 [ %17, %16 ], [ %89, %37 ]
  %41 = bitcast %"class.std::__1::unique_ptr"* %39 to %"class.views::LayoutElement"**
  %42 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %41, align 8
  %43 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %42, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, %38
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %47 = bitcast %"class.std::__1::unique_ptr"* %46 to %"class.views::LayoutElement"**
  %48 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %47, align 8
  %49 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = add nsw i32 %50, %45
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 2
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to %"class.views::LayoutElement"**
  %54 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %53, align 8
  %55 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = add nsw i32 %56, %51
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 3
  %59 = bitcast %"class.std::__1::unique_ptr"* %58 to %"class.views::LayoutElement"**
  %60 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %59, align 8
  %61 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, %57
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 4
  %65 = bitcast %"class.std::__1::unique_ptr"* %64 to %"class.views::LayoutElement"**
  %66 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %65, align 8
  %67 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %66, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = add nsw i32 %68, %63
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 5
  %71 = bitcast %"class.std::__1::unique_ptr"* %70 to %"class.views::LayoutElement"**
  %72 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %71, align 8
  %73 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, %69
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 6
  %77 = bitcast %"class.std::__1::unique_ptr"* %76 to %"class.views::LayoutElement"**
  %78 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %77, align 8
  %79 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %78, i64 0, i32 3
  %80 = load i32, i32* %79, align 8
  %81 = add nsw i32 %80, %75
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 7
  %83 = bitcast %"class.std::__1::unique_ptr"* %82 to %"class.views::LayoutElement"**
  %84 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %83, align 8
  %85 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %84, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add nsw i32 %86, %81
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 8
  %89 = add i64 %40, -8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %18, label %37
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5views9ColumnSet14GetColumnWidthEii(%"class.views::ColumnSet"* nocapture readonly, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 %6
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %90, label %9

9:                                                ; preds = %3
  %10 = sext i32 %2 to i64
  %11 = shl nsw i64 %10, 3
  %12 = add nsw i64 %11, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 7
  %16 = icmp ult i64 %12, 56
  br i1 %16, label %73, label %17

17:                                               ; preds = %9
  %18 = sub nsw i64 %14, %15
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi i32 [ 0, %17 ], [ %69, %19 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %7, %17 ], [ %70, %19 ]
  %22 = phi i64 [ %18, %17 ], [ %71, %19 ]
  %23 = bitcast %"class.std::__1::unique_ptr"* %21 to %"class.views::LayoutElement"**
  %24 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %23, align 8
  %25 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = add nsw i32 %26, %20
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %29 = bitcast %"class.std::__1::unique_ptr"* %28 to %"class.views::LayoutElement"**
  %30 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %29, align 8
  %31 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = add nsw i32 %32, %27
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 2
  %35 = bitcast %"class.std::__1::unique_ptr"* %34 to %"class.views::LayoutElement"**
  %36 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %35, align 8
  %37 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %36, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, %33
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 3
  %41 = bitcast %"class.std::__1::unique_ptr"* %40 to %"class.views::LayoutElement"**
  %42 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %41, align 8
  %43 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %42, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, %39
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 4
  %47 = bitcast %"class.std::__1::unique_ptr"* %46 to %"class.views::LayoutElement"**
  %48 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %47, align 8
  %49 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = add nsw i32 %50, %45
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 5
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to %"class.views::LayoutElement"**
  %54 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %53, align 8
  %55 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = add nsw i32 %56, %51
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 6
  %59 = bitcast %"class.std::__1::unique_ptr"* %58 to %"class.views::LayoutElement"**
  %60 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %59, align 8
  %61 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = add nsw i32 %62, %57
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 7
  %65 = bitcast %"class.std::__1::unique_ptr"* %64 to %"class.views::LayoutElement"**
  %66 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %65, align 8
  %67 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %66, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = add nsw i32 %68, %63
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 8
  %71 = add i64 %22, -8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %19

73:                                               ; preds = %19, %9
  %74 = phi i32 [ undef, %9 ], [ %69, %19 ]
  %75 = phi i32 [ 0, %9 ], [ %69, %19 ]
  %76 = phi %"class.std::__1::unique_ptr"* [ %7, %9 ], [ %70, %19 ]
  %77 = icmp eq i64 %15, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %73, %78
  %79 = phi i32 [ %86, %78 ], [ %75, %73 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %87, %78 ], [ %76, %73 ]
  %81 = phi i64 [ %88, %78 ], [ %15, %73 ]
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to %"class.views::LayoutElement"**
  %83 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %82, align 8
  %84 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %83, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, %79
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %78, !llvm.loop !62

90:                                               ; preds = %73, %78, %3
  %91 = phi i32 [ 0, %3 ], [ %74, %73 ], [ %86, %78 ]
  ret i32 %91
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet23ResetColumnXCoordinatesEv(%"class.views::ColumnSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %3, %5
  br i1 %6, label %74, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %3 to i64
  %9 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 -1, i32 0, i32 0, i32 0
  %10 = ptrtoint %"class.views::Column"** %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 3
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 3
  %15 = icmp ult i64 %11, 24
  br i1 %15, label %56, label %16

16:                                               ; preds = %7
  %17 = sub nsw i64 %13, %14
  br label %18

18:                                               ; preds = %18, %16
  %19 = phi i32 [ 0, %16 ], [ %52, %18 ]
  %20 = phi %"class.std::__1::unique_ptr"* [ %3, %16 ], [ %53, %18 ]
  %21 = phi i64 [ %17, %16 ], [ %54, %18 ]
  %22 = bitcast %"class.std::__1::unique_ptr"* %20 to %"class.views::LayoutElement"**
  %23 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %22, align 8
  %24 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %23, i64 0, i32 2
  store i32 %19, i32* %24, align 4
  %25 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %22, align 8
  %26 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %25, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = add nsw i32 %27, %19
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %30 = bitcast %"class.std::__1::unique_ptr"* %29 to %"class.views::LayoutElement"**
  %31 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %30, align 8
  %32 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %31, i64 0, i32 2
  store i32 %28, i32* %32, align 4
  %33 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %30, align 8
  %34 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, %28
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 2
  %38 = bitcast %"class.std::__1::unique_ptr"* %37 to %"class.views::LayoutElement"**
  %39 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %38, align 8
  %40 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %39, i64 0, i32 2
  store i32 %36, i32* %40, align 4
  %41 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %38, align 8
  %42 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %41, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, %36
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 3
  %46 = bitcast %"class.std::__1::unique_ptr"* %45 to %"class.views::LayoutElement"**
  %47 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %46, align 8
  %48 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %47, i64 0, i32 2
  store i32 %44, i32* %48, align 4
  %49 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %46, align 8
  %50 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %49, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, %44
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 4
  %54 = add i64 %21, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %18

56:                                               ; preds = %18, %7
  %57 = phi i32 [ 0, %7 ], [ %52, %18 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ %3, %7 ], [ %53, %18 ]
  %59 = icmp eq i64 %14, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %56, %60
  %61 = phi i32 [ %70, %60 ], [ %57, %56 ]
  %62 = phi %"class.std::__1::unique_ptr"* [ %71, %60 ], [ %58, %56 ]
  %63 = phi i64 [ %72, %60 ], [ %14, %56 ]
  %64 = bitcast %"class.std::__1::unique_ptr"* %62 to %"class.views::LayoutElement"**
  %65 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %64, align 8
  %66 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %65, i64 0, i32 2
  store i32 %61, i32* %66, align 4
  %67 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %64, align 8
  %68 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %67, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add nsw i32 %69, %61
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %62, i64 1
  %72 = add i64 %63, -1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %60, !llvm.loop !63

74:                                               ; preds = %56, %60, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet13CalculateSizeENS0_19SizeCalculationTypeE(%"class.views::ColumnSet"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %3, align 8
  %5 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  %7 = icmp eq %"struct.views::ViewState"** %4, %6
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 1
  %10 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  br label %36

11:                                               ; preds = %117, %2
  %12 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %14 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr"* %13, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %11, %17
  %18 = phi %"class.std::__1::unique_ptr"* [ %25, %17 ], [ %13, %11 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.views::Column"*, %"class.views::Column"** %19, align 8
  %21 = bitcast %"class.views::Column"* %20 to void (%"class.views::Column"*)***
  %22 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %22, i64 3
  %24 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %23, align 8
  tail call void %24(%"class.views::Column"* %20) #15
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 1
  %26 = icmp eq %"class.std::__1::unique_ptr"* %25, %15
  br i1 %26, label %27, label %17

27:                                               ; preds = %17, %11
  %28 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %3, align 8
  %29 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  %30 = icmp eq %"struct.views::ViewState"** %28, %29
  br i1 %30, label %154, label %31

31:                                               ; preds = %27
  %32 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %28, align 8
  %33 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %32, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %131, label %154

36:                                               ; preds = %8, %117
  %37 = phi %"struct.views::ViewState"** [ %4, %8 ], [ %124, %117 ]
  %38 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %37, align 8
  %39 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 8
  %40 = load i8, i8* %39, align 8, !range !64
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !64
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %117

46:                                               ; preds = %42, %36
  br i1 %9, label %47, label %95

47:                                               ; preds = %46
  %48 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %49 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %51
  %53 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %72, label %60

58:                                               ; preds = %67
  %59 = icmp eq %"class.std::__1::unique_ptr"* %71, %56
  br i1 %59, label %72, label %60

60:                                               ; preds = %47, %58
  %61 = phi %"class.std::__1::unique_ptr"* [ %71, %58 ], [ %52, %47 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.views::Column"*, %"class.views::Column"** %62, align 8
  %64 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %63, i64 0, i32 0, i32 1
  %65 = load float, float* %64, align 8
  %66 = fcmp ogt float %65, 0.000000e+00
  br i1 %66, label %67, label %95

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %63, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 1
  br i1 %70, label %95, label %58

72:                                               ; preds = %58, %47
  %73 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 1
  %74 = load %"class.views::View"*, %"class.views::View"** %73, align 8
  %75 = bitcast %"class.views::View"* %74 to i64 (%"class.views::View"*)***
  %76 = load i64 (%"class.views::View"*)**, i64 (%"class.views::View"*)*** %75, align 8
  %77 = getelementptr inbounds i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %76, i64 17
  %78 = load i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %77, align 8
  %79 = tail call i64 %78(%"class.views::View"* %74) #15
  %80 = trunc i64 %79 to i32
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 11
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, %80
  %86 = icmp sgt i32 %84, 0
  %87 = select i1 %86, i32 %84, i32 0
  %88 = select i1 %85, i32 %87, i32 %80
  %89 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 12
  %90 = load i32, i32* %89, align 8
  %91 = icmp slt i32 %90, %82
  br i1 %91, label %92, label %104

92:                                               ; preds = %72
  %93 = icmp sgt i32 %90, 0
  %94 = select i1 %93, i32 %90, i32 0
  br label %104

95:                                               ; preds = %67, %60, %46
  %96 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 1
  %97 = load %"class.views::View"*, %"class.views::View"** %96, align 8
  %98 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %97) #15
  %99 = trunc i64 %98 to i32
  %100 = lshr i64 %98, 32
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 10
  %103 = bitcast %"class.gfx::Size"* %102 to i64*
  store i64 %98, i64* %103, align 4
  br label %104

104:                                              ; preds = %72, %92, %95
  %105 = phi i32 [ %94, %92 ], [ %82, %72 ], [ %101, %95 ]
  %106 = phi i32 [ %88, %92 ], [ %88, %72 ], [ %99, %95 ]
  %107 = load i8, i8* %39, align 8, !range !64
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 11
  store i32 %106, i32* %110, align 4
  br label %111

111:                                              ; preds = %104, %109
  %112 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !64
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 12
  store i32 %105, i32* %116, align 8
  br label %117

117:                                              ; preds = %115, %111, %42
  %118 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 11
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 13
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 12
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %38, i64 0, i32 14
  store i32 %122, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %37, i64 1
  %125 = icmp eq %"struct.views::ViewState"** %124, %6
  br i1 %125, label %11, label %36

126:                                              ; preds = %131
  %127 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %151, align 8
  %128 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %127, i64 0, i32 4
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %154

131:                                              ; preds = %31, %126
  %132 = phi %"struct.views::ViewState"* [ %127, %126 ], [ %32, %31 ]
  %133 = phi %"struct.views::ViewState"** [ %151, %126 ], [ %28, %31 ]
  %134 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %132, i64 0, i32 2
  %135 = load i32, i32* %134, align 8
  %136 = sext i32 %135 to i64
  %137 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %137, i64 %136, i32 0, i32 0, i32 0
  %139 = load %"class.views::Column"*, %"class.views::Column"** %138, align 8
  %140 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %132, i64 0, i32 11
  %141 = load i32, i32* %140, align 4
  %142 = bitcast %"class.views::Column"* %139 to void (%"class.views::Column"*, i32)***
  %143 = load void (%"class.views::Column"*, i32)**, void (%"class.views::Column"*, i32)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.views::Column"*, i32)*, void (%"class.views::Column"*, i32)** %143, i64 2
  %145 = load void (%"class.views::Column"*, i32)*, void (%"class.views::Column"*, i32)** %144, align 8
  tail call void %145(%"class.views::Column"* %139, i32 %141) #15
  %146 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %139, i64 0, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %132, i64 0, i32 13
  %149 = load i32, i32* %148, align 4
  %150 = sub nsw i32 %149, %147
  store i32 %150, i32* %148, align 4
  %151 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %133, i64 1
  %152 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  %153 = icmp eq %"struct.views::ViewState"** %151, %152
  br i1 %153, label %154, label %126

154:                                              ; preds = %131, %126, %31, %27
  %155 = phi %"struct.views::ViewState"** [ %28, %27 ], [ %29, %31 ], [ %152, %126 ], [ %151, %131 ]
  %156 = phi %"struct.views::ViewState"** [ %28, %27 ], [ %28, %31 ], [ %151, %126 ], [ %151, %131 ]
  %157 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 0
  %158 = load %"class.views::Column"**, %"class.views::Column"*** %157, align 8
  %159 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 4, i32 0, i32 1
  %160 = load %"class.views::Column"**, %"class.views::Column"*** %159, align 8
  %161 = icmp eq %"class.views::Column"** %158, %160
  br i1 %161, label %306, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 1
  br label %164

164:                                              ; preds = %301, %162
  %165 = phi %"class.views::Column"** [ %158, %162 ], [ %302, %301 ]
  %166 = load %"class.views::Column"*, %"class.views::Column"** %165, align 8
  %167 = load i32, i32* %163, align 4
  %168 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %166, i64 0, i32 8, i32 0, i32 0
  %169 = load %"class.views::Column"**, %"class.views::Column"*** %168, align 8
  %170 = ptrtoint %"class.views::Column"** %169 to i64
  %171 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %166, i64 0, i32 8, i32 0, i32 1
  %172 = load %"class.views::Column"**, %"class.views::Column"*** %171, align 8
  %173 = icmp eq %"class.views::Column"** %169, %172
  br i1 %173, label %301, label %174

174:                                              ; preds = %164
  %175 = getelementptr %"class.views::Column"*, %"class.views::Column"** %172, i64 -1
  %176 = ptrtoint %"class.views::Column"** %175 to i64
  %177 = sub i64 %176, %170
  %178 = lshr i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 3
  %181 = icmp ult i64 %177, 24
  br i1 %181, label %226, label %182

182:                                              ; preds = %174
  %183 = sub nsw i64 %179, %180
  br label %184

184:                                              ; preds = %184, %182
  %185 = phi i32 [ 0, %182 ], [ %222, %184 ]
  %186 = phi %"class.views::Column"** [ %169, %182 ], [ %223, %184 ]
  %187 = phi i64 [ %183, %182 ], [ %224, %184 ]
  %188 = bitcast %"class.views::Column"** %186 to %"class.views::LayoutElement"**
  %189 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %188, align 8
  %190 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %189, i64 0, i32 3
  %191 = load i32, i32* %190, align 8
  %192 = icmp sgt i32 %191, %167
  %193 = icmp slt i32 %185, %191
  %194 = select i1 %193, i32 %191, i32 %185
  %195 = select i1 %192, i32 %185, i32 %194
  %196 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %186, i64 1
  %197 = bitcast %"class.views::Column"** %196 to %"class.views::LayoutElement"**
  %198 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %197, align 8
  %199 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %198, i64 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = icmp sgt i32 %200, %167
  %202 = icmp slt i32 %195, %200
  %203 = select i1 %202, i32 %200, i32 %195
  %204 = select i1 %201, i32 %195, i32 %203
  %205 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %186, i64 2
  %206 = bitcast %"class.views::Column"** %205 to %"class.views::LayoutElement"**
  %207 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %206, align 8
  %208 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %207, i64 0, i32 3
  %209 = load i32, i32* %208, align 8
  %210 = icmp sgt i32 %209, %167
  %211 = icmp slt i32 %204, %209
  %212 = select i1 %211, i32 %209, i32 %204
  %213 = select i1 %210, i32 %204, i32 %212
  %214 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %186, i64 3
  %215 = bitcast %"class.views::Column"** %214 to %"class.views::LayoutElement"**
  %216 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %215, align 8
  %217 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %216, i64 0, i32 3
  %218 = load i32, i32* %217, align 8
  %219 = icmp sgt i32 %218, %167
  %220 = icmp slt i32 %213, %218
  %221 = select i1 %220, i32 %218, i32 %213
  %222 = select i1 %219, i32 %213, i32 %221
  %223 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %186, i64 4
  %224 = add i64 %187, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %184

226:                                              ; preds = %184, %174
  %227 = phi i32 [ undef, %174 ], [ %222, %184 ]
  %228 = phi i32 [ 0, %174 ], [ %222, %184 ]
  %229 = phi %"class.views::Column"** [ %169, %174 ], [ %223, %184 ]
  %230 = icmp eq i64 %180, 0
  br i1 %230, label %246, label %231

231:                                              ; preds = %226, %231
  %232 = phi i32 [ %242, %231 ], [ %228, %226 ]
  %233 = phi %"class.views::Column"** [ %243, %231 ], [ %229, %226 ]
  %234 = phi i64 [ %244, %231 ], [ %180, %226 ]
  %235 = bitcast %"class.views::Column"** %233 to %"class.views::LayoutElement"**
  %236 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %235, align 8
  %237 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %236, i64 0, i32 3
  %238 = load i32, i32* %237, align 8
  %239 = icmp sgt i32 %238, %167
  %240 = icmp slt i32 %232, %238
  %241 = select i1 %240, i32 %238, i32 %232
  %242 = select i1 %239, i32 %232, i32 %241
  %243 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %233, i64 1
  %244 = add i64 %234, -1
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %231, !llvm.loop !65

246:                                              ; preds = %231, %226
  %247 = phi i32 [ %227, %226 ], [ %242, %231 ]
  %248 = getelementptr %"class.views::Column"*, %"class.views::Column"** %172, i64 -1
  %249 = ptrtoint %"class.views::Column"** %248 to i64
  %250 = sub i64 %249, %170
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %267, label %255

255:                                              ; preds = %246, %255
  %256 = phi %"class.views::Column"** [ %264, %255 ], [ %169, %246 ]
  %257 = phi i64 [ %265, %255 ], [ %253, %246 ]
  %258 = bitcast %"class.views::Column"** %256 to %"class.views::LayoutElement"**
  %259 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %258, align 8
  %260 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %259, i64 0, i32 3
  %261 = load i32, i32* %260, align 8
  %262 = icmp slt i32 %247, %261
  %263 = select i1 %262, i32 %261, i32 %247
  store i32 %263, i32* %260, align 8
  %264 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %256, i64 1
  %265 = add i64 %257, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %255, !llvm.loop !66

267:                                              ; preds = %255, %246
  %268 = phi %"class.views::Column"** [ %169, %246 ], [ %264, %255 ]
  %269 = icmp ult i64 %250, 24
  br i1 %269, label %301, label %270

270:                                              ; preds = %267, %270
  %271 = phi %"class.views::Column"** [ %299, %270 ], [ %268, %267 ]
  %272 = bitcast %"class.views::Column"** %271 to %"class.views::LayoutElement"**
  %273 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %272, align 8
  %274 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %273, i64 0, i32 3
  %275 = load i32, i32* %274, align 8
  %276 = icmp slt i32 %247, %275
  %277 = select i1 %276, i32 %275, i32 %247
  store i32 %277, i32* %274, align 8
  %278 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %271, i64 1
  %279 = bitcast %"class.views::Column"** %278 to %"class.views::LayoutElement"**
  %280 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %279, align 8
  %281 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %280, i64 0, i32 3
  %282 = load i32, i32* %281, align 8
  %283 = icmp slt i32 %247, %282
  %284 = select i1 %283, i32 %282, i32 %247
  store i32 %284, i32* %281, align 8
  %285 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %271, i64 2
  %286 = bitcast %"class.views::Column"** %285 to %"class.views::LayoutElement"**
  %287 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %286, align 8
  %288 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %287, i64 0, i32 3
  %289 = load i32, i32* %288, align 8
  %290 = icmp slt i32 %247, %289
  %291 = select i1 %290, i32 %289, i32 %247
  store i32 %291, i32* %288, align 8
  %292 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %271, i64 3
  %293 = bitcast %"class.views::Column"** %292 to %"class.views::LayoutElement"**
  %294 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %293, align 8
  %295 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %294, i64 0, i32 3
  %296 = load i32, i32* %295, align 8
  %297 = icmp slt i32 %247, %296
  %298 = select i1 %297, i32 %296, i32 %247
  store i32 %298, i32* %295, align 8
  %299 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %271, i64 4
  %300 = icmp eq %"class.views::Column"** %299, %172
  br i1 %300, label %301, label %270

301:                                              ; preds = %267, %270, %164
  %302 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %165, i64 1
  %303 = icmp eq %"class.views::Column"** %302, %160
  br i1 %303, label %304, label %164

304:                                              ; preds = %301
  %305 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  br label %306

306:                                              ; preds = %304, %154
  %307 = phi %"struct.views::ViewState"** [ %305, %304 ], [ %155, %154 ]
  %308 = icmp eq %"struct.views::ViewState"** %156, %307
  br i1 %308, label %555, label %309

309:                                              ; preds = %306
  %310 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 1
  br label %311

311:                                              ; preds = %309, %551
  %312 = phi %"struct.views::ViewState"** [ %156, %309 ], [ %552, %551 ]
  %313 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %312, align 8
  %314 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %313, i64 0, i32 2
  %315 = load i32, i32* %314, align 8
  %316 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %313, i64 0, i32 4
  %317 = load i32, i32* %316, align 8
  %318 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %12, align 8
  %319 = sext i32 %315 to i64
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %318, i64 %319
  %321 = icmp eq i32 %317, 0
  br i1 %321, label %403, label %322

322:                                              ; preds = %311
  %323 = sext i32 %317 to i64
  %324 = shl nsw i64 %323, 3
  %325 = add nsw i64 %324, -8
  %326 = lshr exact i64 %325, 3
  %327 = add nuw nsw i64 %326, 1
  %328 = and i64 %327, 7
  %329 = icmp ult i64 %325, 56
  br i1 %329, label %386, label %330

330:                                              ; preds = %322
  %331 = sub nsw i64 %327, %328
  br label %332

332:                                              ; preds = %332, %330
  %333 = phi i32 [ 0, %330 ], [ %382, %332 ]
  %334 = phi %"class.std::__1::unique_ptr"* [ %320, %330 ], [ %383, %332 ]
  %335 = phi i64 [ %331, %330 ], [ %384, %332 ]
  %336 = bitcast %"class.std::__1::unique_ptr"* %334 to %"class.views::LayoutElement"**
  %337 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %336, align 8
  %338 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %337, i64 0, i32 3
  %339 = load i32, i32* %338, align 8
  %340 = add nsw i32 %339, %333
  %341 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 1
  %342 = bitcast %"class.std::__1::unique_ptr"* %341 to %"class.views::LayoutElement"**
  %343 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %342, align 8
  %344 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %343, i64 0, i32 3
  %345 = load i32, i32* %344, align 8
  %346 = add nsw i32 %345, %340
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 2
  %348 = bitcast %"class.std::__1::unique_ptr"* %347 to %"class.views::LayoutElement"**
  %349 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %348, align 8
  %350 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %349, i64 0, i32 3
  %351 = load i32, i32* %350, align 8
  %352 = add nsw i32 %351, %346
  %353 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 3
  %354 = bitcast %"class.std::__1::unique_ptr"* %353 to %"class.views::LayoutElement"**
  %355 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %354, align 8
  %356 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %355, i64 0, i32 3
  %357 = load i32, i32* %356, align 8
  %358 = add nsw i32 %357, %352
  %359 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 4
  %360 = bitcast %"class.std::__1::unique_ptr"* %359 to %"class.views::LayoutElement"**
  %361 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %360, align 8
  %362 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %361, i64 0, i32 3
  %363 = load i32, i32* %362, align 8
  %364 = add nsw i32 %363, %358
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 5
  %366 = bitcast %"class.std::__1::unique_ptr"* %365 to %"class.views::LayoutElement"**
  %367 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %366, align 8
  %368 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %367, i64 0, i32 3
  %369 = load i32, i32* %368, align 8
  %370 = add nsw i32 %369, %364
  %371 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 6
  %372 = bitcast %"class.std::__1::unique_ptr"* %371 to %"class.views::LayoutElement"**
  %373 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %372, align 8
  %374 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %373, i64 0, i32 3
  %375 = load i32, i32* %374, align 8
  %376 = add nsw i32 %375, %370
  %377 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 7
  %378 = bitcast %"class.std::__1::unique_ptr"* %377 to %"class.views::LayoutElement"**
  %379 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %378, align 8
  %380 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %379, i64 0, i32 3
  %381 = load i32, i32* %380, align 8
  %382 = add nsw i32 %381, %376
  %383 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %334, i64 8
  %384 = add i64 %335, -8
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %332

386:                                              ; preds = %332, %322
  %387 = phi i32 [ undef, %322 ], [ %382, %332 ]
  %388 = phi i32 [ 0, %322 ], [ %382, %332 ]
  %389 = phi %"class.std::__1::unique_ptr"* [ %320, %322 ], [ %383, %332 ]
  %390 = icmp eq i64 %328, 0
  br i1 %390, label %403, label %391

391:                                              ; preds = %386, %391
  %392 = phi i32 [ %399, %391 ], [ %388, %386 ]
  %393 = phi %"class.std::__1::unique_ptr"* [ %400, %391 ], [ %389, %386 ]
  %394 = phi i64 [ %401, %391 ], [ %328, %386 ]
  %395 = bitcast %"class.std::__1::unique_ptr"* %393 to %"class.views::LayoutElement"**
  %396 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %395, align 8
  %397 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %396, i64 0, i32 3
  %398 = load i32, i32* %397, align 8
  %399 = add nsw i32 %398, %392
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %393, i64 1
  %401 = add i64 %394, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %391, !llvm.loop !67

403:                                              ; preds = %386, %391, %311
  %404 = phi i32 [ 0, %311 ], [ %387, %386 ], [ %399, %391 ]
  %405 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %313, i64 0, i32 13
  %406 = load i32, i32* %405, align 4
  %407 = sub nsw i32 %406, %404
  store i32 %407, i32* %405, align 4
  tail call void @_ZN5views9ColumnSet24DistributeRemainingWidthEPNS_9ViewStateE(%"class.views::ColumnSet"* %0, %"struct.views::ViewState"* %313)
  %408 = load %"class.views::Column"**, %"class.views::Column"*** %157, align 8
  %409 = load %"class.views::Column"**, %"class.views::Column"*** %159, align 8
  %410 = icmp eq %"class.views::Column"** %408, %409
  br i1 %410, label %551, label %411

411:                                              ; preds = %403, %548
  %412 = phi %"class.views::Column"** [ %549, %548 ], [ %408, %403 ]
  %413 = load %"class.views::Column"*, %"class.views::Column"** %412, align 8
  %414 = load i32, i32* %310, align 4
  %415 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %413, i64 0, i32 8, i32 0, i32 0
  %416 = load %"class.views::Column"**, %"class.views::Column"*** %415, align 8
  %417 = ptrtoint %"class.views::Column"** %416 to i64
  %418 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %413, i64 0, i32 8, i32 0, i32 1
  %419 = load %"class.views::Column"**, %"class.views::Column"*** %418, align 8
  %420 = icmp eq %"class.views::Column"** %416, %419
  br i1 %420, label %548, label %421

421:                                              ; preds = %411
  %422 = getelementptr %"class.views::Column"*, %"class.views::Column"** %419, i64 -1
  %423 = ptrtoint %"class.views::Column"** %422 to i64
  %424 = sub i64 %423, %417
  %425 = lshr i64 %424, 3
  %426 = add nuw nsw i64 %425, 1
  %427 = and i64 %426, 3
  %428 = icmp ult i64 %424, 24
  br i1 %428, label %473, label %429

429:                                              ; preds = %421
  %430 = sub nsw i64 %426, %427
  br label %431

431:                                              ; preds = %431, %429
  %432 = phi i32 [ 0, %429 ], [ %469, %431 ]
  %433 = phi %"class.views::Column"** [ %416, %429 ], [ %470, %431 ]
  %434 = phi i64 [ %430, %429 ], [ %471, %431 ]
  %435 = bitcast %"class.views::Column"** %433 to %"class.views::LayoutElement"**
  %436 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %435, align 8
  %437 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %436, i64 0, i32 3
  %438 = load i32, i32* %437, align 8
  %439 = icmp sgt i32 %438, %414
  %440 = icmp slt i32 %432, %438
  %441 = select i1 %440, i32 %438, i32 %432
  %442 = select i1 %439, i32 %432, i32 %441
  %443 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %433, i64 1
  %444 = bitcast %"class.views::Column"** %443 to %"class.views::LayoutElement"**
  %445 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %444, align 8
  %446 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %445, i64 0, i32 3
  %447 = load i32, i32* %446, align 8
  %448 = icmp sgt i32 %447, %414
  %449 = icmp slt i32 %442, %447
  %450 = select i1 %449, i32 %447, i32 %442
  %451 = select i1 %448, i32 %442, i32 %450
  %452 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %433, i64 2
  %453 = bitcast %"class.views::Column"** %452 to %"class.views::LayoutElement"**
  %454 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %453, align 8
  %455 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %454, i64 0, i32 3
  %456 = load i32, i32* %455, align 8
  %457 = icmp sgt i32 %456, %414
  %458 = icmp slt i32 %451, %456
  %459 = select i1 %458, i32 %456, i32 %451
  %460 = select i1 %457, i32 %451, i32 %459
  %461 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %433, i64 3
  %462 = bitcast %"class.views::Column"** %461 to %"class.views::LayoutElement"**
  %463 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %462, align 8
  %464 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %463, i64 0, i32 3
  %465 = load i32, i32* %464, align 8
  %466 = icmp sgt i32 %465, %414
  %467 = icmp slt i32 %460, %465
  %468 = select i1 %467, i32 %465, i32 %460
  %469 = select i1 %466, i32 %460, i32 %468
  %470 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %433, i64 4
  %471 = add i64 %434, -4
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %431

473:                                              ; preds = %431, %421
  %474 = phi i32 [ undef, %421 ], [ %469, %431 ]
  %475 = phi i32 [ 0, %421 ], [ %469, %431 ]
  %476 = phi %"class.views::Column"** [ %416, %421 ], [ %470, %431 ]
  %477 = icmp eq i64 %427, 0
  br i1 %477, label %493, label %478

478:                                              ; preds = %473, %478
  %479 = phi i32 [ %489, %478 ], [ %475, %473 ]
  %480 = phi %"class.views::Column"** [ %490, %478 ], [ %476, %473 ]
  %481 = phi i64 [ %491, %478 ], [ %427, %473 ]
  %482 = bitcast %"class.views::Column"** %480 to %"class.views::LayoutElement"**
  %483 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %482, align 8
  %484 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %483, i64 0, i32 3
  %485 = load i32, i32* %484, align 8
  %486 = icmp sgt i32 %485, %414
  %487 = icmp slt i32 %479, %485
  %488 = select i1 %487, i32 %485, i32 %479
  %489 = select i1 %486, i32 %479, i32 %488
  %490 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %480, i64 1
  %491 = add i64 %481, -1
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %478, !llvm.loop !68

493:                                              ; preds = %478, %473
  %494 = phi i32 [ %474, %473 ], [ %489, %478 ]
  %495 = getelementptr %"class.views::Column"*, %"class.views::Column"** %419, i64 -1
  %496 = ptrtoint %"class.views::Column"** %495 to i64
  %497 = sub i64 %496, %417
  %498 = lshr i64 %497, 3
  %499 = add nuw nsw i64 %498, 1
  %500 = and i64 %499, 3
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %514, label %502

502:                                              ; preds = %493, %502
  %503 = phi %"class.views::Column"** [ %511, %502 ], [ %416, %493 ]
  %504 = phi i64 [ %512, %502 ], [ %500, %493 ]
  %505 = bitcast %"class.views::Column"** %503 to %"class.views::LayoutElement"**
  %506 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %505, align 8
  %507 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %506, i64 0, i32 3
  %508 = load i32, i32* %507, align 8
  %509 = icmp slt i32 %494, %508
  %510 = select i1 %509, i32 %508, i32 %494
  store i32 %510, i32* %507, align 8
  %511 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %503, i64 1
  %512 = add i64 %504, -1
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %514, label %502, !llvm.loop !69

514:                                              ; preds = %502, %493
  %515 = phi %"class.views::Column"** [ %416, %493 ], [ %511, %502 ]
  %516 = icmp ult i64 %497, 24
  br i1 %516, label %548, label %517

517:                                              ; preds = %514, %517
  %518 = phi %"class.views::Column"** [ %546, %517 ], [ %515, %514 ]
  %519 = bitcast %"class.views::Column"** %518 to %"class.views::LayoutElement"**
  %520 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %519, align 8
  %521 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %520, i64 0, i32 3
  %522 = load i32, i32* %521, align 8
  %523 = icmp slt i32 %494, %522
  %524 = select i1 %523, i32 %522, i32 %494
  store i32 %524, i32* %521, align 8
  %525 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %518, i64 1
  %526 = bitcast %"class.views::Column"** %525 to %"class.views::LayoutElement"**
  %527 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %526, align 8
  %528 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %527, i64 0, i32 3
  %529 = load i32, i32* %528, align 8
  %530 = icmp slt i32 %494, %529
  %531 = select i1 %530, i32 %529, i32 %494
  store i32 %531, i32* %528, align 8
  %532 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %518, i64 2
  %533 = bitcast %"class.views::Column"** %532 to %"class.views::LayoutElement"**
  %534 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %533, align 8
  %535 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %534, i64 0, i32 3
  %536 = load i32, i32* %535, align 8
  %537 = icmp slt i32 %494, %536
  %538 = select i1 %537, i32 %536, i32 %494
  store i32 %538, i32* %535, align 8
  %539 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %518, i64 3
  %540 = bitcast %"class.views::Column"** %539 to %"class.views::LayoutElement"**
  %541 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %540, align 8
  %542 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %541, i64 0, i32 3
  %543 = load i32, i32* %542, align 8
  %544 = icmp slt i32 %494, %543
  %545 = select i1 %544, i32 %543, i32 %494
  store i32 %545, i32* %542, align 8
  %546 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %518, i64 4
  %547 = icmp eq %"class.views::Column"** %546, %419
  br i1 %547, label %548, label %517

548:                                              ; preds = %514, %517, %411
  %549 = getelementptr inbounds %"class.views::Column"*, %"class.views::Column"** %412, i64 1
  %550 = icmp eq %"class.views::Column"** %549, %409
  br i1 %550, label %551, label %411

551:                                              ; preds = %548, %403
  %552 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %312, i64 1
  %553 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %5, align 8
  %554 = icmp eq %"struct.views::ViewState"** %552, %553
  br i1 %554, label %555, label %311

555:                                              ; preds = %551, %306
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views9ColumnSet13CanUseMinimumERKNS_9ViewStateE(%"class.views::ColumnSet"* nocapture readonly, %"struct.views::ViewState"* nocapture readonly dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %7
  %9 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %28, label %16

14:                                               ; preds = %23
  %15 = icmp eq %"class.std::__1::unique_ptr"* %27, %12
  br i1 %15, label %28, label %16

16:                                               ; preds = %2, %14
  %17 = phi %"class.std::__1::unique_ptr"* [ %27, %14 ], [ %8, %2 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.views::Column"*, %"class.views::Column"** %18, align 8
  %20 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %19, i64 0, i32 0, i32 1
  %21 = load float, float* %20, align 8
  %22 = fcmp ogt float %21, 0.000000e+00
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %19, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 1
  br i1 %26, label %28, label %14

28:                                               ; preds = %14, %16, %23, %2
  %29 = phi i1 [ true, %2 ], [ false, %16 ], [ true, %14 ], [ false, %23 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet6ResizeEib(%"class.views::ColumnSet"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = icmp sgt i32 %1, -1
  %5 = xor i1 %2, true
  %6 = or i1 %4, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN5views9ColumnSet14ResizeUsingMinEi(%"class.views::ColumnSet"* %0, i32 %1)
  br label %127

8:                                                ; preds = %3
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %127, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %12, %14
  br i1 %15, label %127, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"class.std::__1::unique_ptr"* %12 to i64
  %18 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1, i32 0, i32 0, i32 0
  %19 = ptrtoint %"class.views::Column"** %18 to i64
  %20 = sub i64 %19, %17
  %21 = lshr i64 %20, 3
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp ult i64 %20, 24
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = sub nsw i64 %22, %23
  br label %56

27:                                               ; preds = %56, %16
  %28 = phi float [ undef, %16 ], [ %92, %56 ]
  %29 = phi i32 [ undef, %16 ], [ %95, %56 ]
  %30 = phi float [ 0.000000e+00, %16 ], [ %92, %56 ]
  %31 = phi i32 [ 0, %16 ], [ %95, %56 ]
  %32 = phi %"class.std::__1::unique_ptr"* [ %12, %16 ], [ %96, %56 ]
  %33 = icmp eq i64 %23, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %27, %34
  %35 = phi float [ %43, %34 ], [ %30, %27 ]
  %36 = phi i32 [ %46, %34 ], [ %31, %27 ]
  %37 = phi %"class.std::__1::unique_ptr"* [ %47, %34 ], [ %32, %27 ]
  %38 = phi i64 [ %48, %34 ], [ %23, %27 ]
  %39 = bitcast %"class.std::__1::unique_ptr"* %37 to %"class.views::LayoutElement"**
  %40 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %39, align 8
  %41 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %40, i64 0, i32 1
  %42 = load float, float* %41, align 8
  %43 = fadd float %35, %42
  %44 = fcmp ogt float %42, 0.000000e+00
  %45 = zext i1 %44 to i32
  %46 = add nuw nsw i32 %36, %45
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %48 = add i64 %38, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %34, !llvm.loop !70

50:                                               ; preds = %34, %27
  %51 = phi float [ %28, %27 ], [ %43, %34 ]
  %52 = phi i32 [ %29, %27 ], [ %46, %34 ]
  %53 = fcmp oeq float %51, 0.000000e+00
  br i1 %53, label %127, label %54

54:                                               ; preds = %50
  %55 = sitofp i32 %1 to float
  br label %99

56:                                               ; preds = %56, %25
  %57 = phi float [ 0.000000e+00, %25 ], [ %92, %56 ]
  %58 = phi i32 [ 0, %25 ], [ %95, %56 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ %12, %25 ], [ %96, %56 ]
  %60 = phi i64 [ %26, %25 ], [ %97, %56 ]
  %61 = bitcast %"class.std::__1::unique_ptr"* %59 to %"class.views::LayoutElement"**
  %62 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %61, align 8
  %63 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %62, i64 0, i32 1
  %64 = load float, float* %63, align 8
  %65 = fadd float %57, %64
  %66 = fcmp ogt float %64, 0.000000e+00
  %67 = zext i1 %66 to i32
  %68 = add nuw nsw i32 %58, %67
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %70 = bitcast %"class.std::__1::unique_ptr"* %69 to %"class.views::LayoutElement"**
  %71 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %70, align 8
  %72 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %71, i64 0, i32 1
  %73 = load float, float* %72, align 8
  %74 = fadd float %65, %73
  %75 = fcmp ogt float %73, 0.000000e+00
  %76 = zext i1 %75 to i32
  %77 = add nuw nsw i32 %68, %76
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 2
  %79 = bitcast %"class.std::__1::unique_ptr"* %78 to %"class.views::LayoutElement"**
  %80 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %79, align 8
  %81 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %80, i64 0, i32 1
  %82 = load float, float* %81, align 8
  %83 = fadd float %74, %82
  %84 = fcmp ogt float %82, 0.000000e+00
  %85 = zext i1 %84 to i32
  %86 = add nuw nsw i32 %77, %85
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 3
  %88 = bitcast %"class.std::__1::unique_ptr"* %87 to %"class.views::LayoutElement"**
  %89 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %88, align 8
  %90 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %89, i64 0, i32 1
  %91 = load float, float* %90, align 8
  %92 = fadd float %83, %91
  %93 = fcmp ogt float %91, 0.000000e+00
  %94 = zext i1 %93 to i32
  %95 = add nuw nsw i32 %86, %94
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 4
  %97 = add i64 %60, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %27, label %56

99:                                               ; preds = %122, %54
  %100 = phi i32 [ %52, %54 ], [ %124, %122 ]
  %101 = phi i32 [ %1, %54 ], [ %123, %122 ]
  %102 = phi %"class.std::__1::unique_ptr"* [ %12, %54 ], [ %125, %122 ]
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.views::Column"*, %"class.views::Column"** %103, align 8
  %105 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %104, i64 0, i32 0, i32 1
  %106 = load float, float* %105, align 8
  %107 = fcmp ogt float %106, 0.000000e+00
  br i1 %107, label %108, label %122

108:                                              ; preds = %99
  %109 = add nsw i32 %100, -1
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %108
  %112 = fdiv float %106, %51
  %113 = fmul float %112, %55
  %114 = fptosi float %113 to i32
  %115 = sub nsw i32 %101, %114
  br label %116

116:                                              ; preds = %111, %108
  %117 = phi i32 [ %115, %111 ], [ %101, %108 ]
  %118 = phi i32 [ %114, %111 ], [ %101, %108 ]
  %119 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %104, i64 0, i32 0, i32 3
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, %118
  store i32 %121, i32* %119, align 8
  br label %122

122:                                              ; preds = %116, %99
  %123 = phi i32 [ %117, %116 ], [ %101, %99 ]
  %124 = phi i32 [ %109, %116 ], [ %100, %99 ]
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 1
  %126 = icmp eq %"class.std::__1::unique_ptr"* %125, %14
  br i1 %126, label %127, label %99

127:                                              ; preds = %122, %50, %10, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9ColumnSet14ResizeUsingMinEi(%"class.views::ColumnSet"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::vector.310", align 8
  %4 = alloca %"class.std::__1::vector.321", align 8
  %5 = icmp slt i32 %1, 0
  %6 = sub nsw i32 0, %1
  %7 = select i1 %5, i32 %6, i32 %1
  %8 = bitcast %"class.std::__1::vector.310"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #15
  %9 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.310", %"class.std::__1::vector.310"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %0, i64 0, i32 2, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.1"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = ashr exact i64 %18, 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #15
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %40, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 4611686018427387903
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector.310"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %24) #16
  unreachable

25:                                               ; preds = %21
  %26 = ashr exact i64 %18, 1
  %27 = tail call i8* @_Znwm(i64 %26) #14
  %28 = bitcast i8* %27 to i32*
  %29 = bitcast %"class.std::__1::vector.310"* %3 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i32, i32* %28, i64 %19
  store i32* %30, i32** %11, align 8
  %31 = bitcast i32** %10 to i64*
  %32 = ptrtoint i8* %27 to i64
  %33 = add nsw i64 %19, -1
  %34 = getelementptr i32, i32* %28, i64 %33
  %35 = ptrtoint i32* %34 to i64
  %36 = sub i64 4, %32
  %37 = add i64 %36, %35
  %38 = and i64 %37, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 0, i64 %38, i1 false) #15
  %39 = ptrtoint i32* %30 to i64
  store i64 %39, i64* %31, align 8
  br label %40

40:                                               ; preds = %2, %25
  %41 = phi i32* [ null, %2 ], [ %28, %25 ]
  %42 = icmp eq i64 %15, %17
  br i1 %42, label %53, label %43

43:                                               ; preds = %40
  %44 = inttoptr i64 %17 to %"class.views::LayoutElement"**
  %45 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %44, align 8
  %46 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %45, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %41, align 4
  %48 = load i64, i64* %14, align 8
  %49 = load i64, i64* %16, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ugt i64 %51, 1
  br i1 %52, label %65, label %53

53:                                               ; preds = %65, %43, %40
  tail call void @_ZN5views9ColumnSet13CalculateSizeENS0_19SizeCalculationTypeE(%"class.views::ColumnSet"* %0, i32 1)
  %54 = bitcast %"class.std::__1::vector.321"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #15
  %55 = getelementptr inbounds %"class.std::__1::vector.321", %"class.std::__1::vector.321"* %4, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::vector.321", %"class.std::__1::vector.321"* %4, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::vector.321", %"class.std::__1::vector.321"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #15
  %58 = load i64, i64* %14, align 8
  %59 = load i64, i64* %16, align 8
  %60 = icmp eq i64 %58, %59
  br i1 %60, label %369, label %61

61:                                               ; preds = %53
  %62 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %56 to i64*
  %63 = bitcast %"class.std::__1::vector.321"* %4 to i64*
  %64 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %57 to i64*
  br label %90

65:                                               ; preds = %43, %65
  %66 = phi i64 [ %78, %65 ], [ %49, %43 ]
  %67 = phi i64 [ %76, %65 ], [ 1, %43 ]
  %68 = load i32*, i32** %9, align 8
  %69 = inttoptr i64 %66 to %"class.std::__1::unique_ptr"*
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 %67, i32 0, i32 0, i32 0
  %71 = bitcast %"class.views::Column"** %70 to %"class.views::LayoutElement"**
  %72 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %71, align 8
  %73 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %72, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds i32, i32* %68, i64 %67
  store i32 %74, i32* %75, align 4
  %76 = add nuw i64 %67, 1
  %77 = load i64, i64* %14, align 8
  %78 = load i64, i64* %16, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %76, %80
  br i1 %81, label %65, label %53

82:                                               ; preds = %196
  %83 = icmp eq %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %205, %204
  br i1 %83, label %362, label %84

84:                                               ; preds = %82
  %85 = icmp ne %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %203, %202
  %86 = icmp sgt i32 %7, 0
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %228

88:                                               ; preds = %84
  %89 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %56 to i64*
  br label %258

90:                                               ; preds = %61, %196
  %91 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %197, %196 ]
  %92 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %198, %196 ]
  %93 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %199, %196 ]
  %94 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %200, %196 ]
  %95 = phi i64 [ 0, %61 ], [ %201, %196 ]
  %96 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %202, %196 ]
  %97 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %203, %196 ]
  %98 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %204, %196 ]
  %99 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %205, %196 ]
  %100 = phi i64 [ 0, %61 ], [ %206, %196 ]
  %101 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ null, %61 ], [ %207, %196 ]
  %102 = phi i64 [ %59, %61 ], [ %211, %196 ]
  %103 = phi float [ 0.000000e+00, %61 ], [ %208, %196 ]
  %104 = phi i64 [ 0, %61 ], [ %209, %196 ]
  %105 = inttoptr i64 %102 to %"class.std::__1::unique_ptr"*
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 %104, i32 0, i32 0, i32 0
  %107 = load %"class.views::Column"*, %"class.views::Column"** %106, align 8
  %108 = load i32*, i32** %9, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 %104
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %107, i64 0, i32 6
  %112 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %107, i64 0, i32 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = load i32, i32* %111, align 4
  %115 = icmp slt i32 %114, %113
  %116 = select i1 %115, i32 %113, i32 %114
  %117 = sub nsw i32 %110, %116
  %118 = icmp sgt i32 %117, 0
  %119 = select i1 %118, i32 %117, i32 0
  store i32 %110, i32* %112, align 8
  %120 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %107, i64 0, i32 0, i32 1
  %121 = load float, float* %120, align 8
  %122 = fcmp ole float %121, 0.000000e+00
  %123 = icmp slt i32 %117, 1
  %124 = or i1 %122, %123
  br i1 %124, label %196, label %125

125:                                              ; preds = %90
  %126 = load %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %57, align 8
  %127 = icmp ult %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101, %126
  %128 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %126 to i64
  br i1 %127, label %129, label %135

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101, i64 0, i32 0
  store %"class.views::Column"* %107, %"class.views::Column"** %130, align 8
  %131 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101, i64 0, i32 1
  store i32 %119, i32* %131, align 8
  %132 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101, i64 0, i32 2
  store i32 0, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101, i64 1
  %134 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %133 to i64
  store i64 %134, i64* %62, align 8
  br label %185

135:                                              ; preds = %125
  %136 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %101 to i64
  %137 = load i64, i64* %63, align 8
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 4
  %140 = add nsw i64 %139, 1
  %141 = icmp ugt i64 %140, 1152921504606846975
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = bitcast %"class.std::__1::vector.321"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %143) #16
  unreachable

144:                                              ; preds = %135
  %145 = sub i64 %128, %137
  %146 = ashr exact i64 %145, 4
  %147 = icmp ult i64 %146, 576460752303423487
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = ashr exact i64 %145, 3
  %150 = icmp ult i64 %149, %140
  %151 = select i1 %150, i64 %140, i64 %149
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %148
  %154 = icmp ugt i64 %151, 1152921504606846975
  br i1 %154, label %155, label %156

155:                                              ; preds = %153
  tail call void @abort() #16
  unreachable

156:                                              ; preds = %153, %144
  %157 = phi i64 [ %151, %153 ], [ 1152921504606846975, %144 ]
  %158 = shl i64 %157, 4
  %159 = tail call i8* @_Znwm(i64 %158) #14
  %160 = bitcast i8* %159 to %"struct.views::(anonymous namespace)::ColumnMinResizeData"*
  br label %161

161:                                              ; preds = %156, %148
  %162 = phi i64 [ %157, %156 ], [ 0, %148 ]
  %163 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %160, %156 ], [ null, %148 ]
  %164 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %163, i64 %139
  %165 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %163, i64 %162
  %166 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %165 to i64
  %167 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %164, i64 0, i32 0
  store %"class.views::Column"* %107, %"class.views::Column"** %167, align 8
  %168 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %163, i64 %139, i32 1
  store i32 %119, i32* %168, align 8
  %169 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %163, i64 %139, i32 2
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %164, i64 1
  %171 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %170 to i64
  %172 = sub i64 %100, %137
  %173 = ashr exact i64 %172, 4
  %174 = sub nsw i64 0, %173
  %175 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %164, i64 %174
  %176 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %175 to i64
  %177 = icmp sgt i64 %172, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %161
  %179 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %175 to i8*
  %180 = inttoptr i64 %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 %172, i1 false) #15
  br label %181

181:                                              ; preds = %178, %161
  store i64 %176, i64* %63, align 8
  store i64 %171, i64* %62, align 8
  store i64 %166, i64* %64, align 8
  %182 = icmp eq i64 %137, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = inttoptr i64 %137 to i8*
  tail call void @_ZdlPv(i8* %184) #14
  br label %185

185:                                              ; preds = %129, %181, %183
  %186 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %91, %129 ], [ %175, %181 ], [ %175, %183 ]
  %187 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %133, %129 ], [ %170, %181 ], [ %170, %183 ]
  %188 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %93, %129 ], [ %175, %181 ], [ %175, %183 ]
  %189 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %94, %129 ], [ %175, %181 ], [ %175, %183 ]
  %190 = phi i64 [ %95, %129 ], [ %176, %181 ], [ %176, %183 ]
  %191 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %97, %129 ], [ %175, %181 ], [ %175, %183 ]
  %192 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %99, %129 ], [ %175, %181 ], [ %175, %183 ]
  %193 = phi i64 [ %134, %129 ], [ %171, %181 ], [ %171, %183 ]
  %194 = load float, float* %120, align 8
  %195 = fadd float %103, %194
  br label %196

196:                                              ; preds = %90, %185
  %197 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %186, %185 ], [ %91, %90 ]
  %198 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %187, %185 ], [ %92, %90 ]
  %199 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %188, %185 ], [ %93, %90 ]
  %200 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %189, %185 ], [ %94, %90 ]
  %201 = phi i64 [ %190, %185 ], [ %95, %90 ]
  %202 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %187, %185 ], [ %96, %90 ]
  %203 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %191, %185 ], [ %97, %90 ]
  %204 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %187, %185 ], [ %98, %90 ]
  %205 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %192, %185 ], [ %99, %90 ]
  %206 = phi i64 [ %193, %185 ], [ %100, %90 ]
  %207 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %187, %185 ], [ %101, %90 ]
  %208 = phi float [ %195, %185 ], [ %103, %90 ]
  %209 = add nuw i64 %104, 1
  %210 = load i64, i64* %14, align 8
  %211 = load i64, i64* %16, align 8
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 3
  %214 = icmp ult i64 %209, %213
  br i1 %214, label %90, label %82

215:                                              ; preds = %323
  %216 = load %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %56, align 8
  br label %217

217:                                              ; preds = %215, %258
  %218 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %259, %258 ], [ %326, %215 ]
  %219 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %260, %258 ], [ %216, %215 ]
  %220 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %261, %258 ], [ %326, %215 ]
  %221 = phi float [ %266, %258 ], [ %324, %215 ]
  %222 = phi i32 [ %265, %258 ], [ %296, %215 ]
  %223 = icmp ne %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %220, %219
  %224 = icmp sgt i32 %222, 0
  %225 = and i1 %224, %223
  %226 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %219 to i64
  %227 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %220 to i64
  br i1 %225, label %258, label %228

228:                                              ; preds = %217, %84
  %229 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %197, %84 ], [ %218, %217 ]
  %230 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %203, %84 ], [ %220, %217 ]
  %231 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %202, %84 ], [ %219, %217 ]
  %232 = icmp eq %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %230, %231
  br i1 %232, label %362, label %233

233:                                              ; preds = %228
  %234 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %230 to i64
  %235 = getelementptr %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %231, i64 -1, i32 0
  %236 = ptrtoint %"class.views::Column"** %235 to i64
  %237 = sub i64 %236, %234
  %238 = lshr i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %255, label %242

242:                                              ; preds = %233, %242
  %243 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %252, %242 ], [ %230, %233 ]
  %244 = phi i64 [ %253, %242 ], [ %240, %233 ]
  %245 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %243 to %"class.views::LayoutElement"**
  %246 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %245, align 8
  %247 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %246, i64 0, i32 3
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %243, i64 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = sub nsw i32 %248, %250
  store i32 %251, i32* %247, align 8
  %252 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %243, i64 1
  %253 = add i64 %244, -1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %242, !llvm.loop !71

255:                                              ; preds = %242, %233
  %256 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %230, %233 ], [ %252, %242 ]
  %257 = icmp ult i64 %237, 48
  br i1 %257, label %362, label %327

258:                                              ; preds = %88, %217
  %259 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %197, %88 ], [ %218, %217 ]
  %260 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %198, %88 ], [ %219, %217 ]
  %261 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %199, %88 ], [ %220, %217 ]
  %262 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %200, %88 ], [ %220, %217 ]
  %263 = phi i64 [ %201, %88 ], [ %227, %217 ]
  %264 = phi i64 [ %206, %88 ], [ %226, %217 ]
  %265 = phi i32 [ %7, %88 ], [ %222, %217 ]
  %266 = phi float [ %208, %88 ], [ %221, %217 ]
  %267 = sub i64 %264, %263
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %217, label %269

269:                                              ; preds = %258
  %270 = ashr exact i64 %267, 4
  %271 = sitofp i32 %265 to float
  br label %272

272:                                              ; preds = %323, %269
  %273 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %262, %269 ], [ %326, %323 ]
  %274 = phi i64 [ %270, %269 ], [ %277, %323 ]
  %275 = phi i32 [ %265, %269 ], [ %296, %323 ]
  %276 = phi float [ %266, %269 ], [ %324, %323 ]
  %277 = add i64 %274, -1
  %278 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %273, i64 %277
  %279 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %273, i64 %277, i32 1
  %280 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %278 to %"class.views::LayoutElement"**
  %281 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %280, align 8
  %282 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %281, i64 0, i32 1
  %283 = load float, float* %282, align 8
  %284 = fmul float %283, %271
  %285 = fdiv float %284, %266
  %286 = fptosi float %285 to i32
  %287 = load i32, i32* %279, align 4
  %288 = icmp sgt i32 %287, %286
  %289 = select i1 %288, i32 %286, i32 %287
  %290 = icmp eq i64 %274, 1
  %291 = icmp eq i32 %289, 0
  %292 = and i1 %290, %291
  %293 = icmp eq i32 %275, %265
  %294 = zext i1 %293 to i32
  %295 = select i1 %292, i32 %294, i32 %289
  %296 = sub nsw i32 %275, %295
  %297 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %273, i64 %277, i32 2
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %295, %298
  store i32 %299, i32* %297, align 4
  %300 = sub nsw i32 %287, %295
  store i32 %300, i32* %279, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %323

302:                                              ; preds = %272
  %303 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %281, i64 0, i32 3
  %304 = load i32, i32* %303, align 8
  %305 = sub nsw i32 %304, %299
  store i32 %305, i32* %303, align 8
  %306 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %280, align 8
  %307 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %306, i64 0, i32 1
  %308 = load float, float* %307, align 8
  %309 = fsub float %276, %308
  %310 = load %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %55, align 8
  %311 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %310, i64 %277
  %312 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %310, i64 %274
  %313 = load i64, i64* %89, align 8
  %314 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %312 to i64
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 4
  %317 = icmp eq i64 %315, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %302
  %319 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %311 to i8*
  %320 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %312 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %319, i8* align 8 %320, i64 %315, i1 false) #15
  br label %321

321:                                              ; preds = %302, %318
  %322 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %311, i64 %316
  store %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %322, %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %56, align 8
  br label %323

323:                                              ; preds = %321, %272
  %324 = phi float [ %309, %321 ], [ %276, %272 ]
  %325 = icmp eq i64 %277, 0
  %326 = load %"struct.views::(anonymous namespace)::ColumnMinResizeData"*, %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %55, align 8
  br i1 %325, label %215, label %272

327:                                              ; preds = %255, %327
  %328 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %360, %327 ], [ %256, %255 ]
  %329 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328 to %"class.views::LayoutElement"**
  %330 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %329, align 8
  %331 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %330, i64 0, i32 3
  %332 = load i32, i32* %331, align 8
  %333 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 0, i32 2
  %334 = load i32, i32* %333, align 4
  %335 = sub nsw i32 %332, %334
  store i32 %335, i32* %331, align 8
  %336 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 1
  %337 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %336 to %"class.views::LayoutElement"**
  %338 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %337, align 8
  %339 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %338, i64 0, i32 3
  %340 = load i32, i32* %339, align 8
  %341 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 1, i32 2
  %342 = load i32, i32* %341, align 4
  %343 = sub nsw i32 %340, %342
  store i32 %343, i32* %339, align 8
  %344 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 2
  %345 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %344 to %"class.views::LayoutElement"**
  %346 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %345, align 8
  %347 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %346, i64 0, i32 3
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 2, i32 2
  %350 = load i32, i32* %349, align 4
  %351 = sub nsw i32 %348, %350
  store i32 %351, i32* %347, align 8
  %352 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 3
  %353 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %352 to %"class.views::LayoutElement"**
  %354 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %353, align 8
  %355 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %354, i64 0, i32 3
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 3, i32 2
  %358 = load i32, i32* %357, align 4
  %359 = sub nsw i32 %356, %358
  store i32 %359, i32* %355, align 8
  %360 = getelementptr inbounds %"struct.views::(anonymous namespace)::ColumnMinResizeData", %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %328, i64 4
  %361 = icmp eq %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %360, %231
  br i1 %361, label %362, label %327

362:                                              ; preds = %255, %327, %228, %82
  %363 = phi %"struct.views::(anonymous namespace)::ColumnMinResizeData"* [ %204, %82 ], [ %229, %228 ], [ %229, %327 ], [ %229, %255 ]
  %364 = icmp eq %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %363, null
  br i1 %364, label %369, label %365

365:                                              ; preds = %362
  %366 = ptrtoint %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %363 to i64
  %367 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"** %56 to i64*
  store i64 %366, i64* %367, align 8
  %368 = bitcast %"struct.views::(anonymous namespace)::ColumnMinResizeData"* %363 to i8*
  tail call void @_ZdlPv(i8* %368) #14
  br label %369

369:                                              ; preds = %53, %362, %365
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #15
  %370 = load i32*, i32** %9, align 8
  %371 = icmp eq i32* %370, null
  br i1 %371, label %376, label %372

372:                                              ; preds = %369
  %373 = ptrtoint i32* %370 to i64
  %374 = bitcast i32** %10 to i64*
  store i64 %373, i64* %374, align 8
  %375 = bitcast i32* %370 to i8*
  tail call void @_ZdlPv(i8* %375) #14
  br label %376

376:                                              ; preds = %369, %372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayoutC2Ev(%"class.views::GridLayout"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5views10GridLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %4 = bitcast %"class.views::View"** %3 to <2 x %"class.views::View"*>*
  store <2 x %"class.views::View"*> zeroinitializer, <2 x %"class.views::View"*>* %4, align 8
  %5 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %9, align 8
  %10 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 8
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10
  %12 = bitcast %"class.std::__1::vector.331"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 81, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayoutD2Ev(%"class.views::GridLayout"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5views10GridLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.359"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.359"* %5 to i8*
  %9 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.359"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.359"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.views::Row"*, %"class.views::Row"** %15, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %15, align 8
  %17 = icmp eq %"class.views::Row"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.views::Row"* %16 to void (%"class.views::Row"*)***
  %20 = load void (%"class.views::Row"*)**, void (%"class.views::Row"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %20, i64 1
  %22 = load void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %21, align 8
  tail call void %22(%"class.views::Row"* nonnull %16) #15
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.359"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.357"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.359"* %5, %"class.std::__1::unique_ptr.359"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #14
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11
  %32 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.346"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::unique_ptr.346"* %33 to i8*
  %37 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %38 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %37, align 8
  %39 = icmp eq %"class.std::__1::unique_ptr.346"* %38, %33
  br i1 %39, label %53, label %40

40:                                               ; preds = %35, %48
  %41 = phi %"class.std::__1::unique_ptr.346"* [ %42, %48 ], [ %38, %35 ]
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %41, i64 -1
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %43, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %43, align 8
  %45 = icmp eq %"class.views::ColumnSet"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.std::__1::unique_ptr.346"* %42 to %"struct.std::__1::default_delete.350"*
  tail call void @_ZNKSt3__114default_deleteIN5views9ColumnSetEEclEPS2_(%"struct.std::__1::default_delete.350"* %47, %"class.views::ColumnSet"* nonnull %44) #15
  br label %48

48:                                               ; preds = %46, %40
  %49 = icmp eq %"class.std::__1::unique_ptr.346"* %42, %33
  br i1 %49, label %50, label %40

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.344"* %31 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %35
  %54 = phi i8* [ %52, %50 ], [ %36, %35 ]
  store %"class.std::__1::unique_ptr.346"* %33, %"class.std::__1::unique_ptr.346"** %37, align 8
  tail call void @_ZdlPv(i8* %54) #14
  br label %55

55:                                               ; preds = %30, %53
  %56 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10
  %57 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.333"* %58, null
  br i1 %59, label %80, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::unique_ptr.333"* %58 to i8*
  %62 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 1
  %63 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %62, align 8
  %64 = icmp eq %"class.std::__1::unique_ptr.333"* %63, %58
  br i1 %64, label %78, label %65

65:                                               ; preds = %60, %73
  %66 = phi %"class.std::__1::unique_ptr.333"* [ %67, %73 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %66, i64 -1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %68, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %68, align 8
  %70 = icmp eq %"struct.views::ViewState"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.views::ViewState"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %65
  %74 = icmp eq %"class.std::__1::unique_ptr.333"* %67, %58
  br i1 %74, label %75, label %65

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::vector.331"* %56 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %60
  %79 = phi i8* [ %77, %75 ], [ %61, %60 ]
  store %"class.std::__1::unique_ptr.333"* %58, %"class.std::__1::unique_ptr.333"** %62, align 8
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %55, %78
  %81 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views13LayoutManagerD2Ev(%"class.views::LayoutManager"* %81) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5views13LayoutManagerD2Ev(%"class.views::LayoutManager"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayoutD0Ev(%"class.views::GridLayout"*) unnamed_addr #2 align 2 {
  tail call void @_ZN5views10GridLayoutD2Ev(%"class.views::GridLayout"* %0) #15
  %2 = bitcast %"class.views::GridLayout"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::ColumnSet"* @_ZN5views10GridLayout12AddColumnSetEi(%"class.views::GridLayout"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.346", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.346"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = tail call i8* @_Znwm(i64 80) #14
  %6 = bitcast i8* %5 to i32*
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  %8 = bitcast i8* %7 to i32*
  store i32 2147483647, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 72, i1 false) #15
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::unique_ptr.346"* %3 to i8**
  store i8* %5, i8** %11, align 8
  %12 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %12, align 8
  %14 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %14, align 8
  %16 = icmp ult %"class.std::__1::unique_ptr.346"* %13, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = ptrtoint i8* %5 to i64
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %10, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.346"* %13 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %13, i64 1
  %21 = ptrtoint %"class.std::__1::unique_ptr.346"* %20 to i64
  %22 = bitcast %"class.std::__1::unique_ptr.346"** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %25

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5views9ColumnSetENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.344"* %24, %"class.std::__1::unique_ptr.346"* nonnull dereferenceable(8) %3) #15
  br label %25

25:                                               ; preds = %17, %23
  %26 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %10, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %10, align 8
  %27 = icmp eq %"class.views::ColumnSet"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::unique_ptr.346"* %3 to %"struct.std::__1::default_delete.350"*
  call void @_ZNKSt3__114default_deleteIN5views9ColumnSetEEclEPS2_(%"struct.std::__1::default_delete.350"* nonnull %29, %"class.views::ColumnSet"* nonnull %26) #15
  br label %30

30:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  %31 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %12, align 8
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %31, i64 -1, i32 0, i32 0, i32 0
  %33 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %32, align 8
  ret %"class.views::ColumnSet"* %33
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.views::ColumnSet"* @_ZN5views10GridLayout12GetColumnSetEi(%"class.views::GridLayout"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %3, align 8
  %5 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.346"* %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2, %15
  %9 = phi %"class.std::__1::unique_ptr.346"* [ %16, %15 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %10, align 8
  %12 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %9, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr.346"* %16, %6
  br i1 %17, label %24, label %8

18:                                               ; preds = %8, %2
  %19 = phi %"class.std::__1::unique_ptr.346"* [ %4, %2 ], [ %9, %8 ]
  %20 = icmp eq %"class.std::__1::unique_ptr.346"* %19, %6
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %22, align 8
  br label %24

24:                                               ; preds = %15, %18, %21
  %25 = phi %"class.views::ColumnSet"* [ %23, %21 ], [ null, %18 ], [ null, %15 ]
  ret %"class.views::ColumnSet"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout19StartRowWithPaddingEfifi(%"class.views::GridLayout"*, float, i32, float, i32) local_unnamed_addr #2 align 2 {
  %6 = tail call i8* @_Znwm(i64 40) #14
  %7 = bitcast i8* %6 to %"class.views::Row"*
  %8 = bitcast i8* %6 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to float*
  store float %3, float* %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views3RowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 20
  %12 = bitcast i8* %11 to i32*
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #15
  tail call void @_ZN5views10GridLayout6AddRowENSt3__110unique_ptrINS_3RowENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"class.views::Row"* nonnull %7) #15
  %14 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %14, align 8
  %16 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.346"* %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %5, %26
  %20 = phi %"class.std::__1::unique_ptr.346"* [ %27, %26 ], [ %15, %5 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %21, align 8
  %23 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %2
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %20, i64 1
  %28 = icmp eq %"class.std::__1::unique_ptr.346"* %27, %17
  br i1 %28, label %35, label %19

29:                                               ; preds = %19, %5
  %30 = phi %"class.std::__1::unique_ptr.346"* [ %15, %5 ], [ %20, %19 ]
  %31 = icmp eq %"class.std::__1::unique_ptr.346"* %30, %17
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::unique_ptr.346"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  br label %35

35:                                               ; preds = %26, %29, %32
  %36 = phi i64 [ %34, %32 ], [ 0, %29 ], [ 0, %26 ]
  %37 = tail call i8* @_Znwm(i64 40) #14
  %38 = bitcast i8* %37 to %"class.views::Row"*
  %39 = bitcast i8* %37 to i32 (...)***
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  %41 = bitcast i8* %40 to float*
  store float %1, float* %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views3RowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %42 = getelementptr inbounds i8, i8* %37, i64 20
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %37, i64 24
  %45 = bitcast i8* %44 to i64*
  store i64 %36, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %37, i64 32
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 36
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 4
  tail call void @_ZN5views10GridLayout6AddRowENSt3__110unique_ptrINS_3RowENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"class.views::Row"* nonnull %38) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout13AddPaddingRowEfi(%"class.views::GridLayout"*, float, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_Znwm(i64 40) #14
  %5 = bitcast i8* %4 to %"class.views::Row"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to float*
  store float %1, float* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views3RowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 20
  %10 = bitcast i8* %9 to i32*
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %4, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #15
  tail call void @_ZN5views10GridLayout6AddRowENSt3__110unique_ptrINS_3RowENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"class.views::Row"* nonnull %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout8StartRowEfii(%"class.views::GridLayout"*, float, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %5, align 8
  %7 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.346"* %6, %8
  br i1 %9, label %20, label %10

10:                                               ; preds = %4, %17
  %11 = phi %"class.std::__1::unique_ptr.346"* [ %18, %17 ], [ %6, %4 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %12, align 8
  %14 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %2
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %11, i64 1
  %19 = icmp eq %"class.std::__1::unique_ptr.346"* %18, %8
  br i1 %19, label %26, label %10

20:                                               ; preds = %10, %4
  %21 = phi %"class.std::__1::unique_ptr.346"* [ %6, %4 ], [ %11, %10 ]
  %22 = icmp eq %"class.std::__1::unique_ptr.346"* %21, %8
  br i1 %22, label %26, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::unique_ptr.346"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  br label %26

26:                                               ; preds = %17, %20, %23
  %27 = phi i64 [ %25, %23 ], [ 0, %20 ], [ 0, %17 ]
  %28 = tail call i8* @_Znwm(i64 40) #14
  %29 = bitcast i8* %28 to %"class.views::Row"*
  %30 = bitcast i8* %28 to i32 (...)***
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to float*
  store float %1, float* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views3RowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 20
  %34 = bitcast i8* %33 to i32*
  store i32 %3, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %28, i64 24
  %36 = bitcast i8* %35 to i64*
  store i64 %27, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %28, i64 32
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %28, i64 36
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4
  tail call void @_ZN5views10GridLayout6AddRowENSt3__110unique_ptrINS_3RowENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"class.views::Row"* nonnull %29)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout6AddRowENSt3__110unique_ptrINS_3RowENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"*, %"class.views::Row"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.359", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.views::Row"* %1, %"class.views::Row"** %4, align 8
  %5 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %8, align 4
  %11 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %1, i64 0, i32 2
  %13 = bitcast %"class.views::ColumnSet"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %16 = bitcast %"class.views::ColumnSet"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %17, align 8
  %19 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %19, align 8
  %21 = icmp ult %"class.std::__1::unique_ptr.359"* %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %2
  %23 = ptrtoint %"class.views::Row"* %1 to i64
  store %"class.views::Row"* null, %"class.views::Row"** %4, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.359"* %18 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %18, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.359"* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.359"** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %30

28:                                               ; preds = %2
  %29 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5views3RowENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.357"* %29, %"class.std::__1::unique_ptr.359"* nonnull dereferenceable(8) %3) #15
  br label %30

30:                                               ; preds = %22, %28
  %31 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %15, align 8
  %32 = icmp eq %"class.views::ColumnSet"* %31, null
  br i1 %32, label %65, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %11, align 4
  %35 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %31, i64 0, i32 2
  %36 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %31, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.1"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = lshr exact i64 %41, 3
  %43 = trunc i64 %42 to i32
  %44 = icmp slt i32 %34, %43
  br i1 %44, label %45, label %65

45:                                               ; preds = %33
  %46 = sext i32 %34 to i64
  br label %47

47:                                               ; preds = %56, %45
  %48 = phi i64 [ %40, %45 ], [ %60, %56 ]
  %49 = phi i64 [ %46, %45 ], [ %57, %56 ]
  %50 = inttoptr i64 %48 to %"class.std::__1::unique_ptr"*
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %50, i64 %49, i32 0, i32 0, i32 0
  %52 = load %"class.views::Column"*, %"class.views::Column"** %51, align 8
  %53 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %52, i64 0, i32 7
  %54 = load i8, i8* %53, align 4, !range !64
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %47
  %57 = add nsw i64 %49, 1
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %11, align 4
  %59 = load i64, i64* %37, align 8
  %60 = load i64, i64* %39, align 8
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 29
  %63 = ashr i64 %62, 32
  %64 = icmp slt i64 %57, %63
  br i1 %64, label %47, label %65

65:                                               ; preds = %47, %56, %30, %33
  %66 = load %"class.views::Row"*, %"class.views::Row"** %4, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %4, align 8
  %67 = icmp eq %"class.views::Row"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %65
  %69 = bitcast %"class.views::Row"* %66 to void (%"class.views::Row"*)***
  %70 = load void (%"class.views::Row"*)**, void (%"class.views::Row"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %70, i64 1
  %72 = load void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %71, align 8
  call void %72(%"class.views::Row"* nonnull %66) #15
  br label %73

73:                                               ; preds = %65, %68
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout11SkipColumnsEi(%"class.views::GridLayout"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, %1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %7 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %6, align 8
  %8 = icmp eq %"class.views::ColumnSet"* %7, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %7, i64 0, i32 2
  %11 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %7, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = lshr exact i64 %16, 3
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %5, %18
  br i1 %19, label %20, label %40

20:                                               ; preds = %9
  %21 = sext i32 %5 to i64
  br label %22

22:                                               ; preds = %31, %20
  %23 = phi i64 [ %15, %20 ], [ %35, %31 ]
  %24 = phi i64 [ %21, %20 ], [ %32, %31 ]
  %25 = inttoptr i64 %23 to %"class.std::__1::unique_ptr"*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 %24, i32 0, i32 0, i32 0
  %27 = load %"class.views::Column"*, %"class.views::Column"** %26, align 8
  %28 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %27, i64 0, i32 7
  %29 = load i8, i8* %28, align 4, !range !64
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %22
  %32 = add nsw i64 %24, 1
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %3, align 4
  %34 = load i64, i64* %12, align 8
  %35 = load i64, i64* %14, align 8
  %36 = sub i64 %34, %35
  %37 = shl i64 %36, 29
  %38 = ashr i64 %37, 32
  %39 = icmp slt i64 %32, %38
  br i1 %39, label %22, label %40

40:                                               ; preds = %22, %31, %2, %9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout18SkipPaddingColumnsEv(%"class.views::GridLayout"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %3 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %2, align 8
  %4 = icmp eq %"class.views::ColumnSet"* %3, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %3, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.1"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %7, %16
  br i1 %17, label %18, label %38

18:                                               ; preds = %5
  %19 = sext i32 %7 to i64
  br label %20

20:                                               ; preds = %18, %29
  %21 = phi i64 [ %13, %18 ], [ %33, %29 ]
  %22 = phi i64 [ %19, %18 ], [ %30, %29 ]
  %23 = inttoptr i64 %21 to %"class.std::__1::unique_ptr"*
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 %22, i32 0, i32 0, i32 0
  %25 = load %"class.views::Column"*, %"class.views::Column"** %24, align 8
  %26 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %25, i64 0, i32 7
  %27 = load i8, i8* %26, align 4, !range !64
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %20
  %30 = add nsw i64 %22, 1
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %6, align 4
  %32 = load i64, i64* %10, align 8
  %33 = load i64, i64* %12, align 8
  %34 = sub i64 %32, %33
  %35 = shl i64 %34, 29
  %36 = ashr i64 %35, 32
  %37 = icmp slt i64 %30, %36
  br i1 %37, label %20, label %38

38:                                               ; preds = %29, %20, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout15AddExistingViewEPNS_4ViewEii(%"class.views::GridLayout"*, %"class.views::View"*, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %6 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %5, align 8
  %7 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %6, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %9, i32 0, i32 0, i32 0
  %13 = load %"class.views::Column"*, %"class.views::Column"** %12, align 8
  %14 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %13, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = ptrtoint %"class.views::View"* %1 to i64
  %19 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %20 = tail call i8* @_Znwm(i64 72) #14
  %21 = bitcast i8* %20 to %"struct.views::ViewState"*
  %22 = ptrtoint %"class.views::ColumnSet"* %6 to i64
  %23 = load i32, i32* %19, align 4
  %24 = bitcast i8* %20 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %18, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %20, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 %8, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %20, i64 20
  %30 = bitcast i8* %29 to i32*
  store i32 %23, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %20, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 %2, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %20, i64 28
  %34 = bitcast i8* %33 to i32*
  store i32 %3, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %20, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 %15, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %20, i64 36
  %38 = bitcast i8* %37 to i32*
  store i32 %17, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %20, i64 40
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds i8, i8* %20, i64 41
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds i8, i8* %20, i64 44
  %42 = getelementptr inbounds i8, i8* %20, i64 68
  %43 = bitcast i8* %42 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 24, i1 false)
  store i32 -1, i32* %43, align 4
  tail call void @_ZN5views10GridLayout12AddViewStateENSt3__110unique_ptrINS_9ViewStateENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"struct.views::ViewState"* nonnull %21) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout15AddExistingViewEPNS_4ViewEiiNS0_9AlignmentES3_ii(%"class.views::GridLayout"*, %"class.views::View"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %9 = ptrtoint %"class.views::View"* %1 to i64
  %10 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %13 = tail call i8* @_Znwm(i64 72) #14
  %14 = bitcast i8* %13 to %"struct.views::ViewState"*
  %15 = bitcast %"class.views::ColumnSet"** %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = load i32, i32* %11, align 4
  %18 = load i32, i32* %12, align 4
  %19 = bitcast i8* %13 to i64*
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 16
  %23 = bitcast i8* %22 to i32*
  store i32 %17, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 20
  %25 = bitcast i8* %24 to i32*
  store i32 %18, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %13, i64 24
  %27 = bitcast i8* %26 to i32*
  store i32 %2, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %13, i64 28
  %29 = bitcast i8* %28 to i32*
  store i32 %3, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %13, i64 32
  %31 = bitcast i8* %30 to i32*
  store i32 %4, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %13, i64 36
  %33 = bitcast i8* %32 to i32*
  store i32 %5, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %13, i64 40
  %35 = icmp sgt i32 %6, 0
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %34, align 8
  %37 = getelementptr inbounds i8, i8* %13, i64 41
  %38 = icmp sgt i32 %7, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds i8, i8* %13, i64 44
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %13, i64 48
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %13, i64 52
  %45 = bitcast i8* %44 to i32*
  store i32 %6, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %13, i64 56
  %47 = bitcast i8* %46 to i32*
  store i32 %7, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %13, i64 60
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %13, i64 64
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds i8, i8* %13, i64 68
  %53 = bitcast i8* %52 to i32*
  store i32 -1, i32* %53, align 4
  tail call void @_ZN5views10GridLayout12AddViewStateENSt3__110unique_ptrINS_9ViewStateENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"struct.views::ViewState"* nonnull %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout11AddViewImplENSt3__110unique_ptrINS_4ViewENS1_14default_deleteIS3_EEEEii(%"class.views::GridLayout"*, %"class.views::View"*, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = ptrtoint %"class.views::View"* %1 to i64
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %7 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %6, align 8
  %8 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %7, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 %10, i32 0, i32 0, i32 0
  %14 = load %"class.views::Column"*, %"class.views::Column"** %13, align 8
  %15 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 8
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 1
  %21 = load %"class.views::View"*, %"class.views::View"** %20, align 8
  %22 = getelementptr inbounds %"class.views::View", %"class.views::View"* %21, i64 0, i32 14
  %23 = getelementptr inbounds %"class.views::View", %"class.views::View"* %21, i64 0, i32 14, i32 0, i32 1
  %24 = bitcast %"class.views::View"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.71"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = lshr exact i64 %28, 3
  %30 = trunc i64 %29 to i32
  tail call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* %21, %"class.views::View"* %1, i32 %30) #15
  store i8 0, i8* %19, align 8
  %31 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %32 = tail call i8* @_Znwm(i64 72) #14
  %33 = bitcast i8* %32 to %"struct.views::ViewState"*
  %34 = bitcast %"class.views::ColumnSet"** %6 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load i32, i32* %8, align 4
  %37 = load i32, i32* %31, align 4
  %38 = bitcast i8* %32 to i64*
  store i64 %35, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 8
  %40 = bitcast i8* %39 to i64*
  store i64 %5, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 16
  %42 = bitcast i8* %41 to i32*
  store i32 %36, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %32, i64 20
  %44 = bitcast i8* %43 to i32*
  store i32 %37, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %32, i64 24
  %46 = bitcast i8* %45 to i32*
  store i32 %2, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %32, i64 28
  %48 = bitcast i8* %47 to i32*
  store i32 %3, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %32, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 %16, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %32, i64 36
  %52 = bitcast i8* %51 to i32*
  store i32 %18, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %32, i64 40
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds i8, i8* %32, i64 41
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds i8, i8* %32, i64 44
  %56 = getelementptr inbounds i8, i8* %32, i64 68
  %57 = bitcast i8* %56 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 4 %55, i8 0, i64 24, i1 false)
  store i32 -1, i32* %57, align 4
  tail call void @_ZN5views10GridLayout12AddViewStateENSt3__110unique_ptrINS_9ViewStateENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"struct.views::ViewState"* nonnull %33) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout11AddViewImplENSt3__110unique_ptrINS_4ViewENS1_14default_deleteIS3_EEEEiiNS0_9AlignmentES7_ii(%"class.views::GridLayout"*, %"class.views::View"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %9 = ptrtoint %"class.views::View"* %1 to i64
  %10 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 8
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 1
  %12 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %13 = getelementptr inbounds %"class.views::View", %"class.views::View"* %12, i64 0, i32 14
  %14 = getelementptr inbounds %"class.views::View", %"class.views::View"* %12, i64 0, i32 14, i32 0, i32 1
  %15 = bitcast %"class.views::View"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.71"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  tail call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* %12, %"class.views::View"* %1, i32 %21) #15
  store i8 0, i8* %10, align 8
  %22 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %25 = tail call i8* @_Znwm(i64 72) #14
  %26 = bitcast i8* %25 to %"struct.views::ViewState"*
  %27 = bitcast %"class.views::ColumnSet"** %22 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load i32, i32* %23, align 4
  %30 = load i32, i32* %24, align 4
  %31 = bitcast i8* %25 to i64*
  store i64 %28, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 8
  %33 = bitcast i8* %32 to i64*
  store i64 %9, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %25, i64 16
  %35 = bitcast i8* %34 to i32*
  store i32 %29, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %25, i64 20
  %37 = bitcast i8* %36 to i32*
  store i32 %30, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %25, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 %2, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %25, i64 28
  %41 = bitcast i8* %40 to i32*
  store i32 %3, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %25, i64 32
  %43 = bitcast i8* %42 to i32*
  store i32 %4, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %25, i64 36
  %45 = bitcast i8* %44 to i32*
  store i32 %5, i32* %45, align 4
  %46 = getelementptr inbounds i8, i8* %25, i64 40
  %47 = icmp sgt i32 %6, 0
  %48 = zext i1 %47 to i8
  store i8 %48, i8* %46, align 8
  %49 = getelementptr inbounds i8, i8* %25, i64 41
  %50 = icmp sgt i32 %7, 0
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %49, align 1
  %52 = getelementptr inbounds i8, i8* %25, i64 44
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %25, i64 48
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %25, i64 52
  %57 = bitcast i8* %56 to i32*
  store i32 %6, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %25, i64 56
  %59 = bitcast i8* %58 to i32*
  store i32 %7, i32* %59, align 8
  %60 = getelementptr inbounds i8, i8* %25, i64 60
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %25, i64 64
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds i8, i8* %25, i64 68
  %65 = bitcast i8* %64 to i32*
  store i32 -1, i32* %65, align 4
  tail call void @_ZN5views10GridLayout12AddViewStateENSt3__110unique_ptrINS_9ViewStateENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"* %0, %"struct.views::ViewState"* nonnull %26)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout12AddViewStateENSt3__110unique_ptrINS_9ViewStateENS1_14default_deleteIS3_EEEE(%"class.views::GridLayout"*, %"struct.views::ViewState"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.views::ViewState"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.333", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.views::ViewState"* %1, %"struct.views::ViewState"** %5, align 8
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 5
  %8 = load i32, i32* %6, align 4
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %8, %9
  %11 = select i1 %10, i32 %9, i32 %8
  store i32 %11, i32* %6, align 4
  %12 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, %13
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 7
  %18 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %17, align 8
  %19 = bitcast %"struct.views::ViewState"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  store %"struct.views::ViewState"* %1, %"struct.views::ViewState"** %3, align 8
  %20 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %18, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %20, i64 0, i32 0, i32 0
  %22 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %21, align 8
  %23 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %18, i64 0, i32 3, i32 0, i32 1
  %24 = bitcast %"struct.views::ViewState"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = ptrtoint %"struct.views::ViewState"** %22 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %2
  %30 = ashr exact i64 %27, 3
  %31 = load i32, i32* %12, align 8
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi %"struct.views::ViewState"** [ %45, %32 ], [ %22, %29 ]
  %34 = phi i64 [ %44, %32 ], [ %30, %29 ]
  %35 = lshr i64 %34, 1
  %36 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %33, i64 %35
  %37 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %36, align 8
  %38 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %37, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %39, %31
  %41 = getelementptr inbounds %"struct.views::ViewState"*, %"struct.views::ViewState"** %36, i64 1
  %42 = xor i64 %35, -1
  %43 = add i64 %34, %42
  %44 = select i1 %40, i64 %43, i64 %35
  %45 = select i1 %40, %"struct.views::ViewState"** %41, %"struct.views::ViewState"** %33
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %32

47:                                               ; preds = %32, %2
  %48 = phi %"struct.views::ViewState"** [ %22, %2 ], [ %45, %32 ]
  %49 = call %"struct.views::ViewState"** @_ZNSt3__16vectorIPN5views9ViewStateENS_9allocatorIS3_EEE6insertENS_11__wrap_iterIPKS3_EERS8_(%"class.std::__1::vector.11"* %20, %"struct.views::ViewState"** %48, %"struct.views::ViewState"** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %50 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10
  %51 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %51, align 8
  %53 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 1
  %54 = bitcast %"class.std::__1::unique_ptr.333"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.std::__1::unique_ptr.333"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %78, label %59

59:                                               ; preds = %47
  %60 = ashr exact i64 %57, 3
  %61 = load i32, i32* %7, align 4
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi %"class.std::__1::unique_ptr.333"* [ %76, %62 ], [ %52, %59 ]
  %64 = phi i64 [ %75, %62 ], [ %60, %59 ]
  %65 = lshr i64 %64, 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %63, i64 %65
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %67, align 8
  %69 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %68, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %70, %61
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %66, i64 1
  %73 = xor i64 %65, -1
  %74 = add i64 %64, %73
  %75 = select i1 %71, i64 %74, i64 %65
  %76 = select i1 %71, %"class.std::__1::unique_ptr.333"* %72, %"class.std::__1::unique_ptr.333"* %63
  %77 = icmp eq i64 %75, 0
  br i1 %77, label %78, label %62

78:                                               ; preds = %62, %47
  %79 = phi %"class.std::__1::unique_ptr.333"* [ %52, %47 ], [ %76, %62 ]
  %80 = call %"class.std::__1::unique_ptr.333"* @_ZNSt3__16vectorINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector.331"* %50, %"class.std::__1::unique_ptr.333"* %79, %"class.std::__1::unique_ptr.333"* nonnull dereferenceable(8) %4)
  %81 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %17, align 8
  %82 = icmp eq %"class.views::ColumnSet"* %81, null
  br i1 %82, label %115, label %83

83:                                               ; preds = %78
  %84 = load i32, i32* %14, align 4
  %85 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %81, i64 0, i32 2
  %86 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %81, i64 0, i32 2, i32 0, i32 1
  %87 = bitcast %"class.std::__1::unique_ptr"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.1"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = lshr exact i64 %91, 3
  %93 = trunc i64 %92 to i32
  %94 = icmp slt i32 %84, %93
  br i1 %94, label %95, label %115

95:                                               ; preds = %83
  %96 = sext i32 %84 to i64
  br label %97

97:                                               ; preds = %106, %95
  %98 = phi i64 [ %90, %95 ], [ %110, %106 ]
  %99 = phi i64 [ %96, %95 ], [ %107, %106 ]
  %100 = inttoptr i64 %98 to %"class.std::__1::unique_ptr"*
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 %99, i32 0, i32 0, i32 0
  %102 = load %"class.views::Column"*, %"class.views::Column"** %101, align 8
  %103 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %102, i64 0, i32 7
  %104 = load i8, i8* %103, align 4, !range !64
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %115, label %106

106:                                              ; preds = %97
  %107 = add nsw i64 %99, 1
  %108 = trunc i64 %107 to i32
  store i32 %108, i32* %14, align 4
  %109 = load i64, i64* %87, align 8
  %110 = load i64, i64* %89, align 8
  %111 = sub i64 %109, %110
  %112 = shl i64 %111, 29
  %113 = ashr i64 %112, 32
  %114 = icmp slt i64 %107, %113
  br i1 %114, label %97, label %115

115:                                              ; preds = %97, %106, %78, %83
  %116 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %5, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %5, align 8
  %117 = icmp eq %"struct.views::ViewState"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  %119 = bitcast %"struct.views::ViewState"* %116 to i8*
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %115, %118
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views10GridLayout9InstalledEPNS_4ViewE(%"class.views::GridLayout"* nocapture, %"class.views::View"*) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 1
  store %"class.views::View"* %1, %"class.views::View"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views10GridLayout9ViewAddedEPNS_4ViewES2_(%"class.views::GridLayout"* nocapture, %"class.views::View"* nocapture, %"class.views::View"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views10GridLayout11ViewRemovedEPNS_4ViewES2_(%"class.views::GridLayout"* nocapture, %"class.views::View"* nocapture, %"class.views::View"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views10GridLayout6LayoutEPNS_4ViewE(%"class.views::GridLayout"* nocapture, %"class.views::View"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = alloca %"class.gfx::Size", align 4
  %4 = bitcast %"class.gfx::Size"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 1
  %8 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %9 = getelementptr inbounds %"class.views::View", %"class.views::View"* %8, i64 0, i32 18, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.views::View", %"class.views::View"* %8, i64 0, i32 18, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  call void @_ZNK5views10GridLayout18SizeRowsAndColumnsEbiiPN3gfx4SizeE(%"class.views::GridLayout"* %0, i1 zeroext true, i32 %10, i32 %12, %"class.gfx::Size"* nonnull %3)
  %13 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %13, align 8
  %15 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %15, align 8
  %17 = icmp eq %"class.std::__1::unique_ptr.333"* %14, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 0
  br label %21

20:                                               ; preds = %286, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void

21:                                               ; preds = %18, %286
  %22 = phi %"class.std::__1::unique_ptr.333"* [ %14, %18 ], [ %289, %286 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %23, align 8
  %25 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %24, i64 0, i32 0
  %26 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %25, align 8
  %27 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %24, i64 0, i32 1
  %28 = load %"class.views::View"*, %"class.views::View"** %27, align 8
  %29 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %30 = bitcast %"class.views::View"* %29 to { i64, i64 } (%"class.views::View"*)***
  %31 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %30, align 8
  %32 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %31, i64 14
  %33 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %32, align 8
  %34 = tail call { i64, i64 } %33(%"class.views::View"* %29) #15
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  %39 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %23, align 8
  %40 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %26, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 %42, i32 0, i32 0, i32 0
  %46 = bitcast %"class.views::Column"** %45 to %"class.views::LayoutElement"**
  %47 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %46, align 8
  %48 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %38
  %51 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 %42
  %54 = icmp eq i32 %52, 0
  br i1 %54, label %136, label %55

55:                                               ; preds = %21
  %56 = sext i32 %52 to i64
  %57 = shl nsw i64 %56, 3
  %58 = add nsw i64 %57, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 7
  %62 = icmp ult i64 %58, 56
  br i1 %62, label %119, label %63

63:                                               ; preds = %55
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i32 [ 0, %63 ], [ %115, %65 ]
  %67 = phi %"class.std::__1::unique_ptr"* [ %53, %63 ], [ %116, %65 ]
  %68 = phi i64 [ %64, %63 ], [ %117, %65 ]
  %69 = bitcast %"class.std::__1::unique_ptr"* %67 to %"class.views::LayoutElement"**
  %70 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %69, align 8
  %71 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %70, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, %66
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 1
  %75 = bitcast %"class.std::__1::unique_ptr"* %74 to %"class.views::LayoutElement"**
  %76 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %75, align 8
  %77 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %76, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add nsw i32 %78, %73
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 2
  %81 = bitcast %"class.std::__1::unique_ptr"* %80 to %"class.views::LayoutElement"**
  %82 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %81, align 8
  %83 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add nsw i32 %84, %79
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 3
  %87 = bitcast %"class.std::__1::unique_ptr"* %86 to %"class.views::LayoutElement"**
  %88 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %87, align 8
  %89 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %88, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add nsw i32 %90, %85
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 4
  %93 = bitcast %"class.std::__1::unique_ptr"* %92 to %"class.views::LayoutElement"**
  %94 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %93, align 8
  %95 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %94, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add nsw i32 %96, %91
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 5
  %99 = bitcast %"class.std::__1::unique_ptr"* %98 to %"class.views::LayoutElement"**
  %100 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %99, align 8
  %101 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %100, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = add nsw i32 %102, %97
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 6
  %105 = bitcast %"class.std::__1::unique_ptr"* %104 to %"class.views::LayoutElement"**
  %106 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %105, align 8
  %107 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %106, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add nsw i32 %108, %103
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 7
  %111 = bitcast %"class.std::__1::unique_ptr"* %110 to %"class.views::LayoutElement"**
  %112 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %111, align 8
  %113 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %112, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = add nsw i32 %114, %109
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 8
  %117 = add i64 %68, -8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %65

119:                                              ; preds = %65, %55
  %120 = phi i32 [ undef, %55 ], [ %115, %65 ]
  %121 = phi i32 [ 0, %55 ], [ %115, %65 ]
  %122 = phi %"class.std::__1::unique_ptr"* [ %53, %55 ], [ %116, %65 ]
  %123 = icmp eq i64 %61, 0
  br i1 %123, label %136, label %124

124:                                              ; preds = %119, %124
  %125 = phi i32 [ %132, %124 ], [ %121, %119 ]
  %126 = phi %"class.std::__1::unique_ptr"* [ %133, %124 ], [ %122, %119 ]
  %127 = phi i64 [ %134, %124 ], [ %61, %119 ]
  %128 = bitcast %"class.std::__1::unique_ptr"* %126 to %"class.views::LayoutElement"**
  %129 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %128, align 8
  %130 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %129, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = add nsw i32 %131, %125
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 1
  %134 = add i64 %127, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %124, !llvm.loop !72

136:                                              ; preds = %119, %124, %21
  %137 = phi i32 [ 0, %21 ], [ %120, %119 ], [ %132, %124 ]
  %138 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 11
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 6
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 3
  br i1 %142, label %153, label %143

143:                                              ; preds = %136
  %144 = icmp sgt i32 %137, %139
  %145 = select i1 %144, i32 %139, i32 %137
  switch i32 %141, label %153 [
    i32 2, label %150
    i32 4, label %146
    i32 1, label %146
  ]

146:                                              ; preds = %143, %143
  %147 = sub nsw i32 %137, %145
  %148 = sdiv i32 %147, 2
  %149 = add nsw i32 %148, %50
  br label %153

150:                                              ; preds = %143
  %151 = add i32 %137, %50
  %152 = sub i32 %151, %145
  br label %153

153:                                              ; preds = %136, %143, %146, %150
  %154 = phi i32 [ %50, %136 ], [ %50, %143 ], [ %149, %146 ], [ %152, %150 ]
  %155 = phi i32 [ %137, %136 ], [ %145, %143 ], [ %145, %146 ], [ %145, %150 ]
  %156 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = sext i32 %157 to i64
  %159 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %19, align 8
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %159, i64 %158
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %160, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.views::Row"*, %"class.views::Row"** %161, align 8
  %163 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %162, i64 0, i32 0, i32 2
  %164 = load i32, i32* %163, align 4
  %165 = add nsw i32 %164, %36
  %166 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 5
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %250, label %169

169:                                              ; preds = %153
  %170 = sext i32 %167 to i64
  %171 = shl nsw i64 %170, 3
  %172 = add nsw i64 %171, -8
  %173 = lshr exact i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 7
  %176 = icmp ult i64 %172, 56
  br i1 %176, label %233, label %177

177:                                              ; preds = %169
  %178 = sub nsw i64 %174, %175
  br label %179

179:                                              ; preds = %179, %177
  %180 = phi i32 [ 0, %177 ], [ %229, %179 ]
  %181 = phi %"class.std::__1::unique_ptr.359"* [ %160, %177 ], [ %230, %179 ]
  %182 = phi i64 [ %178, %177 ], [ %231, %179 ]
  %183 = bitcast %"class.std::__1::unique_ptr.359"* %181 to %"class.views::LayoutElement"**
  %184 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %183, align 8
  %185 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %184, i64 0, i32 3
  %186 = load i32, i32* %185, align 8
  %187 = add nsw i32 %186, %180
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 1
  %189 = bitcast %"class.std::__1::unique_ptr.359"* %188 to %"class.views::LayoutElement"**
  %190 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %189, align 8
  %191 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %190, i64 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = add nsw i32 %192, %187
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 2
  %195 = bitcast %"class.std::__1::unique_ptr.359"* %194 to %"class.views::LayoutElement"**
  %196 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %195, align 8
  %197 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %196, i64 0, i32 3
  %198 = load i32, i32* %197, align 8
  %199 = add nsw i32 %198, %193
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 3
  %201 = bitcast %"class.std::__1::unique_ptr.359"* %200 to %"class.views::LayoutElement"**
  %202 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %201, align 8
  %203 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %202, i64 0, i32 3
  %204 = load i32, i32* %203, align 8
  %205 = add nsw i32 %204, %199
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 4
  %207 = bitcast %"class.std::__1::unique_ptr.359"* %206 to %"class.views::LayoutElement"**
  %208 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %207, align 8
  %209 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %208, i64 0, i32 3
  %210 = load i32, i32* %209, align 8
  %211 = add nsw i32 %210, %205
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 5
  %213 = bitcast %"class.std::__1::unique_ptr.359"* %212 to %"class.views::LayoutElement"**
  %214 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %213, align 8
  %215 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %214, i64 0, i32 3
  %216 = load i32, i32* %215, align 8
  %217 = add nsw i32 %216, %211
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 6
  %219 = bitcast %"class.std::__1::unique_ptr.359"* %218 to %"class.views::LayoutElement"**
  %220 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %219, align 8
  %221 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %220, i64 0, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = add nsw i32 %222, %217
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 7
  %225 = bitcast %"class.std::__1::unique_ptr.359"* %224 to %"class.views::LayoutElement"**
  %226 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %225, align 8
  %227 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %226, i64 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = add nsw i32 %228, %223
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %181, i64 8
  %231 = add i64 %182, -8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %179

233:                                              ; preds = %179, %169
  %234 = phi i32 [ undef, %169 ], [ %229, %179 ]
  %235 = phi i32 [ 0, %169 ], [ %229, %179 ]
  %236 = phi %"class.std::__1::unique_ptr.359"* [ %160, %169 ], [ %230, %179 ]
  %237 = icmp eq i64 %175, 0
  br i1 %237, label %250, label %238

238:                                              ; preds = %233, %238
  %239 = phi i32 [ %246, %238 ], [ %235, %233 ]
  %240 = phi %"class.std::__1::unique_ptr.359"* [ %247, %238 ], [ %236, %233 ]
  %241 = phi i64 [ %248, %238 ], [ %175, %233 ]
  %242 = bitcast %"class.std::__1::unique_ptr.359"* %240 to %"class.views::LayoutElement"**
  %243 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %242, align 8
  %244 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %243, i64 0, i32 3
  %245 = load i32, i32* %244, align 8
  %246 = add nsw i32 %245, %239
  %247 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %240, i64 1
  %248 = add i64 %241, -1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %238, !llvm.loop !73

250:                                              ; preds = %233, %238, %153
  %251 = phi i32 [ 0, %153 ], [ %234, %233 ], [ %246, %238 ]
  %252 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 7
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 4
  br i1 %254, label %255, label %271

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 15
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %259, label %264

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 12
  %261 = load i32, i32* %260, align 8
  %262 = icmp sgt i32 %251, %261
  %263 = select i1 %262, i32 %261, i32 %251
  br label %278

264:                                              ; preds = %255
  %265 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %162, i64 0, i32 3
  %266 = load i32, i32* %265, align 8
  %267 = sub i32 %165, %257
  %268 = add i32 %267, %266
  %269 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 12
  %270 = load i32, i32* %269, align 8
  br label %286

271:                                              ; preds = %250
  %272 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %39, i64 0, i32 12
  %273 = load i32, i32* %272, align 8
  %274 = icmp eq i32 %253, 3
  br i1 %274, label %286, label %275

275:                                              ; preds = %271
  %276 = icmp sgt i32 %251, %273
  %277 = select i1 %276, i32 %273, i32 %251
  switch i32 %253, label %286 [
    i32 2, label %283
    i32 1, label %278
  ]

278:                                              ; preds = %275, %259
  %279 = phi i32 [ %263, %259 ], [ %277, %275 ]
  %280 = sub nsw i32 %251, %279
  %281 = sdiv i32 %280, 2
  %282 = add nsw i32 %281, %165
  br label %286

283:                                              ; preds = %275
  %284 = add i32 %251, %165
  %285 = sub i32 %284, %277
  br label %286

286:                                              ; preds = %283, %278, %275, %271, %264
  %287 = phi i32 [ %268, %264 ], [ %165, %271 ], [ %165, %275 ], [ %282, %278 ], [ %285, %283 ]
  %288 = phi i32 [ %270, %264 ], [ %251, %271 ], [ %277, %275 ], [ %279, %278 ], [ %277, %283 ]
  tail call void @_ZN5views4View9SetBoundsEiiii(%"class.views::View"* %28, i32 %154, i32 %287, i32 %155, i32 %288) #15
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %22, i64 1
  %290 = icmp eq %"class.std::__1::unique_ptr.333"* %289, %16
  br i1 %290, label %20, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views10GridLayout18SizeRowsAndColumnsEbiiPN3gfx4SizeE(%"class.views::GridLayout"* nocapture, i1 zeroext, i32, i32, %"class.gfx::Size"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !64
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  store i8 1, i8* %6, align 8
  %10 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %10, align 8
  %12 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.346"* %11, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %9, %15
  %16 = phi %"class.std::__1::unique_ptr.346"* [ %19, %15 ], [ %11, %9 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %17, align 8
  tail call void @_ZN5views9ColumnSet22CalculateMasterColumnsEv(%"class.views::ColumnSet"* %18) #15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %16, i64 1
  %20 = icmp eq %"class.std::__1::unique_ptr.346"* %19, %13
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %5, %9
  %22 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %26 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.359"* %25, %27
  br i1 %28, label %1236, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %31 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %30, align 8
  %32 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr.346"* %31, %33
  br i1 %34, label %35, label %62

35:                                               ; preds = %155, %29
  %36 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 1
  %37 = load %"class.views::View"*, %"class.views::View"** %36, align 8
  %38 = bitcast %"class.views::View"* %37 to { i64, i64 } (%"class.views::View"*)***
  %39 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %38, align 8
  %40 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %39, i64 14
  %41 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %40, align 8
  %42 = tail call { i64, i64 } %41(%"class.views::View"* %37) #15
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %43, 32
  %46 = trunc i64 %45 to i32
  %47 = extractvalue { i64, i64 } %42, 1
  %48 = load i32, i32* %22, align 4
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = add nsw i32 %50, %46
  %52 = add nsw i32 %51, %48
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  store i32 %54, i32* %22, align 4
  %55 = icmp eq i32 %2, 0
  %56 = select i1 %55, i32 %54, i32 %2
  %57 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %30, align 8
  %58 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %32, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.346"* %57, %58
  br i1 %59, label %163, label %60

60:                                               ; preds = %35
  %61 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 14
  br label %183

62:                                               ; preds = %29, %155
  %63 = phi %"class.std::__1::unique_ptr.346"* [ %161, %155 ], [ %31, %29 ]
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %64, align 8
  tail call void @_ZN5views9ColumnSet13CalculateSizeENS0_19SizeCalculationTypeE(%"class.views::ColumnSet"* %65, i32 0)
  %66 = load i32, i32* %22, align 4
  %67 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %64, align 8
  %68 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %68, align 8
  %70 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %67, i64 0, i32 2, i32 0, i32 1
  %71 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %70, align 8
  %72 = icmp eq %"class.std::__1::unique_ptr"* %69, %71
  br i1 %72, label %155, label %73

73:                                               ; preds = %62
  %74 = ptrtoint %"class.std::__1::unique_ptr"* %69 to i64
  %75 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 -1
  %76 = ptrtoint %"class.std::__1::unique_ptr"* %75 to i64
  %77 = sub i64 %76, %74
  %78 = lshr i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 7
  %81 = icmp ult i64 %77, 56
  br i1 %81, label %138, label %82

82:                                               ; preds = %73
  %83 = sub nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i32 [ 0, %82 ], [ %134, %84 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %69, %82 ], [ %135, %84 ]
  %87 = phi i64 [ %83, %82 ], [ %136, %84 ]
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to %"class.views::LayoutElement"**
  %89 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %88, align 8
  %90 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %89, i64 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, %85
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %94 = bitcast %"class.std::__1::unique_ptr"* %93 to %"class.views::LayoutElement"**
  %95 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %94, align 8
  %96 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %95, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, %92
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 2
  %100 = bitcast %"class.std::__1::unique_ptr"* %99 to %"class.views::LayoutElement"**
  %101 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %100, align 8
  %102 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %101, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = add nsw i32 %103, %98
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 3
  %106 = bitcast %"class.std::__1::unique_ptr"* %105 to %"class.views::LayoutElement"**
  %107 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %106, align 8
  %108 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %107, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add nsw i32 %109, %104
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 4
  %112 = bitcast %"class.std::__1::unique_ptr"* %111 to %"class.views::LayoutElement"**
  %113 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %112, align 8
  %114 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %113, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add nsw i32 %115, %110
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr"* %117 to %"class.views::LayoutElement"**
  %119 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %118, align 8
  %120 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %119, i64 0, i32 3
  %121 = load i32, i32* %120, align 8
  %122 = add nsw i32 %121, %116
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 6
  %124 = bitcast %"class.std::__1::unique_ptr"* %123 to %"class.views::LayoutElement"**
  %125 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %124, align 8
  %126 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %125, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = add nsw i32 %127, %122
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 7
  %130 = bitcast %"class.std::__1::unique_ptr"* %129 to %"class.views::LayoutElement"**
  %131 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %130, align 8
  %132 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %131, i64 0, i32 3
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, %128
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 8
  %136 = add i64 %87, -8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %84

138:                                              ; preds = %84, %73
  %139 = phi i32 [ undef, %73 ], [ %134, %84 ]
  %140 = phi i32 [ 0, %73 ], [ %134, %84 ]
  %141 = phi %"class.std::__1::unique_ptr"* [ %69, %73 ], [ %135, %84 ]
  %142 = icmp eq i64 %80, 0
  br i1 %142, label %155, label %143

143:                                              ; preds = %138, %143
  %144 = phi i32 [ %151, %143 ], [ %140, %138 ]
  %145 = phi %"class.std::__1::unique_ptr"* [ %152, %143 ], [ %141, %138 ]
  %146 = phi i64 [ %153, %143 ], [ %80, %138 ]
  %147 = bitcast %"class.std::__1::unique_ptr"* %145 to %"class.views::LayoutElement"**
  %148 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %147, align 8
  %149 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %148, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add nsw i32 %150, %144
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 1
  %153 = add i64 %146, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %143, !llvm.loop !74

155:                                              ; preds = %138, %143, %62
  %156 = phi i32 [ 0, %62 ], [ %139, %138 ], [ %151, %143 ]
  %157 = icmp slt i32 %66, %156
  %158 = select i1 %157, i32 %156, i32 %66
  %159 = icmp sgt i32 %158, 0
  %160 = select i1 %159, i32 %158, i32 0
  store i32 %160, i32* %22, align 4
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %63, i64 1
  %162 = icmp eq %"class.std::__1::unique_ptr.346"* %161, %33
  br i1 %162, label %35, label %62

163:                                              ; preds = %470, %35
  %164 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %165 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  %166 = icmp eq %"class.std::__1::unique_ptr.359"* %164, %165
  br i1 %166, label %177, label %167

167:                                              ; preds = %163, %167
  %168 = phi %"class.std::__1::unique_ptr.359"* [ %175, %167 ], [ %164, %163 ]
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.views::Row"*, %"class.views::Row"** %169, align 8
  %171 = bitcast %"class.views::Row"* %170 to void (%"class.views::Row"*)***
  %172 = load void (%"class.views::Row"*)**, void (%"class.views::Row"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %172, i64 3
  %174 = load void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %173, align 8
  tail call void %174(%"class.views::Row"* %170) #15
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %168, i64 1
  %176 = icmp eq %"class.std::__1::unique_ptr.359"* %175, %165
  br i1 %176, label %177, label %167

177:                                              ; preds = %167, %163
  %178 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 0
  %179 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %178, align 8
  %180 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 10, i32 0, i32 1
  %181 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %180, align 8
  %182 = icmp eq %"class.std::__1::unique_ptr.333"* %179, %181
  br i1 %182, label %956, label %483

183:                                              ; preds = %60, %470
  %184 = phi %"class.std::__1::unique_ptr.346"* [ %57, %60 ], [ %471, %470 ]
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %184, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %185, align 8
  %187 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %186, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %187, align 8
  %189 = ptrtoint %"class.std::__1::unique_ptr"* %188 to i64
  %190 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %186, i64 0, i32 2, i32 0, i32 1
  %191 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %190, align 8
  %192 = icmp eq %"class.std::__1::unique_ptr"* %188, %191
  br i1 %192, label %274, label %193

193:                                              ; preds = %183
  %194 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 -1
  %195 = ptrtoint %"class.std::__1::unique_ptr"* %194 to i64
  %196 = sub i64 %195, %189
  %197 = lshr i64 %196, 3
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, 7
  %200 = icmp ult i64 %196, 56
  br i1 %200, label %257, label %201

201:                                              ; preds = %193
  %202 = sub nsw i64 %198, %199
  br label %203

203:                                              ; preds = %203, %201
  %204 = phi i32 [ 0, %201 ], [ %253, %203 ]
  %205 = phi %"class.std::__1::unique_ptr"* [ %188, %201 ], [ %254, %203 ]
  %206 = phi i64 [ %202, %201 ], [ %255, %203 ]
  %207 = bitcast %"class.std::__1::unique_ptr"* %205 to %"class.views::LayoutElement"**
  %208 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %207, align 8
  %209 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %208, i64 0, i32 3
  %210 = load i32, i32* %209, align 8
  %211 = add nsw i32 %210, %204
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 1
  %213 = bitcast %"class.std::__1::unique_ptr"* %212 to %"class.views::LayoutElement"**
  %214 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %213, align 8
  %215 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %214, i64 0, i32 3
  %216 = load i32, i32* %215, align 8
  %217 = add nsw i32 %216, %211
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 2
  %219 = bitcast %"class.std::__1::unique_ptr"* %218 to %"class.views::LayoutElement"**
  %220 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %219, align 8
  %221 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %220, i64 0, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = add nsw i32 %222, %217
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 3
  %225 = bitcast %"class.std::__1::unique_ptr"* %224 to %"class.views::LayoutElement"**
  %226 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %225, align 8
  %227 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %226, i64 0, i32 3
  %228 = load i32, i32* %227, align 8
  %229 = add nsw i32 %228, %223
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 4
  %231 = bitcast %"class.std::__1::unique_ptr"* %230 to %"class.views::LayoutElement"**
  %232 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %231, align 8
  %233 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %232, i64 0, i32 3
  %234 = load i32, i32* %233, align 8
  %235 = add nsw i32 %234, %229
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 5
  %237 = bitcast %"class.std::__1::unique_ptr"* %236 to %"class.views::LayoutElement"**
  %238 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %237, align 8
  %239 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %238, i64 0, i32 3
  %240 = load i32, i32* %239, align 8
  %241 = add nsw i32 %240, %235
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 6
  %243 = bitcast %"class.std::__1::unique_ptr"* %242 to %"class.views::LayoutElement"**
  %244 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %243, align 8
  %245 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %244, i64 0, i32 3
  %246 = load i32, i32* %245, align 8
  %247 = add nsw i32 %246, %241
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 7
  %249 = bitcast %"class.std::__1::unique_ptr"* %248 to %"class.views::LayoutElement"**
  %250 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %249, align 8
  %251 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %250, i64 0, i32 3
  %252 = load i32, i32* %251, align 8
  %253 = add nsw i32 %252, %247
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %205, i64 8
  %255 = add i64 %206, -8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %203

257:                                              ; preds = %203, %193
  %258 = phi i32 [ undef, %193 ], [ %253, %203 ]
  %259 = phi i32 [ 0, %193 ], [ %253, %203 ]
  %260 = phi %"class.std::__1::unique_ptr"* [ %188, %193 ], [ %254, %203 ]
  %261 = icmp eq i64 %199, 0
  br i1 %261, label %274, label %262

262:                                              ; preds = %257, %262
  %263 = phi i32 [ %270, %262 ], [ %259, %257 ]
  %264 = phi %"class.std::__1::unique_ptr"* [ %271, %262 ], [ %260, %257 ]
  %265 = phi i64 [ %272, %262 ], [ %199, %257 ]
  %266 = bitcast %"class.std::__1::unique_ptr"* %264 to %"class.views::LayoutElement"**
  %267 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %266, align 8
  %268 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %267, i64 0, i32 3
  %269 = load i32, i32* %268, align 8
  %270 = add nsw i32 %269, %263
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %264, i64 1
  %272 = add i64 %265, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %262, !llvm.loop !75

274:                                              ; preds = %257, %262, %183
  %275 = phi i32 [ 0, %183 ], [ %258, %257 ], [ %270, %262 ]
  %276 = sub nsw i32 %56, %275
  %277 = sub i32 %276, %51
  %278 = load i8, i8* %61, align 8, !range !64
  %279 = icmp eq i8 %278, 0
  %280 = icmp sgt i32 %277, -1
  %281 = or i1 %279, %280
  br i1 %281, label %283, label %282

282:                                              ; preds = %274
  tail call void @_ZN5views9ColumnSet14ResizeUsingMinEi(%"class.views::ColumnSet"* %186, i32 %277) #15
  br label %396

283:                                              ; preds = %274
  %284 = icmp eq i32 %277, 0
  %285 = or i1 %192, %284
  br i1 %285, label %396, label %286

286:                                              ; preds = %283
  %287 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %191, i64 -1
  %288 = ptrtoint %"class.std::__1::unique_ptr"* %287 to i64
  %289 = sub i64 %288, %189
  %290 = lshr i64 %289, 3
  %291 = add nuw nsw i64 %290, 1
  %292 = and i64 %291, 3
  %293 = icmp ult i64 %289, 24
  br i1 %293, label %296, label %294

294:                                              ; preds = %286
  %295 = sub nsw i64 %291, %292
  br label %325

296:                                              ; preds = %325, %286
  %297 = phi float [ undef, %286 ], [ %361, %325 ]
  %298 = phi i32 [ undef, %286 ], [ %364, %325 ]
  %299 = phi float [ 0.000000e+00, %286 ], [ %361, %325 ]
  %300 = phi i32 [ 0, %286 ], [ %364, %325 ]
  %301 = phi %"class.std::__1::unique_ptr"* [ %188, %286 ], [ %365, %325 ]
  %302 = icmp eq i64 %292, 0
  br i1 %302, label %319, label %303

303:                                              ; preds = %296, %303
  %304 = phi float [ %312, %303 ], [ %299, %296 ]
  %305 = phi i32 [ %315, %303 ], [ %300, %296 ]
  %306 = phi %"class.std::__1::unique_ptr"* [ %316, %303 ], [ %301, %296 ]
  %307 = phi i64 [ %317, %303 ], [ %292, %296 ]
  %308 = bitcast %"class.std::__1::unique_ptr"* %306 to %"class.views::LayoutElement"**
  %309 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %308, align 8
  %310 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %309, i64 0, i32 1
  %311 = load float, float* %310, align 8
  %312 = fadd float %304, %311
  %313 = fcmp ogt float %311, 0.000000e+00
  %314 = zext i1 %313 to i32
  %315 = add nuw nsw i32 %305, %314
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %306, i64 1
  %317 = add i64 %307, -1
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %303, !llvm.loop !76

319:                                              ; preds = %303, %296
  %320 = phi float [ %297, %296 ], [ %312, %303 ]
  %321 = phi i32 [ %298, %296 ], [ %315, %303 ]
  %322 = fcmp oeq float %320, 0.000000e+00
  br i1 %322, label %396, label %323

323:                                              ; preds = %319
  %324 = sitofp i32 %277 to float
  br label %368

325:                                              ; preds = %325, %294
  %326 = phi float [ 0.000000e+00, %294 ], [ %361, %325 ]
  %327 = phi i32 [ 0, %294 ], [ %364, %325 ]
  %328 = phi %"class.std::__1::unique_ptr"* [ %188, %294 ], [ %365, %325 ]
  %329 = phi i64 [ %295, %294 ], [ %366, %325 ]
  %330 = bitcast %"class.std::__1::unique_ptr"* %328 to %"class.views::LayoutElement"**
  %331 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %330, align 8
  %332 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %331, i64 0, i32 1
  %333 = load float, float* %332, align 8
  %334 = fadd float %326, %333
  %335 = fcmp ogt float %333, 0.000000e+00
  %336 = zext i1 %335 to i32
  %337 = add nuw nsw i32 %327, %336
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 1
  %339 = bitcast %"class.std::__1::unique_ptr"* %338 to %"class.views::LayoutElement"**
  %340 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %339, align 8
  %341 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %340, i64 0, i32 1
  %342 = load float, float* %341, align 8
  %343 = fadd float %334, %342
  %344 = fcmp ogt float %342, 0.000000e+00
  %345 = zext i1 %344 to i32
  %346 = add nuw nsw i32 %337, %345
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 2
  %348 = bitcast %"class.std::__1::unique_ptr"* %347 to %"class.views::LayoutElement"**
  %349 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %348, align 8
  %350 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %349, i64 0, i32 1
  %351 = load float, float* %350, align 8
  %352 = fadd float %343, %351
  %353 = fcmp ogt float %351, 0.000000e+00
  %354 = zext i1 %353 to i32
  %355 = add nuw nsw i32 %346, %354
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 3
  %357 = bitcast %"class.std::__1::unique_ptr"* %356 to %"class.views::LayoutElement"**
  %358 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %357, align 8
  %359 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %358, i64 0, i32 1
  %360 = load float, float* %359, align 8
  %361 = fadd float %352, %360
  %362 = fcmp ogt float %360, 0.000000e+00
  %363 = zext i1 %362 to i32
  %364 = add nuw nsw i32 %355, %363
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %328, i64 4
  %366 = add i64 %329, -4
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %296, label %325

368:                                              ; preds = %391, %323
  %369 = phi i32 [ %321, %323 ], [ %393, %391 ]
  %370 = phi i32 [ %277, %323 ], [ %392, %391 ]
  %371 = phi %"class.std::__1::unique_ptr"* [ %188, %323 ], [ %394, %391 ]
  %372 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %371, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.views::Column"*, %"class.views::Column"** %372, align 8
  %374 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %373, i64 0, i32 0, i32 1
  %375 = load float, float* %374, align 8
  %376 = fcmp ogt float %375, 0.000000e+00
  br i1 %376, label %377, label %391

377:                                              ; preds = %368
  %378 = add nsw i32 %369, -1
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %385, label %380

380:                                              ; preds = %377
  %381 = fdiv float %375, %320
  %382 = fmul float %381, %324
  %383 = fptosi float %382 to i32
  %384 = sub nsw i32 %370, %383
  br label %385

385:                                              ; preds = %380, %377
  %386 = phi i32 [ %384, %380 ], [ %370, %377 ]
  %387 = phi i32 [ %383, %380 ], [ %370, %377 ]
  %388 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %373, i64 0, i32 0, i32 3
  %389 = load i32, i32* %388, align 8
  %390 = add nsw i32 %389, %387
  store i32 %390, i32* %388, align 8
  br label %391

391:                                              ; preds = %385, %368
  %392 = phi i32 [ %386, %385 ], [ %370, %368 ]
  %393 = phi i32 [ %378, %385 ], [ %369, %368 ]
  %394 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %371, i64 1
  %395 = icmp eq %"class.std::__1::unique_ptr"* %394, %191
  br i1 %395, label %396, label %368

396:                                              ; preds = %391, %283, %282, %319
  %397 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %185, align 8
  %398 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %397, i64 0, i32 2, i32 0, i32 0
  %399 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %398, align 8
  %400 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %397, i64 0, i32 2, i32 0, i32 1
  %401 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %400, align 8
  %402 = icmp eq %"class.std::__1::unique_ptr"* %399, %401
  br i1 %402, label %470, label %403

403:                                              ; preds = %396
  %404 = ptrtoint %"class.std::__1::unique_ptr"* %399 to i64
  %405 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %401, i64 -1
  %406 = ptrtoint %"class.std::__1::unique_ptr"* %405 to i64
  %407 = sub i64 %406, %404
  %408 = lshr i64 %407, 3
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 24
  br i1 %411, label %452, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i32 [ 0, %412 ], [ %448, %414 ]
  %416 = phi %"class.std::__1::unique_ptr"* [ %399, %412 ], [ %449, %414 ]
  %417 = phi i64 [ %413, %412 ], [ %450, %414 ]
  %418 = bitcast %"class.std::__1::unique_ptr"* %416 to %"class.views::LayoutElement"**
  %419 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %418, align 8
  %420 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %419, i64 0, i32 2
  store i32 %415, i32* %420, align 4
  %421 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %418, align 8
  %422 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %421, i64 0, i32 3
  %423 = load i32, i32* %422, align 8
  %424 = add nsw i32 %423, %415
  %425 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %416, i64 1
  %426 = bitcast %"class.std::__1::unique_ptr"* %425 to %"class.views::LayoutElement"**
  %427 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %426, align 8
  %428 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %427, i64 0, i32 2
  store i32 %424, i32* %428, align 4
  %429 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %426, align 8
  %430 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %429, i64 0, i32 3
  %431 = load i32, i32* %430, align 8
  %432 = add nsw i32 %431, %424
  %433 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %416, i64 2
  %434 = bitcast %"class.std::__1::unique_ptr"* %433 to %"class.views::LayoutElement"**
  %435 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %434, align 8
  %436 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %435, i64 0, i32 2
  store i32 %432, i32* %436, align 4
  %437 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %434, align 8
  %438 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %437, i64 0, i32 3
  %439 = load i32, i32* %438, align 8
  %440 = add nsw i32 %439, %432
  %441 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %416, i64 3
  %442 = bitcast %"class.std::__1::unique_ptr"* %441 to %"class.views::LayoutElement"**
  %443 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %442, align 8
  %444 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %443, i64 0, i32 2
  store i32 %440, i32* %444, align 4
  %445 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %442, align 8
  %446 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %445, i64 0, i32 3
  %447 = load i32, i32* %446, align 8
  %448 = add nsw i32 %447, %440
  %449 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %416, i64 4
  %450 = add i64 %417, -4
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %414

452:                                              ; preds = %414, %403
  %453 = phi i32 [ 0, %403 ], [ %448, %414 ]
  %454 = phi %"class.std::__1::unique_ptr"* [ %399, %403 ], [ %449, %414 ]
  %455 = icmp eq i64 %410, 0
  br i1 %455, label %470, label %456

456:                                              ; preds = %452, %456
  %457 = phi i32 [ %466, %456 ], [ %453, %452 ]
  %458 = phi %"class.std::__1::unique_ptr"* [ %467, %456 ], [ %454, %452 ]
  %459 = phi i64 [ %468, %456 ], [ %410, %452 ]
  %460 = bitcast %"class.std::__1::unique_ptr"* %458 to %"class.views::LayoutElement"**
  %461 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %460, align 8
  %462 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %461, i64 0, i32 2
  store i32 %457, i32* %462, align 4
  %463 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %460, align 8
  %464 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %463, i64 0, i32 3
  %465 = load i32, i32* %464, align 8
  %466 = add nsw i32 %465, %457
  %467 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %458, i64 1
  %468 = add i64 %459, -1
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %456, !llvm.loop !77

470:                                              ; preds = %452, %456, %396
  %471 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %184, i64 1
  %472 = icmp eq %"class.std::__1::unique_ptr.346"* %471, %58
  br i1 %472, label %163, label %183

473:                                              ; preds = %628
  %474 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %178, align 8
  %475 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %180, align 8
  %476 = icmp eq %"class.std::__1::unique_ptr.333"* %474, %475
  br i1 %476, label %956, label %477

477:                                              ; preds = %473
  %478 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %474, i64 0, i32 0, i32 0, i32 0
  %479 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %478, align 8
  %480 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %479, i64 0, i32 5
  %481 = load i32, i32* %480, align 4
  %482 = icmp eq i32 %481, 1
  br i1 %482, label %637, label %678

483:                                              ; preds = %177, %628
  %484 = phi %"class.std::__1::unique_ptr.333"* [ %629, %628 ], [ %179, %177 ]
  %485 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %484, i64 0, i32 0, i32 0, i32 0
  %486 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  %487 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %486, i64 0, i32 12
  %488 = load i32, i32* %487, align 8
  %489 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %486, i64 0, i32 14
  store i32 %488, i32* %489, align 8
  %490 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  %491 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %490, i64 0, i32 7
  %492 = load i32, i32* %491, align 4
  %493 = icmp eq i32 %492, 4
  br i1 %493, label %494, label %505

494:                                              ; preds = %483
  %495 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %490, i64 0, i32 1
  %496 = load %"class.views::View"*, %"class.views::View"** %495, align 8
  %497 = bitcast %"class.views::View"* %496 to i32 (%"class.views::View"*)***
  %498 = load i32 (%"class.views::View"*)**, i32 (%"class.views::View"*)*** %497, align 8
  %499 = getelementptr inbounds i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %498, i64 16
  %500 = load i32 (%"class.views::View"*)*, i32 (%"class.views::View"*)** %499, align 8
  %501 = tail call i32 %500(%"class.views::View"* %496) #15
  %502 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  %503 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %502, i64 0, i32 15
  store i32 %501, i32* %503, align 4
  %504 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  br label %505

505:                                              ; preds = %494, %483
  %506 = phi %"struct.views::ViewState"* [ %504, %494 ], [ %490, %483 ]
  %507 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 9
  %508 = load i8, i8* %507, align 1, !range !64
  %509 = icmp eq i8 %508, 0
  br i1 %509, label %510, label %628

510:                                              ; preds = %505
  %511 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 0
  %512 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %511, align 8
  %513 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 2
  %514 = load i32, i32* %513, align 8
  %515 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 4
  %516 = load i32, i32* %515, align 8
  %517 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %512, i64 0, i32 2, i32 0, i32 0
  %518 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %517, align 8
  %519 = sext i32 %514 to i64
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %518, i64 %519
  %521 = icmp eq i32 %516, 0
  br i1 %521, label %603, label %522

522:                                              ; preds = %510
  %523 = sext i32 %516 to i64
  %524 = shl nsw i64 %523, 3
  %525 = add nsw i64 %524, -8
  %526 = lshr exact i64 %525, 3
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 7
  %529 = icmp ult i64 %525, 56
  br i1 %529, label %586, label %530

530:                                              ; preds = %522
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i32 [ 0, %530 ], [ %582, %532 ]
  %534 = phi %"class.std::__1::unique_ptr"* [ %520, %530 ], [ %583, %532 ]
  %535 = phi i64 [ %531, %530 ], [ %584, %532 ]
  %536 = bitcast %"class.std::__1::unique_ptr"* %534 to %"class.views::LayoutElement"**
  %537 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %536, align 8
  %538 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %537, i64 0, i32 3
  %539 = load i32, i32* %538, align 8
  %540 = add nsw i32 %539, %533
  %541 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 1
  %542 = bitcast %"class.std::__1::unique_ptr"* %541 to %"class.views::LayoutElement"**
  %543 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %542, align 8
  %544 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %543, i64 0, i32 3
  %545 = load i32, i32* %544, align 8
  %546 = add nsw i32 %545, %540
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 2
  %548 = bitcast %"class.std::__1::unique_ptr"* %547 to %"class.views::LayoutElement"**
  %549 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %548, align 8
  %550 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %549, i64 0, i32 3
  %551 = load i32, i32* %550, align 8
  %552 = add nsw i32 %551, %546
  %553 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 3
  %554 = bitcast %"class.std::__1::unique_ptr"* %553 to %"class.views::LayoutElement"**
  %555 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %554, align 8
  %556 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %555, i64 0, i32 3
  %557 = load i32, i32* %556, align 8
  %558 = add nsw i32 %557, %552
  %559 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 4
  %560 = bitcast %"class.std::__1::unique_ptr"* %559 to %"class.views::LayoutElement"**
  %561 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %560, align 8
  %562 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %561, i64 0, i32 3
  %563 = load i32, i32* %562, align 8
  %564 = add nsw i32 %563, %558
  %565 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 5
  %566 = bitcast %"class.std::__1::unique_ptr"* %565 to %"class.views::LayoutElement"**
  %567 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %566, align 8
  %568 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %567, i64 0, i32 3
  %569 = load i32, i32* %568, align 8
  %570 = add nsw i32 %569, %564
  %571 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 6
  %572 = bitcast %"class.std::__1::unique_ptr"* %571 to %"class.views::LayoutElement"**
  %573 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %572, align 8
  %574 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %573, i64 0, i32 3
  %575 = load i32, i32* %574, align 8
  %576 = add nsw i32 %575, %570
  %577 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 7
  %578 = bitcast %"class.std::__1::unique_ptr"* %577 to %"class.views::LayoutElement"**
  %579 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %578, align 8
  %580 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %579, i64 0, i32 3
  %581 = load i32, i32* %580, align 8
  %582 = add nsw i32 %581, %576
  %583 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %534, i64 8
  %584 = add i64 %535, -8
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %586, label %532

586:                                              ; preds = %532, %522
  %587 = phi i32 [ undef, %522 ], [ %582, %532 ]
  %588 = phi i32 [ 0, %522 ], [ %582, %532 ]
  %589 = phi %"class.std::__1::unique_ptr"* [ %520, %522 ], [ %583, %532 ]
  %590 = icmp eq i64 %528, 0
  br i1 %590, label %603, label %591

591:                                              ; preds = %586, %591
  %592 = phi i32 [ %599, %591 ], [ %588, %586 ]
  %593 = phi %"class.std::__1::unique_ptr"* [ %600, %591 ], [ %589, %586 ]
  %594 = phi i64 [ %601, %591 ], [ %528, %586 ]
  %595 = bitcast %"class.std::__1::unique_ptr"* %593 to %"class.views::LayoutElement"**
  %596 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %595, align 8
  %597 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %596, i64 0, i32 3
  %598 = load i32, i32* %597, align 8
  %599 = add nsw i32 %598, %592
  %600 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %593, i64 1
  %601 = add i64 %594, -1
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %591, !llvm.loop !78

603:                                              ; preds = %586, %591, %510
  %604 = phi i32 [ 0, %510 ], [ %587, %586 ], [ %599, %591 ]
  %605 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 11
  %606 = load i32, i32* %605, align 4
  %607 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 6
  %608 = load i32, i32* %607, align 8
  %609 = icmp eq i32 %608, 3
  %610 = icmp sgt i32 %604, %606
  %611 = select i1 %610, i32 %606, i32 %604
  %612 = select i1 %609, i32 %604, i32 %611
  %613 = icmp eq i32 %612, %606
  br i1 %613, label %628, label %614

614:                                              ; preds = %603
  %615 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %506, i64 0, i32 1
  %616 = load %"class.views::View"*, %"class.views::View"** %615, align 8
  %617 = bitcast %"class.views::View"* %616 to i32 (%"class.views::View"*, i32)***
  %618 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %617, align 8
  %619 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %618, i64 19
  %620 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %619, align 8
  %621 = tail call i32 %620(%"class.views::View"* %616, i32 %612) #15
  %622 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  %623 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %622, i64 0, i32 12
  store i32 %621, i32* %623, align 8
  %624 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %485, align 8
  %625 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %624, i64 0, i32 12
  %626 = load i32, i32* %625, align 8
  %627 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %624, i64 0, i32 14
  store i32 %626, i32* %627, align 8
  br label %628

628:                                              ; preds = %614, %603, %505
  %629 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %484, i64 1
  %630 = icmp eq %"class.std::__1::unique_ptr.333"* %629, %181
  br i1 %630, label %473, label %483

631:                                              ; preds = %674
  %632 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %675, i64 0, i32 0, i32 0, i32 0
  %633 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %632, align 8
  %634 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %633, i64 0, i32 5
  %635 = load i32, i32* %634, align 4
  %636 = icmp eq i32 %635, 1
  br i1 %636, label %637, label %678

637:                                              ; preds = %477, %631
  %638 = phi %"struct.views::ViewState"* [ %633, %631 ], [ %479, %477 ]
  %639 = phi %"class.std::__1::unique_ptr.333"* [ %675, %631 ], [ %474, %477 ]
  %640 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %638, i64 0, i32 3
  %641 = load i32, i32* %640, align 4
  %642 = sext i32 %641 to i64
  %643 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %644 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %643, i64 %642, i32 0, i32 0, i32 0
  %645 = load %"class.views::Row"*, %"class.views::Row"** %644, align 8
  %646 = bitcast %"class.views::Row"* %645 to %"class.views::LayoutElement"*
  %647 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %638, i64 0, i32 14
  %648 = load i32, i32* %647, align 8
  %649 = bitcast %"class.views::Row"* %645 to void (%"class.views::LayoutElement"*, i32)***
  %650 = load void (%"class.views::LayoutElement"*, i32)**, void (%"class.views::LayoutElement"*, i32)*** %649, align 8
  %651 = getelementptr inbounds void (%"class.views::LayoutElement"*, i32)*, void (%"class.views::LayoutElement"*, i32)** %650, i64 2
  %652 = load void (%"class.views::LayoutElement"*, i32)*, void (%"class.views::LayoutElement"*, i32)** %651, align 8
  tail call void %652(%"class.views::LayoutElement"* %646, i32 %648) #15
  %653 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %638, i64 0, i32 15
  %654 = load i32, i32* %653, align 4
  %655 = icmp eq i32 %654, -1
  br i1 %655, label %674, label %656

656:                                              ; preds = %637
  %657 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %638, i64 0, i32 12
  %658 = load i32, i32* %657, align 8
  %659 = icmp slt i32 %658, %654
  br i1 %659, label %674, label %660

660:                                              ; preds = %656
  %661 = sub nsw i32 %658, %654
  %662 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %645, i64 0, i32 3
  %663 = load i32, i32* %662, align 4
  %664 = icmp sgt i32 %663, %654
  %665 = select i1 %664, i32 %663, i32 %654
  store i32 %665, i32* %662, align 8
  %666 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %645, i64 0, i32 4
  %667 = load i32, i32* %666, align 4
  %668 = icmp sgt i32 %667, %661
  %669 = select i1 %668, i32 %667, i32 %661
  store i32 %669, i32* %666, align 4
  %670 = add nsw i32 %669, %665
  %671 = load void (%"class.views::LayoutElement"*, i32)**, void (%"class.views::LayoutElement"*, i32)*** %649, align 8
  %672 = getelementptr inbounds void (%"class.views::LayoutElement"*, i32)*, void (%"class.views::LayoutElement"*, i32)** %671, i64 2
  %673 = load void (%"class.views::LayoutElement"*, i32)*, void (%"class.views::LayoutElement"*, i32)** %672, align 8
  tail call void %673(%"class.views::LayoutElement"* %646, i32 %670) #15
  br label %674

674:                                              ; preds = %656, %637, %660
  store i32 0, i32* %647, align 8
  %675 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %639, i64 1
  %676 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %180, align 8
  %677 = icmp eq %"class.std::__1::unique_ptr.333"* %675, %676
  br i1 %677, label %956, label %631

678:                                              ; preds = %631, %477
  %679 = phi %"class.std::__1::unique_ptr.333"* [ %475, %477 ], [ %676, %631 ]
  %680 = phi %"class.std::__1::unique_ptr.333"* [ %474, %477 ], [ %675, %631 ]
  %681 = icmp eq %"class.std::__1::unique_ptr.333"* %680, %679
  br i1 %681, label %956, label %682

682:                                              ; preds = %678, %952
  %683 = phi %"class.std::__1::unique_ptr.333"* [ %953, %952 ], [ %680, %678 ]
  %684 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %683, i64 0, i32 0, i32 0, i32 0
  %685 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %684, align 8
  %686 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %685, i64 0, i32 3
  %687 = load i32, i32* %686, align 4
  %688 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %685, i64 0, i32 5
  %689 = load i32, i32* %688, align 4
  %690 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %691 = sext i32 %687 to i64
  %692 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %690, i64 %691
  %693 = icmp eq i32 %689, 0
  br i1 %693, label %775, label %694

694:                                              ; preds = %682
  %695 = sext i32 %689 to i64
  %696 = shl nsw i64 %695, 3
  %697 = add nsw i64 %696, -8
  %698 = lshr exact i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp ult i64 %697, 56
  br i1 %701, label %758, label %702

702:                                              ; preds = %694
  %703 = sub nsw i64 %699, %700
  br label %704

704:                                              ; preds = %704, %702
  %705 = phi i32 [ 0, %702 ], [ %754, %704 ]
  %706 = phi %"class.std::__1::unique_ptr.359"* [ %692, %702 ], [ %755, %704 ]
  %707 = phi i64 [ %703, %702 ], [ %756, %704 ]
  %708 = bitcast %"class.std::__1::unique_ptr.359"* %706 to %"class.views::LayoutElement"**
  %709 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %708, align 8
  %710 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %709, i64 0, i32 3
  %711 = load i32, i32* %710, align 8
  %712 = add nsw i32 %711, %705
  %713 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 1
  %714 = bitcast %"class.std::__1::unique_ptr.359"* %713 to %"class.views::LayoutElement"**
  %715 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %714, align 8
  %716 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %715, i64 0, i32 3
  %717 = load i32, i32* %716, align 8
  %718 = add nsw i32 %717, %712
  %719 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 2
  %720 = bitcast %"class.std::__1::unique_ptr.359"* %719 to %"class.views::LayoutElement"**
  %721 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %720, align 8
  %722 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %721, i64 0, i32 3
  %723 = load i32, i32* %722, align 8
  %724 = add nsw i32 %723, %718
  %725 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 3
  %726 = bitcast %"class.std::__1::unique_ptr.359"* %725 to %"class.views::LayoutElement"**
  %727 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %726, align 8
  %728 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %727, i64 0, i32 3
  %729 = load i32, i32* %728, align 8
  %730 = add nsw i32 %729, %724
  %731 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 4
  %732 = bitcast %"class.std::__1::unique_ptr.359"* %731 to %"class.views::LayoutElement"**
  %733 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %732, align 8
  %734 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %733, i64 0, i32 3
  %735 = load i32, i32* %734, align 8
  %736 = add nsw i32 %735, %730
  %737 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 5
  %738 = bitcast %"class.std::__1::unique_ptr.359"* %737 to %"class.views::LayoutElement"**
  %739 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %738, align 8
  %740 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %739, i64 0, i32 3
  %741 = load i32, i32* %740, align 8
  %742 = add nsw i32 %741, %736
  %743 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 6
  %744 = bitcast %"class.std::__1::unique_ptr.359"* %743 to %"class.views::LayoutElement"**
  %745 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %744, align 8
  %746 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %745, i64 0, i32 3
  %747 = load i32, i32* %746, align 8
  %748 = add nsw i32 %747, %742
  %749 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 7
  %750 = bitcast %"class.std::__1::unique_ptr.359"* %749 to %"class.views::LayoutElement"**
  %751 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %750, align 8
  %752 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %751, i64 0, i32 3
  %753 = load i32, i32* %752, align 8
  %754 = add nsw i32 %753, %748
  %755 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %706, i64 8
  %756 = add i64 %707, -8
  %757 = icmp eq i64 %756, 0
  br i1 %757, label %758, label %704

758:                                              ; preds = %704, %694
  %759 = phi i32 [ undef, %694 ], [ %754, %704 ]
  %760 = phi i32 [ 0, %694 ], [ %754, %704 ]
  %761 = phi %"class.std::__1::unique_ptr.359"* [ %692, %694 ], [ %755, %704 ]
  %762 = icmp eq i64 %700, 0
  br i1 %762, label %775, label %763

763:                                              ; preds = %758, %763
  %764 = phi i32 [ %771, %763 ], [ %760, %758 ]
  %765 = phi %"class.std::__1::unique_ptr.359"* [ %772, %763 ], [ %761, %758 ]
  %766 = phi i64 [ %773, %763 ], [ %700, %758 ]
  %767 = bitcast %"class.std::__1::unique_ptr.359"* %765 to %"class.views::LayoutElement"**
  %768 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %767, align 8
  %769 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %768, i64 0, i32 3
  %770 = load i32, i32* %769, align 8
  %771 = add nsw i32 %770, %764
  %772 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %765, i64 1
  %773 = add i64 %766, -1
  %774 = icmp eq i64 %773, 0
  br i1 %774, label %775, label %763, !llvm.loop !79

775:                                              ; preds = %758, %763, %682
  %776 = phi i32 [ 0, %682 ], [ %759, %758 ], [ %771, %763 ]
  %777 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %685, i64 0, i32 14
  %778 = load i32, i32* %777, align 8
  %779 = sub nsw i32 %778, %776
  store i32 %779, i32* %777, align 8
  %780 = icmp slt i32 %779, 1
  br i1 %780, label %952, label %781

781:                                              ; preds = %775
  %782 = add nsw i32 %689, %687
  %783 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %784 = sext i32 %782 to i64
  br i1 %693, label %924, label %785

785:                                              ; preds = %781
  %786 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %783, i64 %691
  %787 = shl nsw i64 %784, 3
  %788 = add nsw i64 %787, -8
  %789 = shl nsw i64 %691, 3
  %790 = sub nsw i64 %788, %789
  %791 = lshr exact i64 %790, 3
  %792 = add nuw nsw i64 %791, 1
  %793 = and i64 %792, 3
  %794 = icmp ult i64 %790, 24
  br i1 %794, label %835, label %795

795:                                              ; preds = %785
  %796 = sub nsw i64 %792, %793
  br label %797

797:                                              ; preds = %797, %795
  %798 = phi i64 [ 0, %795 ], [ %831, %797 ]
  %799 = phi %"class.std::__1::unique_ptr.359"* [ %786, %795 ], [ %832, %797 ]
  %800 = phi i64 [ %796, %795 ], [ %833, %797 ]
  %801 = bitcast %"class.std::__1::unique_ptr.359"* %799 to %"class.views::LayoutElement"**
  %802 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %801, align 8
  %803 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %802, i64 0, i32 1
  %804 = load float, float* %803, align 8
  %805 = fcmp ogt float %804, 0.000000e+00
  %806 = zext i1 %805 to i64
  %807 = add nuw nsw i64 %798, %806
  %808 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %799, i64 1
  %809 = bitcast %"class.std::__1::unique_ptr.359"* %808 to %"class.views::LayoutElement"**
  %810 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %809, align 8
  %811 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %810, i64 0, i32 1
  %812 = load float, float* %811, align 8
  %813 = fcmp ogt float %812, 0.000000e+00
  %814 = zext i1 %813 to i64
  %815 = add nuw nsw i64 %807, %814
  %816 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %799, i64 2
  %817 = bitcast %"class.std::__1::unique_ptr.359"* %816 to %"class.views::LayoutElement"**
  %818 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %817, align 8
  %819 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %818, i64 0, i32 1
  %820 = load float, float* %819, align 8
  %821 = fcmp ogt float %820, 0.000000e+00
  %822 = zext i1 %821 to i64
  %823 = add nuw nsw i64 %815, %822
  %824 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %799, i64 3
  %825 = bitcast %"class.std::__1::unique_ptr.359"* %824 to %"class.views::LayoutElement"**
  %826 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %825, align 8
  %827 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %826, i64 0, i32 1
  %828 = load float, float* %827, align 8
  %829 = fcmp ogt float %828, 0.000000e+00
  %830 = zext i1 %829 to i64
  %831 = add nuw nsw i64 %823, %830
  %832 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %799, i64 4
  %833 = add i64 %800, -4
  %834 = icmp eq i64 %833, 0
  br i1 %834, label %835, label %797

835:                                              ; preds = %797, %785
  %836 = phi i64 [ undef, %785 ], [ %831, %797 ]
  %837 = phi i64 [ 0, %785 ], [ %831, %797 ]
  %838 = phi %"class.std::__1::unique_ptr.359"* [ %786, %785 ], [ %832, %797 ]
  %839 = icmp eq i64 %793, 0
  br i1 %839, label %854, label %840

840:                                              ; preds = %835, %840
  %841 = phi i64 [ %850, %840 ], [ %837, %835 ]
  %842 = phi %"class.std::__1::unique_ptr.359"* [ %851, %840 ], [ %838, %835 ]
  %843 = phi i64 [ %852, %840 ], [ %793, %835 ]
  %844 = bitcast %"class.std::__1::unique_ptr.359"* %842 to %"class.views::LayoutElement"**
  %845 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %844, align 8
  %846 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %845, i64 0, i32 1
  %847 = load float, float* %846, align 8
  %848 = fcmp ogt float %847, 0.000000e+00
  %849 = zext i1 %848 to i64
  %850 = add nuw nsw i64 %841, %849
  %851 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %842, i64 1
  %852 = add i64 %843, -1
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %854, label %840, !llvm.loop !80

854:                                              ; preds = %840, %835
  %855 = phi i64 [ %836, %835 ], [ %850, %840 ]
  %856 = trunc i64 %855 to i32
  %857 = icmp sgt i32 %856, 0
  %858 = icmp sgt i32 %689, 0
  br i1 %857, label %859, label %887

859:                                              ; preds = %854
  br i1 %858, label %860, label %952

860:                                              ; preds = %859
  %861 = sdiv i32 %779, %856
  br label %862

862:                                              ; preds = %885, %860
  %863 = phi %"class.std::__1::unique_ptr.359"* [ %783, %860 ], [ %886, %885 ]
  %864 = phi i64 [ %691, %860 ], [ %883, %885 ]
  %865 = phi i32 [ %861, %860 ], [ %882, %885 ]
  %866 = phi i32 [ %779, %860 ], [ %881, %885 ]
  %867 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %863, i64 %864, i32 0, i32 0, i32 0
  %868 = bitcast %"class.views::Row"** %867 to %"class.views::LayoutElement"**
  %869 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %868, align 8
  %870 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %869, i64 0, i32 1
  %871 = load float, float* %870, align 8
  %872 = fcmp ogt float %871, 0.000000e+00
  br i1 %872, label %873, label %880

873:                                              ; preds = %862
  %874 = sub nsw i32 %866, %865
  %875 = icmp slt i32 %874, %865
  %876 = select i1 %875, i32 %866, i32 %865
  %877 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %869, i64 0, i32 3
  %878 = load i32, i32* %877, align 8
  %879 = add nsw i32 %878, %876
  store i32 %879, i32* %877, align 8
  br label %880

880:                                              ; preds = %873, %862
  %881 = phi i32 [ %874, %873 ], [ %866, %862 ]
  %882 = phi i32 [ %876, %873 ], [ %865, %862 ]
  %883 = add nsw i64 %864, 1
  %884 = icmp slt i64 %883, %784
  br i1 %884, label %885, label %952

885:                                              ; preds = %880
  %886 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  br label %862

887:                                              ; preds = %854
  br i1 %858, label %888, label %924

888:                                              ; preds = %887
  %889 = sdiv i32 %779, %689
  %890 = sub nsw i32 %779, %889
  %891 = icmp slt i32 %890, %889
  %892 = select i1 %891, i32 %779, i32 %889
  %893 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %783, i64 %691, i32 0, i32 0, i32 0
  %894 = bitcast %"class.views::Row"** %893 to %"class.views::LayoutElement"**
  %895 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %894, align 8
  %896 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %895, i64 0, i32 3
  %897 = load i32, i32* %896, align 8
  %898 = add nsw i32 %892, %897
  store i32 %898, i32* %896, align 8
  %899 = add nsw i64 %691, 1
  %900 = icmp slt i64 %899, %784
  br i1 %900, label %901, label %924

901:                                              ; preds = %888
  %902 = xor i64 %691, 1
  %903 = add nsw i64 %902, %784
  %904 = add nsw i64 %784, -2
  %905 = and i64 %903, 1
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %919, label %907

907:                                              ; preds = %901
  %908 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %909 = sub nsw i32 %890, %892
  %910 = icmp slt i32 %909, %892
  %911 = select i1 %910, i32 %890, i32 %892
  %912 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %908, i64 %899, i32 0, i32 0, i32 0
  %913 = bitcast %"class.views::Row"** %912 to %"class.views::LayoutElement"**
  %914 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %913, align 8
  %915 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %914, i64 0, i32 3
  %916 = load i32, i32* %915, align 8
  %917 = add nsw i32 %911, %916
  store i32 %917, i32* %915, align 8
  %918 = add nsw i64 %691, 2
  br label %919

919:                                              ; preds = %907, %901
  %920 = phi i64 [ %918, %907 ], [ %899, %901 ]
  %921 = phi i32 [ %911, %907 ], [ %892, %901 ]
  %922 = phi i32 [ %909, %907 ], [ %890, %901 ]
  %923 = icmp eq i64 %904, %691
  br i1 %923, label %924, label %925

924:                                              ; preds = %919, %925, %888, %887, %781
  store i32 0, i32* %777, align 8
  br label %952

925:                                              ; preds = %919, %925
  %926 = phi i64 [ %950, %925 ], [ %920, %919 ]
  %927 = phi i32 [ %943, %925 ], [ %921, %919 ]
  %928 = phi i32 [ %941, %925 ], [ %922, %919 ]
  %929 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %930 = sub nsw i32 %928, %927
  %931 = icmp slt i32 %930, %927
  %932 = select i1 %931, i32 %928, i32 %927
  %933 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %929, i64 %926, i32 0, i32 0, i32 0
  %934 = bitcast %"class.views::Row"** %933 to %"class.views::LayoutElement"**
  %935 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %934, align 8
  %936 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %935, i64 0, i32 3
  %937 = load i32, i32* %936, align 8
  %938 = add nsw i32 %932, %937
  store i32 %938, i32* %936, align 8
  %939 = add nsw i64 %926, 1
  %940 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %941 = sub nsw i32 %930, %932
  %942 = icmp slt i32 %941, %932
  %943 = select i1 %942, i32 %930, i32 %932
  %944 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %940, i64 %939, i32 0, i32 0, i32 0
  %945 = bitcast %"class.views::Row"** %944 to %"class.views::LayoutElement"**
  %946 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %945, align 8
  %947 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %946, i64 0, i32 3
  %948 = load i32, i32* %947, align 8
  %949 = add nsw i32 %943, %948
  store i32 %949, i32* %947, align 8
  %950 = add nsw i64 %926, 2
  %951 = icmp eq i64 %950, %784
  br i1 %951, label %924, label %925

952:                                              ; preds = %880, %775, %859, %924
  %953 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %683, i64 1
  %954 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %180, align 8
  %955 = icmp eq %"class.std::__1::unique_ptr.333"* %953, %954
  br i1 %955, label %956, label %682

956:                                              ; preds = %674, %952, %177, %473, %678
  %957 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %958 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  %959 = icmp eq %"class.std::__1::unique_ptr.359"* %957, %958
  br i1 %959, label %1029, label %960

960:                                              ; preds = %956
  %961 = ptrtoint %"class.std::__1::unique_ptr.359"* %957 to i64
  %962 = getelementptr %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %958, i64 -1, i32 0, i32 0, i32 0
  %963 = ptrtoint %"class.views::Row"** %962 to i64
  %964 = sub i64 %963, %961
  %965 = lshr i64 %964, 3
  %966 = add nuw nsw i64 %965, 1
  %967 = and i64 %966, 3
  %968 = icmp ult i64 %964, 24
  br i1 %968, label %1009, label %969

969:                                              ; preds = %960
  %970 = sub nsw i64 %966, %967
  br label %971

971:                                              ; preds = %971, %969
  %972 = phi i32 [ 0, %969 ], [ %1005, %971 ]
  %973 = phi %"class.std::__1::unique_ptr.359"* [ %957, %969 ], [ %1006, %971 ]
  %974 = phi i64 [ %970, %969 ], [ %1007, %971 ]
  %975 = bitcast %"class.std::__1::unique_ptr.359"* %973 to %"class.views::LayoutElement"**
  %976 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %975, align 8
  %977 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %976, i64 0, i32 2
  store i32 %972, i32* %977, align 4
  %978 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %975, align 8
  %979 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %978, i64 0, i32 3
  %980 = load i32, i32* %979, align 8
  %981 = add nsw i32 %980, %972
  %982 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %973, i64 1
  %983 = bitcast %"class.std::__1::unique_ptr.359"* %982 to %"class.views::LayoutElement"**
  %984 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %983, align 8
  %985 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %984, i64 0, i32 2
  store i32 %981, i32* %985, align 4
  %986 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %983, align 8
  %987 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %986, i64 0, i32 3
  %988 = load i32, i32* %987, align 8
  %989 = add nsw i32 %988, %981
  %990 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %973, i64 2
  %991 = bitcast %"class.std::__1::unique_ptr.359"* %990 to %"class.views::LayoutElement"**
  %992 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %991, align 8
  %993 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %992, i64 0, i32 2
  store i32 %989, i32* %993, align 4
  %994 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %991, align 8
  %995 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %994, i64 0, i32 3
  %996 = load i32, i32* %995, align 8
  %997 = add nsw i32 %996, %989
  %998 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %973, i64 3
  %999 = bitcast %"class.std::__1::unique_ptr.359"* %998 to %"class.views::LayoutElement"**
  %1000 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %999, align 8
  %1001 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1000, i64 0, i32 2
  store i32 %997, i32* %1001, align 4
  %1002 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %999, align 8
  %1003 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1002, i64 0, i32 3
  %1004 = load i32, i32* %1003, align 8
  %1005 = add nsw i32 %1004, %997
  %1006 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %973, i64 4
  %1007 = add i64 %974, -4
  %1008 = icmp eq i64 %1007, 0
  br i1 %1008, label %1009, label %971

1009:                                             ; preds = %971, %960
  %1010 = phi i32 [ 0, %960 ], [ %1005, %971 ]
  %1011 = phi %"class.std::__1::unique_ptr.359"* [ %957, %960 ], [ %1006, %971 ]
  %1012 = icmp eq i64 %967, 0
  br i1 %1012, label %1027, label %1013

1013:                                             ; preds = %1009, %1013
  %1014 = phi i32 [ %1023, %1013 ], [ %1010, %1009 ]
  %1015 = phi %"class.std::__1::unique_ptr.359"* [ %1024, %1013 ], [ %1011, %1009 ]
  %1016 = phi i64 [ %1025, %1013 ], [ %967, %1009 ]
  %1017 = bitcast %"class.std::__1::unique_ptr.359"* %1015 to %"class.views::LayoutElement"**
  %1018 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1017, align 8
  %1019 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1018, i64 0, i32 2
  store i32 %1014, i32* %1019, align 4
  %1020 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1017, align 8
  %1021 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1020, i64 0, i32 3
  %1022 = load i32, i32* %1021, align 8
  %1023 = add nsw i32 %1022, %1014
  %1024 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1015, i64 1
  %1025 = add i64 %1016, -1
  %1026 = icmp eq i64 %1025, 0
  br i1 %1026, label %1027, label %1013, !llvm.loop !81

1027:                                             ; preds = %1013, %1009
  %1028 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  br label %1029

1029:                                             ; preds = %1027, %956
  %1030 = phi %"class.std::__1::unique_ptr.359"* [ %1028, %1027 ], [ %957, %956 ]
  %1031 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1030, i64 -1, i32 0, i32 0, i32 0
  %1032 = bitcast %"class.views::Row"** %1031 to %"class.views::LayoutElement"**
  %1033 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1032, align 8
  %1034 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1033, i64 0, i32 2
  %1035 = load i32, i32* %1034, align 4
  %1036 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1033, i64 0, i32 3
  %1037 = load i32, i32* %1036, align 8
  %1038 = trunc i64 %47 to i32
  %1039 = add i32 %1038, %44
  %1040 = add i32 %1039, %1035
  %1041 = add i32 %1040, %1037
  %1042 = icmp sgt i32 %1041, 0
  %1043 = select i1 %1042, i32 %1041, i32 0
  store i32 %1043, i32* %23, align 4
  %1044 = xor i1 %1, true
  %1045 = icmp eq i32 %1043, %3
  %1046 = or i1 %1045, %1044
  br i1 %1046, label %1236, label %1047

1047:                                             ; preds = %1029
  %1048 = sub nsw i32 %3, %1043
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1165, label %1050

1050:                                             ; preds = %1047
  %1051 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %1052 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  %1053 = icmp eq %"class.std::__1::unique_ptr.359"* %1051, %1052
  br i1 %1053, label %1165, label %1054

1054:                                             ; preds = %1050
  %1055 = ptrtoint %"class.std::__1::unique_ptr.359"* %1051 to i64
  %1056 = getelementptr %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1052, i64 -1, i32 0, i32 0, i32 0
  %1057 = ptrtoint %"class.views::Row"** %1056 to i64
  %1058 = sub i64 %1057, %1055
  %1059 = lshr i64 %1058, 3
  %1060 = add nuw nsw i64 %1059, 1
  %1061 = and i64 %1060, 3
  %1062 = icmp ult i64 %1058, 24
  br i1 %1062, label %1065, label %1063

1063:                                             ; preds = %1054
  %1064 = sub nsw i64 %1060, %1061
  br label %1094

1065:                                             ; preds = %1094, %1054
  %1066 = phi float [ undef, %1054 ], [ %1130, %1094 ]
  %1067 = phi i32 [ undef, %1054 ], [ %1133, %1094 ]
  %1068 = phi float [ 0.000000e+00, %1054 ], [ %1130, %1094 ]
  %1069 = phi i32 [ 0, %1054 ], [ %1133, %1094 ]
  %1070 = phi %"class.std::__1::unique_ptr.359"* [ %1051, %1054 ], [ %1134, %1094 ]
  %1071 = icmp eq i64 %1061, 0
  br i1 %1071, label %1088, label %1072

1072:                                             ; preds = %1065, %1072
  %1073 = phi float [ %1081, %1072 ], [ %1068, %1065 ]
  %1074 = phi i32 [ %1084, %1072 ], [ %1069, %1065 ]
  %1075 = phi %"class.std::__1::unique_ptr.359"* [ %1085, %1072 ], [ %1070, %1065 ]
  %1076 = phi i64 [ %1086, %1072 ], [ %1061, %1065 ]
  %1077 = bitcast %"class.std::__1::unique_ptr.359"* %1075 to %"class.views::LayoutElement"**
  %1078 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1077, align 8
  %1079 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1078, i64 0, i32 1
  %1080 = load float, float* %1079, align 8
  %1081 = fadd float %1073, %1080
  %1082 = fcmp ogt float %1080, 0.000000e+00
  %1083 = zext i1 %1082 to i32
  %1084 = add nuw nsw i32 %1074, %1083
  %1085 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1075, i64 1
  %1086 = add i64 %1076, -1
  %1087 = icmp eq i64 %1086, 0
  br i1 %1087, label %1088, label %1072, !llvm.loop !82

1088:                                             ; preds = %1072, %1065
  %1089 = phi float [ %1066, %1065 ], [ %1081, %1072 ]
  %1090 = phi i32 [ %1067, %1065 ], [ %1084, %1072 ]
  %1091 = fcmp oeq float %1089, 0.000000e+00
  br i1 %1091, label %1165, label %1092

1092:                                             ; preds = %1088
  %1093 = sitofp i32 %1048 to float
  br label %1137

1094:                                             ; preds = %1094, %1063
  %1095 = phi float [ 0.000000e+00, %1063 ], [ %1130, %1094 ]
  %1096 = phi i32 [ 0, %1063 ], [ %1133, %1094 ]
  %1097 = phi %"class.std::__1::unique_ptr.359"* [ %1051, %1063 ], [ %1134, %1094 ]
  %1098 = phi i64 [ %1064, %1063 ], [ %1135, %1094 ]
  %1099 = bitcast %"class.std::__1::unique_ptr.359"* %1097 to %"class.views::LayoutElement"**
  %1100 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1099, align 8
  %1101 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1100, i64 0, i32 1
  %1102 = load float, float* %1101, align 8
  %1103 = fadd float %1095, %1102
  %1104 = fcmp ogt float %1102, 0.000000e+00
  %1105 = zext i1 %1104 to i32
  %1106 = add nuw nsw i32 %1096, %1105
  %1107 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1097, i64 1
  %1108 = bitcast %"class.std::__1::unique_ptr.359"* %1107 to %"class.views::LayoutElement"**
  %1109 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1108, align 8
  %1110 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1109, i64 0, i32 1
  %1111 = load float, float* %1110, align 8
  %1112 = fadd float %1103, %1111
  %1113 = fcmp ogt float %1111, 0.000000e+00
  %1114 = zext i1 %1113 to i32
  %1115 = add nuw nsw i32 %1106, %1114
  %1116 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1097, i64 2
  %1117 = bitcast %"class.std::__1::unique_ptr.359"* %1116 to %"class.views::LayoutElement"**
  %1118 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1117, align 8
  %1119 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1118, i64 0, i32 1
  %1120 = load float, float* %1119, align 8
  %1121 = fadd float %1112, %1120
  %1122 = fcmp ogt float %1120, 0.000000e+00
  %1123 = zext i1 %1122 to i32
  %1124 = add nuw nsw i32 %1115, %1123
  %1125 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1097, i64 3
  %1126 = bitcast %"class.std::__1::unique_ptr.359"* %1125 to %"class.views::LayoutElement"**
  %1127 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1126, align 8
  %1128 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1127, i64 0, i32 1
  %1129 = load float, float* %1128, align 8
  %1130 = fadd float %1121, %1129
  %1131 = fcmp ogt float %1129, 0.000000e+00
  %1132 = zext i1 %1131 to i32
  %1133 = add nuw nsw i32 %1124, %1132
  %1134 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1097, i64 4
  %1135 = add i64 %1098, -4
  %1136 = icmp eq i64 %1135, 0
  br i1 %1136, label %1065, label %1094

1137:                                             ; preds = %1160, %1092
  %1138 = phi i32 [ %1090, %1092 ], [ %1162, %1160 ]
  %1139 = phi i32 [ %1048, %1092 ], [ %1161, %1160 ]
  %1140 = phi %"class.std::__1::unique_ptr.359"* [ %1051, %1092 ], [ %1163, %1160 ]
  %1141 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1140, i64 0, i32 0, i32 0, i32 0
  %1142 = load %"class.views::Row"*, %"class.views::Row"** %1141, align 8
  %1143 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %1142, i64 0, i32 0, i32 1
  %1144 = load float, float* %1143, align 8
  %1145 = fcmp ogt float %1144, 0.000000e+00
  br i1 %1145, label %1146, label %1160

1146:                                             ; preds = %1137
  %1147 = add nsw i32 %1138, -1
  %1148 = icmp eq i32 %1147, 0
  br i1 %1148, label %1154, label %1149

1149:                                             ; preds = %1146
  %1150 = fdiv float %1144, %1089
  %1151 = fmul float %1150, %1093
  %1152 = fptosi float %1151 to i32
  %1153 = sub nsw i32 %1139, %1152
  br label %1154

1154:                                             ; preds = %1149, %1146
  %1155 = phi i32 [ %1153, %1149 ], [ %1139, %1146 ]
  %1156 = phi i32 [ %1152, %1149 ], [ %1139, %1146 ]
  %1157 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %1142, i64 0, i32 0, i32 3
  %1158 = load i32, i32* %1157, align 8
  %1159 = add nsw i32 %1158, %1156
  store i32 %1159, i32* %1157, align 8
  br label %1160

1160:                                             ; preds = %1154, %1137
  %1161 = phi i32 [ %1155, %1154 ], [ %1139, %1137 ]
  %1162 = phi i32 [ %1147, %1154 ], [ %1138, %1137 ]
  %1163 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1140, i64 1
  %1164 = icmp eq %"class.std::__1::unique_ptr.359"* %1163, %1052
  br i1 %1164, label %1165, label %1137

1165:                                             ; preds = %1160, %1047, %1050, %1088
  %1166 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %24, align 8
  %1167 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %26, align 8
  %1168 = icmp eq %"class.std::__1::unique_ptr.359"* %1166, %1167
  br i1 %1168, label %1236, label %1169

1169:                                             ; preds = %1165
  %1170 = ptrtoint %"class.std::__1::unique_ptr.359"* %1166 to i64
  %1171 = getelementptr %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1167, i64 -1, i32 0, i32 0, i32 0
  %1172 = ptrtoint %"class.views::Row"** %1171 to i64
  %1173 = sub i64 %1172, %1170
  %1174 = lshr i64 %1173, 3
  %1175 = add nuw nsw i64 %1174, 1
  %1176 = and i64 %1175, 3
  %1177 = icmp ult i64 %1173, 24
  br i1 %1177, label %1218, label %1178

1178:                                             ; preds = %1169
  %1179 = sub nsw i64 %1175, %1176
  br label %1180

1180:                                             ; preds = %1180, %1178
  %1181 = phi i32 [ 0, %1178 ], [ %1214, %1180 ]
  %1182 = phi %"class.std::__1::unique_ptr.359"* [ %1166, %1178 ], [ %1215, %1180 ]
  %1183 = phi i64 [ %1179, %1178 ], [ %1216, %1180 ]
  %1184 = bitcast %"class.std::__1::unique_ptr.359"* %1182 to %"class.views::LayoutElement"**
  %1185 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1184, align 8
  %1186 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1185, i64 0, i32 2
  store i32 %1181, i32* %1186, align 4
  %1187 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1184, align 8
  %1188 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1187, i64 0, i32 3
  %1189 = load i32, i32* %1188, align 8
  %1190 = add nsw i32 %1189, %1181
  %1191 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1182, i64 1
  %1192 = bitcast %"class.std::__1::unique_ptr.359"* %1191 to %"class.views::LayoutElement"**
  %1193 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1192, align 8
  %1194 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1193, i64 0, i32 2
  store i32 %1190, i32* %1194, align 4
  %1195 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1192, align 8
  %1196 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1195, i64 0, i32 3
  %1197 = load i32, i32* %1196, align 8
  %1198 = add nsw i32 %1197, %1190
  %1199 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1182, i64 2
  %1200 = bitcast %"class.std::__1::unique_ptr.359"* %1199 to %"class.views::LayoutElement"**
  %1201 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1200, align 8
  %1202 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1201, i64 0, i32 2
  store i32 %1198, i32* %1202, align 4
  %1203 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1200, align 8
  %1204 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1203, i64 0, i32 3
  %1205 = load i32, i32* %1204, align 8
  %1206 = add nsw i32 %1205, %1198
  %1207 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1182, i64 3
  %1208 = bitcast %"class.std::__1::unique_ptr.359"* %1207 to %"class.views::LayoutElement"**
  %1209 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1208, align 8
  %1210 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1209, i64 0, i32 2
  store i32 %1206, i32* %1210, align 4
  %1211 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1208, align 8
  %1212 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1211, i64 0, i32 3
  %1213 = load i32, i32* %1212, align 8
  %1214 = add nsw i32 %1213, %1206
  %1215 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1182, i64 4
  %1216 = add i64 %1183, -4
  %1217 = icmp eq i64 %1216, 0
  br i1 %1217, label %1218, label %1180

1218:                                             ; preds = %1180, %1169
  %1219 = phi i32 [ 0, %1169 ], [ %1214, %1180 ]
  %1220 = phi %"class.std::__1::unique_ptr.359"* [ %1166, %1169 ], [ %1215, %1180 ]
  %1221 = icmp eq i64 %1176, 0
  br i1 %1221, label %1236, label %1222

1222:                                             ; preds = %1218, %1222
  %1223 = phi i32 [ %1232, %1222 ], [ %1219, %1218 ]
  %1224 = phi %"class.std::__1::unique_ptr.359"* [ %1233, %1222 ], [ %1220, %1218 ]
  %1225 = phi i64 [ %1234, %1222 ], [ %1176, %1218 ]
  %1226 = bitcast %"class.std::__1::unique_ptr.359"* %1224 to %"class.views::LayoutElement"**
  %1227 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1226, align 8
  %1228 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1227, i64 0, i32 2
  store i32 %1223, i32* %1228, align 4
  %1229 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %1226, align 8
  %1230 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %1229, i64 0, i32 3
  %1231 = load i32, i32* %1230, align 8
  %1232 = add nsw i32 %1231, %1223
  %1233 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1224, i64 1
  %1234 = add i64 %1225, -1
  %1235 = icmp eq i64 %1234, 0
  br i1 %1235, label %1236, label %1222, !llvm.loop !83

1236:                                             ; preds = %1218, %1222, %1029, %1165, %21
  ret void
}

declare void @_ZN5views4View9SetBoundsEiiii(%"class.views::View"*, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views10GridLayout16GetPreferredSizeEPKNS_4ViewE(%"class.views::GridLayout"* nocapture, %"class.views::View"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = bitcast i64* %3 to i32*
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %5, align 8
  store i32 0, i32* %6, align 4
  call void @_ZNK5views10GridLayout18SizeRowsAndColumnsEbiiPN3gfx4SizeE(%"class.views::GridLayout"* %0, i1 zeroext false, i32 0, i32 0, %"class.gfx::Size"* nonnull %4)
  %7 = load i32, i32* %5, align 8
  %8 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 13, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %7, %9
  %11 = select i1 %10, i32 %9, i32 %7
  %12 = load i32, i32* %6, align 4
  %13 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 13, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  %16 = select i1 %15, i32 %14, i32 %12
  %17 = icmp sgt i32 %11, 0
  %18 = select i1 %17, i32 %11, i32 0
  store i32 %18, i32* %5, align 8
  %19 = icmp sgt i32 %16, 0
  %20 = select i1 %19, i32 %16, i32 0
  store i32 %20, i32* %6, align 4
  %21 = load i64, i64* %3, align 8
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views10GridLayout26GetPreferredHeightForWidthEPKNS_4ViewEi(%"class.views::GridLayout"* nocapture, %"class.views::View"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"class.gfx::Size", align 4
  %5 = bitcast %"class.gfx::Size"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %4, i64 0, i32 1
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  call void @_ZNK5views10GridLayout18SizeRowsAndColumnsEbiiPN3gfx4SizeE(%"class.views::GridLayout"* %0, i1 zeroext false, i32 %2, i32 0, %"class.gfx::Size"* nonnull %4)
  %8 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views10GridLayout33CalculateMasterColumnsIfNecessaryEv(%"class.views::GridLayout"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !64
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %6, align 8
  %8 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 11, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.346"* %7, %9
  br i1 %10, label %17, label %11

11:                                               ; preds = %5, %11
  %12 = phi %"class.std::__1::unique_ptr.346"* [ %15, %11 ], [ %7, %5 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %13, align 8
  tail call void @_ZN5views9ColumnSet22CalculateMasterColumnsEv(%"class.views::ColumnSet"* %14)
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %12, i64 1
  %16 = icmp eq %"class.std::__1::unique_ptr.346"* %15, %9
  br i1 %16, label %17, label %11

17:                                               ; preds = %11, %5, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views10GridLayout29UpdateRemainingHeightFromRowsEPNS_9ViewStateE(%"class.views::GridLayout"* nocapture readonly, %"struct.views::ViewState"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %7, align 8
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %8, i64 %9
  %11 = icmp eq i32 %6, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %2
  %13 = sext i32 %6 to i64
  %14 = shl nsw i64 %13, 3
  %15 = add nsw i64 %14, -8
  %16 = lshr exact i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 7
  %19 = icmp ult i64 %15, 56
  br i1 %19, label %76, label %20

20:                                               ; preds = %12
  %21 = sub nsw i64 %17, %18
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi i32 [ 0, %20 ], [ %72, %22 ]
  %24 = phi %"class.std::__1::unique_ptr.359"* [ %10, %20 ], [ %73, %22 ]
  %25 = phi i64 [ %21, %20 ], [ %74, %22 ]
  %26 = bitcast %"class.std::__1::unique_ptr.359"* %24 to %"class.views::LayoutElement"**
  %27 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %26, align 8
  %28 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %23
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 1
  %32 = bitcast %"class.std::__1::unique_ptr.359"* %31 to %"class.views::LayoutElement"**
  %33 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %32, align 8
  %34 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %33, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, %30
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 2
  %38 = bitcast %"class.std::__1::unique_ptr.359"* %37 to %"class.views::LayoutElement"**
  %39 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %38, align 8
  %40 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, %36
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 3
  %44 = bitcast %"class.std::__1::unique_ptr.359"* %43 to %"class.views::LayoutElement"**
  %45 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %44, align 8
  %46 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %45, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, %42
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 4
  %50 = bitcast %"class.std::__1::unique_ptr.359"* %49 to %"class.views::LayoutElement"**
  %51 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %50, align 8
  %52 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %51, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = add nsw i32 %53, %48
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 5
  %56 = bitcast %"class.std::__1::unique_ptr.359"* %55 to %"class.views::LayoutElement"**
  %57 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %56, align 8
  %58 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %57, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, %54
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 6
  %62 = bitcast %"class.std::__1::unique_ptr.359"* %61 to %"class.views::LayoutElement"**
  %63 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %62, align 8
  %64 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %63, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = add nsw i32 %65, %60
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 7
  %68 = bitcast %"class.std::__1::unique_ptr.359"* %67 to %"class.views::LayoutElement"**
  %69 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %68, align 8
  %70 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %69, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, %66
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %24, i64 8
  %74 = add i64 %25, -8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %22

76:                                               ; preds = %22, %12
  %77 = phi i32 [ undef, %12 ], [ %72, %22 ]
  %78 = phi i32 [ 0, %12 ], [ %72, %22 ]
  %79 = phi %"class.std::__1::unique_ptr.359"* [ %10, %12 ], [ %73, %22 ]
  %80 = icmp eq i64 %18, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %76, %81
  %82 = phi i32 [ %89, %81 ], [ %78, %76 ]
  %83 = phi %"class.std::__1::unique_ptr.359"* [ %90, %81 ], [ %79, %76 ]
  %84 = phi i64 [ %91, %81 ], [ %18, %76 ]
  %85 = bitcast %"class.std::__1::unique_ptr.359"* %83 to %"class.views::LayoutElement"**
  %86 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %85, align 8
  %87 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %86, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add nsw i32 %88, %82
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %83, i64 1
  %91 = add i64 %84, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %81, !llvm.loop !84

93:                                               ; preds = %76, %81, %2
  %94 = phi i32 [ 0, %2 ], [ %77, %76 ], [ %89, %81 ]
  %95 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 14
  %96 = load i32, i32* %95, align 8
  %97 = sub nsw i32 %96, %94
  store i32 %97, i32* %95, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views10GridLayout25DistributeRemainingHeightEPNS_9ViewStateE(%"class.views::GridLayout"* nocapture readonly, %"struct.views::ViewState"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %184, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.views::ViewState", %"struct.views::ViewState"* %1, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, %8
  %12 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %12, align 8
  %14 = sext i32 %8 to i64
  %15 = sext i32 %11 to i64
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %156, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %13, i64 %14
  %19 = shl nsw i64 %15, 3
  %20 = add nsw i64 %19, -8
  %21 = shl nsw i64 %14, 3
  %22 = sub nsw i64 %20, %21
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 3
  %26 = icmp ult i64 %22, 24
  br i1 %26, label %67, label %27

27:                                               ; preds = %17
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %63, %29 ]
  %31 = phi %"class.std::__1::unique_ptr.359"* [ %18, %27 ], [ %64, %29 ]
  %32 = phi i64 [ %28, %27 ], [ %65, %29 ]
  %33 = bitcast %"class.std::__1::unique_ptr.359"* %31 to %"class.views::LayoutElement"**
  %34 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %33, align 8
  %35 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %34, i64 0, i32 1
  %36 = load float, float* %35, align 8
  %37 = fcmp ogt float %36, 0.000000e+00
  %38 = zext i1 %37 to i64
  %39 = add nuw nsw i64 %30, %38
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %31, i64 1
  %41 = bitcast %"class.std::__1::unique_ptr.359"* %40 to %"class.views::LayoutElement"**
  %42 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %41, align 8
  %43 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %42, i64 0, i32 1
  %44 = load float, float* %43, align 8
  %45 = fcmp ogt float %44, 0.000000e+00
  %46 = zext i1 %45 to i64
  %47 = add nuw nsw i64 %39, %46
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %31, i64 2
  %49 = bitcast %"class.std::__1::unique_ptr.359"* %48 to %"class.views::LayoutElement"**
  %50 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %49, align 8
  %51 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %50, i64 0, i32 1
  %52 = load float, float* %51, align 8
  %53 = fcmp ogt float %52, 0.000000e+00
  %54 = zext i1 %53 to i64
  %55 = add nuw nsw i64 %47, %54
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %31, i64 3
  %57 = bitcast %"class.std::__1::unique_ptr.359"* %56 to %"class.views::LayoutElement"**
  %58 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %57, align 8
  %59 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %58, i64 0, i32 1
  %60 = load float, float* %59, align 8
  %61 = fcmp ogt float %60, 0.000000e+00
  %62 = zext i1 %61 to i64
  %63 = add nuw nsw i64 %55, %62
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %31, i64 4
  %65 = add i64 %32, -4
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %29

67:                                               ; preds = %29, %17
  %68 = phi i64 [ undef, %17 ], [ %63, %29 ]
  %69 = phi i64 [ 0, %17 ], [ %63, %29 ]
  %70 = phi %"class.std::__1::unique_ptr.359"* [ %18, %17 ], [ %64, %29 ]
  %71 = icmp eq i64 %25, 0
  br i1 %71, label %86, label %72

72:                                               ; preds = %67, %72
  %73 = phi i64 [ %82, %72 ], [ %69, %67 ]
  %74 = phi %"class.std::__1::unique_ptr.359"* [ %83, %72 ], [ %70, %67 ]
  %75 = phi i64 [ %84, %72 ], [ %25, %67 ]
  %76 = bitcast %"class.std::__1::unique_ptr.359"* %74 to %"class.views::LayoutElement"**
  %77 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %76, align 8
  %78 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %77, i64 0, i32 1
  %79 = load float, float* %78, align 8
  %80 = fcmp ogt float %79, 0.000000e+00
  %81 = zext i1 %80 to i64
  %82 = add nuw nsw i64 %73, %81
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %74, i64 1
  %84 = add i64 %75, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %72, !llvm.loop !85

86:                                               ; preds = %72, %67
  %87 = phi i64 [ %68, %67 ], [ %82, %72 ]
  %88 = trunc i64 %87 to i32
  %89 = icmp sgt i32 %88, 0
  %90 = icmp sgt i32 %10, 0
  br i1 %89, label %91, label %119

91:                                               ; preds = %86
  br i1 %90, label %92, label %184

92:                                               ; preds = %91
  %93 = sdiv i32 %4, %88
  br label %94

94:                                               ; preds = %117, %92
  %95 = phi %"class.std::__1::unique_ptr.359"* [ %13, %92 ], [ %118, %117 ]
  %96 = phi i64 [ %14, %92 ], [ %115, %117 ]
  %97 = phi i32 [ %93, %92 ], [ %114, %117 ]
  %98 = phi i32 [ %4, %92 ], [ %113, %117 ]
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %95, i64 %96, i32 0, i32 0, i32 0
  %100 = bitcast %"class.views::Row"** %99 to %"class.views::LayoutElement"**
  %101 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %100, align 8
  %102 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %101, i64 0, i32 1
  %103 = load float, float* %102, align 8
  %104 = fcmp ogt float %103, 0.000000e+00
  br i1 %104, label %105, label %112

105:                                              ; preds = %94
  %106 = sub nsw i32 %98, %97
  %107 = icmp slt i32 %106, %97
  %108 = select i1 %107, i32 %98, i32 %97
  %109 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %101, i64 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add nsw i32 %110, %108
  store i32 %111, i32* %109, align 8
  br label %112

112:                                              ; preds = %94, %105
  %113 = phi i32 [ %106, %105 ], [ %98, %94 ]
  %114 = phi i32 [ %108, %105 ], [ %97, %94 ]
  %115 = add nsw i64 %96, 1
  %116 = icmp slt i64 %115, %15
  br i1 %116, label %117, label %184

117:                                              ; preds = %112
  %118 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %12, align 8
  br label %94

119:                                              ; preds = %86
  br i1 %90, label %120, label %156

120:                                              ; preds = %119
  %121 = sdiv i32 %4, %10
  %122 = sub nsw i32 %4, %121
  %123 = icmp slt i32 %122, %121
  %124 = select i1 %123, i32 %4, i32 %121
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %13, i64 %14, i32 0, i32 0, i32 0
  %126 = bitcast %"class.views::Row"** %125 to %"class.views::LayoutElement"**
  %127 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %126, align 8
  %128 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %127, i64 0, i32 3
  %129 = load i32, i32* %128, align 8
  %130 = add nsw i32 %129, %124
  store i32 %130, i32* %128, align 8
  %131 = add nsw i64 %14, 1
  %132 = icmp slt i64 %131, %15
  br i1 %132, label %133, label %156

133:                                              ; preds = %120
  %134 = xor i64 %14, 1
  %135 = add nsw i64 %134, %15
  %136 = add nsw i64 %15, -2
  %137 = and i64 %135, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %133
  %140 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %12, align 8
  %141 = sub nsw i32 %122, %124
  %142 = icmp slt i32 %141, %124
  %143 = select i1 %142, i32 %122, i32 %124
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %140, i64 %131, i32 0, i32 0, i32 0
  %145 = bitcast %"class.views::Row"** %144 to %"class.views::LayoutElement"**
  %146 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %145, align 8
  %147 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %146, i64 0, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = add nsw i32 %148, %143
  store i32 %149, i32* %147, align 8
  %150 = add nsw i64 %14, 2
  br label %151

151:                                              ; preds = %133, %139
  %152 = phi i64 [ %131, %133 ], [ %150, %139 ]
  %153 = phi i32 [ %124, %133 ], [ %143, %139 ]
  %154 = phi i32 [ %122, %133 ], [ %141, %139 ]
  %155 = icmp eq i64 %136, %14
  br i1 %155, label %156, label %157

156:                                              ; preds = %151, %157, %120, %6, %119
  store i32 0, i32* %3, align 8
  br label %184

157:                                              ; preds = %151, %157
  %158 = phi i64 [ %182, %157 ], [ %152, %151 ]
  %159 = phi i32 [ %175, %157 ], [ %153, %151 ]
  %160 = phi i32 [ %173, %157 ], [ %154, %151 ]
  %161 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %12, align 8
  %162 = sub nsw i32 %160, %159
  %163 = icmp slt i32 %162, %159
  %164 = select i1 %163, i32 %160, i32 %159
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %161, i64 %158, i32 0, i32 0, i32 0
  %166 = bitcast %"class.views::Row"** %165 to %"class.views::LayoutElement"**
  %167 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %166, align 8
  %168 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %167, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add nsw i32 %169, %164
  store i32 %170, i32* %168, align 8
  %171 = add nsw i64 %158, 1
  %172 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %12, align 8
  %173 = sub nsw i32 %162, %164
  %174 = icmp slt i32 %173, %164
  %175 = select i1 %174, i32 %162, i32 %164
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %172, i64 %171, i32 0, i32 0, i32 0
  %177 = bitcast %"class.views::Row"** %176 to %"class.views::LayoutElement"**
  %178 = load %"class.views::LayoutElement"*, %"class.views::LayoutElement"** %177, align 8
  %179 = getelementptr inbounds %"class.views::LayoutElement", %"class.views::LayoutElement"* %178, i64 0, i32 3
  %180 = load i32, i32* %179, align 8
  %181 = add nsw i32 %180, %175
  store i32 %181, i32* %179, align 8
  %182 = add nsw i64 %158, 2
  %183 = icmp slt i64 %182, %15
  br i1 %183, label %157, label %156

184:                                              ; preds = %112, %91, %156, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.333"* @_ZNSt3__16vectorINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE6insertENS_11__wrap_iterIPKS6_EEOS6_(%"class.std::__1::vector.331"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.333"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.407", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.333"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.333"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.333"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.333"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.333"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.333"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.333"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.333"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.333"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.333"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.333"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"struct.views::ViewState"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.333"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.333"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.333"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.333"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !86

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.333"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.333"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.333"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.333"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.333"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.333"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.333"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.333"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.333"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"struct.views::ViewState"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"struct.views::ViewState"* %75 to i8*
  tail call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.333"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.333"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.333"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.333"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.333"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.333"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.333"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.333"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.333"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.333"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.333"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.333"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.333"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.333"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.333"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.333"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.333"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.333"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.333"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.333"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.333"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.333"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"struct.views::ViewState"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"struct.views::ViewState"* %139 to i8*
  tail call void @_ZdlPv(i8* %143) #14
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.331", %"class.std::__1::vector.331"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.407"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #15
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.333"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.331"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.407"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.331"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #16
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.333"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.333"* null, %"class.std::__1::unique_ptr.333"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.342"** %151 to %"class.std::__1::__compressed_pair.339"**
  store %"class.std::__1::__compressed_pair.339"* %145, %"class.std::__1::__compressed_pair.339"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.333"* null, %"class.std::__1::unique_ptr.333"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.342"** %151 to %"class.std::__1::__compressed_pair.339"**
  store %"class.std::__1::__compressed_pair.339"* %145, %"class.std::__1::__compressed_pair.339"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #16
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #14
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.333"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.333"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.333"* %191, %"class.std::__1::unique_ptr.333"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %191, i64 %189
  store %"class.std::__1::unique_ptr.333"* %192, %"class.std::__1::unique_ptr.333"** %149, align 8
  store %"class.std::__1::unique_ptr.333"* %192, %"class.std::__1::unique_ptr.333"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %191, i64 %190
  store %"class.std::__1::unique_ptr.333"* %193, %"class.std::__1::unique_ptr.333"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.407"* nonnull %5, %"class.std::__1::unique_ptr.333"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.333"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.333"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"struct.views::ViewState"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.333"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.333"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.333"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.333"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %216, i64 -1
  store %"class.std::__1::unique_ptr.333"* %217, %"class.std::__1::unique_ptr.333"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !87

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.333"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.333"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.333"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.333"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.333"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.333"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.333"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %234, i64 -1
  store %"class.std::__1::unique_ptr.333"* %235, %"class.std::__1::unique_ptr.333"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.333"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.333"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %242, i64 -1
  store %"class.std::__1::unique_ptr.333"* %243, %"class.std::__1::unique_ptr.333"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.333"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.333"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %250, i64 -1
  store %"class.std::__1::unique_ptr.333"* %251, %"class.std::__1::unique_ptr.333"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.333"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.333"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %258, i64 -1
  store %"class.std::__1::unique_ptr.333"* %259, %"class.std::__1::unique_ptr.333"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.333"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.333"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.333"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.333"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.333"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.333"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.333"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.333"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"struct.views::ViewState"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.333"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.333"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %289, i64 1
  store %"class.std::__1::unique_ptr.333"* %290, %"class.std::__1::unique_ptr.333"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.333"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !88

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.333"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.333"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.333"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.333"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.333"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %308, i64 1
  store %"class.std::__1::unique_ptr.333"* %309, %"class.std::__1::unique_ptr.333"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.333"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.333"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %315, i64 1
  store %"class.std::__1::unique_ptr.333"* %316, %"class.std::__1::unique_ptr.333"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.333"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.333"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %322, i64 1
  store %"class.std::__1::unique_ptr.333"* %323, %"class.std::__1::unique_ptr.333"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.333"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.333"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %329, i64 1
  store %"class.std::__1::unique_ptr.333"* %330, %"class.std::__1::unique_ptr.333"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.333"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.333"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.333"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.333"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.333"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.333"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.333"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.407"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.333"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.333"*
  %353 = icmp eq %"class.std::__1::unique_ptr.333"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.333"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %355, i64 -1
  store %"class.std::__1::unique_ptr.333"* %356, %"class.std::__1::unique_ptr.333"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %357, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %357, align 8
  %359 = icmp eq %"struct.views::ViewState"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"struct.views::ViewState"* %358 to i8*
  call void @_ZdlPv(i8* %361) #14
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.333"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.333"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.333"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.333"* %368 to i8*
  call void @_ZdlPv(i8* %371) #14
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #15
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.333"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.333"* %374
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.views::ColumnSet"* @_ZN5views10GridLayout21GetLastValidColumnSetEv(%"class.views::GridLayout"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %2, align 8
  %4 = getelementptr inbounds %"class.views::GridLayout", %"class.views::GridLayout"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %3, i64 %6
  br label %8

8:                                                ; preds = %11, %1
  %9 = phi %"class.std::__1::unique_ptr.359"* [ %7, %1 ], [ %12, %11 ]
  %10 = icmp eq %"class.std::__1::unique_ptr.359"* %9, %3
  br i1 %10, label %18, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %9, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.views::Row"*, %"class.views::Row"** %13, align 8
  %15 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %14, i64 0, i32 2
  %16 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %15, align 8
  %17 = icmp eq %"class.views::ColumnSet"* %16, null
  br i1 %17, label %8, label %18

18:                                               ; preds = %8, %11
  %19 = phi %"class.views::ColumnSet"* [ %16, %11 ], [ null, %8 ]
  ret %"class.views::ColumnSet"* %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views6ColumnD2Ev(%"class.views::Column"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views6ColumnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.views::Column"**, %"class.views::Column"*** %3, align 8
  %5 = icmp eq %"class.views::Column"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.views::Column"** %4 to i64
  %8 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = bitcast %"class.views::Column"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.views::Column"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views6ColumnD0Ev(%"class.views::Column"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5views6ColumnE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.views::Column"**, %"class.views::Column"*** %3, align 8
  %5 = icmp eq %"class.views::Column"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.views::Column"** %4 to i64
  %8 = getelementptr inbounds %"class.views::Column", %"class.views::Column"* %0, i64 0, i32 8, i32 0, i32 1
  %9 = bitcast %"class.views::Column"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.views::Column"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.views::Column"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  ret void
}

declare void @_ZN5views13LayoutManager16InvalidateLayoutEv(%"class.views::LayoutManager"*) unnamed_addr #5

declare i64 @_ZNK5views13LayoutManager14GetMinimumSizeEPKNS_4ViewE(%"class.views::LayoutManager"*, %"class.views::View"*) unnamed_addr #5

declare void @_ZNK5views13LayoutManager16GetAvailableSizeEPKNS_4ViewES3_(%"class.views::SizeBounds"* sret, %"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #5

declare void @_ZN5views13LayoutManager17ViewVisibilitySetEPNS_4ViewES2_bb(%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*, i1 zeroext, i1 zeroext) unnamed_addr #5

declare void @_ZNK5views13LayoutManager25GetChildViewsInPaintOrderEPKNS_4ViewE(%"class.std::__1::vector.71"* sret, %"class.views::LayoutManager"*, %"class.views::View"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5views6ColumnENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.views::Column"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !89

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.views::Column"*, %"class.views::Column"** %142, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %142, align 8
  %144 = icmp eq %"class.views::Column"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.views::Column"* %143 to void (%"class.views::Column"*)***
  %147 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %147, i64 1
  %149 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %148, align 8
  tail call void %149(%"class.views::Column"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5views9ColumnSetEEclEPS2_(%"struct.std::__1::default_delete.350"*, %"class.views::ColumnSet"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.views::ColumnSet"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.views::Column"**, %"class.views::Column"*** %5, align 8
  %7 = icmp eq %"class.views::Column"** %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = ptrtoint %"class.views::Column"** %6 to i64
  %10 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast %"class.views::Column"*** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %"class.views::Column"** %6 to i8*
  tail call void @_ZdlPv(i8* %12) #14
  br label %13

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 3, i32 0, i32 0
  %15 = load %"struct.views::ViewState"**, %"struct.views::ViewState"*** %14, align 8
  %16 = icmp eq %"struct.views::ViewState"** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"struct.views::ViewState"** %15 to i64
  %19 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 3, i32 0, i32 1
  %20 = bitcast %"struct.views::ViewState"*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.views::ViewState"** %15 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 2
  %24 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr"* %25, null
  br i1 %26, label %50, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::unique_ptr"* %25 to i8*
  %29 = getelementptr inbounds %"class.views::ColumnSet", %"class.views::ColumnSet"* %1, i64 0, i32 2, i32 0, i32 1
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr"* %30, %25
  br i1 %31, label %48, label %32

32:                                               ; preds = %27, %43
  %33 = phi %"class.std::__1::unique_ptr"* [ %34, %43 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.views::Column"*, %"class.views::Column"** %35, align 8
  store %"class.views::Column"* null, %"class.views::Column"** %35, align 8
  %37 = icmp eq %"class.views::Column"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.views::Column"* %36 to void (%"class.views::Column"*)***
  %40 = load void (%"class.views::Column"*)**, void (%"class.views::Column"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %40, i64 1
  %42 = load void (%"class.views::Column"*)*, void (%"class.views::Column"*)** %41, align 8
  tail call void %42(%"class.views::Column"* nonnull %36) #15
  br label %43

43:                                               ; preds = %38, %32
  %44 = icmp eq %"class.std::__1::unique_ptr"* %34, %25
  br i1 %44, label %45, label %32

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.1"* %23 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %27
  %49 = phi i8* [ %47, %45 ], [ %28, %27 ]
  store %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"** %29, align 8
  tail call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %22, %48
  %51 = bitcast %"class.views::ColumnSet"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5views9ColumnSetENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.344"*, %"class.std::__1::unique_ptr.346"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.346"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.344"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.344"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.346"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.346"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.346"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.346"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.346"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.346"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.346"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.344", %"class.std::__1::vector.344"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.346"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.346"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.views::ColumnSet"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.346"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.346"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.346"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.346"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !90

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.346"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.346"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.346"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.346"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.346"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.346"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.346"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.346"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.346"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.346"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.346"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.346"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.346"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.346"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.346"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.346"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.346"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.346"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.346"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.346"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.346"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.346"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.346"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.346"*, %"class.std::__1::unique_ptr.346"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.346"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.346"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.346"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.346"*
  %138 = icmp eq %"class.std::__1::unique_ptr.346"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.346"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.346"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.views::ColumnSet"*, %"class.views::ColumnSet"** %142, align 8
  store %"class.views::ColumnSet"* null, %"class.views::ColumnSet"** %142, align 8
  %144 = icmp eq %"class.views::ColumnSet"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.346"* %141 to %"struct.std::__1::default_delete.350"*
  tail call void @_ZNKSt3__114default_deleteIN5views9ColumnSetEEclEPS2_(%"struct.std::__1::default_delete.350"* %146, %"class.views::ColumnSet"* nonnull %143) #15
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.346"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #14
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views13LayoutElementD2Ev(%"class.views::LayoutElement"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views3RowD0Ev(%"class.views::Row"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.views::Row"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views3Row9ResetSizeEv(%"class.views::Row"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %0, i64 0, i32 4
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %0, i64 0, i32 3
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.views::Row", %"class.views::Row"* %0, i64 0, i32 0, i32 3
  store i32 %5, i32* %6, align 8
  ret void
}

declare void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"*, %"class.views::View"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN5views9ViewStateENS_14default_deleteIS3_EEEERNS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.407"*, %"class.std::__1::unique_ptr.333"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.333"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.333"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.407", %"struct.std::__1::__split_buffer.407"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.333"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.333"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.333"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.333"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.333"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.333"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.333"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.333"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"struct.views::ViewState"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"struct.views::ViewState"* %31 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.333"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.333"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.333"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.333"* %44, %"class.std::__1::unique_ptr.333"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %43, i64 %21
  store %"class.std::__1::unique_ptr.333"* %45, %"class.std::__1::unique_ptr.333"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.333"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.407"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #14
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.333"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.333"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.333"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.333"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.333"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.333"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.333"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.333"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.333"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !91

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.333"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.333"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.333"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.333"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.333"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.333"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.333"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.333"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.333"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.333"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.333"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.333"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.333"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.333"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.333"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.333"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.333"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.333"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.333"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.333"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.333"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.333"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.333"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.333"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.333"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.333"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.333"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.333"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.333"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.333"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"struct.views::ViewState"*, %"struct.views::ViewState"** %168, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %168, align 8
  %170 = icmp eq %"struct.views::ViewState"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"struct.views::ViewState"* %169 to i8*
  tail call void @_ZdlPv(i8* %172) #14
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.333"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.333"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.333"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #14
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.333"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.333"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"struct.views::ViewState"* null, %"struct.views::ViewState"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.333"* %185, i64 1
  store %"class.std::__1::unique_ptr.333"* %186, %"class.std::__1::unique_ptr.333"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5views3RowENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.357"*, %"class.std::__1::unique_ptr.359"* dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.359"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.357"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.357"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.359"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.359"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.359"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.359"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.359"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.359"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.359"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.357", %"class.std::__1::vector.357"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.359"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.359"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.views::Row"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.359"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.359"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.359"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.359"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !92

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.359"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.359"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.359"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.359"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.359"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.359"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.359"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.359"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.359"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.359"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.359"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.359"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.359"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.359"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.359"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.359"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.359"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.359"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.359"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.359"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.359"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.359"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.359"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.359"*, %"class.std::__1::unique_ptr.359"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.359"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.359"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.359"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.359"*
  %138 = icmp eq %"class.std::__1::unique_ptr.359"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.359"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.359"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.views::Row"*, %"class.views::Row"** %142, align 8
  store %"class.views::Row"* null, %"class.views::Row"** %142, align 8
  %144 = icmp eq %"class.views::Row"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.views::Row"* %143 to void (%"class.views::Row"*)***
  %147 = load void (%"class.views::Row"*)**, void (%"class.views::Row"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %147, i64 1
  %149 = load void (%"class.views::Row"*)*, void (%"class.views::Row"*)** %148, align 8
  tail call void %149(%"class.views::Row"* nonnull %143) #15
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.359"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !11}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !11}
!29 = distinct !{!29, !3}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !11}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !11}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !11}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !11}
!46 = distinct !{!46, !3}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !11}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !11}
!55 = distinct !{!55, !3}
!56 = distinct !{!56, !3}
!57 = distinct !{!57, !11}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !3}
!60 = distinct !{!60, !3}
!61 = distinct !{!61, !3}
!62 = distinct !{!62, !3}
!63 = distinct !{!63, !3}
!64 = !{i8 0, i8 2}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !3}
!67 = distinct !{!67, !3}
!68 = distinct !{!68, !3}
!69 = distinct !{!69, !3}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !3}
!72 = distinct !{!72, !3}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !3}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !3}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !3}
!80 = distinct !{!80, !3}
!81 = distinct !{!81, !3}
!82 = distinct !{!82, !3}
!83 = distinct !{!83, !3}
!84 = distinct !{!84, !3}
!85 = distinct !{!85, !3}
!86 = distinct !{!86, !3}
!87 = distinct !{!87, !3}
!88 = distinct !{!88, !3}
!89 = distinct !{!89, !3}
!90 = distinct !{!90, !3}
!91 = distinct !{!91, !3}
!92 = distinct !{!92, !3}
