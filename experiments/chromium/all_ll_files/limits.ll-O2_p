; ModuleID = '../../third_party/vulkan-deps/glslang/src/glslang/MachineIndependent/limits.cpp'
source_filename = "../../third_party/vulkan-deps/glslang/src/glslang/MachineIndependent/limits.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.glslang::TInductiveTraverser" = type { %"class.glslang::TIntermTraverser", i64, %"class.glslang::TSymbolTable"*, i8, %"struct.glslang::TSourceLoc" }
%"class.glslang::TIntermTraverser" = type { i32 (...)**, i8, i8, i8, i8, i32, i32, %"class.glslang::TVector" }
%"class.glslang::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.TIntermNode**, %class.TIntermNode**, %"class.std::__1::__compressed_pair.6" }
%class.TIntermNode = type { i32 (...)**, %"struct.glslang::TSourceLoc" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.TIntermNode** }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.glslang::pool_allocator.9" }
%"class.glslang::pool_allocator.9" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TPoolAllocator" = type { i64, i64, i64, i64, i64, %"struct.glslang::TPoolAllocator::tHeader"*, %"struct.glslang::TPoolAllocator::tHeader"*, %"class.std::__1::vector.1", i32, i64 }
%"struct.glslang::TPoolAllocator::tHeader" = type { %"struct.glslang::TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.glslang::TPoolAllocator::tAllocState"*, %"struct.glslang::TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.3" }
%"struct.glslang::TPoolAllocator::tAllocState" = type { i64, %"struct.glslang::TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.glslang::TPoolAllocator::tAllocState"* }
%"class.glslang::TSymbolTable" = type { %"class.std::__1::vector.10", i64, i8, i8, i32 }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.glslang::TSymbolTableLevel"**, %"class.glslang::TSymbolTableLevel"**, %"class.std::__1::__compressed_pair.19" }
%"class.glslang::TSymbolTableLevel" = type <{ %"class.std::__1::map", i32*, i32, i8, [3 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.glslang::pool_allocator.15" }
%"class.glslang::pool_allocator.15" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.glslang::TSymbolTableLevel"** }
%"struct.glslang::TSourceLoc" = type { %"class.std::__1::basic_string"*, i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.glslang::pool_allocator" }
%"class.glslang::pool_allocator" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TIntermBinary" = type { %"class.glslang::TIntermOperator", %"class.glslang::TIntermTyped"*, %"class.glslang::TIntermTyped"* }
%"class.glslang::TIntermOperator" = type { %"class.glslang::TIntermTyped", i32, i32 }
%"class.glslang::TIntermTyped" = type { %class.TIntermNode, %"class.glslang::TType" }
%"class.glslang::TType" = type { i32 (...)**, i24, [4 x i8], %"class.glslang::TQualifier", %"struct.glslang::TArraySizes"*, %union.anon.31, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.glslang::TSampler", %"struct.glslang::TArraySizes"* }
%"class.glslang::TQualifier" = type <{ i8*, i64, i32, i32, i24, i64, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, [3 x i8] }>
%union.anon.31 = type { %"class.glslang::TVector.32"* }
%"class.glslang::TVector.32" = type { %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.glslang::TTypeLoc"*, %"struct.glslang::TTypeLoc"*, %"class.std::__1::__compressed_pair.35" }
%"struct.glslang::TTypeLoc" = type { %"class.glslang::TType"*, %"struct.glslang::TSourceLoc" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.glslang::TTypeLoc"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.glslang::pool_allocator.38" }
%"class.glslang::pool_allocator.38" = type { %"class.glslang::TPoolAllocator"* }
%"struct.glslang::TSampler" = type { i32 }
%"struct.glslang::TArraySizes" = type <{ %"struct.glslang::TSmallArrayVector", i32, i8, [3 x i8] }>
%"struct.glslang::TSmallArrayVector" = type { i32 (...)**, %"class.glslang::TVector.24"* }
%"class.glslang::TVector.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.glslang::TArraySize"*, %"struct.glslang::TArraySize"*, %"class.std::__1::__compressed_pair.27" }
%"struct.glslang::TArraySize" = type { i32, %"class.glslang::TIntermTyped"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.glslang::TArraySize"* }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.glslang::pool_allocator.30" }
%"class.glslang::pool_allocator.30" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TIntermSymbol" = type { %"class.glslang::TIntermTyped", i64, i32, %"class.std::__1::basic_string", %"class.glslang::TConstUnionArray", %"class.glslang::TIntermTyped"* }
%"class.glslang::TConstUnionArray" = type { i32 (...)**, %"class.glslang::TVector.39"* }
%"class.glslang::TVector.39" = type { %"class.std::__1::vector.40" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.glslang::TConstUnion"*, %"class.glslang::TConstUnion"*, %"class.std::__1::__compressed_pair.43" }
%"class.glslang::TConstUnion" = type <{ %union.anon.42, i32, [4 x i8] }>
%union.anon.42 = type { i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.glslang::TConstUnion"* }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.glslang::pool_allocator.46" }
%"class.glslang::pool_allocator.46" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TIntermUnary" = type { %"class.glslang::TIntermOperator", %"class.glslang::TIntermTyped"* }
%"class.glslang::TIntermAggregate" = type { %"class.glslang::TIntermOperator", %"class.glslang::TVector", %"class.glslang::TVector.47", %"class.std::__1::basic_string", i8, i8, i8, %"class.glslang::TPragmaTable"* }
%"class.glslang::TVector.47" = type { %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i32*, i32*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.glslang::pool_allocator.53" }
%"class.glslang::pool_allocator.53" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TPragmaTable" = type { %"class.glslang::TMap" }
%"class.glslang::TMap" = type { %"class.std::__1::map.54" }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.glslang::pool_allocator.58" }
%"class.glslang::pool_allocator.58" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TSymbol" = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i64, %"class.glslang::TVector.62"*, i8, [7 x i8] }>
%"class.glslang::TVector.62" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { i8**, i8**, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.66" = type { i8** }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.glslang::pool_allocator.68" }
%"class.glslang::pool_allocator.68" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TFunction" = type <{ %"class.glslang::TSymbol.base", [7 x i8], %"class.glslang::TVector.69", %"class.glslang::TType", i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, i8, i8, i8, i32, [4 x i8] }>
%"class.glslang::TSymbol.base" = type <{ i32 (...)**, %"class.std::__1::basic_string"*, i64, %"class.glslang::TVector.62"*, i8 }>
%"class.glslang::TVector.69" = type { %"class.std::__1::vector.70" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.glslang::TParameter"*, %"struct.glslang::TParameter"*, %"class.std::__1::__compressed_pair.72" }
%"struct.glslang::TParameter" = type { %"class.std::__1::basic_string"*, %"class.glslang::TType"*, %"class.glslang::TIntermTyped"* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73", %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.glslang::TParameter"* }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.glslang::pool_allocator.75" }
%"class.glslang::pool_allocator.75" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TParseContext" = type { %"class.glslang::TParseContextBase", i8, %"class.std::__1::basic_string"*, %"class.glslang::TQualifier", [21 x i32], %struct.TBuiltInResource, %struct.TLimits*, [5376 x i32], %"class.glslang::TPrecisionManager", %"class.glslang::TQualifier", %"class.glslang::TQualifier", %"class.glslang::TQualifier", %"class.glslang::TQualifier", %"class.glslang::TQualifier", %"class.std::__1::basic_string", i32*, i8, %"class.std::__1::set.309", %"class.glslang::TVector.319", %"class.std::__1::map.326", %"class.std::__1::map.326", %"class.glslang::TVector.257" }
%"class.glslang::TParseContextBase" = type { %"class.glslang::TParseVersions", i8*, %"class.glslang::TSymbolTable"*, i32, i32, i32, i32, i32, %"class.glslang::TType"*, i8, i8, %"class.glslang::TList", %"class.glslang::TList.250", %"struct.glslang::TPragma", i32, i32, i8, %"class.glslang::TVector.257", %"class.glslang::TScanContext"*, %"class.glslang::TPpContext"*, %struct.TBuiltInResource, %struct.TLimits*, %"class.std::__1::basic_string", %"class.std::__1::function", %"class.std::__1::function.264", %"class.std::__1::function.271", %"class.std::__1::function.276", %"class.std::__1::function.281", %"class.glslang::TVariable"*, i32, i32, i32, %"class.glslang::TMap.294", i32, %"class.glslang::TMap.303" }
%"class.glslang::TParseVersions" = type { i32 (...)**, i8, i32, %class.TInfoSink*, i32, i32, %"struct.glslang::SpvVersion", %"class.glslang::TIntermediate"*, %"class.glslang::TMap.226", %"class.glslang::TMap.235", i32, i32, %"class.glslang::TInputScanner"* }
%class.TInfoSink = type { %"class.glslang::TInfoSinkBase", %"class.glslang::TInfoSinkBase" }
%"class.glslang::TInfoSinkBase" = type <{ %"class.std::__1::basic_string.76", i32, [4 x i8] }>
%"class.std::__1::basic_string.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.79 }
%union.anon.79 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.glslang::SpvVersion" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"class.glslang::TIntermediate" = type { i32, %"class.std::__1::basic_string.76", %"class.std::__1::basic_string.76", %"class.std::__1::list", i32, i32, %"struct.glslang::SpvVersion", %class.TIntermNode*, %"class.std::__1::set", %"class.glslang::MustBeAssigned", i32, i32, i32, i8, i8, i8, i8, i8, [3 x i32], [3 x i8], [3 x i32], i64, %"class.std::__1::basic_string.76", %"class.std::__1::basic_string.76", i32, i32, i32, i8*, i8*, i32, i8, i32, i32, i32, i32, i8, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, %"class.std::__1::vector.97", i8, i8, i8, i32, i32, i32, i32, i8, %"struct.std::__1::array", %"struct.std::__1::array.111", %"class.std::__1::vector.123", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::set.130", i32, i8, i8, i8, i8, %"class.std::__1::unordered_map", i32, %"class.glslang::TNumericFeatures", %"class.std::__1::unordered_map.155", %"class.std::__1::unordered_set", %"class.std::__1::vector.203", [4 x %"class.std::__1::vector.210"], [2 x %"class.std::__1::vector.99"], %"class.std::__1::set.130", %"class.std::__1::basic_string.76", %"class.std::__1::basic_string.76", %"class.std::__1::map.217", %"class.glslang::TProcesses" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.84" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::MustBeAssigned" = type <{ %struct.TBuiltInResource, i8, [3 x i8] }>
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.glslang::TXfbBuffer"*, %"struct.glslang::TXfbBuffer"*, %"class.std::__1::__compressed_pair.106" }
%"struct.glslang::TXfbBuffer" = type <{ %"class.std::__1::vector.99", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"struct.glslang::TRange"*, %"struct.glslang::TRange"*, %"class.std::__1::__compressed_pair.101" }
%"struct.glslang::TRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.glslang::TRange"* }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.glslang::TXfbBuffer"* }
%"struct.std::__1::array" = type { [6 x i32] }
%"struct.std::__1::array.111" = type { [6 x %"class.std::__1::map.112"] }
%"class.std::__1::map.112" = type { %"class.std::__1::__tree.113" }
%"class.std::__1::__tree.113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.std::__1::basic_string.76"*, %"class.std::__1::basic_string.76"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.std::__1::basic_string.76"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.152", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139", %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { float }
%"class.glslang::TNumericFeatures" = type { i32 }
%"class.std::__1::unordered_map.155" = type { %"class.std::__1::__hash_table.156" }
%"class.std::__1::__hash_table.156" = type <{ %"class.std::__1::unique_ptr.157", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159", %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.160"** }
%"struct.std::__1::__hash_node_base.160" = type { %"struct.std::__1::__hash_node_base.160"* }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.std::__1::__bucket_list_deallocator.162" }
%"class.std::__1::__bucket_list_deallocator.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.160" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.179" }
%"class.std::__1::__hash_table.179" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base.183"** }
%"struct.std::__1::__hash_node_base.183" = type { %"struct.std::__1::__hash_node_base.183"* }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::__bucket_list_deallocator.185" }
%"class.std::__1::__bucket_list_deallocator.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.183" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::vector.203" = type { %"class.std::__1::__vector_base.204" }
%"class.std::__1::__vector_base.204" = type { %"struct.glslang::TOffsetRange"*, %"struct.glslang::TOffsetRange"*, %"class.std::__1::__compressed_pair.205" }
%"struct.glslang::TOffsetRange" = type { %"struct.glslang::TRange", %"struct.glslang::TRange" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.glslang::TOffsetRange"* }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.glslang::TIoRange"*, %"struct.glslang::TIoRange"*, %"class.std::__1::__compressed_pair.212" }
%"struct.glslang::TIoRange" = type { %"struct.glslang::TRange", %"struct.glslang::TRange", i32, i32 }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.glslang::TIoRange"* }
%"class.std::__1::set.130" = type { %"class.std::__1::__tree.131" }
%"class.std::__1::__tree.131" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::map.217" = type { %"class.std::__1::__tree.218" }
%"class.std::__1::__tree.218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TProcesses" = type { %"class.std::__1::vector.123" }
%"class.glslang::TMap.226" = type { %"class.std::__1::map.227" }
%"class.std::__1::map.227" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.glslang::pool_allocator.231" }
%"class.glslang::pool_allocator.231" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TMap.235" = type { %"class.std::__1::map.236" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.glslang::pool_allocator.240" }
%"class.glslang::pool_allocator.240" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TInputScanner" = type <{ i32 (...)**, i32, [4 x i8], i8**, i64*, i32, [4 x i8], i64, %"struct.glslang::TSourceLoc"*, i32, i32, %"struct.glslang::TSourceLoc", i8, i8, [6 x i8] }>
%"class.glslang::TList" = type { %"class.std::__1::list.244" }
%"class.std::__1::list.244" = type { %"class.std::__1::__list_imp.245" }
%"class.std::__1::__list_imp.245" = type { %"struct.std::__1::__list_node_base.246", %"class.std::__1::__compressed_pair.247" }
%"struct.std::__1::__list_node_base.246" = type { %"struct.std::__1::__list_node_base.246"*, %"struct.std::__1::__list_node_base.246"* }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.glslang::pool_allocator.249" }
%"class.glslang::pool_allocator.249" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TList.250" = type { %"class.std::__1::list.251" }
%"class.std::__1::list.251" = type { %"class.std::__1::__list_imp.252" }
%"class.std::__1::__list_imp.252" = type { %"struct.std::__1::__list_node_base.253", %"class.std::__1::__compressed_pair.254" }
%"struct.std::__1::__list_node_base.253" = type { %"struct.std::__1::__list_node_base.253"*, %"struct.std::__1::__list_node_base.253"* }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.glslang::pool_allocator.256" }
%"class.glslang::pool_allocator.256" = type { %"class.glslang::TPoolAllocator"* }
%"struct.glslang::TPragma" = type { i8, i8, %"class.glslang::TPragmaTable" }
%"class.glslang::TScanContext" = type opaque
%"class.glslang::TPpContext" = type opaque
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i32, i1, i32, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::function.264" = type { %"class.std::__1::__function::__policy_func.268" }
%"class.std::__1::__function::__policy_func.268" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.269", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.269" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, %"class.glslang::TVector.270"*)* }
%"class.glslang::TVector.270" = type opaque
%"class.std::__1::function.271" = type { %"class.std::__1::__function::__policy_func.274" }
%"class.std::__1::__function::__policy_func.274" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.275", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.275" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i32, i8*)* }
%"class.std::__1::function.276" = type { %"class.std::__1::__function::__policy_func.279" }
%"class.std::__1::__function::__policy_func.279" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.280", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.280" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, i8*)* }
%"class.std::__1::function.281" = type { %"class.std::__1::__function::__policy_func.285" }
%"class.std::__1::__function::__policy_func.285" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.286", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.286" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*)* }
%"class.glslang::TVariable" = type <{ %"class.glslang::TSymbol.base", [7 x i8], %"class.glslang::TType", i8, [7 x i8], %"class.glslang::TConstUnionArray", %"class.glslang::TIntermTyped"*, %"class.glslang::TVector.287"*, i32, [4 x i8] }>
%"class.glslang::TVector.287" = type { %"class.std::__1::vector.288" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"class.glslang::TVector.62"*, %"class.glslang::TVector.62"*, %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291", %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.glslang::TVector.62"* }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.glslang::pool_allocator.293" }
%"class.glslang::pool_allocator.293" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TMap.294" = type { %"class.std::__1::map.295" }
%"class.std::__1::map.295" = type { %"class.std::__1::__tree.296" }
%"class.std::__1::__tree.296" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.glslang::pool_allocator.299" }
%"class.glslang::pool_allocator.299" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TMap.303" = type { %"class.std::__1::map.304" }
%"class.std::__1::map.304" = type { %"class.std::__1::__tree.305" }
%"class.std::__1::__tree.305" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.306", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.glslang::pool_allocator.308" }
%"class.glslang::pool_allocator.308" = type { %"class.glslang::TPoolAllocator"* }
%struct.TBuiltInResource = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.TLimits }
%struct.TLimits = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.glslang::TPrecisionManager" = type <{ i32 (...)**, i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::set.309" = type { %"class.std::__1::__tree.310" }
%"class.std::__1::__tree.310" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.311", %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TVector.319" = type { %"class.std::__1::vector.320" }
%"class.std::__1::vector.320" = type { %"class.std::__1::__vector_base.321" }
%"class.std::__1::__vector_base.321" = type { %"class.glslang::TIntermTyped"**, %"class.glslang::TIntermTyped"**, %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323", %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.glslang::TIntermTyped"** }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.glslang::pool_allocator.325" }
%"class.glslang::pool_allocator.325" = type { %"class.glslang::TPoolAllocator"* }
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.glslang::TVector.257" = type { %"class.std::__1::vector.258" }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"class.glslang::TSymbol"**, %"class.glslang::TSymbol"**, %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.glslang::TSymbol"** }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.glslang::pool_allocator.263" }
%"class.glslang::pool_allocator.263" = type { %"class.glslang::TPoolAllocator"* }
%"class.glslang::TIndexTraverser" = type { %"class.glslang::TIntermTraverser", %"class.std::__1::set.309"*, i8, %"struct.glslang::TSourceLoc" }
%"class.std::__1::__tree_node.338" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.glslang::TIntermConstantUnion" = type <{ %"class.glslang::TIntermTyped", %"class.glslang::TConstUnionArray", i8, [7 x i8] }>
%"class.glslang::TIntermSelection" = type <{ %"class.glslang::TIntermTyped", %"class.glslang::TIntermTyped"*, %class.TIntermNode*, %class.TIntermNode*, i8, i8, i8, [5 x i8] }>
%"class.glslang::TIntermLoop" = type <{ %class.TIntermNode, %class.TIntermNode*, %"class.glslang::TIntermTyped"*, %"class.glslang::TIntermTyped"*, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.glslang::TIntermBranch" = type { %class.TIntermNode, i32, %"class.glslang::TIntermTyped"* }
%"class.glslang::TIntermSwitch" = type <{ %class.TIntermNode, %"class.glslang::TIntermTyped"*, %"class.glslang::TIntermAggregate"*, i8, i8, [6 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.glslang::TSymbol"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN7glslang16TIntermTraverserD2Ev = comdat any

$_ZN7glslang19TInductiveTraverserD0Ev = comdat any

$_ZN7glslang16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE = comdat any

$_ZN7glslang16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE = comdat any

$_ZN7glslang16TIntermTraverser14visitSelectionENS_6TVisitEPNS_16TIntermSelectionE = comdat any

$_ZN7glslang16TIntermTraverser9visitLoopENS_6TVisitEPNS_11TIntermLoopE = comdat any

$_ZN7glslang16TIntermTraverser11visitBranchENS_6TVisitEPNS_13TIntermBranchE = comdat any

$_ZN7glslang16TIntermTraverser11visitSwitchENS_6TVisitEPNS_13TIntermSwitchE = comdat any

$_ZN7glslang15TIndexTraverserD0Ev = comdat any

$_ZN7glslang16TIntermTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE = comdat any

$_ZN7glslang16TIntermTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEEN7glslang14pool_allocatorIcEEEEPNS5_7TSymbolEEENS_19__map_value_compareIS8_SB_NS_4lessIS8_EELb1EEENS6_ISB_EEE4findIS8_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_ = comdat any

$_ZN7glslang16TIntermTraverserD0Ev = comdat any

$_ZN7glslang16TIntermTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE = comdat any

$_ZTVN7glslang16TIntermTraverserE = comdat any

@.str = private unnamed_addr constant [30 x i8] c"inductive loop index modified\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"limitations\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Non-constant-index-expression\00", align 1
@_ZTVN7glslang19TInductiveTraverserE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glslang::TIntermTraverser"*)* @_ZN7glslang16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.glslang::TInductiveTraverser"*)* @_ZN7glslang19TInductiveTraverserD0Ev to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermSymbol"*)* @_ZN7glslang16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermConstantUnion"*)* @_ZN7glslang16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.glslang::TInductiveTraverser"*, i32, %"class.glslang::TIntermBinary"*)* @_ZN7glslang19TInductiveTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.glslang::TInductiveTraverser"*, i32, %"class.glslang::TIntermUnary"*)* @_ZN7glslang19TInductiveTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSelection"*)* @_ZN7glslang16TIntermTraverser14visitSelectionENS_6TVisitEPNS_16TIntermSelectionE to i8*), i8* bitcast (i1 (%"class.glslang::TInductiveTraverser"*, i32, %"class.glslang::TIntermAggregate"*)* @_ZN7glslang19TInductiveTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermLoop"*)* @_ZN7glslang16TIntermTraverser9visitLoopENS_6TVisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBranch"*)* @_ZN7glslang16TIntermTraverser11visitBranchENS_6TVisitEPNS_13TIntermBranchE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSwitch"*)* @_ZN7glslang16TIntermTraverser11visitSwitchENS_6TVisitEPNS_13TIntermSwitchE to i8*)] }, align 8
@_ZTVN7glslang15TIndexTraverserE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glslang::TIntermTraverser"*)* @_ZN7glslang16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.glslang::TIndexTraverser"*)* @_ZN7glslang15TIndexTraverserD0Ev to i8*), i8* bitcast (void (%"class.glslang::TIndexTraverser"*, %"class.glslang::TIntermSymbol"*)* @_ZN7glslang15TIndexTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermConstantUnion"*)* @_ZN7glslang16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBinary"*)* @_ZN7glslang16TIntermTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermUnary"*)* @_ZN7glslang16TIntermTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSelection"*)* @_ZN7glslang16TIntermTraverser14visitSelectionENS_6TVisitEPNS_16TIntermSelectionE to i8*), i8* bitcast (i1 (%"class.glslang::TIndexTraverser"*, i32, %"class.glslang::TIntermAggregate"*)* @_ZN7glslang15TIndexTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermLoop"*)* @_ZN7glslang16TIntermTraverser9visitLoopENS_6TVisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBranch"*)* @_ZN7glslang16TIntermTraverser11visitBranchENS_6TVisitEPNS_13TIntermBranchE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSwitch"*)* @_ZN7glslang16TIntermTraverser11visitSwitchENS_6TVisitEPNS_13TIntermSwitchE to i8*)] }, align 8
@_ZTVN7glslang16TIntermTraverserE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.glslang::TIntermTraverser"*)* @_ZN7glslang16TIntermTraverserD2Ev to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*)* @_ZN7glslang16TIntermTraverserD0Ev to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermSymbol"*)* @_ZN7glslang16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE to i8*), i8* bitcast (void (%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermConstantUnion"*)* @_ZN7glslang16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBinary"*)* @_ZN7glslang16TIntermTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermUnary"*)* @_ZN7glslang16TIntermTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSelection"*)* @_ZN7glslang16TIntermTraverser14visitSelectionENS_6TVisitEPNS_16TIntermSelectionE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermAggregate"*)* @_ZN7glslang16TIntermTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermLoop"*)* @_ZN7glslang16TIntermTraverser9visitLoopENS_6TVisitEPNS_11TIntermLoopE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBranch"*)* @_ZN7glslang16TIntermTraverser11visitBranchENS_6TVisitEPNS_13TIntermBranchE to i8*), i8* bitcast (i1 (%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSwitch"*)* @_ZN7glslang16TIntermTraverser11visitSwitchENS_6TVisitEPNS_13TIntermSwitchE to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7glslang19TInductiveTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE(%"class.glslang::TInductiveTraverser"* nocapture, i32, %"class.glslang::TIntermBinary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glslang::TIntermBinary", %"class.glslang::TIntermBinary"* %2, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK7glslang15TIntermOperator13modifiesStateEv(%"class.glslang::TIntermOperator"* %4) #5
  br i1 %5, label %6, label %48

6:                                                ; preds = %3
  %7 = bitcast %"class.glslang::TIntermBinary"* %2 to %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)***
  %8 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)**, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)** %8, i64 50
  %10 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)** %9, align 8
  %11 = tail call %"class.glslang::TIntermTyped"* %10(%"class.glslang::TIntermBinary"* %2) #5
  %12 = getelementptr inbounds %"class.glslang::TIntermTyped", %"class.glslang::TIntermTyped"* %11, i64 0, i32 0
  %13 = bitcast %"class.glslang::TIntermTyped"* %11 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %14 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %13, align 8
  %15 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %14, i64 12
  %16 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %15, align 8
  %17 = tail call %"class.glslang::TIntermSymbol"* %16(%class.TIntermNode* %12) #5
  %18 = icmp eq %"class.glslang::TIntermSymbol"* %17, null
  br i1 %18, label %48, label %19

19:                                               ; preds = %6
  %20 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)**, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*** %7, align 8
  %21 = getelementptr inbounds %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)** %20, i64 50
  %22 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermBinary"*)** %21, align 8
  %23 = tail call %"class.glslang::TIntermTyped"* %22(%"class.glslang::TIntermBinary"* %2) #5
  %24 = getelementptr inbounds %"class.glslang::TIntermTyped", %"class.glslang::TIntermTyped"* %23, i64 0, i32 0
  %25 = bitcast %"class.glslang::TIntermTyped"* %23 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %26 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %25, align 8
  %27 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %26, i64 12
  %28 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %27, align 8
  %29 = tail call %"class.glslang::TIntermSymbol"* %28(%class.TIntermNode* %24) #5
  %30 = bitcast %"class.glslang::TIntermSymbol"* %29 to i64 (%"class.glslang::TIntermSymbol"*)***
  %31 = load i64 (%"class.glslang::TIntermSymbol"*)**, i64 (%"class.glslang::TIntermSymbol"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %31, i64 48
  %33 = load i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %32, align 8
  %34 = tail call i64 %33(%"class.glslang::TIntermSymbol"* %29) #5
  %35 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  br i1 %37, label %38, label %48

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 3
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.glslang::TIntermBinary", %"class.glslang::TIntermBinary"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.glslang::TIntermBinary"* %2 to %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)***
  %42 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)**, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*** %41, align 8
  %43 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)** %42, align 8
  %44 = tail call dereferenceable(24) %"struct.glslang::TSourceLoc"* %43(%class.TIntermNode* %40) #5
  %45 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 4
  %46 = bitcast %"struct.glslang::TSourceLoc"* %45 to i8*
  %47 = bitcast %"struct.glslang::TSourceLoc"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  br label %48

48:                                               ; preds = %6, %38, %19, %3
  ret i1 true
}

declare zeroext i1 @_ZNK7glslang15TIntermOperator13modifiesStateEv(%"class.glslang::TIntermOperator"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7glslang19TInductiveTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE(%"class.glslang::TInductiveTraverser"* nocapture, i32, %"class.glslang::TIntermUnary"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glslang::TIntermUnary", %"class.glslang::TIntermUnary"* %2, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK7glslang15TIntermOperator13modifiesStateEv(%"class.glslang::TIntermOperator"* %4) #5
  br i1 %5, label %6, label %48

6:                                                ; preds = %3
  %7 = bitcast %"class.glslang::TIntermUnary"* %2 to %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)***
  %8 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)**, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)** %8, i64 49
  %10 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)** %9, align 8
  %11 = tail call %"class.glslang::TIntermTyped"* %10(%"class.glslang::TIntermUnary"* %2) #5
  %12 = getelementptr inbounds %"class.glslang::TIntermTyped", %"class.glslang::TIntermTyped"* %11, i64 0, i32 0
  %13 = bitcast %"class.glslang::TIntermTyped"* %11 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %14 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %13, align 8
  %15 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %14, i64 12
  %16 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %15, align 8
  %17 = tail call %"class.glslang::TIntermSymbol"* %16(%class.TIntermNode* %12) #5
  %18 = icmp eq %"class.glslang::TIntermSymbol"* %17, null
  br i1 %18, label %48, label %19

19:                                               ; preds = %6
  %20 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)**, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*** %7, align 8
  %21 = getelementptr inbounds %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)** %20, i64 49
  %22 = load %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)*, %"class.glslang::TIntermTyped"* (%"class.glslang::TIntermUnary"*)** %21, align 8
  %23 = tail call %"class.glslang::TIntermTyped"* %22(%"class.glslang::TIntermUnary"* %2) #5
  %24 = getelementptr inbounds %"class.glslang::TIntermTyped", %"class.glslang::TIntermTyped"* %23, i64 0, i32 0
  %25 = bitcast %"class.glslang::TIntermTyped"* %23 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %26 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %25, align 8
  %27 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %26, i64 12
  %28 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %27, align 8
  %29 = tail call %"class.glslang::TIntermSymbol"* %28(%class.TIntermNode* %24) #5
  %30 = bitcast %"class.glslang::TIntermSymbol"* %29 to i64 (%"class.glslang::TIntermSymbol"*)***
  %31 = load i64 (%"class.glslang::TIntermSymbol"*)**, i64 (%"class.glslang::TIntermSymbol"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %31, i64 48
  %33 = load i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %32, align 8
  %34 = tail call i64 %33(%"class.glslang::TIntermSymbol"* %29) #5
  %35 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  br i1 %37, label %38, label %48

38:                                               ; preds = %19
  %39 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 3
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.glslang::TIntermUnary", %"class.glslang::TIntermUnary"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.glslang::TIntermUnary"* %2 to %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)***
  %42 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)**, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*** %41, align 8
  %43 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)** %42, align 8
  %44 = tail call dereferenceable(24) %"struct.glslang::TSourceLoc"* %43(%class.TIntermNode* %40) #5
  %45 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 4
  %46 = bitcast %"struct.glslang::TSourceLoc"* %45 to i8*
  %47 = bitcast %"struct.glslang::TSourceLoc"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false)
  br label %48

48:                                               ; preds = %6, %38, %19, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7glslang19TInductiveTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE(%"class.glslang::TInductiveTraverser"* nocapture, i32, %"class.glslang::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glslang::TIntermAggregate", %"class.glslang::TIntermAggregate"* %2, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %143

7:                                                ; preds = %3
  %8 = bitcast %"class.glslang::TIntermAggregate"* %2 to %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)***
  %9 = load %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)**, %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)*, %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)** %9, i64 49
  %11 = load %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)*, %"class.glslang::TVector"* (%"class.glslang::TIntermAggregate"*)** %10, align 8
  %12 = tail call dereferenceable(32) %"class.glslang::TVector"* %11(%"class.glslang::TIntermAggregate"* %2) #5
  %13 = getelementptr inbounds %"class.glslang::TVector", %"class.glslang::TVector"* %12, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %class.TIntermNode*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.glslang::TVector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = lshr exact i64 %18, 3
  %20 = trunc i64 %19 to i32
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %143

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.glslang::TVector", %"class.glslang::TVector"* %12, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 2
  %26 = bitcast %"class.glslang::TIntermAggregate"* %2 to %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)***
  %27 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.glslang::TIntermAggregate", %"class.glslang::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.glslang::TIntermAggregate"* %2 to %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)***
  %30 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 4
  %31 = bitcast %"struct.glslang::TSourceLoc"* %30 to i8*
  br label %32

32:                                               ; preds = %22, %135
  %33 = phi i64 [ %17, %22 ], [ %138, %135 ]
  %34 = phi i64 [ 0, %22 ], [ %136, %135 ]
  %35 = inttoptr i64 %33 to %class.TIntermNode**
  %36 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %35, i64 %34
  %37 = load %class.TIntermNode*, %class.TIntermNode** %36, align 8
  %38 = bitcast %class.TIntermNode* %37 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %39 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %38, align 8
  %40 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %39, i64 12
  %41 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %40, align 8
  %42 = tail call %"class.glslang::TIntermSymbol"* %41(%class.TIntermNode* %37) #5
  %43 = icmp eq %"class.glslang::TIntermSymbol"* %42, null
  br i1 %43, label %135, label %44

44:                                               ; preds = %32
  %45 = load %class.TIntermNode**, %class.TIntermNode*** %23, align 8
  %46 = getelementptr inbounds %class.TIntermNode*, %class.TIntermNode** %45, i64 %34
  %47 = load %class.TIntermNode*, %class.TIntermNode** %46, align 8
  %48 = bitcast %class.TIntermNode* %47 to %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)***
  %49 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)**, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*** %48, align 8
  %50 = getelementptr inbounds %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %49, i64 12
  %51 = load %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)*, %"class.glslang::TIntermSymbol"* (%class.TIntermNode*)** %50, align 8
  %52 = tail call %"class.glslang::TIntermSymbol"* %51(%class.TIntermNode* %47) #5
  %53 = bitcast %"class.glslang::TIntermSymbol"* %52 to i64 (%"class.glslang::TIntermSymbol"*)***
  %54 = load i64 (%"class.glslang::TIntermSymbol"*)**, i64 (%"class.glslang::TIntermSymbol"*)*** %53, align 8
  %55 = getelementptr inbounds i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %54, i64 48
  %56 = load i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %55, align 8
  %57 = tail call i64 %56(%"class.glslang::TIntermSymbol"* %52) #5
  %58 = load i64, i64* %24, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %135

60:                                               ; preds = %44
  %61 = load %"class.glslang::TSymbolTable"*, %"class.glslang::TSymbolTable"** %25, align 8
  %62 = load %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)**, %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)*** %26, align 8
  %63 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)*, %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)** %62, i64 52
  %64 = load %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)*, %"class.std::__1::basic_string"* (%"class.glslang::TIntermAggregate"*)** %63, align 8
  %65 = tail call dereferenceable(32) %"class.std::__1::basic_string"* %64(%"class.glslang::TIntermAggregate"* %2) #5
  %66 = getelementptr inbounds %"class.glslang::TSymbolTable", %"class.glslang::TSymbolTable"* %61, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.glslang::TSymbolTableLevel"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.glslang::TSymbolTable"* %61 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = getelementptr inbounds %"class.glslang::TSymbolTable", %"class.glslang::TSymbolTable"* %61, i64 0, i32 0, i32 0, i32 0
  %73 = shl i64 %71, 29
  %74 = ashr i64 %73, 32
  %75 = inttoptr i64 %70 to %"class.glslang::TSymbolTableLevel"**
  br label %76

76:                                               ; preds = %97, %60
  %77 = phi %"class.glslang::TSymbolTableLevel"** [ %98, %97 ], [ %75, %60 ]
  %78 = phi i64 [ %79, %97 ], [ %74, %60 ]
  %79 = add nsw i64 %78, -1
  %80 = getelementptr inbounds %"class.glslang::TSymbolTableLevel"*, %"class.glslang::TSymbolTableLevel"** %77, i64 %79
  %81 = load %"class.glslang::TSymbolTableLevel"*, %"class.glslang::TSymbolTableLevel"** %80, align 8
  %82 = getelementptr inbounds %"class.glslang::TSymbolTableLevel", %"class.glslang::TSymbolTableLevel"* %81, i64 0, i32 0, i32 0
  %83 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEEN7glslang14pool_allocatorIcEEEEPNS5_7TSymbolEEENS_19__map_value_compareIS8_SB_NS_4lessIS8_EELb1EEENS6_ISB_EEE4findIS8_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"* %82, %"class.std::__1::basic_string"* dereferenceable(32) %65) #5
  %84 = getelementptr inbounds %"class.glslang::TSymbolTableLevel", %"class.glslang::TSymbolTableLevel"* %81, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %83, %84
  br i1 %85, label %91, label %86

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 8
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.glslang::TSymbol"**
  %89 = load %"class.glslang::TSymbol"*, %"class.glslang::TSymbol"** %88, align 8
  %90 = bitcast %"class.glslang::TSymbol"* %89 to %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)***
  br label %91

91:                                               ; preds = %86, %76
  %92 = phi %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)*** [ %90, %86 ], [ null, %76 ]
  %93 = phi %"class.glslang::TSymbol"* [ %89, %86 ], [ null, %76 ]
  %94 = icmp eq %"class.glslang::TSymbol"* %93, null
  %95 = icmp sgt i64 %79, 0
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = load %"class.glslang::TSymbolTableLevel"**, %"class.glslang::TSymbolTableLevel"*** %72, align 8
  br label %76

99:                                               ; preds = %91
  %100 = load %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)**, %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)*** %92, align 8
  %101 = getelementptr inbounds %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)*, %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)** %100, i64 7
  %102 = load %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)*, %"class.glslang::TFunction"* (%"class.glslang::TSymbol"*)** %101, align 8
  %103 = tail call %"class.glslang::TFunction"* %102(%"class.glslang::TSymbol"* %93) #5
  %104 = bitcast %"class.glslang::TFunction"* %103 to %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)***
  %105 = load %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)**, %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)*** %104, align 8
  %106 = getelementptr inbounds %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)*, %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)** %105, i64 38
  %107 = load %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)*, %"struct.glslang::TParameter"* (%"class.glslang::TFunction"*, i32)** %106, align 8
  %108 = trunc i64 %34 to i32
  %109 = tail call dereferenceable(24) %"struct.glslang::TParameter"* %107(%"class.glslang::TFunction"* %103, i32 %108) #5
  %110 = getelementptr inbounds %"struct.glslang::TParameter", %"struct.glslang::TParameter"* %109, i64 0, i32 1
  %111 = load %"class.glslang::TType"*, %"class.glslang::TType"** %110, align 8
  %112 = bitcast %"class.glslang::TType"* %111 to %"class.glslang::TQualifier"* (%"class.glslang::TType"*)***
  %113 = load %"class.glslang::TQualifier"* (%"class.glslang::TType"*)**, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)** %113, i64 11
  %115 = load %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)** %114, align 8
  %116 = tail call dereferenceable(56) %"class.glslang::TQualifier"* %115(%"class.glslang::TType"* %111) #5
  %117 = getelementptr inbounds %"class.glslang::TQualifier", %"class.glslang::TQualifier"* %116, i64 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 63
  %120 = icmp eq i64 %119, 14
  br i1 %120, label %130, label %121

121:                                              ; preds = %99
  %122 = load %"class.glslang::TQualifier"* (%"class.glslang::TType"*)**, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*** %112, align 8
  %123 = getelementptr inbounds %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)** %122, i64 11
  %124 = load %"class.glslang::TQualifier"* (%"class.glslang::TType"*)*, %"class.glslang::TQualifier"* (%"class.glslang::TType"*)** %123, align 8
  %125 = tail call dereferenceable(56) %"class.glslang::TQualifier"* %124(%"class.glslang::TType"* %111) #5
  %126 = getelementptr inbounds %"class.glslang::TQualifier", %"class.glslang::TQualifier"* %125, i64 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = and i64 %127, 63
  %129 = icmp eq i64 %128, 15
  br i1 %129, label %130, label %135

130:                                              ; preds = %121, %99
  store i8 1, i8* %27, align 8
  %131 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)**, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*** %29, align 8
  %132 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)** %131, align 8
  %133 = tail call dereferenceable(24) %"struct.glslang::TSourceLoc"* %132(%class.TIntermNode* %28) #5
  %134 = bitcast %"struct.glslang::TSourceLoc"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %134, i64 24, i1 false)
  br label %135

135:                                              ; preds = %121, %130, %32, %44
  %136 = add nuw nsw i64 %34, 1
  %137 = load i64, i64* %14, align 8
  %138 = load i64, i64* %16, align 8
  %139 = sub i64 %137, %138
  %140 = shl i64 %139, 29
  %141 = ashr i64 %140, 32
  %142 = icmp slt i64 %136, %141
  br i1 %142, label %32, label %143

143:                                              ; preds = %135, %7, %3
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang13TParseContext22inductiveLoopBodyCheckEP11TIntermNodexRNS_12TSymbolTableE(%"class.glslang::TParseContext"*, %class.TIntermNode*, i64, %"class.glslang::TSymbolTable"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.glslang::TInductiveTraverser", align 8
  %6 = bitcast %"class.glslang::TInductiveTraverser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 104, i1 false)
  %7 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 1
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 7
  %11 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 7, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %12 = bitcast %"class.glslang::TVector"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 11, i1 false) #5
  %13 = tail call dereferenceable(96) %"class.glslang::TPoolAllocator"* @_ZN7glslang22GetThreadPoolAllocatorEv() #5
  store %"class.glslang::TPoolAllocator"* %13, %"class.glslang::TPoolAllocator"** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang19TInductiveTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %14 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 1
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 2
  store %"class.glslang::TSymbolTable"* %3, %"class.glslang::TSymbolTable"** %15, align 8
  %16 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 3
  store i8 0, i8* %16, align 8
  %17 = icmp eq %class.TIntermNode* %1, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0
  %20 = bitcast %class.TIntermNode* %1 to void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)***
  %21 = load void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)**, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)** %21, i64 2
  %23 = load void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)** %22, align 8
  call void %23(%class.TIntermNode* nonnull %1, %"class.glslang::TIntermTraverser"* nonnull %19) #5
  %24 = load i8, i8* %16, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.glslang::TParseContext", %"class.glslang::TParseContext"* %0, i64 0, i32 0
  %28 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 4
  %29 = bitcast %"class.glslang::TParseContext"* %0 to void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)***
  %30 = load void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)**, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)** %30, i64 42
  %32 = load void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)** %31, align 8
  call void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...) %32(%"class.glslang::TParseContextBase"* %27, %"struct.glslang::TSourceLoc"* dereferenceable(24) %28, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %33

33:                                               ; preds = %26, %18, %4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %34 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %35 = load %class.TIntermNode**, %class.TIntermNode*** %34, align 8
  %36 = icmp eq %class.TIntermNode** %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = ptrtoint %class.TIntermNode** %35 to i64
  %39 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %5, i64 0, i32 0, i32 7, i32 0, i32 0, i32 1
  %40 = bitcast %class.TIntermNode*** %39 to i64*
  store i64 %38, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang16TIntermTraverserD2Ev(%"class.glslang::TIntermTraverser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.TIntermNode**, %class.TIntermNode*** %3, align 8
  %5 = icmp eq %class.TIntermNode** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.TIntermNode** %4 to i64
  %8 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %9 = bitcast %class.TIntermNode*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang15TIndexTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.glslang::TIndexTraverser"* nocapture, %"class.glslang::TIntermSymbol"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::set.309"*, %"class.std::__1::set.309"** %3, align 8
  %5 = bitcast %"class.glslang::TIntermSymbol"* %1 to i64 (%"class.glslang::TIntermSymbol"*)***
  %6 = load i64 (%"class.glslang::TIntermSymbol"*)**, i64 (%"class.glslang::TIntermSymbol"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %6, i64 48
  %8 = load i64 (%"class.glslang::TIntermSymbol"*)*, i64 (%"class.glslang::TIntermSymbol"*)** %7, align 8
  %9 = tail call i64 %8(%"class.glslang::TIntermSymbol"* %1) #5
  %10 = getelementptr inbounds %"class.std::__1::set.309", %"class.std::__1::set.309"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node.338"**
  %12 = load %"class.std::__1::__tree_node.338"*, %"class.std::__1::__tree_node.338"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node.338"* %12, null
  br i1 %13, label %35, label %14

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_end_node"* [ %25, %14 ], [ %10, %2 ]
  %16 = phi %"class.std::__1::__tree_node.338"* [ %26, %14 ], [ %12, %2 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.338", %"class.std::__1::__tree_node.338"* %16, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp slt i64 %18, %9
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.338", %"class.std::__1::__tree_node.338"* %16, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node.338"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.338", %"class.std::__1::__tree_node.338"* %16, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node.338"* %16 to %"class.std::__1::__tree_node.338"**
  %24 = select i1 %19, %"class.std::__1::__tree_node.338"** %21, %"class.std::__1::__tree_node.338"** %23
  %25 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %26 = load %"class.std::__1::__tree_node.338"*, %"class.std::__1::__tree_node.338"** %24, align 8
  %27 = icmp eq %"class.std::__1::__tree_node.338"* %26, null
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %25, %10
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %9, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %30, %28, %2
  br label %36

36:                                               ; preds = %30, %35
  %37 = phi %"class.std::__1::__tree_end_node"* [ %10, %35 ], [ %25, %30 ]
  %38 = load %"class.std::__1::set.309"*, %"class.std::__1::set.309"** %3, align 8
  %39 = getelementptr inbounds %"class.std::__1::set.309", %"class.std::__1::set.309"* %38, i64 0, i32 0, i32 1, i32 0, i32 0
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %37, %39
  br i1 %40, label %41, label %51

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %42, align 8
  %43 = getelementptr inbounds %"class.glslang::TIntermSymbol", %"class.glslang::TIntermSymbol"* %1, i64 0, i32 0, i32 0
  %44 = bitcast %"class.glslang::TIntermSymbol"* %1 to %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)***
  %45 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)**, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*** %44, align 8
  %46 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)** %45, align 8
  %47 = tail call dereferenceable(24) %"struct.glslang::TSourceLoc"* %46(%class.TIntermNode* %43) #5
  %48 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 3
  %49 = bitcast %"struct.glslang::TSourceLoc"* %48 to i8*
  %50 = bitcast %"struct.glslang::TSourceLoc"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false)
  br label %51

51:                                               ; preds = %41, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7glslang15TIndexTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE(%"class.glslang::TIndexTraverser"* nocapture, i32, %"class.glslang::TIntermAggregate"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.glslang::TIntermAggregate", %"class.glslang::TIntermAggregate"* %2, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 2
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.glslang::TIntermAggregate", %"class.glslang::TIntermAggregate"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.glslang::TIntermAggregate"* %2 to %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)***
  %11 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)**, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*** %10, align 8
  %12 = load %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)*, %"struct.glslang::TSourceLoc"* (%class.TIntermNode*)** %11, align 8
  %13 = tail call dereferenceable(24) %"struct.glslang::TSourceLoc"* %12(%class.TIntermNode* %9) #5
  %14 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 3
  %15 = bitcast %"struct.glslang::TSourceLoc"* %14 to i8*
  %16 = bitcast %"struct.glslang::TSourceLoc"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  br label %17

17:                                               ; preds = %7, %3
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7glslang13TParseContext28constantIndexExpressionCheckEP11TIntermNode(%"class.glslang::TParseContext"*, %class.TIntermNode*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.glslang::TIndexTraverser", align 8
  %4 = bitcast %"class.glslang::TIndexTraverser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 96, i1 false)
  %5 = getelementptr inbounds %"class.glslang::TParseContext", %"class.glslang::TParseContext"* %0, i64 0, i32 17
  %6 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 1
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 7
  %10 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 7, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %11 = bitcast %"class.glslang::TVector"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 11, i1 false) #5
  %12 = tail call dereferenceable(96) %"class.glslang::TPoolAllocator"* @_ZN7glslang22GetThreadPoolAllocatorEv() #5
  store %"class.glslang::TPoolAllocator"* %12, %"class.glslang::TPoolAllocator"** %10, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang15TIndexTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 1
  store %"class.std::__1::set.309"* %5, %"class.std::__1::set.309"** %13, align 8
  %14 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 2
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0
  %16 = bitcast %class.TIntermNode* %1 to void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)***
  %17 = load void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)**, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)** %17, i64 2
  %19 = load void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)*, void (%class.TIntermNode*, %"class.glslang::TIntermTraverser"*)** %18, align 8
  call void %19(%class.TIntermNode* %1, %"class.glslang::TIntermTraverser"* nonnull %15) #5
  %20 = load i8, i8* %14, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.glslang::TParseContext", %"class.glslang::TParseContext"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 3
  %25 = bitcast %"class.glslang::TParseContext"* %0 to void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)***
  %26 = load void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)**, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)** %26, i64 42
  %28 = load void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)*, void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...)** %27, align 8
  call void (%"class.glslang::TParseContextBase"*, %"struct.glslang::TSourceLoc"*, i8*, i8*, i8*, ...) %28(%"class.glslang::TParseContextBase"* %23, %"struct.glslang::TSourceLoc"* dereferenceable(24) %24, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %29

29:                                               ; preds = %2, %22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %30 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %31 = load %class.TIntermNode**, %class.TIntermNode*** %30, align 8
  %32 = icmp eq %class.TIntermNode** %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %class.TIntermNode** %31 to i64
  %35 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %3, i64 0, i32 0, i32 7, i32 0, i32 0, i32 1
  %36 = bitcast %class.TIntermNode*** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %37

37:                                               ; preds = %29, %33
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %4) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang19TInductiveTraverserD0Ev(%"class.glslang::TInductiveTraverser"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.TIntermNode**, %class.TIntermNode*** %3, align 8
  %5 = icmp eq %class.TIntermNode** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.TIntermNode** %4 to i64
  %8 = getelementptr inbounds %"class.glslang::TInductiveTraverser", %"class.glslang::TInductiveTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 1
  %9 = bitcast %class.TIntermNode*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang16TIntermTraverser11visitSymbolEPNS_13TIntermSymbolE(%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermSymbol"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang16TIntermTraverser18visitConstantUnionEPNS_20TIntermConstantUnionE(%"class.glslang::TIntermTraverser"*, %"class.glslang::TIntermConstantUnion"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser14visitSelectionENS_6TVisitEPNS_16TIntermSelectionE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSelection"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser9visitLoopENS_6TVisitEPNS_11TIntermLoopE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermLoop"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser11visitBranchENS_6TVisitEPNS_13TIntermBranchE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBranch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser11visitSwitchENS_6TVisitEPNS_13TIntermSwitchE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermSwitch"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang15TIndexTraverserD0Ev(%"class.glslang::TIndexTraverser"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.TIntermNode**, %class.TIntermNode*** %3, align 8
  %5 = icmp eq %class.TIntermNode** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.TIntermNode** %4 to i64
  %8 = getelementptr inbounds %"class.glslang::TIndexTraverser", %"class.glslang::TIndexTraverser"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 1
  %9 = bitcast %class.TIntermNode*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser11visitBinaryENS_6TVisitEPNS_13TIntermBinaryE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermBinary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser10visitUnaryENS_6TVisitEPNS_12TIntermUnaryE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermUnary"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEEN7glslang14pool_allocatorIcEEEEPNS5_7TSymbolEEENS_19__map_value_compareIS8_SB_NS_4lessIS8_EELb1EEENS6_ISB_EEE4findIS8_EENS_21__tree_const_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #5
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7glslang16TIntermTraverserD0Ev(%"class.glslang::TIntermTraverser"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7glslang16TIntermTraverserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %class.TIntermNode**, %class.TIntermNode*** %3, align 8
  %5 = icmp eq %class.TIntermNode** %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %class.TIntermNode** %4 to i64
  %8 = getelementptr inbounds %"class.glslang::TIntermTraverser", %"class.glslang::TIntermTraverser"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %9 = bitcast %class.TIntermNode*** %8 to i64*
  store i64 %7, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7glslang16TIntermTraverser14visitAggregateENS_6TVisitEPNS_16TIntermAggregateE(%"class.glslang::TIntermTraverser"*, i32, %"class.glslang::TIntermAggregate"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(96) %"class.glslang::TPoolAllocator"* @_ZN7glslang22GetThreadPoolAllocatorEv() local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
