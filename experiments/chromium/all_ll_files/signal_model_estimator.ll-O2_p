; ModuleID = '../../third_party/webrtc/modules/audio_processing/ns/signal_model_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/ns/signal_model_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::SignalModelEstimator" = type { float, float, %"class.webrtc::Histograms", i32, %"class.webrtc::PriorSignalModelEstimator", %"struct.webrtc::SignalModel" }
%"class.webrtc::Histograms" = type { %"struct.std::__1::array", %"struct.std::__1::array", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [1000 x i32] }
%"class.webrtc::PriorSignalModelEstimator" = type { %"struct.webrtc::PriorSignalModel" }
%"struct.webrtc::PriorSignalModel" = type { float, float, float, float, float, float }
%"struct.webrtc::SignalModel" = type { float, float, float, %"struct.std::__1::array.0" }
%"struct.std::__1::array.0" = type { [129 x float] }

@_ZN6webrtc20SignalModelEstimatorC1Ev = hidden unnamed_addr alias void (%"class.webrtc::SignalModelEstimator"*), void (%"class.webrtc::SignalModelEstimator"*)* @_ZN6webrtc20SignalModelEstimatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SignalModelEstimatorC2Ev(%"class.webrtc::SignalModelEstimator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 0
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc10HistogramsC1Ev(%"class.webrtc::Histograms"* %4) #3
  %5 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 3
  store i32 500, i32* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc25PriorSignalModelEstimatorC1Ef(%"class.webrtc::PriorSignalModelEstimator"* %6, float 5.000000e-01) #3
  %7 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc11SignalModelC1Ev(%"struct.webrtc::SignalModel"* %7) #3
  ret void
}

declare void @_ZN6webrtc10HistogramsC1Ev(%"class.webrtc::Histograms"*) unnamed_addr #1

declare void @_ZN6webrtc25PriorSignalModelEstimatorC1Ef(%"class.webrtc::PriorSignalModelEstimator"*, float) unnamed_addr #1

declare void @_ZN6webrtc11SignalModelC1Ev(%"struct.webrtc::SignalModel"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc20SignalModelEstimator19AdjustNormalizationEif(%"class.webrtc::SignalModelEstimator"* nocapture, i32, float) local_unnamed_addr #2 align 2 {
  %4 = sitofp i32 %1 to float
  %5 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fmul float %6, %4
  %8 = fadd float %7, %2
  %9 = add nsw i32 %1, 1
  %10 = sitofp i32 %9 to float
  %11 = fdiv float %8, %10
  store float %11, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SignalModelEstimator6UpdateEN3rtc9ArrayViewIKfLl129EEES4_S4_S4_ff(%"class.webrtc::SignalModelEstimator"*, float*, float*, float*, float*, float, float) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 2
  br label %15

10:                                               ; preds = %15
  %11 = add nuw nsw i64 %16, 1
  %12 = getelementptr inbounds float, float* %4, i64 %11
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %13, 0.000000e+00
  br i1 %14, label %20, label %164

15:                                               ; preds = %175, %7
  %16 = phi i64 [ 1, %7 ], [ %174, %175 ]
  %17 = getelementptr inbounds float, float* %4, i64 %16
  %18 = load float, float* %17, align 4
  %19 = fcmp oeq float %18, 0.000000e+00
  br i1 %19, label %20, label %10

20:                                               ; preds = %169, %164, %10, %15
  %21 = load float, float* %9, align 4
  %22 = fmul float %21, 0x3FD3333340000000
  %23 = fsub float %21, %22
  br label %44

24:                                               ; preds = %35
  %25 = load float, float* %4, align 4
  %26 = fsub float %5, %25
  %27 = fmul float %26, 0x3F7FC07F00000000
  %28 = fmul float %41, 0x3F7FC07F00000000
  %29 = tail call float @_ZN6webrtc16ExpApproximationEf(float %28) #3
  %30 = fdiv float %29, %27
  %31 = load float, float* %9, align 4
  %32 = fsub float %30, %31
  %33 = fmul float %32, 0x3FD3333340000000
  %34 = fadd float %31, %33
  br label %44

35:                                               ; preds = %175, %35
  %36 = phi float [ %41, %35 ], [ 0.000000e+00, %175 ]
  %37 = phi i64 [ %42, %35 ], [ 1, %175 ]
  %38 = getelementptr inbounds float, float* %4, i64 %37
  %39 = load float, float* %38, align 4
  %40 = tail call float @_ZN6webrtc16LogApproximationEf(float %39) #3
  %41 = fadd float %36, %40
  %42 = add nuw nsw i64 %37, 1
  %43 = icmp eq i64 %42, 129
  br i1 %43, label %24, label %35

44:                                               ; preds = %20, %24
  %45 = phi float [ %34, %24 ], [ %23, %20 ]
  store float %45, float* %9, align 4
  %46 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 0
  %47 = load float, float* %46, align 4
  br label %52

48:                                               ; preds = %52
  %49 = insertelement <2 x float> undef, float %5, i32 0
  %50 = insertelement <2 x float> %49, float %65, i32 1
  %51 = fmul <2 x float> %50, <float 0x3F7FC07F00000000, float 0x3F7FC07F00000000>
  br label %68

52:                                               ; preds = %52, %44
  %53 = phi float [ 0.000000e+00, %44 ], [ %65, %52 ]
  %54 = phi i64 [ 0, %44 ], [ %66, %52 ]
  %55 = getelementptr inbounds float, float* %3, i64 %54
  %56 = load float, float* %55, align 4
  %57 = fadd float %53, %56
  %58 = add nuw nsw i64 %54, 1
  %59 = getelementptr inbounds float, float* %3, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fadd float %57, %60
  %62 = add nuw nsw i64 %54, 2
  %63 = getelementptr inbounds float, float* %3, i64 %62
  %64 = load float, float* %63, align 4
  %65 = fadd float %61, %64
  %66 = add nuw nsw i64 %54, 3
  %67 = icmp eq i64 %66, 129
  br i1 %67, label %48, label %52

68:                                               ; preds = %68, %48
  %69 = phi i64 [ 0, %48 ], [ %88, %68 ]
  %70 = phi float [ 0.000000e+00, %48 ], [ %87, %68 ]
  %71 = phi float [ 0.000000e+00, %48 ], [ %85, %68 ]
  %72 = phi float [ 0.000000e+00, %48 ], [ %83, %68 ]
  %73 = getelementptr inbounds float, float* %4, i64 %69
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds float, float* %3, i64 %69
  %76 = load float, float* %75, align 4
  %77 = insertelement <2 x float> undef, float %74, i32 0
  %78 = insertelement <2 x float> %77, float %76, i32 1
  %79 = fsub <2 x float> %78, %51
  %80 = extractelement <2 x float> %79, i32 0
  %81 = extractelement <2 x float> %79, i32 1
  %82 = fmul float %80, %81
  %83 = fadd float %72, %82
  %84 = fmul float %81, %81
  %85 = fadd float %71, %84
  %86 = fmul float %80, %80
  %87 = fadd float %70, %86
  %88 = add nuw nsw i64 %69, 1
  %89 = icmp eq i64 %88, 129
  br i1 %89, label %90, label %68

90:                                               ; preds = %68
  %91 = fmul float %83, 0x3F7FC07F00000000
  %92 = fmul float %85, 0x3F7FC07F00000000
  %93 = fmul float %87, 0x3F7FC07F00000000
  %94 = fmul float %91, %91
  %95 = fadd float %92, 0x3F1A36E2E0000000
  %96 = fdiv float %94, %95
  %97 = fsub float %93, %96
  %98 = fadd float %47, 0x3F1A36E2E0000000
  %99 = fdiv float %97, %98
  %100 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 1
  %101 = load float, float* %100, align 4
  %102 = fsub float %99, %101
  %103 = fmul float %102, 0x3FD3333340000000
  %104 = fadd float %101, %103
  store float %104, float* %100, align 4
  %105 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 1
  %106 = load float, float* %105, align 4
  %107 = fadd float %106, %6
  store float %107, float* %105, align 4
  %108 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = add nsw i32 %109, -1
  store i32 %110, i32* %108, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %90
  %113 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc10Histograms6UpdateERKNS_11SignalModelE(%"class.webrtc::Histograms"* %113, %"struct.webrtc::SignalModel"* dereferenceable(528) %8) #3
  br label %122

114:                                              ; preds = %90
  %115 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 4
  %116 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc25PriorSignalModelEstimator6UpdateERKNS_10HistogramsE(%"class.webrtc::PriorSignalModelEstimator"* %115, %"class.webrtc::Histograms"* dereferenceable(12000) %116) #3
  tail call void @_ZN6webrtc10Histograms5ClearEv(%"class.webrtc::Histograms"* %116) #3
  store i32 500, i32* %108, align 4
  %117 = load float, float* %105, align 4
  %118 = fdiv float %117, 5.000000e+02
  %119 = load float, float* %46, align 4
  %120 = fadd float %118, %119
  %121 = fmul float %120, 5.000000e-01
  store float %121, float* %46, align 4
  store float 0.000000e+00, float* %105, align 4
  br label %122

122:                                              ; preds = %114, %112
  br label %123

123:                                              ; preds = %122, %123
  %124 = phi i64 [ %142, %123 ], [ 0, %122 ]
  %125 = getelementptr inbounds float, float* %1, i64 %124
  %126 = load float, float* %125, align 4
  %127 = fmul float %126, 2.000000e+00
  %128 = fadd float %127, 1.000000e+00
  %129 = fadd float %128, 0x3F1A36E2E0000000
  %130 = fdiv float %127, %129
  %131 = getelementptr inbounds float, float* %2, i64 %124
  %132 = load float, float* %131, align 4
  %133 = fadd float %132, 1.000000e+00
  %134 = fmul float %133, %130
  %135 = tail call float @_ZN6webrtc16LogApproximationEf(float %128) #3
  %136 = fsub float %134, %135
  %137 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 3, i32 0, i64 %124
  %138 = load float, float* %137, align 4
  %139 = fsub float %136, %138
  %140 = fmul float %139, 5.000000e-01
  %141 = fadd float %138, %140
  store float %141, float* %137, align 4
  %142 = add nuw nsw i64 %124, 1
  %143 = icmp eq i64 %142, 129
  br i1 %143, label %144, label %123

144:                                              ; preds = %123
  %145 = getelementptr inbounds %"struct.webrtc::SignalModel", %"struct.webrtc::SignalModel"* %8, i64 0, i32 0
  br label %146

146:                                              ; preds = %146, %144
  %147 = phi i64 [ 0, %144 ], [ %160, %146 ]
  %148 = phi float [ 0.000000e+00, %144 ], [ %159, %146 ]
  %149 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 3, i32 0, i64 %147
  %150 = load float, float* %149, align 4
  %151 = fadd float %148, %150
  %152 = add nuw nsw i64 %147, 1
  %153 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 3, i32 0, i64 %152
  %154 = load float, float* %153, align 4
  %155 = fadd float %151, %154
  %156 = add nuw nsw i64 %147, 2
  %157 = getelementptr inbounds %"class.webrtc::SignalModelEstimator", %"class.webrtc::SignalModelEstimator"* %0, i64 0, i32 5, i32 3, i32 0, i64 %156
  %158 = load float, float* %157, align 4
  %159 = fadd float %155, %158
  %160 = add nuw nsw i64 %147, 3
  %161 = icmp eq i64 %160, 129
  br i1 %161, label %162, label %146

162:                                              ; preds = %146
  %163 = fmul float %159, 0x3F7FC07F00000000
  store float %163, float* %145, align 4
  ret void

164:                                              ; preds = %10
  %165 = add nuw nsw i64 %16, 2
  %166 = getelementptr inbounds float, float* %4, i64 %165
  %167 = load float, float* %166, align 4
  %168 = fcmp oeq float %167, 0.000000e+00
  br i1 %168, label %20, label %169

169:                                              ; preds = %164
  %170 = add nuw nsw i64 %16, 3
  %171 = getelementptr inbounds float, float* %4, i64 %170
  %172 = load float, float* %171, align 4
  %173 = fcmp oeq float %172, 0.000000e+00
  %174 = add nuw nsw i64 %16, 4
  br i1 %173, label %20, label %175

175:                                              ; preds = %169
  %176 = icmp eq i64 %174, 129
  br i1 %176, label %35, label %15
}

declare void @_ZN6webrtc10Histograms6UpdateERKNS_11SignalModelE(%"class.webrtc::Histograms"*, %"struct.webrtc::SignalModel"* dereferenceable(528)) local_unnamed_addr #1

declare void @_ZN6webrtc25PriorSignalModelEstimator6UpdateERKNS_10HistogramsE(%"class.webrtc::PriorSignalModelEstimator"*, %"class.webrtc::Histograms"* dereferenceable(12000)) local_unnamed_addr #1

declare void @_ZN6webrtc10Histograms5ClearEv(%"class.webrtc::Histograms"*) local_unnamed_addr #1

declare float @_ZN6webrtc16LogApproximationEf(float) local_unnamed_addr #1

declare float @_ZN6webrtc16ExpApproximationEf(float) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
