; ModuleID = '../../base/third_party/libevent/signal.c'
source_filename = "../../base/third_party/libevent/signal.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.event_base = type { %struct.eventop*, i8*, i32, i32, i32, i32, %struct.event_list**, i32, %struct.evsignal_info, %struct.event_list, %struct.timeval, %struct.min_heap, %struct.timeval }
%struct.eventop = type { i8*, i8* (%struct.event_base*)*, i32 (i8*, %struct.event*)*, i32 (i8*, %struct.event*)*, i32 (%struct.event_base*, i8*, %struct.timeval*)*, void (%struct.event_base*, i8*)*, i32 }
%struct.event = type { %struct.anon, %struct.anon.0, %struct.anon.1, i32, %struct.event_base*, i32, i16, i16, i16*, %struct.timeval, i32, void (i32, i16, i8*)*, i8*, i32, i32 }
%struct.anon = type { %struct.event*, %struct.event** }
%struct.anon.0 = type { %struct.event*, %struct.event** }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.evsignal_info = type { %struct.event, [2 x i32], i32, i32, [65 x %struct.event_list], [65 x i32], %struct.sigaction**, i32 }
%struct.sigaction = type { %union.anon, %struct.__sigset_t, i32, void ()* }
%union.anon = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.event_list = type { %struct.event*, %struct.event** }
%struct.min_heap = type { %struct.event**, i32, i32 }
%struct.timeval = type { i64, i64 }

@evsignal_base = hidden local_unnamed_addr global %struct.event_base* null, align 8
@.str = private unnamed_addr constant [15 x i8] c"%s: socketpair\00", align 1
@__func__.evsignal_init = private unnamed_addr constant [14 x i8] c"evsignal_init\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"fcntl(%d, F_SETFD)\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"sigaction\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"%s: EV_SIGNAL incompatible use\00", align 1
@__func__.evsignal_add = private unnamed_addr constant [13 x i8] c"evsignal_add\00", align 1
@evsignal_cb.signals = internal global [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"%s: read\00", align 1
@__func__.evsignal_cb = private unnamed_addr constant [12 x i8] c"evsignal_cb\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"%s: received signal %d, but have no base configured\00", align 1
@__func__.evsignal_handler = private unnamed_addr constant [17 x i8] c"evsignal_handler\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"a\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evsignal_init(%struct.event_base*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8
  %3 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 1, i64 0
  %4 = tail call i32 @evutil_socketpair(i32 1, i32 1, i32 0, i32* %3) #6
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.evsignal_init, i64 0, i64 0)) #6
  br label %44

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 8
  %9 = tail call i32 (i32, i32, ...) @fcntl(i32 %8, i32 2, i32 1) #6
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = load i32, i32* %3, align 8
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i32 %12) #6
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 1, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 (i32, i32, ...) @fcntl(i32 %15, i32 2, i32 1) #6
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  %19 = load i32, i32* %14, align 4
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i32 %19) #6
  br label %20

20:                                               ; preds = %18, %13
  %21 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 6
  store %struct.sigaction** null, %struct.sigaction*** %21, align 8
  %22 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 7
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 3
  store volatile i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 5
  %25 = bitcast [65 x i32]* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 260, i1 false)
  br label %26

26:                                               ; preds = %46, %20
  %27 = phi i64 [ 0, %20 ], [ %49, %46 ]
  %28 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 4, i64 %27, i32 0
  store %struct.event* null, %struct.event** %28, align 8
  %29 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 4, i64 %27, i32 1
  store %struct.event** %28, %struct.event*** %29, align 8
  %30 = or i64 %27, 1
  %31 = icmp eq i64 %30, 65
  br i1 %31, label %32, label %46

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 8
  %34 = tail call i32 @evutil_make_socket_nonblocking(i32 %33) #6
  %35 = load i32, i32* %14, align 4
  %36 = tail call i32 @evutil_make_socket_nonblocking(i32 %35) #6
  %37 = getelementptr inbounds %struct.evsignal_info, %struct.evsignal_info* %2, i64 0, i32 0
  %38 = load i32, i32* %14, align 4
  %39 = bitcast %struct.evsignal_info* %2 to i8*
  tail call void @event_set(%struct.event* %37, i32 %38, i16 signext 18, void (i32, i16, i8*)* nonnull @evsignal_cb, i8* %39) #6
  %40 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 0, i32 4
  store %struct.event_base* %0, %struct.event_base** %40, align 8
  %41 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 0, i32 14
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, 16
  store i32 %43, i32* %41, align 4
  br label %44

44:                                               ; preds = %32, %6
  %45 = phi i32 [ -1, %6 ], [ 0, %32 ]
  ret i32 %45

46:                                               ; preds = %26
  %47 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 4, i64 %30, i32 0
  store %struct.event* null, %struct.event** %47, align 8
  %48 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 4, i64 %30, i32 1
  store %struct.event** %47, %struct.event*** %48, align 8
  %49 = add nuw nsw i64 %27, 2
  br label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @evutil_socketpair(i32, i32, i32, i32*) local_unnamed_addr #2

declare void @event_err(i32, i8*, ...) local_unnamed_addr #2

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #2

declare void @event_warn(i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @evutil_make_socket_nonblocking(i32) local_unnamed_addr #2

declare void @event_set(%struct.event*, i32, i16 signext, void (i32, i16, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @evsignal_cb(i32, i16 signext, i8* nocapture readnone) #0 {
  %4 = tail call i64 @recv(i32 %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @evsignal_cb.signals, i64 0, i64 0), i64 1, i32 0) #6
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = tail call i32* @__errno_location() #7
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 11
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void (i32, i8*, ...) @event_err(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.evsignal_cb, i64 0, i64 0)) #6
  br label %11

11:                                               ; preds = %6, %10, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_evsignal_set_handler(%struct.event_base* nocapture, i32, void (i32)*) local_unnamed_addr #0 {
  %4 = alloca %struct.sigaction, align 8
  %5 = bitcast %struct.sigaction* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 152, i1 false)
  %6 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %1
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = add nsw i32 %1, 1
  %11 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 6
  %12 = bitcast %struct.sigaction*** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %10 to i64
  %15 = shl nsw i64 %14, 3
  %16 = tail call i8* @realloc(i8* %13, i64 %15) #6
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %9
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %58

19:                                               ; preds = %9
  %20 = load i32, i32* %6, align 8
  %21 = sext i32 %20 to i64
  %22 = shl nsw i64 %21, 3
  %23 = getelementptr inbounds i8, i8* %16, i64 %22
  %24 = sub nsw i32 %10, %20
  %25 = sext i32 %24 to i64
  %26 = shl nsw i64 %25, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %26, i1 false)
  store i32 %10, i32* %6, align 8
  store i8* %16, i8** %12, align 8
  br label %27

27:                                               ; preds = %19, %3
  %28 = tail call noalias i8* @malloc(i64 152) #6
  %29 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 6
  %30 = load %struct.sigaction**, %struct.sigaction*** %29, align 8
  %31 = sext i32 %1 to i64
  %32 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %30, i64 %31
  %33 = bitcast %struct.sigaction** %32 to i8**
  store i8* %28, i8** %33, align 8
  %34 = load %struct.sigaction**, %struct.sigaction*** %29, align 8
  %35 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %34, i64 %31
  %36 = load %struct.sigaction*, %struct.sigaction** %35, align 8
  %37 = icmp eq %struct.sigaction* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %58

39:                                               ; preds = %27
  %40 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 1
  %41 = bitcast %struct.__sigset_t* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 144, i1 false)
  %42 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 0, i32 0
  store void (i32)* %2, void (i32)** %42, align 8
  %43 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 2
  store i32 268435456, i32* %43, align 8
  %44 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %4, i64 0, i32 1
  %45 = call i32 @sigfillset(%struct.__sigset_t* %44) #6
  %46 = load %struct.sigaction**, %struct.sigaction*** %29, align 8
  %47 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %46, i64 %31
  %48 = load %struct.sigaction*, %struct.sigaction** %47, align 8
  %49 = call i32 @sigaction(i32 %1, %struct.sigaction* nonnull %4, %struct.sigaction* %48) #6
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %58

51:                                               ; preds = %39
  call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #6
  %52 = load %struct.sigaction**, %struct.sigaction*** %29, align 8
  %53 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %52, i64 %31
  %54 = bitcast %struct.sigaction** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @free(i8* %55) #6
  %56 = load %struct.sigaction**, %struct.sigaction*** %29, align 8
  %57 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %56, i64 %31
  store %struct.sigaction* null, %struct.sigaction** %57, align 8
  br label %58

58:                                               ; preds = %39, %18, %51, %38
  %59 = phi i32 [ -1, %38 ], [ -1, %51 ], [ -1, %18 ], [ 0, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #6
  ret i32 %59
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @sigfillset(%struct.__sigset_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @sigaction(i32, %struct.sigaction*, %struct.sigaction*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evsignal_add(%struct.event*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 4
  %3 = load %struct.event_base*, %struct.event_base** %2, align 8
  %4 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 6
  %5 = load i16, i16* %4, align 4
  %6 = and i16 %5, 6
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void (i32, i8*, ...) @event_errx(i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.evsignal_add, i64 0, i64 0)) #6
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 4, i64 %12, i32 0
  %14 = load %struct.event*, %struct.event** %13, align 8
  %15 = icmp eq %struct.event* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %9
  %17 = tail call i32 @_evsignal_set_handler(%struct.event_base* %3, i32 %11, void (i32)* nonnull @evsignal_handler)
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %36, label %19

19:                                               ; preds = %16
  store %struct.event_base* %3, %struct.event_base** @evsignal_base, align 8
  %20 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 0
  %25 = tail call i32 @event_add(%struct.event* %24, %struct.timeval* null) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %23
  store i32 1, i32* %20, align 8
  br label %28

28:                                               ; preds = %19, %9, %27
  %29 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 2, i32 0
  store %struct.event* null, %struct.event** %29, align 8
  %30 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 4, i64 %12, i32 1
  %31 = bitcast %struct.event*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 2, i32 1
  %34 = bitcast %struct.event*** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = load %struct.event**, %struct.event*** %30, align 8
  store %struct.event* %0, %struct.event** %35, align 8
  store %struct.event** %29, %struct.event*** %30, align 8
  br label %36

36:                                               ; preds = %23, %16, %28
  %37 = phi i32 [ 0, %28 ], [ -1, %16 ], [ -1, %23 ]
  ret i32 %37
}

declare void @event_errx(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @evsignal_handler(i32) #0 {
  %2 = tail call i32* @__errno_location() #7
  %3 = load %struct.event_base*, %struct.event_base** @evsignal_base, align 8
  %4 = icmp eq %struct.event_base* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.evsignal_handler, i64 0, i64 0), i32 %0) #6
  br label %17

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  %8 = sext i32 %0 to i64
  %9 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 5, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4
  %12 = load %struct.event_base*, %struct.event_base** @evsignal_base, align 8
  %13 = getelementptr inbounds %struct.event_base, %struct.event_base* %12, i64 0, i32 8, i32 3
  store volatile i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %struct.event_base, %struct.event_base* %12, i64 0, i32 8, i32 1, i64 0
  %15 = load i32, i32* %14, align 8
  %16 = tail call i64 @send(i32 %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1, i32 0) #6
  store i32 %7, i32* %2, align 4
  br label %17

17:                                               ; preds = %6, %5
  ret void
}

declare i32 @event_add(%struct.event*, %struct.timeval*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_evsignal_restore_handler(%struct.event_base* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 6
  %4 = load %struct.sigaction**, %struct.sigaction*** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %4, i64 %5
  %7 = load %struct.sigaction*, %struct.sigaction** %6, align 8
  store %struct.sigaction* null, %struct.sigaction** %6, align 8
  %8 = tail call i32 @sigaction(i32 %1, %struct.sigaction* %7, %struct.sigaction* null) #6
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi i32 [ -1, %10 ], [ 0, %2 ]
  %13 = bitcast %struct.sigaction* %7 to i8*
  tail call void @free(i8* %13) #6
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @evsignal_del(%struct.event* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 4
  %3 = load %struct.event_base*, %struct.event_base** %2, align 8
  %4 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 2, i32 0
  %7 = load %struct.event*, %struct.event** %6, align 8
  %8 = icmp eq %struct.event* %7, null
  %9 = getelementptr inbounds %struct.event, %struct.event* %0, i64 0, i32 2, i32 1
  %10 = bitcast %struct.event*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  br i1 %8, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.event, %struct.event* %7, i64 0, i32 2, i32 1
  %14 = bitcast %struct.event*** %13 to i64*
  store i64 %11, i64* %14, align 8
  %15 = sext i32 %5 to i64
  br label %20

16:                                               ; preds = %1
  %17 = sext i32 %5 to i64
  %18 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 4, i64 %17, i32 1
  %19 = bitcast %struct.event*** %18 to i64*
  store i64 %11, i64* %19, align 8
  br label %20

20:                                               ; preds = %16, %12
  %21 = phi i64 [ %17, %16 ], [ %15, %12 ]
  %22 = bitcast %struct.event** %6 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.event*** %9 to i64**
  %25 = load i64*, i64** %24, align 8
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %struct.event_base, %struct.event_base* %3, i64 0, i32 8, i32 4, i64 %21, i32 0
  %27 = load %struct.event*, %struct.event** %26, align 8
  %28 = icmp eq %struct.event* %27, null
  br i1 %28, label %29, label %43

29:                                               ; preds = %20
  %30 = load %struct.event_base*, %struct.event_base** %2, align 8
  %31 = load i32, i32* %4, align 8
  %32 = getelementptr inbounds %struct.event_base, %struct.event_base* %30, i64 0, i32 8, i32 6
  %33 = load %struct.sigaction**, %struct.sigaction*** %32, align 8
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %33, i64 %34
  %36 = load %struct.sigaction*, %struct.sigaction** %35, align 8
  store %struct.sigaction* null, %struct.sigaction** %35, align 8
  %37 = tail call i32 @sigaction(i32 %31, %struct.sigaction* %36, %struct.sigaction* null) #6
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %40

39:                                               ; preds = %29
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %40

40:                                               ; preds = %29, %39
  %41 = phi i32 [ -1, %39 ], [ 0, %29 ]
  %42 = bitcast %struct.sigaction* %36 to i8*
  tail call void @free(i8* %42) #6
  br label %43

43:                                               ; preds = %20, %40
  %44 = phi i32 [ %41, %40 ], [ 0, %20 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @evsignal_process(%struct.event_base*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 3
  store volatile i32 0, i32* %2, align 4
  br label %3

3:                                                ; preds = %26, %1
  %4 = phi i64 [ 1, %1 ], [ %27, %26 ]
  %5 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 5, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  store i32 0, i32* %5, align 4
  %9 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 4, i64 %4, i32 0
  %10 = load %struct.event*, %struct.event** %9, align 8
  %11 = icmp eq %struct.event* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = trunc i32 %6 to i16
  br label %14

14:                                               ; preds = %12, %24
  %15 = phi %struct.event* [ %10, %12 ], [ %17, %24 ]
  %16 = getelementptr inbounds %struct.event, %struct.event* %15, i64 0, i32 2, i32 0
  %17 = load %struct.event*, %struct.event** %16, align 8
  %18 = getelementptr inbounds %struct.event, %struct.event* %15, i64 0, i32 6
  %19 = load i16, i16* %18, align 4
  %20 = and i16 %19, 16
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = tail call i32 @event_del(%struct.event* nonnull %15) #6
  br label %24

24:                                               ; preds = %14, %22
  tail call void @event_active(%struct.event* nonnull %15, i32 8, i16 signext %13) #6
  %25 = icmp eq %struct.event* %17, null
  br i1 %25, label %26, label %14

26:                                               ; preds = %24, %8, %3
  %27 = add nuw nsw i64 %4, 1
  %28 = icmp eq i64 %27, 65
  br i1 %28, label %29, label %3

29:                                               ; preds = %26
  ret void
}

declare i32 @event_del(%struct.event*) local_unnamed_addr #2

declare void @event_active(%struct.event*, i32, i16 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @evsignal_dealloc(%struct.event_base*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 0
  %7 = tail call i32 @event_del(%struct.event* %6) #6
  store i32 0, i32* %2, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 7
  %10 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 6
  br label %11

11:                                               ; preds = %28, %8
  %12 = phi i64 [ 0, %8 ], [ %29, %28 ]
  %13 = load i32, i32* %9, align 8
  %14 = sext i32 %13 to i64
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = load %struct.sigaction**, %struct.sigaction*** %10, align 8
  %18 = getelementptr inbounds %struct.sigaction*, %struct.sigaction** %17, i64 %12
  %19 = load %struct.sigaction*, %struct.sigaction** %18, align 8
  %20 = icmp eq %struct.sigaction* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %16
  store %struct.sigaction* null, %struct.sigaction** %18, align 8
  %22 = trunc i64 %12 to i32
  %23 = tail call i32 @sigaction(i32 %22, %struct.sigaction* nonnull %19, %struct.sigaction* null) #6
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  tail call void (i8*, ...) @event_warn(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %26

26:                                               ; preds = %21, %25
  %27 = bitcast %struct.sigaction* %19 to i8*
  tail call void @free(i8* %27) #6
  br label %28

28:                                               ; preds = %16, %11, %26
  %29 = add nuw nsw i64 %12, 1
  %30 = icmp eq i64 %29, 65
  br i1 %30, label %31, label %11

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 1, i64 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call i32 @close(i32 %33) #6
  store i32 -1, i32* %32, align 8
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %struct.event_base, %struct.event_base* %0, i64 0, i32 8, i32 1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = tail call i32 @close(i32 %39) #6
  store i32 -1, i32* %38, align 4
  br label %43

43:                                               ; preds = %37, %41
  store i32 0, i32* %9, align 8
  %44 = load %struct.sigaction**, %struct.sigaction*** %10, align 8
  %45 = icmp eq %struct.sigaction** %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = bitcast %struct.sigaction** %44 to i8*
  tail call void @free(i8* %47) #6
  store %struct.sigaction** null, %struct.sigaction*** %10, align 8
  br label %48

48:                                               ; preds = %43, %46
  ret void
}

declare i32 @close(i32) local_unnamed_addr #2

declare i64 @recv(i32, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare i64 @send(i32, i8*, i64, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
