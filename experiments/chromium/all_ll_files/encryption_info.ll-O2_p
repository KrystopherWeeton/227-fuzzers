; ModuleID = '../../third_party/ffmpeg/libavutil/encryption_info.c'
source_filename = "../../third_party/ffmpeg/libavutil/encryption_info.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVEncryptionInfo = type { i32, i32, i32, i8*, i32, i8*, i32, %struct.AVSubsampleEncryptionInfo*, i32 }
%struct.AVSubsampleEncryptionInfo = type { i32, i32 }
%struct.AVEncryptionInitInfo = type { i8*, i32, i8**, i32, i32, i8*, i32, %struct.AVEncryptionInitInfo* }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32, i32, i32) local_unnamed_addr #0 {
  %4 = tail call noalias i8* @av_mallocz(i64 64) #3
  %5 = bitcast i8* %4 to %struct.AVEncryptionInfo*
  %6 = icmp eq i8* %4, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %3
  %8 = zext i32 %1 to i64
  %9 = tail call noalias i8* @av_mallocz(i64 %8) #3
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  %11 = bitcast i8* %10 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = zext i32 %2 to i64
  %15 = tail call noalias i8* @av_mallocz(i64 %14) #3
  %16 = getelementptr inbounds i8, i8* %4, i64 32
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 40
  %19 = bitcast i8* %18 to i32*
  store i32 %2, i32* %19, align 8
  %20 = zext i32 %0 to i64
  %21 = tail call i8* @av_mallocz_array(i64 %20, i64 8) #3
  %22 = getelementptr inbounds i8, i8* %4, i64 48
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %4, i64 56
  %25 = bitcast i8* %24 to i32*
  store i32 %0, i32* %25, align 8
  %26 = load i8*, i8** %11, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %7
  %29 = load i8*, i8** %17, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = icmp eq i8* %21, null
  %33 = icmp ne i32 %0, 0
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %38

35:                                               ; preds = %28, %7, %31
  tail call void @av_free(i8* %26) #3
  %36 = load i8*, i8** %17, align 8
  tail call void @av_free(i8* %36) #3
  %37 = load i8*, i8** %23, align 8
  tail call void @av_free(i8* %37) #3
  tail call void @av_free(i8* nonnull %4) #3
  br label %38

38:                                               ; preds = %31, %3, %35
  %39 = phi %struct.AVEncryptionInfo* [ null, %35 ], [ null, %3 ], [ %5, %31 ]
  ret %struct.AVEncryptionInfo* %39
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #1

declare i8* @av_mallocz_array(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_encryption_info_free(%struct.AVEncryptionInfo*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVEncryptionInfo* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  tail call void @av_free(i8* %5) #3
  %6 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 5
  %7 = load i8*, i8** %6, align 8
  tail call void @av_free(i8* %7) #3
  %8 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 7
  %9 = bitcast %struct.AVSubsampleEncryptionInfo** %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @av_free(i8* %10) #3
  %11 = bitcast %struct.AVEncryptionInfo* %0 to i8*
  tail call void @av_free(i8* nonnull %11) #3
  br label %12

12:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVEncryptionInfo* @av_encryption_info_clone(%struct.AVEncryptionInfo* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVEncryptionInfo* %0, null
  br i1 %2, label %43, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = tail call %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32 %5, i32 %7, i32 %9)
  %11 = icmp eq %struct.AVEncryptionInfo* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 0
  store i32 %14, i32* %15, align 8
  %16 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 5
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 5
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* %8, align 8
  %27 = zext i32 %26 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %25, i64 %27, i1 false)
  %28 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 3
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 3
  %31 = load i8*, i8** %30, align 8
  %32 = load i32, i32* %6, align 8
  %33 = zext i32 %32 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %31, i64 %33, i1 false)
  %34 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %10, i64 0, i32 7
  %35 = bitcast %struct.AVSubsampleEncryptionInfo** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 7
  %38 = bitcast %struct.AVSubsampleEncryptionInfo** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = load i32, i32* %4, align 8
  %41 = zext i32 %40 to i64
  %42 = shl nuw nsw i64 %41, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %39, i64 %42, i1 false)
  br label %43

43:                                               ; preds = %3, %1, %12
  %44 = phi %struct.AVEncryptionInfo* [ %10, %12 ], [ null, %1 ], [ null, %3 ]
  ret %struct.AVEncryptionInfo* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @av_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVEncryptionInfo* @av_encryption_info_get_side_data(i8* readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  %4 = icmp ult i64 %1, 24
  %5 = or i1 %3, %4
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 12
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %9) #4, !srcloc !2
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %0, i64 16
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %14) #4, !srcloc !2
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 20
  %18 = bitcast i8* %17 to i32*
  %19 = load i32, i32* %18, align 1
  %20 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %19) #4, !srcloc !2
  %21 = zext i32 %20 to i64
  %22 = add nuw nsw i64 %11, 24
  %23 = add nuw nsw i64 %22, %16
  %24 = shl nuw nsw i64 %21, 3
  %25 = add nuw nsw i64 %23, %24
  %26 = icmp ugt i64 %25, %1
  br i1 %26, label %73, label %27

27:                                               ; preds = %6
  %28 = tail call %struct.AVEncryptionInfo* @av_encryption_info_alloc(i32 %20, i32 %10, i32 %15)
  %29 = icmp eq %struct.AVEncryptionInfo* %28, null
  br i1 %29, label %73, label %30

30:                                               ; preds = %27
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %32) #4, !srcloc !2
  %34 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 0
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %0, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %37) #4, !srcloc !2
  %39 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %0, i64 8
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  %43 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %42) #4, !srcloc !2
  %44 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %0, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %47, i64 %11, i1 false)
  %48 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 5
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %0, i64 %11
  %51 = getelementptr inbounds i8, i8* %50, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %51, i64 %16, i1 false)
  %52 = icmp eq i32 %20, 0
  br i1 %52, label %73, label %53

53:                                               ; preds = %30
  %54 = getelementptr inbounds i8, i8* %0, i64 %23
  %55 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %28, i64 0, i32 7
  br label %56

56:                                               ; preds = %56, %53
  %57 = phi i64 [ 0, %53 ], [ %71, %56 ]
  %58 = phi i8* [ %54, %53 ], [ %70, %56 ]
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 1
  %61 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %60) #4, !srcloc !2
  %62 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %55, align 8
  %63 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %62, i64 %57, i32 0
  store i32 %61, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %58, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 1
  %67 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %66) #4, !srcloc !2
  %68 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %55, align 8
  %69 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %68, i64 %57, i32 1
  store i32 %67, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %58, i64 8
  %71 = add nuw nsw i64 %57, 1
  %72 = icmp eq i64 %71, %21
  br i1 %72, label %73, label %56

73:                                               ; preds = %56, %30, %27, %6, %2
  %74 = phi %struct.AVEncryptionInfo* [ null, %2 ], [ null, %6 ], [ null, %27 ], [ %28, %30 ], [ %28, %56 ]
  ret %struct.AVEncryptionInfo* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @av_encryption_info_add_side_data(%struct.AVEncryptionInfo* nocapture readonly, i64* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, -25
  br i1 %5, label %83, label %6

6:                                                ; preds = %2
  %7 = sub nuw i32 -25, %4
  %8 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %7, %9
  br i1 %10, label %83, label %11

11:                                               ; preds = %6
  %12 = sub i32 %7, %9
  %13 = lshr i32 %12, 3
  %14 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  br i1 %16, label %83, label %17

17:                                               ; preds = %11
  %18 = add nuw i32 %4, 24
  %19 = add i32 %18, %9
  %20 = shl i32 %15, 3
  %21 = add i32 %19, %20
  %22 = zext i32 %21 to i64
  store i64 %22, i64* %1, align 8
  %23 = tail call noalias i8* @av_malloc(i64 %22) #3
  %24 = icmp eq i8* %23, null
  br i1 %24, label %83, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %27) #4, !srcloc !2
  %29 = bitcast i8* %23 to i32*
  store i32 %28, i32* %29, align 1
  %30 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %31) #4, !srcloc !2
  %33 = getelementptr inbounds i8, i8* %23, i64 4
  %34 = bitcast i8* %33 to i32*
  store i32 %32, i32* %34, align 1
  %35 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %36) #4, !srcloc !2
  %38 = getelementptr inbounds i8, i8* %23, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 1
  %40 = load i32, i32* %3, align 8
  %41 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %40) #4, !srcloc !2
  %42 = getelementptr inbounds i8, i8* %23, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 %41, i32* %43, align 1
  %44 = load i32, i32* %8, align 8
  %45 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %44) #4, !srcloc !2
  %46 = getelementptr inbounds i8, i8* %23, i64 16
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 1
  %48 = load i32, i32* %14, align 8
  %49 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %48) #4, !srcloc !2
  %50 = getelementptr inbounds i8, i8* %23, i64 20
  %51 = bitcast i8* %50 to i32*
  store i32 %49, i32* %51, align 1
  %52 = getelementptr inbounds i8, i8* %23, i64 24
  %53 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 3
  %54 = load i8*, i8** %53, align 8
  %55 = zext i32 %40 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %54, i64 %55, i1 false)
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 5
  %58 = load i8*, i8** %57, align 8
  %59 = zext i32 %44 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %56, i8* align 1 %58, i64 %59, i1 false)
  %60 = icmp eq i32 %48, 0
  br i1 %60, label %83, label %61

61:                                               ; preds = %25
  %62 = getelementptr inbounds i8, i8* %56, i64 %59
  %63 = getelementptr inbounds %struct.AVEncryptionInfo, %struct.AVEncryptionInfo* %0, i64 0, i32 7
  br label %64

64:                                               ; preds = %61, %64
  %65 = phi i64 [ 0, %61 ], [ %79, %64 ]
  %66 = phi i8* [ %62, %61 ], [ %78, %64 ]
  %67 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %63, align 8
  %68 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %67, i64 %65, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %69) #4, !srcloc !2
  %71 = bitcast i8* %66 to i32*
  store i32 %70, i32* %71, align 1
  %72 = load %struct.AVSubsampleEncryptionInfo*, %struct.AVSubsampleEncryptionInfo** %63, align 8
  %73 = getelementptr inbounds %struct.AVSubsampleEncryptionInfo, %struct.AVSubsampleEncryptionInfo* %72, i64 %65, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %74) #4, !srcloc !2
  %76 = getelementptr inbounds i8, i8* %66, i64 4
  %77 = bitcast i8* %76 to i32*
  store i32 %75, i32* %77, align 1
  %78 = getelementptr inbounds i8, i8* %66, i64 8
  %79 = add nuw nsw i64 %65, 1
  %80 = load i32, i32* %14, align 8
  %81 = zext i32 %80 to i64
  %82 = icmp ult i64 %79, %81
  br i1 %82, label %64, label %83

83:                                               ; preds = %64, %25, %17, %2, %6, %11
  %84 = phi i8* [ null, %11 ], [ null, %6 ], [ null, %2 ], [ null, %17 ], [ %23, %25 ], [ %23, %64 ]
  ret i8* %84
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVEncryptionInitInfo* @av_encryption_init_info_alloc(i32, i32, i32, i32) local_unnamed_addr #0 {
  %5 = tail call noalias i8* @av_mallocz(i64 56) #3
  %6 = bitcast i8* %5 to %struct.AVEncryptionInitInfo*
  %7 = icmp eq i8* %5, null
  br i1 %7, label %66, label %8

8:                                                ; preds = %4
  %9 = zext i32 %0 to i64
  %10 = tail call noalias i8* @av_mallocz(i64 %9) #3
  %11 = bitcast i8* %5 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %0, i32* %13, align 8
  %14 = icmp ne i32 %2, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %8
  %16 = zext i32 %1 to i64
  %17 = tail call i8* @av_mallocz_array(i64 %16, i64 8) #3
  %18 = bitcast i8* %17 to i8**
  br label %19

19:                                               ; preds = %8, %15
  %20 = phi i8** [ %18, %15 ], [ null, %8 ]
  %21 = getelementptr inbounds i8, i8* %5, i64 16
  %22 = bitcast i8* %21 to i8***
  store i8** %20, i8*** %22, align 8
  %23 = getelementptr inbounds i8, i8* %5, i64 24
  %24 = bitcast i8* %23 to i32*
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 28
  %26 = bitcast i8* %25 to i32*
  store i32 %2, i32* %26, align 4
  %27 = zext i32 %3 to i64
  %28 = tail call noalias i8* @av_mallocz(i64 %27) #3
  %29 = getelementptr inbounds i8, i8* %5, i64 32
  %30 = bitcast i8* %29 to i8**
  store i8* %28, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %5, i64 40
  %32 = bitcast i8* %31 to i32*
  store i32 %3, i32* %32, align 8
  %33 = load i8*, i8** %11, align 8
  %34 = icmp eq i8* %33, null
  %35 = icmp ne i32 %0, 0
  %36 = and i1 %35, %34
  br i1 %36, label %47, label %37

37:                                               ; preds = %19
  %38 = icmp eq i8* %28, null
  %39 = icmp ne i32 %3, 0
  %40 = and i1 %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %37
  %42 = load i8**, i8*** %22, align 8
  %43 = icmp eq i8** %42, null
  %44 = icmp ne i32 %1, 0
  %45 = and i1 %44, %43
  %46 = and i1 %14, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %41, %37, %19
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* nonnull %6)
  br label %66

48:                                               ; preds = %41
  %49 = and i1 %14, %44
  br i1 %49, label %50, label %66

50:                                               ; preds = %48
  %51 = zext i32 %2 to i64
  %52 = zext i32 %1 to i64
  br label %55

53:                                               ; preds = %55
  %54 = icmp eq i64 %64, %52
  br i1 %54, label %66, label %55

55:                                               ; preds = %53, %50
  %56 = phi i64 [ 0, %50 ], [ %64, %53 ]
  %57 = tail call noalias i8* @av_mallocz(i64 %51) #3
  %58 = load i8**, i8*** %22, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i64 %56
  store i8* %57, i8** %59, align 8
  %60 = load i8**, i8*** %22, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 %56
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  %64 = add nuw nsw i64 %56, 1
  br i1 %63, label %65, label %53

65:                                               ; preds = %55
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* nonnull %6)
  br label %66

66:                                               ; preds = %53, %48, %4, %65, %47
  %67 = phi %struct.AVEncryptionInitInfo* [ null, %47 ], [ null, %65 ], [ null, %4 ], [ %6, %48 ], [ %6, %53 ]
  ret %struct.AVEncryptionInitInfo* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVEncryptionInitInfo* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 2
  br label %9

9:                                                ; preds = %7, %9
  %10 = phi i64 [ 0, %7 ], [ %14, %9 ]
  %11 = load i8**, i8*** %8, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 %10
  %13 = load i8*, i8** %12, align 8
  tail call void @av_free(i8* %13) #3
  %14 = add nuw nsw i64 %10, 1
  %15 = load i32, i32* %4, align 8
  %16 = zext i32 %15 to i64
  %17 = icmp ult i64 %14, %16
  br i1 %17, label %9, label %18

18:                                               ; preds = %9, %3
  %19 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 7
  %20 = load %struct.AVEncryptionInitInfo*, %struct.AVEncryptionInitInfo** %19, align 8
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* %20)
  %21 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @av_free(i8* %22) #3
  %23 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 2
  %24 = bitcast i8*** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @av_free(i8* %25) #3
  %26 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %0, i64 0, i32 5
  %27 = load i8*, i8** %26, align 8
  tail call void @av_free(i8* %27) #3
  %28 = bitcast %struct.AVEncryptionInitInfo* %0 to i8*
  tail call void @av_free(i8* nonnull %28) #3
  ret void

29:                                               ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVEncryptionInitInfo* @av_encryption_init_info_get_side_data(i8* readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  %4 = icmp ult i64 %1, 4
  %5 = or i1 %3, %4
  br i1 %5, label %107, label %6

6:                                                ; preds = %2
  %7 = bitcast i8* %0 to i32*
  %8 = load i32, i32* %7, align 1
  %9 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %8) #4, !srcloc !2
  %10 = zext i32 %9 to i64
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %107, label %12

12:                                               ; preds = %6
  %13 = add i64 %1, -4
  %14 = getelementptr inbounds i8, i8* %0, i64 4
  br label %15

15:                                               ; preds = %97, %12
  %16 = phi i64 [ %105, %97 ], [ 0, %12 ]
  %17 = phi %struct.AVEncryptionInitInfo* [ %51, %97 ], [ inttoptr (i64 -6148914691236517206 to %struct.AVEncryptionInitInfo*), %12 ]
  %18 = phi %struct.AVEncryptionInitInfo* [ %59, %97 ], [ null, %12 ]
  %19 = phi i64 [ %104, %97 ], [ %13, %12 ]
  %20 = phi i8* [ %103, %97 ], [ %14, %12 ]
  %21 = icmp ult i64 %19, 16
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* %18)
  br label %107

23:                                               ; preds = %15
  %24 = bitcast i8* %20 to i32*
  %25 = load i32, i32* %24, align 1
  %26 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %25) #4, !srcloc !2
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %20, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %30) #4, !srcloc !2
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %20, i64 8
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 1
  %36 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %35) #4, !srcloc !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %20, i64 12
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %40) #4, !srcloc !2
  %42 = zext i32 %41 to i64
  %43 = add i64 %19, -16
  %44 = mul nuw i64 %37, %32
  %45 = add nuw i64 %44, %27
  %46 = add nuw i64 %45, %42
  %47 = icmp ult i64 %43, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %23
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* %18)
  br label %107

49:                                               ; preds = %23
  %50 = getelementptr inbounds i8, i8* %20, i64 16
  %51 = tail call %struct.AVEncryptionInitInfo* @av_encryption_init_info_alloc(i32 %26, i32 %31, i32 %36, i32 %41)
  %52 = icmp eq %struct.AVEncryptionInitInfo* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  tail call void @av_encryption_init_info_free(%struct.AVEncryptionInitInfo* %18)
  br label %107

54:                                               ; preds = %49
  %55 = icmp eq i64 %16, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %17, i64 0, i32 7
  store %struct.AVEncryptionInitInfo* %51, %struct.AVEncryptionInitInfo** %57, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi %struct.AVEncryptionInitInfo* [ %18, %56 ], [ %51, %54 ]
  %60 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %51, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %50, i64 %27, i1 false)
  %62 = getelementptr inbounds i8, i8* %50, i64 %27
  %63 = icmp eq i32 %31, 0
  br i1 %63, label %97, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %51, i64 0, i32 2
  %66 = sub i64 %43, %44
  %67 = and i64 %32, 1
  %68 = icmp eq i32 %31, 1
  br i1 %68, label %87, label %69

69:                                               ; preds = %64
  %70 = sub nsw i64 %32, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %84, %71 ]
  %73 = phi i8* [ %62, %69 ], [ %83, %71 ]
  %74 = phi i64 [ %70, %69 ], [ %85, %71 ]
  %75 = load i8**, i8*** %65, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 %72
  %77 = load i8*, i8** %76, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %73, i64 %37, i1 false)
  %78 = getelementptr inbounds i8, i8* %73, i64 %37
  %79 = or i64 %72, 1
  %80 = load i8**, i8*** %65, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 %79
  %82 = load i8*, i8** %81, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 1 %78, i64 %37, i1 false)
  %83 = getelementptr inbounds i8, i8* %78, i64 %37
  %84 = add nuw nsw i64 %72, 2
  %85 = add i64 %74, -2
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %71

87:                                               ; preds = %71, %64
  %88 = phi i8* [ undef, %64 ], [ %83, %71 ]
  %89 = phi i64 [ 0, %64 ], [ %84, %71 ]
  %90 = phi i8* [ %62, %64 ], [ %83, %71 ]
  %91 = icmp eq i64 %67, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %87
  %93 = load i8**, i8*** %65, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 %89
  %95 = load i8*, i8** %94, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %90, i64 %37, i1 false)
  %96 = getelementptr inbounds i8, i8* %90, i64 %37
  br label %97

97:                                               ; preds = %92, %87, %58
  %98 = phi i8* [ %62, %58 ], [ %88, %87 ], [ %96, %92 ]
  %99 = phi i64 [ %43, %58 ], [ %66, %87 ], [ %66, %92 ]
  %100 = sub i64 %99, %27
  %101 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %51, i64 0, i32 5
  %102 = load i8*, i8** %101, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %98, i64 %42, i1 false)
  %103 = getelementptr inbounds i8, i8* %98, i64 %42
  %104 = sub i64 %100, %42
  %105 = add nuw nsw i64 %16, 1
  %106 = icmp eq i64 %105, %10
  br i1 %106, label %107, label %15

107:                                              ; preds = %97, %6, %2, %53, %48, %22
  %108 = phi %struct.AVEncryptionInitInfo* [ null, %22 ], [ null, %48 ], [ null, %53 ], [ null, %2 ], [ null, %6 ], [ %59, %97 ]
  ret %struct.AVEncryptionInitInfo* %108
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @av_encryption_init_info_add_side_data(%struct.AVEncryptionInitInfo* readonly, i64* nocapture) local_unnamed_addr #0 {
  %3 = icmp eq %struct.AVEncryptionInitInfo* %0, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2, %33
  %5 = phi i64 [ %34, %33 ], [ 4, %2 ]
  %6 = phi i32 [ %21, %33 ], [ 0, %2 ]
  %7 = phi %struct.AVEncryptionInitInfo* [ %36, %33 ], [ %0, %2 ]
  %8 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %7, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add i64 %5, 16
  %15 = add i64 %14, %10
  %16 = add i64 %15, %13
  %17 = icmp eq i32 %6, -1
  %18 = icmp ugt i64 %16, 4294967295
  %19 = or i1 %17, %18
  br i1 %19, label %114, label %20

20:                                               ; preds = %4
  %21 = add nuw i32 %6, 1
  %22 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %7, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %7, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = mul nuw i64 %29, %26
  %31 = add nuw i64 %30, %16
  %32 = icmp ugt i64 %31, 4294967295
  br i1 %32, label %114, label %33

33:                                               ; preds = %20, %25
  %34 = phi i64 [ %31, %25 ], [ %16, %20 ]
  %35 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %7, i64 0, i32 7
  %36 = load %struct.AVEncryptionInitInfo*, %struct.AVEncryptionInitInfo** %35, align 8
  %37 = icmp eq %struct.AVEncryptionInitInfo* %36, null
  br i1 %37, label %38, label %4

38:                                               ; preds = %33, %2
  %39 = phi i32 [ 0, %2 ], [ %21, %33 ]
  %40 = phi i64 [ 4, %2 ], [ %34, %33 ]
  store i64 %40, i64* %1, align 8
  %41 = tail call noalias i8* @av_malloc(i64 %40) #3
  %42 = icmp eq i8* %41, null
  br i1 %42, label %114, label %43

43:                                               ; preds = %38
  %44 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %39) #4, !srcloc !2
  %45 = bitcast i8* %41 to i32*
  store i32 %44, i32* %45, align 1
  br i1 %3, label %114, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %41, i64 4
  br label %48

48:                                               ; preds = %46, %109
  %49 = phi i8* [ %110, %109 ], [ %47, %46 ]
  %50 = phi %struct.AVEncryptionInitInfo* [ %112, %109 ], [ %0, %46 ]
  %51 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %52) #4, !srcloc !2
  %54 = bitcast i8* %49 to i32*
  store i32 %53, i32* %54, align 1
  %55 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %56) #4, !srcloc !2
  %58 = getelementptr inbounds i8, i8* %49, i64 4
  %59 = bitcast i8* %58 to i32*
  store i32 %57, i32* %59, align 1
  %60 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %61) #4, !srcloc !2
  %63 = getelementptr inbounds i8, i8* %49, i64 8
  %64 = bitcast i8* %63 to i32*
  store i32 %62, i32* %64, align 1
  %65 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %66) #4, !srcloc !2
  %68 = getelementptr inbounds i8, i8* %49, i64 12
  %69 = bitcast i8* %68 to i32*
  store i32 %67, i32* %69, align 1
  %70 = getelementptr inbounds i8, i8* %49, i64 16
  %71 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = load i32, i32* %51, align 8
  %74 = zext i32 %73 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %72, i64 %74, i1 false)
  %75 = load i32, i32* %51, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %70, i64 %76
  %78 = load i32, i32* %55, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %98, label %80

80:                                               ; preds = %48
  %81 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 2
  %82 = load i32, i32* %60, align 4
  br label %83

83:                                               ; preds = %80, %83
  %84 = phi i32 [ %82, %80 ], [ %91, %83 ]
  %85 = phi i64 [ 0, %80 ], [ %94, %83 ]
  %86 = phi i8* [ %77, %80 ], [ %93, %83 ]
  %87 = load i8**, i8*** %81, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 %85
  %89 = load i8*, i8** %88, align 8
  %90 = zext i32 %84 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %89, i64 %90, i1 false)
  %91 = load i32, i32* %60, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %86, i64 %92
  %94 = add nuw nsw i64 %85, 1
  %95 = load i32, i32* %55, align 8
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %94, %96
  br i1 %97, label %83, label %98

98:                                               ; preds = %83, %48
  %99 = phi i8* [ %77, %48 ], [ %93, %83 ]
  %100 = load i32, i32* %65, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 5
  %104 = load i8*, i8** %103, align 8
  %105 = zext i32 %100 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %104, i64 %105, i1 false)
  %106 = load i32, i32* %65, align 8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %99, i64 %107
  br label %109

109:                                              ; preds = %98, %102
  %110 = phi i8* [ %108, %102 ], [ %99, %98 ]
  %111 = getelementptr inbounds %struct.AVEncryptionInitInfo, %struct.AVEncryptionInitInfo* %50, i64 0, i32 7
  %112 = load %struct.AVEncryptionInitInfo*, %struct.AVEncryptionInitInfo** %111, align 8
  %113 = icmp eq %struct.AVEncryptionInitInfo* %112, null
  br i1 %113, label %114, label %48

114:                                              ; preds = %25, %4, %109, %43, %38
  %115 = phi i8* [ null, %38 ], [ %41, %43 ], [ %41, %109 ], [ null, %4 ], [ null, %25 ]
  ret i8* %115
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1439928}
