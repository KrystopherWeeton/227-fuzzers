; ModuleID = '../../components/leveldb_proto/public/proto_database.cc'
source_filename = "../../components/leveldb_proto/public/proto_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.leveldb_env::Options" = type { %"struct.leveldb::Options", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback" }
%"struct.leveldb::Options" = type { %"class.leveldb::Comparator"*, i8, i8, i8, %"class.leveldb::Env"*, %"class.leveldb::Logger"*, i64, i32, %"class.leveldb::Cache"*, i64, i32, i64, i32, i8, %"class.leveldb::FilterPolicy"* }
%"class.leveldb::Comparator" = type opaque
%"class.leveldb::Env" = type { i32 (...)** }
%"class.leveldb::Logger" = type { i32 (...)** }
%"class.leveldb::Cache" = type { i32 (...)**, %"struct.leveldb::Cache::Rep"* }
%"struct.leveldb::Cache::Rep" = type opaque
%"class.leveldb::FilterPolicy" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device = internal unnamed_addr global i8 0, align 1
@_ZGVZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13leveldb_proto19CreateSimpleOptionsEv(%"struct.leveldb_env::Options"* noalias sret) local_unnamed_addr #0 {
  %2 = bitcast %"struct.leveldb_env::Options"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 -86, i64 112, i1 false)
  tail call void @_ZN11leveldb_env7OptionsC1Ev(%"struct.leveldb_env::Options"* %0) #4
  %3 = getelementptr inbounds %"struct.leveldb_env::Options", %"struct.leveldb_env::Options"* %0, i64 0, i32 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.leveldb_env::Options", %"struct.leveldb_env::Options"* %0, i64 0, i32 0, i32 7
  store i32 0, i32* %4, align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13, !prof !2

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device) #4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN4base7SysInfo14IsLowEndDeviceEv() #4
  %12 = zext i1 %11 to i8
  store i8 %12, i8* @_ZZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device) #4
  br label %13

13:                                               ; preds = %7, %10, %1
  %14 = load i8, i8* @_ZZN13leveldb_proto19CreateSimpleOptionsEvE17is_low_end_device, align 1, !range !3
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"struct.leveldb_env::Options", %"struct.leveldb_env::Options"* %0, i64 0, i32 0, i32 6
  %17 = select i1 %15, i64 524288, i64 131072
  store i64 %17, i64* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11leveldb_env7OptionsC1Ev(%"struct.leveldb_env::Options"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

declare zeroext i1 @_ZN4base7SysInfo14IsLowEndDeviceEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
