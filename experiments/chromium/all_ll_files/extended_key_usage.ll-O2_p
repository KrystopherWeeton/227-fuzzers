; ModuleID = '../../net/cert/internal/extended_key_usage.cc'
source_filename = "../../net/cert/internal/extended_key_usage.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::der::Input"* }
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZZN3net6AnyEKUEvE7any_eku = internal constant [4 x i8] c"U\1D%\00", align 1
@_ZZN3net10ServerAuthEvE11server_auth = internal constant [8 x i8] c"+\06\01\05\05\07\03\01", align 1
@_ZZN3net25NetscapeServerGatedCryptoEvE4data = internal constant [9 x i8] c"`\86H\01\86\F8B\04\01", align 1
@_ZZN3net10ClientAuthEvE11client_auth = internal constant [8 x i8] c"+\06\01\05\05\07\03\02", align 1
@_ZZN3net11CodeSigningEvE12code_signing = internal constant [8 x i8] c"+\06\01\05\05\07\03\03", align 1
@_ZZN3net15EmailProtectionEvE16email_protection = internal constant [8 x i8] c"+\06\01\05\05\07\03\04", align 1
@_ZZN3net12TimeStampingEvE13time_stamping = internal constant [8 x i8] c"+\06\01\05\05\07\03\08", align 1
@_ZZN3net11OCSPSigningEvE12ocsp_signing = internal constant [8 x i8] c"+\06\01\05\05\07\03\09", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net6AnyEKUEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3net6AnyEKUEvE7any_eku, i64 0, i64 0), i64 4 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net10ServerAuthEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net10ServerAuthEvE11server_auth, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net25NetscapeServerGatedCryptoEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZZN3net25NetscapeServerGatedCryptoEvE4data, i64 0, i64 0), i64 9 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net10ClientAuthEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net10ClientAuthEvE11client_auth, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net11CodeSigningEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net11CodeSigningEvE12code_signing, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net15EmailProtectionEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net15EmailProtectionEvE16email_protection, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net12TimeStampingEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net12TimeStampingEvE13time_stamping, i64 0, i64 0), i64 8 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN3net11OCSPSigningEv() local_unnamed_addr #0 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZZN3net11OCSPSigningEvE12ocsp_signing, i64 0, i64 0), i64 8 }
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net17ParseEKUExtensionERKNS_3der5InputEPNSt3__16vectorIS1_NS4_9allocatorIS1_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #1 {
  %3 = alloca %"class.net::der::Parser", align 8
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Input", align 8
  %6 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %"class.net::der::Parser"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %8 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8
  %9 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %4) #8
  %10 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %3, %"class.net::der::Parser"* nonnull %4) #8
  br i1 %10, label %11, label %94

11:                                               ; preds = %2
  %12 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %12, label %13, label %94

13:                                               ; preds = %11
  %14 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %14, label %15, label %91

15:                                               ; preds = %13
  %16 = bitcast %"class.net::der::Input"* %5 to i8*
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.net::der::Input"** %17 to i64*
  %20 = bitcast %"class.std::__1::vector"* %1 to i64*
  %21 = bitcast %"class.net::der::Input"** %18 to i64*
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %23 = bitcast %"class.net::der::Input"* %5 to i8*
  br label %24

24:                                               ; preds = %15, %88
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %5) #8
  %25 = call zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"* nonnull %4, i32 6, %"class.net::der::Input"* nonnull %5) #8
  br i1 %25, label %26, label %90

26:                                               ; preds = %24
  %27 = load %"class.net::der::Input"*, %"class.net::der::Input"** %17, align 8
  %28 = load %"class.net::der::Input"*, %"class.net::der::Input"** %18, align 8
  %29 = icmp eq %"class.net::der::Input"* %27, %28
  %30 = ptrtoint %"class.net::der::Input"* %28 to i64
  br i1 %29, label %35, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.net::der::Input"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %16, i64 16, i1 false) #8
  %33 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %27, i64 1
  %34 = ptrtoint %"class.net::der::Input"* %33 to i64
  store i64 %34, i64* %19, align 8
  br label %88

35:                                               ; preds = %26
  %36 = ptrtoint %"class.net::der::Input"* %27 to i64
  %37 = load i64, i64* %20, align 8
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 4
  %40 = add nsw i64 %39, 1
  %41 = icmp ugt i64 %40, 1152921504606846975
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %43) #9
  unreachable

44:                                               ; preds = %35
  %45 = sub i64 %30, %37
  %46 = ashr exact i64 %45, 4
  %47 = icmp ult i64 %46, 576460752303423487
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = ashr exact i64 %45, 3
  %50 = icmp ult i64 %49, %40
  %51 = select i1 %50, i64 %40, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 1152921504606846975
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  call void @abort() #9
  unreachable

56:                                               ; preds = %53, %44
  %57 = phi i64 [ %51, %53 ], [ 1152921504606846975, %44 ]
  %58 = shl i64 %57, 4
  %59 = call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"class.net::der::Input"*
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.net::der::Input"* [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %63, i64 %39
  %65 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %63, i64 %62
  %66 = ptrtoint %"class.net::der::Input"* %65 to i64
  %67 = bitcast %"class.net::der::Input"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %16, i64 16, i1 false) #8
  %68 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %64, i64 1
  %69 = ptrtoint %"class.net::der::Input"* %68 to i64
  %70 = load %"class.net::der::Input"*, %"class.net::der::Input"** %22, align 8
  %71 = load i64, i64* %19, align 8
  %72 = ptrtoint %"class.net::der::Input"* %70 to i64
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 4
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %64, i64 %75
  %77 = ptrtoint %"class.net::der::Input"* %76 to i64
  %78 = icmp sgt i64 %73, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %61
  %80 = bitcast %"class.net::der::Input"* %76 to i8*
  %81 = bitcast %"class.net::der::Input"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 %73, i1 false) #8
  %82 = load %"class.net::der::Input"*, %"class.net::der::Input"** %22, align 8
  br label %83

83:                                               ; preds = %79, %61
  %84 = phi %"class.net::der::Input"* [ %70, %61 ], [ %82, %79 ]
  store i64 %77, i64* %20, align 8
  store i64 %69, i64* %19, align 8
  store i64 %66, i64* %21, align 8
  %85 = icmp eq %"class.net::der::Input"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.net::der::Input"* %84 to i8*
  call void @_ZdlPv(i8* %87) #10
  br label %88

88:                                               ; preds = %31, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  %89 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %89, label %24, label %91

90:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br label %94

91:                                               ; preds = %88, %13
  %92 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %3) #8
  %93 = xor i1 %92, true
  br label %94

94:                                               ; preds = %91, %90, %11, %2
  %95 = phi i1 [ false, %90 ], [ false, %2 ], [ false, %11 ], [ %93, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret i1 %95
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #3

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"*, %"class.net::der::Parser"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #3

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #3

declare zeroext i1 @_ZN3net3der6Parser7ReadTagEjPNS0_5InputE(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
