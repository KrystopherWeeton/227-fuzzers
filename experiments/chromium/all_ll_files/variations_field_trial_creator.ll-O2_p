; ModuleID = '../../components/variations/service/variations_field_trial_creator.cc'
source_filename = "../../components/variations/service/variations_field_trial_creator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.variations::VariationsFieldTrialCreator" = type { i32 (...)**, %"class.variations::VariationsServiceClient"*, %"class.variations::UIStringOverrider", %"class.std::__1::unique_ptr", i8, %"class.std::__1::basic_string", i8, i32, %"class.std::__1::unordered_map.86" }
%"class.variations::UIStringOverrider" = type { i32*, i32*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.variations::VariationsSeedStore"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.86" = type { %"class.std::__1::__hash_table.87" }
%"class.std::__1::__hash_table.87" = type <{ %"class.std::__1::unique_ptr.88", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", [4 x i8] }>
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90", %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::__hash_node_base.91"** }
%"struct.std::__1::__hash_node_base.91" = type { %"struct.std::__1::__hash_node_base.91"* }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.std::__1::__bucket_list_deallocator.93" }
%"class.std::__1::__bucket_list_deallocator.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base.91" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { float }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %class.scoped_refptr.24, %"class.base::RepeatingCallback.25", %class.scoped_refptr.26, %"class.std::__1::unordered_map.54" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.15" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.24 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.25" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.26 = type { %class.PrefRegistry* }
%class.PrefRegistry = type { i32 (...)**, %"class.base::RefCounted.27", %class.scoped_refptr.28, %"class.std::__1::unordered_map", %"class.std::__1::set" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.28 = type { %class.DefaultPrefStore* }
%class.DefaultPrefStore = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unordered_map.54" = type { %"class.std::__1::__hash_table.55" }
%"class.std::__1::__hash_table.55" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.74", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base.59"** }
%"struct.std::__1::__hash_node_base.59" = type { %"struct.std::__1::__hash_node_base.59"* }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__bucket_list_deallocator.61" }
%"class.std::__1::__bucket_list_deallocator.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base.59" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.variations::VariationsServiceClient" = type { i32 (...)** }
%"class.variations::VariationsSeedStore" = type <{ i32 (...)**, %class.PrefService*, %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.265 }
%struct.anon.265 = type { %"struct.std::__1::__padding.266", i8 }
%"struct.std::__1::__padding.266" = type { [1 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map.119", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.129" = type opaque
%"class.metrics::MetricsStateManager" = type { %class.PrefService*, %"class.metrics::EnabledStateProvider"*, %"class.base::RepeatingCallback.189", %"class.base::RepeatingCallback.190", %"class.metrics::CleanExitBeacon", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.metrics::EntropyState", i32, i8, %"class.std::__1::basic_string", %"class.metrics::ClonedInstallDetector" }
%"class.metrics::EnabledStateProvider" = type opaque
%"class.base::RepeatingCallback.189" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.190" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.metrics::CleanExitBeacon" = type { %class.PrefService*, i8, %"class.base::Time", %"class.std::__1::basic_string.191" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__rep" = type { %union.anon.194 }
%union.anon.194 = type { %"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" }
%"struct.std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__long" = type { i32*, i64, i64 }
%"class.metrics::EntropyState" = type <{ %class.PrefService*, i32, i32, i32, [4 x i8] }>
%"class.metrics::ClonedInstallDetector" = type { i32 (...)**, i8, i8, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.200 }
%class.scoped_refptr.200 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.201", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.201" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.202" }
%"struct.std::__1::atomic.202" = type { %"struct.std::__1::__atomic_base.203" }
%"struct.std::__1::__atomic_base.203" = type { %"struct.std::__1::__atomic_base.204" }
%"struct.std::__1::__atomic_base.204" = type { %"struct.std::__1::__cxx_atomic_impl.205" }
%"struct.std::__1::__cxx_atomic_impl.205" = type { %"struct.std::__1::__cxx_atomic_base_impl.206" }
%"struct.std::__1::__cxx_atomic_base_impl.206" = type { i8 }
%"class.variations::PlatformFieldTrials" = type { i32 (...)** }
%"class.variations::SafeSeedManager" = type { i32 (...)**, %"class.std::__1::unique_ptr.207", i8, %class.PrefService* }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.variations::SafeSeedManager::ActiveSeedState"* }
%"struct.variations::SafeSeedManager::ActiveSeedState" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.210", %"class.base::Time" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.variations::ClientFilterableState"* }
%"struct.variations::ClientFilterableState" = type <{ %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Version", %"class.base::Version", i32, i32, i32, i32, %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.base::OnceCallback", %"class.absl::optional", [6 x i8] }>
%"class.base::Version" = type { %"class.std::__1::vector.213" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { i32*, i32*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { i32* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.220 }
%union.anon.220 = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::RepeatingCallback.260" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FieldTrial::EntropyProvider" = type { i32 (...)** }
%"class.base::FeatureList" = type <{ %"class.base::flat_map", %"class.base::Lock", %"class.std::__1::map.146", %"class.base::FieldTrialList"*, i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.139" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.141" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::pair"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::map.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::FieldTrialList" = type <{ %"class.base::Lock", %"class.std::__1::map.155", %"class.std::__1::unique_ptr.130", %"class.std::__1::vector.164", %"struct.std::__1::atomic", [4 x i8], %"class.std::__1::unique_ptr.171", %"class.base::ReadOnlySharedMemoryRegion", i8, [7 x i8] }>
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.base::FieldTrial::EntropyProvider"* }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.base::FieldTrialList::Observer"**, %"class.base::FieldTrialList::Observer"**, %"class.std::__1::__compressed_pair.166" }
%"class.base::FieldTrialList::Observer" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.base::FieldTrialList::Observer"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.base::PersistentMemoryAllocator"* }
%"class.base::PersistentMemoryAllocator" = type { i32 (...)**, i8*, i32, i32, i32, i64, i8, %"struct.std::__1::atomic.174", %"class.base::HistogramBase"*, %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.178", [4 x i8] }>
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.variations::VariationsIdsProvider" = type { %"class.base::FieldTrialList::Observer", %"class.variations::SyntheticTrialObserver", %"class.base::Lock", %"class.absl::optional.227", i8, %"class.std::__1::set.232", %"class.std::__1::set.232", %"class.std::__1::set.232", %"class.std::__1::set.232", %"class.std::__1::map.242", %"class.base::ObserverList", %"class.variations::VariationsClient"* }
%"class.variations::SyntheticTrialObserver" = type { i32 (...)** }
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%union.anon.231 = type { i32 }
%"class.std::__1::set.232" = type { %"class.std::__1::__tree.233" }
%"class.std::__1::__tree.233" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::map.242" = type { %"class.std::__1::__tree.243" }
%"class.std::__1::__tree.243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.253", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.253" = type { %"class.std::__1::__vector_base.254" }
%"class.std::__1::__vector_base.254" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.255" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.variations::VariationsClient" = type opaque
%"class.std::__1::basic_string.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.264 }
%union.anon.264 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::tuple.383" = type { %"struct.std::__1::__tuple_impl.384" }
%"struct.std::__1::__tuple_impl.384" = type { %"class.std::__1::__tuple_leaf.385" }
%"class.std::__1::__tuple_leaf.385" = type { i32* }
%"class.std::__1::tuple.386" = type { i8 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.315", %"class.std::__1::vector.321", i32, %"class.std::__1::map.328", %"class.gfx::Image", %"class.std::__1::map.339", %"class.base::FilePath", %"class.std::__1::unordered_map.86", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.base::Lock"* }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"class.std::__1::unique_ptr.315"*, %"class.std::__1::unique_ptr.315"*, %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.std::__1::unique_ptr.315"* }
%"class.std::__1::map.328" = type { %"class.std::__1::__tree.329" }
%"class.std::__1::__tree.329" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.gfx::Image" = type { %class.scoped_refptr.338 }
%class.scoped_refptr.338 = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.339" = type { %"class.std::__1::__tree.340" }
%"class.std::__1::__tree.340" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.356" }
%"class.base::time_internal::TimeBase.356" = type { i64 }
%"class.variations::VariationsSeed" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField.355", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.351", %"struct.std::__1::atomic.351", %"struct.std::__1::atomic.304", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.351" = type { %"struct.std::__1::__atomic_base.352" }
%"struct.std::__1::__atomic_base.352" = type { %"struct.std::__1::__cxx_atomic_impl.353" }
%"struct.std::__1::__cxx_atomic_impl.353" = type { %"struct.std::__1::__cxx_atomic_base_impl.354" }
%"struct.std::__1::__cxx_atomic_base_impl.354" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedPtrField.355" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.variations::VariationsSeedProcessor" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::RepeatingCallback.270" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.272" }
%"union.absl::variant_internal::DestructibleUnionImpl.272" = type { %"union.absl::variant_internal::DestructibleUnionImpl.273" }
%"union.absl::variant_internal::DestructibleUnionImpl.273" = type { %"union.absl::variant_internal::DestructibleUnionImpl.274" }
%"union.absl::variant_internal::DestructibleUnionImpl.274" = type { %"union.absl::variant_internal::DestructibleUnionImpl.275" }
%"union.absl::variant_internal::DestructibleUnionImpl.275" = type { %"class.std::__1::basic_string" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.base::Value"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.91", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.350" }
%"struct.std::__1::pair.350" = type { i32, %"class.std::__1::basic_string.261" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvjSD_EE3RunEPNS0_13BindStateBaseEjSD_ = comdat any

$_ZN4base8internal9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS4_EEEEEFbvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTVN10variations27VariationsFieldTrialCreatorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::VariationsFieldTrialCreator"*)* @_ZN10variations27VariationsFieldTrialCreatorD2Ev to i8*), i8* bitcast (void (%"class.variations::VariationsFieldTrialCreator"*)* @_ZN10variations27VariationsFieldTrialCreatorD0Ev to i8*), i8* bitcast (%"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)* @_ZN10variations27VariationsFieldTrialCreator12GetSeedStoreEv to i8*)] }, align 8
@_ZN10variations8switches26kVariationsOverrideCountryE = external constant [0 x i8], align 1
@_ZN10variations5prefs18kVariationsCountryE = external constant [0 x i8], align 1
@_ZN10variations8switches19kEnableBenchmarkingE = external constant [0 x i8], align 1
@_ZN10variations8switches22kForceFieldTrialParamsE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [102 x i8] c"Invalid --%s list specified. Make sure you %%-encode the following characters in param values: %%:/.,\00", align 1
@_ZN8switches17kForceFieldTrialsE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Invalid --%s list specified.\00", align 1
@_ZN10variations8switches18kForceVariationIdsE = external constant [0 x i8], align 1
@_ZN10variations8switches25kForceDisableVariationIdsE = external constant [0 x i8], align 1
@_ZN10variations8switches31kDisableFieldTrialTestingConfigE = external constant [0 x i8], align 1
@_ZN10variations8switches20kVariationsServerURLE = external constant [0 x i8], align 1
@_ZN10variations5prefs37kVariationsPermanentOverriddenCountryE = external constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"Variations.LoadPermanentConsistencyCountryResult\00", align 1
@_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE = external constant [0 x i8], align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [50 x i8] c"VariationsFieldTrialCreator::CreateTrialsFromSeed\00", align 1
@.str.4 = private unnamed_addr constant [70 x i8] c"../../components/variations/service/variations_field_trial_creator.cc\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"!create_trials_from_seed_called_\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"Variations.UserChannel\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Variations.PolicyRestriction\00", align 1
@.str.8 = private unnamed_addr constant [40 x i8] c"Variations.SafeMode.FellBackToSafeMode2\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"Variations.SeedProcessingTime\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZN10variations5prefs19kVariationsSeedDateE = external constant [0 x i8], align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"ARM_64\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"ARM\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"x86\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"x86_64\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"arm\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"aarch64\00", align 1
@_ZN10variations5prefs31kVariationsRestrictionsByPolicyE = external constant [0 x i8], align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"Variations.CreateTrials.SeedExpiry\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Variations.SeedFreshness\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZN10variations27VariationsFieldTrialCreator31LoadPermanentConsistencyCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN10variations12_GLOBAL__N_119RecordSeedFreshnessEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN10variations27VariationsFieldTrialCreatorC1EP11PrefServicePNS_23VariationsServiceClientENSt3__110unique_ptrINS_19VariationsSeedStoreENS5_14default_deleteIS7_EEEERKNS_17UIStringOverriderE = hidden unnamed_addr alias void (%"class.variations::VariationsFieldTrialCreator"*, %class.PrefService*, %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsSeedStore"*, %"class.variations::UIStringOverrider"*), void (%"class.variations::VariationsFieldTrialCreator"*, %class.PrefService*, %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsSeedStore"*, %"class.variations::UIStringOverrider"*)* @_ZN10variations27VariationsFieldTrialCreatorC2EP11PrefServicePNS_23VariationsServiceClientENSt3__110unique_ptrINS_19VariationsSeedStoreENS5_14default_deleteIS7_EEEERKNS_17UIStringOverriderE
@_ZN10variations27VariationsFieldTrialCreatorD1Ev = hidden unnamed_addr alias void (%"class.variations::VariationsFieldTrialCreator"*), void (%"class.variations::VariationsFieldTrialCreator"*)* @_ZN10variations27VariationsFieldTrialCreatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreatorC2EP11PrefServicePNS_23VariationsServiceClientENSt3__110unique_ptrINS_19VariationsSeedStoreENS5_14default_deleteIS7_EEEERKNS_17UIStringOverriderE(%"class.variations::VariationsFieldTrialCreator"*, %class.PrefService* nocapture readnone, %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsSeedStore"*, %"class.variations::UIStringOverrider"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.variations::VariationsSeedStore"* %3 to i64
  %7 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations27VariationsFieldTrialCreatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 1
  store %"class.variations::VariationsServiceClient"* %2, %"class.variations::VariationsServiceClient"** %8, align 8
  %9 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 2
  %10 = bitcast %"class.variations::UIStringOverrider"* %9 to i8*
  %11 = bitcast %"class.variations::UIStringOverrider"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false)
  %12 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 4
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %3, i64 0, i32 1
  %17 = load %class.PrefService*, %class.PrefService** %16, align 8
  tail call void @_ZN8language20GetApplicationLocaleEP11PrefService(%"class.std::__1::basic_string"* sret %15, %class.PrefService* %17) #16
  %18 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 6
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 7
  %20 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 3
  %21 = bitcast %"class.std::__1::__compressed_pair.108"* %20 to i32*
  %22 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 36, i1 false)
  store i32 1065353216, i32* %21, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8language20GetApplicationLocaleEP11PrefService(%"class.std::__1::basic_string"* sret, %class.PrefService*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreatorD2Ev(%"class.variations::VariationsFieldTrialCreator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations27VariationsFieldTrialCreatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.91"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.91"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.91"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.91"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.91"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  %20 = icmp eq %"struct.std::__1::__hash_node_base.91"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.91"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.91"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 5
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %27, %33
  %37 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %37, align 8
  store %"class.variations::VariationsSeedStore"* null, %"class.variations::VariationsSeedStore"** %37, align 8
  %39 = icmp eq %"class.variations::VariationsSeedStore"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.variations::VariationsSeedStore"* %38 to void (%"class.variations::VariationsSeedStore"*)***
  %42 = load void (%"class.variations::VariationsSeedStore"*)**, void (%"class.variations::VariationsSeedStore"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.variations::VariationsSeedStore"*)*, void (%"class.variations::VariationsSeedStore"*)** %42, i64 1
  %44 = load void (%"class.variations::VariationsSeedStore"*)*, void (%"class.variations::VariationsSeedStore"*)** %43, align 8
  tail call void %44(%"class.variations::VariationsSeedStore"* nonnull %38) #16
  br label %45

45:                                               ; preds = %36, %40
  %46 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 2
  tail call void @_ZN10variations17UIStringOverriderD1Ev(%"class.variations::UIStringOverrider"* %46) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10variations17UIStringOverriderD1Ev(%"class.variations::UIStringOverrider"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreatorD0Ev(%"class.variations::VariationsFieldTrialCreator"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10variations27VariationsFieldTrialCreatorD2Ev(%"class.variations::VariationsFieldTrialCreator"* %0) #16
  %2 = bitcast %"class.variations::VariationsFieldTrialCreator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10variations27VariationsFieldTrialCreator16GetLatestCountryEv(%"class.std::__1::basic_string"* noalias sret, %"class.variations::VariationsFieldTrialCreator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #16
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches26kVariationsOverrideCountryE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::CommandLine"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches26kVariationsOverrideCountryE, i64 0, i64 0), i64 %10) #16
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %7, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  br i1 %14, label %22, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %5, i64 24, i1 false) #16
  br label %64

22:                                               ; preds = %19
  %23 = load i8*, i8** %6, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %23, i64 %15) #16
  br label %64

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %25, align 8
  %27 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %26, i64 0, i32 1
  %28 = load %class.PrefService*, %class.PrefService** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  %30 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs18kVariationsCountryE, i64 0, i64 0)) #16
  %31 = icmp ugt i64 %30, -17
  br i1 %31, label %32, label %34

32:                                               ; preds = %24
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %33) #18
  unreachable

34:                                               ; preds = %24
  %35 = icmp ult i64 %30, 23
  br i1 %35, label %45, label %36

36:                                               ; preds = %34
  %37 = add nuw i64 %30, 16
  %38 = and i64 %37, -16
  %39 = call i8* @_Znwm(i64 %38) #17
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = or i64 %38, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %43, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %50

45:                                               ; preds = %34
  %46 = trunc i64 %30 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 %46, i8* %48, align 1
  %49 = icmp eq i64 %30, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %45, %36
  %51 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %47, %45 ], [ %44, %36 ]
  %52 = phi i8* [ %29, %45 ], [ %39, %36 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs18kVariationsCountryE, i64 0, i64 0), i64 %30, i1 false) #16
  br label %53

53:                                               ; preds = %45, %50
  %54 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %47, %45 ], [ %51, %50 ]
  %55 = phi i8* [ %29, %45 ], [ %52, %50 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 %30
  store i8 0, i8* %56, align 1
  call void @_ZNK11PrefService9GetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret %0, %class.PrefService* %28, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #16
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #17
  br label %63

63:                                               ; preds = %53, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  br label %64

64:                                               ; preds = %22, %20, %63
  %65 = load i8, i8* %12, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #2

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK11PrefService9GetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations27VariationsFieldTrialCreator16SetupFieldTrialsEPKcS2_S2_RKNSt3__16vectorINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS8_ISA_EEEERKNS4_INS3_4pairIKNS3_17reference_wrapperIKN4base7FeatureEEENSH_11FeatureList13OverrideStateEEENS8_ISO_EEEENS3_10unique_ptrIKNSH_10FieldTrial15EntropyProviderENS3_14default_deleteISW_EEEENST_ISM_NSX_ISM_EEEEPN7metrics19MetricsStateManagerEPNS_19PlatformFieldTrialsEPNS_15SafeSeedManagerEN4absl8optionalIiEE(%"class.variations::VariationsFieldTrialCreator"*, i8*, i8*, i8*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.129"*, i64, i64, %"class.metrics::MetricsStateManager"* nocapture readnone, %"class.variations::PlatformFieldTrials"*, %"class.variations::SafeSeedManager"*, i64) local_unnamed_addr #0 align 2 {
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.base::RepeatingCallback.260", align 8
  %26 = inttoptr i64 %6 to %"class.base::FieldTrial::EntropyProvider"*
  %27 = inttoptr i64 %7 to %"class.base::FeatureList"*
  %28 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #16
  %29 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches19kEnableBenchmarkingE, i64 0, i64 0)) #16
  br i1 %29, label %32, label %30

30:                                               ; preds = %12
  %31 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* %1) #16
  br i1 %31, label %32, label %33

32:                                               ; preds = %30, %12
  tail call void @_ZN4base10FieldTrial18EnableBenchmarkingEv() #16
  br label %33

33:                                               ; preds = %32, %30
  %34 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches22kForceFieldTrialParamsE, i64 0, i64 0)) #16
  br i1 %34, label %35, label %49

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  %37 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches22kForceFieldTrialParamsE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %15, %"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches22kForceFieldTrialParamsE, i64 0, i64 0), i64 %37) #16
  %38 = call zeroext i1 @_ZN10variations25AssociateParamsFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #16
  %39 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %45) #17
  br label %46

46:                                               ; preds = %35, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  br i1 %38, label %49, label %47

47:                                               ; preds = %46
  %48 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %16, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches22kForceFieldTrialParamsE, i64 0, i64 0)) #16
  call fastcc void @_ZN10variations12_GLOBAL__N_115ExitWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %16)
  unreachable

49:                                               ; preds = %46, %33
  %50 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceFieldTrialsE, i64 0, i64 0)) #16
  br i1 %50, label %51, label %65

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #16
  %53 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceFieldTrialsE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %17, %"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceFieldTrialsE, i64 0, i64 0), i64 %53) #16
  %54 = call zeroext i1 @_ZN4base14FieldTrialList22CreateTrialsFromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #16
  %55 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %51, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  br i1 %54, label %65, label %63

63:                                               ; preds = %62
  %64 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceFieldTrialsE, i64 0, i64 0)) #16
  call fastcc void @_ZN10variations12_GLOBAL__N_115ExitWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %18)
  unreachable

65:                                               ; preds = %62, %49
  %66 = call %"class.variations::VariationsIdsProvider"* @_ZN10variations21VariationsIdsProvider11GetInstanceEv() #16
  call void @_ZN10variations21VariationsIdsProvider24SetLowEntropySourceValueEN4absl8optionalIiEE(%"class.variations::VariationsIdsProvider"* %66, i64 %11) #16
  %67 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #16
  %68 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches18kForceVariationIdsE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %19, %"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches18kForceVariationIdsE, i64 0, i64 0), i64 %68) #16
  %69 = call i32 @_ZN10variations21VariationsIdsProvider17ForceVariationIdsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEERKS8_(%"class.variations::VariationsIdsProvider"* %66, %"class.std::__1::vector"* dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #16
  %70 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %65, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #16
  %78 = icmp eq i32 %69, 2
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %20, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches18kForceVariationIdsE, i64 0, i64 0)) #16
  call fastcc void @_ZN10variations12_GLOBAL__N_115ExitWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %20)
  unreachable

81:                                               ; preds = %77
  %82 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #16
  %83 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches25kForceDisableVariationIdsE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %21, %"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches25kForceDisableVariationIdsE, i64 0, i64 0), i64 %83) #16
  %84 = call zeroext i1 @_ZN10variations21VariationsIdsProvider24ForceDisableVariationIdsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.variations::VariationsIdsProvider"* %66, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #16
  %85 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #17
  br label %92

92:                                               ; preds = %81, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #16
  br i1 %84, label %95, label %93

93:                                               ; preds = %92
  %94 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %22, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches25kForceDisableVariationIdsE, i64 0, i64 0)) #16
  call fastcc void @_ZN10variations12_GLOBAL__N_115ExitWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %22)
  unreachable

95:                                               ; preds = %92
  %96 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #16
  %97 = icmp eq i8* %2, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = call i64 @strlen(i8* nonnull %2) #16
  br label %103

100:                                              ; preds = %95
  %101 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #16
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #16
  br label %103

103:                                              ; preds = %98, %100
  %104 = phi i64 [ 0, %100 ], [ %99, %98 ]
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %23, %"class.base::CommandLine"* %28, i8* %2, i64 %104) #16
  %105 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #16
  %106 = icmp eq i8* %3, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = call i64 @strlen(i8* nonnull %3) #16
  br label %112

109:                                              ; preds = %103
  %110 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #16
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #16
  br label %112

112:                                              ; preds = %107, %109
  %113 = phi i64 [ 0, %109 ], [ %108, %107 ]
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %24, %"class.base::CommandLine"* %28, i8* %3, i64 %113) #16
  call void @_ZN4base11FeatureList25InitializeFromCommandLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.base::FeatureList"* %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #16
  %114 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %120) #17
  br label %121

121:                                              ; preds = %112, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #16
  %122 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  call void @_ZdlPv(i8* %128) #17
  br label %129

129:                                              ; preds = %121, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #16
  call void @_ZN4base11FeatureList29RegisterExtraFeatureOverridesERKNSt3__16vectorINS1_4pairIKNS1_17reference_wrapperIKNS_7FeatureEEENS0_13OverrideStateEEENS1_9allocatorISA_EEEE(%"class.base::FeatureList"* %27, %"class.std::__1::vector.129"* %5) #16
  %130 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches31kDisableFieldTrialTestingConfigE, i64 0, i64 0)) #16
  br i1 %130, label %163, label %131

131:                                              ; preds = %129
  %132 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches17kForceFieldTrialsE, i64 0, i64 0)) #16
  br i1 %132, label %163, label %133

133:                                              ; preds = %131
  %134 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %28, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches20kVariationsServerURLE, i64 0, i64 0)) #16
  br i1 %134, label %163, label %135

135:                                              ; preds = %133
  %136 = bitcast %"class.base::RepeatingCallback.260"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #16
  %137 = ptrtoint %"class.variations::VariationsFieldTrialCreator"* %0 to i64
  %138 = call i8* @_Znwm(i64 56) #17, !noalias !2
  %139 = bitcast i8* %138 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %139, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.261"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvjSD_EE3RunEPNS0_13BindStateBaseEjSD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !2
  %140 = getelementptr inbounds i8, i8* %138, i64 32
  %141 = bitcast i8* %140 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)* @_ZN10variations27VariationsFieldTrialCreator16OverrideUIStringEjRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i64), i64 0>, <2 x i64>* %141, align 8, !noalias !2
  %142 = getelementptr inbounds i8, i8* %138, i64 48
  %143 = bitcast i8* %142 to i64*
  store i64 %137, i64* %143, align 8, !noalias !2
  %144 = bitcast %"class.base::RepeatingCallback.260"* %25 to i8**
  store i8* %138, i8** %144, align 8, !alias.scope !2
  %145 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 6
  %146 = load i8, i8* %145, align 8, !range !7
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %135
  %149 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 7
  %150 = load i32, i32* %149, align 4
  br label %153

151:                                              ; preds = %135
  %152 = call i32 @_ZN10variations21ClientFilterableState18GetCurrentPlatformEv() #16
  br label %153

153:                                              ; preds = %148, %151
  %154 = phi i32 [ %150, %148 ], [ %152, %151 ]
  %155 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 1
  %156 = load %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsServiceClient"** %155, align 8
  %157 = bitcast %"class.variations::VariationsServiceClient"* %156 to i32 (%"class.variations::VariationsServiceClient"*)***
  %158 = load i32 (%"class.variations::VariationsServiceClient"*)**, i32 (%"class.variations::VariationsServiceClient"*)*** %157, align 8
  %159 = getelementptr inbounds i32 (%"class.variations::VariationsServiceClient"*)*, i32 (%"class.variations::VariationsServiceClient"*)** %158, i64 6
  %160 = load i32 (%"class.variations::VariationsServiceClient"*)*, i32 (%"class.variations::VariationsServiceClient"*)** %159, align 8
  %161 = call i32 %160(%"class.variations::VariationsServiceClient"* %156) #16
  call void @_ZN10variations32AssociateDefaultFieldTrialConfigERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEENS_14Study_PlatformENS_16Study_FormFactorEPNS0_11FeatureListE(%"class.base::RepeatingCallback.260"* nonnull dereferenceable(8) %25, i32 %154, i32 %161, %"class.base::FeatureList"* %27) #16
  %162 = getelementptr inbounds %"class.base::RepeatingCallback.260", %"class.base::RepeatingCallback.260"* %25, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %162) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #16
  br label %165

163:                                              ; preds = %133, %131, %129
  %164 = call zeroext i1 @_ZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerE(%"class.variations::VariationsFieldTrialCreator"* %0, %"class.base::FieldTrial::EntropyProvider"* %26, %"class.base::FeatureList"* %27, %"class.variations::SafeSeedManager"* %10)
  br label %165

165:                                              ; preds = %163, %153
  %166 = phi i1 [ false, %153 ], [ %164, %163 ]
  %167 = bitcast %"class.variations::PlatformFieldTrials"* %9 to void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)***
  %168 = load void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)**, void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)*, void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)** %168, i64 3
  %170 = load void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)*, void (%"class.variations::PlatformFieldTrials"*, i1, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*)** %169, align 8
  call void %170(%"class.variations::PlatformFieldTrials"* %9, i1 zeroext %166, %"class.base::FieldTrial::EntropyProvider"* %26, %"class.base::FeatureList"* %27) #16
  call void @_ZN4base11FeatureList11SetInstanceENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::FeatureList"* %27) #16
  %171 = bitcast %"class.variations::PlatformFieldTrials"* %9 to void (%"class.variations::PlatformFieldTrials"*)***
  %172 = load void (%"class.variations::PlatformFieldTrials"*)**, void (%"class.variations::PlatformFieldTrials"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.variations::PlatformFieldTrials"*)*, void (%"class.variations::PlatformFieldTrials"*)** %172, i64 2
  %174 = load void (%"class.variations::PlatformFieldTrials"*)*, void (%"class.variations::PlatformFieldTrials"*)** %173, align 8
  call void %174(%"class.variations::PlatformFieldTrials"* %9) #16
  %175 = icmp eq i64 %6, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %165
  %177 = inttoptr i64 %6 to void (%"class.base::FieldTrial::EntropyProvider"*)***
  %178 = load void (%"class.base::FieldTrial::EntropyProvider"*)**, void (%"class.base::FieldTrial::EntropyProvider"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.base::FieldTrial::EntropyProvider"*)*, void (%"class.base::FieldTrial::EntropyProvider"*)** %178, i64 1
  %180 = load void (%"class.base::FieldTrial::EntropyProvider"*)*, void (%"class.base::FieldTrial::EntropyProvider"*)** %179, align 8
  call void %180(%"class.base::FieldTrial::EntropyProvider"* nonnull %26) #16
  br label %181

181:                                              ; preds = %165, %176
  ret i1 %166
}

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #2

declare void @_ZN4base10FieldTrial18EnableBenchmarkingEv() local_unnamed_addr #2

declare zeroext i1 @_ZN10variations25AssociateParamsFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @_ZN10variations12_GLOBAL__N_115ExitWithMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #5 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = select i1 %5, i8* %7, i8* %8
  %10 = tail call i32 @puts(i8* %9)
  tail call void @exit(i32 1) #18
  unreachable
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14FieldTrialList22CreateTrialsFromStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.variations::VariationsIdsProvider"* @_ZN10variations21VariationsIdsProvider11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN10variations21VariationsIdsProvider24SetLowEntropySourceValueEN4absl8optionalIiEE(%"class.variations::VariationsIdsProvider"*, i64) local_unnamed_addr #2

declare i32 @_ZN10variations21VariationsIdsProvider17ForceVariationIdsERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEERKS8_(%"class.variations::VariationsIdsProvider"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN10variations21VariationsIdsProvider24ForceDisableVariationIdsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.variations::VariationsIdsProvider"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11FeatureList25InitializeFromCommandLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.base::FeatureList"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base11FeatureList29RegisterExtraFeatureOverridesERKNSt3__16vectorINS1_4pairIKNS1_17reference_wrapperIKNS_7FeatureEEENS0_13OverrideStateEEENS1_9allocatorISA_EEEE(%"class.base::FeatureList"*, %"class.std::__1::vector.129"*) local_unnamed_addr #2

declare void @_ZN10variations32AssociateDefaultFieldTrialConfigERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEEEENS_14Study_PlatformENS_16Study_FormFactorEPNS0_11FeatureListE(%"class.base::RepeatingCallback.260"* dereferenceable(8), i32, i32, %"class.base::FeatureList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreator16OverrideUIStringEjRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"* dereferenceable(24)) #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.383", align 8
  %5 = alloca %"class.std::__1::tuple.386", align 1
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 2
  %9 = tail call i32 @_ZN10variations17UIStringOverrider16GetResourceIndexEj(%"class.variations::UIStringOverrider"* %8, i32 %1) #16
  store i32 %9, i32* %6, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %25, label %11

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_ZN2ui14ResourceBundle17HasSharedInstanceEv() #16
  br i1 %12, label %23, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0
  %15 = bitcast %"class.std::__1::tuple.383"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.std::__1::tuple.383", %"class.std::__1::tuple.383"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %6, i32** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.386", %"class.std::__1::tuple.386"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #16
  %18 = call { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"* %14, i32* nonnull dereferenceable(4) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.383"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.386"* nonnull dereferenceable(1) %5) #16
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %19, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.91"* %20 to %"class.std::__1::basic_string.261"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %22 = call dereferenceable(24) %"class.std::__1::basic_string.261"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.261"* %21, %"class.std::__1::basic_string.261"* dereferenceable(24) %2)
  br label %25

23:                                               ; preds = %11
  %24 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16
  tail call void @_ZN2ui14ResourceBundle28OverrideLocaleStringResourceEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ResourceBundle"* %24, i32 %9, %"class.std::__1::basic_string.261"* dereferenceable(24) %2) #16
  br label %25

25:                                               ; preds = %3, %23, %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10variations27VariationsFieldTrialCreator11GetPlatformEv(%"class.variations::VariationsFieldTrialCreator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  br label %10

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN10variations21ClientFilterableState18GetCurrentPlatformEv() #16
  br label %10

10:                                               ; preds = %8, %5
  %11 = phi i32 [ %7, %5 ], [ %9, %8 ]
  ret i32 %11
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerE(%"class.variations::VariationsFieldTrialCreator"*, %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*, %"class.variations::SafeSeedManager"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.variations::VariationsSeed", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.variations::VariationsSeedProcessor", align 8
  %11 = alloca %"class.base::RepeatingCallback.260", align 8
  %12 = alloca %"class.base::TimeDelta", align 8
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16, !prof !8

16:                                               ; preds = %4
  %17 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %18 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %20 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %20, i64* %19, align 8
  %21 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %17, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %22

22:                                               ; preds = %4, %16
  %23 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 123, i32 0), %16 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0), %16 ]
  %25 = phi i64 [ -6148914691236517206, %4 ], [ %21, %16 ]
  %26 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !7
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.4, i64 0, i64 0), i32 504, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #16
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  br label %32

32:                                               ; preds = %22, %29
  store i8 1, i8* %26, align 8
  %33 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %34 = call dereferenceable(24) %"class.base::Version"* @_ZN12version_info10GetVersionEv() #16
  %35 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* %34) #16
  br i1 %35, label %36, label %122

36:                                               ; preds = %32
  %37 = call %"struct.variations::ClientFilterableState"* @_ZN10variations27VariationsFieldTrialCreator34GetClientFilterableStateForVersionERKN4base7VersionE(%"class.variations::VariationsFieldTrialCreator"* %0, %"class.base::Version"* dereferenceable(24) %34)
  %38 = ptrtoint %"struct.variations::ClientFilterableState"* %37 to i64
  %39 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %37, i64 0, i32 4
  %40 = load i32, i32* %39, align 8
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 %40) #16
  %41 = getelementptr inbounds %"struct.variations::ClientFilterableState", %"struct.variations::ClientFilterableState"* %37, i64 0, i32 13
  %42 = load i32, i32* %41, align 8
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 %42, i32 3) #16
  %43 = bitcast %"class.variations::VariationsSeed"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %43) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 96, i1 false)
  call void @_ZN10variations14VariationsSeedC2EPN6google8protobuf5ArenaE(%"class.variations::VariationsSeed"* nonnull %7, %"class.google::protobuf::Arena"* null) #16
  %44 = bitcast %"class.variations::SafeSeedManager"* %3 to i1 (%"class.variations::SafeSeedManager"*)***
  %45 = load i1 (%"class.variations::SafeSeedManager"*)**, i1 (%"class.variations::SafeSeedManager"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.variations::SafeSeedManager"*)*, i1 (%"class.variations::SafeSeedManager"*)** %45, i64 2
  %47 = load i1 (%"class.variations::SafeSeedManager"*)*, i1 (%"class.variations::SafeSeedManager"*)** %46, align 8
  %48 = call zeroext i1 %47(%"class.variations::SafeSeedManager"* %3) #16
  br i1 %48, label %49, label %51

49:                                               ; preds = %36
  %50 = call zeroext i1 @_ZN10variations27VariationsFieldTrialCreator12LoadSafeSeedEPNS_14VariationsSeedEPNS_21ClientFilterableStateE(%"class.variations::VariationsFieldTrialCreator"* %0, %"class.variations::VariationsSeed"* nonnull %7, %"struct.variations::ClientFilterableState"* %37)
  br label %51

51:                                               ; preds = %49, %36
  %52 = phi i1 [ false, %36 ], [ %50, %49 ]
  %53 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #16
  %55 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #16
  br i1 %52, label %59, label %57

57:                                               ; preds = %51
  %58 = call zeroext i1 @_ZN10variations27VariationsFieldTrialCreator8LoadSeedEPNS_14VariationsSeedEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_(%"class.variations::VariationsFieldTrialCreator"* %0, %"class.variations::VariationsSeed"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9)
  br i1 %58, label %59, label %101

59:                                               ; preds = %57, %51
  %60 = load atomic i64, i64* @_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %61 = inttoptr i64 %60 to %"class.base::HistogramBase"*
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0), i32 1) #16
  %65 = ptrtoint %"class.base::HistogramBase"* %64 to i64
  store atomic i64 %65, i64* @_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %66

66:                                               ; preds = %59, %63
  %67 = phi %"class.base::HistogramBase"* [ %61, %59 ], [ %64, %63 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %67, i1 zeroext %52) #16
  %68 = bitcast %"class.variations::VariationsSeedProcessor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #16
  call void @_ZN10variations23VariationsSeedProcessorC1Ev(%"class.variations::VariationsSeedProcessor"* nonnull %10) #16
  %69 = bitcast %"class.base::RepeatingCallback.260"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #16
  %70 = ptrtoint %"class.variations::VariationsFieldTrialCreator"* %0 to i64
  %71 = call i8* @_Znwm(i64 56) #17, !noalias !9
  %72 = bitcast i8* %71 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %72, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.261"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvjSD_EE3RunEPNS0_13BindStateBaseEjSD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !9
  %73 = getelementptr inbounds i8, i8* %71, i64 32
  %74 = bitcast i8* %73 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)* @_ZN10variations27VariationsFieldTrialCreator16OverrideUIStringEjRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i64), i64 0>, <2 x i64>* %74, align 8, !noalias !9
  %75 = getelementptr inbounds i8, i8* %71, i64 48
  %76 = bitcast i8* %75 to i64*
  store i64 %70, i64* %76, align 8, !noalias !9
  %77 = bitcast %"class.base::RepeatingCallback.260"* %11 to i8**
  store i8* %71, i8** %77, align 8, !alias.scope !9
  call void @_ZN10variations23VariationsSeedProcessor20CreateTrialsFromSeedERKNS_14VariationsSeedERKNS_21ClientFilterableStateERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS9_11char_traitsIDsEENS9_9allocatorIDsEEEEEEEPKNS7_10FieldTrial15EntropyProviderEPNS7_11FeatureListE(%"class.variations::VariationsSeedProcessor"* nonnull %10, %"class.variations::VariationsSeed"* nonnull dereferenceable(96) %7, %"struct.variations::ClientFilterableState"* dereferenceable(200) %37, %"class.base::RepeatingCallback.260"* nonnull dereferenceable(8) %11, %"class.base::FieldTrial::EntropyProvider"* %1, %"class.base::FeatureList"* %2) #16
  %78 = getelementptr inbounds %"class.base::RepeatingCallback.260", %"class.base::RepeatingCallback.260"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #16
  call void @_ZN10variations23VariationsSeedProcessorD1Ev(%"class.variations::VariationsSeedProcessor"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #16
  br i1 %52, label %87, label %79

79:                                               ; preds = %66
  %80 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %80, align 8
  %82 = call i64 @_ZNK10variations19VariationsSeedStore16GetLastFetchTimeEv(%"class.variations::VariationsSeedStore"* %81) #16
  %83 = bitcast %"class.variations::SafeSeedManager"* %3 to void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)***
  %84 = load void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)**, void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)*, void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)** %84, i64 3
  %86 = load void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)*, void (%"class.variations::SafeSeedManager"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.variations::ClientFilterableState"*, i64)** %85, align 8
  call void %86(%"class.variations::SafeSeedManager"* %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"struct.variations::ClientFilterableState"* %37, i64 %82) #16
  br label %87

87:                                               ; preds = %79, %66
  %88 = phi i64 [ %38, %66 ], [ 0, %79 ]
  %89 = load atomic i64, i64* @_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %90 = inttoptr i64 %89 to %"class.base::HistogramBase"*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %94 = ptrtoint %"class.base::HistogramBase"* %93 to i64
  store atomic i64 %94, i64* @_ZZN10variations27VariationsFieldTrialCreator20CreateTrialsFromSeedEPKN4base10FieldTrial15EntropyProviderEPNS1_11FeatureListEPNS_15SafeSeedManagerEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %95

95:                                               ; preds = %87, %92
  %96 = phi %"class.base::HistogramBase"* [ %90, %87 ], [ %93, %92 ]
  %97 = bitcast %"class.base::TimeDelta"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #16
  %98 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %99 = sub nsw i64 %98, %33
  %100 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %12, i64 0, i32 0
  store i64 %99, i64* %100, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %96, %"class.base::TimeDelta"* nonnull dereferenceable(8) %12) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #16
  br label %101

101:                                              ; preds = %57, %95
  %102 = phi i64 [ %88, %95 ], [ %38, %57 ]
  %103 = phi i1 [ true, %95 ], [ false, %57 ]
  %104 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %101
  %109 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %109) #17
  br label %110

110:                                              ; preds = %101, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  %111 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  %116 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %116) #17
  br label %117

117:                                              ; preds = %110, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  call void @_ZN10variations14VariationsSeedD1Ev(%"class.variations::VariationsSeed"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %43) #16
  %118 = icmp eq i64 %102, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %102 to %"struct.variations::ClientFilterableState"*
  call void @_ZN10variations21ClientFilterableStateD1Ev(%"struct.variations::ClientFilterableState"* nonnull %120) #16
  %121 = inttoptr i64 %102 to i8*
  call void @_ZdlPv(i8* %121) #17
  br label %122

122:                                              ; preds = %119, %117, %32
  %123 = phi i1 [ false, %32 ], [ %103, %117 ], [ %103, %119 ]
  %124 = icmp eq i8* %23, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %122
  %126 = load i8, i8* %23, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %24, i64 %25) #16
  br label %129

129:                                              ; preds = %122, %125, %128
  ret i1 %123
}

declare void @_ZN4base11FeatureList11SetInstanceENSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEE(%"class.base::FeatureList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.variations::ClientFilterableState"* @_ZN10variations27VariationsFieldTrialCreator34GetClientFilterableStateForVersionERKN4base7VersionE(%"class.variations::VariationsFieldTrialCreator"*, %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback.270", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::RepeatingCallback.270", align 8
  %10 = alloca %"class.base::Version", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.base::RepeatingCallback.270"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 1
  %15 = bitcast %"class.variations::VariationsServiceClient"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = tail call i8* @_Znwm(i64 56) #17, !noalias !14
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS4_EEEEEFbvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !14
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 57, i64 0>, <2 x i64>* %20, align 8, !noalias !14
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %16, i64* %22, align 8, !noalias !14
  %23 = bitcast %"class.base::RepeatingCallback.270"* %9 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !14
  %24 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = bitcast %"class.base::RepeatingCallback.270"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = tail call i8* @_Znwm(i64 200) #17
  %27 = bitcast i8* %26 to %"struct.variations::ClientFilterableState"*
  %28 = getelementptr inbounds %"class.base::RepeatingCallback.270", %"class.base::RepeatingCallback.270"* %7, i64 0, i32 0
  %29 = getelementptr inbounds %"class.base::RepeatingCallback.270", %"class.base::RepeatingCallback.270"* %9, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %28, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %29) #16
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %30, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %28) #16
  call void @_ZN10variations21ClientFilterableStateC1EN4base12OnceCallbackIFbvEEE(%"struct.variations::ClientFilterableState"* nonnull %27, %"class.base::OnceCallback"* nonnull %6) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #16
  %31 = getelementptr inbounds %"class.base::RepeatingCallback.270", %"class.base::RepeatingCallback.270"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  %32 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 5
  %33 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %34 = icmp eq %"class.std::__1::basic_string"* %32, %33
  br i1 %34, label %62, label %35

35:                                               ; preds = %2
  %36 = getelementptr inbounds i8, i8* %26, i64 23
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %38, label %52, label %43

43:                                               ; preds = %35
  br i1 %42, label %46, label %44

44:                                               ; preds = %43
  %45 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %45, i64 24, i1 false) #16
  br label %62

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %33, i8* %48, i64 %50) #16
  br label %62

52:                                               ; preds = %35
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %58 = zext i8 %41 to i64
  %59 = select i1 %42, i8* %54, i8* %57
  %60 = select i1 %42, i64 %56, i64 %58
  %61 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %33, i8* %59, i64 %60) #16
  br label %62

62:                                               ; preds = %2, %44, %46, %52
  %63 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %63, align 8
  %65 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %64, i64 0, i32 1
  %66 = load %class.PrefService*, %class.PrefService** %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #16
  %68 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs19kVariationsSeedDateE, i64 0, i64 0)) #16
  %69 = icmp ugt i64 %68, -17
  br i1 %69, label %70, label %72

70:                                               ; preds = %62
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %71) #18
  unreachable

72:                                               ; preds = %62
  %73 = icmp ult i64 %68, 23
  br i1 %73, label %83, label %74

74:                                               ; preds = %72
  %75 = add nuw i64 %68, 16
  %76 = and i64 %75, -16
  %77 = call i8* @_Znwm(i64 %76) #17
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = or i64 %76, -9223372036854775808
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %68, i64* %81, align 8
  %82 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %88

83:                                               ; preds = %72
  %84 = trunc i64 %68 to i8
  %85 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 %84, i8* %86, align 1
  %87 = icmp eq i64 %68, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %83, %74
  %89 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %85, %83 ], [ %82, %74 ]
  %90 = phi i8* [ %67, %83 ], [ %77, %74 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %90, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs19kVariationsSeedDateE, i64 0, i64 0), i64 %68, i1 false) #16
  br label %91

91:                                               ; preds = %88, %83
  %92 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %85, %83 ], [ %89, %88 ]
  %93 = phi i8* [ %67, %83 ], [ %90, %88 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 %68
  store i8 0, i8* %94, align 1
  %95 = call i64 @_ZNK11PrefService7GetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %66, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #16
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %91
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #17
  br label %102

102:                                              ; preds = %91, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #16
  %103 = call i64 @_ZN4base12GetBuildTimeEv() #16
  %104 = icmp eq i64 %95, 0
  %105 = icmp slt i64 %95, %103
  %106 = or i1 %104, %105
  %107 = select i1 %106, i64 %103, i64 %95
  %108 = getelementptr inbounds i8, i8* %26, i64 24
  %109 = bitcast i8* %108 to i64*
  store i64 %107, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %26, i64 32
  %111 = bitcast i8* %110 to %"class.base::Version"*
  %112 = icmp eq %"class.base::Version"* %111, %1
  br i1 %112, label %119, label %113

113:                                              ; preds = %102
  %114 = bitcast i8* %110 to %"class.std::__1::vector.213"*
  %115 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.213"* %114, i32* %116, i32* %118) #16
  br label %119

119:                                              ; preds = %102, %113
  %120 = bitcast %"class.base::Version"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #16
  call void @_ZN10variations21ClientFilterableState12GetOSVersionEv(%"class.base::Version"* nonnull sret %10) #16
  %121 = getelementptr inbounds i8, i8* %26, i64 56
  %122 = bitcast i8* %121 to %"class.std::__1::vector.213"*
  %123 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %10, i64 0, i32 0, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %10, i64 0, i32 0, i32 0, i32 1
  %126 = load i32*, i32** %125, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.213"* %122, i32* %124, i32* %126) #16
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #16
  %127 = load %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsServiceClient"** %14, align 8
  %128 = call i32 @_ZN10variations23VariationsServiceClient23GetChannelForVariationsEv(%"class.variations::VariationsServiceClient"* %127) #16
  %129 = icmp ult i32 %128, 5
  %130 = add i32 %128, -1
  %131 = select i1 %129, i32 %130, i32 -1
  %132 = getelementptr inbounds i8, i8* %26, i64 80
  %133 = bitcast i8* %132 to i32*
  store i32 %131, i32* %133, align 8
  %134 = load %"class.variations::VariationsServiceClient"*, %"class.variations::VariationsServiceClient"** %14, align 8
  %135 = bitcast %"class.variations::VariationsServiceClient"* %134 to i32 (%"class.variations::VariationsServiceClient"*)***
  %136 = load i32 (%"class.variations::VariationsServiceClient"*)**, i32 (%"class.variations::VariationsServiceClient"*)*** %135, align 8
  %137 = getelementptr inbounds i32 (%"class.variations::VariationsServiceClient"*)*, i32 (%"class.variations::VariationsServiceClient"*)** %136, i64 6
  %138 = load i32 (%"class.variations::VariationsServiceClient"*)*, i32 (%"class.variations::VariationsServiceClient"*)** %137, align 8
  %139 = call i32 %138(%"class.variations::VariationsServiceClient"* %134) #16
  %140 = getelementptr inbounds i8, i8* %26, i64 84
  %141 = bitcast i8* %140 to i32*
  store i32 %139, i32* %141, align 4
  %142 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #16
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 24, i1 false) #16
  call void @_ZN4base7SysInfo22ProcessCPUArchitectureEv(%"class.std::__1::basic_string"* nonnull sret %3) #16
  %145 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  %149 = load i64, i64* %144, align 8
  %150 = zext i8 %147 to i64
  %151 = select i1 %148, i64 %149, i64 %150
  %152 = icmp eq i64 %151, 6
  br i1 %152, label %153, label %160

153:                                              ; preds = %119
  %154 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #16
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %229, label %156

156:                                              ; preds = %153
  %157 = load i8, i8* %146, align 1
  %158 = load i64, i64* %144, align 8
  %159 = zext i8 %157 to i64
  br label %160

160:                                              ; preds = %156, %119
  %161 = phi i64 [ %159, %156 ], [ %150, %119 ]
  %162 = phi i64 [ %158, %156 ], [ %149, %119 ]
  %163 = phi i8 [ %157, %156 ], [ %147, %119 ]
  %164 = icmp slt i8 %163, 0
  %165 = select i1 %164, i64 %162, i64 %161
  %166 = icmp eq i64 %165, 3
  br i1 %166, label %167, label %174

167:                                              ; preds = %160
  %168 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i64 3) #16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %229, label %170

170:                                              ; preds = %167
  %171 = load i8, i8* %146, align 1
  %172 = load i64, i64* %144, align 8
  %173 = zext i8 %171 to i64
  br label %174

174:                                              ; preds = %170, %160
  %175 = phi i64 [ %173, %170 ], [ %161, %160 ]
  %176 = phi i64 [ %172, %170 ], [ %162, %160 ]
  %177 = phi i8 [ %171, %170 ], [ %163, %160 ]
  %178 = icmp slt i8 %177, 0
  %179 = select i1 %178, i64 %176, i64 %175
  %180 = icmp eq i64 %179, 3
  br i1 %180, label %181, label %188

181:                                              ; preds = %174
  %182 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i64 3) #16
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %229, label %184

184:                                              ; preds = %181
  %185 = load i8, i8* %146, align 1
  %186 = load i64, i64* %144, align 8
  %187 = zext i8 %185 to i64
  br label %188

188:                                              ; preds = %184, %174
  %189 = phi i64 [ %187, %184 ], [ %175, %174 ]
  %190 = phi i64 [ %186, %184 ], [ %176, %174 ]
  %191 = phi i8 [ %185, %184 ], [ %177, %174 ]
  %192 = icmp slt i8 %191, 0
  %193 = select i1 %192, i64 %190, i64 %189
  %194 = icmp eq i64 %193, 6
  br i1 %194, label %195, label %229

195:                                              ; preds = %188
  %196 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6) #16
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %229

198:                                              ; preds = %195
  %199 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #16
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 24, i1 false) #16
  call void @_ZN4base7SysInfo27OperatingSystemArchitectureEv(%"class.std::__1::basic_string"* nonnull sret %4) #16
  %202 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  %206 = load i8*, i8** %200, align 8
  %207 = select i1 %205, i8* %206, i8* %199
  %208 = load i64, i64* %201, align 8
  %209 = zext i8 %204 to i64
  %210 = select i1 %205, i64 %208, i64 %209
  %211 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %207, i64 %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 3, i32 1) #16
  br i1 %211, label %222, label %212

212:                                              ; preds = %198
  %213 = load i8, i8* %203, align 1
  %214 = icmp slt i8 %213, 0
  %215 = load i8*, i8** %200, align 8
  %216 = select i1 %214, i8* %215, i8* %199
  %217 = load i64, i64* %201, align 8
  %218 = zext i8 %213 to i64
  %219 = select i1 %214, i64 %217, i64 %218
  %220 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %216, i64 %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #16
  %221 = select i1 %220, i32 4, i32 0
  br label %222

222:                                              ; preds = %212, %198
  %223 = phi i32 [ 4, %198 ], [ %221, %212 ]
  %224 = load i8, i8* %203, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %228

226:                                              ; preds = %222
  %227 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %227) #17
  br label %228

228:                                              ; preds = %226, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #16
  br label %229

229:                                              ; preds = %228, %195, %188, %181, %167, %153
  %230 = phi i32 [ %223, %228 ], [ 1, %153 ], [ 3, %167 ], [ 2, %181 ], [ 0, %195 ], [ 0, %188 ]
  %231 = load i8, i8* %146, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %234) #17
  br label %235

235:                                              ; preds = %229, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #16
  %236 = getelementptr inbounds i8, i8* %26, i64 88
  %237 = bitcast i8* %236 to i32*
  store i32 %230, i32* %237, align 8
  %238 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 6
  %239 = load i8, i8* %238, align 8, !range !7
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %244, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 7
  %243 = load i32, i32* %242, align 4
  br label %246

244:                                              ; preds = %235
  %245 = call i32 @_ZN10variations21ClientFilterableState18GetCurrentPlatformEv() #16
  br label %246

246:                                              ; preds = %241, %244
  %247 = phi i32 [ %243, %241 ], [ %245, %244 ]
  %248 = getelementptr inbounds i8, i8* %26, i64 92
  %249 = bitcast i8* %248 to i32*
  store i32 %247, i32* %249, align 4
  %250 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #16
  call void @_ZNK10variations27VariationsFieldTrialCreator16GetLatestCountryEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.variations::VariationsFieldTrialCreator"* %0)
  %251 = getelementptr inbounds i8, i8* %26, i64 128
  %252 = bitcast i8* %251 to %"class.std::__1::basic_string"*
  %253 = getelementptr inbounds i8, i8* %26, i64 151
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %246
  %257 = bitcast i8* %251 to i8**
  %258 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %258) #17
  br label %259

259:                                              ; preds = %256, %246
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* nonnull align 8 %250, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #16
  %260 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #16
  call void @_ZN10variations27VariationsFieldTrialCreator31LoadPermanentConsistencyCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.variations::VariationsFieldTrialCreator"* %0, %"class.base::Version"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %252)
  %261 = getelementptr inbounds i8, i8* %26, i64 152
  %262 = getelementptr inbounds i8, i8* %26, i64 175
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %259
  %266 = bitcast i8* %261 to i8**
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #17
  br label %268

268:                                              ; preds = %265, %259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %260, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #16
  %269 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %63, align 8
  %270 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %269, i64 0, i32 1
  %271 = load %class.PrefService*, %class.PrefService** %270, align 8
  %272 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #16
  %273 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs31kVariationsRestrictionsByPolicyE, i64 0, i64 0)) #16
  %274 = icmp ugt i64 %273, -17
  br i1 %274, label %275, label %277

275:                                              ; preds = %268
  %276 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %276) #18
  unreachable

277:                                              ; preds = %268
  %278 = icmp ult i64 %273, 23
  br i1 %278, label %288, label %279

279:                                              ; preds = %277
  %280 = add nuw i64 %273, 16
  %281 = and i64 %280, -16
  %282 = call i8* @_Znwm(i64 %281) #17
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %282, i8** %283, align 8
  %284 = or i64 %281, -9223372036854775808
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %273, i64* %286, align 8
  %287 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %293

288:                                              ; preds = %277
  %289 = trunc i64 %273 to i8
  %290 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %291 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %290, i64 0, i32 1, i32 0
  store i8 %289, i8* %291, align 1
  %292 = icmp eq i64 %273, 0
  br i1 %292, label %296, label %293

293:                                              ; preds = %288, %279
  %294 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %290, %288 ], [ %287, %279 ]
  %295 = phi i8* [ %272, %288 ], [ %282, %279 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %295, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs31kVariationsRestrictionsByPolicyE, i64 0, i64 0), i64 %273, i1 false) #16
  br label %296

296:                                              ; preds = %293, %288
  %297 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %290, %288 ], [ %294, %293 ]
  %298 = phi i8* [ %272, %288 ], [ %295, %293 ]
  %299 = getelementptr inbounds i8, i8* %298, i64 %273
  store i8 0, i8* %299, align 1
  %300 = call i32 @_ZNK11PrefService10GetIntegerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %271, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #16
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %297, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %307

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %306) #17
  br label %307

307:                                              ; preds = %296, %304
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #16
  %308 = icmp ugt i32 %300, 2
  %309 = select i1 %308, i32 0, i32 %300
  %310 = getelementptr inbounds i8, i8* %26, i64 176
  %311 = bitcast i8* %310 to i32*
  store i32 %309, i32* %311, align 8
  %312 = getelementptr inbounds %"class.base::RepeatingCallback.270", %"class.base::RepeatingCallback.270"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %312) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret %"struct.variations::ClientFilterableState"* %27
}

declare void @_ZN10variations21ClientFilterableState12GetOSVersionEv(%"class.base::Version"* sret) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base7VersionD1Ev(%"class.base::Version"*) unnamed_addr #3

declare i32 @_ZN10variations23VariationsServiceClient23GetChannelForVariationsEv(%"class.variations::VariationsServiceClient"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreator31LoadPermanentConsistencyCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.variations::VariationsFieldTrialCreator"* nocapture readonly, %"class.base::Version"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.base::Version", align 8
  %12 = alloca %"class.base::Version", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #16
  %19 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches26kVariationsOverrideCountryE, i64 0, i64 0)) #16
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::CommandLine"* %18, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations8switches26kVariationsOverrideCountryE, i64 0, i64 0), i64 %19) #16
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i64, i64* %16, align 8
  %25 = zext i8 %22 to i64
  %26 = select i1 %23, i64 %24, i64 %25
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %4
  br i1 %23, label %31, label %29

29:                                               ; preds = %28
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %14, i64 24, i1 false) #16
  br label %348

31:                                               ; preds = %28
  %32 = load i8*, i8** %15, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %32, i64 %24) #16
  br label %348

33:                                               ; preds = %4
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %39 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %37, align 8
  %40 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %39, i64 0, i32 1
  %41 = load %class.PrefService*, %class.PrefService** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #16
  %43 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs37kVariationsPermanentOverriddenCountryE, i64 0, i64 0)) #16
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #18
  unreachable

47:                                               ; preds = %33
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = call i8* @_Znwm(i64 %51) #17
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %63

58:                                               ; preds = %47
  %59 = trunc i64 %43 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %58, %49
  %64 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %57, %49 ]
  %65 = phi i8* [ %42, %58 ], [ %52, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs37kVariationsPermanentOverriddenCountryE, i64 0, i64 0), i64 %43, i1 false) #16
  br label %66

66:                                               ; preds = %58, %63
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %64, %63 ]
  %68 = phi i8* [ %42, %58 ], [ %65, %63 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %43
  store i8 0, i8* %69, align 1
  call void @_ZNK11PrefService9GetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %class.PrefService* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #16
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #17
  br label %76

76:                                               ; preds = %66, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #16
  %77 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  %81 = load i64, i64* %36, align 8
  %82 = zext i8 %79 to i64
  %83 = select i1 %80, i64 %81, i64 %82
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %76
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 10, i32 11) #16
  %86 = load i8, i8* %78, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %34, i64 24, i1 false) #16
  br label %347

90:                                               ; preds = %85
  %91 = load i8*, i8** %35, align 8
  %92 = load i64, i64* %36, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %91, i64 %92) #16
  br label %342

93:                                               ; preds = %76
  %94 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %37, align 8
  %95 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %94, i64 0, i32 1
  %96 = load %class.PrefService*, %class.PrefService** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #16
  %98 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0)) #16
  %99 = icmp ugt i64 %98, -17
  br i1 %99, label %100, label %102

100:                                              ; preds = %93
  %101 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %101) #18
  unreachable

102:                                              ; preds = %93
  %103 = icmp ult i64 %98, 23
  br i1 %103, label %113, label %104

104:                                              ; preds = %102
  %105 = add nuw i64 %98, 16
  %106 = and i64 %105, -16
  %107 = call i8* @_Znwm(i64 %106) #17
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %107, i8** %108, align 8
  %109 = or i64 %106, -9223372036854775808
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %98, i64* %111, align 8
  %112 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %118

113:                                              ; preds = %102
  %114 = trunc i64 %98 to i8
  %115 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 %114, i8* %116, align 1
  %117 = icmp eq i64 %98, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %113, %104
  %119 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %115, %113 ], [ %112, %104 ]
  %120 = phi i8* [ %97, %113 ], [ %107, %104 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %120, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0), i64 %98, i1 false) #16
  br label %121

121:                                              ; preds = %113, %118
  %122 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %115, %113 ], [ %119, %118 ]
  %123 = phi i8* [ %97, %113 ], [ %120, %118 ]
  %124 = getelementptr inbounds i8, i8* %123, i64 %98
  store i8 0, i8* %124, align 1
  %125 = call %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %96, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #16
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %122, i64 0, i32 1, i32 0
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #17
  br label %132

132:                                              ; preds = %121, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #16
  %133 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #16
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #16
  %136 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #16
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #16
  %139 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = icmp eq i64 %140, 7
  br i1 %141, label %144, label %142, !prof !8

142:                                              ; preds = %132
  %143 = call dereferenceable(24) %"class.std::__1::vector.296"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() #18
  unreachable

144:                                              ; preds = %132
  %145 = bitcast %"class.base::ListValue"* %125 to %"class.base::Value"**
  %146 = load %"class.base::Value"*, %"class.base::Value"** %145, align 8
  %147 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast i64* %147 to %"class.base::Value"**
  %149 = load %"class.base::Value"*, %"class.base::Value"** %148, align 8
  %150 = icmp eq %"class.base::Value"* %146, %149
  %151 = ptrtoint %"class.base::Value"* %149 to i64
  %152 = ptrtoint %"class.base::Value"* %146 to i64
  %153 = sub i64 %151, %152
  %154 = icmp eq i64 %153, 64
  br i1 %154, label %155, label %225

155:                                              ; preds = %144
  %156 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %125, i64 0, %"class.std::__1::basic_string"* nonnull %9) #16
  br i1 %156, label %157, label %225

157:                                              ; preds = %155
  %158 = call zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"* %125, i64 1, %"class.std::__1::basic_string"* nonnull %10) #16
  br i1 %158, label %159, label %225

159:                                              ; preds = %157
  %160 = bitcast %"class.base::Version"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #16
  %161 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %134, align 8
  %166 = select i1 %164, i8* %165, i8* %133
  %167 = load i64, i64* %135, align 8
  %168 = zext i8 %163 to i64
  %169 = select i1 %164, i64 %167, i64 %168
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %11, i8* %166, i64 %169) #16
  %170 = call zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nonnull %11) #16
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #16
  br i1 %170, label %171, label %225

171:                                              ; preds = %159
  %172 = bitcast %"class.base::Version"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #16
  %173 = load i8, i8* %162, align 1
  %174 = icmp slt i8 %173, 0
  %175 = load i8*, i8** %134, align 8
  %176 = select i1 %174, i8* %175, i8* %133
  %177 = load i64, i64* %135, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  call void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nonnull %12, i8* %176, i64 %179) #16
  %180 = call zeroext i1 @_ZN4baseeqERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24) %2, %"class.base::Version"* nonnull dereferenceable(24) %12) #16
  call void @_ZN4base7VersionD1Ev(%"class.base::Version"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #16
  %181 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = zext i8 %183 to i64
  %188 = select i1 %184, i64 %186, i64 %187
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %225, label %190

190:                                              ; preds = %171
  %191 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i64, i64* %138, align 8
  %196 = zext i8 %193 to i64
  %197 = select i1 %194, i64 %195, i64 %196
  %198 = icmp eq i64 %197, %188
  br i1 %198, label %199, label %225

199:                                              ; preds = %190
  %200 = load i8*, i8** %137, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %204 = select i1 %184, i8* %202, i8* %203
  br i1 %194, label %210, label %205

205:                                              ; preds = %199
  %206 = ptrtoint i8* %200 to i64
  %207 = trunc i64 %206 to i8
  %208 = load i8, i8* %204, align 1
  %209 = icmp eq i8 %208, %207
  br i1 %209, label %213, label %225

210:                                              ; preds = %199
  %211 = call i32 @bcmp(i8* %200, i8* %204, i64 %188) #16
  %212 = icmp eq i32 %211, 0
  br label %225

213:                                              ; preds = %205, %220
  %214 = phi i64 [ %217, %220 ], [ %196, %205 ]
  %215 = phi i8* [ %218, %220 ], [ %136, %205 ]
  %216 = phi i8* [ %221, %220 ], [ %204, %205 ]
  %217 = add i64 %214, -1
  %218 = getelementptr inbounds i8, i8* %215, i64 1
  %219 = icmp eq i64 %217, 0
  br i1 %219, label %225, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds i8, i8* %216, i64 1
  %222 = load i8, i8* %218, align 1
  %223 = load i8, i8* %221, align 1
  %224 = icmp eq i8 %222, %223
  br i1 %224, label %213, label %225

225:                                              ; preds = %220, %213, %205, %157, %155, %144, %210, %190, %159, %171
  %226 = phi i1 [ true, %171 ], [ false, %159 ], [ true, %190 ], [ true, %210 ], [ false, %144 ], [ false, %155 ], [ false, %157 ], [ true, %205 ], [ true, %213 ], [ true, %220 ]
  %227 = phi i1 [ %180, %171 ], [ false, %159 ], [ %180, %190 ], [ %180, %210 ], [ false, %144 ], [ false, %155 ], [ false, %157 ], [ %180, %205 ], [ %180, %213 ], [ %180, %220 ]
  %228 = phi i1 [ false, %171 ], [ false, %159 ], [ false, %190 ], [ %212, %210 ], [ false, %144 ], [ false, %155 ], [ false, %157 ], [ false, %205 ], [ false, %220 ], [ true, %213 ]
  %229 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = zext i8 %231 to i64
  %236 = select i1 %232, i64 %234, i64 %235
  %237 = icmp eq i64 %236, 0
  br i1 %150, label %238, label %241

238:                                              ; preds = %225
  %239 = xor i1 %237, true
  %240 = zext i1 %239 to i32
  br label %252

241:                                              ; preds = %225
  br i1 %226, label %244, label %242

242:                                              ; preds = %241
  %243 = select i1 %237, i32 2, i32 3
  br label %252

244:                                              ; preds = %241
  br i1 %237, label %245, label %247

245:                                              ; preds = %244
  %246 = select i1 %227, i32 4, i32 5
  br label %252

247:                                              ; preds = %244
  br i1 %227, label %248, label %250

248:                                              ; preds = %247
  %249 = select i1 %228, i32 6, i32 7
  br label %252

250:                                              ; preds = %247
  %251 = select i1 %228, i32 8, i32 9
  br label %252

252:                                              ; preds = %242, %248, %250, %245, %238
  %253 = phi i32 [ %240, %238 ], [ %246, %245 ], [ %249, %248 ], [ %251, %250 ], [ %243, %242 ]
  %254 = load atomic i64, i64* @_ZZN10variations27VariationsFieldTrialCreator31LoadPermanentConsistencyCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %255 = inttoptr i64 %254 to %"class.base::HistogramBase"*
  %256 = icmp eq i64 %254, 0
  br i1 %256, label %257, label %260

257:                                              ; preds = %252
  %258 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 11, i32 12, i32 1) #16
  %259 = ptrtoint %"class.base::HistogramBase"* %258 to i64
  store atomic i64 %259, i64* @_ZZN10variations27VariationsFieldTrialCreator31LoadPermanentConsistencyCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %260

260:                                              ; preds = %252, %257
  %261 = phi %"class.base::HistogramBase"* [ %255, %252 ], [ %258, %257 ]
  %262 = bitcast %"class.base::HistogramBase"* %261 to void (%"class.base::HistogramBase"*, i32)***
  %263 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %263, i64 6
  %265 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %264, align 8
  call void %265(%"class.base::HistogramBase"* %261, i32 %253) #16
  br i1 %227, label %266, label %268

266:                                              ; preds = %260
  %267 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* nonnull align 8 %136, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 0, i64 24, i1 false) #16
  br label %327

268:                                              ; preds = %260
  %269 = load i8, i8* %230, align 1
  %270 = icmp slt i8 %269, 0
  %271 = load i64, i64* %233, align 8
  %272 = zext i8 %269 to i64
  %273 = select i1 %270, i64 %271, i64 %272
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %317

275:                                              ; preds = %268
  br i1 %226, label %315, label %276

276:                                              ; preds = %275
  %277 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %37, align 8
  %278 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %277, i64 0, i32 1
  %279 = load %class.PrefService*, %class.PrefService** %278, align 8
  %280 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #16
  %281 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0)) #16
  %282 = icmp ugt i64 %281, -17
  br i1 %282, label %283, label %285

283:                                              ; preds = %276
  %284 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %284) #18
  unreachable

285:                                              ; preds = %276
  %286 = icmp ult i64 %281, 23
  br i1 %286, label %296, label %287

287:                                              ; preds = %285
  %288 = add nuw i64 %281, 16
  %289 = and i64 %288, -16
  %290 = call i8* @_Znwm(i64 %289) #17
  %291 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %290, i8** %291, align 8
  %292 = or i64 %289, -9223372036854775808
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %281, i64* %294, align 8
  %295 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %301

296:                                              ; preds = %285
  %297 = trunc i64 %281 to i8
  %298 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %298, i64 0, i32 1, i32 0
  store i8 %297, i8* %299, align 1
  %300 = icmp eq i64 %281, 0
  br i1 %300, label %304, label %301

301:                                              ; preds = %296, %287
  %302 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %298, %296 ], [ %295, %287 ]
  %303 = phi i8* [ %280, %296 ], [ %290, %287 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %303, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0), i64 %281, i1 false) #16
  br label %304

304:                                              ; preds = %296, %301
  %305 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %298, %296 ], [ %302, %301 ]
  %306 = phi i8* [ %280, %296 ], [ %303, %301 ]
  %307 = getelementptr inbounds i8, i8* %306, i64 %281
  store i8 0, i8* %307, align 1
  call void @_ZN11PrefService9ClearPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService* %279, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #16
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %304
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  call void @_ZdlPv(i8* %313) #17
  br label %314

314:                                              ; preds = %304, %311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #16
  br label %315

315:                                              ; preds = %314, %275
  %316 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #16
  br label %327

317:                                              ; preds = %268
  call void @_ZN10variations27VariationsFieldTrialCreator21StorePermanentCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.variations::VariationsFieldTrialCreator"* %1, %"class.base::Version"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %318 = load i8, i8* %230, align 1
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %323, label %320

320:                                              ; preds = %317
  %321 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %322 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %321, i8* align 8 %322, i64 24, i1 false) #16
  br label %327

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  %326 = load i64, i64* %233, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %325, i64 %326) #16
  br label %327

327:                                              ; preds = %323, %320, %315, %266
  %328 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %329 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %328, i64 0, i32 1, i32 0
  %330 = load i8, i8* %329, align 1
  %331 = icmp slt i8 %330, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %327
  %333 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %333) #17
  br label %334

334:                                              ; preds = %327, %332
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #16
  %335 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %336 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %335, i64 0, i32 1, i32 0
  %337 = load i8, i8* %336, align 1
  %338 = icmp slt i8 %337, 0
  br i1 %338, label %339, label %341

339:                                              ; preds = %334
  %340 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %340) #17
  br label %341

341:                                              ; preds = %334, %339
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #16
  br label %342

342:                                              ; preds = %90, %341
  %343 = load i8, i8* %78, align 1
  %344 = icmp slt i8 %343, 0
  br i1 %344, label %345, label %347

345:                                              ; preds = %342
  %346 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %346) #17
  br label %347

347:                                              ; preds = %88, %342, %345
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  br label %348

348:                                              ; preds = %31, %29, %347
  %349 = load i8, i8* %21, align 1
  %350 = icmp slt i8 %349, 0
  br i1 %350, label %351, label %353

351:                                              ; preds = %348
  %352 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %352) #17
  br label %353

353:                                              ; preds = %348, %351
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  ret void
}

declare %"class.base::ListValue"* @_ZNK11PrefService7GetListERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base9ListValue9GetStringEmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::ListValue"*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4baseeqERKNS_7VersionES2_(%"class.base::Version"* dereferenceable(24), %"class.base::Version"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN11PrefService9ClearPrefERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreator21StorePermanentCountryERKN4base7VersionERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.variations::VariationsFieldTrialCreator"* nocapture readonly, %"class.base::Version"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::ListValue", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.base::ListValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  %8 = bitcast %"class.base::ListValue"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %4) #16
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  call void @_ZNK4base7Version9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::Version"* %1) #16
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = select i1 %13, i8* %15, i8* %9
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %12 to i64
  %20 = select i1 %13, i64 %18, i64 %19
  call void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"* nonnull %4, i8* %16, i64 %20) #16
  %21 = load i8, i8* %11, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %3, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  %26 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %28 to i64
  %37 = select i1 %29, i64 %35, i64 %36
  call void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"* nonnull %4, i8* %33, i64 %37) #16
  %38 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %38, align 8
  %40 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %39, i64 0, i32 1
  %41 = load %class.PrefService*, %class.PrefService** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #16
  %43 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0)) #16
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %25
  %46 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #18
  unreachable

47:                                               ; preds = %25
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %58, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = call i8* @_Znwm(i64 %51) #17
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %52, i8** %53, align 8
  %54 = or i64 %51, -9223372036854775808
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %43, i64* %56, align 8
  %57 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %63

58:                                               ; preds = %47
  %59 = trunc i64 %43 to i8
  %60 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 %59, i8* %61, align 1
  %62 = icmp eq i64 %43, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %58, %49
  %64 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %57, %49 ]
  %65 = phi i8* [ %42, %58 ], [ %52, %49 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs38kVariationsPermanentConsistencyCountryE, i64 0, i64 0), i64 %43, i1 false) #16
  br label %66

66:                                               ; preds = %58, %63
  %67 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %60, %58 ], [ %64, %63 ]
  %68 = phi i8* [ %42, %58 ], [ %65, %63 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 %43
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %4, i64 0, i32 0
  call void @_ZN11PrefService3SetERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base5ValueE(%class.PrefService* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.base::Value"* nonnull dereferenceable(32) %70) #16
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %66, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #16
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %70) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  ret void
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

declare void @_ZN4base9ListValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::ListValue"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base7Version9GetStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Version"*) local_unnamed_addr #2

declare void @_ZN11PrefService3SetERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKN4base5ValueE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreator32StoreVariationsOverriddenCountryERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.variations::VariationsFieldTrialCreator"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %4, align 8
  %6 = getelementptr inbounds %"class.variations::VariationsSeedStore", %"class.variations::VariationsSeedStore"* %5, i64 0, i32 1
  %7 = load %class.PrefService*, %class.PrefService** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs37kVariationsPermanentOverriddenCountryE, i64 0, i64 0)) #16
  %10 = icmp ugt i64 %9, -17
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %12) #18
  unreachable

13:                                               ; preds = %2
  %14 = icmp ult i64 %9, 23
  br i1 %14, label %24, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %9, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %29

24:                                               ; preds = %13
  %25 = trunc i64 %9 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 %25, i8* %27, align 1
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24, %15
  %30 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %23, %15 ]
  %31 = phi i8* [ %8, %24 ], [ %18, %15 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %31, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10variations5prefs37kVariationsPermanentOverriddenCountryE, i64 0, i64 0), i64 %9, i1 false) #16
  br label %32

32:                                               ; preds = %24, %29
  %33 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %26, %24 ], [ %30, %29 ]
  %34 = phi i8* [ %8, %24 ], [ %31, %29 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 %9
  store i8 0, i8* %35, align 1
  call void @_ZN11PrefService9SetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.PrefService* %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #16
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %32, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  ret void
}

declare void @_ZN11PrefService9SetStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10variations27VariationsFieldTrialCreator26OverrideVariationsPlatformENS_14Study_PlatformE(%"class.variations::VariationsFieldTrialCreator"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 6
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 7
  store i32 %1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations27VariationsFieldTrialCreator23OverrideCachedUIStringsEv(%"class.variations::VariationsFieldTrialCreator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #16
  tail call void @_ZN2ui14ResourceBundle31CheckCanOverrideStringResourcesEv(%"class.ui::ResourceBundle"* %2) #16
  %3 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base.91"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %70

7:                                                ; preds = %70, %1
  %8 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %7
  %12 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %3, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.91"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %11, %26
  %15 = phi %"struct.std::__1::__hash_node_base.91"* [ %17, %26 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %15, i64 3
  %19 = bitcast %"struct.std::__1::__hash_node_base.91"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %14
  %24 = bitcast %"struct.std::__1::__hash_node_base.91"* %18 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %23, %14
  %27 = bitcast %"struct.std::__1::__hash_node_base.91"* %15 to i8*
  tail call void @_ZdlPv(i8* %27) #17
  %28 = icmp eq %"struct.std::__1::__hash_node_base.91"* %17, null
  br i1 %28, label %29, label %14

29:                                               ; preds = %26, %11
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %3, align 8
  %30 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %51, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = add i64 %31, -1
  %36 = and i64 %31, 3
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %33
  %39 = sub i64 %31, %36
  br label %52

40:                                               ; preds = %52, %33
  %41 = phi i64 [ 0, %33 ], [ %66, %52 ]
  %42 = icmp eq i64 %36, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %40, %43
  %44 = phi i64 [ %48, %43 ], [ %41, %40 ]
  %45 = phi i64 [ %49, %43 ], [ %36, %40 ]
  %46 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %47, align 8
  %48 = add nuw i64 %44, 1
  %49 = add i64 %45, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %43, !llvm.loop !19

51:                                               ; preds = %40, %43, %29
  store i64 0, i64* %8, align 8
  br label %69

52:                                               ; preds = %52, %38
  %53 = phi i64 [ 0, %38 ], [ %66, %52 ]
  %54 = phi i64 [ %39, %38 ], [ %67, %52 ]
  %55 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %55, i64 %53
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %56, align 8
  %57 = or i64 %53, 1
  %58 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %58, i64 %57
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %59, align 8
  %60 = or i64 %53, 2
  %61 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %61, i64 %60
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %62, align 8
  %63 = or i64 %53, 3
  %64 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %34, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %64, i64 %63
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %65, align 8
  %66 = add nuw i64 %53, 4
  %67 = add i64 %54, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %40, label %52

69:                                               ; preds = %7, %51
  ret void

70:                                               ; preds = %1, %70
  %71 = phi i64 [ %77, %70 ], [ %5, %1 ]
  %72 = inttoptr i64 %71 to %"struct.std::__1::__hash_node"*
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %72, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN2ui14ResourceBundle28OverrideLocaleStringResourceEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ResourceBundle"* %2, i32 %74, %"class.std::__1::basic_string.261"* dereferenceable(24) %75) #16
  %76 = inttoptr i64 %71 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %7, label %70
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #2

declare void @_ZN2ui14ResourceBundle31CheckCanOverrideStringResourcesEv(%"class.ui::ResourceBundle"*) local_unnamed_addr #2

declare void @_ZN2ui14ResourceBundle28OverrideLocaleStringResourceEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::ResourceBundle"*, i32, %"class.std::__1::basic_string.261"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10variations27VariationsFieldTrialCreator26IsOverrideResourceMapEmptyEv(%"class.variations::VariationsFieldTrialCreator"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations27VariationsFieldTrialCreator8LoadSeedEPNS_14VariationsSeedEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_(%"class.variations::VariationsFieldTrialCreator"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = bitcast %"class.variations::VariationsFieldTrialCreator"* %0 to %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)***
  %7 = load %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)**, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)** %7, i64 2
  %9 = load %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)** %8, align 8
  %10 = tail call %"class.variations::VariationsSeedStore"* %9(%"class.variations::VariationsFieldTrialCreator"* %0) #16
  %11 = bitcast %"class.variations::VariationsSeedStore"* %10 to i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)***
  %12 = load i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)**, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %12, i64 2
  %14 = load i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.variations::VariationsSeedStore"* %10, %"class.variations::VariationsSeed"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %3) #16
  br i1 %15, label %16, label %98

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %17, align 8
  %19 = tail call i64 @_ZNK10variations19VariationsSeedStore16GetLastFetchTimeEv(%"class.variations::VariationsSeedStore"* %18) #16
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %16
  %22 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %17, align 8
  %23 = tail call i64 @_ZN4base4Time3NowEv() #16
  tail call void @_ZN10variations19VariationsSeedStore19RecordLastFetchTimeEN4base4TimeE(%"class.variations::VariationsSeedStore"* %22, i64 %23) #16
  %24 = load atomic i64, i64* @_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #16
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* @_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %30

30:                                               ; preds = %21, %27
  %31 = phi %"class.base::HistogramBase"* [ %25, %21 ], [ %28, %27 ]
  %32 = bitcast %"class.base::HistogramBase"* %31 to void (%"class.base::HistogramBase"*, i32)***
  %33 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, i64 6
  %35 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %34, align 8
  tail call void %35(%"class.base::HistogramBase"* %31, i32 1) #16
  br label %98

36:                                               ; preds = %16
  %37 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  %39 = tail call i64 @_ZN4base4Time3NowEv() #16
  %40 = sub nsw i64 %39, %19
  store i64 %40, i64* %38, align 8
  %41 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %5) #16
  %42 = icmp sgt i32 %41, 30
  %43 = load atomic i64, i64* @_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %44 = inttoptr i64 %43 to %"class.base::HistogramBase"*
  %45 = icmp eq i64 %43, 0
  br i1 %42, label %46, label %56

46:                                               ; preds = %36
  br i1 %45, label %47, label %50

47:                                               ; preds = %46
  %48 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #16
  %49 = ptrtoint %"class.base::HistogramBase"* %48 to i64
  store atomic i64 %49, i64* @_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %50

50:                                               ; preds = %46, %47
  %51 = phi %"class.base::HistogramBase"* [ %44, %46 ], [ %48, %47 ]
  %52 = bitcast %"class.base::HistogramBase"* %51 to void (%"class.base::HistogramBase"*, i32)***
  %53 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %53, i64 6
  %55 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %54, align 8
  call void %55(%"class.base::HistogramBase"* %51, i32 2) #16
  br label %96

56:                                               ; preds = %36
  br i1 %45, label %57, label %60

57:                                               ; preds = %56
  %58 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #16
  %59 = ptrtoint %"class.base::HistogramBase"* %58 to i64
  store atomic i64 %59, i64* @_ZZN10variations12_GLOBAL__N_128RecordCreateTrialsSeedExpiryENS0_20VariationsSeedExpiryEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %60

60:                                               ; preds = %56, %57
  %61 = phi %"class.base::HistogramBase"* [ %44, %56 ], [ %58, %57 ]
  %62 = bitcast %"class.base::HistogramBase"* %61 to void (%"class.base::HistogramBase"*, i32)***
  %63 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %63, i64 6
  %65 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %64, align 8
  call void %65(%"class.base::HistogramBase"* %61, i32 0) #16
  %66 = load i64, i64* %38, align 8
  %67 = load atomic i64, i64* @_ZZN10variations12_GLOBAL__N_119RecordSeedFreshnessEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %68 = inttoptr i64 %67 to %"class.base::HistogramBase"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 43200, i32 50, i32 1) #16
  %72 = ptrtoint %"class.base::HistogramBase"* %71 to i64
  store atomic i64 %72, i64* @_ZZN10variations12_GLOBAL__N_119RecordSeedFreshnessEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %73

73:                                               ; preds = %70, %60
  %74 = phi %"class.base::HistogramBase"* [ %68, %60 ], [ %71, %70 ]
  %75 = sdiv i64 %66, 60000000
  %76 = call i1 @llvm.is.constant.i64(i64 %75) #16
  br i1 %76, label %84, label %77

77:                                               ; preds = %73
  %78 = icmp slt i64 %66, -59999999
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = add nsw i64 %75, 2147483648
  %81 = icmp ult i64 %80, 4294967296
  %82 = trunc i64 %75 to i32
  %83 = select i1 %81, i32 %82, i32 %79, !prof !8
  br label %90

84:                                               ; preds = %73
  %85 = icmp sgt i64 %66, 128849018879999999
  br i1 %85, label %90, label %86

86:                                               ; preds = %84
  %87 = icmp sgt i64 %75, -2147483648
  %88 = select i1 %87, i64 %75, i64 -2147483648
  %89 = trunc i64 %88 to i32
  br label %90

90:                                               ; preds = %77, %84, %86
  %91 = phi i32 [ %83, %77 ], [ %89, %86 ], [ 2147483647, %84 ]
  %92 = bitcast %"class.base::HistogramBase"* %74 to void (%"class.base::HistogramBase"*, i32)***
  %93 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %93, i64 6
  %95 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %94, align 8
  call void %95(%"class.base::HistogramBase"* %74, i32 %91) #16
  br label %96

96:                                               ; preds = %90, %50
  %97 = phi i1 [ false, %50 ], [ true, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %98

98:                                               ; preds = %30, %96, %4
  %99 = phi i1 [ false, %4 ], [ true, %30 ], [ %97, %96 ]
  ret i1 %99
}

declare i64 @_ZNK10variations19VariationsSeedStore16GetLastFetchTimeEv(%"class.variations::VariationsSeedStore"*) local_unnamed_addr #2

declare void @_ZN10variations19VariationsSeedStore19RecordLastFetchTimeEN4base4TimeE(%"class.variations::VariationsSeedStore"*, i64) local_unnamed_addr #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10variations27VariationsFieldTrialCreator12LoadSafeSeedEPNS_14VariationsSeedEPNS_21ClientFilterableStateE(%"class.variations::VariationsFieldTrialCreator"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Time", align 8
  %5 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = bitcast %"class.variations::VariationsFieldTrialCreator"* %0 to %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)***
  %8 = load %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)**, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)** %8, i64 2
  %10 = load %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)*, %"class.variations::VariationsSeedStore"* (%"class.variations::VariationsFieldTrialCreator"*)** %9, align 8
  %11 = tail call %"class.variations::VariationsSeedStore"* %10(%"class.variations::VariationsFieldTrialCreator"* %0) #16
  %12 = bitcast %"class.variations::VariationsSeedStore"* %11 to i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)***
  %13 = load i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)**, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)*, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)** %13, i64 3
  %15 = load i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)*, i1 (%"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeed"*, %"struct.variations::ClientFilterableState"*, %"class.base::Time"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.variations::VariationsSeedStore"* %11, %"class.variations::VariationsSeed"* %1, %"struct.variations::ClientFilterableState"* %2, %"class.base::Time"* nonnull %4) #16
  br i1 %16, label %17, label %53

17:                                               ; preds = %3
  %18 = load i64, i64* %6, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %17
  %21 = call i64 @_ZN4base4Time3NowEv() #16
  %22 = load i64, i64* %6, align 8
  %23 = sub nsw i64 %21, %22
  %24 = load atomic i64, i64* @_ZZN10variations12_GLOBAL__N_119RecordSeedFreshnessEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 1, i32 43200, i32 50, i32 1) #16
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* @_ZZN10variations12_GLOBAL__N_119RecordSeedFreshnessEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %30

30:                                               ; preds = %27, %20
  %31 = phi %"class.base::HistogramBase"* [ %25, %20 ], [ %28, %27 ]
  %32 = sdiv i64 %23, 60000000
  %33 = call i1 @llvm.is.constant.i64(i64 %32) #16
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = icmp slt i64 %23, -59999999
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = add nsw i64 %32, 2147483648
  %38 = icmp ult i64 %37, 4294967296
  %39 = trunc i64 %32 to i32
  %40 = select i1 %38, i32 %39, i32 %36, !prof !8
  br label %47

41:                                               ; preds = %30
  %42 = icmp sgt i64 %23, 128849018879999999
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = icmp sgt i64 %32, -2147483648
  %45 = select i1 %44, i64 %32, i64 -2147483648
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %34, %41, %43
  %48 = phi i32 [ %40, %34 ], [ %46, %43 ], [ 2147483647, %41 ]
  %49 = bitcast %"class.base::HistogramBase"* %31 to void (%"class.base::HistogramBase"*, i32)***
  %50 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %50, i64 6
  %52 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %51, align 8
  call void %52(%"class.base::HistogramBase"* %31, i32 %48) #16
  br label %53

53:                                               ; preds = %17, %47, %3
  %54 = phi i1 [ false, %3 ], [ true, %47 ], [ true, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i1 %54
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare dereferenceable(24) %"class.base::Version"* @_ZN12version_info10GetVersionEv() local_unnamed_addr #2

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN10variations23VariationsSeedProcessorC1Ev(%"class.variations::VariationsSeedProcessor"*) unnamed_addr #2

declare void @_ZN10variations23VariationsSeedProcessor20CreateTrialsFromSeedERKNS_14VariationsSeedERKNS_21ClientFilterableStateERKN4base17RepeatingCallbackIFvjRKNSt3__112basic_stringIDsNS9_11char_traitsIDsEENS9_9allocatorIDsEEEEEEEPKNS7_10FieldTrial15EntropyProviderEPNS7_11FeatureListE(%"class.variations::VariationsSeedProcessor"*, %"class.variations::VariationsSeed"* dereferenceable(96), %"struct.variations::ClientFilterableState"* dereferenceable(200), %"class.base::RepeatingCallback.260"* dereferenceable(8), %"class.base::FieldTrial::EntropyProvider"*, %"class.base::FeatureList"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10variations23VariationsSeedProcessorD1Ev(%"class.variations::VariationsSeedProcessor"*) unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10variations14VariationsSeedD1Ev(%"class.variations::VariationsSeed"*) unnamed_addr #3

declare i32 @_ZN10variations17UIStringOverrider16GetResourceIndexEj(%"class.variations::UIStringOverrider"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2ui14ResourceBundle17HasSharedInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.261"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.261"*, %"class.std::__1::basic_string.261"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.261"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.261"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.261"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.261"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.261"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.261"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.261"*
  %35 = icmp ugt %"class.std::__1::basic_string.261"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !21
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !21
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !24, !noalias !21
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !24, !noalias !21
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !21
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !21
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !24, !noalias !21
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !24, !noalias !21
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !21
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !21
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !24, !noalias !21
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !24, !noalias !21
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !21
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !21
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !24, !noalias !21
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !24, !noalias !21
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !26

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !21
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !21
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !24, !noalias !21
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !24, !noalias !21
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !28

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !29

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !30

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.261"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #18
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #18
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #17
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !31
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !31
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !34, !noalias !31
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !34, !noalias !31
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !31
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !31
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !34, !noalias !31
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !34, !noalias !31
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !31
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !31
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !34, !noalias !31
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !34, !noalias !31
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !31
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !31
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !34, !noalias !31
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !34, !noalias !31
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !36

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !31
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !31
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !34, !noalias !31
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !34, !noalias !31
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !37

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !38

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !39

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.261"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.261"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !40
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !40
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !43, !noalias !40
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !43, !noalias !40
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !40
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !40
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !43, !noalias !40
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !43, !noalias !40
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !40
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !40
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !43, !noalias !40
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !43, !noalias !40
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !40
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !40
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !43, !noalias !40
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !43, !noalias !40
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !45

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !40
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !40
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !43, !noalias !40
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !43, !noalias !40
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !46

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !47

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !48

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.261"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #16
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.261"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.variations::VariationsSeedStore"* @_ZN10variations27VariationsFieldTrialCreator12GetSeedStoreEv(%"class.variations::VariationsFieldTrialCreator"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.variations::VariationsFieldTrialCreator", %"class.variations::VariationsFieldTrialCreator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.variations::VariationsSeedStore"*, %"class.variations::VariationsSeedStore"** %2, align 8
  ret %"class.variations::VariationsSeedStore"* %3
}

declare i32 @_ZN10variations21ClientFilterableState18GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #10

declare i64 @_ZNK11PrefService7GetTimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i64 @_ZN4base12GetBuildTimeEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.213"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.213"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #16
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #16
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #17
  %55 = bitcast %"class.std::__1::vector.213"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #16
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.213"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #18
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.213"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #18
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #17
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.213", %"class.std::__1::vector.213"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.213"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #16
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN4base7SysInfo22ProcessCPUArchitectureEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

declare void @_ZN4base7SysInfo27OperatingSystemArchitectureEv(%"class.std::__1::basic_string"* sret) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNK11PrefService10GetIntegerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.PrefService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.296"* @_ZN4absl16variant_internal26TypedThrowBadVariantAccessIRKNSt3__16vectorIN4base5ValueENS2_9allocatorIS5_EEEEEET_v() local_unnamed_addr #5 comdat {
  tail call void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() #18
  unreachable
}

; Function Attrs: noreturn
declare void @_ZN4absl16variant_internal21ThrowBadVariantAccessEv() local_unnamed_addr #11

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #13

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN10variations14VariationsSeedC2EPN6google8protobuf5ArenaE(%"class.variations::VariationsSeed"*, %"class.google::protobuf::Arena"*) unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvjSD_EE3RunEPNS0_13BindStateBaseEjSD_(%"class.base::internal::BindStateBase"*, i32, %"class.std::__1::basic_string.261"* dereferenceable(24)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.variations::VariationsFieldTrialCreator"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)**
  %23 = load void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)*, void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.variations::VariationsFieldTrialCreator"*, i32, %"class.std::__1::basic_string.261"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.variations::VariationsFieldTrialCreator"* %14, i32 %1, %"class.std::__1::basic_string.261"* dereferenceable(24) %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS4_EEEEEFbvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.variations::VariationsServiceClient"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to i1 (%"class.variations::VariationsServiceClient"*)**
  %21 = load i1 (%"class.variations::VariationsServiceClient"*)*, i1 (%"class.variations::VariationsServiceClient"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to i1 (%"class.variations::VariationsServiceClient"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi i1 (%"class.variations::VariationsServiceClient"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = tail call zeroext i1 %25(%"class.variations::VariationsServiceClient"* %12) #16
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN10variations21ClientFilterableStateC1EN4base12OnceCallbackIFbvEEE(%"struct.variations::ClientFilterableState"*, %"class.base::OnceCallback"*) unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10variations21ClientFilterableStateD1Ev(%"struct.variations::ClientFilterableState"*) unnamed_addr #3

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.91"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.87"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.383"* dereferenceable(8), %"class.std::__1::tuple.386"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #16, !range !49
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.91"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.91"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.91"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.91"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.91"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #17, !noalias !50
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.383", %"class.std::__1::tuple.383"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !50
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !50
  store i32 %62, i32* %61, align 8, !noalias !50
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #16, !noalias !50
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !50
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.91"**
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %66, align 8, !noalias !50
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #16, !range !49
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #16
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #16, !range !49
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, -1
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.91"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.91"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.91"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.91"* %109, %"struct.std::__1::__hash_node_base.91"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.91"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.91"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #16, !range !49
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.91"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.91"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.91"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.91"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.91"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } undef, %"struct.std::__1::__hash_node_base.91"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.91"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.91"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE6rehashEm(%"class.std::__1::__hash_table.87"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !49
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !49
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !49
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.87"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE8__rehashEm(%"class.std::__1::__hash_table.87"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #18
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.87"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.91"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.91"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.93", %"class.std::__1::__bucket_list_deallocator.93"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !53

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.91"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.91"* null, %"struct.std::__1::__hash_node_base.91"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.91"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !49
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.91"* %36, %"struct.std::__1::__hash_node_base.91"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.91"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.91"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.91"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.91"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.91"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.91"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.91"* %82, %"struct.std::__1::__hash_node_base.91"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.91"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.91"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.91"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.91"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.91"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.91"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.91"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.91"* %80, %"struct.std::__1::__hash_node_base.91"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.91"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.91", %"struct.std::__1::__hash_node_base.91"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.91"*, %"struct.std::__1::__hash_node_base.91"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.91"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.87", %"class.std::__1::__hash_table.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.91"**, %"struct.std::__1::__hash_node_base.91"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.91"** null, %"struct.std::__1::__hash_node_base.91"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.91"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.91"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #17
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.93", %"class.std::__1::__bucket_list_deallocator.93"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.261"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.261"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #18
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.261"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.261"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #18
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #17
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !54
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !54
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !57, !noalias !54
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !57, !noalias !54
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !54
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !54
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !57, !noalias !54
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !57, !noalias !54
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !54
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !54
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !57, !noalias !54
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !57, !noalias !54
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !54
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !54
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !57, !noalias !54
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !57, !noalias !54
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !59

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !54
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !54
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !57, !noalias !54
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !57, !noalias !54
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !60

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !61

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !62

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !63

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !64

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !65

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !67
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !67
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !70, !noalias !67
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !70, !noalias !67
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !67
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !67
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !70, !noalias !67
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !70, !noalias !67
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !67
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !67
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !70, !noalias !67
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !70, !noalias !67
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !67
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !67
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !70, !noalias !67
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !70, !noalias !67
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !72

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !67
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !67
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !70, !noalias !67
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !70, !noalias !67
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !73

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !74

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !75

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #17
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.261"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.261", %"class.std::__1::basic_string.261"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!7 = !{i8 0, i8 2}
!8 = !{!"branch_weights", i32 2000, i32 1}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS5_11char_traitsIDsEENS5_9allocatorIDsEEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base13BindRepeatingIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!13 = distinct !{!13, !"_ZN4base13BindRepeatingIMN10variations27VariationsFieldTrialCreatorEFvjRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSE_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10variations23VariationsServiceClientEFbvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base13BindRepeatingIMN10variations23VariationsServiceClientEFbvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!18 = distinct !{!18, !"_ZN4base13BindRepeatingIMN10variations23VariationsServiceClientEFbvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !20}
!29 = distinct !{!29, !20}
!30 = distinct !{!30, !27}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !27}
!37 = distinct !{!37, !20}
!38 = distinct !{!38, !20}
!39 = distinct !{!39, !27}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !27}
!46 = distinct !{!46, !20}
!47 = distinct !{!47, !20}
!48 = distinct !{!48, !27}
!49 = !{i64 0, i64 65}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS5_IS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINS5_ISV_EEEEEEmOT_DpOT0_"}
!53 = distinct !{!53, !20}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !27}
!60 = distinct !{!60, !20}
!61 = distinct !{!61, !20}
!62 = distinct !{!62, !27}
!63 = distinct !{!63, !27}
!64 = distinct !{!64, !20}
!65 = distinct !{!65, !66, !27}
!66 = !{!"llvm.loop.unroll.runtime.disable"}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !27}
!73 = distinct !{!73, !20}
!74 = distinct !{!74, !20}
!75 = distinct !{!75, !27}
