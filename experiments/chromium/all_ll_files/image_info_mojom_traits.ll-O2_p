; ModuleID = '../../skia/public/mojom/image_info_mojom_traits.cc'
source_filename = "../../skia/public/mojom/image_info_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.skia::mojom::internal::ImageInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector.13", %"class.std::__1::vector.21", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedHandleBase.15"*, %"class.mojo::ScopedHandleBase.15"*, %"class.std::__1::__compressed_pair.16" }
%"class.mojo::ScopedHandleBase.15" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.mojo::ScopedHandleBase.15"* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.23" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.31, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.33", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.30", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.31 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i32 }
%"class.mojo::ArrayDataView" = type { %"class.mojo::internal::ArrayDataViewImpl" }
%"class.mojo::internal::ArrayDataViewImpl" = type { %"class.mojo::internal::Array_Data"*, %"class.mojo::Message"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.skia::mojom::internal::BitmapN32ImageInfo_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, [4 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }

@.str = private unnamed_addr constant [51 x i8] c"../../skia/public/mojom/image_info_mojom_traits.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"color_space->toXYZD50(&to_xyz_matrix)\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"7u == color_transfer_function.size()\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"9u == color_to_xyz_matrix.size()\00", align 1
@switch.table._ZN4mojo10EnumTraitsIN4skia5mojom9ColorTypeE11SkColorTypeE7ToMojomES4_ = private unnamed_addr constant [11 x i32] [i32 1, i32 2, i32 3, i32 4, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 7], align 4
@switch.table._ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_ = private unnamed_addr constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 6, i32 0, i32 11], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN4skia5mojom9AlphaTypeE11SkAlphaTypeE7ToMojomES4_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  %4 = select i1 %3, i32 %0, i32 0
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN4skia5mojom9AlphaTypeE11SkAlphaTypeE9FromMojomES3_PS4_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 4
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN4skia5mojom9ColorTypeE11SkColorTypeE7ToMojomES4_(i32) local_unnamed_addr #0 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 11
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [11 x i32], [11 x i32]* @switch.table._ZN4mojo10EnumTraitsIN4skia5mojom9ColorTypeE11SkColorTypeE7ToMojomES4_, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  ret i32 %7

8:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN4skia5mojom9ColorTypeE11SkColorTypeE9FromMojomES3_PS4_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 8
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = trunc i32 %0 to i8
  %6 = lshr i8 -65, %5
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = sext i32 %0 to i64
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  br label %13

13:                                               ; preds = %4, %2, %9
  %14 = phi i1 [ false, %2 ], [ true, %9 ], [ false, %4 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE5widthERKS4_(%struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void @llvm.trap() #9
  unreachable

6:                                                ; preds = %1
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE6heightERKS4_(%struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void @llvm.trap() #9
  unreachable

6:                                                ; preds = %1
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE23color_transfer_functionERKS4_(%"class.absl::optional"* noalias nocapture sret, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.skcms_TransferFunction, align 16
  %4 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #9
  br label %41

10:                                               ; preds = %2
  %11 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %11) #9
  %12 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 4
  %13 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 5
  %14 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 6
  %15 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 28, i1 false)
  call void @_ZNK12SkColorSpace10transferFnEP22skcms_TransferFunction(%class.SkColorSpace* nonnull %5, %struct.skcms_TransferFunction* nonnull %3) #9
  %16 = bitcast %struct.skcms_TransferFunction* %3 to <4 x i32>*
  %17 = load <4 x i32>, <4 x i32>* %16, align 16
  %18 = bitcast float* %12 to i32*
  %19 = load i32, i32* %18, align 16
  %20 = bitcast float* %13 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = bitcast float* %14 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = call i8* @_Znwm(i64 28) #10
  %25 = ptrtoint i8* %24 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 28
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast i8* %24 to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 16
  %30 = bitcast i8* %29 to i32*
  store i32 %19, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %24, i64 20
  %32 = bitcast i8* %31 to i32*
  store i32 %21, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %24, i64 24
  %34 = bitcast i8* %33 to i32*
  store i32 %23, i32* %34, align 4
  %35 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::vector"* %35 to i64*
  store i64 %25, i64* %36, align 8
  %37 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast float** %37 to i64*
  store i64 %27, i64* %38, align 8
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast float** %39 to i64*
  store i64 %27, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %11) #9
  br label %41

41:                                               ; preds = %10, %7
  %42 = phi i8 [ 1, %10 ], [ 0, %7 ]
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %42, i8* %43, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK12SkColorSpace10transferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE19color_to_xyz_matrixERKS4_(%"class.absl::optional"* noalias nocapture sret, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.skcms_Matrix3x3, align 4
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkColorSpace*, %class.SkColorSpace** %5, align 8
  %7 = icmp eq %class.SkColorSpace* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  br label %30

12:                                               ; preds = %2
  %13 = bitcast %struct.skcms_Matrix3x3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 36, i1 false)
  %14 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* nonnull %6, %struct.skcms_Matrix3x3* nonnull %3) #9
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 186, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %18

18:                                               ; preds = %15, %12
  %19 = call i8* @_Znwm(i64 36) #10
  %20 = ptrtoint i8* %19 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 36
  %22 = ptrtoint i8* %21 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* nonnull align 4 %13, i64 36, i1 false) #9
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %23, align 8
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::vector"* %24 to i64*
  store i64 %20, i64* %25, align 8
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast float** %26 to i64*
  store i64 %22, i64* %27, align 8
  %28 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast float** %28 to i64*
  store i64 %22, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %13) #9
  br label %30

30:                                               ; preds = %18, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_(%"class.skia::mojom::internal::ImageInfo_Data"*, %"class.mojo::Message"*, %struct.SkImageInfo* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %"class.mojo::ArrayDataView", align 8
  %6 = alloca %"class.mojo::ArrayDataView", align 8
  %7 = ptrtoint %"class.mojo::Message"* %1 to i64
  %8 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  %10 = icmp ult i32 %9, 8
  br i1 %10, label %11, label %79

11:                                               ; preds = %3
  %12 = trunc i32 %9 to i8
  %13 = lshr i8 -65, %12
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %79, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 1
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %20, label %79

20:                                               ; preds = %16
  %21 = sext i32 %9 to i64
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN4mojo12StructTraitsIN4skia5mojom17ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  %28 = bitcast %"struct.mojo::internal::Pointer"* %24 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  %30 = bitcast i8* %29 to %"class.mojo::internal::Array_Data"*
  %31 = select i1 %27, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %30
  %32 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %32, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  %36 = bitcast %"struct.mojo::internal::Pointer"* %32 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 %34
  %38 = bitcast i8* %37 to %"class.mojo::internal::Array_Data"*
  %39 = select i1 %35, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %38
  %40 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 1
  %43 = getelementptr inbounds %"class.skia::mojom::internal::ImageInfo_Data", %"class.skia::mojom::internal::ImageInfo_Data"* %0, i64 0, i32 4
  %44 = load i32, i32* %43, align 1
  %45 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %5, i64 0, i32 0, i32 0
  store %"class.mojo::internal::Array_Data"* %31, %"class.mojo::internal::Array_Data"** %45, align 8
  %46 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %5, i64 0, i32 0, i32 1
  %47 = bitcast %"class.mojo::Message"** %46 to i64*
  store i64 %7, i64* %47, align 8
  %48 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %6, i64 0, i32 0, i32 0
  store %"class.mojo::internal::Array_Data"* %39, %"class.mojo::internal::Array_Data"** %48, align 8
  %49 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %6, i64 0, i32 0, i32 1
  %50 = bitcast %"class.mojo::Message"** %49 to i64*
  store i64 %7, i64* %50, align 8
  call fastcc void @_ZN4mojo12_GLOBAL__N_115MakeSkImageInfoE11SkColorType11SkAlphaTypeiiNS_13ArrayDataViewIfEES4_(%struct.SkImageInfo* nonnull sret %4, i32 %23, i32 %18, i32 %42, i32 %44, %"class.mojo::ArrayDataView"* nonnull byval(%"class.mojo::ArrayDataView") align 8 %5, %"class.mojo::ArrayDataView"* nonnull byval(%"class.mojo::ArrayDataView") align 8 %6)
  %51 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %struct.SkImageInfo* %4 to i64*
  %53 = load i64, i64* %52, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %51, align 8
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %55 = load %class.SkColorSpace*, %class.SkColorSpace** %54, align 8
  %56 = bitcast %struct.SkImageInfo* %2 to i64*
  store i64 %53, i64* %56, align 8
  %57 = icmp eq %class.SkColorSpace* %55, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %20
  %59 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  %63 = bitcast %class.SkColorSpace* %55 to i8*
  tail call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %20, %58, %62
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to <2 x i64>*
  %68 = load <2 x i64>, <2 x i64>* %67, align 8
  %69 = bitcast i32* %65 to <2 x i64>*
  store <2 x i64> %68, <2 x i64>* %69, align 8
  %70 = load %class.SkColorSpace*, %class.SkColorSpace** %51, align 8
  %71 = icmp eq %class.SkColorSpace* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = bitcast %class.SkColorSpace* %70 to i8*
  tail call void @_ZdlPv(i8* %77) #10
  br label %78

78:                                               ; preds = %64, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #9
  br label %79

79:                                               ; preds = %11, %16, %3, %78
  %80 = phi i1 [ true, %78 ], [ false, %3 ], [ false, %16 ], [ false, %11 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4mojo12_GLOBAL__N_115MakeSkImageInfoE11SkColorType11SkAlphaTypeiiNS_13ArrayDataViewIfEES4_(%struct.SkImageInfo* noalias nocapture sret, i32, i32, i32, i32, %"class.mojo::ArrayDataView"* nocapture readonly byval(%"class.mojo::ArrayDataView") align 8, %"class.mojo::ArrayDataView"* nocapture readonly byval(%"class.mojo::ArrayDataView") align 8) unnamed_addr #2 {
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %struct.skcms_TransferFunction, align 16
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %struct.skcms_Matrix3x3, align 4
  %14 = alloca %"class.logging::CheckOpResult", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %class.sk_sp, align 8
  %17 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %5, i64 0, i32 0, i32 0
  %18 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %17, align 8
  %19 = icmp eq %"class.mojo::internal::Array_Data"* %18, null
  br i1 %19, label %85, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %6, i64 0, i32 0, i32 0
  %22 = load %"class.mojo::internal::Array_Data"*, %"class.mojo::internal::Array_Data"** %21, align 8
  %23 = icmp eq %"class.mojo::internal::Array_Data"* %22, null
  br i1 %23, label %85, label %24

24:                                               ; preds = %20
  %25 = bitcast %struct.skcms_TransferFunction* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %25) #9
  %26 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %10, i64 0, i32 4
  %27 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %10, i64 0, i32 5
  %28 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %10, i64 0, i32 6
  %29 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  %30 = bitcast %struct.skcms_TransferFunction* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -1, i64 28, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %18, i64 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 1
  %34 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %33, 7
  br i1 %35, label %36, label %37

36:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %47

37:                                               ; preds = %24
  %38 = zext i32 %33 to i64
  %39 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 7) #9
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %38) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8* %39, i8* %40) #9
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %42, i8** %31, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 26, %"class.logging::CheckOpResult"* nonnull %11) #9
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %47

47:                                               ; preds = %36, %37, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %48 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %18, i64 1, i32 0, i32 0
  %49 = bitcast i32* %48 to <4 x i32>*
  %50 = load <4 x i32>, <4 x i32>* %49, align 4
  %51 = bitcast %struct.skcms_TransferFunction* %10 to <4 x i32>*
  store <4 x i32> %50, <4 x i32>* %51, align 16
  %52 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %18, i64 3, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = bitcast float* %26 to i32*
  store i32 %53, i32* %54, align 16
  %55 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %18, i64 3, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = bitcast float* %27 to i32*
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %18, i64 4, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = bitcast float* %28 to i32*
  store i32 %59, i32* %60, align 8
  %61 = bitcast %struct.skcms_Matrix3x3* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %61) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %61, i8 -1, i64 36, i1 false)
  %62 = bitcast %"class.logging::CheckOpResult"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %14, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %63, align 8
  %64 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %22, i64 0, i32 0, i32 1
  %65 = load i32, i32* %64, align 1
  %66 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = icmp eq i32 %65, 9
  br i1 %67, label %68, label %69

68:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  store i8* null, i8** %63, align 8
  br label %79

69:                                               ; preds = %47
  %70 = zext i32 %65 to i64
  %71 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 9) #9
  %72 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %70) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %71, i8* %72) #9
  %73 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  store i8* %74, i8** %63, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %69
  %77 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 36, %"class.logging::CheckOpResult"* nonnull %14) #9
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  br label %79

79:                                               ; preds = %76, %69, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  %80 = getelementptr inbounds %"class.mojo::internal::Array_Data", %"class.mojo::internal::Array_Data"* %22, i64 1
  %81 = bitcast %"class.mojo::internal::Array_Data"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %81, i64 36, i1 false)
  %82 = bitcast %class.sk_sp* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* nonnull sret %16, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %10, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %13) #9
  %83 = bitcast %class.sk_sp* %16 to i64*
  %84 = load i64, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %25) #9
  br label %85

85:                                               ; preds = %79, %20, %7
  %86 = phi i64 [ 0, %7 ], [ 0, %20 ], [ %84, %79 ]
  %87 = zext i32 %1 to i64
  %88 = zext i32 %2 to i64
  %89 = shl nuw i64 %88, 32
  %90 = or i64 %89, %87
  %91 = zext i32 %4 to i64
  %92 = shl nuw i64 %91, 32
  %93 = zext i32 %3 to i64
  %94 = or i64 %92, %93
  %95 = bitcast %struct.SkImageInfo* %0 to i64*
  store i64 %86, i64* %95, align 8, !alias.scope !3
  %96 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %97 = bitcast i32* %96 to i64*
  store i64 %90, i64* %97, align 8, !alias.scope !3
  %98 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %99 = bitcast %struct.SkISize* %98 to i64*
  store i64 %94, i64* %99, align 8, !alias.scope !3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom26BitmapN32ImageInfoDataViewE11SkImageInfoE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32ImageInfo_Data"*, %"class.mojo::Message"*, %struct.SkImageInfo* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %"class.mojo::ArrayDataView", align 8
  %6 = alloca %"class.mojo::ArrayDataView", align 8
  %7 = ptrtoint %"class.mojo::Message"* %1 to i64
  %8 = getelementptr inbounds %"class.skia::mojom::internal::BitmapN32ImageInfo_Data", %"class.skia::mojom::internal::BitmapN32ImageInfo_Data"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %67

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.skia::mojom::internal::BitmapN32ImageInfo_Data", %"class.skia::mojom::internal::BitmapN32ImageInfo_Data"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"struct.mojo::internal::Pointer"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = bitcast i8* %17 to %"class.mojo::internal::Array_Data"*
  %19 = select i1 %15, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %18
  %20 = getelementptr inbounds %"class.skia::mojom::internal::BitmapN32ImageInfo_Data", %"class.skia::mojom::internal::BitmapN32ImageInfo_Data"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"struct.mojo::internal::Pointer"* %20 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  %26 = bitcast i8* %25 to %"class.mojo::internal::Array_Data"*
  %27 = select i1 %23, %"class.mojo::internal::Array_Data"* null, %"class.mojo::internal::Array_Data"* %26
  %28 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.skia::mojom::internal::BitmapN32ImageInfo_Data", %"class.skia::mojom::internal::BitmapN32ImageInfo_Data"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds %"class.skia::mojom::internal::BitmapN32ImageInfo_Data", %"class.skia::mojom::internal::BitmapN32ImageInfo_Data"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %5, i64 0, i32 0, i32 0
  store %"class.mojo::internal::Array_Data"* %19, %"class.mojo::internal::Array_Data"** %33, align 8
  %34 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %5, i64 0, i32 0, i32 1
  %35 = bitcast %"class.mojo::Message"** %34 to i64*
  store i64 %7, i64* %35, align 8
  %36 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %6, i64 0, i32 0, i32 0
  store %"class.mojo::internal::Array_Data"* %27, %"class.mojo::internal::Array_Data"** %36, align 8
  %37 = getelementptr inbounds %"class.mojo::ArrayDataView", %"class.mojo::ArrayDataView"* %6, i64 0, i32 0, i32 1
  %38 = bitcast %"class.mojo::Message"** %37 to i64*
  store i64 %7, i64* %38, align 8
  call fastcc void @_ZN4mojo12_GLOBAL__N_115MakeSkImageInfoE11SkColorType11SkAlphaTypeiiNS_13ArrayDataViewIfEES4_(%struct.SkImageInfo* nonnull sret %4, i32 6, i32 %9, i32 %30, i32 %32, %"class.mojo::ArrayDataView"* nonnull byval(%"class.mojo::ArrayDataView") align 8 %5, %"class.mojo::ArrayDataView"* nonnull byval(%"class.mojo::ArrayDataView") align 8 %6)
  %39 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %struct.SkImageInfo* %4 to i64*
  %41 = load i64, i64* %40, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %39, align 8
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = bitcast %struct.SkImageInfo* %2 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq %class.SkColorSpace* %43, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %11
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %43 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %11, %46, %50
  %53 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %55 = bitcast i32* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8
  %57 = bitcast i32* %53 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  %58 = load %class.SkColorSpace*, %class.SkColorSpace** %39, align 8
  %59 = icmp eq %class.SkColorSpace* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = bitcast %class.SkColorSpace* %58 to i8*
  tail call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %52, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  br label %67

67:                                               ; preds = %3, %66
  %68 = phi i1 [ true, %66 ], [ false, %3 ]
  ret i1 %68
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp* sret, %struct.skcms_TransferFunction* dereferenceable(28), %struct.skcms_Matrix3x3* dereferenceable(36)) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
