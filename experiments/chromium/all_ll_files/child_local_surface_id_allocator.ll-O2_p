; ModuleID = '../../components/viz/common/surfaces/child_local_surface_id_allocator.cc'
source_filename = "../../components/viz/common/surfaces/child_local_surface_id_allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.9" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }

$_ZN20trace_event_internal13AddTraceEventIRA41_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_ = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_ = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [65 x i8] c"ChildLocalSurfaceIdAllocator::UpdateFromParent New Id Allocation\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.3 = private unnamed_addr constant [63 x i8] c"ChildLocalSurfaceIdAllocator::UpdateFromParent Synchronization\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"LocalSurfaceId.Embed.Flow\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"ChildLocalSurfaceIdAllocator::GenerateId\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"local_surface_id\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"LocalSurfaceId.Submission.Flow\00", align 1

@_ZN3viz28ChildLocalSurfaceIdAllocatorC1Ev = hidden unnamed_addr alias void (%"class.viz::ChildLocalSurfaceIdAllocator"*), void (%"class.viz::ChildLocalSurfaceIdAllocator"*)* @_ZN3viz28ChildLocalSurfaceIdAllocatorC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz28ChildLocalSurfaceIdAllocatorC2Ev(%"class.viz::ChildLocalSurfaceIdAllocator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 1
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.base::UnguessableToken"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz28ChildLocalSurfaceIdAllocator16UpdateFromParentERKNS_14LocalSurfaceIdE(%"class.viz::ChildLocalSurfaceIdAllocator"*, %"class.viz::LocalSurfaceId"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %11, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %23, %25
  br i1 %26, label %140, label %27

27:                                               ; preds = %15, %2, %21
  %28 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp ugt i32 %29, %31
  %33 = icmp eq i32 %11, %13
  %34 = icmp eq i32 %29, %31
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %48

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %38, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ne i64 %44, %46
  br label %48

48:                                               ; preds = %27, %36, %42
  %49 = phi i1 [ true, %27 ], [ true, %36 ], [ %47, %42 ]
  br i1 %32, label %50, label %85

50:                                               ; preds = %48
  br i1 %49, label %51, label %120

51:                                               ; preds = %50
  %52 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %53 = and i8 %52, 25
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %120, label %55, !prof !2

55:                                               ; preds = %51
  %56 = tail call i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"* %1) #6
  %57 = shl i64 %56, 1
  %58 = or i64 %57, 1
  %59 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.viz::LocalSurfaceId"* %9) #6
  %60 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.viz::LocalSurfaceId"* %1) #6
  %61 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %62 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #6
  %63 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %64 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %64, i64* %63, align 8
  %65 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 %61, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, i32 2432, i64 %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #6
  %66 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #7
  br label %73

73:                                               ; preds = %55, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #6
  %74 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #7
  br label %81

81:                                               ; preds = %73, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #6
  %82 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %120, label %84

84:                                               ; preds = %81
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i64 %65) #6
  br label %120

85:                                               ; preds = %48
  br i1 %49, label %86, label %120

86:                                               ; preds = %85
  %87 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %88 = and i8 %87, 25
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %120, label %90, !prof !2

90:                                               ; preds = %86
  %91 = tail call i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"* %1) #6
  %92 = shl i64 %91, 1
  %93 = or i64 %92, 1
  %94 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.viz::LocalSurfaceId"* %9) #6
  %95 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.viz::LocalSurfaceId"* %1) #6
  %96 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %97 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #6
  %98 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %99 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %99, i64* %98, align 8
  %100 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 %96, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, i32 2432, i64 %93, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #6
  %101 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #7
  br label %108

108:                                              ; preds = %90, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #6
  %109 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #7
  br label %116

116:                                              ; preds = %108, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #6
  %117 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3, i64 0, i64 0), i64 %100) #6
  br label %120

120:                                              ; preds = %86, %51, %119, %116, %84, %81, %85, %50
  %121 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2
  %122 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %121, i64 0, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %123, %125
  br i1 %126, label %127, label %133

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.viz::LocalSurfaceId", %"class.viz::LocalSurfaceId"* %1, i64 0, i32 2, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %129, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %127, %120
  %134 = load i32, i32* %30, align 4
  store i32 %134, i32* %28, align 4
  br label %135

135:                                              ; preds = %127, %133
  %136 = load i32, i32* %12, align 8
  store i32 %136, i32* %10, align 8
  %137 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 2
  %138 = bitcast %"class.base::UnguessableToken"* %137 to i8*
  %139 = bitcast %"class.base::UnguessableToken"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %139, i64 16, i1 false)
  br label %140

140:                                              ; preds = %21, %135
  %141 = phi i1 [ true, %135 ], [ false, %21 ]
  ret i1 %141
}

declare void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.viz::LocalSurfaceId"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz28ChildLocalSurfaceIdAllocator10GenerateIdEv(%"class.viz::ChildLocalSurfaceIdAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.viz::ChildLocalSurfaceIdAllocator", %"class.viz::ChildLocalSurfaceIdAllocator"* %0, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %49, label %11, !prof !2

11:                                               ; preds = %1
  %12 = tail call i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"* %4) #6
  %13 = shl i64 %12, 1
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.viz::LocalSurfaceId"* %4) #6
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA41_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 4352, i64 %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), [41 x i8]* nonnull dereferenceable(41) @.str.6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %20, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6
  %24 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %25 = and i8 %24, 25
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %45, label %27, !prof !2

27:                                               ; preds = %23
  %28 = call i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"* %4) #6
  %29 = shl i64 %28, 1
  %30 = or i64 %29, 1
  %31 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  call void @_ZNK3viz14LocalSurfaceId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.viz::LocalSurfaceId"* %4) #6
  %32 = call i64 @_ZN20trace_event_internal13AddTraceEventIRA41_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i32 4352, i64 %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), [41 x i8]* nonnull dereferenceable(41) @.str.6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #7
  br label %40

40:                                               ; preds = %27, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  %41 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i64 %32) #6
  %44 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), align 16
  br label %45

45:                                               ; preds = %23, %43
  %46 = phi i8 [ %24, %23 ], [ %44, %43 ]
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 230, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 %15) #6
  br label %49

49:                                               ; preds = %40, %1, %45, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRA41_KcNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPS1_SG_yjySG_OT_SG_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, [41 x i8]* dereferenceable(41), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #6
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247241726, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = getelementptr inbounds [41 x i8], [41 x i8]* %8, i64 0, i64 0
  %24 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %26 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %33 = select i1 %29, i8* %31, i8* %32
  %34 = bitcast %"union.base::trace_event::TraceValue"* %25 to i8**
  store i8* %33, i8** %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #6
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #6
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #6
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #6
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #6
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #7
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  ret i64 %35
}

declare i64 @_ZNK3viz14LocalSurfaceId15persistent_hashEv(%"class.viz::LocalSurfaceId"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_EEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yiRKNS8_9TimeTicksEjySE_OT_SE_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #6
  %16 = bitcast %"class.base::trace_event::TraceArguments"* %14 to i64*
  store i64 -6148914691236517206, i64* %16, align 8
  store i8 2, i8* %15, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 1
  store i8 7, i8* %18, align 1
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 1
  store i8* %11, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %22 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %29 = select i1 %25, i8* %27, i8* %28
  %30 = bitcast %"union.base::trace_event::TraceValue"* %21 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 1
  %32 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %39 = select i1 %35, i8* %37, i8* %38
  %40 = bitcast %"union.base::trace_event::TraceValue"* %31 to i8**
  store i8* %39, i8** %40, align 8
  %41 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #6
  %42 = load i8, i8* %15, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %78, label %44

44:                                               ; preds = %13, %73
  %45 = phi i64 [ %74, %73 ], [ 0, %13 ]
  %46 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %60

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %45
  %51 = bitcast %"union.base::trace_event::TraceValue"* %50 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %52 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %51, align 8
  %53 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %52, null
  br i1 %53, label %73, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %52 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %56 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %56, i64 1
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %57, align 8
  call void %58(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %52) #6
  %59 = load i8, i8* %46, align 1
  br label %60

60:                                               ; preds = %54, %44
  %61 = phi i8 [ %47, %44 ], [ %59, %54 ]
  %62 = icmp eq i8 %61, 9
  br i1 %62, label %63, label %73

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %45
  %65 = bitcast %"union.base::trace_event::TraceValue"* %64 to %"class.protozero::HeapBuffered"**
  %66 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %65, align 8
  %67 = icmp eq %"class.protozero::HeapBuffered"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %69) #6
  %70 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %70) #6
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %66, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %71) #6
  %72 = bitcast %"class.protozero::HeapBuffered"* %66 to i8*
  call void @_ZdlPv(i8* %72) #7
  br label %73

73:                                               ; preds = %68, %63, %60, %49
  %74 = add nuw nsw i64 %45, 1
  %75 = load i8, i8* %15, align 8
  %76 = zext i8 %75 to i64
  %77 = icmp ult i64 %74, %76
  br i1 %77, label %44, label %78

78:                                               ; preds = %73, %13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #6
  ret i64 %41
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
