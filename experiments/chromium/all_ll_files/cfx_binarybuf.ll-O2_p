; ModuleID = '../../third_party/pdfium/core/fxcrt/cfx_binarybuf.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/cfx_binarybuf.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_BinaryBuf = type { i32 (...)**, i64, i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.pdfium::span.1" = type { %"class.fxcrt::UnownedPtr.2", i64 }
%"class.fxcrt::UnownedPtr.2" = type { i8* }

@_ZTV13CFX_BinaryBuf = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufD2Ev to i8*), i8* bitcast (void (%class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufD0Ev to i8*), i8* bitcast (i64 (%class.CFX_BinaryBuf*)* @_ZNK13CFX_BinaryBuf9GetLengthEv to i8*)] }, align 8

@_ZN13CFX_BinaryBufC1Ev = hidden unnamed_addr alias void (%class.CFX_BinaryBuf*), void (%class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufC2Ev
@_ZN13CFX_BinaryBufC1EOS_ = hidden unnamed_addr alias void (%class.CFX_BinaryBuf*, %class.CFX_BinaryBuf*), void (%class.CFX_BinaryBuf*, %class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufC2EOS_
@_ZN13CFX_BinaryBufD1Ev = hidden unnamed_addr alias void (%class.CFX_BinaryBuf*), void (%class.CFX_BinaryBuf*)* @_ZN13CFX_BinaryBufD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CFX_BinaryBufC2Ev(%class.CFX_BinaryBuf* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CFX_BinaryBuf, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBufC2EOS_(%class.CFX_BinaryBuf* nocapture, %class.CFX_BinaryBuf* nocapture dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CFX_BinaryBuf, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4
  %14 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 4
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store i8* null, i8** %15, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBufD2Ev(%class.CFX_BinaryBuf* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CFX_BinaryBuf, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBufD0Ev(%class.CFX_BinaryBuf*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV13CFX_BinaryBuf, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #9
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.CFX_BinaryBuf* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.CFX_BinaryBuf* @_ZN13CFX_BinaryBufaSEOS_(%class.CFX_BinaryBuf* returned, %class.CFX_BinaryBuf* nocapture dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 2
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 4
  %13 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %16 = load i64, i64* %15, align 8
  store i8* null, i8** %14, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %16, i64* %19, align 8
  %20 = icmp eq i8* %18, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %2
  tail call void @_Z7FX_FreePv(i8* nonnull %18) #9
  br label %22

22:                                               ; preds = %2, %21
  %23 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false)
  ret %class.CFX_BinaryBuf* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf6DeleteEmm(%class.CFX_BinaryBuf* nocapture, i64, i64) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %2
  %11 = sub i64 %9, %2
  %12 = icmp ult i64 %11, %1
  %13 = or i1 %10, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %5, i64 %1
  %16 = getelementptr inbounds i8, i8* %15, i64 %2
  %17 = add i64 %2, %1
  %18 = sub i64 %9, %17
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %16, i64 %18, i1 false)
  %19 = load i64, i64* %8, align 8
  %20 = sub i64 %19, %2
  store i64 %20, i64* %8, align 8
  br label %21

21:                                               ; preds = %3, %7, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf7GetSpanEv(%"class.pdfium::span"* noalias nocapture sret, %class.CFX_BinaryBuf* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 3
  %4 = bitcast i64* %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = shufflevector <2 x i64> %5, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %7 = bitcast %"class.pdfium::span"* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK13CFX_BinaryBuf7GetSpanEv(%"class.pdfium::span.1"* noalias nocapture sret, %class.CFX_BinaryBuf* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %1, i64 0, i32 3
  %4 = bitcast i64* %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = shufflevector <2 x i64> %5, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %7 = bitcast %"class.pdfium::span.1"* %0 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK13CFX_BinaryBuf9GetLengthEv(%class.CFX_BinaryBuf* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13CFX_BinaryBuf5ClearEv(%class.CFX_BinaryBuf* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN13CFX_BinaryBuf12DetachBufferEv(%class.CFX_BinaryBuf* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 2
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  %5 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf12EstimateSizeEm(%class.CFX_BinaryBuf* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %1, %8
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %0, i64 %9)
  br label %10

10:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %4, i64 %1) #9
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  br i1 %6, label %10, label %11, !prof !2

10:                                               ; preds = %2
  tail call void @llvm.trap() #9
  unreachable

11:                                               ; preds = %2
  %12 = icmp ult i64 %9, %7
  br i1 %12, label %13, label %44

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  %17 = lshr i64 %9, 2
  %18 = select i1 %16, i64 %17, i64 %15
  %19 = icmp ugt i64 %18, 128
  %20 = select i1 %19, i64 %18, i64 128
  %21 = add i64 %20, -1
  %22 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %7, i64 %21) #9
  %23 = extractvalue { i64, i1 } %22, 1
  br i1 %23, label %30, label %24, !prof !3

24:                                               ; preds = %13
  %25 = extractvalue { i64, i1 } %22, 0
  %26 = udiv i64 %25, %20
  %27 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %26, i64 %20) #9
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  br i1 %28, label %30, label %31, !prof !2

30:                                               ; preds = %13, %24
  tail call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %24
  store i64 %29, i64* %8, align 8
  %32 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  store i8* null, i8** %32, align 8
  %36 = tail call i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8* nonnull %33, i64 %29, i64 1) #9
  br label %39

37:                                               ; preds = %31
  %38 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %29, i64 1) #9
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i8* [ %36, %35 ], [ %38, %37 ]
  %41 = load i8*, i8** %32, align 8
  store i8* %40, i8** %32, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_Z7FX_FreePv(i8* nonnull %41) #9
  br label %44

44:                                               ; preds = %11, %43, %39
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN6pdfium8internal12ReallocOrDieEPvmm(i8*, i64, i64) local_unnamed_addr #6

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf10AppendSpanEN6pdfium4spanIKhEE(%class.CFX_BinaryBuf* nocapture, %"class.pdfium::span.1"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.pdfium::span.1", %"class.pdfium::span.1"* %1, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.pdfium::span.1", %"class.pdfium::span.1"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %0, i64 %6) #9
  %9 = icmp eq i8* %4, null
  %10 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  br i1 %9, label %16, label %15

15:                                               ; preds = %8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* nonnull align 1 %4, i64 %6, i1 false) #9
  br label %17

16:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 %6, i1 false) #9
  br label %17

17:                                               ; preds = %16, %15
  %18 = load i64, i64* %12, align 8
  %19 = add i64 %18, %6
  store i64 %19, i64* %12, align 8
  br label %20

20:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_BinaryBuf11AppendBlockEPKvm(%class.CFX_BinaryBuf* nocapture, i8* readonly, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  tail call void @_ZN13CFX_BinaryBuf9ExpandBufEm(%class.CFX_BinaryBuf* %0, i64 %2)
  %6 = icmp eq i8* %1, null
  %7 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.CFX_BinaryBuf, %class.CFX_BinaryBuf* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  br i1 %6, label %13, label %12

12:                                               ; preds = %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %14

13:                                               ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %2, i1 false)
  br label %14

14:                                               ; preds = %13, %12
  %15 = load i64, i64* %9, align 8
  %16 = add i64 %15, %2
  store i64 %16, i64* %9, align 8
  br label %17

17:                                               ; preds = %3, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2002, i32 2000}
