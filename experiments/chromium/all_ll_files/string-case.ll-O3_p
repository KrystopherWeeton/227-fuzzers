; ModuleID = '../../v8/src/strings/string-case.cc'
source_filename = "../../v8/src/strings/string-case.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

$_ZN2v88internal16FastAsciiConvertILb0EEEiPcPKciPb = comdat any

$_ZN2v88internal16FastAsciiConvertILb1EEEiPcPKciPb = comdat any

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal16FastAsciiConvertILb0EEEiPcPKciPb(i8*, i8*, i32, i8*) local_unnamed_addr #0 comdat {
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = ptrtoint i8* %1 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %62

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %6, i64 -4
  %12 = icmp ult i8* %11, %1
  br i1 %12, label %35, label %13

13:                                               ; preds = %10, %30
  %14 = phi i8* [ %33, %30 ], [ %0, %10 ]
  %15 = phi i8* [ %32, %30 ], [ %1, %10 ]
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, -2139062144
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = ptrtoint i8* %15 to i64
  %22 = sub i64 %21, %7
  %23 = trunc i64 %22 to i32
  br label %91

24:                                               ; preds = %13
  %25 = sub i32 -84215046, %17
  %26 = add i32 %17, 522133279
  %27 = and i32 %26, -2139062144
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast i8* %14 to i32*
  store i32 %17, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %15, i64 4
  %33 = getelementptr inbounds i8, i8* %14, i64 4
  %34 = icmp ugt i8* %32, %11
  br i1 %34, label %35, label %13

35:                                               ; preds = %30, %24, %10
  %36 = phi i8* [ %1, %10 ], [ %15, %24 ], [ %32, %30 ]
  %37 = phi i8* [ %0, %10 ], [ %14, %24 ], [ %33, %30 ]
  %38 = phi i8 [ 0, %10 ], [ 1, %24 ], [ 0, %30 ]
  %39 = icmp ugt i8* %36, %11
  br i1 %39, label %62, label %40

40:                                               ; preds = %35, %51
  %41 = phi i8* [ %60, %51 ], [ %37, %35 ]
  %42 = phi i8* [ %59, %51 ], [ %36, %35 ]
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, -2139062144
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = ptrtoint i8* %42 to i64
  %49 = sub i64 %48, %7
  %50 = trunc i64 %49 to i32
  br label %91

51:                                               ; preds = %40
  %52 = sub i32 -84215046, %44
  %53 = add i32 %44, 522133279
  %54 = and i32 %53, -2139062144
  %55 = and i32 %54, %52
  %56 = lshr exact i32 %55, 2
  %57 = xor i32 %56, %44
  %58 = bitcast i8* %41 to i32*
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %42, i64 4
  %60 = getelementptr inbounds i8, i8* %41, i64 4
  %61 = icmp ugt i8* %59, %11
  br i1 %61, label %62, label %40

62:                                               ; preds = %51, %35, %4
  %63 = phi i8 [ 0, %4 ], [ %38, %35 ], [ %38, %51 ]
  %64 = phi i8* [ %1, %4 ], [ %36, %35 ], [ %59, %51 ]
  %65 = phi i8* [ %0, %4 ], [ %37, %35 ], [ %60, %51 ]
  %66 = icmp ult i8* %64, %6
  br i1 %66, label %67, label %88

67:                                               ; preds = %62, %79
  %68 = phi i8* [ %86, %79 ], [ %65, %62 ]
  %69 = phi i8* [ %85, %79 ], [ %64, %62 ]
  %70 = phi i8 [ %83, %79 ], [ %63, %62 ]
  %71 = load i8, i8* %69, align 1
  %72 = sext i8 %71 to i32
  %73 = and i32 %72, -2139062144
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = ptrtoint i8* %69 to i64
  %77 = sub i64 %76, %7
  %78 = trunc i64 %77 to i32
  br label %91

79:                                               ; preds = %67
  %80 = add i8 %71, -97
  %81 = icmp ult i8 %80, 26
  %82 = xor i8 %71, 32
  %83 = select i1 %81, i8 1, i8 %70
  %84 = select i1 %81, i8 %82, i8 %71
  store i8 %84, i8* %68, align 1
  %85 = getelementptr inbounds i8, i8* %69, i64 1
  %86 = getelementptr inbounds i8, i8* %68, i64 1
  %87 = icmp eq i8* %85, %6
  br i1 %87, label %88, label %67

88:                                               ; preds = %79, %62
  %89 = phi i8 [ %63, %62 ], [ %83, %79 ]
  %90 = and i8 %89, 1
  store i8 %90, i8* %3, align 1
  br label %91

91:                                               ; preds = %75, %47, %20, %88
  %92 = phi i32 [ %2, %88 ], [ %23, %20 ], [ %50, %47 ], [ %78, %75 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN2v88internal16FastAsciiConvertILb1EEEiPcPKciPb(i8*, i8*, i32, i8*) local_unnamed_addr #0 comdat {
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = ptrtoint i8* %1 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %62

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %6, i64 -4
  %12 = icmp ult i8* %11, %1
  br i1 %12, label %35, label %13

13:                                               ; preds = %10, %30
  %14 = phi i8* [ %33, %30 ], [ %0, %10 ]
  %15 = phi i8* [ %32, %30 ], [ %1, %10 ]
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, -2139062144
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = ptrtoint i8* %15 to i64
  %22 = sub i64 %21, %7
  %23 = trunc i64 %22 to i32
  br label %91

24:                                               ; preds = %13
  %25 = sub i32 -623191334, %17
  %26 = add i32 %17, 1061109567
  %27 = and i32 %26, -2139062144
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = bitcast i8* %14 to i32*
  store i32 %17, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %15, i64 4
  %33 = getelementptr inbounds i8, i8* %14, i64 4
  %34 = icmp ugt i8* %32, %11
  br i1 %34, label %35, label %13

35:                                               ; preds = %30, %24, %10
  %36 = phi i8* [ %1, %10 ], [ %15, %24 ], [ %32, %30 ]
  %37 = phi i8* [ %0, %10 ], [ %14, %24 ], [ %33, %30 ]
  %38 = phi i8 [ 0, %10 ], [ 1, %24 ], [ 0, %30 ]
  %39 = icmp ugt i8* %36, %11
  br i1 %39, label %62, label %40

40:                                               ; preds = %35, %51
  %41 = phi i8* [ %60, %51 ], [ %37, %35 ]
  %42 = phi i8* [ %59, %51 ], [ %36, %35 ]
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, -2139062144
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = ptrtoint i8* %42 to i64
  %49 = sub i64 %48, %7
  %50 = trunc i64 %49 to i32
  br label %91

51:                                               ; preds = %40
  %52 = sub i32 -623191334, %44
  %53 = add i32 %44, 1061109567
  %54 = and i32 %53, -2139062144
  %55 = and i32 %54, %52
  %56 = lshr exact i32 %55, 2
  %57 = xor i32 %56, %44
  %58 = bitcast i8* %41 to i32*
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %42, i64 4
  %60 = getelementptr inbounds i8, i8* %41, i64 4
  %61 = icmp ugt i8* %59, %11
  br i1 %61, label %62, label %40

62:                                               ; preds = %51, %35, %4
  %63 = phi i8 [ 0, %4 ], [ %38, %35 ], [ %38, %51 ]
  %64 = phi i8* [ %1, %4 ], [ %36, %35 ], [ %59, %51 ]
  %65 = phi i8* [ %0, %4 ], [ %37, %35 ], [ %60, %51 ]
  %66 = icmp ult i8* %64, %6
  br i1 %66, label %67, label %88

67:                                               ; preds = %62, %79
  %68 = phi i8* [ %86, %79 ], [ %65, %62 ]
  %69 = phi i8* [ %85, %79 ], [ %64, %62 ]
  %70 = phi i8 [ %83, %79 ], [ %63, %62 ]
  %71 = load i8, i8* %69, align 1
  %72 = sext i8 %71 to i32
  %73 = and i32 %72, -2139062144
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = ptrtoint i8* %69 to i64
  %77 = sub i64 %76, %7
  %78 = trunc i64 %77 to i32
  br label %91

79:                                               ; preds = %67
  %80 = add i8 %71, -65
  %81 = icmp ult i8 %80, 26
  %82 = xor i8 %71, 32
  %83 = select i1 %81, i8 1, i8 %70
  %84 = select i1 %81, i8 %82, i8 %71
  store i8 %84, i8* %68, align 1
  %85 = getelementptr inbounds i8, i8* %69, i64 1
  %86 = getelementptr inbounds i8, i8* %68, i64 1
  %87 = icmp eq i8* %85, %6
  br i1 %87, label %88, label %67

88:                                               ; preds = %79, %62
  %89 = phi i8 [ %63, %62 ], [ %83, %79 ]
  %90 = and i8 %89, 1
  store i8 %90, i8* %3, align 1
  br label %91

91:                                               ; preds = %75, %47, %20, %88
  %92 = phi i32 [ %2, %88 ], [ %23, %20 ], [ %50, %47 ], [ %78, %75 ]
  ret i32 %92
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
