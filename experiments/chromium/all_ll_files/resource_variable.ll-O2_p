; ModuleID = '../../third_party/tflite/src/tensorflow/lite/experimental/resource/resource_variable.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/experimental/resource/resource_variable.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tflite::resource::ResourceVariable" = type <{ %"class.tflite::resource::ResourceBase", %struct.TfLiteTensor, i8, [7 x i8] }>
%"class.tflite::resource::ResourceBase" = type { i32 (...)** }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.tflite::resource::ResourceVariable"* }

$_ZN6tflite8resource16ResourceVariable13IsInitializedEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRiNS2_INS4_16ResourceVariableENS6_ISN_EEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

@_ZTVN6tflite8resource16ResourceVariableE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariableD2Ev to i8*), i8* bitcast (void (%"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariableD0Ev to i8*), i8* bitcast (i1 (%"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariable13IsInitializedEv to i8*)] }, align 8

@_ZN6tflite8resource16ResourceVariableC1Ev = hidden unnamed_addr alias void (%"class.tflite::resource::ResourceVariable"*), void (%"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariableC2Ev
@_ZN6tflite8resource16ResourceVariableC1EOS1_ = hidden unnamed_addr alias void (%"class.tflite::resource::ResourceVariable"*, %"class.tflite::resource::ResourceVariable"*), void (%"class.tflite::resource::ResourceVariable"*, %"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariableC2EOS1_
@_ZN6tflite8resource16ResourceVariableD1Ev = hidden unnamed_addr alias void (%"class.tflite::resource::ResourceVariable"*), void (%"class.tflite::resource::ResourceVariable"*)* @_ZN6tflite8resource16ResourceVariableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite8resource16ResourceVariableC2Ev(%"class.tflite::resource::ResourceVariable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite8resource16ResourceVariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1
  %4 = bitcast %struct.TfLiteTensor* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 113, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite8resource16ResourceVariableC2EOS1_(%"class.tflite::resource::ResourceVariable"* nocapture, %"class.tflite::resource::ResourceVariable"* nocapture dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite8resource16ResourceVariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1
  %7 = bitcast %struct.TfLiteTensor* %6 to i8*
  %8 = bitcast %struct.TfLiteTensor* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 112, i1 false)
  %9 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  store i8 %10, i8* %4, align 8
  %11 = bitcast %struct.TfLiteTensor* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 113, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite8resource16ResourceVariableD2Ev(%"class.tflite::resource::ResourceVariable"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite8resource16ResourceVariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 1
  %8 = bitcast %union.TfLitePtrUnion* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #9
  %10 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 2
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = icmp eq %struct.TfLiteIntArray* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* nonnull %11) #9
  br label %14

14:                                               ; preds = %6, %1, %13
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite8resource16ResourceVariableD0Ev(%"class.tflite::resource::ResourceVariable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite8resource16ResourceVariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 1
  %8 = bitcast %union.TfLitePtrUnion* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @free(i8* %9) #9
  %10 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 2
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = icmp eq %struct.TfLiteIntArray* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %6
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* nonnull %11) #9
  br label %14

14:                                               ; preds = %1, %6, %13
  %15 = bitcast %"class.tflite::resource::ResourceVariable"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite8resource16ResourceVariable10AssignFromEPK12TfLiteTensor(%"class.tflite::resource::ResourceVariable"*, %struct.TfLiteTensor* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 1
  %5 = bitcast %union.TfLitePtrUnion* %4 to i8**
  %6 = bitcast %union.TfLitePtrUnion* %4 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 2
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = bitcast %struct.TfLiteTensor* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 112, i1 false)
  %13 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 4
  store i32 4, i32* %13, align 8
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 0
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 3
  %18 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 3
  %19 = bitcast %struct.TfLiteQuantizationParams* %17 to i64*
  %20 = bitcast %struct.TfLiteQuantizationParams* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 12
  %23 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 1, i32 12
  %24 = bitcast %struct.TfLiteQuantization* %23 to i8*
  %25 = bitcast %struct.TfLiteQuantization* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %27 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  %28 = tail call i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray* %11, %struct.TfLiteIntArray* %27) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %11) #9
  %31 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %26, align 8
  %32 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %31) #9
  br label %33

33:                                               ; preds = %2, %30
  %34 = phi %struct.TfLiteIntArray* [ %32, %30 ], [ %11, %2 ]
  store %struct.TfLiteIntArray* %34, %struct.TfLiteIntArray** %10, align 8
  store i64 %7, i64* %6, align 8
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %9, %36
  %38 = inttoptr i64 %7 to i8*
  br i1 %37, label %41, label %39

39:                                               ; preds = %33
  tail call void @TfLiteTensorRealloc(i64 %36, %struct.TfLiteTensor* %3) #9
  %40 = load i8*, i8** %5, align 8
  br label %41

41:                                               ; preds = %33, %39
  %42 = phi i8* [ %38, %33 ], [ %40, %39 ]
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %44 = bitcast %union.TfLitePtrUnion* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %45, i64 %46, i1 false)
  %47 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 2
  store i8 1, i8* %47, align 8
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @TfLiteIntArrayEqual(%struct.TfLiteIntArray*, %struct.TfLiteIntArray*) local_unnamed_addr #3

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #3

declare void @TfLiteTensorRealloc(i64, %struct.TfLiteTensor*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite8resource36CreateResourceVariableIfNotAvailableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::unique_ptr.14", align 8
  store i32 %1, i32* %3, align 4
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %57, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %57, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %57

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %75, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %57, label %32

57:                                               ; preds = %53, %45, %19, %2, %26
  %58 = bitcast %"class.std::__1::unique_ptr.14"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  %59 = tail call i8* @_Znwm(i64 128) #10
  %60 = bitcast i8* %59 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite8resource16ResourceVariableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 113, i1 false) #9
  %62 = ptrtoint i8* %59 to i64
  %63 = bitcast %"class.std::__1::unique_ptr.14"* %4 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0
  %65 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRiNS2_INS4_16ResourceVariableENS6_ISN_EEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %64, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3, %"class.std::__1::unique_ptr.14"* nonnull dereferenceable(8) %4) #9
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.tflite::resource::ResourceVariable"*, %"class.tflite::resource::ResourceVariable"** %66, align 8
  store %"class.tflite::resource::ResourceVariable"* null, %"class.tflite::resource::ResourceVariable"** %66, align 8
  %68 = icmp eq %"class.tflite::resource::ResourceVariable"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %57
  %70 = bitcast %"class.tflite::resource::ResourceVariable"* %67 to void (%"class.tflite::resource::ResourceVariable"*)***
  %71 = load void (%"class.tflite::resource::ResourceVariable"*)**, void (%"class.tflite::resource::ResourceVariable"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.tflite::resource::ResourceVariable"*)*, void (%"class.tflite::resource::ResourceVariable"*)** %71, i64 1
  %73 = load void (%"class.tflite::resource::ResourceVariable"*)*, void (%"class.tflite::resource::ResourceVariable"*)** %72, align 8
  call void %73(%"class.tflite::resource::ResourceVariable"* nonnull %67) #9
  br label %74

74:                                               ; preds = %57, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #9
  br label %75

75:                                               ; preds = %48, %74
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.tflite::resource::ResourceVariable"* @_ZN6tflite8resource19GetResourceVariableEPNSt3__113unordered_mapIiNS1_10unique_ptrINS0_12ResourceBaseENS1_14default_deleteIS4_EEEENS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiS7_EEEEEEi(%"class.std::__1::unordered_map"* nocapture readonly, i32) local_unnamed_addr #6 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #9, !range !3
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %59

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %59, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.tflite::resource::ResourceVariable"**
  %58 = load %"class.tflite::resource::ResourceVariable"*, %"class.tflite::resource::ResourceVariable"** %57, align 8
  br label %59

59:                                               ; preds = %51, %43, %24, %2, %17, %55
  %60 = phi %"class.tflite::resource::ResourceVariable"* [ %58, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  ret %"class.tflite::resource::ResourceVariable"* %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite8resource16ResourceVariable13IsInitializedEv(%"class.tflite::resource::ResourceVariable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::resource::ResourceVariable", %"class.tflite::resource::ResourceVariable"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRiNS2_INS4_16ResourceVariableENS6_ISN_EEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::__1::unique_ptr.14"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = load i32, i32* %1, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %4
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  br label %29

29:                                               ; preds = %27, %49
  %30 = phi %"struct.std::__1::__hash_node_base"* [ %32, %49 ], [ %25, %27 ]
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"* %32, null
  br i1 %33, label %54, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %34
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %28
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %40, %42, %44
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %49, label %54

49:                                               ; preds = %34, %46
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %146, label %29

54:                                               ; preds = %29, %46, %20, %4
  %55 = phi i64 [ %21, %20 ], [ -6148914691236517206, %4 ], [ %21, %46 ], [ %21, %29 ]
  %56 = tail call i8* @_Znwm(i64 32) #10, !noalias !4
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %2, align 4, !noalias !4
  store i32 %59, i32* %58, align 8, !noalias !4
  %60 = getelementptr inbounds i8, i8* %56, i64 24
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %3, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr.14"* %3 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !4
  store %"class.tflite::resource::ResourceVariable"* null, %"class.tflite::resource::ResourceVariable"** %61, align 8, !noalias !4
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8, !noalias !4
  %65 = getelementptr inbounds i8, i8* %56, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %6, i64* %66, align 8, !noalias !4
  %67 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !4
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %8 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %9, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %54
  %79 = shl i64 %8, 1
  %80 = icmp ult i64 %8, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %8) #9, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #9
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %7, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #9, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %6
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %6
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %6, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %54
  %102 = phi i64 [ %8, %54 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %55, %54 ], [ %96, %94 ], [ %6, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %56 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %56, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #9, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %56 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %56, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %56 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %49, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %49 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %32, %49 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRiJNS2_INS4_16ResourceVariableENS6_ISN_EEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN6tflite8resource12ResourceBaseENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRiJNS2_INS4_16ResourceVariableENS6_ISN_EEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
