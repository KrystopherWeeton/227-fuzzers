; ModuleID = '../../third_party/blink/renderer/modules/background_fetch/background_fetch_registration.cc'
source_filename = "../../third_party/blink/renderer/modules/background_fetch/background_fetch_registration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.170" }
%"class.blink::HeapHashMap.170" = type { %"class.WTF::HashMap.173" }
%"class.WTF::HashMap.173" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"struct.WTF::KeyValuePair.176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.176" = type { %"class.blink::WeakMember.177", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.179", i32, [4 x i8], %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.317", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.359", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.297", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__atomic_base.217" }
%"struct.std::__1::__atomic_base.217" = type { %"struct.std::__1::__cxx_atomic_impl.218" }
%"struct.std::__1::__cxx_atomic_impl.218" = type { %"struct.std::__1::__cxx_atomic_base_impl.219" }
%"struct.std::__1::__cxx_atomic_base_impl.219" = type { i64 }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::Worklist.226"* }
%"class.blink::Worklist.226" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::Worklist.233"* }
%"class.blink::Worklist.233" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::Worklist.240"* }
%"class.blink::Worklist.240" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::Worklist.247"* }
%"class.blink::Worklist.247" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist.254"* }
%"class.blink::Worklist.254" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist.261"* }
%"class.blink::Worklist.261" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::Worklist.268"* }
%"class.blink::Worklist.268" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.215" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.275", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.290", [4 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277", %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { float }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.300", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.309" }
%"class.WTF::Vector.309" = type { %"class.WTF::VectorBuffer.310" }
%"class.WTF::VectorBuffer.310" = type { %"class.WTF::VectorBufferBase.311" }
%"class.WTF::VectorBufferBase.311" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.325" }
%"class.WTF::VectorBuffer.325" = type { %"class.WTF::VectorBufferBase.326" }
%"class.WTF::VectorBufferBase.326" = type { %"struct.std::__1::pair.327"*, i32, i32 }
%"struct.std::__1::pair.327" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.226"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.233"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.240"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.247"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.254"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.511" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.359" = type { %"struct.std::__1::__atomic_base.360" }
%"struct.std::__1::__atomic_base.360" = type { %"struct.std::__1::__cxx_atomic_impl.361" }
%"struct.std::__1::__cxx_atomic_impl.361" = type { %"struct.std::__1::__cxx_atomic_base_impl.362" }
%"struct.std::__1::__cxx_atomic_base_impl.362" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.39" }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i32 }
%"class.blink::BackgroundFetchRegistration" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver", %"class.blink::Member.8", %"class.WTF::String", i64, i64, i64, i64, i8, i32, i32, %"class.blink::HeapVector.114", %"class.mojo::Remote", %"class.blink::HeapMojoReceiver" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ServiceWorkerRegistration"* }
%"class.blink::HeapVector.114" = type { %"class.WTF::Vector.117" }
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %"class.blink::Member.120"*, i32, i32 }
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::BackgroundFetchRecord"* }
%"class.blink::BackgroundFetchRecord" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.122", %"class.blink::Member.402", %"class.blink::Member.163", i32, [4 x i8] }>
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::Request"* }
%"class.blink::Request" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.124", %"class.blink::Body", %"class.blink::Member.127", %"class.blink::Member.400", %"class.blink::Member.379" }
%"class.blink::ActiveScriptWrappable.124" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Body" = type { %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.125" }
%"class.blink::WeakMember.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.523", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.577", i32, i8, [3 x i8], %"class.blink::HeapVector.579", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.598", %"class.blink::Member.654", %"class.blink::Member.656", i8, [7 x i8] }>
%"class.blink::Supplementable.523" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.524" }
%"class.blink::HeapHashMap.524" = type { %"class.WTF::HashMap.527" }
%"class.WTF::HashMap.527" = type { %"class.WTF::HashTable.528" }
%"class.WTF::HashTable.528" = type <{ %"struct.WTF::KeyValuePair.530"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.530" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.531" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.15"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.15" = type opaque
%"class.blink::Supplementable.531" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.532" }
%"class.blink::HeapHashMap.532" = type { %"class.WTF::HashMap.535" }
%"class.WTF::HashMap.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"struct.WTF::KeyValuePair.538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.538" = type { i8*, %"class.blink::Member.1837" }
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1839" }
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.539, %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.567", %"class.std::__1::unique_ptr.567", %"class.blink::Member.393", i32, [4 x i8], %"class.WTF::HashSet.573", i32, i32 }
%class.scoped_refptr.539 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.516", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.518", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.143 }
%"class.WTF::RefCounted.516" = type { %"class.base::RefCounted.517" }
%"class.base::RefCounted.517" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.518" = type { %"class.absl::optional_internal::optional_data.519" }
%"class.absl::optional_internal::optional_data.519" = type { %"class.absl::optional_internal::optional_data_base.520" }
%"class.absl::optional_internal::optional_data_base.520" = type { %"class.absl::optional_internal::optional_data_dtor_base.521" }
%"class.absl::optional_internal::optional_data_dtor_base.521" = type { i8, %union.anon.522 }
%union.anon.522 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.143 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.543", %"class.std::__1::map.554", %"class.std::__1::map.563"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.518" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.408 }
%union.anon.408 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.543" = type { %"class.std::__1::__tree.544" }
%"class.std::__1::__tree.544" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.545", %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.554" = type { %"class.std::__1::__tree.555" }
%"class.std::__1::__tree.555" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.563" = type opaque
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.126" }
%"class.WTF::HashSet.573" = type { %"class.WTF::HashTable.574" }
%"class.WTF::HashTable.574" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.577" = type { %"class.blink::MemberBase.578" }
%"class.blink::MemberBase.578" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.579" = type { %"class.WTF::Vector.582" }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { %"class.blink::Member.585"*, i32, i32 }
%"class.blink::Member.585" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.591", i32, i32 }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type opaque
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote.643" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.601" }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.604" }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { %"class.mojo::StructPtr.607"*, i32, i32 }
%"class.mojo::StructPtr.607" = type { %"class.std::__1::unique_ptr.608" }
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.611", %"class.WTF::HashMap.618", %"class.WTF::HashMap.623", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.154", i32, %"class.mojo::StructPtr.628", %"class.WTF::Vector.154" }
%"class.mojo::StructPtr.611" = type { %"class.std::__1::unique_ptr.612" }
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"struct.WTF::KeyValuePair.627"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.627" = type { i32, %"class.mojo::StructPtr.1926" }
%"class.mojo::StructPtr.1926" = type { %"class.std::__1::unique_ptr.1927" }
%"class.std::__1::unique_ptr.1927" = type { %"class.std::__1::__compressed_pair.1928" }
%"class.std::__1::__compressed_pair.1928" = type { %"struct.std::__1::__compressed_pair_elem.1929" }
%"struct.std::__1::__compressed_pair_elem.1929" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.1930", %"class.WTF::Vector.154", %"class.WTF::Vector.1935", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { %"class.mojo::StructPtr.611"*, i32, i32 }
%"class.WTF::Vector.1935" = type { %"class.WTF::VectorBuffer.1936" }
%"class.WTF::VectorBuffer.1936" = type { %"class.WTF::VectorBufferBase.1937" }
%"class.WTF::VectorBufferBase.1937" = type { %"class.mojo::StructPtr.1938"*, i32, i32 }
%"class.mojo::StructPtr.1938" = type { %"class.std::__1::unique_ptr.1939" }
%"class.std::__1::unique_ptr.1939" = type { %"class.std::__1::__compressed_pair.1940" }
%"class.std::__1::__compressed_pair.1940" = type { %"struct.std::__1::__compressed_pair_elem.1941" }
%"struct.std::__1::__compressed_pair_elem.1941" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.1942" }
%"class.WTF::Vector.1942" = type { %"class.WTF::VectorBuffer.1943" }
%"class.WTF::VectorBuffer.1943" = type { %"class.WTF::VectorBufferBase.1944" }
%"class.WTF::VectorBufferBase.1944" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.628" = type { %"class.std::__1::unique_ptr.629" }
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.154", i8, i8, [6 x i8] }>
%"class.WTF::Vector.154" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote.643" = type { %"class.mojo::internal::AssociatedInterfacePtrState.644" }
%"class.mojo::internal::AssociatedInterfacePtrState.644" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.645" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.35", i32 }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional", %"class.absl::optional.44", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.65", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map", %"class.std::__1::map.93", i64, %"class.base::OnceCallback.58", %"class.base::OnceCallback.102", i8, %class.scoped_refptr.49, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.103" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.39" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.58" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.49, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.51 }
%class.scoped_refptr.51 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.52", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.53" }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.658", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.49, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.658" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.68", %class.scoped_refptr.69 }
%"class.base::RepeatingCallback.68" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.69 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.70", [4 x i8] }>
%"class.base::RefCountedThreadSafe.70" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.86" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.86" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback.58" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.102" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.49 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.50" }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.58" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.103" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::FetchRequestData"* }
%"class.blink::FetchRequestData" = type <{ %"class.WTF::AtomicString", %"class.blink::KURL", %"class.blink::Member.131", i32, [4 x i8], %class.scoped_refptr.143, %class.scoped_refptr.143, %"class.WTF::AtomicString", i32, i32, i32, i32, i32, i32, %"class.absl::optional.144", %"class.blink::Member.159", %"class.WTF::String", %"class.WTF::String", i32, i8, i8, [2 x i8], %"class.blink::HeapMojoRemote", %"class.base::UnguessableToken", %"class.blink::Member.393", i8, [7 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.23" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::KURL"* }
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::FetchHeaderList"* }
%"class.blink::FetchHeaderList" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.135" }
%"class.std::__1::__tree.135" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.149", %"class.WTF::Vector.154", %"class.WTF::String" }
%"class.WTF::Vector.149" = type { %"class.WTF::VectorBuffer.150" }
%"class.WTF::VectorBuffer.150" = type { %"class.WTF::VectorBufferBase.151" }
%"class.WTF::VectorBufferBase.151" = type { %class.scoped_refptr.143*, i32, i32 }
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::BodyStreamBuffer"* }
%"class.blink::BodyStreamBuffer" = type <{ %"class.blink::UnderlyingSourceBase", %"class.blink::BytesConsumer::Client", %"class.blink::Member.163", %"class.blink::Member.367", %"class.blink::Member.369", %"class.blink::Member.371", %"class.blink::Member.375", %"class.blink::Member.379", %"class.blink::Member.394", %class.scoped_refptr.396, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::UnderlyingSourceBase" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.161" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::ReadableStreamDefaultControllerWithScriptScope"* }
%"class.blink::ReadableStreamDefaultControllerWithScriptScope" = type opaque
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ReadableStream"* }
%"class.blink::ReadableStream" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::BytesUploader"* }
%"class.blink::BytesUploader" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::BytesConsumer"* }
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::FetchDataLoader"* }
%"class.blink::FetchDataLoader" = type { i32 (...)** }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%class.scoped_refptr.396 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.397" }
%"class.base::RefCountedThreadSafe.397" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.398" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::URLLoaderFactory, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1843" }
%"class.mojo::Remote.1843" = type { %"class.mojo::internal::InterfacePtrState.1844" }
%"class.mojo::internal::InterfacePtrState.1844" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1845" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.405, %"class.std::__1::unique_ptr.35", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.49, i32 }>
%class.scoped_refptr.405 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.49, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.469", %"class.absl::optional.474", %"class.absl::optional.428", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.494", i8, [7 x i8], %class.scoped_refptr.49, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.70" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.58", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.49, %"class.std::__1::unique_ptr.412", %"class.absl::optional.422", %"struct.std::__1::atomic.359", i8, i8, i8, i8, i32, i32, %"class.absl::optional.428", %"class.std::__1::unique_ptr.433", i8, i64, %class.scoped_refptr.466, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.468" }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.49, i8, %"class.mojo::ScopedHandleBase.415", %class.scoped_refptr.416, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.417", i8*, %"class.base::WeakPtrFactory.418" }
%"class.mojo::ScopedHandleBase.415" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.416 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.417" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.418" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.427", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.427" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.436", i8, i64, %class.scoped_refptr.437, %class.scoped_refptr.462 }
%"class.base::RepeatingCallback.436" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.437 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.438", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.440", %"class.std::__1::map.451", i8, [7 x i8] }>
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.439 }
%class.scoped_refptr.439 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.440" = type { %"class.std::__1::__tree.441" }
%"class.std::__1::__tree.441" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.451" = type { %"class.std::__1::__tree.452" }
%"class.std::__1::__tree.452" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%class.scoped_refptr.462 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.466 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.467 }
%class.scoped_refptr.467 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.468" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.469" = type { %"class.absl::optional_internal::optional_data.470" }
%"class.absl::optional_internal::optional_data.470" = type { %"class.absl::optional_internal::optional_data_base.471" }
%"class.absl::optional_internal::optional_data_base.471" = type { %"class.absl::optional_internal::optional_data_dtor_base.472" }
%"class.absl::optional_internal::optional_data_dtor_base.472" = type { i8, %union.anon.473 }
%union.anon.473 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.474" = type { %"class.absl::optional_internal::optional_data.475" }
%"class.absl::optional_internal::optional_data.475" = type { %"class.absl::optional_internal::optional_data_base.476" }
%"class.absl::optional_internal::optional_data_base.476" = type { %"class.absl::optional_internal::optional_data_dtor_base.477" }
%"class.absl::optional_internal::optional_data_dtor_base.477" = type { i8, [7 x i8], %union.anon.478 }
%union.anon.478 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.428" = type { %"class.absl::optional_internal::optional_data.429" }
%"class.absl::optional_internal::optional_data.429" = type { %"class.absl::optional_internal::optional_data_base.430" }
%"class.absl::optional_internal::optional_data_base.430" = type { %"class.absl::optional_internal::optional_data_dtor_base.431" }
%"class.absl::optional_internal::optional_data_dtor_base.431" = type { i8, %union.anon.432 }
%union.anon.432 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.479 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.479 = type { %"class.std::__1::map.482" }
%"class.std::__1::map.482" = type { %"class.std::__1::__tree.483" }
%"class.std::__1::__tree.483" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.493"*, i64 }
%"class.std::__1::unique_ptr.493" = type opaque
%"class.std::__1::map.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.1845" = type { %"class.std::__1::__compressed_pair.1846" }
%"class.std::__1::__compressed_pair.1846" = type { %"struct.std::__1::__compressed_pair_elem.1847" }
%"struct.std::__1::__compressed_pair_elem.1847" = type { %"class.network::mojom::blink::URLLoaderFactoryProxy"* }
%"class.network::mojom::blink::URLLoaderFactoryProxy" = type { %"class.network::mojom::blink::URLLoaderFactory", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::URLLoaderFactory" = type { i32 (...)** }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::Headers"* }
%"class.blink::Headers" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.blink::Member.131", i32, [4 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.381", %"class.blink::HeapVector.386", %"class.blink::Member.393" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.base::OnceCallback.58"*, i32, i32 }
%"class.blink::HeapVector.386" = type { %"class.WTF::Vector.389" }
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::Member.379"*, i32, i32 }
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.163" = type { %"class.blink::MemberBase.164" }
%"class.blink::MemberBase.164" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.167, %"class.blink::Member.363", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.167 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.365" }
%"class.blink::Persistent.365" = type { %"class.blink::PersistentBase.366" }
%"class.blink::PersistentBase.366" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.503" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationService", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationService" = type { i32 (...)** }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.509" }
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1921", %"class.blink::Member.1922", %"class.mojo::Receiver.1924" }
%"class.blink::ThreadState::PrefinalizerRegistration.1921" = type { i8 }
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::BackgroundFetchRegistration"* }
%"class.mojo::Receiver.1924" = type { %"class.mojo::internal::BindingState.1925" }
%"class.mojo::internal::BindingState.1925" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.405, %"class.std::__1::unique_ptr.35", %"class.base::WeakPtrFactory.1913" }
%"class.base::WeakPtrFactory.1913" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* }
%"class.blink::ServiceWorkerRegistration" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.10", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::Supplementable", %"class.blink::mojom::blink::ServiceWorkerRegistrationObject", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.20", %"class.blink::Member.33", i64, %"class.blink::KURL", i32, [4 x i8], %"class.mojo::AssociatedRemote", %"class.mojo::AssociatedReceiver", i8, [7 x i8] }>
%"class.blink::ActiveScriptWrappable.10" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.18" }
%"class.WTF::HashTable.18" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::mojom::blink::ServiceWorkerRegistrationObject" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::ServiceWorker"* }
%"class.blink::ServiceWorker" = type { %"class.blink::AbstractWorker.base", %"class.blink::ActiveScriptWrappable.22", %"class.blink::mojom::blink::ServiceWorkerObject", i8, %"class.blink::KURL", i32, %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedReceiver" }
%"class.blink::AbstractWorker.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextLifecycleStateObserver.base" }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ActiveScriptWrappable.22" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::mojom::blink::ServiceWorkerObject" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.29" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerObjectHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerObjectHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.31" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::ServiceWorkerObject, blink::ServiceWorker, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::ServiceWorkerObject, blink::ServiceWorker, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::NavigationPreloadManager"* }
%"class.blink::NavigationPreloadManager" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.8" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.107" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostProxy"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHostProxy" = type { %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectHost" = type { i32 (...)** }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::ServiceWorkerRegistrationObjectStub", %"class.base::WeakPtrFactory.113" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.35" }
%"class.blink::mojom::blink::ServiceWorkerRegistrationObjectStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::ServiceWorkerRegistrationObject"* }
%"class.base::WeakPtrFactory.113" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::StructPtr.659" = type { %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::mojom::blink::BackgroundFetchRegistration"* }
%"class.blink::mojom::blink::BackgroundFetchRegistration" = type { %"class.mojo::StructPtr.663", %"class.mojo::PendingRemote.670" }
%"class.mojo::StructPtr.663" = type { %"class.std::__1::unique_ptr.664" }
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* }
%"class.blink::mojom::blink::BackgroundFetchRegistrationData" = type { %"class.WTF::String", i64, i64, i64, i64, i32, i32 }
%"class.mojo::PendingRemote.670" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.675" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.405, %"class.std::__1::unique_ptr.35", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.49, i32, [4 x i8] }>
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.50", [4 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.681", %"class.blink::Member.681", %"class.blink::Member.683", %"class.blink::Member.685", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.676" }
%"class.absl::optional.676" = type { %"class.absl::optional_internal::optional_data.677" }
%"class.absl::optional_internal::optional_data.677" = type { %"class.absl::optional_internal::optional_data_base.678" }
%"class.absl::optional_internal::optional_data_base.678" = type { %"class.absl::optional_internal::optional_data_dtor_base.679" }
%"class.absl::optional_internal::optional_data_dtor_base.679" = type { i8, %union.anon.680 }
%union.anon.680 = type { i64 }
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::Event"* }
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.mojo::StructPtr.687" = type { %"class.std::__1::unique_ptr.688" }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::mojom::blink::FetchAPIRequest"* }
%"class.blink::mojom::blink::FetchAPIRequest" = type { i32, i8, i32, i32, %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap.691", %class.scoped_refptr.396, %"class.blink::ResourceRequestBody", %"class.mojo::StructPtr.717", i32, i32, i32, %"class.WTF::String", i32, %"class.absl::optional.724", i8, i8, i8, %"class.WTF::String" }
%"class.WTF::HashMap.691" = type { %"class.WTF::HashTable.692" }
%"class.WTF::HashTable.692" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.695" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.696, %"class.mojo::PendingRemote.716" }
%class.scoped_refptr.696 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.697", [4 x i8], %"class.WTF::Vector.699", i64, %"class.WTF::Vector.702", i8, [7 x i8] }>
%"class.WTF::RefCounted.697" = type { %"class.base::RefCounted.698" }
%"class.base::RefCounted.698" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.702", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.396, i64, i64, %"class.absl::optional.707", %class.scoped_refptr.713 }
%"class.absl::optional.707" = type { %"class.absl::optional_internal::optional_data.708" }
%"class.absl::optional_internal::optional_data.708" = type { %"class.absl::optional_internal::optional_data_base.709" }
%"class.absl::optional_internal::optional_data_base.709" = type { %"class.absl::optional_internal::optional_data_dtor_base.710" }
%"class.absl::optional_internal::optional_data_dtor_base.710" = type { i8, %union.anon.711 }
%union.anon.711 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.712" }
%"class.base::time_internal::TimeBase.712" = type { i64 }
%class.scoped_refptr.713 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.716" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.717" = type { %"class.std::__1::unique_ptr.718" }
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.blink::mojom::blink::Referrer"* }
%"class.blink::mojom::blink::Referrer" = type <{ %"class.blink::KURL", i32, [4 x i8] }>
%"class.absl::optional.724" = type { %"class.absl::optional_internal::optional_data.725" }
%"class.absl::optional_internal::optional_data.725" = type { %"class.absl::optional_internal::optional_data_base.726" }
%"class.absl::optional_internal::optional_data_base.726" = type { %"class.absl::optional_internal::optional_data_dtor_base.727" }
%"class.absl::optional_internal::optional_data_dtor_base.727" = type { i8, %union.anon.728 }
%union.anon.728 = type { %"class.base::UnguessableToken" }
%"class.mojo::StructPtr.732" = type { %"class.std::__1::unique_ptr.733" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::mojom::blink::FetchAPIResponse"* }
%"class.blink::mojom::blink::FetchAPIResponse" = type { %"class.WTF::Vector.736", i16, %"class.WTF::String", i32, i64, i32, [4 x i8], %"class.WTF::HashMap.741", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.396, i32, %"class.base::Time", %"class.WTF::String", %"class.WTF::Vector.154", %class.scoped_refptr.396, %class.scoped_refptr.396, %"class.mojo::StructPtr.745", i32, %"class.WTF::String", i8, i8, %"class.absl::optional.793" }
%"class.WTF::Vector.736" = type { %"class.WTF::VectorBuffer.737" }
%"class.WTF::VectorBuffer.737" = type { %"class.WTF::VectorBufferBase.738" }
%"class.WTF::VectorBufferBase.738" = type { %"class.blink::KURL"*, i32, i32 }
%"class.WTF::HashMap.741" = type { %"class.WTF::HashTable.742" }
%"class.WTF::HashTable.742" = type <{ %"struct.WTF::KeyValuePair.695"*, i32, i32, i32, [4 x i8] }>
%"class.mojo::StructPtr.745" = type { %"class.std::__1::unique_ptr.746" }
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.network::mojom::blink::ParsedHeaders"* }
%"class.network::mojom::blink::ParsedHeaders" = type <{ %"class.WTF::Vector.604", %"class.mojo::StructPtr.749", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.761", %"class.base::TimeDelta", %"class.absl::optional.761", i32, [4 x i8], %"class.WTF::Vector.771", %"class.mojo::StructPtr.783", i8, [7 x i8] }>
%"class.mojo::StructPtr.749" = type { %"class.std::__1::unique_ptr.750" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.network::mojom::blink::AllowCSPFromHeaderValue"* }
%"class.network::mojom::blink::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_" = type { %class.scoped_refptr.143* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.756", i32, %"class.absl::optional.756" }
%"class.absl::optional.756" = type { %"class.absl::optional_internal::optional_data.757" }
%"class.absl::optional_internal::optional_data.757" = type { %"class.absl::optional_internal::optional_data_base.758" }
%"class.absl::optional_internal::optional_data_base.758" = type { %"class.absl::optional_internal::optional_data_dtor_base.759" }
%"class.absl::optional_internal::optional_data_dtor_base.759" = type { i8, %union.anon.760 }
%union.anon.760 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.756", i32, %"class.absl::optional.756" }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.WTF::Vector.766" }
%"class.WTF::Vector.766" = type { %"class.WTF::VectorBuffer.767" }
%"class.WTF::VectorBuffer.767" = type { %"class.WTF::VectorBufferBase.768" }
%"class.WTF::VectorBufferBase.768" = type { i32*, i32, i32 }
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.mojo::StructPtr.774"*, i32, i32 }
%"class.mojo::StructPtr.774" = type { %"class.std::__1::unique_ptr.775" }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.network::mojom::blink::LinkHeader"* }
%"class.network::mojom::blink::LinkHeader" = type { %"class.blink::KURL", i32, i32, i32, %"class.WTF::String" }
%"class.mojo::StructPtr.783" = type { %"class.std::__1::unique_ptr.784" }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.network::mojom::blink::TimingAllowOrigin"* }
%"class.network::mojom::blink::TimingAllowOrigin" = type { i32, %"union.network::mojom::blink::TimingAllowOrigin::Union_" }
%"union.network::mojom::blink::TimingAllowOrigin::Union_" = type { %"class.WTF::Vector.154"* }
%"class.absl::optional.793" = type { %"class.absl::optional_internal::optional_data.794" }
%"class.absl::optional_internal::optional_data.794" = type { %"class.absl::optional_internal::optional_data_base.795" }
%"class.absl::optional_internal::optional_data_base.795" = type { %"class.absl::optional_internal::optional_data_dtor_base.796" }
%"class.absl::optional_internal::optional_data_dtor_base.796" = type { i8, %union.anon.797 }
%union.anon.797 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.163", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.801", %class.scoped_refptr.804 }
%"class.blink::TraceWrapperV8Reference.801" = type { %"class.v8::TracedReference.802" }
%"class.v8::TracedReference.802" = type { %"class.v8::BasicTracedReference.803" }
%"class.v8::BasicTracedReference.803" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.804 = type { %"class.blink::DOMWrapperWorld"* }
%"class.base::OnceCallback.812" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Persistent.813" = type { %"class.blink::PersistentBase.814" }
%"class.blink::PersistentBase.814" = type { %"class.blink::BackgroundFetchRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.810" = type { %"class.blink::PersistentBase.811" }
%"class.blink::PersistentBase.811" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.807", i32, %"class.blink::Member.163", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.801", %"class.blink::SelfKeepAlive.809" }
%"class.blink::ThreadState::PrefinalizerRegistration.807" = type { i8 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.808 }
%class.scoped_refptr.808 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.163", %"class.blink::ScriptValue" }
%"class.blink::SelfKeepAlive.809" = type { %"class.blink::Persistent.810" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2081" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.813" }
%"class.std::__1::__tuple_leaf.2081" = type { %"class.blink::Persistent.810" }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::V8UnionRequestOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.122", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::CacheQueryOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.801" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.mojo::InlinedStructPtr.819" = type { %"class.blink::mojom::blink::CacheQueryOptions", i32 }
%"class.blink::mojom::blink::CacheQueryOptions" = type { i8, i8, i8 }
%"class.base::OnceCallback.1809" = type { %"class.base::internal::CallbackBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.843", %"class.blink::ThreadState::PrefinalizerRegistration.851", %"class.blink::Member.852", %"class.blink::Member.854", %"class.blink::Member.856", i8, %"class.blink::Member.858", %"class.blink::Member.860", %"class.blink::Member.862", %"class.blink::Member.862", %"class.blink::Member.862", %"class.blink::Member.862", %"class.blink::Member.862", %"class.blink::Member.862", %"class.blink::Member.864", %"class.blink::Member.866", %"class.blink::Member.868", %"class.blink::Member.870", %"class.blink::Member.872", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.154", %"class.blink::Member.874", %class.scoped_refptr.876, %"class.blink::HeapHashSet.940", %"class.blink::Member.947", %"class.blink::HeapHashMap.949", %"class.std::__1::unique_ptr.956", %"class.blink::Member.968", %"class.blink::Member.995", %"class.blink::Member.1005", %"class.blink::Member.1012", %"class.WTF::Vector.1015", %"class.util::TokenType.831", %"class.WTF::HashSet.1020", %"class.WTF::Deque.1024" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.820", %"class.blink::Member.822", %"class.blink::Member.824", %"class.blink::Member.826", i8, %"class.WTF::Vector.828" }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1130", %"class.blink::Member.1132", %"class.blink::Member.1134", i8, i32, i8, i32, %"class.blink::Member.1136", %"class.blink::Member.822", %"class.blink::FrameLifecycle", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.820", %"class.blink::Member.972", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1146", i8, %"class.base::UnguessableToken", %"class.absl::optional.756", %"class.absl::optional.724", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.820", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1130" = type { %"class.blink::MemberBase.1131" }
%"class.blink::MemberBase.1131" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1136" = type { %"class.blink::MemberBase.1137" }
%"class.blink::MemberBase.1137" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1155", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1163", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1171", %"class.blink::FrameLoader", %"class.blink::Member.1192", %"class.blink::Member.1046", %"class.blink::Member.1194", %"class.blink::Member.1196", %"class.blink::Member.1198", %"class.blink::Member.1200", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1202", %class.scoped_refptr.1204, %"class.blink::Member.1205", %"class.blink::Member.1207", %"class.blink::Member.1209", %"class.blink::Member.1211", %"class.blink::Member.1213", %"class.blink::Member.1215", %"class.blink::Member.1217", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1219", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1222", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1228", %"class.std::__1::unique_ptr.1229", %"class.absl::optional.724", i32, [4 x i8], %"class.std::__1::unique_ptr.1235", %"class.blink::HeapMojoAssociatedRemote.1241", %"class.blink::HeapMojoAssociatedRemote.1244", %"class.blink::HeapMojoAssociatedReceiver.1247", %"class.blink::HeapMojoAssociatedReceiver.1250", %"class.blink::HeapMojoReceiver.1253", %"class.blink::HeapMojoAssociatedReceiver.1256", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1263", %"class.blink::Member.1265", %"class.mojo::StructPtr.1268", %"class.blink::Member.1277", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1279", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1155" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1156" }
%"class.blink::HeapHashMap.1156" = type { %"class.WTF::HashMap.1159" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.959", %"class.base::WeakPtrFactory.964" }
%"class.WTF::HashMap.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"struct.WTF::KeyValuePair.963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.963" = type opaque
%"class.base::WeakPtrFactory.964" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1169" }
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1859", i64, %"class.std::__1::map.1860", i8*, i64, %"class.base::WeakPtrFactory.1869" }
%"class.base::RepeatingCallback.1859" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1860" = type { %"class.std::__1::__tree.1861" }
%"class.std::__1::__tree.1861" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1862", %"class.std::__1::__compressed_pair.1866" }
%"class.std::__1::__compressed_pair.1862" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.1866" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::WeakPtrFactory.1869" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1171" = type { %"class.WTF::HashSet.1174" }
%"class.WTF::HashSet.1174" = type { %"class.WTF::HashTable.1175" }
%"class.WTF::HashTable.1175" = type <{ %"class.blink::WeakMember.1177"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1177" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.972", %"class.blink::Member.1178", %"class.blink::Member.1180", %"class.std::__1::unique_ptr.1182", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1188" }
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1182" = type { %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1188" = type { %"class.WTF::HashTable.1189" }
%"class.WTF::HashTable.1189" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1192" = type { %"class.blink::MemberBase.1193" }
%"class.blink::MemberBase.1193" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1286", %"class.blink::Member.972", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.1293", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1298", %"class.blink::Member.1300", %"class.blink::Member.1300", %"class.std::__1::unique_ptr.1303", i32, [4 x i8], %"class.WTF::HashSet.1306", %"class.blink::Member.1313", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1315", %"class.blink::HeapHashSet.1322", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1330", i8, %"class.blink::Member.1336", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1348", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1362", i8, %"class.std::__1::unique_ptr.1368", %"class.std::__1::unique_ptr.1485", %"class.WTF::Vector.1491", i32, %class.scoped_refptr.1496, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1497", %"class.blink::Member.1499", %"class.blink::Member.1501", %"class.blink::HeapHashSet.1503", %"class.blink::HeapHashSet.1510", %"class.std::__1::unique_ptr.1517", %"class.std::__1::unique_ptr.1523", %"class.WTF::Vector.381" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ %class.scoped_refptr.1290*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1290 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1292", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.674, %"class.base::WeakPtrFactory.1291" }
%class.scoped_refptr.674 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory.1291" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1292" = type { %"class.blink::MemberBase.1193" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1293" = type { %"class.absl::optional_internal::optional_data.1294" }
%"class.absl::optional_internal::optional_data.1294" = type { %"class.absl::optional_internal::optional_data_base.1295" }
%"class.absl::optional_internal::optional_data_base.1295" = type { %"class.absl::optional_internal::optional_data_dtor_base.1296" }
%"class.absl::optional_internal::optional_data_dtor_base.1296" = type { i8, %union.anon.1297 }
%union.anon.1297 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::HeapHashSet.1302"* }
%"class.blink::HeapHashSet.1302" = type opaque
%"class.std::__1::unique_ptr.1303" = type { %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.WTF::HashSet.1306"* }
%"class.WTF::HashSet.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1315" = type { %"class.WTF::HashSet.1318" }
%"class.WTF::HashSet.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"class.blink::Member.1321"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1321" = type opaque
%"class.blink::HeapHashSet.1322" = type { %"class.WTF::HashSet.1325" }
%"class.WTF::HashSet.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"class.blink::Member.1328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1552", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1563", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.1046" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1554", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.WTF::Vector.381", i16, %class.scoped_refptr.674 }
%"class.blink::ThreadState::PrefinalizerRegistration.1554" = type { i8 }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1563" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1564", { i64, i64 } }
%"class.blink::WeakMember.1564" = type { %"class.blink::MemberBase.1329" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1340", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1340" = type { %"class.WTF::HashTable.1341" }
%"class.WTF::HashTable.1341" = type <{ %"struct.WTF::KeyValuePair.1343"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1343" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1344", i32, i32 }
%"class.WTF::Vector.1344" = type { %"class.WTF::VectorBuffer.1345" }
%"class.WTF::VectorBuffer.1345" = type { %"class.WTF::VectorBufferBase.1346" }
%"class.WTF::VectorBufferBase.1346" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1348" = type { %"class.WTF::LinkedHashSet.1351" }
%"class.WTF::LinkedHashSet.1351" = type { %"class.WTF::HashMap.1352", %"class.WTF::VectorBackedLinkedList.1356" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.WTF::VectorBackedLinkedList.1356" = type { %"class.WTF::Vector.1357", i32, i32 }
%"class.WTF::Vector.1357" = type { %"class.WTF::VectorBuffer.1358" }
%"class.WTF::VectorBuffer.1358" = type { %"class.WTF::VectorBufferBase.1359" }
%"class.WTF::VectorBufferBase.1359" = type { %"class.WTF::VectorBackedLinkedListNode.1360"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1360" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1371, %class.scoped_refptr.1371, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1462", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1467", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1371 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1372", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1379" }
%"class.WTF::RefCounted.1372" = type { %"class.base::RefCounted.1373" }
%"class.base::RefCounted.1373" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1374", i32, [4 x i8] }>
%"class.WTF::Vector.1374" = type { %"class.WTF::VectorBuffer.1375" }
%"class.WTF::VectorBuffer.1375" = type { %"class.WTF::VectorBufferBase.1376" }
%"class.WTF::VectorBufferBase.1376" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1385", %"class.std::__1::unique_ptr.1434", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1382, %class.scoped_refptr.1383, %class.scoped_refptr.1384 }
%class.scoped_refptr.1382 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1398", i8, i8, %class.scoped_refptr.1382, i32, i32 }
%"class.WTF::RefCounted.1398" = type { %"class.base::RefCounted.1399" }
%"class.base::RefCounted.1399" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1383 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1547" }
%"class.blink::PaintPropertyNode.1547" = type { %"class.WTF::RefCounted.1548", i8, i8, %class.scoped_refptr.1383, i32, i32 }
%"class.WTF::RefCounted.1548" = type { %"class.base::RefCounted.1549" }
%"class.base::RefCounted.1549" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1384 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1544" }
%"class.blink::PaintPropertyNode.1544" = type { %"class.WTF::RefCounted.1545", i8, i8, %class.scoped_refptr.1384, i32, i32 }
%"class.WTF::RefCounted.1545" = type { %"class.base::RefCounted.1546" }
%"class.base::RefCounted.1546" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1388", %"class.WTF::Vector.1393", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1388" = type { %"class.WTF::VectorBuffer.1389" }
%"class.WTF::VectorBuffer.1389" = type { %"class.WTF::VectorBufferBase.1390" }
%"class.WTF::VectorBufferBase.1390" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1393" = type { %"class.WTF::VectorBuffer.1394" }
%"class.WTF::VectorBuffer.1394" = type { %"class.WTF::VectorBufferBase.1395" }
%"class.WTF::VectorBufferBase.1395" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1413" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1406, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1407", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1400" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1406 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1529", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1529" = type { %"class.WTF::RefCounted.1530", i8, i8, %class.scoped_refptr.1406, i32, i32 }
%"class.WTF::RefCounted.1530" = type { %"class.base::RefCounted.1531" }
%"class.base::RefCounted.1531" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1532" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1532" = type { %"class.absl::optional_internal::optional_data.1533" }
%"class.absl::optional_internal::optional_data.1533" = type { %"class.absl::optional_internal::optional_data_base.1534" }
%"class.absl::optional_internal::optional_data_base.1534" = type { %"class.absl::optional_internal::optional_data_dtor_base.1535" }
%"class.absl::optional_internal::optional_data_dtor_base.1535" = type { i8, %union.anon.1536 }
%union.anon.1536 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1537", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1537" = type { %"class.std::__1::__vector_base.1538" }
%"class.std::__1::__vector_base.1538" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1539" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1416", %"class.std::__1::unique_ptr.1422", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1416" = type { %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1434" = type { %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1437", %"class.absl::optional.1437" }
%"class.absl::optional.1437" = type { %"class.absl::optional_internal::optional_data.1438" }
%"class.absl::optional_internal::optional_data.1438" = type { %"class.absl::optional_internal::optional_data_base.1439" }
%"class.absl::optional_internal::optional_data_base.1439" = type { %"class.absl::optional_internal::optional_data_dtor_base.1440" }
%"class.absl::optional_internal::optional_data_dtor_base.1440" = type { i8, [3 x i8], %union.anon.1441 }
%union.anon.1441 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1379"*, %"class.absl::optional.1447", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1447" = type { %"class.absl::optional_internal::optional_data.1448" }
%"class.absl::optional_internal::optional_data.1448" = type { %"class.absl::optional_internal::optional_data_base.1449" }
%"class.absl::optional_internal::optional_data_base.1449" = type { %"class.absl::optional_internal::optional_data_dtor_base.1450" }
%"class.absl::optional_internal::optional_data_dtor_base.1450" = type { i8, %union.anon.1451 }
%union.anon.1451 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1452", %"class.WTF::Vector.1457" }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454", [128 x i8] }
%"class.WTF::VectorBufferBase.1454" = type { i32*, i32, i32 }
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459", [128 x i8] }
%"class.WTF::VectorBufferBase.1459" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1462" = type { %"class.WTF::VectorBuffer.1463" }
%"class.WTF::VectorBuffer.1463" = type { %"class.WTF::VectorBufferBase.1464" }
%"class.WTF::VectorBufferBase.1464" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1467" = type { %"class.WTF::HashTable.1468" }
%"class.WTF::HashTable.1468" = type <{ %"struct.WTF::KeyValuePair.1471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1471" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1472", %"class.WTF::Vector.1477" }
%"class.WTF::HashMap.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"struct.WTF::KeyValuePair.1476"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1476" = type opaque
%"class.WTF::Vector.1477" = type { %"class.WTF::VectorBuffer.1478" }
%"class.WTF::VectorBuffer.1478" = type { %"class.WTF::VectorBufferBase.1479" }
%"class.WTF::VectorBufferBase.1479" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1491" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.1493" }
%"class.WTF::VectorBufferBase.1493" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1496 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1503" = type { %"class.WTF::HashSet.1506" }
%"class.WTF::HashSet.1506" = type { %"class.WTF::HashTable.1507" }
%"class.WTF::HashTable.1507" = type <{ %"class.blink::WeakMember.1509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1509" = type opaque
%"class.blink::HeapHashSet.1510" = type { %"class.WTF::HashSet.1513" }
%"class.WTF::HashSet.1513" = type { %"class.WTF::HashTable.1514" }
%"class.WTF::HashTable.1514" = type <{ %"class.blink::WeakMember.1516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1516" = type opaque
%"class.std::__1::unique_ptr.1517" = type { %"class.std::__1::__compressed_pair.1518" }
%"class.std::__1::__compressed_pair.1518" = type { %"struct.std::__1::__compressed_pair_elem.1519" }
%"struct.std::__1::__compressed_pair_elem.1519" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1523" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.707", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.1051" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.976", %"class.blink::Member.976" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.976", %"class.blink::Member.978", %"class.blink::Member.976", %"class.blink::Member.976", %"class.blink::Member.980" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1029", %"class.blink::Member.854", %"class.blink::Member.978", %"class.blink::Member.1031", %"class.blink::Member.1031", %"class.blink::Member.1074", %"class.blink::Member.1076", %"class.blink::Member.1078", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1083", %"class.blink::HeapVector.1085" }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1035" }
%"class.blink::HeapHashMap.1035" = type { %"class.WTF::HashMap.1038" }
%"class.WTF::HashMap.1038" = type { %"class.WTF::HashTable.1039" }
%"class.WTF::HashTable.1039" = type <{ %"struct.WTF::KeyValuePair.1041"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1041" = type { %"class.WTF::AtomicString", %"class.blink::Member.1042" }
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.1046", i32, %"class.blink::HeapVector.1067" }
%"class.blink::HeapVector.1067" = type { %"class.WTF::Vector.1070" }
%"class.WTF::Vector.1070" = type { %"class.WTF::VectorBuffer.1071" }
%"class.WTF::VectorBuffer.1071" = type { %"class.WTF::VectorBufferBase.1072" }
%"class.WTF::VectorBufferBase.1072" = type { %"class.blink::Member.1046"*, i32, i32 }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1076" = type { %"class.blink::MemberBase.1077" }
%"class.blink::MemberBase.1077" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1078" = type { %"class.blink::MemberBase.1079" }
%"class.blink::MemberBase.1079" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.1080" }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::HeapHashMap.1082"* }
%"class.blink::HeapHashMap.1082" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1085" = type { %"class.WTF::Vector.1088" }
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { %"class.blink::Member.1091"*, i32, i32 }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1093", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1095, %"class.WTF::Vector.1096", %"class.WTF::Vector.1096", %"class.blink::Member.976", %"class.blink::Member.1101", %"class.blink::HeapHashSet.1105", %"class.blink::Member.854", %"class.WTF::HashSet.1112", %"class.WTF::TextPosition", %"class.blink::Member.1116", %"class.blink::HeapVector.1118", %"class.blink::Member.1125" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1095 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1103" }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1105" = type { %"class.WTF::HashSet.1108" }
%"class.WTF::HashSet.1108" = type { %"class.WTF::HashTable.1109" }
%"class.WTF::HashTable.1109" = type <{ %"class.blink::WeakMember.1111"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1111" = type { %"class.blink::MemberBase.979" }
%"class.WTF::HashSet.1112" = type { %"class.WTF::HashTable.1113" }
%"class.WTF::HashTable.1113" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1118" = type { %"class.WTF::Vector.1121" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"class.blink::Member.1101"*, i32, i32 }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.1048 }
%class.scoped_refptr.1048 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.1049", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.1055", %"class.blink::Member.1057", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.1055" = type { %"class.WTF::SingleThreadedBitField.1056" }
%"class.WTF::SingleThreadedBitField.1056" = type { i32 }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.1059 }
%class.scoped_refptr.1059 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.1060", %"class.WTF::AtomicString", %"class.WTF::Vector.1062" }
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064", [32 x i8] }
%"class.WTF::VectorBufferBase.1064" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1204 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1206" }
%"class.blink::MemberBase.1206" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1219" = type { %"class.blink::Member.1220" }
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1872" }
%"class.mojo::Remote.1872" = type { %"class.mojo::internal::InterfacePtrState.1873" }
%"class.mojo::internal::InterfacePtrState.1873" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1874" }
%"class.std::__1::unique_ptr.1874" = type { %"class.std::__1::__compressed_pair.1875" }
%"class.std::__1::__compressed_pair.1875" = type { %"struct.std::__1::__compressed_pair_elem.1876" }
%"struct.std::__1::__compressed_pair_elem.1876" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1228" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1229" = type { %"class.std::__1::__compressed_pair.1230" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote.1241" = type { %"class.blink::Member.1242" }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1882" }
%"class.mojo::AssociatedRemote.1882" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1883" }
%"class.mojo::internal::AssociatedInterfacePtrState.1883" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1884" }
%"class.std::__1::unique_ptr.1884" = type { %"class.std::__1::__compressed_pair.1885" }
%"class.std::__1::__compressed_pair.1885" = type { %"struct.std::__1::__compressed_pair_elem.1886" }
%"struct.std::__1::__compressed_pair_elem.1886" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1244" = type { %"class.blink::Member.1245" }
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1892" }
%"class.mojo::AssociatedRemote.1892" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1893" }
%"class.mojo::internal::AssociatedInterfacePtrState.1893" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1894" }
%"class.std::__1::unique_ptr.1894" = type { %"class.std::__1::__compressed_pair.1895" }
%"class.std::__1::__compressed_pair.1895" = type { %"struct.std::__1::__compressed_pair_elem.1896" }
%"struct.std::__1::__compressed_pair_elem.1896" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver.1247" = type { %"class.blink::Member.1248" }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1902", %"class.blink::Member.972", %"class.mojo::AssociatedReceiver.1903" }
%"class.blink::ThreadState::PrefinalizerRegistration.1902" = type { i8 }
%"class.mojo::AssociatedReceiver.1903" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1904" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1904" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1250" = type { %"class.blink::Member.1251" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1907", %"class.blink::Member.972", %"class.mojo::AssociatedReceiver.1908" }
%"class.blink::ThreadState::PrefinalizerRegistration.1907" = type { i8 }
%"class.mojo::AssociatedReceiver.1908" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1909" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1909" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver.1253" = type { %"class.blink::Member.1254" }
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1912", %"class.blink::Member.972", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1912" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1256" = type { %"class.blink::Member.1257" }
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1916", %"class.blink::Member.972", %"class.mojo::AssociatedReceiver.1917" }
%"class.blink::ThreadState::PrefinalizerRegistration.1916" = type { i8 }
%"class.mojo::AssociatedReceiver.1917" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1918" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1918" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::HeapHashMap.1267"* }
%"class.blink::HeapHashMap.1267" = type opaque
%"class.mojo::StructPtr.1268" = type { %"class.std::__1::unique_ptr.1269" }
%"class.std::__1::unique_ptr.1269" = type { %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1272", %"class.mojo::InlinedStructPtr.1273" }
%"class.mojo::InlinedStructPtr.1272" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1273" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1279" = type { %"class.absl::optional_internal::optional_data.1280" }
%"class.absl::optional_internal::optional_data.1280" = type { %"class.absl::optional_internal::optional_data_base.1281" }
%"class.absl::optional_internal::optional_data_base.1281" = type { %"class.absl::optional_internal::optional_data_dtor_base.1282" }
%"class.absl::optional_internal::optional_data_dtor_base.1282" = type { i8, %union.anon.1283 }
%union.anon.1283 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.820", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1138" }
%"class.std::__1::vector.1138" = type { %"class.std::__1::__vector_base.1139" }
%"class.std::__1::__vector_base.1139" = type { %"struct.std::__1::pair.1140"*, %"struct.std::__1::pair.1140"*, %"class.std::__1::__compressed_pair.1141" }
%"struct.std::__1::pair.1140" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"struct.std::__1::pair.1140"* }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1148" }
%"class.blink::HeapHashSet.1148" = type { %"class.WTF::HashSet.1151" }
%"class.WTF::HashSet.1151" = type { %"class.WTF::HashTable.1152" }
%"class.WTF::HashTable.1152" = type <{ %"class.blink::WeakMember.1154"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1154" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.831", %"class.mojo::Remote.833", i8, %"class.WTF::String" }
%"class.mojo::Remote.833" = type { %"class.mojo::internal::InterfacePtrState.834" }
%"class.mojo::internal::InterfacePtrState.834" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.523", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.577", i32, i8, [3 x i8], %"class.blink::HeapVector.579", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.598", %"class.blink::Member.654", %"class.blink::Member.656", i8 }>
%"class.blink::Supplementable.843" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.844" }
%"class.blink::HeapHashMap.844" = type { %"class.WTF::HashMap.847" }
%"class.WTF::HashMap.847" = type { %"class.WTF::HashTable.848" }
%"class.WTF::HashTable.848" = type <{ %"struct.WTF::KeyValuePair.850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.850" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.851" = type { i8 }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1565", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.381", %"class.WTF::Vector.381", i8, i32, %"class.blink::Member.999", %"class.blink::Member.393", %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::Member.1577", %"class.blink::Member.1579", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1581", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1587", %"class.blink::Member.1589", %"class.blink::Member.1091", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1591", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1596", %"class.blink::HeapVector.1067", %"class.blink::Member.1046", %"class.blink::Member.991", %"class.blink::Member.1046", %"class.blink::Member.1046", %"class.blink::Member.1046", %"class.blink::UserActionElementSet", %"class.blink::Member.1605", double, double, i64, i64, %"class.blink::HeapHashSet.1607", %"class.blink::HeapHashSet.1614", i16, i8, %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.blink::Member.1625", %"class.blink::Member.1627", %"class.blink::TextLinkColors", %"class.blink::Member.1629", i8, [7 x i8], %"class.blink::HeapHashMap.1631", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1046", %"class.WTF::Vector.1638", %"class.blink::Member.1643", %"class.blink::Member.1645", i8, %"class.blink::Member.1046", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1647", %"class.blink::HeapVector.1649", %"class.std::__1::unique_ptr.1657", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1663", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1676", %"class.WTF::Vector.1678", i8, i8, %"class.std::__1::unique_ptr.1683", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1067", %"class.blink::HeapVector.1689", i32, i8, %"class.blink::HeapTaskRunnerTimer.1596", %"class.blink::HeapTaskRunnerTimer.1596", %"class.blink::DocumentTiming", %"class.blink::Member.1697", i8, i32, %"class.blink::Member.1699", %"class.blink::Member.1701", %"class.blink::Member.1703", %"class.blink::HeapTaskRunnerTimer.1596", %"class.blink::Member.1705", %"class.WTF::HashMap.1707", %"class.blink::Member.1712", %"class.blink::Member.1714", %"class.blink::Member.1716", %"class.blink::Member.1718", %"class.blink::Member.854", %"class.blink::Member.854", %"class.blink::HeapTaskRunnerTimer.1596", %"class.blink::HeapHashSet.1720", i8, i32, %"class.blink::Member.1727", %"class.blink::Member.1729", i32, %"class.blink::Member.1731", %"class.blink::Member.1733", %"class.blink::Member.1735", %"class.std::__1::unique_ptr.1737", i64, %"class.std::__1::unique_ptr.1743", i32, i32, %"class.blink::Member.1749", %"class.blink::Member.1751", %"class.blink::Member.1753", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1755", %"class.WTF::Vector.1015", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1757", %"class.blink::Member.1764", %"class.std::__1::unique_ptr.1766", %"class.blink::Member.1772", i8, i8, %"class.WTF::String", %"class.blink::Member.1774", i8, [7 x i8], %"class.blink::HeapHashMap.1776", %"class.blink::HeapObserverSet.1783", %"class.blink::Member.1791", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1793", i32, i8, i8, %"class.blink::WeakMember.1795", %"class.blink::Member.1796" }
%"class.blink::Supplementable.1565" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1566" }
%"class.blink::HeapHashMap.1566" = type { %"class.WTF::HashMap.1569" }
%"class.WTF::HashMap.1569" = type { %"class.WTF::HashTable.1570" }
%"class.WTF::HashTable.1570" = type <{ %"struct.WTF::KeyValuePair.1572"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1572" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1581" = type { %"class.std::__1::__compressed_pair.1582" }
%"class.std::__1::__compressed_pair.1582" = type { %"struct.std::__1::__compressed_pair_elem.1583" }
%"struct.std::__1::__compressed_pair_elem.1583" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1591" = type { %"class.WTF::VectorBuffer.1592" }
%"class.WTF::VectorBuffer.1592" = type { %"class.WTF::VectorBufferBase.1593" }
%"class.WTF::VectorBufferBase.1593" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.804 }
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.854", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.976", %"class.blink::Member.976", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1598" }
%"class.blink::HeapHashMap.1598" = type { %"class.WTF::HashMap.1601" }
%"class.WTF::HashMap.1601" = type { %"class.WTF::HashTable.1602" }
%"class.WTF::HashTable.1602" = type <{ %"struct.WTF::KeyValuePair.1604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1604" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1607" = type { %"class.WTF::HashSet.1610" }
%"class.WTF::HashSet.1610" = type { %"class.WTF::HashTable.1611" }
%"class.WTF::HashTable.1611" = type <{ %"class.blink::WeakMember.1613"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1613" = type opaque
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::WeakMember.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1620" = type opaque
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.978", %"class.blink::HeapVector.1085" }
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1631" = type { %"class.WTF::HashMap.1634" }
%"class.WTF::HashMap.1634" = type { %"class.WTF::HashTable.1635" }
%"class.WTF::HashTable.1635" = type <{ %"struct.WTF::KeyValuePair.1637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1637" = type opaque
%"class.WTF::Vector.1638" = type { %"class.WTF::VectorBuffer.1639" }
%"class.WTF::VectorBuffer.1639" = type { %"class.WTF::VectorBufferBase.1640" }
%"class.WTF::VectorBufferBase.1640" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1649" = type { %"class.WTF::Vector.1652" }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654" }
%"class.WTF::VectorBufferBase.1654" = type { %"class.blink::Member.1655"*, i32, i32 }
%"class.blink::Member.1655" = type opaque
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1663" = type { %"class.WTF::HashSet.1666" }
%"class.WTF::HashSet.1666" = type { %"class.WTF::HashTable.1667" }
%"class.WTF::HashTable.1667" = type <{ %"class.blink::WeakMember.1669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1669" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1670", i32, [4 x i8] }>
%"class.WTF::Vector.1670" = type { %"class.WTF::VectorBuffer.1671" }
%"class.WTF::VectorBuffer.1671" = type { %"class.WTF::VectorBufferBase.1672" }
%"class.WTF::VectorBufferBase.1672" = type { %"struct.std::__1::pair.1673"*, i32, i32 }
%"struct.std::__1::pair.1673" = type opaque
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1678" = type { %"class.WTF::VectorBuffer.1679" }
%"class.WTF::VectorBuffer.1679" = type { %"class.WTF::VectorBufferBase.1680" }
%"class.WTF::VectorBufferBase.1680" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1689" = type { %"class.WTF::Vector.1692" }
%"class.WTF::Vector.1692" = type { %"class.WTF::VectorBuffer.1693" }
%"class.WTF::VectorBuffer.1693" = type { %"class.WTF::VectorBufferBase.1694" }
%"class.WTF::VectorBufferBase.1694" = type { %"class.blink::Member.1695"*, i32, i32 }
%"class.blink::Member.1695" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.854" }
%"class.blink::Member.1697" = type { %"class.blink::MemberBase.1698" }
%"class.blink::MemberBase.1698" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1707" = type { %"class.WTF::HashTable.1708" }
%"class.WTF::HashTable.1708" = type <{ %"struct.WTF::KeyValuePair.1711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1711" = type opaque
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1714" = type { %"class.blink::MemberBase.1715" }
%"class.blink::MemberBase.1715" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1718" = type { %"class.blink::MemberBase.1719" }
%"class.blink::MemberBase.1719" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1596" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1597", { i64, i64 } }
%"class.blink::WeakMember.1597" = type { %"class.blink::MemberBase.855" }
%"class.blink::HeapHashSet.1720" = type { %"class.WTF::HashSet.1723" }
%"class.WTF::HashSet.1723" = type { %"class.WTF::HashTable.1724" }
%"class.WTF::HashTable.1724" = type <{ %"class.blink::Member.1726"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1726" = type opaque
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1737" = type { %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.1739" }
%"struct.std::__1::__compressed_pair_elem.1739" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1751" = type { %"class.blink::MemberBase.1752" }
%"class.blink::MemberBase.1752" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1753" = type { %"class.blink::MemberBase.1754" }
%"class.blink::MemberBase.1754" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1755" = type { %"class.blink::MemberBase.1756" }
%"class.blink::MemberBase.1756" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1757" = type { %"class.WTF::HashMap.1760" }
%"class.WTF::HashMap.1760" = type { %"class.WTF::HashTable.1761" }
%"class.WTF::HashTable.1761" = type <{ %"struct.WTF::KeyValuePair.1763"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1763" = type opaque
%"class.blink::Member.1764" = type { %"class.blink::MemberBase.1765" }
%"class.blink::MemberBase.1765" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1774" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1776" = type { %"class.WTF::HashMap.1779" }
%"class.WTF::HashMap.1779" = type { %"class.WTF::HashTable.1780" }
%"class.WTF::HashTable.1780" = type <{ %"struct.WTF::KeyValuePair.1782"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1782" = type opaque
%"class.blink::HeapObserverSet.1783" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1784" }
%"class.blink::HeapHashSet.1784" = type { %"class.WTF::HashSet.1787" }
%"class.WTF::HashSet.1787" = type { %"class.WTF::HashTable.1788" }
%"class.WTF::HashTable.1788" = type <{ %"class.blink::WeakMember.1790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1790" = type opaque
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.854", %"class.blink::HeapHashSet.1800", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1807", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1800" = type { %"class.WTF::HashSet.1803" }
%"class.WTF::HashSet.1803" = type { %"class.WTF::HashTable.1804" }
%"class.WTF::HashTable.1804" = type <{ %"class.blink::Member.1806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1806" = type opaque
%"class.blink::HeapTaskRunnerTimer.1807" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1808", { i64, i64 } }
%"class.blink::WeakMember.1808" = type { %"class.blink::MemberBase.1794" }
%"class.blink::WeakMember.1795" = type { %"class.blink::MemberBase.977" }
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.876 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.877", [4 x i8], %"class.std::__1::unique_ptr.879", i64, %"class.WTF::Vector.883", %"class.WTF::Vector.888", %"class.WTF::Vector.894", %"class.WTF::Vector.912", %class.scoped_refptr.539, %"class.WTF::HashMap.918", %"class.WTF::Vector.923", %"class.WTF::Vector.883", %"class.WTF::Vector.929", %"class.WTF::HashMap.935", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.877" = type { %"class.base::RefCountedThreadSafe.878" }
%"class.base::RefCountedThreadSafe.878" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { i8* }
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890", [8 x i8] }
%"class.WTF::VectorBufferBase.890" = type { %class.scoped_refptr.891*, i32, i32 }
%class.scoped_refptr.891 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase.896" }
%"class.WTF::VectorBufferBase.896" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.897 }
%class.scoped_refptr.897 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.912" = type { %"class.WTF::VectorBuffer.913" }
%"class.WTF::VectorBuffer.913" = type { %"class.WTF::VectorBufferBase.914" }
%"class.WTF::VectorBufferBase.914" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.915", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.915" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.922"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.922" = type opaque
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.924" }
%"class.WTF::VectorBuffer.924" = type { %"class.WTF::VectorBufferBase.925" }
%"class.WTF::VectorBufferBase.925" = type { %"class.mojo::ScopedHandleBase.926"*, i32, i32 }
%"class.mojo::ScopedHandleBase.926" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.883" = type { %"class.WTF::VectorBuffer.884" }
%"class.WTF::VectorBuffer.884" = type { %"class.WTF::VectorBufferBase.885", [16 x i8] }
%"class.WTF::VectorBufferBase.885" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.931" }
%"class.WTF::VectorBufferBase.931" = type { %"class.mojo::PendingRemote.932"*, i32, i32 }
%"class.mojo::PendingRemote.932" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.935" = type { %"class.WTF::HashTable.936" }
%"class.WTF::HashTable.936" = type <{ %"struct.WTF::KeyValuePair.939"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.939" = type { i8**, %"class.std::__1::unique_ptr.1851" }
%"class.std::__1::unique_ptr.1851" = type { %"class.std::__1::__compressed_pair.1852" }
%"class.std::__1::__compressed_pair.1852" = type { %"struct.std::__1::__compressed_pair_elem.1853" }
%"struct.std::__1::__compressed_pair_elem.1853" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.940" = type { %"class.WTF::HashSet.943" }
%"class.WTF::HashSet.943" = type { %"class.WTF::HashTable.944" }
%"class.WTF::HashTable.944" = type <{ %"class.blink::WeakMember.946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.946" = type opaque
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::Event"* }
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type opaque
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.972", %"class.blink::CachedTextInputInfo", %"class.blink::Member.991", %"class.blink::Member.993", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.974", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.984", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.984" = type { %"class.WTF::HashMap.987" }
%"class.WTF::HashMap.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"struct.WTF::KeyValuePair.990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.990" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.976", i32, i32 }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.999", %"class.blink::Member.1001", %"class.blink::Member.1003" }
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.999", %"class.blink::HeapMojoRemote.1009" }
%"class.blink::HeapMojoRemote.1009" = type { %"class.blink::Member.1010" }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::HeapHashMap.1014"* }
%"class.blink::HeapHashMap.1014" = type opaque
%"class.WTF::Vector.1015" = type { %"class.WTF::VectorBuffer.1016" }
%"class.WTF::VectorBuffer.1016" = type { %"class.WTF::VectorBufferBase.1017" }
%"class.WTF::VectorBufferBase.1017" = type { i8*, i32, i32 }
%"class.util::TokenType.831" = type { %"class.base::StrongAlias.832" }
%"class.base::StrongAlias.832" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1020" = type { %"class.WTF::HashTable.1021" }
%"class.WTF::HashTable.1021" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1024" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { i64*, i32, i32 }
%"struct.std::__1::__tuple_impl.2087" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2081", %"class.std::__1::__tuple_leaf.2088", [7 x i8] }>
%"class.std::__1::__tuple_leaf.2088" = type { i8 }
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"class.mojo::StructPtr.1813"*, i32, i32 }
%"class.mojo::StructPtr.1813" = type { %"class.std::__1::unique_ptr.1814" }
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* }
%"class.blink::mojom::blink::BackgroundFetchSettledFetch" = type { %"class.mojo::StructPtr.687", %"class.mojo::StructPtr.732" }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::IdentifiabilityMetricBuilder" = type { %"class.std::__1::vector.1822", %"class.ukm::SourceIdObj" }
%"class.std::__1::vector.1822" = type { %"class.std::__1::__vector_base.1823" }
%"class.std::__1::__vector_base.1823" = type { %"struct.blink::IdentifiableSample"*, %"struct.blink::IdentifiableSample"*, %"class.std::__1::__compressed_pair.1824" }
%"struct.blink::IdentifiableSample" = type { %"class.blink::IdentifiableSurface", %"class.blink::IdentifiableToken" }
%"class.blink::IdentifiableSurface" = type { i64 }
%"class.blink::IdentifiableToken" = type { i64 }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.1825" }
%"struct.std::__1::__compressed_pair_elem.1825" = type { %"struct.blink::IdentifiableSample"* }
%"class.ukm::SourceIdObj" = type { i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.1830 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1829, i32, i32 }
%class.sk_sp.1829 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.39" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.53" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.1830 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1835", i8, [7 x i8] }>
%"class.blink::Member.1835" = type { %"class.blink::MemberBase.1836" }
%"class.blink::MemberBase.1836" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.1984", %"class.mojo::internal::Buffer", %"class.std::__1::vector.1985", %"class.std::__1::vector.1992", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.1984" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.1985" = type { %"class.std::__1::__vector_base.1986" }
%"class.std::__1::__vector_base.1986" = type { %"class.mojo::ScopedHandleBase.926"*, %"class.mojo::ScopedHandleBase.926"*, %"class.std::__1::__compressed_pair.1987" }
%"class.std::__1::__compressed_pair.1987" = type { %"struct.std::__1::__compressed_pair_elem.1988" }
%"struct.std::__1::__compressed_pair_elem.1988" = type { %"class.mojo::ScopedHandleBase.926"* }
%"class.std::__1::vector.1992" = type { %"class.std::__1::__vector_base.1993" }
%"class.std::__1::__vector_base.1993" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.1994" }
%"class.std::__1::__compressed_pair.1994" = type { %"struct.std::__1::__compressed_pair_elem.1995" }
%"struct.std::__1::__compressed_pair_elem.1995" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.v8::Array" = type { i8 }
%"class.absl::optional.2109" = type { %"class.absl::optional_internal::optional_data.2110" }
%"class.absl::optional_internal::optional_data.2110" = type { %"class.absl::optional_internal::optional_data_base.2111" }
%"class.absl::optional_internal::optional_data_base.2111" = type { %"class.absl::optional_internal::optional_data_dtor_base.2112" }
%"class.absl::optional_internal::optional_data_dtor_base.2112" = type { i8, %union.anon.2113 }
%union.anon.2113 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }

$_ZNK5blink5mojom5blink16FetchAPIResponse5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink27BackgroundFetchRegistration18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE26DispatchHasPendingActivityEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv = comdat any

$_ZNK5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_27BackgroundFetchRegistrationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev = comdat any

$_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_ = comdat any

$_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEED0Ev = comdat any

$_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE6AcceptEPNS3_7MessageE = comdat any

$_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink34BackgroundFetchRegistrationServiceEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8ReceiverIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal12BindingStateIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo9StructPtrIN5blink5mojom5blink16FetchAPIResponseEEC2IJN3WTF6VectorINS1_4KURLELj0ENS7_18PartitionAllocatorEEEtNS7_6StringEN7network5mojom17FetchResponseTypeElNSE_19FetchResponseSourceENS7_7HashMapISC_SC_NS7_10StringHashENS7_10HashTraitsISC_EESK_SA_EESC_SC_13scoped_refptrINS1_14BlobDataHandleEENS2_26ServiceWorkerResponseErrorEN4base4TimeESC_NS8_ISC_Lj0ESA_EESO_SO_NS0_INSE_5blink13ParsedHeadersEEEN3net16HttpResponseInfo14ConnectionInfoESC_bbN4absl8optionalINSW_17AuthChallengeInfoEEEEEENSQ_10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorIN5blink4KURLELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm = comdat any

$_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEELb0EE5CloneERKS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13ParsedHeaders5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEENS1_25CrossOriginEmbedderPolicyENS1_23CrossOriginOpenerPolicyEbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEEN4base9TimeDeltaESL_NS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEEbEEENSM_10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZNK7network5mojom5blink23AllowCSPFromHeaderValue5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN4mojo11CloneTraitsIN4absl8optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS3_18PartitionAllocatorEEEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm = comdat any

$_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink10LinkHeader5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZNK7network5mojom5blink17TimingAllowOrigin5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE7EraseAtEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverENS3_5mojom20BackgroundFetchErrorEEJNS3_10PersistentIS4_EENSB_IS5_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverENS2_5mojom20BackgroundFetchErrorEEJNS2_10PersistentIS3_EENSA_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS7_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EENSJ_IS5_EEbEEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ = comdat any

$_ZN4base8internal13FunctorTraitsIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEvE6InvokeISH_NS2_10PersistentIS3_EEJNSK_IS4_EEbSF_EEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EENSI_IS4_EEbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEEC2IJLm0ELm1ELm2EEJS6_S8_bEJEJEJS6_S8_RbEEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSD_IJDpT2_EEEDpOT3_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21BackgroundFetchRecordEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_21BackgroundFetchRecordEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIbEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA47_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink10TraceTraitINS_25ServiceWorkerRegistrationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE = comdat any

$_ZTVN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink27BackgroundFetchRegistrationE = hidden unnamed_addr constant { [32 x i8*], [7 x i8*], [7 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZN5blink27BackgroundFetchRegistrationD2Ev to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZN5blink27BackgroundFetchRegistrationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::BackgroundFetchRegistration"*)* @_ZNK5blink27BackgroundFetchRegistration18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::Visitor"*)* @_ZNK5blink27BackgroundFetchRegistration5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::BackgroundFetchRegistration"*)* @_ZNK5blink27BackgroundFetchRegistration18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::BackgroundFetchRegistration"*)* @_ZNK5blink27BackgroundFetchRegistration13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::BackgroundFetchRegistration"*)* @_ZNK5blink27BackgroundFetchRegistration19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, i64, i64, i64, i64, i32, i32)* @_ZN5blink27BackgroundFetchRegistration10OnProgressEmmmmNS_5mojom21BackgroundFetchResultENS1_28BackgroundFetchFailureReasonE to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZN5blink27BackgroundFetchRegistration20OnRecordsUnavailableEv to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, %"class.mojo::StructPtr.687"*, %"class.mojo::StructPtr.732"*)* @_ZN5blink27BackgroundFetchRegistration18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS2_INS4_16FetchAPIResponseEEE to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink27BackgroundFetchRegistration5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZThn72_N5blink27BackgroundFetchRegistrationD1Ev to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZThn72_N5blink27BackgroundFetchRegistrationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE26DispatchHasPendingActivityEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZThn80_N5blink27BackgroundFetchRegistrationD1Ev to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZThn80_N5blink27BackgroundFetchRegistrationD0Ev to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, i64, i64, i64, i64, i32, i32)* @_ZThn80_N5blink27BackgroundFetchRegistration10OnProgressEmmmmNS_5mojom21BackgroundFetchResultENS1_28BackgroundFetchFailureReasonE to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*)* @_ZThn80_N5blink27BackgroundFetchRegistration20OnRecordsUnavailableEv to i8*), i8* bitcast (void (%"class.blink::BackgroundFetchRegistration"*, %"class.mojo::StructPtr.687"*, %"class.mojo::StructPtr.732"*)* @_ZThn80_N5blink27BackgroundFetchRegistration18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS2_INS4_16FetchAPIResponseEEE to i8*)] }, align 8
@_ZN5blink16event_type_names9kProgressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18event_target_names28kBackgroundFetchRegistrationE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [45 x i8] c"BackgroundFetch.MatchCalledFromDocumentScope\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"BackgroundFetch.MatchCalledWhenFetchIsIncomplete\00", align 1
@.str.2 = private unnamed_addr constant [75 x i8] c"The records associated with this background fetch are no longer available.\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"Failed to abort registration due to I/O error.\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"aborted\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"bad-status\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"fetch-error\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"quota-exceeded\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"download-total-exceeded\00", align 1
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.13 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink27BackgroundFetchRegistration18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HeapMojoReceiverINS1_5mojom5blink35BackgroundFetchRegistrationObserverENS1_27BackgroundFetchRegistrationELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv = private unnamed_addr constant [224 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*)* @_ZNK5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ContextLifecycleObserver"*)* @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.18 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZTVN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*)* @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE6AcceptEPNS3_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserver5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationObserverRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::KURL]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv = private unnamed_addr constant [82 x i8] c"const char *WTF::GetStringWithTypeName() [T = network::mojom::WebClientHintsType]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv = private unnamed_addr constant [98 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::LinkHeader>]\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.28 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21BackgroundFetchRecordEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::BackgroundFetchRecord>, WTF::VectorTraits<blink::Member<blink::BackgroundFetchRecord> > >]\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.30 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink27BackgroundFetchRegistrationC1EPNS_25ServiceWorkerRegistrationEN4mojo9StructPtrINS_5mojom5blink27BackgroundFetchRegistrationEEE = hidden unnamed_addr alias void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ServiceWorkerRegistration"*, %"class.mojo::StructPtr.659"*), void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ServiceWorkerRegistration"*, %"class.mojo::StructPtr.659"*)* @_ZN5blink27BackgroundFetchRegistrationC2EPNS_25ServiceWorkerRegistrationEN4mojo9StructPtrINS_5mojom5blink27BackgroundFetchRegistrationEEE
@_ZN5blink27BackgroundFetchRegistrationD1Ev = hidden unnamed_addr alias void (%"class.blink::BackgroundFetchRegistration"*), void (%"class.blink::BackgroundFetchRegistration"*)* @_ZN5blink27BackgroundFetchRegistrationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistrationC2EPNS_25ServiceWorkerRegistrationEN4mojo9StructPtrINS_5mojom5blink27BackgroundFetchRegistrationEEE(%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ServiceWorkerRegistration"*, %"class.mojo::StructPtr.659"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingRemote.670", align 4
  %5 = alloca %"class.mojo::PendingRemote.670", align 4
  %6 = alloca %"class.mojo::PendingRemote.675", align 4
  %7 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %7) #8
  %8 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::EventTargetData"* %9 to i8*
  %11 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261) #8
  %12 = bitcast i8* %11 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %12) #8
  %13 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = bitcast i32 (...)*** %13 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %16, i64 0, i32 0, i32 0
  store %"class.blink::ServiceWorkerRegistration"* null, %"class.blink::ServiceWorkerRegistration"** %17, align 8
  %18 = getelementptr inbounds %"class.mojo::StructPtr.659", %"class.mojo::StructPtr.659"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #8
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #8
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %3, %26, %41
  %44 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 5
  %45 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %46 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %47, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %44, align 8
  %50 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 6
  %51 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %52 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %53, i64 0, i32 2
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %50, align 8
  %56 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 7
  %57 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %58 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %59, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %56, align 8
  %62 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 8
  %63 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %64 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %65, i64 0, i32 4
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %62, align 8
  %68 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 9
  store i8 1, i8* %68, align 8
  %69 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 10
  %70 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %71 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %72, i64 0, i32 5
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %69, align 4
  %75 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  %76 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %77 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationData"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationData", %"class.blink::mojom::blink::BackgroundFetchRegistrationData"* %78, i64 0, i32 6
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12
  %82 = bitcast %"class.blink::HeapVector.114"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #8
  %83 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13
  %84 = bitcast %"class.mojo::Remote"* %83 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %84) #8
  %85 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13, i32 0, i32 1
  %86 = bitcast %"class.std::__1::unique_ptr.503"* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 14
  %88 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %1, i64 0, i32 2
  %89 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %88 to %"class.blink::ExecutionContextLifecycleObserver"*
  %90 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %89) #8
  %91 = icmp eq %"class.blink::ExecutionContext"* %90, null
  %92 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %90, i64 0, i32 1, i32 0
  %93 = select i1 %91, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %92
  %94 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 80) #8
  %95 = bitcast i8* %94 to %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*
  %96 = bitcast i8* %94 to %"class.blink::ContextLifecycleObserver"*
  %97 = bitcast i8* %94 to i32 (...)***
  %98 = getelementptr inbounds i8, i8* %94, i64 8
  %99 = bitcast i8* %98 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %99, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %100 = getelementptr inbounds i8, i8* %94, i64 16
  %101 = bitcast i8* %100 to %"class.blink::ThreadState::PrefinalizerRegistration.1921"*
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration.1921"* %101, %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %95) #8
  %102 = getelementptr inbounds i8, i8* %94, i64 24
  %103 = bitcast i8* %102 to %"class.blink::BackgroundFetchRegistration"**
  store %"class.blink::BackgroundFetchRegistration"* %0, %"class.blink::BackgroundFetchRegistration"** %103, align 8
  %104 = icmp eq %"class.blink::BackgroundFetchRegistration"* %0, null
  %105 = getelementptr inbounds i8, i8* %94, i64 32
  %106 = bitcast i8* %105 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %106) #8
  %107 = getelementptr inbounds i8, i8* %94, i64 64
  %108 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %108, align 8
  %109 = ptrtoint %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %14 to i64
  %110 = select i1 %104, i64 0, i64 %109
  %111 = getelementptr inbounds i8, i8* %94, i64 72
  %112 = bitcast i8* %111 to i64*
  store i64 %110, i64* %112, align 8
  tail call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %96, %"class.blink::ContextLifecycleNotifier"* %93) #8
  %113 = getelementptr inbounds i8, i8* %94, i64 -4
  %114 = bitcast i8* %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = or i16 %115, 1
  store atomic i16 %116, i16* %114 release, align 2
  %117 = bitcast %"class.blink::HeapMojoReceiver"* %87 to i8**
  store i8* %94, i8** %117, align 8
  %118 = ptrtoint %"class.blink::ServiceWorkerRegistration"* %1 to i64
  %119 = bitcast %"class.blink::Member.8"* %16 to i64*
  store atomic i64 %118, i64* %119 monotonic, align 8
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %43
  %123 = bitcast %"class.blink::ServiceWorkerRegistration"* %1 to i8*
  %124 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %123) #8
  br label %125

125:                                              ; preds = %43, %122
  %126 = load %"class.blink::mojom::blink::BackgroundFetchRegistration"*, %"class.blink::mojom::blink::BackgroundFetchRegistration"** %18, align 8
  %127 = getelementptr inbounds %"class.mojo::PendingRemote.670", %"class.mojo::PendingRemote.670"* %5, i64 0, i32 0
  %128 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistration", %"class.blink::mojom::blink::BackgroundFetchRegistration"* %126, i64 0, i32 1, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %127, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %128) #8
  %129 = bitcast %"class.mojo::PendingRemote.670"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129)
  %130 = getelementptr inbounds %"class.mojo::PendingRemote.670", %"class.mojo::PendingRemote.670"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %130, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %127) #8
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink34BackgroundFetchRegistrationServiceEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %83, %"class.mojo::PendingRemote.670"* nonnull %4, %"class.base::SequencedTaskRunner"* null) #8
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %130) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %127) #8
  %131 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3, i32 0, i32 0
  %132 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %132, i64 0, i32 2
  %134 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %133 to %"class.blink::ExecutionContextLifecycleObserver"*
  %135 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %134) #8
  %136 = icmp eq %"class.blink::ExecutionContext"* %135, null
  br i1 %136, label %193, label %137

137:                                              ; preds = %125
  %138 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %135, i64 0, i32 13
  %139 = load i8, i8* %138, align 4, !range !3
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %193

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %135, i64 0, i32 1
  %143 = bitcast %"class.blink::MojoBindingContext"* %142 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %144 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %143, align 8
  %145 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %144, i64 6
  %146 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %145, align 8
  %147 = call %"class.base::SingleThreadTaskRunner"* %146(%"class.blink::MojoBindingContext"* %142, i8 zeroext 58) #8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %85, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %148, align 8
  %150 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %149, null
  br i1 %150, label %151, label %170

151:                                              ; preds = %141
  %152 = call i8* @_Znwm(i64 8) #15
  %153 = bitcast i8* %152 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = bitcast i8* %152 to %"class.mojo::MessageReceiver"*
  %155 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %84, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %154, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E, i64 0, i64 0)) #8
  br i1 %155, label %156, label %170

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %158 = bitcast %"class.mojo::InterfaceEndpointClient"** %157 to %"class.mojo::MessageReceiverWithResponder"**
  %159 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %158, align 8
  %160 = call i8* @_Znwm(i64 16) #15
  %161 = bitcast i8* %160 to %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %161, %"class.mojo::MessageReceiverWithResponder"* %159) #8
  %162 = ptrtoint i8* %160 to i64
  %163 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %148, align 8
  store i64 %162, i64* %86, align 8
  %164 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %156
  %166 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %163 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %167 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %167, i64 1
  %169 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %168, align 8
  call void %169(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %163) #8
  br label %170

170:                                              ; preds = %141, %151, %156, %165
  %171 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %148, align 8
  %172 = bitcast %"class.base::SingleThreadTaskRunner"* %147 to %"class.base::SequencedTaskRunner"*
  %173 = icmp eq %"class.base::SingleThreadTaskRunner"* %147, null
  br i1 %173, label %188, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %147, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 1 monotonic
  %177 = getelementptr inbounds %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoReceiver"* %87, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %177, align 8, !noalias !4
  %179 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %178, i64 0, i32 3
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote.675"* nonnull sret %6, %"class.mojo::Receiver.1924"* %179, %"class.base::SequencedTaskRunner"* nonnull %172) #8
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy23AddRegistrationObserverEN4mojo13PendingRemoteINS1_35BackgroundFetchRegistrationObserverEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %171, %"class.mojo::PendingRemote.675"* nonnull %6) #8
  %180 = getelementptr inbounds %"class.mojo::PendingRemote.675", %"class.mojo::PendingRemote.675"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %180) #8
  %181 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %147, i64 0, i32 0, i32 0, i32 1
  %182 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw sub i32* %182, i32 1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %193

185:                                              ; preds = %174
  %186 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %181, i64 -2
  %187 = bitcast %"class.base::RefCountedThreadSafe.50"* %186 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %187) #8
  br label %193

188:                                              ; preds = %170
  %189 = getelementptr inbounds %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoReceiver"* %87, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %189, align 8, !noalias !4
  %191 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %190, i64 0, i32 3
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote.675"* nonnull sret %6, %"class.mojo::Receiver.1924"* %191, %"class.base::SequencedTaskRunner"* %172) #8
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy23AddRegistrationObserverEN4mojo13PendingRemoteINS1_35BackgroundFetchRegistrationObserverEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %171, %"class.mojo::PendingRemote.675"* nonnull %6) #8
  %192 = getelementptr inbounds %"class.mojo::PendingRemote.675", %"class.mojo::PendingRemote.675"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %192) #8
  br label %193

193:                                              ; preds = %188, %137, %185, %174, %125
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink27BackgroundFetchRegistration19GetExecutionContextEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %3, i64 0, i32 2
  %5 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %4 to %"class.blink::ExecutionContextLifecycleObserver"*
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %5) #8
  ret %"class.blink::ExecutionContext"* %6
}

declare void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy23AddRegistrationObserverEN4mojo13PendingRemoteINS1_35BackgroundFetchRegistrationObserverEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.mojo::PendingRemote.675"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [7 x i8*] }, { [32 x i8*], [7 x i8*], [7 x i8*] }* @_ZTVN5blink27BackgroundFetchRegistrationE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13
  %6 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %6, align 8
  store %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* null, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %6, align 8
  %8 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %7 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %11 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %11, i64 1
  %13 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %12, align 8
  tail call void %13(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %7) #8
  br label %14

14:                                               ; preds = %1, %9
  %15 = bitcast %"class.mojo::Remote"* %5 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %15) #8
  %16 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %14, %28, %31
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %33 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 1
  %34 = bitcast %"class.blink::EventTargetData"* %33 to i8*
  %35 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261) #8
  %36 = bitcast i8* %35 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %36) #8
  %37 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %37) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 12
  %3 = bitcast %"class.blink::HeapVector.114"* %2 to %"class.blink::BackgroundFetchRegistration"*
  tail call void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink27BackgroundFetchRegistrationD1Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 11
  %3 = bitcast i32* %2 to %"class.blink::BackgroundFetchRegistration"*
  tail call void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistrationD0Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink27BackgroundFetchRegistrationD0Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 12
  %3 = bitcast %"class.blink::HeapVector.114"* %2 to %"class.blink::BackgroundFetchRegistration"*
  tail call void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink27BackgroundFetchRegistrationD0Ev(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 11
  %3 = bitcast i32* %2 to %"class.blink::BackgroundFetchRegistration"*
  tail call void @_ZN5blink27BackgroundFetchRegistrationD2Ev(%"class.blink::BackgroundFetchRegistration"* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration10OnProgressEmmmmNS_5mojom21BackgroundFetchResultENS1_28BackgroundFetchFailureReasonE(%"class.blink::BackgroundFetchRegistration"*, i64, i64, i64, i64, i32, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 5
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 6
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 7
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 8
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 10
  store i32 %5, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  store i32 %6, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %15, i64 0, i32 2
  %17 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %16 to %"class.blink::ExecutionContextLifecycleObserver"*
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %17) #8
  %19 = icmp eq %"class.blink::ExecutionContext"* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 13
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kProgressE, align 8
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %28 = bitcast i8* %27 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %26, i32 1, i32 1, i32 1) #8
  %29 = getelementptr inbounds i8, i8* %27, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %25, %"class.blink::Event"* dereferenceable(104) %28) #8
  br label %34

34:                                               ; preds = %20, %7, %24
  ret void
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink27BackgroundFetchRegistration10OnProgressEmmmmNS_5mojom21BackgroundFetchResultENS1_28BackgroundFetchFailureReasonE(%"class.blink::BackgroundFetchRegistration"*, i64, i64, i64, i64, i32, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 11
  %9 = getelementptr inbounds i32, i32* %8, i64 26
  %10 = bitcast i32* %9 to i64*
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds i32, i32* %8, i64 28
  %12 = bitcast i32* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds i32, i32* %8, i64 30
  %14 = bitcast i32* %13 to i64*
  store i64 %3, i64* %14, align 8
  %15 = getelementptr inbounds i32, i32* %8, i64 32
  %16 = bitcast i32* %15 to i64*
  store i64 %4, i64* %16, align 8
  %17 = getelementptr inbounds i32, i32* %8, i64 35
  store i32 %5, i32* %17, align 4
  %18 = getelementptr inbounds i32, i32* %8, i64 36
  store i32 %6, i32* %18, align 8
  %19 = getelementptr inbounds i32, i32* %8, i64 22
  %20 = bitcast i32* %19 to %"class.blink::ServiceWorkerRegistration"**
  %21 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %21, i64 0, i32 2
  %23 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %22 to %"class.blink::ExecutionContextLifecycleObserver"*
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %23) #8
  %25 = icmp eq %"class.blink::ExecutionContext"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 13
  %28 = load i8, i8* %27, align 4, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = bitcast i32* %8 to %"class.blink::EventTarget"*
  %32 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kProgressE, align 8
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %34 = bitcast i8* %33 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %34, %"class.WTF::AtomicString"* dereferenceable(8) %32, i32 1, i32 1, i32 1) #8
  %35 = getelementptr inbounds i8, i8* %33, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %31, %"class.blink::Event"* dereferenceable(104) %34) #8
  br label %40

40:                                               ; preds = %7, %26, %30
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink27BackgroundFetchRegistration20OnRecordsUnavailableEv(%"class.blink::BackgroundFetchRegistration"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 9
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn80_N5blink27BackgroundFetchRegistration20OnRecordsUnavailableEv(%"class.blink::BackgroundFetchRegistration"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 11
  %3 = getelementptr inbounds i32, i32* %2, i64 34
  %4 = bitcast i32* %3 to i8*
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS2_INS4_16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRegistration"*, %"class.mojo::StructPtr.687"* nocapture readonly, %"class.mojo::StructPtr.732"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr.732", align 8
  %5 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0
  %6 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %6, align 8
  %12 = getelementptr inbounds %"class.mojo::StructPtr.687", %"class.mojo::StructPtr.687"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.mojo::StructPtr.732", %"class.mojo::StructPtr.732"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.mojo::StructPtr.732", %"class.mojo::StructPtr.732"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::Vector.117"* %5 to i64*
  br label %17

16:                                               ; preds = %43, %3
  ret void

17:                                               ; preds = %10, %43
  %18 = phi %"class.blink::Member.120"* [ %11, %10 ], [ %45, %43 ]
  %19 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::BackgroundFetchRecord"*, %"class.blink::BackgroundFetchRecord"** %19, align 8
  %21 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink21BackgroundFetchRecord11ObservedUrlEv(%"class.blink::BackgroundFetchRecord"* %20) #8
  %22 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %12, align 8
  %23 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIRequest", %"class.blink::mojom::blink::FetchAPIRequest"* %22, i64 0, i32 4
  %24 = call zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %21, %"class.blink::KURL"* dereferenceable(112) %23) #8
  br i1 %24, label %25, label %40

25:                                               ; preds = %17
  %26 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %13, align 8
  call void @_ZNK5blink5mojom5blink16FetchAPIResponse5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.732"* nonnull sret %4, %"class.blink::mojom::blink::FetchAPIResponse"* %26)
  call void @_ZN5blink21BackgroundFetchRecord18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRecord"* %20, %"class.mojo::StructPtr.732"* nonnull %4) #8
  %27 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %14, align 8
  store %"class.blink::mojom::blink::FetchAPIResponse"* null, %"class.blink::mojom::blink::FetchAPIResponse"** %14, align 8
  %28 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  call void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %27) #8
  %30 = bitcast %"class.blink::mojom::blink::FetchAPIResponse"* %27 to i8*
  call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = load i64, i64* %15, align 8
  %33 = ptrtoint %"class.blink::Member.120"* %18 to i64
  %34 = sub i64 %33, %32
  %35 = lshr exact i64 %34, 3
  %36 = trunc i64 %35 to i32
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.117"* %5, i32 %36) #8
  %37 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %6, align 8
  %38 = and i64 %35, 4294967295
  %39 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %37, i64 %38
  br label %43

40:                                               ; preds = %17
  %41 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %18, i64 1
  %42 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %6, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi %"class.blink::Member.120"* [ %37, %31 ], [ %42, %40 ]
  %45 = phi %"class.blink::Member.120"* [ %39, %31 ], [ %41, %40 ]
  %46 = load i32, i32* %7, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %44, i64 %47
  %49 = icmp eq %"class.blink::Member.120"* %45, %48
  br i1 %49, label %16, label %17
}

declare zeroext i1 @_ZN5blinkeqERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink21BackgroundFetchRecord11ObservedUrlEv(%"class.blink::BackgroundFetchRecord"*) local_unnamed_addr #2

declare void @_ZN5blink21BackgroundFetchRecord18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRecord"*, %"class.mojo::StructPtr.732"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink5mojom5blink16FetchAPIResponse5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.732"* noalias sret, %"class.blink::mojom::blink::FetchAPIResponse"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.net::AuthChallengeInfo", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::Vector.736", align 8
  %8 = alloca i16, align 2
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.WTF::HashMap.741", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %class.scoped_refptr.396, align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.base::Time", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::Vector.154", align 8
  %21 = alloca %class.scoped_refptr.396, align 8
  %22 = alloca %class.scoped_refptr.396, align 8
  %23 = alloca %"class.mojo::StructPtr.745", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca %"class.absl::optional.793", align 8
  %29 = bitcast %"class.WTF::Vector.736"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorIN5blink4KURLELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS6_(%"class.WTF::Vector.736"* nonnull sret %7, %"class.WTF::Vector.736"* dereferenceable(16) %30) #8
  %31 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 1
  %33 = load i16, i16* %32, align 2
  store i16 %33, i16* %8, align 2
  %34 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %2, %38, %53
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %56, align 8
  %57 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 3
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %10, align 4
  %60 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  %61 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 4
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %11, align 8
  %63 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #8
  %64 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 5
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %12, align 4
  %66 = bitcast %"class.WTF::HashMap.741"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #8
  %67 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 7
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEELb0EE5CloneERKS8_(%"class.WTF::HashMap.741"* nonnull sret %13, %"class.WTF::HashMap.741"* dereferenceable(24) %67) #8
  %68 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 8, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %55
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #8
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %77
  call void @llvm.trap() #8
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %55, %72, %87
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %90, align 8
  %91 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #8
  %92 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 9, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #8
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  call void @llvm.trap() #8
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %89, %95, %110
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %113, align 8
  %114 = bitcast %class.scoped_refptr.396* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #8
  %115 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 10, i32 0
  %116 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %115, align 8
  %117 = icmp eq %"class.blink::BlobDataHandle"* %116, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 1 monotonic
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #8
  %124 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #8
  br label %125

125:                                              ; preds = %112, %118, %122
  %126 = getelementptr inbounds %class.scoped_refptr.396, %class.scoped_refptr.396* %16, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* %116, %"class.blink::BlobDataHandle"** %126, align 8
  %127 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127) #8
  %128 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 11
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %17, align 4
  %130 = bitcast %"class.base::Time"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #8
  %131 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 12, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %18, i64 0, i32 0, i32 0
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #8
  %135 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 13, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %155, label %138

138:                                              ; preds = %125
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %155

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #8
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !2

152:                                              ; preds = %143
  call void @llvm.trap() #8
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %155

155:                                              ; preds = %125, %138, %153
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %156, align 8
  %157 = bitcast %"class.WTF::Vector.154"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #8
  %158 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 14
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %20, %"class.WTF::Vector.154"* dereferenceable(16) %158) #8
  %159 = bitcast %class.scoped_refptr.396* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #8
  %160 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 15, i32 0
  %161 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %160, align 8
  %162 = icmp eq %"class.blink::BlobDataHandle"* %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 1 monotonic
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #8
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #8
  br label %170

170:                                              ; preds = %155, %163, %167
  %171 = getelementptr inbounds %class.scoped_refptr.396, %class.scoped_refptr.396* %21, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* %161, %"class.blink::BlobDataHandle"** %171, align 8
  %172 = bitcast %class.scoped_refptr.396* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #8
  %173 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 16, i32 0
  %174 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %173, align 8
  %175 = icmp eq %"class.blink::BlobDataHandle"* %174, null
  br i1 %175, label %183, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 1 monotonic
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0)) #8
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #8
  br label %183

183:                                              ; preds = %170, %176, %180
  %184 = getelementptr inbounds %class.scoped_refptr.396, %class.scoped_refptr.396* %22, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* %174, %"class.blink::BlobDataHandle"** %184, align 8
  %185 = bitcast %"class.mojo::StructPtr.745"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #8
  %186 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %187 = load %"class.network::mojom::blink::ParsedHeaders"*, %"class.network::mojom::blink::ParsedHeaders"** %186, align 8, !noalias !7
  %188 = icmp eq %"class.network::mojom::blink::ParsedHeaders"* %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.mojo::StructPtr.745"* %23 to i64*
  store i64 0, i64* %190, align 8, !alias.scope !7
  br label %192

191:                                              ; preds = %183
  call void @_ZNK7network5mojom5blink13ParsedHeaders5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.745"* nonnull sret %23, %"class.network::mojom::blink::ParsedHeaders"* nonnull %187) #8
  br label %192

192:                                              ; preds = %189, %191
  %193 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #8
  %194 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 18
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %24, align 4
  %196 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #8
  %197 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 19, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %217, label %200

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #8
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !2

214:                                              ; preds = %205
  call void @llvm.trap() #8
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %217

217:                                              ; preds = %192, %200, %215
  %218 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %218, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #8
  %219 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 20
  %220 = load i8, i8* %219, align 1, !range !3
  store i8 %220, i8* %26, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #8
  %221 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 21
  %222 = load i8, i8* %221, align 1, !range !3
  store i8 %222, i8* %27, align 1
  %223 = getelementptr inbounds %"class.absl::optional.793", %"class.absl::optional.793"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %223) #8
  %224 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  %225 = load i8, i8* %224, align 8, !range !3, !noalias !14
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %217
  store i8 0, i8* %223, align 8, !alias.scope !14
  %228 = getelementptr inbounds %"class.absl::optional.793", %"class.absl::optional.793"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 184, i1 false) #8, !alias.scope !14
  br label %233

229:                                              ; preds = %217
  %230 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %230) #8, !noalias !14
  %231 = getelementptr inbounds %"class.blink::mojom::blink::FetchAPIResponse", %"class.blink::mojom::blink::FetchAPIResponse"* %1, i64 0, i32 22, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"* nonnull %3, %"class.net::AuthChallengeInfo"* dereferenceable(184) %231) #8, !noalias !14
  store i8 1, i8* %223, align 8, !alias.scope !14
  %232 = getelementptr inbounds %"class.absl::optional.793", %"class.absl::optional.793"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"* %232, %"class.net::AuthChallengeInfo"* nonnull dereferenceable(184) %3) #8
  call void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %230) #8, !noalias !14
  br label %233

233:                                              ; preds = %227, %229
  call void @_ZN4mojo9StructPtrIN5blink5mojom5blink16FetchAPIResponseEEC2IJN3WTF6VectorINS1_4KURLELj0ENS7_18PartitionAllocatorEEEtNS7_6StringEN7network5mojom17FetchResponseTypeElNSE_19FetchResponseSourceENS7_7HashMapISC_SC_NS7_10StringHashENS7_10HashTraitsISC_EESK_SA_EESC_SC_13scoped_refptrINS1_14BlobDataHandleEENS2_26ServiceWorkerResponseErrorEN4base4TimeESC_NS8_ISC_Lj0ESA_EESO_SO_NS0_INSE_5blink13ParsedHeadersEEEN3net16HttpResponseInfo14ConnectionInfoESC_bbN4absl8optionalINSW_17AuthChallengeInfoEEEEEENSQ_10in_place_tEDpOT_(%"class.mojo::StructPtr.732"* %0, %"class.WTF::Vector.736"* nonnull dereferenceable(16) %7, i16* nonnull dereferenceable(2) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10, i64* nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %12, %"class.WTF::HashMap.741"* nonnull dereferenceable(24) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %15, %class.scoped_refptr.396* nonnull dereferenceable(8) %16, i32* nonnull dereferenceable(4) %17, %"class.base::Time"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %19, %"class.WTF::Vector.154"* nonnull dereferenceable(16) %20, %class.scoped_refptr.396* nonnull dereferenceable(8) %21, %class.scoped_refptr.396* nonnull dereferenceable(8) %22, %"class.mojo::StructPtr.745"* nonnull dereferenceable(8) %23, i32* nonnull dereferenceable(4) %24, %"class.WTF::String"* nonnull dereferenceable(8) %25, i8* nonnull dereferenceable(1) %26, i8* nonnull dereferenceable(1) %27, %"class.absl::optional.793"* nonnull dereferenceable(192) %28) #8
  %234 = load i8, i8* %223, align 8, !range !3
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %"class.absl::optional.793", %"class.absl::optional.793"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"* %237) #8
  store i8 0, i8* %223, align 8
  br label %238

238:                                              ; preds = %233, %236
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %223) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #8
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #8
  br label %254

254:                                              ; preds = %238, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #8
  %255 = getelementptr inbounds %"class.mojo::StructPtr.745", %"class.mojo::StructPtr.745"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::ParsedHeaders"*, %"class.network::mojom::blink::ParsedHeaders"** %255, align 8
  store %"class.network::mojom::blink::ParsedHeaders"* null, %"class.network::mojom::blink::ParsedHeaders"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::ParsedHeaders"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink13ParsedHeadersD1Ev(%"class.network::mojom::blink::ParsedHeaders"* nonnull %256) #8
  %259 = bitcast %"class.network::mojom::blink::ParsedHeaders"* %256 to i8*
  call void @_ZdlPv(i8* %259) #15
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #8
  %261 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %184, align 8
  %262 = icmp eq %"class.blink::BlobDataHandle"* %261, null
  br i1 %262, label %269, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = atomicrmw sub i32* %264, i32 1 acq_rel
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %269

267:                                              ; preds = %263
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %261) #8
  %268 = bitcast %"class.blink::BlobDataHandle"* %261 to i8*
  call void @free(i8* %268) #8
  br label %269

269:                                              ; preds = %260, %263, %267
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #8
  %270 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %171, align 8
  %271 = icmp eq %"class.blink::BlobDataHandle"* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw sub i32* %273, i32 1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %278

276:                                              ; preds = %272
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %270) #8
  %277 = bitcast %"class.blink::BlobDataHandle"* %270 to i8*
  call void @free(i8* %277) #8
  br label %278

278:                                              ; preds = %269, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #8
  %279 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %20, i64 0, i32 0, i32 0, i32 0
  %280 = load %"class.WTF::String"*, %"class.WTF::String"** %279, align 8
  %281 = icmp eq %"class.WTF::String"* %280, null
  br i1 %281, label %316, label %282, !prof !19

282:                                              ; preds = %278
  %283 = bitcast %"class.WTF::String"* %280 to i8*
  %284 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %20, i64 0, i32 0, i32 0, i32 2
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %314, label %287, !prof !2

287:                                              ; preds = %282
  %288 = zext i32 %285 to i64
  %289 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %280, i64 %288
  br label %290

290:                                              ; preds = %308, %287
  %291 = phi %"class.WTF::String"* [ %309, %308 ], [ %280, %287 ]
  %292 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %291, i64 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #8
  br label %308

308:                                              ; preds = %307, %304, %290
  %309 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %291, i64 1
  %310 = icmp eq %"class.WTF::String"* %309, %289
  br i1 %310, label %311, label %290

311:                                              ; preds = %308
  store i32 0, i32* %284, align 4
  %312 = bitcast %"class.WTF::Vector.154"* %20 to i8**
  %313 = load i8*, i8** %312, align 8
  br label %314

314:                                              ; preds = %311, %282
  %315 = phi i8* [ %313, %311 ], [ %283, %282 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %315) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %279, align 8
  br label %316

316:                                              ; preds = %278, %314
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #8
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %318, label %332, label %319

319:                                              ; preds = %316
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %328

326:                                              ; preds = %319
  %327 = add i32 %325, -1
  store i32 %327, i32* %324, align 4
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i32 [ %327, %326 ], [ %325, %319 ]
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %328
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %317) #8
  br label %332

332:                                              ; preds = %316, %328, %331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %127) #8
  %333 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %126, align 8
  %334 = icmp eq %"class.blink::BlobDataHandle"* %333, null
  br i1 %334, label %341, label %335

335:                                              ; preds = %332
  %336 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %333, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw sub i32* %336, i32 1 acq_rel
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %341

339:                                              ; preds = %335
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %333) #8
  %340 = bitcast %"class.blink::BlobDataHandle"* %333 to i8*
  call void @free(i8* %340) #8
  br label %341

341:                                              ; preds = %332, %335, %339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #8
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #8
  br label %357

357:                                              ; preds = %341, %353, %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #8
  br label %373

373:                                              ; preds = %357, %369, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  %374 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %13, i64 0, i32 0, i32 0
  %375 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %374, align 8
  %376 = icmp eq %"struct.WTF::KeyValuePair.695"* %375, null
  br i1 %376, label %380, label %377, !prof !19

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %13, i64 0, i32 0, i32 1
  %379 = load i32, i32* %378, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.695"* nonnull %375, i32 %379) #8
  store %"struct.WTF::KeyValuePair.695"* null, %"struct.WTF::KeyValuePair.695"** %374, align 8
  br label %380

380:                                              ; preds = %373, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #8
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %396, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %381) #8
  br label %396

396:                                              ; preds = %380, %392, %395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %31) #8
  %397 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %7, i64 0, i32 0, i32 0, i32 0
  %398 = load %"class.blink::KURL"*, %"class.blink::KURL"** %397, align 8
  %399 = icmp eq %"class.blink::KURL"* %398, null
  br i1 %399, label %416, label %400, !prof !19

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %7, i64 0, i32 0, i32 0, i32 2
  %402 = load i32, i32* %401, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %413, label %404, !prof !2

404:                                              ; preds = %400
  %405 = zext i32 %402 to i64
  %406 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %398, i64 %405
  br label %407

407:                                              ; preds = %407, %404
  %408 = phi %"class.blink::KURL"* [ %409, %407 ], [ %398, %404 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %408) #8
  %409 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %408, i64 1
  %410 = icmp eq %"class.blink::KURL"* %409, %406
  br i1 %410, label %411, label %407

411:                                              ; preds = %407
  store i32 0, i32* %401, align 4
  %412 = load %"class.blink::KURL"*, %"class.blink::KURL"** %397, align 8
  br label %413

413:                                              ; preds = %411, %400
  %414 = phi %"class.blink::KURL"* [ %398, %400 ], [ %412, %411 ]
  %415 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %414, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %415) #8
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %397, align 8
  br label %416

416:                                              ; preds = %396, %413
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink27BackgroundFetchRegistration18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS2_INS4_16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRegistration"*, %"class.mojo::StructPtr.687"* nocapture readonly, %"class.mojo::StructPtr.732"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 11
  %5 = bitcast i32* %4 to %"class.blink::BackgroundFetchRegistration"*
  tail call void @_ZN5blink27BackgroundFetchRegistration18OnRequestCompletedEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS2_INS4_16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRegistration"* %5, %"class.mojo::StructPtr.687"* %1, %"class.mojo::StructPtr.732"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink27BackgroundFetchRegistration2idEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #8
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #8
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink27BackgroundFetchRegistration11uploadTotalEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink27BackgroundFetchRegistration8uploadedEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink27BackgroundFetchRegistration13downloadTotalEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink27BackgroundFetchRegistration10downloadedEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink27BackgroundFetchRegistration16recordsAvailableEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink27BackgroundFetchRegistration13InterfaceNameEv(%"class.blink::BackgroundFetchRegistration"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names28kBackgroundFetchRegistrationE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration5abortEPNS_11ScriptStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.812", align 8
  %5 = alloca %"class.blink::Persistent.813", align 8
  %6 = alloca %"class.blink::Persistent.810", align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #8
  %8 = bitcast i8* %7 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %8, %"class.blink::ScriptState"* %2) #8
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = getelementptr inbounds i8, i8* %7, i64 48
  %14 = bitcast i8* %13 to %"class.blink::ScriptPromise::InternalResolver"*
  %15 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -86, i64 32, i1 false)
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %14) #8
  %16 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %18, null
  br i1 %19, label %20, label %42

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13
  %22 = bitcast %"class.mojo::Remote"* %21 to %"class.mojo::internal::InterfacePtrStateBase"*
  %23 = tail call i8* @_Znwm(i64 8) #15
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = bitcast i8* %23 to %"class.mojo::MessageReceiver"*
  %26 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %22, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %25, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E, i64 0, i64 0)) #8
  br i1 %26, label %27, label %42

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = bitcast %"class.mojo::InterfaceEndpointClient"** %28 to %"class.mojo::MessageReceiverWithResponder"**
  %30 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %29, align 8
  %31 = tail call i8* @_Znwm(i64 16) #15
  %32 = bitcast i8* %31 to %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*
  tail call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %32, %"class.mojo::MessageReceiverWithResponder"* %30) #8
  %33 = ptrtoint i8* %31 to i64
  %34 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %17, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.503"* %16 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %34, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %27
  %38 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %34 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %39 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %39, i64 1
  %41 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %40, align 8
  tail call void %41(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %34) #8
  br label %42

42:                                               ; preds = %3, %20, %27, %37
  %43 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %17, align 8
  %44 = bitcast %"class.blink::Persistent.813"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  %45 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %5, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %5, i64 0, i32 0, i32 0
  store %"class.blink::BackgroundFetchRegistration"* %1, %"class.blink::BackgroundFetchRegistration"** %46, align 8, !alias.scope !20
  %47 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8, !alias.scope !20
  %48 = ptrtoint %"class.blink::BackgroundFetchRegistration"* %1 to i64
  switch i64 %48, label %49 [
    i64 0, label %75
    i64 -1, label %75
  ]

49:                                               ; preds = %42
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !20
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8, !noalias !20
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !2

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8, !noalias !20
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %60, align 8, !noalias !20
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8, !noalias !20
  %64 = icmp eq %"class.blink::PersistentNode"* %63, null
  br i1 %64, label %65, label %68, !prof !2

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %61, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %66) #8
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %62, align 8
  br label %68

68:                                               ; preds = %65, %56
  %69 = phi %"class.blink::PersistentNode"* [ %67, %65 ], [ %63, %56 ]
  %70 = bitcast %"class.blink::PersistentNode"* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !20
  %72 = bitcast %"class.blink::PersistentRegion"* %61 to i64*
  store i64 %71, i64* %72, align 8, !noalias !20
  %73 = bitcast %"class.blink::PersistentNode"* %69 to %"class.blink::PersistentBase.814"**
  store %"class.blink::PersistentBase.814"* %45, %"class.blink::PersistentBase.814"** %73, align 8, !noalias !20
  %74 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %69, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %74, align 8
  store %"class.blink::PersistentNode"* %69, %"class.blink::PersistentNode"** %47, align 8, !alias.scope !20
  br label %75

75:                                               ; preds = %42, %42, %68
  %76 = bitcast %"class.blink::Persistent.810"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  %77 = getelementptr inbounds %"class.blink::Persistent.810", %"class.blink::Persistent.810"* %6, i64 0, i32 0
  %78 = bitcast %"class.blink::Persistent.810"* %6 to i8**
  store i8* %7, i8** %78, align 8, !alias.scope !23
  %79 = getelementptr inbounds %"class.blink::Persistent.810", %"class.blink::Persistent.810"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %79, align 8, !alias.scope !23
  %80 = ptrtoint i8* %7 to i64
  switch i64 %80, label %81 [
    i64 0, label %107
    i64 -1, label %107
  ]

81:                                               ; preds = %75
  %82 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !23
  %83 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %82, i64 0, i32 1
  %84 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %83) #8, !noalias !23
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %88, !prof !2

86:                                               ; preds = %81
  %87 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %83, i8* %87) #8
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i8* [ %87, %86 ], [ %84, %81 ]
  %90 = bitcast i8* %89 to %"class.blink::ThreadState"**
  %91 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %90, align 8, !noalias !23
  %92 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %92, align 8, !noalias !23
  %94 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %94, align 8, !noalias !23
  %96 = icmp eq %"class.blink::PersistentNode"* %95, null
  br i1 %96, label %97, label %100, !prof !2

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %98) #8
  %99 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %94, align 8
  br label %100

100:                                              ; preds = %97, %88
  %101 = phi %"class.blink::PersistentNode"* [ %99, %97 ], [ %95, %88 ]
  %102 = bitcast %"class.blink::PersistentNode"* %101 to i64*
  %103 = load i64, i64* %102, align 8, !noalias !23
  %104 = bitcast %"class.blink::PersistentRegion"* %93 to i64*
  store i64 %103, i64* %104, align 8, !noalias !23
  %105 = bitcast %"class.blink::PersistentNode"* %101 to %"class.blink::PersistentBase.811"**
  store %"class.blink::PersistentBase.811"* %77, %"class.blink::PersistentBase.811"** %105, align 8, !noalias !23
  %106 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %101, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %106, align 8
  store %"class.blink::PersistentNode"* %101, %"class.blink::PersistentNode"** %79, align 8, !alias.scope !23
  br label %107

107:                                              ; preds = %75, %75, %100
  %108 = call i8* @_Znwm(i64 80) #15, !noalias !26
  %109 = bitcast i8* %108 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %109, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverENS3_5mojom20BackgroundFetchErrorEEJNS3_10PersistentIS4_EENSB_IS5_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverENS2_5mojom20BackgroundFetchErrorEEJNS2_10PersistentIS3_EENSA_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !26
  %110 = getelementptr inbounds i8, i8* %108, i64 32
  %111 = bitcast i8* %110 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)* @_ZN5blink27BackgroundFetchRegistration8DidAbortEPNS_21ScriptPromiseResolverENS_5mojom20BackgroundFetchErrorE to i64), i64 0>, <2 x i64>* %111, align 8, !noalias !26
  %112 = getelementptr inbounds i8, i8* %108, i64 48
  %113 = bitcast i8* %112 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %113, %"class.blink::Persistent.813"* nonnull dereferenceable(16) %5, %"class.blink::Persistent.810"* nonnull dereferenceable(16) %6) #8, !noalias !26
  %114 = bitcast %"class.base::OnceCallback.812"* %4 to i8**
  store i8* %108, i8** %114, align 8, !alias.scope !26
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy5AbortEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %43, %"class.base::OnceCallback.812"* nonnull %4) #8
  %115 = getelementptr inbounds %"class.base::OnceCallback.812", %"class.base::OnceCallback.812"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %115) #8
  %116 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  %117 = icmp eq %"class.blink::PersistentNode"* %116, null
  br i1 %117, label %137, label %118

118:                                              ; preds = %107
  %119 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %120 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %119, i64 0, i32 1
  %121 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %120) #8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %125, !prof !2

123:                                              ; preds = %118
  %124 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %120, i8* %124) #8
  br label %125

125:                                              ; preds = %123, %118
  %126 = phi i8* [ %124, %123 ], [ %121, %118 ]
  %127 = bitcast i8* %126 to %"class.blink::ThreadState"**
  %128 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %130 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %129, align 8
  %131 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %79, align 8
  %132 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %130, i64 0, i32 0, i32 0
  %133 = bitcast %"class.blink::PersistentRegion"* %130 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.blink::PersistentNode"* %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %131, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %136, align 8
  store %"class.blink::PersistentNode"* %131, %"class.blink::PersistentNode"** %132, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %79, align 8
  br label %137

137:                                              ; preds = %107, %125
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  %138 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %139 = icmp eq %"class.blink::PersistentNode"* %138, null
  br i1 %139, label %159, label %140

140:                                              ; preds = %137
  %141 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %142 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %141, i64 0, i32 1
  %143 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %142) #8
  %144 = icmp eq i8* %143, null
  br i1 %144, label %145, label %147, !prof !2

145:                                              ; preds = %140
  %146 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %142, i8* %146) #8
  br label %147

147:                                              ; preds = %145, %140
  %148 = phi i8* [ %146, %145 ], [ %143, %140 ]
  %149 = bitcast i8* %148 to %"class.blink::ThreadState"**
  %150 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %150, i64 0, i32 3, i32 0, i32 0, i32 0
  %152 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %151, align 8
  %153 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %154 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %152, i64 0, i32 0, i32 0
  %155 = bitcast %"class.blink::PersistentRegion"* %152 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.blink::PersistentNode"* %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %153, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %158, align 8
  store %"class.blink::PersistentNode"* %153, %"class.blink::PersistentNode"** %154, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  br label %159

159:                                              ; preds = %137, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  ret void
}

declare void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy5AbortEN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.base::OnceCallback.812"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration8DidAbortEPNS_21ScriptPromiseResolverENS_5mojom20BackgroundFetchErrorE(%"class.blink::BackgroundFetchRegistration"* nocapture readnone, %"class.blink::ScriptPromiseResolver"*, i32) #0 align 2 {
  %4 = alloca i32, align 4
  switch i32 %2, label %10 [
    i32 0, label %5
    i32 3, label %6
    i32 4, label %7
  ]

5:                                                ; preds = %3
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIbEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, i1 zeroext true, i32 1) #8
  br label %10

6:                                                ; preds = %3
  tail call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIbEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, i1 zeroext false, i32 1) #8
  br label %10

7:                                                ; preds = %3
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8
  store i32 20, i32* %4, align 4
  %9 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA47_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %4, [47 x i8]* nonnull dereferenceable(47) @.str.3) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, %"class.blink::DOMException"* %9, i32 2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8
  br label %10

10:                                               ; preds = %5, %6, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration5matchEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEPKNS_17CacheQueryOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionRequestOrUSVString"*, %"class.blink::CacheQueryOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.mojo::InlinedStructPtr.819"*
  store i64 -6148914691236517206, i64* %7, align 8, !alias.scope !33
  %9 = bitcast i64* %7 to %"class.blink::mojom::blink::CacheQueryOptions"*
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %9) #8
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 1
  store i32 1, i32* %10, align 4, !alias.scope !38
  %11 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 5
  %12 = load i8, i8* %11, align 4, !range !3, !noalias !41
  %13 = bitcast i64* %7 to i8*
  store i8 %12, i8* %13, align 8, !alias.scope !33
  %14 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !3, !noalias !41
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 0, i32 1
  store i8 %15, i8* %16, align 1, !alias.scope !33
  %17 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !3, !noalias !41
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 0, i32 2
  store i8 %18, i8* %19, align 2, !alias.scope !33
  call void @_ZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEb(%"class.blink::ScriptPromise"* sret %0, %"class.blink::BackgroundFetchRegistration"* %1, %"class.blink::ScriptState"* %2, %"class.blink::V8UnionRequestOrUSVString"* %3, %"class.mojo::InlinedStructPtr.819"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %5, i1 zeroext false)
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %9) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEb(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionRequestOrUSVString"*, %"class.mojo::InlinedStructPtr.819"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::mojom::blink::CacheQueryOptions", align 1
  %9 = alloca i8, align 1
  %10 = alloca %"class.blink::ScriptPromise", align 8
  %11 = alloca %"class.mojo::StructPtr.687", align 8
  %12 = alloca %"class.mojo::StructPtr.687", align 8
  %13 = alloca %"class.mojo::StructPtr.687", align 8
  %14 = alloca %"class.mojo::InlinedStructPtr.819", align 4
  %15 = alloca %"class.base::OnceCallback.1809", align 8
  %16 = alloca %"class.blink::Persistent.813", align 8
  %17 = alloca %"class.blink::Persistent.810", align 8
  %18 = zext i1 %6 to i8
  store i8 %18, i8* %9, align 1
  %19 = load atomic i64, i64* @_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %20 = inttoptr i64 %19 to %"class.base::HistogramBase"*
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %7
  %23 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 1) #8
  %24 = ptrtoint %"class.base::HistogramBase"* %23 to i64
  store atomic i64 %24, i64* @_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %25

25:                                               ; preds = %7, %22
  %26 = phi %"class.base::HistogramBase"* [ %20, %7 ], [ %23, %22 ]
  %27 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink14LocalDOMWindow4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #8
  %28 = icmp ne %"class.blink::LocalDOMWindow"* %27, null
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %26, i1 zeroext %28) #8
  %29 = load atomic i64, i64* @_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %30 = inttoptr i64 %29 to %"class.base::HistogramBase"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 1) #8
  %34 = ptrtoint %"class.base::HistogramBase"* %33 to i64
  store atomic i64 %34, i64* @_ZZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEbE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %35

35:                                               ; preds = %25, %32
  %36 = phi %"class.base::HistogramBase"* [ %30, %25 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 10
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %36, i1 zeroext %39) #8
  %40 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 9
  %41 = load i8, i8* %40, align 8, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.2, i64 0, i64 0)) #8
  %44 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 32, i1 false)
  br label %253

45:                                               ; preds = %35
  %46 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #8
  %47 = bitcast i8* %46 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %47, %"class.blink::ScriptState"* %2) #8
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = bitcast %"class.blink::ScriptPromise"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #8
  %53 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %10, i64 0, i32 1, i32 1, i32 1, i32 0
  %54 = getelementptr inbounds i8, i8* %46, i64 48
  %55 = bitcast i8* %54 to %"class.blink::ScriptPromise::InternalResolver"*
  %56 = bitcast %"class.blink::ScriptPromise"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* nonnull sret %10, %"class.blink::ScriptPromise::InternalResolver"* %55) #8
  %57 = icmp eq %"class.blink::V8UnionRequestOrUSVString"* %3, null
  br i1 %57, label %79, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %3, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  switch i32 %60, label %79 [
    i32 0, label %61
    i32 1, label %67
  ]

61:                                               ; preds = %58
  %62 = bitcast %"class.mojo::StructPtr.687"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #8
  %63 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %3, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::Request"*, %"class.blink::Request"** %63, align 8
  call void @_ZNK5blink7Request21CreateFetchAPIRequestEv(%"class.mojo::StructPtr.687"* nonnull sret %11, %"class.blink::Request"* %64) #8
  %65 = bitcast %"class.mojo::StructPtr.687"* %11 to i64*
  %66 = load i64, i64* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #8
  br label %79

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::V8UnionRequestOrUSVString", %"class.blink::V8UnionRequestOrUSVString"* %3, i64 0, i32 3
  %69 = call %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ScriptState"* %2, %"class.WTF::String"* dereferenceable(8) %68, %"class.blink::ExceptionState"* dereferenceable(72) %5) #8
  %70 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false)
  br label %242

75:                                               ; preds = %67
  %76 = bitcast %"class.mojo::StructPtr.687"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #8
  call void @_ZNK5blink7Request21CreateFetchAPIRequestEv(%"class.mojo::StructPtr.687"* nonnull sret %12, %"class.blink::Request"* %69) #8
  %77 = bitcast %"class.mojo::StructPtr.687"* %12 to i64*
  %78 = load i64, i64* %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #8
  br label %79

79:                                               ; preds = %75, %45, %61, %58
  %80 = phi i64 [ 0, %45 ], [ 0, %58 ], [ %78, %75 ], [ %66, %61 ]
  %81 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %82, align 8
  %84 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %83, null
  br i1 %84, label %85, label %107

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13
  %87 = bitcast %"class.mojo::Remote"* %86 to %"class.mojo::internal::InterfacePtrStateBase"*
  %88 = call i8* @_Znwm(i64 8) #15
  %89 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %90 = bitcast i8* %88 to %"class.mojo::MessageReceiver"*
  %91 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %87, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %90, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E, i64 0, i64 0)) #8
  br i1 %91, label %92, label %107

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %1, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %94 = bitcast %"class.mojo::InterfaceEndpointClient"** %93 to %"class.mojo::MessageReceiverWithResponder"**
  %95 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %94, align 8
  %96 = call i8* @_Znwm(i64 16) #15
  %97 = bitcast i8* %96 to %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %97, %"class.mojo::MessageReceiverWithResponder"* %95) #8
  %98 = ptrtoint i8* %96 to i64
  %99 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %82, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.503"* %81 to i64*
  store i64 %98, i64* %100, align 8
  %101 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %99, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %92
  %103 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %99 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %104 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %104, i64 1
  %106 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %105, align 8
  call void %106(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %99) #8
  br label %107

107:                                              ; preds = %79, %85, %92, %102
  %108 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %82, align 8
  %109 = bitcast %"class.mojo::StructPtr.687"* %13 to i64*
  %110 = getelementptr inbounds %"class.mojo::StructPtr.687", %"class.mojo::StructPtr.687"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %80, i64* %109, align 8
  %111 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %14, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %111) #8
  %112 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %14, i64 0, i32 1
  store i32 0, i32* %112, align 4
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %111) #8
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %111) #8
  %113 = getelementptr inbounds %"class.blink::mojom::blink::CacheQueryOptions", %"class.blink::mojom::blink::CacheQueryOptions"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %113) #8
  %114 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %14, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %113, i8* nonnull align 4 %114, i64 3, i1 false) #8
  %115 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %4, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* align 1 %115, i64 3, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* nonnull align 1 %113, i64 3, i1 false) #8
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %113) #8
  %116 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %4, i64 0, i32 1
  %117 = load i32, i32* %112, align 4
  %118 = load i32, i32* %116, align 4
  store i32 %118, i32* %112, align 4
  store i32 %117, i32* %116, align 4
  %119 = load i8, i8* %9, align 1, !range !3
  %120 = icmp ne i8 %119, 0
  %121 = bitcast %"class.blink::Persistent.813"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #8
  %122 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %16, i64 0, i32 0
  %123 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %16, i64 0, i32 0, i32 0
  store %"class.blink::BackgroundFetchRegistration"* %1, %"class.blink::BackgroundFetchRegistration"** %123, align 8, !alias.scope !42
  %124 = getelementptr inbounds %"class.blink::Persistent.813", %"class.blink::Persistent.813"* %16, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %124, align 8, !alias.scope !42
  %125 = ptrtoint %"class.blink::BackgroundFetchRegistration"* %1 to i64
  switch i64 %125, label %126 [
    i64 0, label %152
    i64 -1, label %152
  ]

126:                                              ; preds = %107
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !42
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #8, !noalias !42
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !2

131:                                              ; preds = %126
  %132 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #8
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8, !noalias !42
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 3, i32 0, i32 0, i32 0
  %138 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %137, align 8, !noalias !42
  %139 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %139, align 8, !noalias !42
  %141 = icmp eq %"class.blink::PersistentNode"* %140, null
  br i1 %141, label %142, label %145, !prof !2

142:                                              ; preds = %133
  %143 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %138, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %143) #8
  %144 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %139, align 8
  br label %145

145:                                              ; preds = %142, %133
  %146 = phi %"class.blink::PersistentNode"* [ %144, %142 ], [ %140, %133 ]
  %147 = bitcast %"class.blink::PersistentNode"* %146 to i64*
  %148 = load i64, i64* %147, align 8, !noalias !42
  %149 = bitcast %"class.blink::PersistentRegion"* %138 to i64*
  store i64 %148, i64* %149, align 8, !noalias !42
  %150 = bitcast %"class.blink::PersistentNode"* %146 to %"class.blink::PersistentBase.814"**
  store %"class.blink::PersistentBase.814"* %122, %"class.blink::PersistentBase.814"** %150, align 8, !noalias !42
  %151 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %146, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %151, align 8
  store %"class.blink::PersistentNode"* %146, %"class.blink::PersistentNode"** %124, align 8, !alias.scope !42
  br label %152

152:                                              ; preds = %107, %107, %145
  %153 = bitcast %"class.blink::Persistent.810"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #8
  %154 = getelementptr inbounds %"class.blink::Persistent.810", %"class.blink::Persistent.810"* %17, i64 0, i32 0
  %155 = bitcast %"class.blink::Persistent.810"* %17 to i8**
  store i8* %46, i8** %155, align 8, !alias.scope !45
  %156 = getelementptr inbounds %"class.blink::Persistent.810", %"class.blink::Persistent.810"* %17, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %156, align 8, !alias.scope !45
  %157 = ptrtoint i8* %46 to i64
  switch i64 %157, label %158 [
    i64 0, label %184
    i64 -1, label %184
  ]

158:                                              ; preds = %152
  %159 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !45
  %160 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %159, i64 0, i32 1
  %161 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %160) #8, !noalias !45
  %162 = icmp eq i8* %161, null
  br i1 %162, label %163, label %165, !prof !2

163:                                              ; preds = %158
  %164 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %160, i8* %164) #8
  br label %165

165:                                              ; preds = %163, %158
  %166 = phi i8* [ %164, %163 ], [ %161, %158 ]
  %167 = bitcast i8* %166 to %"class.blink::ThreadState"**
  %168 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %167, align 8, !noalias !45
  %169 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %168, i64 0, i32 3, i32 0, i32 0, i32 0
  %170 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %169, align 8, !noalias !45
  %171 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %171, align 8, !noalias !45
  %173 = icmp eq %"class.blink::PersistentNode"* %172, null
  br i1 %173, label %174, label %177, !prof !2

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %170, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %175) #8
  %176 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %171, align 8
  br label %177

177:                                              ; preds = %174, %165
  %178 = phi %"class.blink::PersistentNode"* [ %176, %174 ], [ %172, %165 ]
  %179 = bitcast %"class.blink::PersistentNode"* %178 to i64*
  %180 = load i64, i64* %179, align 8, !noalias !45
  %181 = bitcast %"class.blink::PersistentRegion"* %170 to i64*
  store i64 %180, i64* %181, align 8, !noalias !45
  %182 = bitcast %"class.blink::PersistentNode"* %178 to %"class.blink::PersistentBase.811"**
  store %"class.blink::PersistentBase.811"* %154, %"class.blink::PersistentBase.811"** %182, align 8, !noalias !45
  %183 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %178, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %183, align 8
  store %"class.blink::PersistentNode"* %178, %"class.blink::PersistentNode"** %156, align 8, !alias.scope !45
  br label %184

184:                                              ; preds = %152, %152, %177
  %185 = call i8* @_Znwm(i64 88) #15, !noalias !48
  %186 = bitcast i8* %185 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %186, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.1810"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS7_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EENSJ_IS5_EEbEEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EENSI_IS4_EEbEE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !48
  %187 = getelementptr inbounds i8, i8* %185, i64 32
  %188 = bitcast i8* %187 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)* @_ZN5blink27BackgroundFetchRegistration22DidGetMatchingRequestsEPNS_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS3_18PartitionAllocatorEEE to i64), i64 0>, <2 x i64>* %188, align 8, !noalias !48
  %189 = getelementptr inbounds i8, i8* %185, i64 48
  %190 = bitcast i8* %189 to %"struct.std::__1::__tuple_impl.2087"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEEC2IJLm0ELm1ELm2EEJS6_S8_bEJEJEJS6_S8_RbEEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSD_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.2087"* %190, %"class.blink::Persistent.813"* nonnull dereferenceable(16) %16, %"class.blink::Persistent.810"* nonnull dereferenceable(16) %17, i8* nonnull dereferenceable(1) %9) #8, !noalias !48
  %191 = bitcast %"class.base::OnceCallback.1809"* %15 to i8**
  store i8* %185, i8** %191, align 8, !alias.scope !48
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy13MatchRequestsEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEbN4base12OnceCallbackIFvN3WTF6VectorINS4_INS1_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %108, %"class.mojo::StructPtr.687"* nonnull %13, %"class.mojo::InlinedStructPtr.819"* nonnull %14, i1 zeroext %120, %"class.base::OnceCallback.1809"* nonnull %15) #8
  %192 = getelementptr inbounds %"class.base::OnceCallback.1809", %"class.base::OnceCallback.1809"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %192) #8
  %193 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  %194 = icmp eq %"class.blink::PersistentNode"* %193, null
  br i1 %194, label %214, label %195

195:                                              ; preds = %184
  %196 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %197 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %196, i64 0, i32 1
  %198 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %197) #8
  %199 = icmp eq i8* %198, null
  br i1 %199, label %200, label %202, !prof !2

200:                                              ; preds = %195
  %201 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %197, i8* %201) #8
  br label %202

202:                                              ; preds = %200, %195
  %203 = phi i8* [ %201, %200 ], [ %198, %195 ]
  %204 = bitcast i8* %203 to %"class.blink::ThreadState"**
  %205 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %205, i64 0, i32 3, i32 0, i32 0, i32 0
  %207 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %206, align 8
  %208 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  %209 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %207, i64 0, i32 0, i32 0
  %210 = bitcast %"class.blink::PersistentRegion"* %207 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.blink::PersistentNode"* %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %208, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %213, align 8
  store %"class.blink::PersistentNode"* %208, %"class.blink::PersistentNode"** %209, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %156, align 8
  br label %214

214:                                              ; preds = %184, %202
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #8
  %215 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %124, align 8
  %216 = icmp eq %"class.blink::PersistentNode"* %215, null
  br i1 %216, label %236, label %217

217:                                              ; preds = %214
  %218 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %219 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %218, i64 0, i32 1
  %220 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %219) #8
  %221 = icmp eq i8* %220, null
  br i1 %221, label %222, label %224, !prof !2

222:                                              ; preds = %217
  %223 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %219, i8* %223) #8
  br label %224

224:                                              ; preds = %222, %217
  %225 = phi i8* [ %223, %222 ], [ %220, %217 ]
  %226 = bitcast i8* %225 to %"class.blink::ThreadState"**
  %227 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %227, i64 0, i32 3, i32 0, i32 0, i32 0
  %229 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %228, align 8
  %230 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %124, align 8
  %231 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %229, i64 0, i32 0, i32 0
  %232 = bitcast %"class.blink::PersistentRegion"* %229 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.blink::PersistentNode"* %230 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %230, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %235, align 8
  store %"class.blink::PersistentNode"* %230, %"class.blink::PersistentNode"** %231, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %124, align 8
  br label %236

236:                                              ; preds = %214, %224
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #8
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %111) #8
  %237 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %110, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %110, align 8
  %238 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %236
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %237) #8
  %240 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %237 to i8*
  call void @_ZdlPv(i8* %240) #15
  br label %241

241:                                              ; preds = %236, %239
  call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* %0, %"class.blink::ScriptPromise"* nonnull dereferenceable(32) %10) #8
  br label %242

242:                                              ; preds = %241, %73
  %243 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %53, align 8
  %244 = icmp eq %"class.blink::DOMWrapperWorld"* %243, null
  br i1 %244, label %252, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %243, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %246) #8
  %247 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %243, i64 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %245
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %243) #8
  %251 = bitcast %"class.blink::DOMWrapperWorld"* %243 to i8*
  call void @free(i8* %251) #8
  br label %252

252:                                              ; preds = %242, %245, %250
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #8
  br label %253

253:                                              ; preds = %252, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration8matchAllEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::InlinedStructPtr.819", align 4
  %6 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %5, i64 0, i32 0
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #8
  %7 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %5, i64 0, i32 1
  store i32 0, i32* %7, align 4
  call void @_ZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEb(%"class.blink::ScriptPromise"* sret %0, %"class.blink::BackgroundFetchRegistration"* %1, %"class.blink::ScriptState"* %2, %"class.blink::V8UnionRequestOrUSVString"* null, %"class.mojo::InlinedStructPtr.819"* nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %3, i1 zeroext true)
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration8matchAllEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEPKNS_17CacheQueryOptionsERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionRequestOrUSVString"*, %"class.blink::CacheQueryOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.mojo::InlinedStructPtr.819"*
  store i64 -6148914691236517206, i64* %7, align 8, !alias.scope !55
  %9 = bitcast i64* %7 to %"class.blink::mojom::blink::CacheQueryOptions"*
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %9) #8
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 1
  store i32 1, i32* %10, align 4, !alias.scope !60
  %11 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 5
  %12 = load i8, i8* %11, align 4, !range !3, !noalias !63
  %13 = bitcast i64* %7 to i8*
  store i8 %12, i8* %13, align 8, !alias.scope !55
  %14 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !3, !noalias !63
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 0, i32 1
  store i8 %15, i8* %16, align 1, !alias.scope !55
  %17 = getelementptr inbounds %"class.blink::CacheQueryOptions", %"class.blink::CacheQueryOptions"* %4, i64 0, i32 6
  %18 = load i8, i8* %17, align 1, !range !3, !noalias !63
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr.819", %"class.mojo::InlinedStructPtr.819"* %8, i64 0, i32 0, i32 2
  store i8 %18, i8* %19, align 2, !alias.scope !55
  call void @_ZN5blink27BackgroundFetchRegistration9MatchImplEPNS_11ScriptStateEPKNS_25V8UnionRequestOrUSVStringEN4mojo16InlinedStructPtrINS_5mojom5blink17CacheQueryOptionsEEERNS_14ExceptionStateEb(%"class.blink::ScriptPromise"* sret %0, %"class.blink::BackgroundFetchRegistration"* %1, %"class.blink::ScriptState"* %2, %"class.blink::V8UnionRequestOrUSVString"* %3, %"class.mojo::InlinedStructPtr.819"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %5, i1 zeroext true)
  call void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"* nonnull %9) #8
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink14LocalDOMWindow4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink7Request21CreateFetchAPIRequestEv(%"class.mojo::StructPtr.687"* sret, %"class.blink::Request"*) local_unnamed_addr #2

declare %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy13MatchRequestsEN4mojo9StructPtrINS1_15FetchAPIRequestEEENS3_16InlinedStructPtrINS1_17CacheQueryOptionsEEEbN4base12OnceCallbackIFvN3WTF6VectorINS4_INS1_27BackgroundFetchSettledFetchEEELj0ENSC_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.mojo::StructPtr.687"*, %"class.mojo::InlinedStructPtr.819"*, i1 zeroext, %"class.base::OnceCallback.1809"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration22DidGetMatchingRequestsEPNS_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1 zeroext, %"class.WTF::Vector.1810"* nocapture readonly) #0 align 2 {
  %5 = alloca %"class.blink::Member.120", align 8
  %6 = alloca %"class.blink::HeapVector.114", align 8
  %7 = alloca %"class.blink::ScriptState::Scope", align 8
  %8 = alloca %"class.blink::HeapVector.114", align 8
  %9 = alloca %"class.mojo::StructPtr.687", align 8
  %10 = alloca %"class.blink::BackgroundFetchRecord"*, align 8
  %11 = alloca %"class.blink::HeapVector.114", align 8
  %12 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %1, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %12, align 8
  %14 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %13, i64 0, i32 0
  %18 = bitcast %"class.blink::ScriptState::Scope"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false)
  %19 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %16, %"class.v8::Isolate"* %19) #8
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.v8::Context"*, %"class.v8::Context"** %20, align 8
  %22 = icmp eq %"class.v8::Context"* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.blink::ScriptState"* %13 to %"class.v8::internal::Isolate"**
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = bitcast %"class.v8::Context"* %21 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %25, i64 %27) #8
  %29 = bitcast i64* %28 to %"class.v8::Context"*
  br label %30

30:                                               ; preds = %4, %23
  %31 = phi %"class.v8::Context"* [ %29, %23 ], [ null, %4 ]
  store %"class.v8::Context"* %31, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %31) #8
  %32 = bitcast %"class.blink::HeapVector.114"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false) #8
  %36 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %8, i64 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %3, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %72, label %40

40:                                               ; preds = %30
  %41 = zext i32 %38 to i64
  %42 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm(i64 %41) #8
  %43 = lshr i64 %42, 3
  %44 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %43) #8
  %45 = ptrtoint %"class.blink::HeapVectorBacking"* %44 to i64
  %46 = bitcast %"class.blink::HeapVector.114"* %8 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = trunc i64 %43 to i32
  store i32 %47, i32* %34, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %44, i64 0, i32 0
  %52 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #8
  br label %53

53:                                               ; preds = %40, %50
  %54 = load i32, i32* %37, align 4
  %55 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %3, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.mojo::StructPtr.1813"*, %"class.mojo::StructPtr.1813"** %55, align 8
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %56, i64 %57
  %59 = icmp eq i32 %54, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %53
  %61 = bitcast %"class.mojo::StructPtr.687"* %9 to i64*
  %62 = getelementptr inbounds %"class.mojo::StructPtr.687", %"class.mojo::StructPtr.687"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.blink::BackgroundFetchRecord"** %10 to i8*
  %64 = bitcast %"class.blink::BackgroundFetchRecord"** %10 to i8**
  %65 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  %66 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0
  %67 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %68 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %66, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 10
  %71 = bitcast %"class.blink::BackgroundFetchRecord"** %10 to i64*
  br label %73

72:                                               ; preds = %155, %30, %53
  br i1 %2, label %168, label %158

73:                                               ; preds = %60, %155
  %74 = phi %"class.mojo::StructPtr.1813"* [ %56, %60 ], [ %156, %155 ]
  %75 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.mojo::StructPtr.1813"* %74 to i64**
  %77 = load i64*, i64** %76, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %62, align 8
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %61, align 8
  store i64 0, i64* %77, align 8
  %79 = call %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS_16FetchRequestData26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"* %13, %"class.mojo::StructPtr.687"* nonnull %9, i32 0) #8
  %80 = load %"class.blink::mojom::blink::FetchAPIRequest"*, %"class.blink::mojom::blink::FetchAPIRequest"** %62, align 8
  store %"class.blink::mojom::blink::FetchAPIRequest"* null, %"class.blink::mojom::blink::FetchAPIRequest"** %62, align 8
  %81 = icmp eq %"class.blink::mojom::blink::FetchAPIRequest"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %73
  call void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"* nonnull %80) #8
  %83 = bitcast %"class.blink::mojom::blink::FetchAPIRequest"* %80 to i8*
  call void @_ZdlPv(i8* %83) #15
  br label %84

84:                                               ; preds = %73, %82
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #8
  store %"class.blink::BackgroundFetchRecord"* inttoptr (i64 -6148914691236517206 to %"class.blink::BackgroundFetchRecord"*), %"class.blink::BackgroundFetchRecord"** %10, align 8
  %85 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %86 = bitcast i8* %85 to %"class.blink::BackgroundFetchRecord"*
  call void @_ZN5blink21BackgroundFetchRecordC1EPNS_7RequestEPNS_11ScriptStateE(%"class.blink::BackgroundFetchRecord"* %86, %"class.blink::Request"* %79, %"class.blink::ScriptState"* %13) #8
  %87 = getelementptr inbounds i8, i8* %85, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  store i8* %85, i8** %64, align 8
  %91 = load %"class.blink::mojom::blink::BackgroundFetchSettledFetch"*, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %75, align 8
  %92 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchSettledFetch", %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %91, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %92, align 8
  %94 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %93, null
  br i1 %94, label %95, label %117

95:                                               ; preds = %84
  %96 = load i32, i32* %65, align 8
  %97 = add i32 %96, -1
  %98 = icmp ult i32 %97, 2
  br i1 %98, label %117, label %99

99:                                               ; preds = %95
  %100 = load i32, i32* %67, align 4
  %101 = load i32, i32* %68, align 8
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %116, label %103, !prof !2

103:                                              ; preds = %99
  %104 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %69, align 8
  %105 = zext i32 %100 to i64
  %106 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %104, i64 %105
  %107 = ptrtoint i8* %85 to i64
  %108 = bitcast %"class.blink::Member.120"* %106 to i64*
  store atomic i64 %107, i64* %108 monotonic, align 8
  %109 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %103
  %112 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #8
  br label %113

113:                                              ; preds = %111, %103
  %114 = load i32, i32* %67, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %67, align 4
  br label %117

116:                                              ; preds = %99
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.117"* %66, %"class.blink::BackgroundFetchRecord"* dereferenceable(48) %86) #8
  br label %117

117:                                              ; preds = %116, %113, %95, %84
  %118 = load %"class.blink::BackgroundFetchRecord"*, %"class.blink::BackgroundFetchRecord"** %10, align 8
  %119 = load %"class.blink::mojom::blink::BackgroundFetchSettledFetch"*, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %75, align 8
  %120 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchSettledFetch", %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %119, i64 0, i32 1
  %121 = call zeroext i1 @_ZN5blink21BackgroundFetchRecord15IsRecordPendingEv(%"class.blink::BackgroundFetchRecord"* %118) #8
  br i1 %121, label %122, label %136

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.mojo::StructPtr.732", %"class.mojo::StructPtr.732"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %123, align 8
  %125 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %124, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %122
  call void @_ZN5blink21BackgroundFetchRecord25SetResponseAndUpdateStateERN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRecord"* %118, %"class.mojo::StructPtr.732"* dereferenceable(8) %120) #8
  br label %136

127:                                              ; preds = %122
  %128 = load i32, i32* %65, align 8
  %129 = add i32 %128, -1
  %130 = icmp ult i32 %129, 2
  br i1 %130, label %131, label %132

131:                                              ; preds = %127
  call void @_ZN5blink21BackgroundFetchRecord11UpdateStateENS0_5StateE(%"class.blink::BackgroundFetchRecord"* %118, i32 1) #8
  br label %136

132:                                              ; preds = %127
  %133 = load i32, i32* %70, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135

135:                                              ; preds = %132
  call void @_ZN5blink21BackgroundFetchRecord11UpdateStateENS0_5StateE(%"class.blink::BackgroundFetchRecord"* %118, i32 2) #8
  br label %136

136:                                              ; preds = %117, %126, %131, %132, %135
  %137 = load i32, i32* %35, align 4
  %138 = load i32, i32* %34, align 8
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %154, label %140, !prof !2

140:                                              ; preds = %136
  %141 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %33, align 8
  %142 = zext i32 %137 to i64
  %143 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %141, i64 %142
  %144 = load i64, i64* %71, align 8
  %145 = bitcast %"class.blink::Member.120"* %143 to i64*
  store atomic i64 %144, i64* %145 monotonic, align 8
  %146 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %140
  %149 = inttoptr i64 %144 to i8*
  %150 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #8
  br label %151

151:                                              ; preds = %148, %140
  %152 = load i32, i32* %35, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %35, align 4
  br label %155

154:                                              ; preds = %136
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.117"* nonnull %36, %"class.blink::BackgroundFetchRecord"** nonnull dereferenceable(8) %10) #8
  br label %155

155:                                              ; preds = %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #8
  %156 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %74, i64 1
  %157 = icmp eq %"class.mojo::StructPtr.1813"* %156, %58
  br i1 %157, label %72, label %73

158:                                              ; preds = %72
  %159 = load i32, i32* %37, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, i32 1) #8
  br label %172

162:                                              ; preds = %158
  %163 = call dereferenceable(8) %"class.blink::Member.120"* @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.117"* nonnull %36, i32 0) #8
  %164 = bitcast %"class.blink::Member.120"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.blink::Member.120"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166)
  %167 = bitcast %"class.blink::Member.120"* %5 to i64*
  store i64 %165, i64* %167, align 8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_21BackgroundFetchRecordEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, %"class.blink::Member.120"* nonnull %5, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166)
  br label %172

168:                                              ; preds = %72
  %169 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %11, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.117"* nonnull %169, %"class.WTF::Vector.117"* nonnull dereferenceable(16) %36) #8
  %170 = bitcast %"class.blink::HeapVector.114"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170)
  %171 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %6, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.117"* nonnull %171, %"class.WTF::Vector.117"* nonnull dereferenceable(16) %169) #8
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1, %"class.blink::HeapVector.114"* nonnull %6, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170)
  br label %172

172:                                              ; preds = %168, %162, %161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %173 = load %"class.v8::Context"*, %"class.v8::Context"** %15, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %173) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"* dereferenceable(32)) unnamed_addr #2

declare %"class.blink::Request"* @_ZN5blink7Request6CreateEPNS_11ScriptStateEN4mojo9StructPtrINS_5mojom5blink15FetchAPIRequestEEENS_16FetchRequestData26ForServiceWorkerFetchEventE(%"class.blink::ScriptState"*, %"class.mojo::StructPtr.687"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink27BackgroundFetchRegistration9IsAbortedEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration12UpdateRecordEPNS_21BackgroundFetchRecordERN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRegistration"* nocapture readonly, %"class.blink::BackgroundFetchRecord"*, %"class.mojo::StructPtr.732"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN5blink21BackgroundFetchRecord15IsRecordPendingEv(%"class.blink::BackgroundFetchRecord"* %1) #8
  br i1 %4, label %5, label %21

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.mojo::StructPtr.732", %"class.mojo::StructPtr.732"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::mojom::blink::FetchAPIResponse"*, %"class.blink::mojom::blink::FetchAPIResponse"** %6, align 8
  %8 = icmp eq %"class.blink::mojom::blink::FetchAPIResponse"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink21BackgroundFetchRecord25SetResponseAndUpdateStateERN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRecord"* %1, %"class.mojo::StructPtr.732"* dereferenceable(8) %2) #8
  br label %21

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN5blink21BackgroundFetchRecord11UpdateStateENS0_5StateE(%"class.blink::BackgroundFetchRecord"* %1, i32 1) #8
  br label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 10
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN5blink21BackgroundFetchRecord11UpdateStateENS0_5StateE(%"class.blink::BackgroundFetchRecord"* %1, i32 2) #8
  br label %21

21:                                               ; preds = %16, %3, %9, %15, %20
  ret void
}

declare zeroext i1 @_ZN5blink21BackgroundFetchRecord15IsRecordPendingEv(%"class.blink::BackgroundFetchRecord"*) local_unnamed_addr #2

declare void @_ZN5blink21BackgroundFetchRecord25SetResponseAndUpdateStateERN4mojo9StructPtrINS_5mojom5blink16FetchAPIResponseEEE(%"class.blink::BackgroundFetchRecord"*, %"class.mojo::StructPtr.732"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink21BackgroundFetchRecord11UpdateStateENS0_5StateE(%"class.blink::BackgroundFetchRecord"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink27BackgroundFetchRegistration6resultEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %8 [
    i32 2, label %5
    i32 1, label %6
    i32 0, label %7
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #8
  br label %9

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #8
  br label %9

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i64 0) #8
  br label %9

8:                                                ; preds = %1
  unreachable

9:                                                ; preds = %7, %6, %5
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink27BackgroundFetchRegistration13failureReasonEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::IdentifiabilityMetricBuilder", align 8
  %4 = bitcast %"class.blink::IdentifiabilityMetricBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %6, i64 0, i32 2
  %8 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %7 to %"class.blink::ExecutionContextLifecycleObserver"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #8
  %10 = bitcast %"class.blink::ExecutionContext"* %9 to i64 (%"class.blink::ExecutionContext"*)***
  %11 = load i64 (%"class.blink::ExecutionContext"*)**, i64 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %11, i64 45
  %13 = load i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::ExecutionContext"* %9) #8
  call void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %3, i64 %14) #8
  %15 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 6
  %18 = zext i1 %17 to i64
  %19 = call dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %3, i64 895745, i64 %18) #8
  %20 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %5, align 8
  %21 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %20, i64 0, i32 2
  %22 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %21 to %"class.blink::ExecutionContextLifecycleObserver"*
  %23 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %22) #8
  %24 = bitcast %"class.blink::ExecutionContext"* %23 to %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)***
  %25 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)**, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %25, i64 44
  %27 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %26, align 8
  %28 = call %"class.ukm::UkmRecorder"* %27(%"class.blink::ExecutionContext"* %23) #8
  call void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"* %19, %"class.ukm::UkmRecorder"* %28) #8
  call void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8
  %29 = load i32, i32* %15, align 8
  switch i32 %29, label %36 [
    i32 0, label %30
    i32 1, label %31
    i32 2, label %31
    i32 3, label %32
    i32 5, label %33
    i32 4, label %33
    i32 6, label %34
    i32 7, label %35
  ]

30:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), i64 0) #8
  br label %37

31:                                               ; preds = %1, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i64 7) #8
  br label %37

32:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10) #8
  br label %37

33:                                               ; preds = %1, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #8
  br label %37

34:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #8
  br label %37

35:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 23) #8
  br label %37

36:                                               ; preds = %1
  unreachable

37:                                               ; preds = %35, %34, %33, %32, %31, %30
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  ret %"class.WTF::StringImpl"* %39
}

declare dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27BackgroundFetchRegistration18HasPendingActivityEv(%"class.blink::BackgroundFetchRegistration"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %3, i64 0, i32 2
  %5 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %4 to %"class.blink::ExecutionContextLifecycleObserver"*
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %5) #8
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %1
  %9 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %2, align 8
  %10 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %9, i64 0, i32 2
  %11 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %10 to %"class.blink::ExecutionContextLifecycleObserver"*
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %11) #8
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 13
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br label %20

20:                                               ; preds = %8, %1, %16
  %21 = phi i1 [ %19, %16 ], [ false, %1 ], [ false, %8 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27BackgroundFetchRegistration8UpdateUIERKN3WTF6StringERK8SkBitmapN4base12OnceCallbackIFvNS_5mojom20BackgroundFetchErrorEEEE(%"class.blink::BackgroundFetchRegistration"*, %"class.WTF::String"* dereferenceable(8), %class.SkBitmap* dereferenceable(56), %"class.base::OnceCallback.812"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.812", align 8
  %6 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %7, align 8
  %9 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %8, null
  br i1 %9, label %10, label %32

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13
  %12 = bitcast %"class.mojo::Remote"* %11 to %"class.mojo::internal::InterfacePtrStateBase"*
  %13 = tail call i8* @_Znwm(i64 8) #15
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = bitcast i8* %13 to %"class.mojo::MessageReceiver"*
  %16 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %12, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %15, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E, i64 0, i64 0)) #8
  br i1 %16, label %17, label %32

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 13, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = bitcast %"class.mojo::InterfaceEndpointClient"** %18 to %"class.mojo::MessageReceiverWithResponder"**
  %20 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %19, align 8
  %21 = tail call i8* @_Znwm(i64 16) #15
  %22 = bitcast i8* %21 to %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*
  tail call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %22, %"class.mojo::MessageReceiverWithResponder"* %20) #8
  %23 = ptrtoint i8* %21 to i64
  %24 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %7, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.503"* %6 to i64*
  store i64 %23, i64* %25, align 8
  %26 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %24 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %29 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %29, i64 1
  %31 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %30, align 8
  tail call void %31(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %24) #8
  br label %32

32:                                               ; preds = %4, %10, %17, %27
  %33 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %7, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback.812", %"class.base::OnceCallback.812"* %3, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback.812"* %3 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback.812"* %5 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy8UpdateUIERKN3WTF6StringERK8SkBitmapN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %33, %"class.WTF::String"* dereferenceable(8) %1, %class.SkBitmap* dereferenceable(56) %2, %"class.base::OnceCallback.812"* nonnull %5) #8
  %38 = getelementptr inbounds %"class.base::OnceCallback.812", %"class.base::OnceCallback.812"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #8
  ret void
}

declare void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxy8UpdateUIERKN3WTF6StringERK8SkBitmapN4base12OnceCallbackIFvNS0_20BackgroundFetchErrorEEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.WTF::String"* dereferenceable(8), %class.SkBitmap* dereferenceable(56), %"class.base::OnceCallback.812"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27BackgroundFetchRegistration5TraceEPNS_7VisitorE(%"class.blink::BackgroundFetchRegistration"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.8"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25ServiceWorkerRegistrationEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 12
  %15 = bitcast %"class.blink::HeapVector.114"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"class.blink::HeapVector.114"* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8** %18) #8
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %13, %23
  %30 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 14
  %31 = bitcast %"class.blink::HeapMojoReceiver"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #8
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 1
  %42 = bitcast %"class.blink::EventTargetData"* %41 to i8*
  %43 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261) #8
  %44 = bitcast i8* %43 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %44, %"class.blink::Visitor"* %1) #8
  %45 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %45, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #8
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink27BackgroundFetchRegistration5TraceEPNS_7VisitorE(%"class.blink::BackgroundFetchRegistration"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %0, i64 -1, i32 12
  %4 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %3, i64 5, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast i32* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25ServiceWorkerRegistrationEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %3, i64 9, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i32* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  %19 = bitcast i32* %15 to i8**
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %21 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, i64 11
  %23 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8** %19) #8
  br i1 %18, label %30, label %24

24:                                               ; preds = %14
  %25 = inttoptr i64 %17 to i8*
  %26 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, i64 5
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, align 8
  tail call void %29(%"class.blink::Visitor"* %1, i8* nonnull %25, i8* nonnull %25, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %30

30:                                               ; preds = %24, %14
  %31 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %3, i64 13, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i32* %31 to i64*
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = inttoptr i64 %33 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #8
  br label %41

41:                                               ; preds = %30, %35
  %42 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %3, i64 1
  %43 = bitcast %"class.blink::HeapVector.114"* %42 to i8*
  %44 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261) #8
  %45 = bitcast i8* %44 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %45, %"class.blink::Visitor"* %1) #8
  %46 = bitcast %"class.blink::HeapVector.114"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %46, %"class.blink::Visitor"* %1) #8
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #8
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink27BackgroundFetchRegistration18GetWrapperTypeInfoEv(%"class.blink::BackgroundFetchRegistration"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink27BackgroundFetchRegistration18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 2
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ServiceWorkerRegistration"**
  %4 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %4, i64 0, i32 2
  %6 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %5 to %"class.blink::ExecutionContextLifecycleObserver"*
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %6) #8
  %8 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %7) #8
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_27BackgroundFetchRegistrationEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::BackgroundFetchRegistration"*
  %4 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 2
  %5 = bitcast %"class.blink::ActiveScriptWrappable"* %4 to %"class.blink::ServiceWorkerRegistration"**
  %6 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %6, i64 0, i32 2
  %8 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %7 to %"class.blink::ExecutionContextLifecycleObserver"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #8
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = load %"class.blink::ServiceWorkerRegistration"*, %"class.blink::ServiceWorkerRegistration"** %5, align 8
  %13 = getelementptr inbounds %"class.blink::ServiceWorkerRegistration", %"class.blink::ServiceWorkerRegistration"* %12, i64 0, i32 2
  %14 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %13 to %"class.blink::ExecutionContextLifecycleObserver"*
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %14) #8
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 0, i32 13
  %17 = load i8, i8* %16, align 4, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::BackgroundFetchRegistration", %"class.blink::BackgroundFetchRegistration"* %3, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  br label %23

23:                                               ; preds = %1, %11, %19
  %24 = phi i1 [ %22, %19 ], [ false, %1 ], [ false, %11 ]
  ret i1 %24
}

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #8

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #8
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #11

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #6

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16FetchAPIResponseD1Ev(%"class.blink::mojom::blink::FetchAPIResponse"*) unnamed_addr #6

declare void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise::InternalResolver"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink17CacheQueryOptionsD1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink15FetchAPIRequestD1Ev(%"class.blink::mojom::blink::FetchAPIRequest"*) unnamed_addr #6

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_22ToV8UndefinedGeneratorEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::ScriptState::Scope", align 8
  %5 = alloca %"class.v8::MicrotasksScope", align 8
  %6 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %111

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %111, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %11, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %16, align 8
  %18 = icmp eq %"class.blink::V8PerContextData"* %17, null
  br i1 %18, label %111, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %21 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %111, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %25 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %24, i64 0, i32 13
  %26 = load i8, i8* %25, align 4, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %111

28:                                               ; preds = %23
  store i32 %1, i32* %6, align 8
  %29 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 1, i32 0
  %31 = bitcast %"class.blink::ScriptState::Scope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 32, i1 false)
  %32 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %33 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 0
  %35 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %34, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %33, %"class.v8::Isolate"* %35) #8
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Context"*, %"class.v8::Context"** %36, align 8
  %38 = icmp eq %"class.v8::Context"* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %28
  %40 = bitcast %"class.blink::ScriptState"* %32 to %"class.v8::internal::Isolate"**
  %41 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %42 = bitcast %"class.v8::Context"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::Context"*
  br label %46

46:                                               ; preds = %28, %39
  %47 = phi %"class.v8::Context"* [ %45, %39 ], [ null, %28 ]
  store %"class.v8::Context"* %47, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %47) #8
  %48 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %49 = load i32, i32* %48, align 4
  store i32 0, i32* %48, align 4
  %50 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %51 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %50, i64 0, i32 0
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %51, align 8
  %53 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #8
  %54 = bitcast %"class.v8::MicrotasksScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %5, %"class.v8::Isolate"* %52, i32 1) #8
  %55 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %56 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %10, align 8
  %57 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %56, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.v8::Context"*, %"class.v8::Context"** %57, align 8
  %59 = icmp eq %"class.v8::Context"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %46
  %61 = bitcast %"class.blink::ScriptState"* %56 to %"class.v8::internal::Isolate"**
  %62 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %61, align 8
  %63 = bitcast %"class.v8::Context"* %58 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %62, i64 %64) #8
  %66 = bitcast i64* %65 to %"class.v8::Context"*
  br label %67

67:                                               ; preds = %46, %60
  %68 = phi %"class.v8::Context"* [ %66, %60 ], [ null, %46 ]
  %69 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %68) #8
  %70 = bitcast %"class.blink::ScriptState"** %10 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.801", %"class.blink::TraceWrapperV8Reference.801"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = icmp eq i64* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %67
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %75) #8
  %78 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %55 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %77, %67
  %80 = icmp eq i64 %73, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %73 to i64*
  %83 = bitcast %"class.v8::Isolate"* %52 to %"class.v8::internal::Isolate"*
  %84 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %55 to i64*
  %85 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %83, i64* nonnull %82, i64* %84, i1 zeroext false) #8
  %86 = ptrtoint i64* %85 to i64
  store atomic i64 %86, i64* %84 monotonic, align 8
  br label %87

87:                                               ; preds = %79, %81
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8) %55) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #8
  %88 = icmp eq i32* %48, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %87
  store i32 %49, i32* %48, align 4
  br label %90

90:                                               ; preds = %87, %89
  %91 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %20) #8
  %92 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %91) #8
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

94:                                               ; preds = %90
  %95 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  %96 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %97 = ptrtoint i64* %3 to i64
  %98 = sub i64 %96, %97
  %99 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %100 = icmp ult i64 %98, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  br i1 %100, label %103, label %101, !prof !19

101:                                              ; preds = %94
  %102 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %103

103:                                              ; preds = %94, %101
  %104 = phi i32* [ %102, %101 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %94 ]
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

108:                                              ; preds = %103
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %109

109:                                              ; preds = %108, %107, %93
  %110 = load %"class.v8::Context"*, %"class.v8::Context"** %30, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %110) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #8
  br label %111

111:                                              ; preds = %23, %15, %9, %19, %2, %109
  ret void
}

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #6

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #2

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"*, i64) unnamed_addr #2

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink17CacheQueryOptionsC1Ev(%"class.blink::mojom::blink::CacheQueryOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([224 x i8], [224 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16HeapMojoReceiverINS1_5mojom5blink35BackgroundFetchRegistrationObserverENS1_27BackgroundFetchRegistrationELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27BackgroundFetchRegistrationEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 32
  %4 = bitcast i8* %3 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %4) #8
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %4) #8
  %5 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE(%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.1922"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27BackgroundFetchRegistrationEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27BackgroundFetchRegistrationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 88
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25ServiceWorkerRegistrationEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 152
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast i8* %14 to i8**
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %20 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, i64 11
  %22 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8** %18) #8
  br i1 %17, label %29, label %23

23:                                               ; preds = %13
  %24 = inttoptr i64 %16 to i8*
  %25 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %0, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %29

29:                                               ; preds = %23, %13
  %30 = getelementptr inbounds i8, i8* %1, i64 216
  %31 = bitcast i8* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %0, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #8
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds i8, i8* %1, i64 16
  %42 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13, i64 0, i64 0), i32 261) #8
  %43 = bitcast i8* %42 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %43, %"class.blink::Visitor"* %0) #8
  %44 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %44, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev(%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #8
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev(%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %3) #8
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %3) #8
  %4 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv(%"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %2) #8
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7WrapperEEC2EPS9_(%"class.blink::ThreadState::PrefinalizerRegistration.1921"*, %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::HeapMojoReceiver<blink::mojom::blink::BackgroundFetchRegistrationObserver, blink::BackgroundFetchRegistration, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #8
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #8
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.327"*, %"struct.std::__1::pair.327"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.327"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

declare void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE7Wrapper18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 32
  %24 = bitcast i8* %23 to %"class.mojo::internal::BindingStateBase"*
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %24) #8
  br label %25

25:                                               ; preds = %16, %11, %2, %22
  %26 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.327"*, %"struct.std::__1::pair.327"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #8
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.327"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.327"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.327"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !19

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.327"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.327"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.327"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.327"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #8
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.327"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !19

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.327"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #8
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.327"*, %"struct.std::__1::pair.327"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.327"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.327"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.327"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !19

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.327", %"struct.std::__1::pair.327"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.327"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.327"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.327"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.327"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #8
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.327"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEED0Ev(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE6AcceptEPNS3_7MessageE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom5blink47BackgroundFetchRegistrationObserverStubDispatch6AcceptEPNS1_35BackgroundFetchRegistrationObserverEPN4mojo7MessageE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* nonnull %4, %"class.mojo::Message"* %1) #8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink39BackgroundFetchRegistrationObserverStubIN4mojo19RawPtrImplRefTraitsINS1_35BackgroundFetchRegistrationObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub", %"class.blink::mojom::blink::BackgroundFetchRegistrationObserverStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom5blink47BackgroundFetchRegistrationObserverStubDispatch19AcceptWithResponderEPNS1_35BackgroundFetchRegistrationObserverEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #8
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #8
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

declare zeroext i1 @_ZN5blink5mojom5blink47BackgroundFetchRegistrationObserverStubDispatch6AcceptEPNS1_35BackgroundFetchRegistrationObserverEPN4mojo7MessageE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::Message"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink5mojom5blink47BackgroundFetchRegistrationObserverStubDispatch19AcceptWithResponderEPNS1_35BackgroundFetchRegistrationObserverEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::BackgroundFetchRegistrationObserver"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink34BackgroundFetchRegistrationServiceEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.670"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.670", %"class.mojo::PendingRemote.670"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #8
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #8
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.503"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.503"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #8
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %17, align 8
  store %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* null, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %18 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %18) #8
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.670", %"class.mojo::PendingRemote.670"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #8
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.503"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #15
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationServiceResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink34BackgroundFetchRegistrationService5Name_E, i64 0, i64 0)) #8
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #15
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*
  tail call void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #8
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.503"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* %44 to void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)**, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)*, void (%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"* nonnull %44) #8
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #8
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.50"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #8
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZN5blink5mojom5blink39BackgroundFetchRegistrationServiceProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::BackgroundFetchRegistrationServiceProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8ReceiverIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote.675"* noalias sret, %"class.mojo::Receiver.1924"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::MessagePipeHandle", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::PendingReceiver", align 8
  %8 = getelementptr inbounds %"class.mojo::PendingRemote.675", %"class.mojo::PendingRemote.675"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds %"class.mojo::PendingRemote.675", %"class.mojo::PendingRemote.675"* %0, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.675", %"class.mojo::PendingRemote.675"* %0, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %10) #8
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8, !noalias !64
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4, !noalias !64
  %13 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #8, !noalias !64
  %14 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %14, align 4, !noalias !64
  %15 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %12, i32* nonnull %14) #8, !noalias !64
  %16 = load i32, i32* %12, align 4, !noalias !64
  %17 = load i32, i32* %14, align 4, !noalias !64
  %18 = load i32, i32* %8, align 4, !noalias !64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #8, !noalias !64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8, !noalias !64
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = call i32 @MojoClose(i32 %18) #8
  br label %22

22:                                               ; preds = %20, %3
  store i32 %16, i32* %8, align 4, !noalias !64
  %23 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8, !noalias !64
  %24 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %17, i32* %25, align 4, !alias.scope !67, !noalias !64
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %24, %"class.mojo::ScopedHandleBase"* nonnull %4) #8
  %26 = load i32, i32* %25, align 4, !noalias !64
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = call i32 @MojoClose(i32 %26) #8
  br label %30

30:                                               ; preds = %22, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8, !noalias !64
  %31 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.mojo::Receiver.1924", %"class.mojo::Receiver.1924"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState.1925"* %35, %"struct.mojo::internal::PendingReceiverState"* nonnull %24, %"class.base::SequencedTaskRunner"* %2) #8
  br label %47

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.mojo::Receiver.1924", %"class.mojo::Receiver.1924"* %1, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %37) #8
  %38 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe.50"* %45 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %46) #8
  br label %47

47:                                               ; preds = %44, %39, %36, %34
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %24) #8
  ret void
}

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink35BackgroundFetchRegistrationObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState.1925"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState.1925", %"class.mojo::internal::BindingState.1925"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #15
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationObserverRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState.1925", %"class.mojo::internal::BindingState.1925"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserver5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #8
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe.50", %"class.base::RefCountedThreadSafe.50"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe.50"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #8
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #15
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink51BackgroundFetchRegistrationObserverRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState.1925", %"class.mojo::internal::BindingState.1925"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink35BackgroundFetchRegistrationObserver5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #8
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #2

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN5blink5mojom5blink16FetchAPIResponseEEC2IJN3WTF6VectorINS1_4KURLELj0ENS7_18PartitionAllocatorEEEtNS7_6StringEN7network5mojom17FetchResponseTypeElNSE_19FetchResponseSourceENS7_7HashMapISC_SC_NS7_10StringHashENS7_10HashTraitsISC_EESK_SA_EESC_SC_13scoped_refptrINS1_14BlobDataHandleEENS2_26ServiceWorkerResponseErrorEN4base4TimeESC_NS8_ISC_Lj0ESA_EESO_SO_NS0_INSE_5blink13ParsedHeadersEEEN3net16HttpResponseInfo14ConnectionInfoESC_bbN4absl8optionalINSW_17AuthChallengeInfoEEEEEENSQ_10in_place_tEDpOT_(%"class.mojo::StructPtr.732"*, %"class.WTF::Vector.736"* dereferenceable(16), i16* dereferenceable(2), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::HashMap.741"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.396* dereferenceable(8), i32* dereferenceable(4), %"class.base::Time"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.154"* dereferenceable(16), %class.scoped_refptr.396* dereferenceable(8), %class.scoped_refptr.396* dereferenceable(8), %"class.mojo::StructPtr.745"* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1), i8* dereferenceable(1), %"class.absl::optional.793"* dereferenceable(192)) unnamed_addr #0 comdat align 2 {
  %24 = alloca %"class.WTF::Vector.736", align 8
  %25 = alloca %"class.WTF::Vector.154", align 8
  %26 = alloca %"class.mojo::StructPtr.745", align 8
  %27 = tail call i8* @_Znwm(i64 384) #15
  %28 = bitcast i8* %27 to %"class.blink::mojom::blink::FetchAPIResponse"*
  %29 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %24, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %24, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.736"* %1 to i64*
  %32 = bitcast %"class.WTF::Vector.736"* %24 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.736"* %24 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %1, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %1, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = load i16, i16* %2, align 2
  %40 = load i32, i32* %4, align 4
  %41 = load i64, i64* %5, align 8
  %42 = load i32, i32* %6, align 4
  %43 = load i32, i32* %11, align 4
  %44 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %12, i64 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %25, i64 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %25, i64 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.WTF::Vector.154"* %14 to i64*
  %49 = bitcast %"class.WTF::Vector.154"* %25 to i64*
  store i64 0, i64* %49, align 8
  %50 = load i64, i64* %48, align 8
  %51 = bitcast %"class.WTF::Vector.154"* %25 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %14, i64 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %46, align 8
  store i32 0, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %14, i64 0, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %47, align 4
  store i32 0, i32* %54, align 4
  %56 = bitcast %"class.mojo::StructPtr.745"* %26 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.745", %"class.mojo::StructPtr.745"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.mojo::StructPtr.745"* %17 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  store i64 0, i64* %58, align 8
  %60 = load i32, i32* %18, align 4
  %61 = load i8, i8* %20, align 1, !range !3
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %21, align 1, !range !3
  %64 = icmp ne i8 %63, 0
  call void @_ZN5blink5mojom5blink16FetchAPIResponseC1EN3WTF6VectorINS_4KURLELj0ENS3_18PartitionAllocatorEEEtRKNS3_6StringEN7network5mojom17FetchResponseTypeElNSC_19FetchResponseSourceERKNS3_7HashMapIS8_S8_NS3_10StringHashENS3_10HashTraitsIS8_EESI_S6_EESA_SA_RK13scoped_refptrINS_14BlobDataHandleEENS0_26ServiceWorkerResponseErrorEN4base4TimeESA_NS4_IS8_Lj0ES6_EESQ_SQ_N4mojo9StructPtrINSC_5blink13ParsedHeadersEEEN3net16HttpResponseInfo14ConnectionInfoESA_bbRKN4absl8optionalINS10_17AuthChallengeInfoEEE(%"class.blink::mojom::blink::FetchAPIResponse"* nonnull %28, %"class.WTF::Vector.736"* nonnull %24, i16 zeroext %39, %"class.WTF::String"* dereferenceable(8) %3, i32 %40, i64 %41, i32 %42, %"class.WTF::HashMap.741"* dereferenceable(24) %7, %"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %9, %class.scoped_refptr.396* dereferenceable(8) %10, i32 %43, i64 %45, %"class.WTF::String"* dereferenceable(8) %13, %"class.WTF::Vector.154"* nonnull %25, %class.scoped_refptr.396* dereferenceable(8) %15, %class.scoped_refptr.396* dereferenceable(8) %16, %"class.mojo::StructPtr.745"* nonnull %26, i32 %60, %"class.WTF::String"* dereferenceable(8) %19, i1 zeroext %62, i1 zeroext %64, %"class.absl::optional.793"* dereferenceable(192) %22) #8
  %65 = ptrtoint i8* %27 to i64
  %66 = bitcast %"class.mojo::StructPtr.732"* %0 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.network::mojom::blink::ParsedHeaders"*, %"class.network::mojom::blink::ParsedHeaders"** %57, align 8
  store %"class.network::mojom::blink::ParsedHeaders"* null, %"class.network::mojom::blink::ParsedHeaders"** %57, align 8
  %68 = icmp eq %"class.network::mojom::blink::ParsedHeaders"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %23
  call void @_ZN7network5mojom5blink13ParsedHeadersD1Ev(%"class.network::mojom::blink::ParsedHeaders"* nonnull %67) #8
  %70 = bitcast %"class.network::mojom::blink::ParsedHeaders"* %67 to i8*
  call void @_ZdlPv(i8* %70) #15
  br label %71

71:                                               ; preds = %23, %69
  %72 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %25, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::String"*, %"class.WTF::String"** %72, align 8
  %74 = icmp eq %"class.WTF::String"* %73, null
  br i1 %74, label %108, label %75, !prof !19

75:                                               ; preds = %71
  %76 = bitcast %"class.WTF::String"* %73 to i8*
  %77 = load i32, i32* %47, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %106, label %79, !prof !2

79:                                               ; preds = %75
  %80 = zext i32 %77 to i64
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 %80
  br label %82

82:                                               ; preds = %100, %79
  %83 = phi %"class.WTF::String"* [ %101, %100 ], [ %73, %79 ]
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #8
  br label %100

100:                                              ; preds = %99, %96, %82
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 1
  %102 = icmp eq %"class.WTF::String"* %101, %81
  br i1 %102, label %103, label %82

103:                                              ; preds = %100
  store i32 0, i32* %47, align 4
  %104 = bitcast %"class.WTF::Vector.154"* %25 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %103, %75
  %107 = phi i8* [ %105, %103 ], [ %76, %75 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %107) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %72, align 8
  br label %108

108:                                              ; preds = %71, %106
  %109 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %24, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::KURL"*, %"class.blink::KURL"** %109, align 8
  %111 = icmp eq %"class.blink::KURL"* %110, null
  br i1 %111, label %127, label %112, !prof !19

112:                                              ; preds = %108
  %113 = load i32, i32* %30, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %124, label %115, !prof !2

115:                                              ; preds = %112
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %110, i64 %116
  br label %118

118:                                              ; preds = %118, %115
  %119 = phi %"class.blink::KURL"* [ %120, %118 ], [ %110, %115 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %119) #8
  %120 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %119, i64 1
  %121 = icmp eq %"class.blink::KURL"* %120, %117
  br i1 %121, label %122, label %118

122:                                              ; preds = %118
  store i32 0, i32* %30, align 4
  %123 = load %"class.blink::KURL"*, %"class.blink::KURL"** %109, align 8
  br label %124

124:                                              ; preds = %122, %112
  %125 = phi %"class.blink::KURL"* [ %110, %112 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %125, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %126) #8
  store %"class.blink::KURL"* null, %"class.blink::KURL"** %109, align 8
  br label %127

127:                                              ; preds = %108, %124
  ret void
}

declare void @_ZN5blink5mojom5blink16FetchAPIResponseC1EN3WTF6VectorINS_4KURLELj0ENS3_18PartitionAllocatorEEEtRKNS3_6StringEN7network5mojom17FetchResponseTypeElNSC_19FetchResponseSourceERKNS3_7HashMapIS8_S8_NS3_10StringHashENS3_10HashTraitsIS8_EESI_S6_EESA_SA_RK13scoped_refptrINS_14BlobDataHandleEENS0_26ServiceWorkerResponseErrorEN4base4TimeESA_NS4_IS8_Lj0ES6_EESQ_SQ_N4mojo9StructPtrINSC_5blink13ParsedHeadersEEEN3net16HttpResponseInfo14ConnectionInfoESA_bbRKN4absl8optionalINS10_17AuthChallengeInfoEEE(%"class.blink::mojom::blink::FetchAPIResponse"*, %"class.WTF::Vector.736"*, i16 zeroext, %"class.WTF::String"* dereferenceable(8), i32, i64, i32, %"class.WTF::HashMap.741"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %class.scoped_refptr.396* dereferenceable(8), i32, i64, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.154"*, %class.scoped_refptr.396* dereferenceable(8), %class.scoped_refptr.396* dereferenceable(8), %"class.mojo::StructPtr.745"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.absl::optional.793"* dereferenceable(192)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13ParsedHeadersD1Ev(%"class.network::mojom::blink::ParsedHeaders"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorIN5blink4KURLELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS6_(%"class.WTF::Vector.736"* noalias sret, %"class.WTF::Vector.736"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.736"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %43, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.736"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = udiv i64 %13, 112
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::KURL"*, %"class.blink::KURL"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %43, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  br label %27

27:                                               ; preds = %25, %40
  %28 = phi %"class.blink::KURL"* [ %21, %25 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %26) #8
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %28) #8
  %29 = load i32, i32* %6, align 4
  %30 = load i32, i32* %5, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %39, label %32, !prof !2

32:                                               ; preds = %27
  %33 = load %"class.blink::KURL"*, %"class.blink::KURL"** %4, align 8
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %33, i64 %34, i32 0
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %36, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  %37 = load i32, i32* %6, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %6, align 4
  br label %40

39:                                               ; preds = %27
  call void @_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.736"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #8
  br label %40

40:                                               ; preds = %32, %39
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %26) #8
  %41 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %28, i64 1
  %42 = icmp eq %"class.blink::KURL"* %41, %23
  br i1 %42, label %43, label %27

43:                                               ; preds = %40, %2, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.736"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::KURL"*, %"class.blink::KURL"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.736"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::KURL"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::KURL"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %16, %"class.blink::KURL"* dereferenceable(112) %15) #8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %15) #8
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %15, i64 1
  %19 = icmp eq %"class.blink::KURL"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #8
  br label %51

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm(i64 %23) #8
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #8
  %26 = udiv i64 %24, 112
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::KURL"*, %"class.blink::KURL"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %22
  %36 = bitcast i8* %25 to %"class.blink::KURL"*
  br label %37

37:                                               ; preds = %35, %37
  %38 = phi %"class.blink::KURL"* [ %41, %37 ], [ %29, %35 ]
  %39 = phi %"class.blink::KURL"* [ %40, %37 ], [ %36, %35 ]
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %39, %"class.blink::KURL"* dereferenceable(112) %38) #8
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %38) #8
  %40 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %39, i64 1
  %41 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %38, i64 1
  %42 = icmp eq %"class.blink::KURL"* %41, %33
  br i1 %42, label %43, label %37

43:                                               ; preds = %37
  %44 = load %"class.blink::KURL"*, %"class.blink::KURL"** %28, align 8
  br label %45

45:                                               ; preds = %43, %22
  %46 = phi %"class.blink::KURL"* [ %44, %43 ], [ %29, %22 ]
  %47 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %46, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #8
  %48 = bitcast %"class.WTF::Vector.736"* %0 to i64*
  store atomic i64 %27, i64* %48 monotonic, align 8
  %49 = trunc i64 %26 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %45, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 19155236
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 19155236) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 112
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.736"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::KURL"*, %"class.blink::KURL"** %6, align 8
  %8 = icmp ugt %"class.blink::KURL"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 %10
  %12 = icmp ugt %"class.blink::KURL"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::KURL"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.736"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 112
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::KURL"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.736"* %0, i32 %22) #8
  %36 = load %"class.blink::KURL"*, %"class.blink::KURL"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::KURL"* %1 to i64
  %39 = ptrtoint %"class.blink::KURL"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 112
  %42 = getelementptr inbounds %"class.WTF::Vector.736", %"class.WTF::Vector.736"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::KURL"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink4KURLEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink4KURLEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.736"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 112
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::KURL"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink4KURLELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.736"* %0, i32 %50) #8
  %64 = load %"class.blink::KURL"*, %"class.blink::KURL"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::KURL"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::KURL"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::KURL"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %69, i64 %72, i32 0
  %74 = bitcast i8* %73 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %74, %"class.blink::KURL"* dereferenceable(112) %70) #8
  %75 = load i32, i32* %3, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapINS1_6StringES3_NS1_10StringHashENS1_10HashTraitsIS3_EES6_NS1_18PartitionAllocatorEEELb0EE5CloneERKS8_(%"class.WTF::HashMap.741"* noalias sret, %"class.WTF::HashMap.741"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.741"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.741"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  %7 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.695"* [ %23, %22 ], [ %11, %16 ]
  %20 = bitcast %"struct.WTF::KeyValuePair.695"* %19 to i64*
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %25 [
    i64 -1, label %22
    i64 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.695"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.695"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.695"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.WTF::String"* %3 to i8*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %31 = bitcast %"class.WTF::String"* %4 to i8*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::HashMap.741", %"class.WTF::HashMap.741"* %0, i64 0, i32 0
  br label %35

34:                                               ; preds = %22, %111, %121, %118, %2, %25
  ret void

35:                                               ; preds = %28, %121
  %36 = phi %"struct.WTF::KeyValuePair.695"* [ %26, %28 ], [ %115, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #8
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  call void @llvm.trap() #8
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %35, %40, %55
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %36, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #8
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  call void @llvm.trap() #8
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %57, %61, %76
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %32, align 8
  %79 = call { %"struct.WTF::KeyValuePair.695"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.742"* %33, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #8
  br label %95

95:                                               ; preds = %78, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #8
  br label %111

111:                                              ; preds = %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %36, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair.695"* %112, %15
  br i1 %113, label %34, label %114

114:                                              ; preds = %111, %118
  %115 = phi %"struct.WTF::KeyValuePair.695"* [ %119, %118 ], [ %112, %111 ]
  %116 = bitcast %"struct.WTF::KeyValuePair.695"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  switch i64 %117, label %121 [
    i64 -1, label %118
    i64 0, label %118
  ]

118:                                              ; preds = %114, %114
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %115, i64 1
  %120 = icmp eq %"struct.WTF::KeyValuePair.695"* %119, %15
  br i1 %120, label %34, label %114

121:                                              ; preds = %114
  %122 = icmp eq %"struct.WTF::KeyValuePair.695"* %115, %15
  br i1 %122, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.695"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EES1_S1_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.742"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.695"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.742"* %0, %"struct.WTF::KeyValuePair.695"* null)
  %9 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.695"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #8
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.695"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.695"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.695"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #8
  br i1 %57, label %133, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.695"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.695"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.695"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.695"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.695"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %79, i64 0, i32 1
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %102 = bitcast %"class.WTF::String"* %2 to i64*
  %103 = load i64, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %104 = bitcast %"class.WTF::String"* %100 to i64*
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  store i64 %103, i64* %104, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #8
  br label %121

121:                                              ; preds = %99, %117, %120
  %122 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 2
  %123 = load i32, i32* %122, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, %124
  %128 = shl i32 %127, 1
  %129 = load i32, i32* %12, align 8
  %130 = icmp ult i32 %128, %129
  br i1 %130, label %133, label %131

131:                                              ; preds = %121
  %132 = tail call %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.742"* %0, %"struct.WTF::KeyValuePair.695"* %79)
  br label %133

133:                                              ; preds = %54, %121, %131
  %134 = phi i8 [ 1, %121 ], [ 1, %131 ], [ 0, %54 ]
  %135 = phi %"struct.WTF::KeyValuePair.695"* [ %79, %121 ], [ %132, %131 ], [ %47, %54 ]
  %136 = insertvalue { %"struct.WTF::KeyValuePair.695"*, i8 } undef, %"struct.WTF::KeyValuePair.695"* %135, 0
  %137 = insertvalue { %"struct.WTF::KeyValuePair.695"*, i8 } %136, i8 %134, 1
  ret { %"struct.WTF::KeyValuePair.695"*, i8 } %137
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.742"*, %"struct.WTF::KeyValuePair.695"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.695"*
  %37 = call %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.742"* %0, %"struct.WTF::KeyValuePair.695"* %36, i32 %32, %"struct.WTF::KeyValuePair.695"* %1) #8
  ret %"struct.WTF::KeyValuePair.695"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.742"*, %"struct.WTF::KeyValuePair.695"*, i32, %"struct.WTF::KeyValuePair.695"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.742", align 8
  %6 = bitcast %"class.WTF::HashTable.742"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.742"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.695"* %1, %"struct.WTF::KeyValuePair.695"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.695"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.742"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.742"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.695"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.742"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.742"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.695"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.695"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.695"* nonnull %37, i32 %34) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair.695"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.695"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.695"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.695"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.742"* nonnull %5, %"struct.WTF::KeyValuePair.695"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.695"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.695"* %53, %"struct.WTF::KeyValuePair.695"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.695"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.695"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.695"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.695"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.742"*, %"struct.WTF::KeyValuePair.695"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.695"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.742"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.695"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #8
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.695"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.695"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.695"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.695"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.742"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.695"*, %"struct.WTF::KeyValuePair.695"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.742", %"class.WTF::HashTable.742"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.695"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.695"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.695"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.695"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.695"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.695"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.695"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.695"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #8
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.695"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.695"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.695"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.695"*, i8 } undef, %"struct.WTF::KeyValuePair.695"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.695"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.695"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.695"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.695"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.695"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #8
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.695", %"struct.WTF::KeyValuePair.695"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #8
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* noalias sret, %"class.WTF::Vector.154"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.154"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.154"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %25, %78
  %29 = phi %"class.WTF::String"* [ %21, %25 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #8
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  call void @llvm.trap() #8
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %28, %33, %48
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %27, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %5, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !2

54:                                               ; preds = %50
  %55 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %57
  %59 = bitcast %"class.WTF::String"* %58 to i64*
  store i64 %55, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %60 = load i32, i32* %6, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %78

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.154"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #8
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #8
  br label %78

78:                                               ; preds = %54, %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %80 = icmp eq %"class.WTF::String"* %79, %23
  br i1 %80, label %81, label %28

81:                                               ; preds = %78, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.154"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.154"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !19

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.154"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.154"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !19

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.154"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !19

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.154"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.154"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13ParsedHeaders5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.745"* noalias sret, %"class.network::mojom::blink::ParsedHeaders"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.604", align 8
  %4 = alloca %"class.mojo::StructPtr.749", align 8
  %5 = alloca %"struct.network::CrossOriginEmbedderPolicy", align 8
  %6 = alloca %"struct.network::CrossOriginOpenerPolicy", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.absl::optional.761", align 8
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = alloca %"class.absl::optional.761", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.WTF::Vector.771", align 8
  %13 = alloca %"class.mojo::StructPtr.783", align 8
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.604"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.604"* nonnull sret %3, %"class.WTF::Vector.604"* dereferenceable(16) %16) #8
  %17 = bitcast %"class.mojo::StructPtr.749"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %18, align 8, !noalias !70
  %20 = icmp eq %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.749"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !70
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink23AllowCSPFromHeaderValue5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.749"* nonnull sret %4, %"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %19) #8
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"struct.network::CrossOriginEmbedderPolicy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 2
  call void @_ZN7network25CrossOriginEmbedderPolicyC1ERKS0_(%"struct.network::CrossOriginEmbedderPolicy"* nonnull %5, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %26) #8
  %27 = bitcast %"struct.network::CrossOriginOpenerPolicy"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 3
  call void @_ZN7network23CrossOriginOpenerPolicyC1ERKS0_(%"struct.network::CrossOriginOpenerPolicy"* nonnull %6, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80) %28) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %29 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !3
  store i8 %30, i8* %7, align 1
  %31 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 6
  call void @_ZN4mojo11CloneTraitsIN4absl8optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS3_18PartitionAllocatorEEEEELb0EE5CloneERKSA_(%"class.absl::optional.761"* nonnull sret %8, %"class.absl::optional.761"* dereferenceable(24) %32) #8
  %33 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 7, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 8
  call void @_ZN4mojo11CloneTraitsIN4absl8optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS3_18PartitionAllocatorEEEEELb0EE5CloneERKSA_(%"class.absl::optional.761"* nonnull sret %10, %"class.absl::optional.761"* dereferenceable(24) %38) #8
  %39 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 9
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %11, align 4
  %42 = bitcast %"class.WTF::Vector.771"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 11
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.771"* nonnull sret %12, %"class.WTF::Vector.771"* dereferenceable(16) %43) #8
  %44 = bitcast %"class.mojo::StructPtr.783"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  %45 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %45, align 8, !noalias !77
  %47 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %24
  %49 = bitcast %"class.mojo::StructPtr.783"* %13 to i64*
  store i64 0, i64* %49, align 8, !alias.scope !77
  br label %51

50:                                               ; preds = %24
  call void @_ZNK7network5mojom5blink17TimingAllowOrigin5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.783"* nonnull sret %13, %"class.network::mojom::blink::TimingAllowOrigin"* nonnull %46) #8
  br label %51

51:                                               ; preds = %48, %50
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  %52 = getelementptr inbounds %"class.network::mojom::blink::ParsedHeaders", %"class.network::mojom::blink::ParsedHeaders"* %1, i64 0, i32 13
  %53 = load i8, i8* %52, align 1, !range !3
  store i8 %53, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEENS1_25CrossOriginEmbedderPolicyENS1_23CrossOriginOpenerPolicyEbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEEN4base9TimeDeltaESL_NS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEEbEEENSM_10in_place_tEDpOT_(%"class.mojo::StructPtr.745"* %0, %"class.WTF::Vector.604"* nonnull dereferenceable(16) %3, %"class.mojo::StructPtr.749"* nonnull dereferenceable(8) %4, %"struct.network::CrossOriginEmbedderPolicy"* nonnull dereferenceable(80) %5, %"struct.network::CrossOriginOpenerPolicy"* nonnull dereferenceable(80) %6, i8* nonnull dereferenceable(1) %7, %"class.absl::optional.761"* nonnull dereferenceable(24) %8, %"class.base::TimeDelta"* nonnull dereferenceable(8) %9, %"class.absl::optional.761"* nonnull dereferenceable(24) %10, i32* nonnull dereferenceable(4) %11, %"class.WTF::Vector.771"* nonnull dereferenceable(16) %12, %"class.mojo::StructPtr.783"* nonnull dereferenceable(8) %13, i8* nonnull dereferenceable(1) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.783", %"class.mojo::StructPtr.783"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %54, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %54, align 8
  %56 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  call void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %55) #8
  %58 = bitcast %"class.network::mojom::blink::TimingAllowOrigin"* %55 to i8*
  call void @_ZdlPv(i8* %58) #15
  br label %59

59:                                               ; preds = %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  %60 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %12, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %60, align 8
  %62 = icmp eq %"class.mojo::StructPtr.774"* %61, null
  br i1 %62, label %86, label %63, !prof !19

63:                                               ; preds = %59
  %64 = bitcast %"class.mojo::StructPtr.774"* %61 to i8*
  %65 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %12, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %84, label %68, !prof !2

68:                                               ; preds = %63
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %61, i64 %69
  br label %71

71:                                               ; preds = %78, %68
  %72 = phi %"class.mojo::StructPtr.774"* [ %79, %78 ], [ %61, %68 ]
  %73 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %73, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %73, align 8
  %75 = icmp eq %"class.network::mojom::blink::LinkHeader"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %74) #8
  %77 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %74, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %76, %71
  %79 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %72, i64 1
  %80 = icmp eq %"class.mojo::StructPtr.774"* %79, %70
  br i1 %80, label %81, label %71

81:                                               ; preds = %78
  store i32 0, i32* %65, align 4
  %82 = bitcast %"class.WTF::Vector.771"* %12 to i8**
  %83 = load i8*, i8** %82, align 8
  br label %84

84:                                               ; preds = %81, %63
  %85 = phi i8* [ %83, %81 ], [ %64, %63 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %85) #8
  store %"class.mojo::StructPtr.774"* null, %"class.mojo::StructPtr.774"** %60, align 8
  br label %86

86:                                               ; preds = %59, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #8
  %87 = load i8, i8* %37, align 8, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %101, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = icmp eq i32* %91, null
  %93 = bitcast i32* %91 to i8*
  br i1 %92, label %100, label %94, !prof !19

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98, !prof !2

98:                                               ; preds = %94
  store i32 0, i32* %95, align 4
  br label %99

99:                                               ; preds = %98, %94
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #8
  store i32* null, i32** %90, align 8
  br label %100

100:                                              ; preds = %99, %89
  store i8 0, i8* %37, align 8
  br label %101

101:                                              ; preds = %86, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %102 = load i8, i8* %31, align 8, !range !3
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  %108 = bitcast i32* %106 to i8*
  br i1 %107, label %115, label %109, !prof !19

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %114, label %113, !prof !2

113:                                              ; preds = %109
  store i32 0, i32* %110, align 4
  br label %114

114:                                              ; preds = %113, %109
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #8
  store i32* null, i32** %105, align 8
  br label %115

115:                                              ; preds = %114, %104
  store i8 0, i8* %31, align 8
  br label %116

116:                                              ; preds = %101, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @_ZN7network23CrossOriginOpenerPolicyD1Ev(%"struct.network::CrossOriginOpenerPolicy"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %27) #8
  call void @_ZN7network25CrossOriginEmbedderPolicyD1Ev(%"struct.network::CrossOriginEmbedderPolicy"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #8
  %117 = getelementptr inbounds %"class.mojo::StructPtr.749", %"class.mojo::StructPtr.749"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %117, align 8
  store %"class.network::mojom::blink::AllowCSPFromHeaderValue"* null, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %118) #8
  %121 = bitcast %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %118 to i8*
  call void @_ZdlPv(i8* %121) #15
  br label %122

122:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %123 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %3, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %123, align 8
  %125 = icmp eq %"class.mojo::StructPtr.607"* %124, null
  br i1 %125, label %149, label %126, !prof !19

126:                                              ; preds = %122
  %127 = bitcast %"class.mojo::StructPtr.607"* %124 to i8*
  %128 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %3, i64 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %147, label %131, !prof !2

131:                                              ; preds = %126
  %132 = zext i32 %129 to i64
  %133 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %124, i64 %132
  br label %134

134:                                              ; preds = %141, %131
  %135 = phi %"class.mojo::StructPtr.607"* [ %142, %141 ], [ %124, %131 ]
  %136 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %136, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %136, align 8
  %138 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %137) #8
  %140 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %137 to i8*
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %139, %134
  %142 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %135, i64 1
  %143 = icmp eq %"class.mojo::StructPtr.607"* %142, %133
  br i1 %143, label %144, label %134

144:                                              ; preds = %141
  store i32 0, i32* %128, align 4
  %145 = bitcast %"class.WTF::Vector.604"* %3 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %144, %126
  %148 = phi i8* [ %146, %144 ], [ %127, %126 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #8
  store %"class.mojo::StructPtr.607"* null, %"class.mojo::StructPtr.607"** %123, align 8
  br label %149

149:                                              ; preds = %122, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network23CrossOriginOpenerPolicyD1Ev(%"struct.network::CrossOriginOpenerPolicy"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7network25CrossOriginEmbedderPolicyD1Ev(%"struct.network::CrossOriginEmbedderPolicy"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEEC2IJN3WTF6VectorINS0_INS3_21ContentSecurityPolicyEEELj0ENS7_18PartitionAllocatorEEENS0_INS3_23AllowCSPFromHeaderValueEEENS1_25CrossOriginEmbedderPolicyENS1_23CrossOriginOpenerPolicyEbN4absl8optionalINS8_INS2_18WebClientHintsTypeELj0ESB_EEEEN4base9TimeDeltaESL_NS2_18XFrameOptionsValueENS8_INS0_INS3_10LinkHeaderEEELj0ESB_EENS0_INS3_17TimingAllowOriginEEEbEEENSM_10in_place_tEDpOT_(%"class.mojo::StructPtr.745"*, %"class.WTF::Vector.604"* dereferenceable(16), %"class.mojo::StructPtr.749"* dereferenceable(8), %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80), %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80), i8* dereferenceable(1), %"class.absl::optional.761"* dereferenceable(24), %"class.base::TimeDelta"* dereferenceable(8), %"class.absl::optional.761"* dereferenceable(24), i32* dereferenceable(4), %"class.WTF::Vector.771"* dereferenceable(16), %"class.mojo::StructPtr.783"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.604", align 8
  %15 = alloca %"class.mojo::StructPtr.749", align 8
  %16 = alloca %"class.absl::optional.761", align 8
  %17 = alloca %"class.absl::optional.761", align 8
  %18 = alloca %"class.WTF::Vector.771", align 8
  %19 = alloca %"class.mojo::StructPtr.783", align 8
  %20 = tail call i8* @_Znwm(i64 288) #15
  %21 = bitcast i8* %20 to %"class.network::mojom::blink::ParsedHeaders"*
  %22 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %14, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %14, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::Vector.604"* %1 to i64*
  %25 = bitcast %"class.WTF::Vector.604"* %14 to i64*
  store i64 0, i64* %25, align 8
  %26 = load i64, i64* %24, align 8
  %27 = bitcast %"class.WTF::Vector.604"* %14 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %1, i64 0, i32 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %22, align 8
  store i32 0, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %1, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %23, align 4
  store i32 0, i32* %30, align 4
  %32 = bitcast %"class.mojo::StructPtr.749"* %15 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.749", %"class.mojo::StructPtr.749"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.749"* %2 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = load i8, i8* %5, align 1, !range !3
  %37 = icmp ne i8 %36, 0
  %38 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #8
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %55, label %42

42:                                               ; preds = %13
  %43 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.WTF::Vector.766"* %43 to i64*
  %48 = bitcast %"class.WTF::Vector.766"* %44 to i64*
  store i64 0, i64* %48, align 8
  %49 = load i64, i64* %47, align 8
  %50 = bitcast %"class.WTF::Vector.766"* %44 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %45, align 8
  store i32 0, i32* %51, align 4
  %53 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %46, align 4
  store i32 0, i32* %53, align 4
  store i8 1, i8* %38, align 8
  br label %55

55:                                               ; preds = %13, %42
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #8
  %60 = load i8, i8* %59, align 8, !range !3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %75, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"class.WTF::Vector.766"* %63 to i64*
  %68 = bitcast %"class.WTF::Vector.766"* %64 to i64*
  store i64 0, i64* %68, align 8
  %69 = load i64, i64* %67, align 8
  %70 = bitcast %"class.WTF::Vector.766"* %64 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %65, align 8
  store i32 0, i32* %71, align 4
  %73 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %66, align 4
  store i32 0, i32* %73, align 4
  store i8 1, i8* %58, align 8
  br label %75

75:                                               ; preds = %55, %62
  %76 = load i32, i32* %9, align 4
  %77 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %18, i64 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %18, i64 0, i32 0, i32 0, i32 2
  %79 = bitcast %"class.WTF::Vector.771"* %10 to i64*
  %80 = bitcast %"class.WTF::Vector.771"* %18 to i64*
  store i64 0, i64* %80, align 8
  %81 = load i64, i64* %79, align 8
  %82 = bitcast %"class.WTF::Vector.771"* %18 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %10, i64 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %77, align 8
  store i32 0, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %10, i64 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %78, align 4
  store i32 0, i32* %85, align 4
  %87 = bitcast %"class.mojo::StructPtr.783"* %19 to i64*
  %88 = getelementptr inbounds %"class.mojo::StructPtr.783", %"class.mojo::StructPtr.783"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.mojo::StructPtr.783"* %11 to i64*
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %87, align 8
  store i64 0, i64* %89, align 8
  %91 = load i8, i8* %12, align 1, !range !3
  %92 = icmp ne i8 %91, 0
  call void @_ZN7network5mojom5blink13ParsedHeadersC1EN3WTF6VectorIN4mojo9StructPtrINS1_21ContentSecurityPolicyEEELj0ENS3_18PartitionAllocatorEEENS6_INS1_23AllowCSPFromHeaderValueEEERKNS_25CrossOriginEmbedderPolicyERKNS_23CrossOriginOpenerPolicyEbN4absl8optionalINS4_INS0_18WebClientHintsTypeELj0ES9_EEEEN4base9TimeDeltaESN_NS0_18XFrameOptionsValueENS4_INS6_INS1_10LinkHeaderEEELj0ES9_EENS6_INS1_17TimingAllowOriginEEEb(%"class.network::mojom::blink::ParsedHeaders"* nonnull %21, %"class.WTF::Vector.604"* nonnull %14, %"class.mojo::StructPtr.749"* nonnull %15, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %3, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80) %4, i1 zeroext %37, %"class.absl::optional.761"* nonnull %16, i64 %57, %"class.absl::optional.761"* nonnull %17, i32 %76, %"class.WTF::Vector.771"* nonnull %18, %"class.mojo::StructPtr.783"* nonnull %19, i1 zeroext %92) #8
  %93 = ptrtoint i8* %20 to i64
  %94 = bitcast %"class.mojo::StructPtr.745"* %0 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.network::mojom::blink::TimingAllowOrigin"*, %"class.network::mojom::blink::TimingAllowOrigin"** %88, align 8
  store %"class.network::mojom::blink::TimingAllowOrigin"* null, %"class.network::mojom::blink::TimingAllowOrigin"** %88, align 8
  %96 = icmp eq %"class.network::mojom::blink::TimingAllowOrigin"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %75
  call void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %95) #8
  %98 = bitcast %"class.network::mojom::blink::TimingAllowOrigin"* %95 to i8*
  call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %75, %97
  %100 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %18, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %100, align 8
  %102 = icmp eq %"class.mojo::StructPtr.774"* %101, null
  br i1 %102, label %125, label %103, !prof !19

103:                                              ; preds = %99
  %104 = bitcast %"class.mojo::StructPtr.774"* %101 to i8*
  %105 = load i32, i32* %78, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %123, label %107, !prof !2

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %101, i64 %108
  br label %110

110:                                              ; preds = %117, %107
  %111 = phi %"class.mojo::StructPtr.774"* [ %118, %117 ], [ %101, %107 ]
  %112 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %111, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %112, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %112, align 8
  %114 = icmp eq %"class.network::mojom::blink::LinkHeader"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %110
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %113) #8
  %116 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %113, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %116) #15
  br label %117

117:                                              ; preds = %115, %110
  %118 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %111, i64 1
  %119 = icmp eq %"class.mojo::StructPtr.774"* %118, %109
  br i1 %119, label %120, label %110

120:                                              ; preds = %117
  store i32 0, i32* %78, align 4
  %121 = bitcast %"class.WTF::Vector.771"* %18 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %103
  %124 = phi i8* [ %122, %120 ], [ %104, %103 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #8
  store %"class.mojo::StructPtr.774"* null, %"class.mojo::StructPtr.774"** %100, align 8
  br label %125

125:                                              ; preds = %99, %123
  %126 = load i8, i8* %58, align 8, !range !3
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %140, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %130 = load i32*, i32** %129, align 8
  %131 = icmp eq i32* %130, null
  %132 = bitcast i32* %130 to i8*
  br i1 %131, label %139, label %133, !prof !19

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %138, label %137, !prof !2

137:                                              ; preds = %133
  store i32 0, i32* %134, align 4
  br label %138

138:                                              ; preds = %137, %133
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %132) #8
  store i32* null, i32** %129, align 8
  br label %139

139:                                              ; preds = %138, %128
  store i8 0, i8* %58, align 8
  br label %140

140:                                              ; preds = %125, %139
  %141 = load i8, i8* %38, align 8, !range !3
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %155, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = icmp eq i32* %145, null
  %147 = bitcast i32* %145 to i8*
  br i1 %146, label %154, label %148, !prof !19

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %153, label %152, !prof !2

152:                                              ; preds = %148
  store i32 0, i32* %149, align 4
  br label %153

153:                                              ; preds = %152, %148
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %147) #8
  store i32* null, i32** %144, align 8
  br label %154

154:                                              ; preds = %153, %143
  store i8 0, i8* %38, align 8
  br label %155

155:                                              ; preds = %140, %154
  %156 = load %"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %33, align 8
  store %"class.network::mojom::blink::AllowCSPFromHeaderValue"* null, %"class.network::mojom::blink::AllowCSPFromHeaderValue"** %33, align 8
  %157 = icmp eq %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %156) #8
  %159 = bitcast %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %156 to i8*
  call void @_ZdlPv(i8* %159) #15
  br label %160

160:                                              ; preds = %155, %158
  %161 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %14, i64 0, i32 0, i32 0, i32 0
  %162 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %161, align 8
  %163 = icmp eq %"class.mojo::StructPtr.607"* %162, null
  br i1 %163, label %186, label %164, !prof !19

164:                                              ; preds = %160
  %165 = bitcast %"class.mojo::StructPtr.607"* %162 to i8*
  %166 = load i32, i32* %23, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %168, !prof !2

168:                                              ; preds = %164
  %169 = zext i32 %166 to i64
  %170 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %162, i64 %169
  br label %171

171:                                              ; preds = %178, %168
  %172 = phi %"class.mojo::StructPtr.607"* [ %179, %178 ], [ %162, %168 ]
  %173 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %172, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %173, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %173, align 8
  %175 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %171
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %174) #8
  %177 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %174 to i8*
  call void @_ZdlPv(i8* %177) #15
  br label %178

178:                                              ; preds = %176, %171
  %179 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %172, i64 1
  %180 = icmp eq %"class.mojo::StructPtr.607"* %179, %170
  br i1 %180, label %181, label %171

181:                                              ; preds = %178
  store i32 0, i32* %23, align 4
  %182 = bitcast %"class.WTF::Vector.604"* %14 to i8**
  %183 = load i8*, i8** %182, align 8
  br label %184

184:                                              ; preds = %181, %164
  %185 = phi i8* [ %183, %181 ], [ %165, %164 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %185) #8
  store %"class.mojo::StructPtr.607"* null, %"class.mojo::StructPtr.607"** %161, align 8
  br label %186

186:                                              ; preds = %160, %184
  ret void
}

declare void @_ZN7network5mojom5blink13ParsedHeadersC1EN3WTF6VectorIN4mojo9StructPtrINS1_21ContentSecurityPolicyEEELj0ENS3_18PartitionAllocatorEEENS6_INS1_23AllowCSPFromHeaderValueEEERKNS_25CrossOriginEmbedderPolicyERKNS_23CrossOriginOpenerPolicyEbN4absl8optionalINS4_INS0_18WebClientHintsTypeELj0ES9_EEEEN4base9TimeDeltaESN_NS0_18XFrameOptionsValueENS4_INS6_INS1_10LinkHeaderEEELj0ES9_EENS6_INS1_17TimingAllowOriginEEEb(%"class.network::mojom::blink::ParsedHeaders"*, %"class.WTF::Vector.604"*, %"class.mojo::StructPtr.749"*, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80), %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80), i1 zeroext, %"class.absl::optional.761"*, i64, %"class.absl::optional.761"*, i32, %"class.WTF::Vector.771"*, %"class.mojo::StructPtr.783"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink17TimingAllowOriginD1Ev(%"class.network::mojom::blink::TimingAllowOrigin"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.604"* noalias sret, %"class.WTF::Vector.604"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.607", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.604"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.604"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.607"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.607"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.607"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %31, align 8, !noalias !84
  %33 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !84
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.607"* nonnull sret %3, %"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %32) #8
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.607"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.604"* %0, %"class.mojo::StructPtr.607"* nonnull dereferenceable(8) %3) #8
  %50 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %50 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %50) #8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %55 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.607"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.604"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.607"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.604"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.607"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.607"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.607"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.607"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !91

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.607"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.607"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.607"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.607"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.607"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.607"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.607"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.607"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.607"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.607"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.607"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.607"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.607"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #8
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.607"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.607"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.607"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.607"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.607"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.607"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !93

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.607"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.607"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.607"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.607"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.607"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.607"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.607"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.607"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.607"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.607"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.607"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.607"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.607"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.604"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #8
  %149 = bitcast %"class.WTF::Vector.604"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.604"*, %"class.mojo::StructPtr.607"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.607"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.607"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.607"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.604"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.607"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.604"* %0, i32 %22) #8
  %36 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.607"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.607"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.604", %"class.WTF::Vector.604"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.607"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.604"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.607"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.604"* %0, i32 %50) #8
  %64 = load %"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.607"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.607"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.607"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.607"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.607"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.607", %"class.mojo::StructPtr.607"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.607"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.607"* noalias sret, %"class.network::mojom::blink::ContentSecurityPolicy"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.mojo::StructPtr.611", align 8
  %5 = alloca %"class.WTF::HashMap.618", align 8
  %6 = alloca %"class.WTF::HashMap.623", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.mojo::InlinedStructPtr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.154", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.mojo::StructPtr.628", align 8
  %16 = alloca %"class.WTF::Vector.154", align 8
  %17 = bitcast %"class.mojo::StructPtr.611"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %18, align 8, !noalias !94
  %20 = icmp eq %"class.network::mojom::blink::CSPSource"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.611"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !94
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.611"* nonnull sret %4, %"class.network::mojom::blink::CSPSource"* nonnull %19) #8
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"class.WTF::HashMap.618"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.618"* nonnull sret %5, %"class.WTF::HashMap.618"* dereferenceable(24) %26) #8
  %27 = bitcast %"class.WTF::HashMap.623"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.623"* nonnull sret %6, %"class.WTF::HashMap.623"* dereferenceable(24) %28) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %29 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !3
  store i8 %30, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  %31 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !3
  store i8 %32, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !3
  store i8 %34, i8* %9, align 1
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast %"class.mojo::InlinedStructPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !101
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #8, !alias.scope !101
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %43) #8
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 0, i32* %44, align 8, !alias.scope !101
  br label %91

45:                                               ; preds = %24
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8, !noalias !108
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8, !noalias !108
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #8
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %55
  call void @llvm.trap() #8
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %45
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %68, align 8, !noalias !108
  %69 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !108
  %71 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 2
  %72 = load i32, i32* %71, align 4, !noalias !108
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %73, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %70, i32 %72) #8
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 1, i32* %74, align 8, !alias.scope !111
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8, !noalias !108
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #8
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8, !noalias !108
  br label %91

91:                                               ; preds = %42, %90
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %92 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 8
  %93 = load i8, i8* %92, align 1, !range !3
  store i8 %93, i8* %12, align 1
  %94 = bitcast %"class.WTF::Vector.154"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #8
  %95 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 9
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %13, %"class.WTF::Vector.154"* dereferenceable(16) %95) #8
  %96 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #8
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 10
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %14, align 4
  %99 = bitcast %"class.mojo::StructPtr.628"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #8
  %100 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %100, align 8, !noalias !114
  %102 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = bitcast %"class.mojo::StructPtr.628"* %15 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !114
  br label %106

105:                                              ; preds = %91
  call void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.628"* nonnull sret %15, %"class.network::mojom::blink::CSPTrustedTypes"* nonnull %101) #8
  br label %106

106:                                              ; preds = %103, %105
  %107 = bitcast %"class.WTF::Vector.154"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #8
  %108 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %16, %"class.WTF::Vector.154"* dereferenceable(16) %108) #8
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.607"* %0, %"class.mojo::StructPtr.611"* nonnull dereferenceable(8) %4, %"class.WTF::HashMap.618"* nonnull dereferenceable(24) %5, %"class.WTF::HashMap.623"* nonnull dereferenceable(24) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i32* nonnull dereferenceable(4) %10, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %11, i8* nonnull dereferenceable(1) %12, %"class.WTF::Vector.154"* nonnull dereferenceable(16) %13, i32* nonnull dereferenceable(4) %14, %"class.mojo::StructPtr.628"* nonnull dereferenceable(8) %15, %"class.WTF::Vector.154"* nonnull dereferenceable(16) %16) #8
  %109 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %16, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  %111 = icmp eq %"class.WTF::String"* %110, null
  br i1 %111, label %146, label %112, !prof !19

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::String"* %110 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %16, i64 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !2

117:                                              ; preds = %112
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.WTF::String"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #8
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %114, align 4
  %142 = bitcast %"class.WTF::Vector.154"* %16 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %112
  %145 = phi i8* [ %143, %141 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %146

146:                                              ; preds = %106, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #8
  %147 = getelementptr inbounds %"class.mojo::StructPtr.628", %"class.mojo::StructPtr.628"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  %149 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %148) #8
  %151 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %148 to i8*
  call void @_ZdlPv(i8* %151) #15
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #8
  %153 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %13, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::String"*, %"class.WTF::String"** %153, align 8
  %155 = icmp eq %"class.WTF::String"* %154, null
  br i1 %155, label %190, label %156, !prof !19

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::String"* %154 to i8*
  %158 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %13, i64 0, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161, !prof !2

161:                                              ; preds = %156
  %162 = zext i32 %159 to i64
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 %162
  br label %164

164:                                              ; preds = %182, %161
  %165 = phi %"class.WTF::String"* [ %183, %182 ], [ %154, %161 ]
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #8
  br label %182

182:                                              ; preds = %181, %178, %164
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %184 = icmp eq %"class.WTF::String"* %183, %163
  br i1 %184, label %185, label %164

185:                                              ; preds = %182
  store i32 0, i32* %158, align 4
  %186 = bitcast %"class.WTF::Vector.154"* %13 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %156
  %189 = phi i8* [ %187, %185 ], [ %157, %156 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %153, align 8
  br label %190

190:                                              ; preds = %152, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  %191 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %191) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  %192 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %6, i64 0, i32 0, i32 0
  %193 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %192, align 8
  %194 = icmp eq %"struct.WTF::KeyValuePair.627"* %193, null
  br i1 %194, label %217, label %195, !prof !19

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %6, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  br label %201

201:                                              ; preds = %212, %199
  %202 = phi i64 [ 0, %199 ], [ %213, %212 ]
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %193, i64 %202, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, -1000001
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %193, i64 %202, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  %209 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %208) #8
  %211 = bitcast %"class.network::mojom::blink::CSPSourceList"* %208 to i8*
  call void @_ZdlPv(i8* %211) #15
  br label %212

212:                                              ; preds = %210, %206, %201
  %213 = add nuw nsw i64 %202, 1
  %214 = icmp eq i64 %213, %200
  br i1 %214, label %215, label %201

215:                                              ; preds = %212, %195
  %216 = bitcast %"struct.WTF::KeyValuePair.627"* %193 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #8
  store %"struct.WTF::KeyValuePair.627"* null, %"struct.WTF::KeyValuePair.627"** %192, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  %218 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %5, i64 0, i32 0, i32 0
  %219 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %218, align 8
  %220 = icmp eq %"struct.WTF::KeyValuePair.622"* %219, null
  br i1 %220, label %254, label %221, !prof !19

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %5, i64 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  br label %227

227:                                              ; preds = %249, %225
  %228 = phi i64 [ 0, %225 ], [ %250, %249 ]
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %219, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, -1000001
  br i1 %231, label %249, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %219, i64 %228, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #8
  br label %249

249:                                              ; preds = %248, %245, %232, %227
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq i64 %250, %226
  br i1 %251, label %252, label %227

252:                                              ; preds = %249, %221
  %253 = bitcast %"struct.WTF::KeyValuePair.622"* %219 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #8
  store %"struct.WTF::KeyValuePair.622"* null, %"struct.WTF::KeyValuePair.622"** %218, align 8
  br label %254

254:                                              ; preds = %217, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8
  %255 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %255, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::CSPSource"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %256) #8
  %259 = bitcast %"class.network::mojom::blink::CSPSource"* %256 to i8*
  call void @_ZdlPv(i8* %259) #15
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.607"*, %"class.mojo::StructPtr.611"* dereferenceable(8), %"class.WTF::HashMap.618"* dereferenceable(24), %"class.WTF::HashMap.623"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.154"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.628"* dereferenceable(8), %"class.WTF::Vector.154"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.611", align 8
  %16 = alloca %"class.WTF::HashMap.623", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.154", align 8
  %19 = alloca %"class.mojo::StructPtr.628", align 8
  %20 = alloca %"class.WTF::Vector.154", align 8
  %21 = tail call i8* @_Znwm(i64 144) #15
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.611"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.611"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.623"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.623"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.623"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !3
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !3
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !3
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #8
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #8
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #8
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !3
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.154"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.154"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.154"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.628"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.628", %"class.mojo::StructPtr.628"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.628"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.154"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.154"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.154"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.611"* nonnull %15, %"class.WTF::HashMap.618"* dereferenceable(24) %2, %"class.WTF::HashMap.623"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.154"* nonnull %18, i32 %67, %"class.mojo::StructPtr.628"* nonnull %19, %"class.WTF::Vector.154"* nonnull %20) #8
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.607"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !19

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !2

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #8
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.154"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #8
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #15
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !19

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !2

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #8
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.154"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #8
  %163 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.627"* %164, null
  br i1 %165, label %187, label %166, !prof !19

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #8
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #15
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.627"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #8
  store %"struct.WTF::KeyValuePair.627"* null, %"struct.WTF::KeyValuePair.627"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #8
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #15
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.611"*, %"class.WTF::HashMap.618"* dereferenceable(24), %"class.WTF::HashMap.623"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.154"*, i32, %"class.mojo::StructPtr.628"*, %"class.WTF::Vector.154"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #6

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #7 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #8
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  tail call void @llvm.trap() #8
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #8
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #8
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #8
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.611"* noalias sret, %"class.network::mojom::blink::CSPSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #8
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #8
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #8
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %27, %33, %48
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  %55 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #8
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %63
  tail call void @llvm.trap() #8
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 5
  %78 = load i8, i8* %77, align 1, !range !3
  %79 = icmp ne i8 %78, 0
  %80 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !3
  %82 = icmp ne i8 %81, 0
  %83 = tail call i8* @_Znwm(i64 40) #15, !noalias !121
  %84 = bitcast i8* %83 to %"class.network::mojom::blink::CSPSource"*
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %53, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %79, i1 zeroext %82) #8, !noalias !121
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast %"class.mojo::StructPtr.611"* %0 to i64*
  store i64 %85, i64* %86, align 8, !alias.scope !121
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #8
  br label %102

102:                                              ; preds = %75, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #8
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #8
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.618"* noalias sret, %"class.WTF::HashMap.618"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.618"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.618"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  %7 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %11, i64 %14
  br i1 %9, label %33, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.622"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.622"* %23, %15
  br i1 %24, label %33, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.622"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.622"* %26, %15
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap.618", %"class.WTF::HashMap.618"* %0, i64 0, i32 0
  br label %34

33:                                               ; preds = %22, %75, %85, %82, %2, %25
  ret void

34:                                               ; preds = %28, %85
  %35 = phi %"struct.WTF::KeyValuePair.622"* [ %26, %28 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #8
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #8
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !2

55:                                               ; preds = %46
  call void @llvm.trap() #8
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %31, align 8
  %59 = call { %"struct.WTF::KeyValuePair.622"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.619"* %32, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %75

75:                                               ; preds = %58, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #8
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %35, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.622"* %76, %15
  br i1 %77, label %33, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.622"* [ %83, %82 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %85 [
    i32 -1000001, label %82
    i32 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.622"* %83, %15
  br i1 %84, label %33, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.622"* %79, %15
  br i1 %86, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.622"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.619"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.622"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.622"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.619"* %0, %"struct.WTF::KeyValuePair.622"* null)
  %9 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.622"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.622"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.622"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.622"* %52, %"struct.WTF::KeyValuePair.622"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.622"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.622"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #8
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.622"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.619"* %0, %"struct.WTF::KeyValuePair.622"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair.622"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.622"*, i8 } undef, %"struct.WTF::KeyValuePair.622"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.622"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.622"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.622"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.619"*, %"struct.WTF::KeyValuePair.622"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.622"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !124

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.622"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.619"* %0, %"struct.WTF::KeyValuePair.622"* %36, i32 %32, %"struct.WTF::KeyValuePair.622"* %1) #8
  ret %"struct.WTF::KeyValuePair.622"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.622"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.619"*, %"struct.WTF::KeyValuePair.622"*, i32, %"struct.WTF::KeyValuePair.622"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.622"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.619"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.622"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable.619"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.622"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.622"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #8
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #8
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.619", %"class.WTF::HashTable.619"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.622"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair.622"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair.622"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.622"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair.622"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.622"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair.622"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair.622"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair.622"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair.622"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.622"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #8
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair.622"*, %"struct.WTF::KeyValuePair.622"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.622", %"struct.WTF::KeyValuePair.622"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair.622"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair.622"* %136, %"struct.WTF::KeyValuePair.622"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair.622"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair.622"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair.622"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.623"* noalias sret, %"class.WTF::HashMap.623"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr.1926", align 8
  %5 = bitcast %"class.WTF::HashMap.623"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.623"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  %7 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.627"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.627"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.627"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.627"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.mojo::StructPtr.1926"* %4 to i8*
  %31 = bitcast %"class.mojo::StructPtr.1926"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::HashMap.623", %"class.WTF::HashMap.623"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.mojo::StructPtr.1926", %"class.mojo::StructPtr.1926"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %22, %50, %60, %57, %2, %25
  ret void

35:                                               ; preds = %28, %60
  %36 = phi %"struct.WTF::KeyValuePair.627"* [ %26, %28 ], [ %54, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #8
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %39, align 8, !noalias !125
  %41 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i64 0, i64* %31, align 8, !alias.scope !125
  br label %44

43:                                               ; preds = %35
  call void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.1926"* nonnull sret %4, %"class.network::mojom::blink::CSPSourceList"* nonnull %40) #8
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { %"struct.WTF::KeyValuePair.627"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.624"* %32, i32* nonnull dereferenceable(4) %3, %"class.mojo::StructPtr.1926"* nonnull dereferenceable(8) %4) #8
  %46 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  %47 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %46) #8
  %49 = bitcast %"class.network::mojom::blink::CSPSourceList"* %46 to i8*
  call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.627"* %51, %15
  br i1 %52, label %34, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.627"* [ %58, %57 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %60 [
    i32 -1000001, label %57
    i32 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.627"* %58, %15
  br i1 %59, label %34, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.627"* %54, %15
  br i1 %61, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.627"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.624"*, i32* dereferenceable(4), %"class.mojo::StructPtr.1926"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.627"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.627"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.624"* %0, %"struct.WTF::KeyValuePair.627"* null)
  %9 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.627"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.627"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.627"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.627"* %52, %"struct.WTF::KeyValuePair.627"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.627"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.1926"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.627"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.1926", %"class.mojo::StructPtr.1926"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.1926"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #8
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #15
  %93 = bitcast %"class.mojo::StructPtr.1926"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.1926"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.627"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.624"* %0, %"struct.WTF::KeyValuePair.627"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.627"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.627"*, i8 } undef, %"struct.WTF::KeyValuePair.627"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.627"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.627"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.627"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.624"*, %"struct.WTF::KeyValuePair.627"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.627"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.1926"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.1926"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.1926"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.1926"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.1926"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !132

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.627"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.624"* %0, %"struct.WTF::KeyValuePair.627"* %36, i32 %32, %"struct.WTF::KeyValuePair.627"* %1) #8
  ret %"struct.WTF::KeyValuePair.627"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.627"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.624"*, %"struct.WTF::KeyValuePair.627"*, i32, %"struct.WTF::KeyValuePair.627"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.627"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.624"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.627"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.624"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.627"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.627"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #8
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #8
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.624", %"class.WTF::HashTable.624"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.627"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.627"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.627"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.627"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.627"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.627"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.627"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.627"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.627"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.627"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.627"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #8
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.1926"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.1926", %"class.mojo::StructPtr.1926"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.1926"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.627"*, %"struct.WTF::KeyValuePair.627"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.627", %"struct.WTF::KeyValuePair.627"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.627"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.627"* %125, %"struct.WTF::KeyValuePair.627"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.627"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.627"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.627"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.1926"* noalias sret, %"class.network::mojom::blink::CSPSourceList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1930", align 8
  %4 = alloca %"class.WTF::Vector.154", align 8
  %5 = alloca %"class.WTF::Vector.1935", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.1930"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.1930"* nonnull sret %3, %"class.WTF::Vector.1930"* dereferenceable(16) %16) #8
  %17 = bitcast %"class.WTF::Vector.154"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %4, %"class.WTF::Vector.154"* dereferenceable(16) %18) #8
  %19 = bitcast %"class.WTF::Vector.1935"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.1935"* nonnull sret %5, %"class.WTF::Vector.1935"* dereferenceable(16) %20) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !3
  store i8 %22, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !3
  store i8 %24, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  %25 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !3
  store i8 %26, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !3
  store i8 %28, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %29 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !3
  store i8 %30, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %31 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !3
  store i8 %32, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %33 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !3
  store i8 %34, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  %35 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !3
  store i8 %36, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  %37 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !3
  store i8 %38, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.1926"* %0, %"class.WTF::Vector.1930"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.154"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.1935"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12, i8* nonnull dereferenceable(1) %13, i8* nonnull dereferenceable(1) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %39 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.1938"* %40, null
  br i1 %41, label %65, label %42, !prof !19

42:                                               ; preds = %2
  %43 = bitcast %"class.mojo::StructPtr.1938"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !2

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.mojo::StructPtr.1938"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  %54 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %53) #8
  %56 = bitcast %"class.network::mojom::blink::CSPHashSource"* %53 to i8*
  call void @_ZdlPv(i8* %56) #15
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %51, i64 1
  %59 = icmp eq %"class.mojo::StructPtr.1938"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.1935"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #8
  store %"class.mojo::StructPtr.1938"* null, %"class.mojo::StructPtr.1938"** %39, align 8
  br label %65

65:                                               ; preds = %2, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  %66 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = icmp eq %"class.WTF::String"* %67, null
  br i1 %68, label %103, label %69, !prof !19

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::String"* %67 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %4, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %101, label %74, !prof !2

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %75
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"class.WTF::String"* [ %96, %95 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #8
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 1
  %97 = icmp eq %"class.WTF::String"* %96, %76
  br i1 %97, label %98, label %77

98:                                               ; preds = %95
  store i32 0, i32* %71, align 4
  %99 = bitcast %"class.WTF::Vector.154"* %4 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %69
  %102 = phi i8* [ %100, %98 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %66, align 8
  br label %103

103:                                              ; preds = %65, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  %104 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %104, align 8
  %106 = icmp eq %"class.mojo::StructPtr.611"* %105, null
  br i1 %106, label %130, label %107, !prof !19

107:                                              ; preds = %103
  %108 = bitcast %"class.mojo::StructPtr.611"* %105 to i8*
  %109 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %3, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !2

112:                                              ; preds = %107
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %105, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.mojo::StructPtr.611"* [ %123, %122 ], [ %105, %112 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %117, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::CSPSource"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %118) #8
  %121 = bitcast %"class.network::mojom::blink::CSPSource"* %118 to i8*
  call void @_ZdlPv(i8* %121) #15
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %116, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.611"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %109, align 4
  %126 = bitcast %"class.WTF::Vector.1930"* %3 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #8
  store %"class.mojo::StructPtr.611"* null, %"class.mojo::StructPtr.611"** %104, align 8
  br label %130

130:                                              ; preds = %103, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.1926"*, %"class.WTF::Vector.1930"* dereferenceable(16), %"class.WTF::Vector.154"* dereferenceable(16), %"class.WTF::Vector.1935"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.1930", align 8
  %15 = alloca %"class.WTF::Vector.154", align 8
  %16 = alloca %"class.WTF::Vector.1935", align 8
  %17 = tail call i8* @_Znwm(i64 64) #15
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.1930"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.1930"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.1930"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.154"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.154"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.154"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.1935"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.1935"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.1935"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !3
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !3
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !3
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !3
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !3
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !3
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !3
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !3
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !3
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.1930"* nonnull %14, %"class.WTF::Vector.154"* nonnull %15, %"class.WTF::Vector.1935"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #8
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.1926"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.1938"* %70, null
  br i1 %71, label %94, label %72, !prof !19

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.1938"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !2

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.1938"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #8
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #15
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.1938"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.1935"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #8
  store %"class.mojo::StructPtr.1938"* null, %"class.mojo::StructPtr.1938"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !19

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !2

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #8
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.154"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.611"* %133, null
  br i1 %134, label %157, label %135, !prof !19

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.611"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !2

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.611"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #8
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #15
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.611"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.1930"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #8
  store %"class.mojo::StructPtr.611"* null, %"class.mojo::StructPtr.611"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.1930"*, %"class.WTF::Vector.154"*, %"class.WTF::Vector.1935"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.1930"* noalias sret, %"class.WTF::Vector.1930"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.611", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.1930"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.1930"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.611"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.611"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.611"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %31, align 8, !noalias !133
  %33 = icmp eq %"class.network::mojom::blink::CSPSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !133
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.611"* nonnull sret %3, %"class.network::mojom::blink::CSPSource"* nonnull %32) #8
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.611"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1930"* %0, %"class.mojo::StructPtr.611"* nonnull dereferenceable(8) %3) #8
  %50 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %28, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPSource"* %50 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %50) #8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %55 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.611"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1930"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.611"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.1930"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.611"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.611"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.611"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.611"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !140

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.611"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.611"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.611"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.611"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.611"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.611"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.611"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.611"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.611"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.611"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.611"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.611"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.611"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #8
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.611"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.611"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.611"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.611"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.611"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.611"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !141

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.611"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.611"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.611"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.611"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.611"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.611"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.611"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.611"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.611"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.611"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.611"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.611"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.611"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.1930"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #8
  %149 = bitcast %"class.WTF::Vector.1930"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1930"*, %"class.mojo::StructPtr.611"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.611"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.611"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.611"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1930"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.611"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1930"* %0, i32 %22) #8
  %36 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.611"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.611"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.1930", %"class.WTF::Vector.1930"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.611"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1930"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.611"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1930"* %0, i32 %50) #8
  %64 = load %"class.mojo::StructPtr.611"*, %"class.mojo::StructPtr.611"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.611"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.611"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.611"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.611"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.611", %"class.mojo::StructPtr.611"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.611"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.1935"* noalias sret, %"class.WTF::Vector.1935"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.1938", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.1935"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.1938"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.1938"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.1938"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %31, align 8, !noalias !142
  %33 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !142
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.1938"* nonnull sret %3, %"class.network::mojom::blink::CSPHashSource"* nonnull %32) #8
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.1938"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1935"* %0, %"class.mojo::StructPtr.1938"* nonnull dereferenceable(8) %3) #8
  %50 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPHashSource"* %50 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %50) #8
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %55 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.1938"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1935"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.1938"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.1938"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.1938"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.1938"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.1938"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !149

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.1938"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.1938"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.1938"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.1938"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.1938"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.1938"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.1938"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.1938"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.1938"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.1938"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.1938"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.1938"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.1938"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #8
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.1938"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.1938"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.1938"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.1938"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.1938"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.1938"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !150

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.1938"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.1938"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.1938"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.1938"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.1938"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.1938"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.1938"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.1938"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.1938"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.1938"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.1938"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.1938"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.1938"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.1935"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #8
  %149 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.1935"*, %"class.mojo::StructPtr.1938"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.1938"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.1938"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.1938"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.1938"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1935"* %0, i32 %22) #8
  %36 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.1938"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.1938"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.1935", %"class.WTF::Vector.1935"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.1938"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1935"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.1938"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1935"* %0, i32 %50) #8
  %64 = load %"class.mojo::StructPtr.1938"*, %"class.mojo::StructPtr.1938"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.1938"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.1938"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.1938"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.1938"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.1938", %"class.mojo::StructPtr.1938"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.1938"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.1938"* noalias sret, %"class.network::mojom::blink::CSPHashSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.1942", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector.1942", align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.WTF::Vector.1942"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #8, !alias.scope !151
  %12 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !noalias !151
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15, !prof !2

15:                                               ; preds = %2
  %16 = zext i32 %13 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %16) #8
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast %"class.WTF::Vector.1942"* %5 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load i32, i32* %12, align 4, !noalias !151
  %22 = trunc i64 %17 to i32
  store i32 %22, i32* %10, align 8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !151
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2, %15
  %29 = phi i32 [ %22, %15 ], [ 0, %2 ]
  %30 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %31 = bitcast %"class.WTF::Vector.1942"* %5 to i64*
  br label %56

32:                                               ; preds = %15, %48
  %33 = phi i32 [ %50, %48 ], [ %22, %15 ]
  %34 = phi i32 [ %49, %48 ], [ 0, %15 ]
  %35 = phi i8* [ %46, %48 ], [ %24, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8, !noalias !151
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %4, align 1, !noalias !151
  %37 = icmp eq i32 %34, %33
  br i1 %37, label %44, label %38, !prof !2

38:                                               ; preds = %32
  %39 = load i8*, i8** %9, align 8, !alias.scope !151
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %36, i8* %41, align 1
  %42 = load i32, i32* %11, align 4, !alias.scope !151
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4, !alias.scope !151
  br label %45

44:                                               ; preds = %32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.1942"* nonnull %5, i8* nonnull dereferenceable(1) %4) #8
  br label %45

45:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8, !noalias !151
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %26
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4, !alias.scope !151
  %50 = load i32, i32* %10, align 8, !alias.scope !151
  br label %32

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::Vector.1942"* %5 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !156
  %54 = load i32, i32* %10, align 8, !noalias !156
  %55 = load i32, i32* %11, align 4, !noalias !156
  br label %56

56:                                               ; preds = %28, %51
  %57 = phi i64* [ %31, %28 ], [ %52, %51 ]
  %58 = phi i32 [ 0, %28 ], [ %55, %51 ]
  %59 = phi i32 [ %29, %28 ], [ %54, %51 ]
  %60 = phi i64 [ %30, %28 ], [ %53, %51 ]
  %61 = bitcast %"class.WTF::Vector.1942"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #8, !noalias !156
  %62 = call i8* @_Znwm(i64 24) #15, !noalias !156
  %63 = bitcast i8* %62 to %"class.network::mojom::blink::CSPHashSource"*
  %64 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %3, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.1942"* %3 to i64*
  store i64 0, i64* %66, align 8, !noalias !156
  store atomic i64 0, i64* %57 monotonic, align 8, !noalias !156
  store atomic i64 %60, i64* %66 monotonic, align 8, !noalias !156
  store i32 %59, i32* %64, align 8, !noalias !156
  store i32 0, i32* %10, align 8, !noalias !156
  store i32 %58, i32* %65, align 4, !noalias !156
  store i32 0, i32* %11, align 4, !noalias !156
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %63, i32 %7, %"class.WTF::Vector.1942"* nonnull %3) #8, !noalias !156
  %67 = ptrtoint i8* %62 to i64
  %68 = bitcast %"class.mojo::StructPtr.1938"* %0 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !156
  %69 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !156
  %71 = icmp eq i8* %70, null
  br i1 %71, label %77, label %72, !prof !19

72:                                               ; preds = %56
  %73 = load i32, i32* %65, align 4, !noalias !156
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %72
  store i32 0, i32* %65, align 4, !noalias !156
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #8, !noalias !156
  store i8* null, i8** %69, align 8, !noalias !156
  br label %77

77:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #8, !noalias !156
  %78 = load i8*, i8** %9, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !19

80:                                               ; preds = %77
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #8
  store i8* null, i8** %9, align 8
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.1942"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.1942"*, i8* dereferenceable(1)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.1942"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !19

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #8
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #8
  %44 = bitcast %"class.WTF::Vector.1942"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.1942", %"class.WTF::Vector.1942"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !19

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #8
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !19

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #8
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #8
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.1942"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.628"* noalias sret, %"class.network::mojom::blink::CSPTrustedTypes"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.154", align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = bitcast %"class.WTF::Vector.154"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %3, %"class.WTF::Vector.154"* dereferenceable(16) %7) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !3
  store i8 %9, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !3
  store i8 %11, i8* %5, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.628"* %0, %"class.WTF::Vector.154"* nonnull dereferenceable(16) %3, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %12 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !19

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %3, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !2

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector.154"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %2, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.628"*, %"class.WTF::Vector.154"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.154", align 8
  %6 = tail call i8* @_Znwm(i64 24) #15
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.154"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.154"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.154"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !3
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !3
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.154"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #8
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.628"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !19

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !2

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #8
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.154"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.154"*, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink23AllowCSPFromHeaderValue5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.749"* noalias sret, %"class.network::mojom::blink::AllowCSPFromHeaderValue"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.scoped_refptr.143, align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_Znwm(i64 16) #15, !noalias !159
  %6 = bitcast i8* %5 to %"class.network::mojom::blink::AllowCSPFromHeaderValue"*
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %6) #8, !noalias !159
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.mojo::StructPtr.749"* %0 to i64*
  store i64 %7, i64* %8, align 8, !alias.scope !159
  %9 = getelementptr inbounds %"class.network::mojom::blink::AllowCSPFromHeaderValue", %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast i8* %5 to %"class.network::mojom::blink::AllowCSPFromHeaderValue"*
  switch i32 %10, label %81 [
    i32 0, label %12
    i32 1, label %17
    i32 2, label %38
  ]

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.network::mojom::blink::AllowCSPFromHeaderValue", %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %1, i64 0, i32 1
  %14 = bitcast %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_"* %13 to i8*
  %15 = load i8, i8* %14, align 1, !range !3
  %16 = icmp ne i8 %15, 0
  tail call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue14set_allow_starEb(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %11, i1 zeroext %16) #8
  br label %81

17:                                               ; preds = %2
  %18 = bitcast %class.scoped_refptr.143* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.network::mojom::blink::AllowCSPFromHeaderValue", %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %1, i64 0, i32 1, i32 0
  %20 = load %class.scoped_refptr.143*, %class.scoped_refptr.143** %19, align 8
  %21 = getelementptr inbounds %class.scoped_refptr.143, %class.scoped_refptr.143* %20, i64 0, i32 0
  %22 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %21, align 8
  %23 = icmp eq %"class.blink::SecurityOrigin"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #8
  br label %26

26:                                               ; preds = %17, %24
  %27 = getelementptr inbounds %class.scoped_refptr.143, %class.scoped_refptr.143* %3, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %22, %"class.blink::SecurityOrigin"** %27, align 8
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue10set_originERK13scoped_refptrIKN5blink14SecurityOriginEE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %11, %class.scoped_refptr.143* nonnull dereferenceable(8) %3) #8
  %28 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %27, align 8
  %29 = icmp eq %"class.blink::SecurityOrigin"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %31) #8
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %28) #8
  %36 = bitcast %"class.blink::SecurityOrigin"* %28 to i8*
  call void @free(i8* %36) #8
  br label %37

37:                                               ; preds = %26, %30, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %81

38:                                               ; preds = %2
  %39 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.network::mojom::blink::AllowCSPFromHeaderValue", %"class.network::mojom::blink::AllowCSPFromHeaderValue"* %1, i64 0, i32 1
  %41 = bitcast %"union.network::mojom::blink::AllowCSPFromHeaderValue::Union_"* %40 to %"class.WTF::String"**
  %42 = load %"class.WTF::String"*, %"class.WTF::String"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %63, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #8
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #8
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %38, %46, %61
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %64, align 8
  call void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue17set_error_messageERKN3WTF6StringE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"* nonnull %11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #8
  br label %80

80:                                               ; preds = %63, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  br label %81

81:                                               ; preds = %12, %37, %80, %2
  ret void
}

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue14set_allow_starEb(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue10set_originERK13scoped_refptrIKN5blink14SecurityOriginEE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %class.scoped_refptr.143* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValue17set_error_messageERKN3WTF6StringE(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink23AllowCSPFromHeaderValueC1Ev(%"class.network::mojom::blink::AllowCSPFromHeaderValue"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #8
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #8
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

declare void @_ZN7network25CrossOriginEmbedderPolicyC1ERKS0_(%"struct.network::CrossOriginEmbedderPolicy"*, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80)) unnamed_addr #2

declare void @_ZN7network23CrossOriginOpenerPolicyC1ERKS0_(%"struct.network::CrossOriginOpenerPolicy"*, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN4absl8optionalIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS3_18PartitionAllocatorEEEEELb0EE5CloneERKSA_(%"class.absl::optional.761"* noalias sret, %"class.absl::optional.761"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::Vector.766", align 8
  %5 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  br label %73

10:                                               ; preds = %2
  %11 = bitcast %"class.WTF::Vector.766"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #8, !alias.scope !162
  %15 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4, !noalias !162
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %32, label %18, !prof !2

18:                                               ; preds = %10
  %19 = zext i32 %16 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %19) #8
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #8
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.766"* %4 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load i32, i32* %15, align 4, !noalias !162
  %25 = lshr i64 %20, 2
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %13, align 8
  %27 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8, !noalias !162
  %29 = zext i32 %24 to i64
  %30 = getelementptr inbounds i32, i32* %28, i64 %29
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %10, %18
  %33 = phi i32 [ %26, %18 ], [ 0, %10 ]
  %34 = phi i64 [ %22, %18 ], [ 0, %10 ]
  %35 = bitcast %"class.WTF::Vector.766"* %4 to i64*
  br label %62

36:                                               ; preds = %18
  %37 = bitcast i32* %3 to i8*
  br label %38

38:                                               ; preds = %54, %36
  %39 = phi i32 [ %26, %36 ], [ %56, %54 ]
  %40 = phi i32 [ 0, %36 ], [ %55, %54 ]
  %41 = phi i32* [ %28, %36 ], [ %52, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #8, !noalias !162
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %3, align 4, !noalias !162
  %43 = icmp eq i32 %40, %39
  br i1 %43, label %50, label %44, !prof !2

44:                                               ; preds = %38
  %45 = load i32*, i32** %12, align 8, !alias.scope !162
  %46 = zext i32 %40 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  store i32 %42, i32* %47, align 4
  %48 = load i32, i32* %14, align 4, !alias.scope !162
  %49 = add i32 %48, 1
  store i32 %49, i32* %14, align 4, !alias.scope !162
  br label %51

50:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.766"* nonnull %4, i32* nonnull dereferenceable(4) %3) #8
  br label %51

51:                                               ; preds = %50, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #8, !noalias !162
  %52 = getelementptr inbounds i32, i32* %41, i64 1
  %53 = icmp eq i32* %52, %30
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %14, align 4, !alias.scope !162
  %56 = load i32, i32* %13, align 8, !alias.scope !162
  br label %38

57:                                               ; preds = %51
  %58 = bitcast %"class.WTF::Vector.766"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = load i32, i32* %13, align 8
  %61 = load i32, i32* %14, align 4
  br label %62

62:                                               ; preds = %57, %32
  %63 = phi i64* [ %35, %32 ], [ %58, %57 ]
  %64 = phi i32 [ 0, %32 ], [ %61, %57 ]
  %65 = phi i32 [ %33, %32 ], [ %60, %57 ]
  %66 = phi i64 [ %34, %32 ], [ %59, %57 ]
  %67 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %67, align 8
  %68 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.absl::optional.761", %"class.absl::optional.761"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %71 = bitcast %"class.WTF::Vector.766"* %68 to i64*
  store i64 0, i64* %71, align 8
  %72 = bitcast %"class.WTF::Vector.766"* %68 to i64*
  store atomic i64 0, i64* %63 monotonic, align 8
  store atomic i64 %66, i64* %72 monotonic, align 8
  store i32 %65, i32* %69, align 8
  store i32 %64, i32* %70, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  br label %73

73:                                               ; preds = %62, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.766"*, i32* dereferenceable(4)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !19

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector.766"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !19

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN7network5mojom18WebClientHintsTypeEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN7network5mojom18WebClientHintsTypeEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !19

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector.766"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.771"* noalias sret, %"class.WTF::Vector.771"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.774", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.771"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !2

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %12) #8
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #8
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.771"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.774"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.774"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.774"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %31, align 8, !noalias !167
  %33 = icmp eq %"class.network::mojom::blink::LinkHeader"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !167
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink10LinkHeader5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.774"* nonnull sret %3, %"class.network::mojom::blink::LinkHeader"* nonnull %32) #8
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !2

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.774"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.771"* %0, %"class.mojo::StructPtr.774"* nonnull dereferenceable(8) %3) #8
  %50 = load %"class.network::mojom::blink::LinkHeader"*, %"class.network::mojom::blink::LinkHeader"** %28, align 8
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::LinkHeader"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  call void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"* nonnull %50) #8
  %53 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %50, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %55 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.774"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.771"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.774"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.771"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.774"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.774"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.774"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.774"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !174

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.774"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.774"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.774"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.774"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.774"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.774"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.774"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.774"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.774"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.774"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.774"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.774"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.774"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #8
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %73) #8
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #8
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.774"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.774"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.774"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.774"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.774"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.774"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !175

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.774"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.774"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.774"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.774"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.774"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.774"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.774"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.774"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.774"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.774"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.774"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.774"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.774"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.771"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #8
  %149 = bitcast %"class.WTF::Vector.771"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink10LinkHeaderD1Ev(%"class.network::mojom::blink::LinkHeader"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.771"*, %"class.mojo::StructPtr.774"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.774"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.774"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.774"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.771"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.774"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.771"* %0, i32 %22) #8
  %36 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.774"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.774"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.771", %"class.WTF::Vector.771"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.774"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.771"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.774"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.771"* %0, i32 %50) #8
  %64 = load %"class.mojo::StructPtr.774"*, %"class.mojo::StructPtr.774"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.774"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.774"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.774"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.774"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.774", %"class.mojo::StructPtr.774"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::LinkHeader"* null, %"class.network::mojom::blink::LinkHeader"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.774"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink10LinkHeader5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.774"* noalias sret, %"class.network::mojom::blink::LinkHeader"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %1, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %6) #8
  %7 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.network::mojom::blink::LinkHeader", %"class.network::mojom::blink::LinkHeader"* %1, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #8
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  call void @llvm.trap() #8
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %2, %17, %32
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %35, align 8
  %36 = call i8* @_Znwm(i64 136) #15, !noalias !176
  %37 = bitcast i8* %36 to %"class.network::mojom::blink::LinkHeader"*
  call void @_ZN7network5mojom5blink10LinkHeaderC1ERKN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeERKN3WTF6StringE(%"class.network::mojom::blink::LinkHeader"* nonnull %37, %"class.blink::KURL"* nonnull dereferenceable(112) %3, i32 %8, i32 %10, i32 %12, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8, !noalias !176
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.mojo::StructPtr.774"* %0 to i64*
  store i64 %38, i64* %39, align 8, !alias.scope !176
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #8
  br label %55

55:                                               ; preds = %34, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %5) #8
  ret void
}

declare void @_ZN7network5mojom5blink10LinkHeaderC1ERKN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeERKN3WTF6StringE(%"class.network::mojom::blink::LinkHeader"*, %"class.blink::KURL"* dereferenceable(112), i32, i32, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink17TimingAllowOrigin5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.783"* noalias sret, %"class.network::mojom::blink::TimingAllowOrigin"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.154", align 8
  %4 = tail call i8* @_Znwm(i64 16) #15, !noalias !179
  %5 = bitcast i8* %4 to %"class.network::mojom::blink::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom5blink17TimingAllowOriginC1Ev(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %5) #8, !noalias !179
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.mojo::StructPtr.783"* %0 to i64*
  store i64 %6, i64* %7, align 8, !alias.scope !179
  %8 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %4 to %"class.network::mojom::blink::TimingAllowOrigin"*
  switch i32 %9, label %55 [
    i32 0, label %11
    i32 1, label %51
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %1, i64 0, i32 1, i32 0
  %13 = load %"class.WTF::Vector.154"*, %"class.WTF::Vector.154"** %12, align 8
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.154"* nonnull sret %3, %"class.WTF::Vector.154"* dereferenceable(16) %13) #8
  call void @_ZN7network5mojom5blink17TimingAllowOrigin22set_serialized_originsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %10, %"class.WTF::Vector.154"* nonnull %3) #8
  %14 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::String"*, %"class.WTF::String"** %14, align 8
  %16 = icmp eq %"class.WTF::String"* %15, null
  br i1 %16, label %55, label %17, !prof !19

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::String"* %15 to i8*
  %19 = getelementptr inbounds %"class.WTF::Vector.154", %"class.WTF::Vector.154"* %3, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %49, label %22, !prof !2

22:                                               ; preds = %17
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 %23
  br label %25

25:                                               ; preds = %43, %22
  %26 = phi %"class.WTF::String"* [ %44, %43 ], [ %15, %22 ]
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #8
  br label %43

43:                                               ; preds = %42, %39, %25
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 1
  %45 = icmp eq %"class.WTF::String"* %44, %24
  br i1 %45, label %46, label %25

46:                                               ; preds = %43
  store i32 0, i32* %19, align 4
  %47 = bitcast %"class.WTF::Vector.154"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %17
  %50 = phi i8* [ %48, %46 ], [ %18, %17 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %14, align 8
  br label %55

51:                                               ; preds = %2
  %52 = getelementptr inbounds %"class.network::mojom::blink::TimingAllowOrigin", %"class.network::mojom::blink::TimingAllowOrigin"* %1, i64 0, i32 1
  %53 = bitcast %"union.network::mojom::blink::TimingAllowOrigin::Union_"* %52 to i8*
  %54 = load i8, i8* %53, align 1
  tail call void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"* nonnull %10, i8 zeroext %54) #8
  br label %55

55:                                               ; preds = %49, %11, %51, %2
  ret void
}

declare void @_ZN7network5mojom5blink17TimingAllowOrigin22set_serialized_originsEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::TimingAllowOrigin"*, %"class.WTF::Vector.154"*) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink17TimingAllowOrigin7set_allEh(%"class.network::mojom::blink::TimingAllowOrigin"*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN7network5mojom5blink17TimingAllowOriginC1Ev(%"class.network::mojom::blink::TimingAllowOrigin"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"*) unnamed_addr #6

declare void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE7EraseAtEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %26, i64 1
  %28 = load i32, i32* %8, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %24, i64 %29
  %31 = icmp ne %"class.blink::Member.120"* %26, null
  %32 = icmp ne %"class.blink::Member.120"* %27, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %124, !prof !19

34:                                               ; preds = %22
  %35 = icmp ult %"class.blink::Member.120"* %27, %30
  br i1 %35, label %36, label %104

36:                                               ; preds = %34
  %37 = shl nuw nsw i64 %29, 3
  %38 = add nsw i64 %37, -9
  %39 = shl nuw nsw i64 %25, 3
  %40 = sub nsw i64 %38, %39
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %36, %45
  %46 = phi %"class.blink::Member.120"* [ %53, %45 ], [ %26, %36 ]
  %47 = phi %"class.blink::Member.120"* [ %52, %45 ], [ %27, %36 ]
  %48 = phi i64 [ %54, %45 ], [ %43, %36 ]
  %49 = bitcast %"class.blink::Member.120"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member.120"* %46 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %47, i64 1
  %53 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %46, i64 1
  %54 = add i64 %48, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !182

56:                                               ; preds = %45, %36
  %57 = phi %"class.blink::Member.120"* [ %26, %36 ], [ %53, %45 ]
  %58 = phi %"class.blink::Member.120"* [ %27, %36 ], [ %52, %45 ]
  %59 = icmp ult i64 %40, 56
  br i1 %59, label %104, label %60

60:                                               ; preds = %56, %60
  %61 = phi %"class.blink::Member.120"* [ %102, %60 ], [ %57, %56 ]
  %62 = phi %"class.blink::Member.120"* [ %101, %60 ], [ %58, %56 ]
  %63 = bitcast %"class.blink::Member.120"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::Member.120"* %61 to i64*
  store atomic i64 %64, i64* %65 monotonic, align 8
  %66 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 1
  %67 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 1
  %68 = bitcast %"class.blink::Member.120"* %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.blink::Member.120"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 2
  %72 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 2
  %73 = bitcast %"class.blink::Member.120"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::Member.120"* %72 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 3
  %77 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 3
  %78 = bitcast %"class.blink::Member.120"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.blink::Member.120"* %77 to i64*
  store atomic i64 %79, i64* %80 monotonic, align 8
  %81 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 4
  %82 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 4
  %83 = bitcast %"class.blink::Member.120"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.blink::Member.120"* %82 to i64*
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 5
  %87 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 5
  %88 = bitcast %"class.blink::Member.120"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.120"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 6
  %92 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 6
  %93 = bitcast %"class.blink::Member.120"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.120"* %92 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8
  %96 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 7
  %97 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 7
  %98 = bitcast %"class.blink::Member.120"* %96 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.blink::Member.120"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %62, i64 8
  %102 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %61, i64 8
  %103 = icmp ult %"class.blink::Member.120"* %101, %30
  br i1 %103, label %60, label %104

104:                                              ; preds = %56, %60, %34
  %105 = ptrtoint %"class.blink::Member.120"* %30 to i64
  %106 = ptrtoint %"class.blink::Member.120"* %27 to i64
  %107 = sub i64 %105, %106
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %104
  %110 = ashr exact i64 %107, 3
  br label %111

111:                                              ; preds = %121, %109
  %112 = phi i64 [ %114, %121 ], [ %110, %109 ]
  %113 = phi %"class.blink::Member.120"* [ %122, %121 ], [ %26, %109 ]
  %114 = add i64 %112, -1
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::Member.120"* %113 to i8**
  %119 = load i8*, i8** %118, align 8
  %120 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #8
  br label %121

121:                                              ; preds = %117, %111
  %122 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %113, i64 1
  %123 = icmp eq i64 %114, 0
  br i1 %123, label %124, label %111

124:                                              ; preds = %121, %22, %104
  %125 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %23, align 8
  %126 = load i32, i32* %8, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %125, i64 %127
  %129 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %128, i64 -1
  %130 = bitcast %"class.blink::Member.120"* %129 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %130, i64 8) #8
  %131 = load i32, i32* %8, align 4
  %132 = add i32 %131, -1
  store i32 %132, i32* %8, align 4
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptPromiseResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptPromiseResolver"*)***
  %4 = load void (%"class.blink::ScriptPromiseResolver"*)**, void (%"class.blink::ScriptPromiseResolver"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::BackgroundFetchRegistration"**
  %5 = load %"class.blink::BackgroundFetchRegistration"*, %"class.blink::BackgroundFetchRegistration"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #8
  %7 = icmp eq %"class.blink::BackgroundFetchRegistration"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::BackgroundFetchRegistration"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27BackgroundFetchRegistrationEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #8
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"**
  %5 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #8
  %7 = icmp eq %"class.blink::ScriptPromiseResolver"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ScriptPromiseResolver"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #8
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverENS3_5mojom20BackgroundFetchErrorEEJNS3_10PersistentIS4_EENSB_IS5_EEEEEFvS8_EE7RunOnceEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.blink::BackgroundFetchRegistration"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)**
  %22 = load void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)*, void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i32)* [ %22, %16 ], [ %24, %23 ]
  %27 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %28 = bitcast void (%"class.base::internal::BindStateBase"*)** %27 to %"class.blink::ScriptPromiseResolver"**
  %29 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %28, align 8
  tail call void %26(%"class.blink::BackgroundFetchRegistration"* %13, %"class.blink::ScriptPromiseResolver"* %29, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverENS2_5mojom20BackgroundFetchErrorEEJNS2_10PersistentIS3_EENSA_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #8
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEEEC2IJLm0ELm1EEJS6_S8_EJEJEJS6_S8_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSC_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.blink::Persistent.813"* dereferenceable(16), %"class.blink::Persistent.810"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::Persistent.813"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.std::__1::__tuple_impl"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  switch i64 %6, label %9 [
    i64 0, label %35
    i64 -1, label %35
  ]

9:                                                ; preds = %3
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #8
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.814"**
  store %"class.blink::PersistentBase.814"* %4, %"class.blink::PersistentBase.814"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %8, align 8
  br label %35

35:                                               ; preds = %3, %3, %28
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::__tuple_leaf.2081", %"class.std::__1::__tuple_leaf.2081"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::Persistent.810"* %2 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::__tuple_leaf.2081"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  switch i64 %39, label %42 [
    i64 0, label %68
    i64 -1, label %68
  ]

42:                                               ; preds = %35
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #8
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %57 = icmp eq %"class.blink::PersistentNode"* %56, null
  br i1 %57, label %58, label %61, !prof !2

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %59) #8
  %60 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  br label %61

61:                                               ; preds = %58, %49
  %62 = phi %"class.blink::PersistentNode"* [ %60, %58 ], [ %56, %49 ]
  %63 = bitcast %"class.blink::PersistentNode"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  store i64 %64, i64* %65, align 8
  %66 = bitcast %"class.blink::PersistentNode"* %62 to %"class.blink::PersistentBase.811"**
  store %"class.blink::PersistentBase.811"* %37, %"class.blink::PersistentBase.811"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %62, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  store %"class.blink::PersistentNode"* %62, %"class.blink::PersistentNode"** %41, align 8
  br label %68

68:                                               ; preds = %35, %35, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS7_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EENSJ_IS5_EEbEEEFvSG_EE7RunOnceEPNS0_13BindStateBaseEOSG_(%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.1810"* dereferenceable(16)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::Persistent.813"*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.blink::Persistent.810"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 4
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8*
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %13 = bitcast void ()** %12 to i64*
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN4base8internal13FunctorTraitsIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEvE6InvokeISH_NS2_10PersistentIS3_EEJNSK_IS4_EEbSF_EEEvT_OT0_DpOT1_(i64 %11, i64 %14, %"class.blink::Persistent.813"* dereferenceable(16) %5, %"class.blink::Persistent.810"* dereferenceable(16) %7, i8* dereferenceable(1) %9, %"class.WTF::Vector.1810"* dereferenceable(16) %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEvE6InvokeISH_NS2_10PersistentIS3_EEJNSK_IS4_EEbSF_EEEvT_OT0_DpOT1_(i64, i64, %"class.blink::Persistent.813"* dereferenceable(16), %"class.blink::Persistent.810"* dereferenceable(16), i8* dereferenceable(1), %"class.WTF::Vector.1810"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.WTF::Vector.1810", align 8
  %8 = bitcast %"class.blink::Persistent.813"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %1
  %11 = bitcast i8* %10 to %"class.blink::BackgroundFetchRegistration"*
  %12 = and i64 %0, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %6
  %15 = bitcast i8* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = add i64 %0, -1
  %18 = getelementptr i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)**
  %20 = load void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)*, void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)** %19, align 8
  br label %23

21:                                               ; preds = %6
  %22 = inttoptr i64 %0 to void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)*
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi void (%"class.blink::BackgroundFetchRegistration"*, %"class.blink::ScriptPromiseResolver"*, i1, %"class.WTF::Vector.1810"*)* [ %20, %14 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.blink::Persistent.810", %"class.blink::Persistent.810"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %25, align 8
  %27 = load i8, i8* %4, align 1, !range !3
  %28 = icmp ne i8 %27, 0
  %29 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %7, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %7, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.1810"* %5 to i64*
  %32 = bitcast %"class.WTF::Vector.1810"* %7 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.1810"* %7 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %5, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %5, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  call void %24(%"class.blink::BackgroundFetchRegistration"* %11, %"class.blink::ScriptPromiseResolver"* %26, i1 zeroext %28, %"class.WTF::Vector.1810"* nonnull %7) #8
  %39 = getelementptr inbounds %"class.WTF::Vector.1810", %"class.WTF::Vector.1810"* %7, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.1813"*, %"class.mojo::StructPtr.1813"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.1813"* %40, null
  br i1 %41, label %64, label %42, !prof !19

42:                                               ; preds = %23
  %43 = bitcast %"class.mojo::StructPtr.1813"* %40 to i8*
  %44 = load i32, i32* %30, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %62, label %46, !prof !2

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %40, i64 %47
  br label %49

49:                                               ; preds = %56, %46
  %50 = phi %"class.mojo::StructPtr.1813"* [ %57, %56 ], [ %40, %46 ]
  %51 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::mojom::blink::BackgroundFetchSettledFetch"*, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %51, align 8
  store %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* null, %"class.blink::mojom::blink::BackgroundFetchSettledFetch"** %51, align 8
  %53 = icmp eq %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  call void @_ZN5blink5mojom5blink27BackgroundFetchSettledFetchD1Ev(%"class.blink::mojom::blink::BackgroundFetchSettledFetch"* nonnull %52) #8
  %55 = bitcast %"class.blink::mojom::blink::BackgroundFetchSettledFetch"* %52 to i8*
  call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %54, %49
  %57 = getelementptr inbounds %"class.mojo::StructPtr.1813", %"class.mojo::StructPtr.1813"* %50, i64 1
  %58 = icmp eq %"class.mojo::StructPtr.1813"* %57, %48
  br i1 %58, label %59, label %49

59:                                               ; preds = %56
  store i32 0, i32* %30, align 4
  %60 = bitcast %"class.WTF::Vector.1810"* %7 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i8* [ %61, %59 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #8
  store %"class.mojo::StructPtr.1813"* null, %"class.mojo::StructPtr.1813"** %39, align 8
  br label %64

64:                                               ; preds = %23, %62
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink27BackgroundFetchSettledFetchD1Ev(%"class.blink::mojom::blink::BackgroundFetchSettledFetch"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink27BackgroundFetchRegistrationEFvPNS2_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS2_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS6_18PartitionAllocatorEEEEJNS2_10PersistentIS3_EENSI_IS4_EEbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl.2087"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEED2Ev(%"struct.std::__1::__tuple_impl.2087"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #15
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEED2Ev(%"struct.std::__1::__tuple_impl.2087"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #8
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN5blink10PersistentINS3_27BackgroundFetchRegistrationEEENS4_INS3_21ScriptPromiseResolverEEEbEEC2IJLm0ELm1ELm2EEJS6_S8_bEJEJEJS6_S8_RbEEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSD_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.2087"*, %"class.blink::Persistent.813"* dereferenceable(16), %"class.blink::Persistent.810"* dereferenceable(16), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::Persistent.813"* %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.std::__1::__tuple_impl.2087"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  switch i64 %7, label %10 [
    i64 0, label %36
    i64 -1, label %36
  ]

10:                                               ; preds = %4
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #8
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  %25 = icmp eq %"class.blink::PersistentNode"* %24, null
  br i1 %25, label %26, label %29, !prof !2

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %27) #8
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %23, align 8
  br label %29

29:                                               ; preds = %26, %17
  %30 = phi %"class.blink::PersistentNode"* [ %28, %26 ], [ %24, %17 ]
  %31 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  store i64 %32, i64* %33, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to %"class.blink::PersistentBase.814"**
  store %"class.blink::PersistentBase.814"* %5, %"class.blink::PersistentBase.814"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27BackgroundFetchRegistrationELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %9, align 8
  br label %36

36:                                               ; preds = %4, %4, %29
  %37 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 1
  %38 = getelementptr inbounds %"class.std::__1::__tuple_leaf.2081", %"class.std::__1::__tuple_leaf.2081"* %37, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Persistent.810"* %2 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::__tuple_leaf.2081"* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %42, align 8
  switch i64 %40, label %43 [
    i64 0, label %69
    i64 -1, label %69
  ]

43:                                               ; preds = %36
  %44 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %45 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %44, i64 0, i32 1
  %46 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %45) #8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %43
  %49 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %45, i8* %49) #8
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i8* [ %49, %48 ], [ %46, %43 ]
  %52 = bitcast i8* %51 to %"class.blink::ThreadState"**
  %53 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %58 = icmp eq %"class.blink::PersistentNode"* %57, null
  br i1 %58, label %59, label %62, !prof !2

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %55, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %60) #8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  br label %62

62:                                               ; preds = %59, %50
  %63 = phi %"class.blink::PersistentNode"* [ %61, %59 ], [ %57, %50 ]
  %64 = bitcast %"class.blink::PersistentNode"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.blink::PersistentRegion"* %55 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast %"class.blink::PersistentNode"* %63 to %"class.blink::PersistentBase.811"**
  store %"class.blink::PersistentBase.811"* %38, %"class.blink::PersistentBase.811"** %67, align 8
  %68 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %63, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21ScriptPromiseResolverELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %68, align 8
  store %"class.blink::PersistentNode"* %63, %"class.blink::PersistentNode"** %42, align 8
  br label %69

69:                                               ; preds = %36, %36, %62
  %70 = getelementptr inbounds %"struct.std::__1::__tuple_impl.2087", %"struct.std::__1::__tuple_impl.2087"* %0, i64 0, i32 2, i32 0
  %71 = load i8, i8* %3, align 1, !range !3
  store i8 %71, i8* %70, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.28, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21BackgroundFetchRecordEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.120"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.120"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21BackgroundFetchRecordEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21BackgroundFetchRecordEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::BackgroundFetchRecord"*
  tail call void @_ZNK5blink21BackgroundFetchRecord5TraceEPNS_7VisitorE(%"class.blink::BackgroundFetchRecord"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink21BackgroundFetchRecord5TraceEPNS_7VisitorE(%"class.blink::BackgroundFetchRecord"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink21BackgroundFetchRecordC1EPNS_7RequestEPNS_11ScriptStateE(%"class.blink::BackgroundFetchRecord"*, %"class.blink::Request"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.117"*, %"class.blink::BackgroundFetchRecord"* dereferenceable(48)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.117"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %16, i64 %18
  %20 = ptrtoint %"class.blink::BackgroundFetchRecord"* %1 to i64
  %21 = bitcast %"class.blink::Member.120"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::BackgroundFetchRecord"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #8
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !19

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %8, align 8
  %10 = icmp eq %"class.blink::Member.120"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %8, align 8
  %26 = icmp eq %"class.blink::Member.120"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.120"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.117"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.120"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.120"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !19

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.117"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.117"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.117"*, %"class.blink::BackgroundFetchRecord"** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.117"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %16, i64 %18
  %20 = bitcast %"class.blink::BackgroundFetchRecord"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.120"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.120"* @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %24, i64 %25
  ret %"class.blink::Member.120"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_6MemberINS_21BackgroundFetchRecordEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::Member.120"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %136

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %136, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %136, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %136, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %136

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %1, i64 0, i32 0, i32 0
  %58 = load %"class.blink::BackgroundFetchRecord"*, %"class.blink::BackgroundFetchRecord"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::BackgroundFetchRecord", %"class.blink::BackgroundFetchRecord"* %58, i64 0, i32 0
  %60 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %61 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %60, i64 0, i32 1, i32 0, i32 0, i32 0
  %62 = load %"class.v8::Context"*, %"class.v8::Context"** %61, align 8
  %63 = icmp eq %"class.v8::Context"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %47
  %65 = bitcast %"class.blink::ScriptState"* %60 to %"class.v8::internal::Isolate"**
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %65, align 8
  %67 = bitcast %"class.v8::Context"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %68) #8
  %70 = bitcast i64* %69 to %"class.v8::Context"*
  br label %71

71:                                               ; preds = %47, %64
  %72 = phi %"class.v8::Context"* [ %70, %64 ], [ null, %47 ]
  %73 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %72) #8
  %74 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %75 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %74, i64 0, i32 0
  %76 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %75, align 8
  %77 = icmp eq %"class.blink::BackgroundFetchRecord"* %58, null
  br i1 %77, label %78, label %81, !prof !2

78:                                               ; preds = %71
  %79 = ptrtoint %"class.v8::Isolate"* %76 to i64
  %80 = add i64 %79, 176
  br label %97

81:                                               ; preds = %71
  %82 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %59, %"class.v8::Isolate"* %76) #8
  %83 = ptrtoint %"class.v8::Object"* %82 to i64
  %84 = icmp eq %"class.v8::Object"* %82, null
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %73) #8
  %87 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %86) #8
  %88 = bitcast %"class.blink::BackgroundFetchRecord"* %58 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %89, i64 7
  %91 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %90, align 8
  %92 = call %"class.v8::Value"* %91(%"class.blink::ScriptWrappable"* nonnull %59, %"class.blink::ScriptState"* %87) #8
  %93 = icmp eq %"class.v8::Value"* %92, null
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %85
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %95

95:                                               ; preds = %94, %85
  %96 = ptrtoint %"class.v8::Value"* %92 to i64
  br label %97

97:                                               ; preds = %78, %81, %95
  %98 = phi i64 [ %80, %78 ], [ %96, %95 ], [ %83, %81 ]
  %99 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.801", %"class.blink::TraceWrapperV8Reference.801"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %100) #8
  %103 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  br label %104

104:                                              ; preds = %102, %97
  %105 = icmp eq i64 %98, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %98 to i64*
  %108 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %109 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  %110 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %108, i64* nonnull %107, i64* %109, i1 zeroext false) #8
  %111 = ptrtoint i64* %110 to i64
  store atomic i64 %111, i64* %109 monotonic, align 8
  br label %112

112:                                              ; preds = %104, %106
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %113 = icmp eq i32* %49, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %112
  store i32 %50, i32* %49, align 4
  br label %115

115:                                              ; preds = %112, %114
  %116 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %117 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %116) #8
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %134

119:                                              ; preds = %115
  %120 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #8
  %121 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %122 = ptrtoint i64* %4 to i64
  %123 = sub i64 %121, %122
  %124 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %125 = icmp ult i64 %123, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #8
  br i1 %125, label %128, label %126, !prof !19

126:                                              ; preds = %119
  %127 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %128

128:                                              ; preds = %119, %126
  %129 = phi i32* [ %127, %126 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %119 ]
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %133, label %132

132:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %134

133:                                              ; preds = %128
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %134

134:                                              ; preds = %133, %132, %118
  %135 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %135) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %136

136:                                              ; preds = %24, %16, %10, %20, %3, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #8
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #8
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #8
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.173", %"class.WTF::HashMap.173"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.174"* %47, %"class.blink::ScriptWrappable"* %0) #8
  %49 = extractvalue { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.173", %"class.WTF::HashMap.173"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.176"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0)) #8
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0)) #8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.174"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.176"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.174", %"class.WTF::HashTable.174"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.176"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.176"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.176", %"struct.WTF::KeyValuePair.176"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.176"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.176"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } undef, %"struct.WTF::KeyValuePair.176"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } %78, %"struct.WTF::KeyValuePair.176"* %77, 1
  ret { %"struct.WTF::KeyValuePair.176"*, %"struct.WTF::KeyValuePair.176"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::HeapVector.114"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %112

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %112, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %112, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %112, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %112

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #8
  %71 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %72 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %71, i64 0, i32 0
  %73 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %72, align 8
  %74 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.114"* dereferenceable(16) %1, %"class.v8::Object"* %70, %"class.v8::Isolate"* %73) #8
  %75 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.801", %"class.blink::TraceWrapperV8Reference.801"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %76) #8
  %79 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  store atomic i64 0, i64* %79 monotonic, align 8
  br label %80

80:                                               ; preds = %78, %68
  %81 = icmp eq %"class.v8::Array"* %74, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = bitcast %"class.v8::Array"* %74 to i64*
  %84 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %85 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  %86 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %84, i64* nonnull %83, i64* %85, i1 zeroext false) #8
  %87 = ptrtoint i64* %86 to i64
  store atomic i64 %87, i64* %85 monotonic, align 8
  br label %88

88:                                               ; preds = %80, %82
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %89 = icmp eq i32* %49, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %88
  store i32 %50, i32* %49, align 4
  br label %91

91:                                               ; preds = %88, %90
  %92 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %93 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %92) #8
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %110

95:                                               ; preds = %91
  %96 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #8
  %97 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %98 = ptrtoint i64* %4 to i64
  %99 = sub i64 %97, %98
  %100 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %101 = icmp ult i64 %99, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #8
  br i1 %101, label %104, label %102, !prof !19

102:                                              ; preds = %95
  %103 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %104

104:                                              ; preds = %95, %102
  %105 = phi i32* [ %103, %102 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %95 ]
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %110

109:                                              ; preds = %104
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %110

110:                                              ; preds = %109, %108, %94
  %111 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %111) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %112

112:                                              ; preds = %24, %16, %10, %20, %3, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_21BackgroundFetchRecordEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector.114"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #7 comdat {
  %4 = alloca %"class.absl::optional.2109", align 8
  %5 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional.2109"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.2113* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !19

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !19

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector.114", %"class.blink::HeapVector.114"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %83, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = add i64 %43, 160
  br label %46

46:                                               ; preds = %41, %79
  %47 = phi i32 [ 0, %41 ], [ %80, %79 ]
  %48 = phi %"class.blink::Member.120"* [ %36, %41 ], [ %81, %79 ]
  %49 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::BackgroundFetchRecord"*, %"class.blink::BackgroundFetchRecord"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::BackgroundFetchRecord", %"class.blink::BackgroundFetchRecord"* %50, i64 0, i32 0
  %52 = icmp eq %"class.blink::BackgroundFetchRecord"* %50, null
  br i1 %52, label %69, label %53, !prof !2

53:                                               ; preds = %46
  %54 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %51, %"class.v8::Isolate"* %2) #8
  %55 = ptrtoint %"class.v8::Object"* %54 to i64
  %56 = icmp eq %"class.v8::Object"* %54, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %42) #8
  %59 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #8
  %60 = bitcast %"class.blink::BackgroundFetchRecord"* %50 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %51, %"class.blink::ScriptState"* %59) #8
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %67

67:                                               ; preds = %66, %57
  %68 = ptrtoint %"class.v8::Value"* %64 to i64
  br label %69

69:                                               ; preds = %46, %53, %67
  %70 = phi i64 [ %68, %67 ], [ %55, %53 ], [ %44, %46 ]
  %71 = icmp eq i64 %70, 0
  %72 = select i1 %71, i64 %45, i64 %70
  %73 = inttoptr i64 %72 to %"class.v8::Value"*
  %74 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %47, %"class.v8::Value"* %73) #8
  %75 = trunc i16 %74 to i8
  %76 = icmp eq i8 %75, 0
  %77 = icmp ult i16 %74, 256
  %78 = or i1 %77, %76
  br i1 %78, label %83, label %79, !prof !183

79:                                               ; preds = %69
  %80 = add i32 %47, 1
  %81 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %48, i64 1
  %82 = icmp eq %"class.blink::Member.120"* %81, %39
  br i1 %82, label %83, label %46

83:                                               ; preds = %79, %69, %31
  %84 = phi i64 [ %33, %31 ], [ 0, %69 ], [ %33, %79 ]
  %85 = load i8, i8* %5, align 8, !range !3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %88, align 8
  %90 = getelementptr inbounds %"class.absl::optional.2109", %"class.absl::optional.2109"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %90) #8
  %92 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %89, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %91, %"class.blink::RuntimeCallTimer"** %92, align 8
  store i8 0, i8* %5, align 8
  br label %93

93:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %94 = inttoptr i64 %84 to %"class.v8::Array"*
  ret %"class.v8::Array"* %94
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21BackgroundFetchRecordEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.117"*, %"class.WTF::Vector.117"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.120"* null, %"class.blink::Member.120"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21BackgroundFetchRecordEEEEEmm(i64 %9) #8
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21BackgroundFetchRecordEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #8
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.120"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  %22 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.120"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.120"*, %"class.blink::Member.120"** %28, align 8
  %30 = icmp ne %"class.blink::Member.120"* %24, null
  %31 = icmp ne %"class.blink::Member.120"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !19

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.120"* %24 to i8*
  %37 = bitcast %"class.blink::Member.120"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #8
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.120"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.120"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.120", %"class.blink::Member.120"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIbEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, i1 zeroext, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %113

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %113, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %113, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %113, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %113

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #8
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #8
  %71 = bitcast %"class.blink::ScriptState"** %11 to i64**
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = select i1 %1, i64 184, i64 192
  %75 = add i64 %73, %74
  %76 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.801", %"class.blink::TraceWrapperV8Reference.801"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %77) #8
  %80 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  br label %81

81:                                               ; preds = %79, %68
  %82 = icmp eq i64 %75, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %75 to i64*
  %85 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %86 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  %87 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %85, i64* nonnull %84, i64* %86, i1 zeroext false) #8
  %88 = ptrtoint i64* %87 to i64
  store atomic i64 %88, i64* %86 monotonic, align 8
  br label %89

89:                                               ; preds = %81, %83
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %90 = icmp eq i32* %49, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %89
  store i32 %50, i32* %49, align 4
  br label %92

92:                                               ; preds = %89, %91
  %93 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %94 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %93) #8
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %111

96:                                               ; preds = %92
  %97 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #8
  %98 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %99 = ptrtoint i64* %4 to i64
  %100 = sub i64 %98, %99
  %101 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %102 = icmp ult i64 %100, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #8
  br i1 %102, label %105, label %103, !prof !19

103:                                              ; preds = %96
  %104 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %105

105:                                              ; preds = %96, %103
  %106 = phi i32* [ %104, %103 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %96 ]
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %111

110:                                              ; preds = %105
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %111

111:                                              ; preds = %110, %109, %95
  %112 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %112) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %113

113:                                              ; preds = %24, %16, %10, %20, %3, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA47_KcEEEPS1_DpOT_(i32* dereferenceable(4), [47 x i8]* dereferenceable(47)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #8
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  %9 = getelementptr inbounds [47 x i8], [47 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [47 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #17
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #8
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #8
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::DOMException"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #8
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #8
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #8
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #8
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #8
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #8
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #8
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::DOMException"* %1, null
  br i1 %75, label %76, label %79, !prof !2

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #8
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #8
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #8
  %86 = bitcast %"class.blink::DOMException"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #8
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.801", %"class.blink::TraceWrapperV8Reference.801"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #8
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.801"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #8
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.801"* dereferenceable(8) %56) #8
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #8
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #8
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #8
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #8
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  br i1 %123, label %126, label %124, !prof !19

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #8
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #8
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #8
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #8
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25ServiceWorkerRegistrationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ServiceWorkerRegistration"*
  tail call void @_ZNK5blink25ServiceWorkerRegistration5TraceEPNS_7VisitorE(%"class.blink::ServiceWorkerRegistration"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink25ServiceWorkerRegistration5TraceEPNS_7VisitorE(%"class.blink::ServiceWorkerRegistration"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink16HeapMojoReceiverINS_5mojom5blink35BackgroundFetchRegistrationObserverENS_27BackgroundFetchRegistrationELNS_19HeapMojoWrapperModeE0EE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE"}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEE5CloneEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13ParsedHeadersEE5CloneEv"}
!10 = distinct !{!10, !11, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13ParsedHeadersEEELb1EE5CloneERKS6_: argument 0"}
!11 = distinct !{!11, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13ParsedHeadersEEELb1EE5CloneERKS6_"}
!12 = distinct !{!12, !13, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13ParsedHeadersEEEEET_RKS7_: argument 0"}
!13 = distinct !{!13, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13ParsedHeadersEEEEET_RKS7_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4mojo11CloneTraitsIN4absl8optionalIN3net17AuthChallengeInfoEEELb0EE5CloneERKS5_: argument 0"}
!16 = distinct !{!16, !"_ZN4mojo11CloneTraitsIN4absl8optionalIN3net17AuthChallengeInfoEEELb0EE5CloneERKS5_"}
!17 = distinct !{!17, !18, !"_ZN4mojo5CloneIN4absl8optionalIN3net17AuthChallengeInfoEEEEET_RKS6_: argument 0"}
!18 = distinct !{!18, !"_ZN4mojo5CloneIN4absl8optionalIN3net17AuthChallengeInfoEEEEET_RKS6_"}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink22WrapPersistentInternalINS_27BackgroundFetchRegistrationEEENS_10PersistentIT_EEPS3_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink22WrapPersistentInternalINS_27BackgroundFetchRegistrationEEENS_10PersistentIT_EEPS3_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_: argument 0"}
!25 = distinct !{!25, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_"}
!26 = !{!27, !29, !31}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverENS3_5mojom20BackgroundFetchErrorEEJNS3_10PersistentIS4_EENSB_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverENS3_5mojom20BackgroundFetchErrorEEJNS3_10PersistentIS4_EENSB_IS5_EEEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverENS1_5mojom20BackgroundFetchErrorEEJNS1_10PersistentIS2_EENS9_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverENS1_5mojom20BackgroundFetchErrorEEJNS1_10PersistentIS2_EENS9_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!31 = distinct !{!31, !32, !"_ZN3WTF4BindIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverENS1_5mojom20BackgroundFetchErrorEEJNS1_10PersistentIS2_EENS9_IS3_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF4BindIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverENS1_5mojom20BackgroundFetchErrorEEJNS1_10PersistentIS2_EENS9_IS3_EEEFvS6_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!33 = !{!34, !36}
!34 = distinct !{!34, !35, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink17CacheQueryOptionsEEEPKNS2_17CacheQueryOptionsEE7ConvertES9_: argument 0"}
!35 = distinct !{!35, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink17CacheQueryOptionsEEEPKNS2_17CacheQueryOptionsEE7ConvertES9_"}
!36 = distinct !{!36, !37, !"_ZN5blink5mojom5blink17CacheQueryOptions4FromIPKNS_17CacheQueryOptionsEEEN4mojo16InlinedStructPtrIS2_EERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN5blink5mojom5blink17CacheQueryOptions4FromIPKNS_17CacheQueryOptionsEEEN4mojo16InlinedStructPtrIS2_EERKT_"}
!38 = !{!39, !34, !36}
!39 = distinct !{!39, !40, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!40 = distinct !{!40, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!41 = !{!34}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink22WrapPersistentInternalINS_27BackgroundFetchRegistrationEEENS_10PersistentIT_EEPS3_: argument 0"}
!44 = distinct !{!44, !"_ZN5blink22WrapPersistentInternalINS_27BackgroundFetchRegistrationEEENS_10PersistentIT_EEPS3_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_: argument 0"}
!47 = distinct !{!47, !"_ZN5blink22WrapPersistentInternalINS_21ScriptPromiseResolverEEENS_10PersistentIT_EEPS3_"}
!48 = !{!49, !51, !53}
!49 = distinct !{!49, !50, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS7_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EENSJ_IS5_EERbEEEDcOT0_DpOT1_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27BackgroundFetchRegistrationEFvPNS3_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS3_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS7_18PartitionAllocatorEEEEJNS3_10PersistentIS4_EENSJ_IS5_EERbEEEDcOT0_DpOT1_"}
!51 = distinct !{!51, !52, !"_ZN4base8BindOnceIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS5_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EENSH_IS3_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8BindOnceIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverEbN3WTF6VectorIN4mojo9StructPtrINS1_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS5_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EENSH_IS3_EERbEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!53 = distinct !{!53, !54, !"_ZN3WTF4BindIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverEbNS_6VectorIN4mojo9StructPtrINS1_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EENSG_IS3_EERbEFvSD_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZN3WTF4BindIMN5blink27BackgroundFetchRegistrationEFvPNS1_21ScriptPromiseResolverEbNS_6VectorIN4mojo9StructPtrINS1_5mojom5blink27BackgroundFetchSettledFetchEEELj0ENS_18PartitionAllocatorEEEEJNS1_10PersistentIS2_EENSG_IS3_EERbEFvSD_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink17CacheQueryOptionsEEEPKNS2_17CacheQueryOptionsEE7ConvertES9_: argument 0"}
!57 = distinct !{!57, !"_ZN4mojo13TypeConverterINS_16InlinedStructPtrIN5blink5mojom5blink17CacheQueryOptionsEEEPKNS2_17CacheQueryOptionsEE7ConvertES9_"}
!58 = distinct !{!58, !59, !"_ZN5blink5mojom5blink17CacheQueryOptions4FromIPKNS_17CacheQueryOptionsEEEN4mojo16InlinedStructPtrIS2_EERKT_: argument 0"}
!59 = distinct !{!59, !"_ZN5blink5mojom5blink17CacheQueryOptions4FromIPKNS_17CacheQueryOptionsEEEN4mojo16InlinedStructPtrIS2_EERKT_"}
!60 = !{!61, !56, !58}
!61 = distinct !{!61, !62, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!62 = distinct !{!62, !"_ZN5blink5mojom5blink17CacheQueryOptions3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!63 = !{!56}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink35BackgroundFetchRegistrationObserverEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!66 = distinct !{!66, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink35BackgroundFetchRegistrationObserverEE30InitWithNewPipeAndPassReceiverEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!69 = distinct !{!69, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!70 = !{!71, !73, !75}
!71 = distinct !{!71, !72, !"_ZNK4mojo9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEE5CloneEv: argument 0"}
!72 = distinct !{!72, !"_ZNK4mojo9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEE5CloneEv"}
!73 = distinct !{!73, !74, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEEELb1EE5CloneERKS6_: argument 0"}
!74 = distinct !{!74, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEEELb1EE5CloneERKS6_"}
!75 = distinct !{!75, !76, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEEEEET_RKS7_: argument 0"}
!76 = distinct !{!76, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink23AllowCSPFromHeaderValueEEEEET_RKS7_"}
!77 = !{!78, !80, !82}
!78 = distinct !{!78, !79, !"_ZNK4mojo9StructPtrIN7network5mojom5blink17TimingAllowOriginEE5CloneEv: argument 0"}
!79 = distinct !{!79, !"_ZNK4mojo9StructPtrIN7network5mojom5blink17TimingAllowOriginEE5CloneEv"}
!80 = distinct !{!80, !81, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink17TimingAllowOriginEEELb1EE5CloneERKS6_: argument 0"}
!81 = distinct !{!81, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink17TimingAllowOriginEEELb1EE5CloneERKS6_"}
!82 = distinct !{!82, !83, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink17TimingAllowOriginEEEEET_RKS7_: argument 0"}
!83 = distinct !{!83, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink17TimingAllowOriginEEEEET_RKS7_"}
!84 = !{!85, !87, !89}
!85 = distinct !{!85, !86, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv: argument 0"}
!86 = distinct !{!86, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv"}
!87 = distinct !{!87, !88, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_: argument 0"}
!88 = distinct !{!88, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_"}
!89 = distinct !{!89, !90, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_: argument 0"}
!90 = distinct !{!90, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_"}
!91 = distinct !{!91, !92}
!92 = !{!"llvm.loop.unroll.disable"}
!93 = distinct !{!93, !92}
!94 = !{!95, !97, !99}
!95 = distinct !{!95, !96, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!96 = distinct !{!96, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!97 = distinct !{!97, !98, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!98 = distinct !{!98, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!99 = distinct !{!99, !100, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!100 = distinct !{!100, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!101 = !{!102, !104, !106}
!102 = distinct !{!102, !103, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv: argument 0"}
!103 = distinct !{!103, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv"}
!104 = distinct !{!104, !105, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_: argument 0"}
!105 = distinct !{!105, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_"}
!106 = distinct !{!106, !107, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_: argument 0"}
!107 = distinct !{!107, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v: argument 0"}
!110 = distinct !{!110, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v"}
!111 = !{!112, !109}
!112 = distinct !{!112, !113, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!113 = distinct !{!113, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!114 = !{!115, !117, !119}
!115 = distinct !{!115, !116, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv: argument 0"}
!116 = distinct !{!116, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv"}
!117 = distinct !{!117, !118, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_: argument 0"}
!118 = distinct !{!118, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_"}
!119 = distinct !{!119, !120, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_: argument 0"}
!120 = distinct !{!120, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_"}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!123 = distinct !{!123, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_"}
!124 = distinct !{!124, !92}
!125 = !{!126, !128, !130}
!126 = distinct !{!126, !127, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv: argument 0"}
!127 = distinct !{!127, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv"}
!128 = distinct !{!128, !129, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_: argument 0"}
!129 = distinct !{!129, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_"}
!130 = distinct !{!130, !131, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_: argument 0"}
!131 = distinct !{!131, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_"}
!132 = distinct !{!132, !92}
!133 = !{!134, !136, !138}
!134 = distinct !{!134, !135, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!135 = distinct !{!135, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!136 = distinct !{!136, !137, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!137 = distinct !{!137, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!138 = distinct !{!138, !139, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!139 = distinct !{!139, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!140 = distinct !{!140, !92}
!141 = distinct !{!141, !92}
!142 = !{!143, !145, !147}
!143 = distinct !{!143, !144, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv: argument 0"}
!144 = distinct !{!144, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv"}
!145 = distinct !{!145, !146, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_: argument 0"}
!146 = distinct !{!146, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_"}
!147 = distinct !{!147, !148, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_: argument 0"}
!148 = distinct !{!148, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_"}
!149 = distinct !{!149, !92}
!150 = distinct !{!150, !92}
!151 = !{!152, !154}
!152 = distinct !{!152, !153, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_: argument 0"}
!153 = distinct !{!153, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_"}
!154 = distinct !{!154, !155, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_: argument 0"}
!155 = distinct !{!155, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!158 = distinct !{!158, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue3NewEv: argument 0"}
!161 = distinct !{!161, !"_ZN7network5mojom5blink23AllowCSPFromHeaderValue3NewEv"}
!162 = !{!163, !165}
!163 = distinct !{!163, !164, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS7_: argument 0"}
!164 = distinct !{!164, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS7_"}
!165 = distinct !{!165, !166, !"_ZN4mojo5CloneIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEET_RKS8_: argument 0"}
!166 = distinct !{!166, !"_ZN4mojo5CloneIN3WTF6VectorIN7network5mojom18WebClientHintsTypeELj0ENS1_18PartitionAllocatorEEEEET_RKS8_"}
!167 = !{!168, !170, !172}
!168 = distinct !{!168, !169, !"_ZNK4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEE5CloneEv: argument 0"}
!169 = distinct !{!169, !"_ZNK4mojo9StructPtrIN7network5mojom5blink10LinkHeaderEE5CloneEv"}
!170 = distinct !{!170, !171, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEELb1EE5CloneERKS6_: argument 0"}
!171 = distinct !{!171, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEELb1EE5CloneERKS6_"}
!172 = distinct !{!172, !173, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEEEET_RKS7_: argument 0"}
!173 = distinct !{!173, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink10LinkHeaderEEEEET_RKS7_"}
!174 = distinct !{!174, !92}
!175 = distinct !{!175, !92}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN7network5mojom5blink10LinkHeader3NewIJN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeEN3WTF6StringEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!178 = distinct !{!178, !"_ZN7network5mojom5blink10LinkHeader3NewIJN5blink4KURLENS0_16LinkRelAttributeENS0_15LinkAsAttributeENS0_20CrossOriginAttributeEN3WTF6StringEEEEN4mojo9StructPtrIS2_EEDpOT_"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN7network5mojom5blink17TimingAllowOrigin3NewEv: argument 0"}
!181 = distinct !{!181, !"_ZN7network5mojom5blink17TimingAllowOrigin3NewEv"}
!182 = distinct !{!182, !92}
!183 = !{!"branch_weights", i32 2002, i32 2000}
