; ModuleID = '../../third_party/webrtc/modules/audio_processing/gain_control_impl.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/gain_control_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::GainControlImpl" = type { %"class.webrtc::GainControl", %"class.std::__1::unique_ptr", i8, i32, i32, i32, i8, i32, i32, i32, i8, i8, %"class.std::__1::vector", %"class.std::__1::vector.10", %"class.absl::optional", %"class.absl::optional.17" }
%"class.webrtc::GainControl" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.webrtc::GainControlImpl::MonoAgcState"* }
%"struct.webrtc::GainControlImpl::MonoAgcState" = type { [11 x i32], i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr.1"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { i32 }
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.48", %"class.std::__1::vector.54", %"class.std::__1::vector.54", i8, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31", i64, i64, i64, i64, i64, %"class.std::__1::vector.37", %"class.std::__1::vector.37" }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { float* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { float** }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::vector.39" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::vector.39"* }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::unique_ptr.56"*, %"class.std::__1::unique_ptr.56"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::unique_ptr.56" = type opaque
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::unique_ptr.56"* }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { i16*, i16*, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i16* }
%"struct.std::__1::array" = type { [160 x i16] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.72 }
%union.anon.72 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZNK6webrtc15GainControlImpl4modeEv = comdat any

$_ZNK6webrtc15GainControlImpl17target_level_dbfsEv = comdat any

$_ZNK6webrtc15GainControlImpl19compression_gain_dbEv = comdat any

$_ZNK6webrtc15GainControlImpl18is_limiter_enabledEv = comdat any

$_ZNK6webrtc15GainControlImpl20analog_level_minimumEv = comdat any

$_ZNK6webrtc15GainControlImpl20analog_level_maximumEv = comdat any

$_ZNK6webrtc15GainControlImpl19stream_is_saturatedEv = comdat any

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN6webrtc15GainControlImpl12MonoAgcStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

@_ZN6webrtc15GainControlImpl17instance_counter_E = hidden local_unnamed_addr global i32 0, align 4
@_ZTVN6webrtc15GainControlImplE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i32)* @_ZN6webrtc15GainControlImpl23set_stream_analog_levelEi to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl19stream_analog_levelEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i32)* @_ZN6webrtc15GainControlImpl8set_modeENS_11GainControl4ModeE to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl4modeEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i32)* @_ZN6webrtc15GainControlImpl21set_target_level_dbfsEi to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl17target_level_dbfsEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i32)* @_ZN6webrtc15GainControlImpl23set_compression_gain_dbEi to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl19compression_gain_dbEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i1)* @_ZN6webrtc15GainControlImpl14enable_limiterEb to i8*), i8* bitcast (i1 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl18is_limiter_enabledEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*, i32, i32)* @_ZN6webrtc15GainControlImpl23set_analog_level_limitsEii to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl20analog_level_minimumEv to i8*), i8* bitcast (i32 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl20analog_level_maximumEv to i8*), i8* bitcast (i1 (%"class.webrtc::GainControlImpl"*)* @_ZNK6webrtc15GainControlImpl19stream_is_saturatedEv to i8*), i8* bitcast (void (%"class.webrtc::GainControlImpl"*)* @_ZN6webrtc15GainControlImplD2Ev to i8*), i8* bitcast (void (%"class.webrtc::GainControlImpl"*)* @_ZN6webrtc15GainControlImplD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [71 x i8] c"../../third_party/webrtc/modules/audio_processing/gain_control_impl.cc\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"set_compression_gain_db(\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c") failed.\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"WebRTC-UseLegacyDigitalGainApplier\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc15GainControlImplC1Ev = hidden unnamed_addr alias void (%"class.webrtc::GainControlImpl"*), void (%"class.webrtc::GainControlImpl"*)* @_ZN6webrtc15GainControlImplC2Ev
@_ZN6webrtc15GainControlImplD1Ev = hidden unnamed_addr alias void (%"class.webrtc::GainControlImpl"*), void (%"class.webrtc::GainControlImpl"*)* @_ZN6webrtc15GainControlImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImplC2Ev(%"class.webrtc::GainControlImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6webrtc15GainControlImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 1) #16
  %5 = bitcast i8* %4 to %"class.webrtc::ApmDataDumper"*
  %6 = load i32, i32* @_ZN6webrtc15GainControlImpl17instance_counter_E, align 4
  tail call void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"* nonnull %5, i32 %6) #17
  %7 = ptrtoint i8* %4 to i64
  %8 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 2
  %10 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0)) #17
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %9, align 8
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 4
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 5
  store i32 255, i32* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  store i32 3, i32* %16, align 4
  %17 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  store i32 9, i32* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 10
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 11
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %22 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = bitcast %"class.std::__1::vector"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 49, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImplD2Ev(%"class.webrtc::GainControlImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6webrtc15GainControlImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr.1"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::unique_ptr.1"* %14 to i8*
  %18 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %18, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.1"* %19, %14
  br i1 %20, label %36, label %21

21:                                               ; preds = %16, %31
  %22 = phi %"class.std::__1::unique_ptr.1"* [ %23, %31 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %22, i64 -1
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %24, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %24, align 8
  %26 = icmp eq %"struct.webrtc::GainControlImpl::MonoAgcState"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %25, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8* %29) #17
  %30 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"* %25 to i8*
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %27, %21
  %32 = icmp eq %"class.std::__1::unique_ptr.1"* %23, %14
  br i1 %32, label %33, label %21

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector"* %12 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %16
  %37 = phi i8* [ %35, %33 ], [ %17, %16 ]
  store %"class.std::__1::unique_ptr.1"* %14, %"class.std::__1::unique_ptr.1"** %18, align 8
  tail call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %11, %36
  %39 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %39, align 8
  store %"class.webrtc::ApmDataDumper"* null, %"class.webrtc::ApmDataDumper"** %39, align 8
  %41 = icmp eq %"class.webrtc::ApmDataDumper"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"* nonnull %40) #17
  %43 = getelementptr inbounds %"class.webrtc::ApmDataDumper", %"class.webrtc::ApmDataDumper"* %40, i64 0, i32 0
  tail call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %38, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImplD0Ev(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc15GainControlImplD2Ev(%"class.webrtc::GainControlImpl"* %0) #17
  %2 = bitcast %"class.webrtc::GainControlImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImpl18ProcessRenderAudioEN3rtc9ArrayViewIKsLln4711EEE(%"class.webrtc::GainControlImpl"* nocapture readonly, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.1"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %12, %3
  ret void

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %23, %12 ], [ %9, %3 ]
  %14 = phi i64 [ %21, %12 ], [ 0, %3 ]
  %15 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.1"*
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %15, i64 %14, i32 0, i32 0, i32 0
  %17 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %16, align 8
  %18 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %17, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @_ZN6webrtc19WebRtcAgc_AddFarendEPvPKsm(i8* %19, i16* %1, i64 %2) #17
  %21 = add nuw i64 %14, 1
  %22 = load i64, i64* %6, align 8
  %23 = load i64, i64* %8, align 8
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 3
  %26 = icmp ult i64 %21, %25
  br i1 %26, label %12, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN6webrtc19WebRtcAgc_AddFarendEPvPKsm(i8*, i16*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImpl21PackRenderAudioBufferERKNS_11AudioBufferEPNSt3__16vectorIsNS4_9allocatorIsEEEE(%"class.webrtc::AudioBuffer"* nocapture readonly dereferenceable(168), %"class.std::__1::vector.62"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array", align 2
  %4 = bitcast %"struct.std::__1::array"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %4) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %4, i8 -86, i64 320, i1 false)
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = select i1 %8, i16* null, i16* %5
  %10 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %23

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %14, align 8
  %16 = icmp eq %"class.webrtc::ChannelBuffer"* %15, null
  %17 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %17, align 8
  %19 = select i1 %16, %"class.webrtc::ChannelBuffer"* %18, %"class.webrtc::ChannelBuffer"* %15
  %20 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load float**, float*** %20, align 8
  %22 = load float*, float** %21, align 8
  call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %22, i64 %7, i16* nonnull %5) #17
  br label %102

23:                                               ; preds = %2
  %24 = trunc i64 %11 to i32
  br i1 %8, label %102, label %25

25:                                               ; preds = %23
  %26 = icmp sgt i32 %24, 0
  %27 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %29 = and i64 %11, 4294967295
  %30 = and i64 %11, 1
  %31 = icmp eq i64 %29, 1
  %32 = sub nsw i64 %29, %30
  %33 = icmp eq i64 %30, 0
  br label %34

34:                                               ; preds = %61, %25
  %35 = phi i64 [ 0, %25 ], [ %66, %61 ]
  br i1 %26, label %36, label %61

36:                                               ; preds = %34
  %37 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %27, align 8
  %38 = icmp eq %"class.webrtc::ChannelBuffer"* %37, null
  %39 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %28, align 8
  %40 = select i1 %38, %"class.webrtc::ChannelBuffer"* %39, %"class.webrtc::ChannelBuffer"* %37
  %41 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load float**, float*** %41, align 8
  br i1 %31, label %43, label %68

43:                                               ; preds = %68, %36
  %44 = phi i32 [ undef, %36 ], [ %98, %68 ]
  %45 = phi i64 [ 0, %36 ], [ %99, %68 ]
  %46 = phi i32 [ 0, %36 ], [ %98, %68 ]
  br i1 %33, label %61, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds float*, float** %42, i64 %45
  %49 = load float*, float** %48, align 8
  %50 = getelementptr inbounds float, float* %49, i64 %35
  %51 = load float, float* %50, align 4
  %52 = fcmp ogt float %51, 3.276700e+04
  %53 = select i1 %52, float 3.276700e+04, float %51
  %54 = fcmp olt float %53, -3.276800e+04
  %55 = select i1 %54, float -3.276800e+04, float %53
  %56 = tail call float @llvm.copysign.f32(float 5.000000e-01, float %55) #17
  %57 = fadd float %55, %56
  %58 = fptosi float %57 to i16
  %59 = sext i16 %58 to i32
  %60 = add nsw i32 %46, %59
  br label %61

61:                                               ; preds = %47, %43, %34
  %62 = phi i32 [ 0, %34 ], [ %44, %43 ], [ %60, %47 ]
  %63 = sdiv i32 %62, %24
  %64 = trunc i32 %63 to i16
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 %35
  store i16 %64, i16* %65, align 2
  %66 = add nuw i64 %35, 1
  %67 = icmp eq i64 %66, %7
  br i1 %67, label %102, label %34

68:                                               ; preds = %36, %68
  %69 = phi i64 [ %99, %68 ], [ 0, %36 ]
  %70 = phi i32 [ %98, %68 ], [ 0, %36 ]
  %71 = phi i64 [ %100, %68 ], [ %32, %36 ]
  %72 = getelementptr inbounds float*, float** %42, i64 %69
  %73 = load float*, float** %72, align 8
  %74 = getelementptr inbounds float, float* %73, i64 %35
  %75 = load float, float* %74, align 4
  %76 = fcmp ogt float %75, 3.276700e+04
  %77 = select i1 %76, float 3.276700e+04, float %75
  %78 = fcmp olt float %77, -3.276800e+04
  %79 = select i1 %78, float -3.276800e+04, float %77
  %80 = tail call float @llvm.copysign.f32(float 5.000000e-01, float %79) #17
  %81 = fadd float %79, %80
  %82 = fptosi float %81 to i16
  %83 = sext i16 %82 to i32
  %84 = add nsw i32 %70, %83
  %85 = or i64 %69, 1
  %86 = getelementptr inbounds float*, float** %42, i64 %85
  %87 = load float*, float** %86, align 8
  %88 = getelementptr inbounds float, float* %87, i64 %35
  %89 = load float, float* %88, align 4
  %90 = fcmp ogt float %89, 3.276700e+04
  %91 = select i1 %90, float 3.276700e+04, float %89
  %92 = fcmp olt float %91, -3.276800e+04
  %93 = select i1 %92, float -3.276800e+04, float %91
  %94 = tail call float @llvm.copysign.f32(float 5.000000e-01, float %93) #17
  %95 = fadd float %93, %94
  %96 = fptosi float %95 to i16
  %97 = sext i16 %96 to i32
  %98 = add nsw i32 %84, %97
  %99 = add nuw nsw i64 %69, 2
  %100 = add i64 %71, -2
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %43, label %68

102:                                              ; preds = %61, %23, %13
  %103 = bitcast %"class.std::__1::vector.62"* %1 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %1, i64 0, i32 0, i32 1
  %106 = bitcast i16** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = inttoptr i64 %104 to i16*
  %108 = load i64, i64* %6, align 8
  %109 = getelementptr inbounds i16, i16* %9, i64 %108
  %110 = call i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.62"* %1, i16* %107, i16* %9, i16* %109)
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %4) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector.62"*, i16*, i16*, i16*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i16* %2 to i8*
  %6 = bitcast i16* %1 to i8*
  %7 = ptrtoint i16* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint i16* %3 to i64
  %10 = ptrtoint i16* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %547

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.62", %"class.std::__1::vector.62"* %0, i64 0, i32 0, i32 1
  %19 = load i16*, i16** %18, align 8
  %20 = ptrtoint i16* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 1
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i16** %18 to i64*
  br i1 %23, label %188, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 1
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds i16, i16* %2, i64 %27
  %31 = ptrtoint i16* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 1
  %36 = bitcast i16* %19 to i8*
  %37 = bitcast i16* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %36, i8* align 2 %37, i64 %32, i1 false) #17
  %38 = getelementptr inbounds i16, i16* %19, i64 %35
  %39 = ptrtoint i16* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %547

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to i16*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi i16* [ %44, %43 ], [ %19, %25 ]
  %48 = phi i16* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds i16, i16* %1, i64 %12
  %50 = ptrtoint i16* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 1
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = icmp ult i16* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr i16, i16* %19, i64 %56
  %58 = bitcast i16* %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 1
  %63 = add nuw i64 %62, 1
  %64 = icmp ult i64 %63, 16
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi i16* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi i16* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr i16, i16* %19, i64 %69
  %71 = bitcast i16* %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 1
  %76 = add nuw i64 %75, 1
  %77 = getelementptr i16, i16* %47, i64 %76
  %78 = add i64 %52, %75
  %79 = add i64 %78, 1
  %80 = getelementptr i16, i16* %1, i64 %79
  %81 = icmp ult i16* %47, %80
  %82 = icmp ult i16* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, -16
  %86 = getelementptr i16, i16* %47, i64 %85
  %87 = getelementptr i16, i16* %53, i64 %85
  %88 = add i64 %85, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %47, i64 %96
  %99 = getelementptr i16, i16* %53, i64 %96
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %47, i64 %108
  %110 = getelementptr i16, i16* %53, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !2
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !2
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !5, !noalias !2
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !5, !noalias !2
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %47, i64 %119
  %121 = getelementptr i16, i16* %53, i64 %119
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %47, i64 %130
  %132 = getelementptr i16, i16* %53, i64 %130
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !2
  %135 = getelementptr i16, i16* %132, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !2
  %138 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = getelementptr i16, i16* %131, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !5, !noalias !2
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !7

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %47, i64 %148
  %151 = getelementptr i16, i16* %53, i64 %148
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !2
  %154 = getelementptr i16, i16* %151, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !2
  %157 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !5, !noalias !2
  %158 = getelementptr i16, i16* %150, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !5, !noalias !2
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !9

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi i16* [ %86, %163 ], [ %181, %176 ]
  %167 = ptrtoint i16* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %183, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds i16, i16* %47, i64 %172
  %174 = bitcast i16* %173 to i8*
  %175 = bitcast i16* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %174, i8* align 2 %175, i64 %51, i1 false) #17
  br label %183

176:                                              ; preds = %65, %176
  %177 = phi i16* [ %181, %176 ], [ %66, %65 ]
  %178 = phi i16* [ %180, %176 ], [ %67, %65 ]
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = icmp ult i16* %180, %19
  br i1 %182, label %176, label %165, !llvm.loop !11

183:                                              ; preds = %168, %171
  %184 = ptrtoint i16* %48 to i64
  %185 = sub i64 %184, %10
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %547, label %187

187:                                              ; preds = %183
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %5, i64 %185, i1 false) #17
  br label %547

188:                                              ; preds = %14
  %189 = bitcast %"class.std::__1::vector.62"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %20, %190
  %192 = ashr exact i64 %191, 1
  %193 = add nsw i64 %192, %12
  %194 = icmp slt i64 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector.62"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #18
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %17, %190
  %199 = ashr exact i64 %198, 1
  %200 = icmp ult i64 %199, 4611686018427387903
  %201 = icmp ult i64 %198, %193
  %202 = select i1 %201, i64 %193, i64 %198
  %203 = select i1 %200, i64 %202, i64 9223372036854775807
  %204 = sub i64 %7, %190
  %205 = ashr exact i64 %204, 1
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %197
  %208 = icmp slt i64 %203, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  tail call void @abort() #18
  unreachable

210:                                              ; preds = %207
  %211 = shl i64 %203, 1
  %212 = tail call i8* @_Znwm(i64 %211) #16
  %213 = bitcast i8* %212 to i16*
  br label %214

214:                                              ; preds = %210, %197
  %215 = phi i16* [ %213, %210 ], [ null, %197 ]
  %216 = getelementptr inbounds i16, i16* %215, i64 %205
  %217 = getelementptr inbounds i16, i16* %215, i64 %203
  %218 = ptrtoint i16* %217 to i64
  %219 = getelementptr inbounds i16, i16* %216, i64 %12
  %220 = add i64 %11, -2
  %221 = lshr i64 %220, 1
  %222 = add nuw i64 %221, 1
  %223 = icmp ult i64 %222, 16
  br i1 %223, label %316, label %224

224:                                              ; preds = %214
  %225 = add i64 %11, -2
  %226 = lshr i64 %225, 1
  %227 = add i64 %205, %226
  %228 = add i64 %227, 1
  %229 = getelementptr i16, i16* %215, i64 %228
  %230 = add nuw i64 %226, 1
  %231 = getelementptr i16, i16* %2, i64 %230
  %232 = icmp ult i16* %216, %231
  %233 = icmp ugt i16* %229, %2
  %234 = and i1 %232, %233
  br i1 %234, label %316, label %235

235:                                              ; preds = %224
  %236 = and i64 %222, -16
  %237 = getelementptr i16, i16* %216, i64 %236
  %238 = getelementptr i16, i16* %2, i64 %236
  %239 = add i64 %236, -16
  %240 = lshr exact i64 %239, 4
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 48
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i16, i16* %216, i64 %247
  %250 = getelementptr i16, i16* %2, i64 %247
  %251 = bitcast i16* %250 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !12
  %253 = getelementptr i16, i16* %250, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !12
  %256 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !15, !noalias !12
  %257 = getelementptr i16, i16* %249, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !15, !noalias !12
  %259 = or i64 %247, 16
  %260 = getelementptr i16, i16* %216, i64 %259
  %261 = getelementptr i16, i16* %2, i64 %259
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !12
  %264 = getelementptr i16, i16* %261, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !12
  %267 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !15, !noalias !12
  %268 = getelementptr i16, i16* %260, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !15, !noalias !12
  %270 = or i64 %247, 32
  %271 = getelementptr i16, i16* %216, i64 %270
  %272 = getelementptr i16, i16* %2, i64 %270
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !12
  %275 = getelementptr i16, i16* %272, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !12
  %278 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !15, !noalias !12
  %279 = getelementptr i16, i16* %271, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !15, !noalias !12
  %281 = or i64 %247, 48
  %282 = getelementptr i16, i16* %216, i64 %281
  %283 = getelementptr i16, i16* %2, i64 %281
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !12
  %286 = getelementptr i16, i16* %283, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !12
  %289 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !15, !noalias !12
  %290 = getelementptr i16, i16* %282, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !15, !noalias !12
  %292 = add i64 %247, 64
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !17

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i16, i16* %216, i64 %299
  %302 = getelementptr i16, i16* %2, i64 %299
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !12
  %305 = getelementptr i16, i16* %302, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !12
  %308 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !15, !noalias !12
  %309 = getelementptr i16, i16* %301, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !15, !noalias !12
  %311 = add i64 %299, 16
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !18

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %222, %236
  br i1 %315, label %370, label %316

316:                                              ; preds = %314, %224, %214
  %317 = phi i16* [ %216, %224 ], [ %216, %214 ], [ %237, %314 ]
  %318 = phi i16* [ %2, %224 ], [ %2, %214 ], [ %238, %314 ]
  %319 = ptrtoint i16* %317 to i64
  %320 = add nsw i64 %12, %205
  %321 = add i64 %320, -1
  %322 = getelementptr i16, i16* %215, i64 %321
  %323 = ptrtoint i16* %322 to i64
  %324 = sub i64 %323, %319
  %325 = lshr i64 %324, 1
  %326 = add nuw i64 %325, 1
  %327 = and i64 %326, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %338, label %329

329:                                              ; preds = %316, %329
  %330 = phi i16* [ %334, %329 ], [ %317, %316 ]
  %331 = phi i16* [ %335, %329 ], [ %318, %316 ]
  %332 = phi i64 [ %336, %329 ], [ %327, %316 ]
  %333 = load i16, i16* %331, align 2
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %331, i64 1
  %336 = add i64 %332, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %329, !llvm.loop !19

338:                                              ; preds = %329, %316
  %339 = phi i16* [ %317, %316 ], [ %334, %329 ]
  %340 = phi i16* [ %318, %316 ], [ %335, %329 ]
  %341 = icmp ult i64 %324, 14
  br i1 %341, label %370, label %342

342:                                              ; preds = %338, %342
  %343 = phi i16* [ %367, %342 ], [ %339, %338 ]
  %344 = phi i16* [ %368, %342 ], [ %340, %338 ]
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %343, i64 1
  %347 = getelementptr inbounds i16, i16* %344, i64 1
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %343, i64 2
  %350 = getelementptr inbounds i16, i16* %344, i64 2
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %343, i64 3
  %353 = getelementptr inbounds i16, i16* %344, i64 3
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %343, i64 4
  %356 = getelementptr inbounds i16, i16* %344, i64 4
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %343, i64 5
  %359 = getelementptr inbounds i16, i16* %344, i64 5
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %343, i64 6
  %362 = getelementptr inbounds i16, i16* %344, i64 6
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %343, i64 7
  %365 = getelementptr inbounds i16, i16* %344, i64 7
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %344, i64 8
  %369 = icmp eq i16* %219, %367
  br i1 %369, label %370, label %342, !llvm.loop !20

370:                                              ; preds = %338, %342, %314
  %371 = load i16*, i16** %8, align 8
  %372 = ptrtoint i16* %371 to i64
  %373 = sub i64 %7, %372
  %374 = ashr exact i64 %373, 1
  %375 = sub nsw i64 0, %374
  %376 = getelementptr inbounds i16, i16* %216, i64 %375
  %377 = ptrtoint i16* %376 to i64
  %378 = icmp sgt i64 %373, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %370
  %380 = bitcast i16* %376 to i8*
  %381 = bitcast i16* %371 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %380, i8* align 2 %381, i64 %373, i1 false) #17
  br label %382

382:                                              ; preds = %379, %370
  %383 = load i16*, i16** %18, align 8
  %384 = icmp eq i16* %383, %1
  br i1 %384, label %540, label %385

385:                                              ; preds = %382
  %386 = getelementptr i16, i16* %383, i64 -1
  %387 = ptrtoint i16* %386 to i64
  %388 = sub i64 %387, %7
  %389 = lshr i64 %388, 1
  %390 = add nuw i64 %389, 1
  %391 = icmp ult i64 %390, 16
  br i1 %391, label %487, label %392

392:                                              ; preds = %385
  %393 = add nsw i64 %12, %205
  %394 = getelementptr i16, i16* %383, i64 -1
  %395 = ptrtoint i16* %394 to i64
  %396 = sub i64 %395, %7
  %397 = lshr i64 %396, 1
  %398 = add i64 %393, %397
  %399 = add i64 %398, 1
  %400 = getelementptr i16, i16* %215, i64 %399
  %401 = add nuw i64 %397, 1
  %402 = getelementptr i16, i16* %1, i64 %401
  %403 = icmp ult i16* %219, %402
  %404 = icmp ugt i16* %400, %1
  %405 = and i1 %403, %404
  br i1 %405, label %487, label %406

406:                                              ; preds = %392
  %407 = and i64 %390, -16
  %408 = getelementptr i16, i16* %219, i64 %407
  %409 = getelementptr i16, i16* %1, i64 %407
  %410 = add i64 %407, -16
  %411 = lshr exact i64 %410, 4
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 3
  %414 = icmp ult i64 %410, 48
  br i1 %414, label %466, label %415

415:                                              ; preds = %406
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %463, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %464, %417 ]
  %420 = getelementptr i16, i16* %219, i64 %418
  %421 = getelementptr i16, i16* %1, i64 %418
  %422 = bitcast i16* %421 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !21
  %424 = getelementptr i16, i16* %421, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !21
  %427 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %423, <8 x i16>* %427, align 2, !alias.scope !24, !noalias !21
  %428 = getelementptr i16, i16* %420, i64 8
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %429, align 2, !alias.scope !24, !noalias !21
  %430 = or i64 %418, 16
  %431 = getelementptr i16, i16* %219, i64 %430
  %432 = getelementptr i16, i16* %1, i64 %430
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !21
  %435 = getelementptr i16, i16* %432, i64 8
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !21
  %438 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %438, align 2, !alias.scope !24, !noalias !21
  %439 = getelementptr i16, i16* %431, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %440, align 2, !alias.scope !24, !noalias !21
  %441 = or i64 %418, 32
  %442 = getelementptr i16, i16* %219, i64 %441
  %443 = getelementptr i16, i16* %1, i64 %441
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !21
  %446 = getelementptr i16, i16* %443, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  %448 = load <8 x i16>, <8 x i16>* %447, align 2, !alias.scope !21
  %449 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %449, align 2, !alias.scope !24, !noalias !21
  %450 = getelementptr i16, i16* %442, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %448, <8 x i16>* %451, align 2, !alias.scope !24, !noalias !21
  %452 = or i64 %418, 48
  %453 = getelementptr i16, i16* %219, i64 %452
  %454 = getelementptr i16, i16* %1, i64 %452
  %455 = bitcast i16* %454 to <8 x i16>*
  %456 = load <8 x i16>, <8 x i16>* %455, align 2, !alias.scope !21
  %457 = getelementptr i16, i16* %454, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !21
  %460 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %456, <8 x i16>* %460, align 2, !alias.scope !24, !noalias !21
  %461 = getelementptr i16, i16* %453, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %462, align 2, !alias.scope !24, !noalias !21
  %463 = add i64 %418, 64
  %464 = add i64 %419, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %417, !llvm.loop !26

466:                                              ; preds = %417, %406
  %467 = phi i64 [ 0, %406 ], [ %463, %417 ]
  %468 = icmp eq i64 %413, 0
  br i1 %468, label %485, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %482, %469 ], [ %467, %466 ]
  %471 = phi i64 [ %483, %469 ], [ %413, %466 ]
  %472 = getelementptr i16, i16* %219, i64 %470
  %473 = getelementptr i16, i16* %1, i64 %470
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !21
  %476 = getelementptr i16, i16* %473, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !21
  %479 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %479, align 2, !alias.scope !24, !noalias !21
  %480 = getelementptr i16, i16* %472, i64 8
  %481 = bitcast i16* %480 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %481, align 2, !alias.scope !24, !noalias !21
  %482 = add i64 %470, 16
  %483 = add i64 %471, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %469, !llvm.loop !27

485:                                              ; preds = %469, %466
  %486 = icmp eq i64 %390, %407
  br i1 %486, label %540, label %487

487:                                              ; preds = %485, %392, %385
  %488 = phi i16* [ %219, %392 ], [ %219, %385 ], [ %408, %485 ]
  %489 = phi i16* [ %1, %392 ], [ %1, %385 ], [ %409, %485 ]
  %490 = ptrtoint i16* %489 to i64
  %491 = getelementptr i16, i16* %383, i64 -1
  %492 = ptrtoint i16* %491 to i64
  %493 = sub i64 %492, %490
  %494 = lshr i64 %493, 1
  %495 = add nuw i64 %494, 1
  %496 = and i64 %495, 7
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %507, label %498

498:                                              ; preds = %487, %498
  %499 = phi i16* [ %504, %498 ], [ %488, %487 ]
  %500 = phi i16* [ %503, %498 ], [ %489, %487 ]
  %501 = phi i64 [ %505, %498 ], [ %496, %487 ]
  %502 = load i16, i16* %500, align 2
  store i16 %502, i16* %499, align 2
  %503 = getelementptr inbounds i16, i16* %500, i64 1
  %504 = getelementptr inbounds i16, i16* %499, i64 1
  %505 = add i64 %501, -1
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %498, !llvm.loop !28

507:                                              ; preds = %498, %487
  %508 = phi i16* [ undef, %487 ], [ %504, %498 ]
  %509 = phi i16* [ %488, %487 ], [ %504, %498 ]
  %510 = phi i16* [ %489, %487 ], [ %503, %498 ]
  %511 = icmp ult i64 %493, 14
  br i1 %511, label %540, label %512

512:                                              ; preds = %507, %512
  %513 = phi i16* [ %538, %512 ], [ %509, %507 ]
  %514 = phi i16* [ %537, %512 ], [ %510, %507 ]
  %515 = load i16, i16* %514, align 2
  store i16 %515, i16* %513, align 2
  %516 = getelementptr inbounds i16, i16* %514, i64 1
  %517 = getelementptr inbounds i16, i16* %513, i64 1
  %518 = load i16, i16* %516, align 2
  store i16 %518, i16* %517, align 2
  %519 = getelementptr inbounds i16, i16* %514, i64 2
  %520 = getelementptr inbounds i16, i16* %513, i64 2
  %521 = load i16, i16* %519, align 2
  store i16 %521, i16* %520, align 2
  %522 = getelementptr inbounds i16, i16* %514, i64 3
  %523 = getelementptr inbounds i16, i16* %513, i64 3
  %524 = load i16, i16* %522, align 2
  store i16 %524, i16* %523, align 2
  %525 = getelementptr inbounds i16, i16* %514, i64 4
  %526 = getelementptr inbounds i16, i16* %513, i64 4
  %527 = load i16, i16* %525, align 2
  store i16 %527, i16* %526, align 2
  %528 = getelementptr inbounds i16, i16* %514, i64 5
  %529 = getelementptr inbounds i16, i16* %513, i64 5
  %530 = load i16, i16* %528, align 2
  store i16 %530, i16* %529, align 2
  %531 = getelementptr inbounds i16, i16* %514, i64 6
  %532 = getelementptr inbounds i16, i16* %513, i64 6
  %533 = load i16, i16* %531, align 2
  store i16 %533, i16* %532, align 2
  %534 = getelementptr inbounds i16, i16* %514, i64 7
  %535 = getelementptr inbounds i16, i16* %513, i64 7
  %536 = load i16, i16* %534, align 2
  store i16 %536, i16* %535, align 2
  %537 = getelementptr inbounds i16, i16* %514, i64 8
  %538 = getelementptr inbounds i16, i16* %513, i64 8
  %539 = icmp eq i16* %537, %383
  br i1 %539, label %540, label %512, !llvm.loop !29

540:                                              ; preds = %507, %512, %485, %382
  %541 = phi i16* [ %219, %382 ], [ %408, %485 ], [ %508, %507 ], [ %538, %512 ]
  %542 = ptrtoint i16* %541 to i64
  %543 = load i16*, i16** %8, align 8
  store i64 %377, i64* %189, align 8
  store i64 %542, i64* %24, align 8
  store i64 %218, i64* %16, align 8
  %544 = icmp eq i16* %543, null
  br i1 %544, label %547, label %545

545:                                              ; preds = %540
  %546 = bitcast i16* %543 to i8*
  tail call void @_ZdlPv(i8* %546) #16
  br label %547

547:                                              ; preds = %545, %540, %40, %183, %187, %4
  %548 = phi i16* [ %1, %4 ], [ %1, %187 ], [ %1, %183 ], [ %1, %40 ], [ %216, %540 ], [ %216, %545 ]
  ret i16* %548
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl19AnalyzeCaptureAudioERKNS_11AudioBufferE(%"class.webrtc::GainControlImpl"* nocapture readonly, %"class.webrtc::AudioBuffer"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = alloca [3 x [160 x i16]], align 16
  %4 = alloca [3 x i16*], align 16
  %5 = alloca i32, align 4
  %6 = bitcast [3 x [160 x i16]]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 960, i1 false)
  %7 = bitcast [3 x i16*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds [3 x i16*], [3 x i16*]* %4, i64 0, i64 0
  %9 = getelementptr inbounds [3 x i16*], [3 x i16*]* %4, i64 0, i64 1
  %10 = getelementptr inbounds [3 x i16*], [3 x i16*]* %4, i64 0, i64 2
  %11 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %3, i64 0, i64 0, i64 0
  store i16* %11, i16** %8, align 16
  %12 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %3, i64 0, i64 1, i64 0
  store i16* %12, i16** %9, align 8
  %13 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %3, i64 0, i64 2, i64 0
  store i16* %13, i16** %10, align 16
  %14 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %88 [
    i32 0, label %31
    i32 1, label %16
  ]

16:                                               ; preds = %2
  %17 = bitcast i32* %5 to i8*
  %18 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %19 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %20 = bitcast %"class.std::__1::unique_ptr.1"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %88, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  %28 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  %29 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  %30 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 0
  br label %72

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  %33 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %34 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.1"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  br i1 %39, label %88, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  %44 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  br label %51

45:                                               ; preds = %51
  %46 = load i64, i64* %35, align 8
  %47 = load i64, i64* %37, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %65, %49
  br i1 %50, label %51, label %88

51:                                               ; preds = %40, %45
  %52 = phi i64 [ 0, %40 ], [ %65, %45 ]
  %53 = load i32, i32* %32, align 4
  %54 = load i32*, i32** %41, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 %52
  store i32 %53, i32* %55, align 4
  call void @_ZNK6webrtc11AudioBuffer22ExportSplitChannelDataEmPKPs(%"class.webrtc::AudioBuffer"* %1, i64 %52, i16** nonnull %8) #17
  %56 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %42, align 8
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %56, i64 %52, i32 0, i32 0, i32 0
  %58 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %57, align 8
  %59 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %58, i64 0, i32 1
  %60 = load i8*, i8** %59, align 8
  %61 = load i64, i64* %43, align 8
  %62 = load i64, i64* %44, align 8
  %63 = call i32 @_ZN6webrtc16WebRtcAgc_AddMicEPvPKPsmm(i8* %60, i16** nonnull %8, i64 %61, i64 %62) #17
  %64 = icmp eq i32 %63, 0
  %65 = add nuw i64 %52, 1
  br i1 %64, label %45, label %88

66:                                               ; preds = %72
  %67 = load i64, i64* %20, align 8
  %68 = load i64, i64* %22, align 8
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ult i64 %87, %70
  br i1 %71, label %72, label %88

72:                                               ; preds = %25, %66
  %73 = phi i64 [ 0, %25 ], [ %87, %66 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #17
  store i32 0, i32* %5, align 4
  call void @_ZNK6webrtc11AudioBuffer22ExportSplitChannelDataEmPKPs(%"class.webrtc::AudioBuffer"* %1, i64 %73, i16** nonnull %8) #17
  %74 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %26, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %74, i64 %73, i32 0, i32 0, i32 0
  %76 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %75, align 8
  %77 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %76, i64 0, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = load i64, i64* %27, align 8
  %80 = load i64, i64* %28, align 8
  %81 = load i32, i32* %29, align 4
  %82 = call i32 @_ZN6webrtc20WebRtcAgc_VirtualMicEPvPKPsmmiPi(i8* %78, i16** nonnull %8, i64 %79, i64 %80, i32 %81, i32* nonnull %5) #17
  %83 = load i32, i32* %5, align 4
  %84 = load i32*, i32** %30, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %73
  store i32 %83, i32* %85, align 4
  %86 = icmp eq i32 %82, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #17
  %87 = add nuw i64 %73, 1
  br i1 %86, label %66, label %88

88:                                               ; preds = %72, %66, %51, %45, %31, %16, %2
  %89 = phi i32 [ 0, %2 ], [ 0, %31 ], [ 0, %16 ], [ -1, %51 ], [ 0, %45 ], [ -1, %72 ], [ 0, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %6) #17
  ret i32 %89
}

declare void @_ZNK6webrtc11AudioBuffer22ExportSplitChannelDataEmPKPs(%"class.webrtc::AudioBuffer"*, i64, i16**) local_unnamed_addr #2

declare i32 @_ZN6webrtc16WebRtcAgc_AddMicEPvPKPsmm(i8*, i16**, i64, i64) local_unnamed_addr #2

declare i32 @_ZN6webrtc20WebRtcAgc_VirtualMicEPvPKPsmmiPi(i8*, i16**, i64, i64, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl19ProcessCaptureAudioEPNS_11AudioBufferEb(%"class.webrtc::GainControlImpl"* nocapture, %"class.webrtc::AudioBuffer"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca [11 x float], align 16
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca [3 x [160 x i16]], align 16
  %8 = alloca [3 x i16*], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca [3 x [160 x i16]], align 16
  %12 = alloca [3 x i16*], align 16
  %13 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 10
  %18 = load i8, i8* %17, align 8, !range !30
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %338, label %20

20:                                               ; preds = %16, %3
  %21 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 11
  store i8 0, i8* %21, align 1
  %22 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %23 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.1"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  %29 = inttoptr i64 %27 to %"class.std::__1::unique_ptr.1"*
  br i1 %28, label %101, label %30

30:                                               ; preds = %20
  %31 = bitcast [3 x [160 x i16]]* %7 to i8*
  %32 = bitcast [3 x i16*]* %8 to i8*
  %33 = getelementptr inbounds [3 x i16*], [3 x i16*]* %8, i64 0, i64 0
  %34 = getelementptr inbounds [3 x i16*], [3 x i16*]* %8, i64 0, i64 1
  %35 = getelementptr inbounds [3 x i16*], [3 x i16*]* %8, i64 0, i64 2
  %36 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %7, i64 0, i64 0, i64 0
  %37 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %7, i64 0, i64 1, i64 0
  %38 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %7, i64 0, i64 2, i64 0
  %39 = bitcast i32* %9 to i8*
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  %42 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  %43 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 0
  %44 = zext i1 %2 to i16
  br label %54

45:                                               ; preds = %54
  %46 = inttoptr i64 %81 to %"class.std::__1::unique_ptr.1"*
  %47 = icmp ugt i64 %83, 1
  br i1 %47, label %48, label %101

48:                                               ; preds = %45
  %49 = add nsw i64 %83, -1
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %82, 16
  br i1 %51, label %85, label %52

52:                                               ; preds = %48
  %53 = sub nsw i64 %49, %50
  br label %137

54:                                               ; preds = %30, %54
  %55 = phi i1 [ false, %30 ], [ %73, %54 ]
  %56 = phi i64 [ 0, %30 ], [ %79, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %31) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 960, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #17
  store i16* %36, i16** %33, align 16
  store i16* %37, i16** %34, align 8
  store i16* %38, i16** %35, align 16
  call void @_ZNK6webrtc11AudioBuffer22ExportSplitChannelDataEmPKPs(%"class.webrtc::AudioBuffer"* %1, i64 %56, i16** nonnull %33) #17
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #17
  store i32 0, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #17
  store i8 0, i8* %10, align 1
  %57 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %40, align 8
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %57, i64 %56, i32 0, i32 0, i32 0
  %59 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %58, align 8
  %60 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %59, i64 0, i32 1
  %61 = load i8*, i8** %60, align 8
  %62 = load i64, i64* %41, align 8
  %63 = load i64, i64* %42, align 8
  %64 = load i32*, i32** %43, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 %56
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %59, i64 0, i32 0, i64 0
  %68 = call i32 @_ZN6webrtc17WebRtcAgc_AnalyzeEPvPKPKsmmiPisPhS5_(i8* %61, i16** nonnull %33, i64 %62, i64 %63, i32 %66, i32* nonnull %9, i16 signext %44, i8* nonnull %10, i32* %67) #17
  %69 = load i32, i32* %9, align 4
  %70 = load i32*, i32** %43, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %56
  store i32 %69, i32* %71, align 4
  %72 = icmp ne i32 %68, 0
  %73 = or i1 %55, %72
  %74 = load i8, i8* %21, align 1, !range !30
  %75 = load i8, i8* %10, align 1
  %76 = icmp eq i8 %75, 1
  %77 = zext i1 %76 to i8
  %78 = or i8 %74, %77
  store i8 %78, i8* %21, align 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #17
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %31) #17
  %79 = add nuw i64 %56, 1
  %80 = load i64, i64* %24, align 8
  %81 = load i64, i64* %26, align 8
  %82 = sub i64 %80, %81
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %79, %83
  br i1 %84, label %54, label %45

85:                                               ; preds = %137, %48
  %86 = phi i64 [ undef, %48 ], [ %161, %137 ]
  %87 = phi i64 [ 1, %48 ], [ %162, %137 ]
  %88 = phi i64 [ 0, %48 ], [ %161, %137 ]
  %89 = icmp eq i64 %50, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %88, i32 0, i32 0, i32 0
  %92 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %91, align 8
  %93 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %92, i64 0, i32 0, i64 10
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %87, i32 0, i32 0, i32 0
  %96 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %95, align 8
  %97 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %96, i64 0, i32 0, i64 10
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %94, %98
  %100 = select i1 %99, i64 %87, i64 %88
  br label %101

101:                                              ; preds = %90, %85, %20, %45
  %102 = phi i1 [ %73, %45 ], [ false, %20 ], [ %73, %85 ], [ %73, %90 ]
  %103 = phi i64 [ %80, %45 ], [ %25, %20 ], [ %80, %85 ], [ %80, %90 ]
  %104 = phi i64 [ %81, %45 ], [ %27, %20 ], [ %81, %85 ], [ %81, %90 ]
  %105 = phi %"class.std::__1::unique_ptr.1"* [ %46, %45 ], [ %29, %20 ], [ %46, %85 ], [ %46, %90 ]
  %106 = phi i64 [ 0, %45 ], [ 0, %20 ], [ %86, %85 ], [ %100, %90 ]
  %107 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 2
  %108 = load i8, i8* %107, align 8, !range !30
  %109 = icmp eq i8 %108, 0
  %110 = icmp ne i64 %103, %104
  br i1 %109, label %123, label %111

111:                                              ; preds = %101
  br i1 %110, label %112, label %274

112:                                              ; preds = %111
  %113 = bitcast [3 x [160 x i16]]* %11 to i8*
  %114 = bitcast [3 x i16*]* %12 to i8*
  %115 = getelementptr inbounds [3 x i16*], [3 x i16*]* %12, i64 0, i64 0
  %116 = getelementptr inbounds [3 x i16*], [3 x i16*]* %12, i64 0, i64 1
  %117 = getelementptr inbounds [3 x i16*], [3 x i16*]* %12, i64 0, i64 2
  %118 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %11, i64 0, i64 0, i64 0
  %119 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %11, i64 0, i64 1, i64 0
  %120 = getelementptr inbounds [3 x [160 x i16]], [3 x [160 x i16]]* %11, i64 0, i64 2, i64 0
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  br label %165

123:                                              ; preds = %101
  br i1 %110, label %124, label %274

124:                                              ; preds = %123
  %125 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 8
  %126 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %128 = bitcast [11 x float]* %4 to i8*
  %129 = getelementptr inbounds [11 x float], [11 x float]* %4, i64 0, i64 4
  %130 = getelementptr inbounds [11 x float], [11 x float]* %4, i64 0, i64 8
  %131 = getelementptr inbounds [11 x float], [11 x float]* %4, i64 0, i64 9
  %132 = getelementptr inbounds [11 x float], [11 x float]* %4, i64 0, i64 10
  %133 = bitcast float* %5 to i8*
  %134 = bitcast float* %6 to i8*
  %135 = bitcast [11 x float]* %4 to <4 x float>*
  %136 = bitcast float* %129 to <4 x float>*
  br label %183

137:                                              ; preds = %137, %52
  %138 = phi i64 [ 1, %52 ], [ %162, %137 ]
  %139 = phi i64 [ 0, %52 ], [ %161, %137 ]
  %140 = phi i64 [ %53, %52 ], [ %163, %137 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %139, i32 0, i32 0, i32 0
  %142 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %141, align 8
  %143 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %142, i64 0, i32 0, i64 10
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %138, i32 0, i32 0, i32 0
  %146 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %145, align 8
  %147 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %146, i64 0, i32 0, i64 10
  %148 = load i32, i32* %147, align 8
  %149 = icmp slt i32 %144, %148
  %150 = select i1 %149, i64 %138, i64 %139
  %151 = add nuw i64 %138, 1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %150, i32 0, i32 0, i32 0
  %153 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %152, align 8
  %154 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %153, i64 0, i32 0, i64 10
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %46, i64 %151, i32 0, i32 0, i32 0
  %157 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %156, align 8
  %158 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %157, i64 0, i32 0, i64 10
  %159 = load i32, i32* %158, align 8
  %160 = icmp slt i32 %155, %159
  %161 = select i1 %160, i64 %151, i64 %150
  %162 = add nuw i64 %138, 2
  %163 = add i64 %140, -2
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %85, label %137

165:                                              ; preds = %112, %165
  %166 = phi i64 [ 0, %112 ], [ %177, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 960, i8* nonnull %113) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 -86, i64 960, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #17
  store i16* %118, i16** %115, align 16
  store i16* %119, i16** %116, align 8
  store i16* %120, i16** %117, align 16
  call void @_ZNK6webrtc11AudioBuffer22ExportSplitChannelDataEmPKPs(%"class.webrtc::AudioBuffer"* %1, i64 %166, i16** nonnull %115) #17
  %167 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %121, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %167, i64 %166, i32 0, i32 0, i32 0
  %169 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %168, align 8
  %170 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %169, i64 0, i32 1
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %167, i64 %106, i32 0, i32 0, i32 0
  %173 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %172, align 8
  %174 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %173, i64 0, i32 0, i64 0
  %175 = load i64, i64* %122, align 8
  %176 = call i32 @_ZN6webrtc17WebRtcAgc_ProcessEPKvPKiPKPKsmPKPs(i8* %171, i32* %174, i16** nonnull %115, i64 %175, i16** nonnull %115) #17
  call void @_ZN6webrtc11AudioBuffer22ImportSplitChannelDataEmPKPKs(%"class.webrtc::AudioBuffer"* %1, i64 %166, i16** nonnull %115) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #17
  call void @llvm.lifetime.end.p0i8(i64 960, i8* nonnull %113) #17
  %177 = add nuw i64 %166, 1
  %178 = load i64, i64* %24, align 8
  %179 = load i64, i64* %26, align 8
  %180 = sub i64 %178, %179
  %181 = ashr exact i64 %180, 3
  %182 = icmp ult i64 %177, %181
  br i1 %182, label %165, label %274

183:                                              ; preds = %124, %266
  %184 = phi i64 [ %104, %124 ], [ %267, %266 ]
  %185 = phi i64 [ %103, %124 ], [ %268, %266 ]
  %186 = phi %"class.std::__1::unique_ptr.1"* [ %105, %124 ], [ %273, %266 ]
  %187 = phi i64 [ 0, %124 ], [ %269, %266 ]
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %186, i64 %106, i32 0, i32 0, i32 0
  %189 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %188, align 8
  %190 = load i64, i64* %125, align 8
  %191 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %126, align 8
  %192 = icmp eq %"class.webrtc::ChannelBuffer"* %191, null
  br i1 %192, label %193, label %195

193:                                              ; preds = %183
  %194 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %127, align 8
  br label %195

195:                                              ; preds = %183, %193
  %196 = phi %"class.webrtc::ChannelBuffer"* [ %194, %193 ], [ %191, %183 ]
  %197 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %196, i64 0, i32 7
  %198 = load i64, i64* %197, align 8
  %199 = mul i64 %198, %187
  %200 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %196, i64 0, i32 2, i32 0, i32 0, i32 0
  %201 = load float**, float*** %200, align 8
  %202 = getelementptr inbounds float*, float** %201, i64 %199
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %128) #17
  %203 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"* %189 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4
  %205 = sitofp <4 x i32> %204 to <4 x float>
  %206 = fmul <4 x float> %205, <float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000>
  store <4 x float> %206, <4 x float>* %135, align 16
  %207 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %189, i64 0, i32 0, i64 4
  %208 = bitcast i32* %207 to <4 x i32>*
  %209 = load <4 x i32>, <4 x i32>* %208, align 4
  %210 = sitofp <4 x i32> %209 to <4 x float>
  %211 = fmul <4 x float> %210, <float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000, float 0x3EF0000000000000>
  store <4 x float> %211, <4 x float>* %136, align 16
  %212 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %189, i64 0, i32 0, i64 8
  %213 = load i32, i32* %212, align 4
  %214 = sitofp i32 %213 to float
  %215 = fmul float %214, 0x3EF0000000000000
  store float %215, float* %130, align 16
  %216 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %189, i64 0, i32 0, i64 9
  %217 = load i32, i32* %216, align 4
  %218 = sitofp i32 %217 to float
  %219 = fmul float %218, 0x3EF0000000000000
  store float %219, float* %131, align 4
  %220 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %189, i64 0, i32 0, i64 10
  %221 = load i32, i32* %220, align 4
  %222 = sitofp i32 %221 to float
  %223 = fmul float %222, 0x3EF0000000000000
  store float %223, float* %132, align 8
  %224 = icmp eq i64 %190, 0
  br i1 %224, label %266, label %225

225:                                              ; preds = %195
  %226 = extractelement <4 x float> %206, i32 0
  br label %227

227:                                              ; preds = %225, %233
  %228 = phi i64 [ %234, %233 ], [ 0, %225 ]
  %229 = getelementptr inbounds float*, float** %202, i64 %228
  %230 = load float*, float** %229, align 8
  br label %236

231:                                              ; preds = %246
  %232 = icmp eq i64 %240, 10
  br i1 %232, label %233, label %236

233:                                              ; preds = %231
  %234 = add nuw i64 %228, 1
  %235 = icmp eq i64 %234, %190
  br i1 %235, label %263, label %227

236:                                              ; preds = %231, %227
  %237 = phi i64 [ %245, %231 ], [ 0, %227 ]
  %238 = phi float [ %242, %231 ], [ %226, %227 ]
  %239 = phi i64 [ %240, %231 ], [ 0, %227 ]
  %240 = add nuw nsw i64 %239, 1
  %241 = getelementptr inbounds [11 x float], [11 x float]* %4, i64 0, i64 %240
  %242 = load float, float* %241, align 4
  %243 = fsub float %242, %238
  %244 = fmul float %243, 6.250000e-02
  %245 = add nuw nsw i64 %237, 16
  br label %246

246:                                              ; preds = %246, %236
  %247 = phi i64 [ %237, %236 ], [ %261, %246 ]
  %248 = phi float [ %238, %236 ], [ %260, %246 ]
  %249 = getelementptr inbounds float, float* %230, i64 %247
  %250 = load float, float* %249, align 4
  %251 = fmul float %248, %250
  store float %251, float* %249, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133)
  store float 3.276700e+04, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134)
  store float -3.276800e+04, float* %6, align 4
  %252 = fcmp ogt float %251, -3.276800e+04
  %253 = select i1 %252, float* %249, float* %6
  %254 = load float, float* %253, align 4
  %255 = fcmp olt float %254, 3.276700e+04
  %256 = select i1 %255, float* %253, float* %5
  %257 = bitcast float* %256 to i32*
  %258 = load i32, i32* %257, align 4
  %259 = bitcast float* %249 to i32*
  store i32 %258, i32* %259, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133)
  %260 = fadd float %244, %248
  %261 = add nuw nsw i64 %247, 1
  %262 = icmp eq i64 %261, %245
  br i1 %262, label %231, label %246

263:                                              ; preds = %233
  %264 = load i64, i64* %24, align 8
  %265 = load i64, i64* %26, align 8
  br label %266

266:                                              ; preds = %263, %195
  %267 = phi i64 [ %265, %263 ], [ %184, %195 ]
  %268 = phi i64 [ %264, %263 ], [ %185, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %128) #17
  %269 = add nuw i64 %187, 1
  %270 = sub i64 %268, %267
  %271 = ashr exact i64 %270, 3
  %272 = icmp ult i64 %269, %271
  %273 = inttoptr i64 %267 to %"class.std::__1::unique_ptr.1"*
  br i1 %272, label %183, label %274

274:                                              ; preds = %165, %266, %111, %123
  %275 = phi i64 [ %104, %111 ], [ %104, %123 ], [ %267, %266 ], [ %179, %165 ]
  %276 = phi i64 [ %104, %111 ], [ %104, %123 ], [ %268, %266 ], [ %178, %165 ]
  %277 = load i32, i32* %13, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %335

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 0
  %281 = load i32*, i32** %280, align 8
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  store i32 %282, i32* %283, align 4
  %284 = sub i64 %276, %275
  %285 = ashr exact i64 %284, 3
  %286 = icmp ugt i64 %285, 1
  br i1 %286, label %287, label %335

287:                                              ; preds = %279
  %288 = add nsw i64 %285, -1
  %289 = add nsw i64 %285, -2
  %290 = and i64 %288, 3
  %291 = icmp ult i64 %289, 3
  br i1 %291, label %320, label %292

292:                                              ; preds = %287
  %293 = sub nsw i64 %288, %290
  br label %294

294:                                              ; preds = %294, %292
  %295 = phi i32 [ %282, %292 ], [ %316, %294 ]
  %296 = phi i64 [ 1, %292 ], [ %317, %294 ]
  %297 = phi i64 [ %293, %292 ], [ %318, %294 ]
  %298 = getelementptr inbounds i32, i32* %281, i64 %296
  %299 = load i32, i32* %298, align 4
  %300 = icmp slt i32 %299, %295
  %301 = select i1 %300, i32 %299, i32 %295
  store i32 %301, i32* %283, align 4
  %302 = add nuw nsw i64 %296, 1
  %303 = getelementptr inbounds i32, i32* %281, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = icmp slt i32 %304, %301
  %306 = select i1 %305, i32 %304, i32 %301
  store i32 %306, i32* %283, align 4
  %307 = add nuw nsw i64 %296, 2
  %308 = getelementptr inbounds i32, i32* %281, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = icmp slt i32 %309, %306
  %311 = select i1 %310, i32 %309, i32 %306
  store i32 %311, i32* %283, align 4
  %312 = add nuw i64 %296, 3
  %313 = getelementptr inbounds i32, i32* %281, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = icmp slt i32 %314, %311
  %316 = select i1 %315, i32 %314, i32 %311
  store i32 %316, i32* %283, align 4
  %317 = add nuw i64 %296, 4
  %318 = add i64 %297, -4
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %294

320:                                              ; preds = %294, %287
  %321 = phi i32 [ %282, %287 ], [ %316, %294 ]
  %322 = phi i64 [ 1, %287 ], [ %317, %294 ]
  %323 = icmp eq i64 %290, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %320, %324
  %325 = phi i32 [ %331, %324 ], [ %321, %320 ]
  %326 = phi i64 [ %332, %324 ], [ %322, %320 ]
  %327 = phi i64 [ %333, %324 ], [ %290, %320 ]
  %328 = getelementptr inbounds i32, i32* %281, i64 %326
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %329, %325
  %331 = select i1 %330, i32 %329, i32 %325
  store i32 %331, i32* %283, align 4
  %332 = add nuw i64 %326, 1
  %333 = add i64 %327, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !31

335:                                              ; preds = %320, %324, %279, %274
  br i1 %102, label %338, label %336

336:                                              ; preds = %335
  %337 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 10
  store i8 0, i8* %337, align 8
  br label %338

338:                                              ; preds = %336, %335, %16
  %339 = phi i32 [ -11, %16 ], [ 0, %336 ], [ -1, %335 ]
  ret i32 %339
}

declare i32 @_ZN6webrtc17WebRtcAgc_AnalyzeEPvPKPKsmmiPisPhS5_(i8*, i16**, i64, i64, i32, i32*, i16 signext, i8*, i32*) local_unnamed_addr #2

declare i32 @_ZN6webrtc17WebRtcAgc_ProcessEPKvPKiPKPKsmPKPs(i8*, i32*, i16**, i64, i16**) local_unnamed_addr #2

declare void @_ZN6webrtc11AudioBuffer22ImportSplitChannelDataEmPKPKs(%"class.webrtc::AudioBuffer"*, i64, i16**) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl23set_stream_analog_levelEi(%"class.webrtc::GainControlImpl"* nocapture, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 10
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  store i32 %1, i32* %12, align 4
  br label %13

13:                                               ; preds = %2, %7, %11
  %14 = phi i32 [ 0, %11 ], [ -6, %7 ], [ -6, %2 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc15GainControlImpl19stream_analog_levelEv(%"class.webrtc::GainControlImpl"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl8set_modeENS_11GainControl4ModeE(%"class.webrtc::GainControlImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp ult i32 %1, 3
  br i1 %3, label %4, label %20

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !30
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10, !prof !32

9:                                                ; preds = %4
  tail call void @llvm.trap() #17
  unreachable

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !30
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15, !prof !32

14:                                               ; preds = %10
  tail call void @llvm.trap() #17
  unreachable

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  tail call void @_ZN6webrtc15GainControlImpl10InitializeEmi(%"class.webrtc::GainControlImpl"* %0, i64 %17, i32 %19)
  br label %20

20:                                               ; preds = %2, %15
  %21 = phi i32 [ 0, %15 ], [ -6, %2 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15GainControlImpl10InitializeEmi(%"class.webrtc::GainControlImpl"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15
  %7 = bitcast %"class.absl::optional.17"* %6 to i64*
  %8 = zext i32 %2 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, 1
  store i64 %10, i64* %7, align 8
  %11 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.1"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, %1
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.1"*
  %21 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.1"*
  br i1 %19, label %22, label %24

22:                                               ; preds = %3
  %23 = sub i64 %1, %18
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN6webrtc15GainControlImpl12MonoAgcStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector"* %11, i64 %23) #17
  br label %42

24:                                               ; preds = %3
  %25 = icmp ugt i64 %18, %1
  br i1 %25, label %26, label %42

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %20, i64 %1
  %28 = icmp eq %"class.std::__1::unique_ptr.1"* %27, %21
  br i1 %28, label %41, label %29

29:                                               ; preds = %26, %39
  %30 = phi %"class.std::__1::unique_ptr.1"* [ %31, %39 ], [ %21, %26 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %32, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %32, align 8
  %34 = icmp eq %"struct.webrtc::GainControlImpl::MonoAgcState"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %33, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8* %37) #17
  %38 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"* %33 to i8*
  tail call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %35, %29
  %40 = icmp eq %"class.std::__1::unique_ptr.1"* %31, %27
  br i1 %40, label %41, label %29

41:                                               ; preds = %39, %26
  store %"class.std::__1::unique_ptr.1"* %27, %"class.std::__1::unique_ptr.1"** %12, align 8
  br label %42

42:                                               ; preds = %22, %24, %41
  %43 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13
  %44 = load i8, i8* %4, align 8, !range !30
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %47, !prof !32

46:                                               ; preds = %42
  tail call void @llvm.trap() #17
  unreachable

47:                                               ; preds = %42
  %48 = load i64, i64* %5, align 8
  %49 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 13, i32 0, i32 1
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector.10"* %43 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 2
  %56 = icmp ugt i64 %48, %55
  %57 = inttoptr i64 %53 to i32*
  br i1 %56, label %58, label %60

58:                                               ; preds = %47
  %59 = sub i64 %48, %55
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.10"* %43, i64 %59) #17
  br label %64

60:                                               ; preds = %47
  %61 = icmp ult i64 %48, %55
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = getelementptr inbounds i32, i32* %57, i64 %48
  store i32* %63, i32** %49, align 8
  br label %64

64:                                               ; preds = %58, %60, %62
  %65 = load i64, i64* %13, align 8
  %66 = load i64, i64* %15, align 8
  %67 = icmp eq i64 %65, %66
  br i1 %67, label %109, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 4
  %71 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 5
  %72 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  %73 = getelementptr inbounds %"class.absl::optional.17", %"class.absl::optional.17"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 9
  %76 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %43, i64 0, i32 0, i32 0
  br label %110

77:                                               ; preds = %137
  %78 = icmp eq i64 %155, %156
  br i1 %78, label %109, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  %81 = load i8, i8* %80, align 8, !range !30
  %82 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  %85 = load i32, i32* %84, align 4
  %86 = zext i8 %81 to i48
  %87 = shl nuw nsw i48 %86, 32
  %88 = shl i32 %83, 16
  %89 = and i32 %85, 65535
  %90 = or i32 %89, %88
  %91 = zext i32 %90 to i48
  %92 = or i48 %87, %91
  %93 = or i48 %92, -94557999988736
  br label %94

94:                                               ; preds = %94, %79
  %95 = phi i64 [ %156, %79 ], [ %105, %94 ]
  %96 = phi i64 [ 0, %79 ], [ %103, %94 ]
  %97 = inttoptr i64 %95 to %"class.std::__1::unique_ptr.1"*
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %97, i64 %96, i32 0, i32 0, i32 0
  %99 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %98, align 8
  %100 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %99, i64 0, i32 1
  %101 = load i8*, i8** %100, align 8
  %102 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %101, i48 %93) #17
  %103 = add nuw i64 %96, 1
  %104 = load i64, i64* %13, align 8
  %105 = load i64, i64* %15, align 8
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = icmp ult i64 %103, %107
  br i1 %108, label %94, label %109

109:                                              ; preds = %94, %64, %77
  ret void

110:                                              ; preds = %68, %137
  %111 = phi i64 [ %66, %68 ], [ %156, %137 ]
  %112 = phi i64 [ 0, %68 ], [ %154, %137 ]
  %113 = inttoptr i64 %111 to %"class.std::__1::unique_ptr.1"*
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %113, i64 %112, i32 0, i32 0, i32 0
  %115 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %114, align 8
  %116 = icmp eq %"struct.webrtc::GainControlImpl::MonoAgcState"* %115, null
  br i1 %116, label %117, label %132

117:                                              ; preds = %110
  %118 = tail call i8* @_Znwm(i64 56) #16
  %119 = tail call i8* @_ZN6webrtc16WebRtcAgc_CreateEv() #17
  %120 = getelementptr inbounds i8, i8* %118, i64 48
  %121 = bitcast i8* %120 to i8**
  store i8* %119, i8** %121, align 8
  %122 = icmp eq i8* %119, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %117
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.2, i64 0, i64 0), i32 82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #18
  unreachable

124:                                              ; preds = %117
  %125 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %114, align 8
  %126 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"** %114 to i8**
  store i8* %118, i8** %126, align 8
  %127 = icmp eq %"struct.webrtc::GainControlImpl::MonoAgcState"* %125, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %125, i64 0, i32 1
  %130 = load i8*, i8** %129, align 8
  tail call void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8* %130) #17
  %131 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"* %125 to i8*
  tail call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %110, %128, %124
  %133 = load i32, i32* %72, align 4
  %134 = load i8, i8* %73, align 4, !range !30
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %137, !prof !32

136:                                              ; preds = %132
  tail call void @llvm.trap() #17
  unreachable

137:                                              ; preds = %132
  %138 = icmp ult i32 %133, 3
  %139 = trunc i32 %133 to i16
  %140 = add i16 %139, 1
  %141 = select i1 %138, i16 %140, i16 -1
  %142 = load i32, i32* %71, align 4
  %143 = load i32, i32* %70, align 8
  %144 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %69, align 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %144, i64 %112, i32 0, i32 0, i32 0
  %146 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %145, align 8
  %147 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %146, i64 0, i32 1
  %148 = load i8*, i8** %147, align 8
  %149 = load i32, i32* %74, align 4
  %150 = tail call i32 @_ZN6webrtc14WebRtcAgc_InitEPviisj(i8* %148, i32 %143, i32 %142, i16 signext %141, i32 %149) #17
  %151 = load i32, i32* %75, align 4
  %152 = load i32*, i32** %76, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 %112
  store i32 %151, i32* %153, align 4
  %154 = add nuw i64 %112, 1
  %155 = load i64, i64* %13, align 8
  %156 = load i64, i64* %15, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ult i64 %154, %158
  br i1 %159, label %110, label %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl23set_analog_level_limitsEii(%"class.webrtc::GainControlImpl"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = icmp slt i32 %1, 0
  %5 = icmp sgt i32 %2, 65535
  %6 = or i1 %4, %5
  %7 = icmp slt i32 %2, %1
  %8 = or i1 %7, %6
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 4
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 5
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !30
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16, !prof !32

15:                                               ; preds = %9
  tail call void @llvm.trap() #17
  unreachable

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !30
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !32

20:                                               ; preds = %16
  tail call void @llvm.trap() #17
  unreachable

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  tail call void @_ZN6webrtc15GainControlImpl10InitializeEmi(%"class.webrtc::GainControlImpl"* %0, i64 %23, i32 %25)
  br label %26

26:                                               ; preds = %3, %21
  %27 = phi i32 [ 0, %21 ], [ -6, %3 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl21set_target_level_dbfsEi(%"class.webrtc::GainControlImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = icmp ugt i32 %1, 31
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.1"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %44, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !30
  %16 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  %18 = zext i8 %15 to i48
  %19 = shl nuw nsw i48 %18, 32
  %20 = shl i32 %17, 16
  %21 = and i32 %1, 65535
  %22 = or i32 %20, %21
  %23 = zext i32 %22 to i48
  %24 = or i48 %19, %23
  %25 = or i48 %24, -94557999988736
  br label %26

26:                                               ; preds = %26, %13
  %27 = phi i64 [ %11, %13 ], [ %40, %26 ]
  %28 = phi i64 [ 0, %13 ], [ %38, %26 ]
  %29 = phi i32 [ 0, %13 ], [ %37, %26 ]
  %30 = inttoptr i64 %27 to %"class.std::__1::unique_ptr.1"*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %30, i64 %28, i32 0, i32 0, i32 0
  %32 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %31, align 8
  %33 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %32, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %34, i48 %25) #17
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i32 %29, i32 %35
  %38 = add nuw i64 %28, 1
  %39 = load i64, i64* %8, align 8
  %40 = load i64, i64* %10, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %38, %42
  br i1 %43, label %26, label %44

44:                                               ; preds = %26, %4, %2
  %45 = phi i32 [ -6, %2 ], [ 0, %4 ], [ %37, %26 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl9ConfigureEv(%"class.webrtc::GainControlImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %24, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !30
  %12 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = zext i8 %11 to i48
  %17 = shl nuw nsw i48 %16, 32
  %18 = shl i32 %13, 16
  %19 = and i32 %15, 65535
  %20 = or i32 %19, %18
  %21 = zext i32 %20 to i48
  %22 = or i48 %17, %21
  %23 = or i48 %22, -94557999988736
  br label %26

24:                                               ; preds = %26, %1
  %25 = phi i32 [ 0, %1 ], [ %37, %26 ]
  ret i32 %25

26:                                               ; preds = %9, %26
  %27 = phi i64 [ %7, %9 ], [ %40, %26 ]
  %28 = phi i64 [ 0, %9 ], [ %38, %26 ]
  %29 = phi i32 [ 0, %9 ], [ %37, %26 ]
  %30 = inttoptr i64 %27 to %"class.std::__1::unique_ptr.1"*
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %30, i64 %28, i32 0, i32 0, i32 0
  %32 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %31, align 8
  %33 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %32, i64 0, i32 1
  %34 = load i8*, i8** %33, align 8
  %35 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %34, i48 %23) #17
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i32 %29, i32 %35
  %38 = add nuw i64 %28, 1
  %39 = load i64, i64* %4, align 8
  %40 = load i64, i64* %6, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %38, %42
  br i1 %43, label %26, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl23set_compression_gain_dbEi(%"class.webrtc::GainControlImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = icmp ugt i32 %1, 90
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.2, i64 0, i64 0), i32 338, i32 1, i32 0, i32 0) #17
  %7 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 24) #17
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %9, i32 %1) #17
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #17
  br label %52

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %15 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.1"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %52, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  %23 = load i8, i8* %22, align 8, !range !30
  %24 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = zext i8 %23 to i48
  %27 = shl nuw nsw i48 %26, 32
  %28 = shl i32 %1, 16
  %29 = and i32 %25, 65535
  %30 = or i32 %29, %28
  %31 = zext i32 %30 to i48
  %32 = or i48 %27, %31
  %33 = or i48 %32, -94557999988736
  br label %34

34:                                               ; preds = %34, %21
  %35 = phi i64 [ %19, %21 ], [ %48, %34 ]
  %36 = phi i64 [ 0, %21 ], [ %46, %34 ]
  %37 = phi i32 [ 0, %21 ], [ %45, %34 ]
  %38 = inttoptr i64 %35 to %"class.std::__1::unique_ptr.1"*
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %38, i64 %36, i32 0, i32 0, i32 0
  %40 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %39, align 8
  %41 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %40, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %42, i48 %33) #17
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %44, i32 %37, i32 %43
  %46 = add nuw i64 %36, 1
  %47 = load i64, i64* %16, align 8
  %48 = load i64, i64* %18, align 8
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %46, %50
  br i1 %51, label %34, label %52

52:                                               ; preds = %34, %12, %5
  %53 = phi i32 [ -6, %5 ], [ 0, %12 ], [ %45, %34 ]
  ret i32 %53
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc15GainControlImpl14enable_limiterEb(%"class.webrtc::GainControlImpl"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12
  %6 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.1"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %43, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = zext i1 %1 to i48
  %18 = shl nuw nsw i48 %17, 32
  %19 = shl i32 %14, 16
  %20 = and i32 %16, 65535
  %21 = or i32 %20, %19
  %22 = zext i32 %21 to i48
  %23 = or i48 %18, %22
  %24 = or i48 %23, -94557999988736
  br label %25

25:                                               ; preds = %25, %12
  %26 = phi i64 [ %10, %12 ], [ %39, %25 ]
  %27 = phi i64 [ 0, %12 ], [ %37, %25 ]
  %28 = phi i32 [ 0, %12 ], [ %36, %25 ]
  %29 = inttoptr i64 %26 to %"class.std::__1::unique_ptr.1"*
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %29, i64 %27, i32 0, i32 0, i32 0
  %31 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %30, align 8
  %32 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %31, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = tail call i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8* %33, i48 %24) #17
  %35 = icmp eq i32 %34, 0
  %36 = select i1 %35, i32 %28, i32 %34
  %37 = add nuw i64 %27, 1
  %38 = load i64, i64* %7, align 8
  %39 = load i64, i64* %9, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %37, %41
  br i1 %42, label %25, label %43

43:                                               ; preds = %25, %2
  %44 = phi i32 [ 0, %2 ], [ %36, %25 ]
  ret i32 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @_ZN6webrtc14WebRtcAgc_InitEPviisj(i8*, i32, i32, i16 signext, i32) local_unnamed_addr #2

declare i32 @_ZN6webrtc20WebRtcAgc_set_configEPvNS_15WebRtcAgcConfigE(i8*, i48) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc15GainControlImpl4modeEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc15GainControlImpl17target_level_dbfsEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc15GainControlImpl19compression_gain_dbEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc15GainControlImpl18is_limiter_enabledEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 8, !range !30
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc15GainControlImpl20analog_level_minimumEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6webrtc15GainControlImpl20analog_level_maximumEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc15GainControlImpl19stream_is_saturatedEv(%"class.webrtc::GainControlImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::GainControlImpl", %"class.webrtc::GainControlImpl"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 1, !range !30
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #9 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i64 @strlen(i8* %0) #17
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #18
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #16
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #17
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #16
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #14

declare i8* @_ZN6webrtc16WebRtcAgc_CreateEv() local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !30
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN6webrtc15GainControlImpl12MonoAgcStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.1"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.1"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint %"class.std::__1::unique_ptr.1"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %216

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.1"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.1"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.1"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.1"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.1"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !33

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.1"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.1"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.1"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.1"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.1"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.1"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.1"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.1"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.1"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.1"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.1"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.1"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.1"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.1"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.1"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.1"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"struct.webrtc::GainControlImpl::MonoAgcState"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.1"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.1"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.1"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.1"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !34

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.1"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.1"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.1"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.1"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.1"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.1"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.1"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.1"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.1"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.1"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.1"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.1"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.1"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.1"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.1"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.1"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.1"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.1"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.1"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.1"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.1"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.1"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.1"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.1"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.1"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.1"*
  %199 = icmp eq %"class.std::__1::unique_ptr.1"* %195, %198
  br i1 %199, label %212, label %200

200:                                              ; preds = %194, %210
  %201 = phi %"class.std::__1::unique_ptr.1"* [ %202, %210 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"struct.webrtc::GainControlImpl::MonoAgcState"*, %"struct.webrtc::GainControlImpl::MonoAgcState"** %203, align 8
  store %"struct.webrtc::GainControlImpl::MonoAgcState"* null, %"struct.webrtc::GainControlImpl::MonoAgcState"** %203, align 8
  %205 = icmp eq %"struct.webrtc::GainControlImpl::MonoAgcState"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"struct.webrtc::GainControlImpl::MonoAgcState", %"struct.webrtc::GainControlImpl::MonoAgcState"* %204, i64 0, i32 1
  %208 = load i8*, i8** %207, align 8
  tail call void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8* %208) #17
  %209 = bitcast %"struct.webrtc::GainControlImpl::MonoAgcState"* %204 to i8*
  tail call void @_ZdlPv(i8* %209) #16
  br label %210

210:                                              ; preds = %206, %200
  %211 = icmp eq %"class.std::__1::unique_ptr.1"* %202, %198
  br i1 %211, label %212, label %200

212:                                              ; preds = %210, %194
  %213 = icmp eq i64 %197, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %212
  %215 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %215) #16
  br label %216

216:                                              ; preds = %214, %212, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.10"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #17
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.10"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.10"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #18
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #18
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #16
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #17
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #17
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #16
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare void @_ZN6webrtc14WebRtcAgc_FreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !8}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !8}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !8}
!30 = !{i8 0, i8 2}
!31 = distinct !{!31, !10}
!32 = !{!"branch_weights", i32 1, i32 2000}
!33 = distinct !{!33, !10}
!34 = distinct !{!34, !10}
