; ModuleID = '../../third_party/blink/renderer/core/layout/line/line_breaker.cc'
source_filename = "../../third_party/blink/renderer/core/layout/line/line_breaker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::BidiResolver" = type { %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"struct.blink::BidiStatus", i32, %"class.blink::InlineIterator", %"class.blink::InlineIterator", i8, %"class.blink::InlineIterator", i8, [7 x i8], %"class.blink::BidiRunList", %"class.blink::MidpointState", i32, %"class.WTF::Vector.1723", %"struct.blink::BidiRun"*, i8, i8, %"class.WTF::Vector.1728", %"class.WTF::HashMap.1733" }
%"struct.blink::BidiStatus" = type { i32, i32, i32, %class.scoped_refptr.1717 }
%class.scoped_refptr.1717 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1738", i16, %class.scoped_refptr.1717 }
%"class.WTF::ThreadSafeRefCounted.1738" = type { %"class.base::RefCountedThreadSafe.1739" }
%"class.base::RefCountedThreadSafe.1739" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::BidiRunList" = type <{ %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, i32, [4 x i8] }>
%"class.blink::MidpointState" = type <{ %"class.WTF::Vector.1718", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.blink::InlineIterator"*, i32, i32 }
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { %"struct.blink::BidiIsolatedRun"*, i32, i32 }
%"struct.blink::BidiIsolatedRun" = type <{ %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", %"struct.blink::BidiRun"*, i32, i8, [3 x i8] }>
%"struct.blink::BidiRun" = type { %"struct.blink::BidiCharacterRun", %"class.blink::LineLayoutItem", %"class.blink::InlineBox"* }
%"struct.blink::BidiCharacterRun" = type { i8, i8, %"struct.blink::BidiCharacterRun"*, i32, i32 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.WTF::Vector.1728" = type { %"class.WTF::VectorBuffer.1729" }
%"class.WTF::VectorBuffer.1729" = type { %"class.WTF::VectorBufferBase.1730", [64 x i8] }
%"class.WTF::VectorBufferBase.1730" = type { %"class.blink::BidiEmbedding"*, i32, i32 }
%"class.blink::BidiEmbedding" = type { i32, i32 }
%"class.WTF::HashMap.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"struct.WTF::KeyValuePair.1737"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1737" = type { %"struct.blink::BidiRun"*, %"class.blink::MidpointState" }
%"class.blink::InlineIterator" = type { %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", i32, i32 }
%"class.blink::LineLayoutBlockFlow" = type { %"class.blink::LineLayoutBox" }
%"class.blink::LineLayoutBox" = type { %"class.blink::LineLayoutBoxModel" }
%"class.blink::LineLayoutBoxModel" = type { %"class.blink::LineLayoutItem" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1811" }
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1813" }
%"class.blink::Member.1813" = type { %"class.blink::MemberBase.1814" }
%"class.blink::MemberBase.1814" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1839 }
%class.scoped_refptr.1839 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1849" }
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1845" }
%"class.blink::MemberBase.1845" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1847" }
%"class.blink::MemberBase.1847" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1840", %"class.WTF::Vector.1840" }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %class.scoped_refptr.1839*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1825 }
%class.scoped_refptr.1825 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1826", %"class.WTF::Vector.630", %"class.WTF::Vector.1828", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1826" = type { %"class.base::RefCounted.1827" }
%"class.base::RefCounted.1827" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1828" = type { %"class.WTF::VectorBuffer.1829" }
%"class.WTF::VectorBuffer.1829" = type { %"class.WTF::VectorBufferBase.1830" }
%"class.WTF::VectorBufferBase.1830" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1831 }
%union.anon.1831 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1623", %"class.blink::Persistent.1629", %"class.std::__1::unique_ptr.1670", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1686" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.std::__1::unique_ptr.1623" = type { %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.1625" }
%"struct.std::__1::__compressed_pair_elem.1625" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1629" = type { %"class.blink::PersistentBase.1630" }
%"class.blink::PersistentBase.1630" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1647", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1665" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1633", %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1641", %"class.blink::Member.1643", %"class.blink::Member.1643", i8, [7 x i8] }>
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1645", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1710", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1710" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1711", { i64, i64 } }
%"class.blink::WeakMember.1711" = type { %"class.blink::MemberBase.1644" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1645", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1650", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1655" }
%"class.WTF::HashMap.1650" = type { %"class.WTF::HashTable.1651" }
%"class.WTF::HashTable.1651" = type <{ %"struct.WTF::KeyValuePair.1654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1654" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1655" = type { %"class.WTF::VectorBuffer.1656" }
%"class.WTF::VectorBuffer.1656" = type { %"class.WTF::VectorBufferBase.1657" }
%"class.WTF::VectorBufferBase.1657" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1663" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673", %"class.WTF::Vector.1673", %"class.WTF::HashMap.1678", %"class.WTF::Vector.1673", i8, [7 x i8] }>
%"class.WTF::HashMap.1678" = type { %"class.WTF::HashTable.1679" }
%"class.WTF::HashTable.1679" = type <{ %"struct.WTF::KeyValuePair.1682"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1682" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1673" }
%"class.WTF::Vector.1673" = type { %"class.WTF::VectorBuffer.1674" }
%"class.WTF::VectorBuffer.1674" = type { %"class.WTF::VectorBufferBase.1675" }
%"class.WTF::VectorBufferBase.1675" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1689", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1695", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1701", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1701" = type { %"class.blink::PersistentBase.1702" }
%"class.blink::PersistentBase.1702" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1815" }
%"class.WTF::Vector.1815" = type { %"class.WTF::VectorBuffer.1816" }
%"class.WTF::VectorBuffer.1816" = type { %"class.WTF::VectorBufferBase.1817" }
%"class.WTF::VectorBufferBase.1817" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1820", %"class.absl::optional.1820", %"class.absl::optional.1820" }
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, %union.anon.1824 }
%union.anon.1824 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1835" }
%"class.WTF::VectorBuffer.1835" = type { %"class.WTF::VectorBufferBase.1836", [32 x i8] }
%"class.WTF::VectorBufferBase.1836" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::LineInfo" = type { i8, i8, i8, i8, i32, i32 }
%"struct.blink::LayoutTextInfo" = type { %"class.blink::LineLayoutText", %"class.blink::LazyLineBreakIterator", %"class.blink::Font"* }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::LineWidth" = type <{ %"class.blink::LineLayoutBlockFlow", float, float, float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], i32, [4 x i8] }>
%"class.blink::TrailingObjects" = type { %"class.blink::LineLayoutText", %"class.WTF::Vector.1804" }
%"class.WTF::Vector.1804" = type { %"class.WTF::VectorBuffer.1805" }
%"class.WTF::VectorBuffer.1805" = type { %"class.WTF::VectorBufferBase.1806", [32 x i8] }
%"class.WTF::VectorBufferBase.1806" = type { %"class.blink::LineLayoutItem"*, i32, i32 }
%"class.blink::LineBreaker" = type { %"class.blink::LineLayoutBlockFlow", i8, i32, %"class.WTF::Vector.1712" }
%"class.WTF::Vector.1712" = type { %"class.WTF::VectorBuffer.1713" }
%"class.WTF::VectorBuffer.1713" = type { %"class.WTF::VectorBufferBase.1714" }
%"class.WTF::VectorBufferBase.1714" = type { %"class.blink::LineLayoutBox"*, i32, i32 }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1854", %"class.std::__1::unique_ptr.1864" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1740, %"class.WTF::Vector.1741", %"class.std::__1::unique_ptr.1746", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1767, %"class.blink::Persistent.1768" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1740 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1741" = type { %"class.WTF::VectorBuffer.1742" }
%"class.WTF::VectorBuffer.1742" = type { %"class.WTF::VectorBufferBase.1743", [8 x i8] }
%"class.WTF::VectorBufferBase.1743" = type { %class.scoped_refptr.1740*, i32, i32 }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1749", %"class.absl::optional.1754", %"class.absl::optional.1759" }
%"class.absl::optional.1749" = type { %"class.absl::optional_internal::optional_data.1750" }
%"class.absl::optional_internal::optional_data.1750" = type { %"class.absl::optional_internal::optional_data_base.1751" }
%"class.absl::optional_internal::optional_data_base.1751" = type { %"class.absl::optional_internal::optional_data_dtor_base.1752" }
%"class.absl::optional_internal::optional_data_dtor_base.1752" = type { i8, %union.anon.1753 }
%union.anon.1753 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, [3 x i8], %union.anon.1758 }
%union.anon.1758 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1759" = type { %"class.absl::optional_internal::optional_data.1760" }
%"class.absl::optional_internal::optional_data.1760" = type { %"class.absl::optional_internal::optional_data_base.1761" }
%"class.absl::optional_internal::optional_data_base.1761" = type { %"class.absl::optional_internal::optional_data_dtor_base.1762" }
%"class.absl::optional_internal::optional_data_dtor_base.1762" = type { i8, %union.anon.1763 }
%union.anon.1763 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1767 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1768" = type { %"class.blink::PersistentBase.1769" }
%"class.blink::PersistentBase.1769" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1772", %"struct.blink::PhysicalRect", %"class.blink::Member.1782" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"class.WTF::HashSet.1775"* }
%"class.WTF::HashSet.1775" = type { %"class.WTF::HashTable.1776" }
%"class.WTF::HashTable.1776" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList.1853" }
%"class.blink::InlineBoxList.1853" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1854" = type { %"class.blink::PersistentBase.1855" }
%"class.blink::PersistentBase.1855" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1858", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1867", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1867" = type { %"class.WTF::HashTable.1870", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1870" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1873", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1873" = type { %"class.std::__1::__compressed_pair.1874" }
%"class.std::__1::__compressed_pair.1874" = type { %"struct.std::__1::__compressed_pair_elem.1875" }
%"struct.std::__1::__compressed_pair_elem.1875" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1717, %"class.std::__1::unique_ptr.1784", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%"class.std::__1::unique_ptr.1784" = type { %"class.std::__1::__compressed_pair.1785" }
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"class.WTF::Vector.1787"* }
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1879, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.1879 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797", [4096 x i8] }
%"class.WTF::VectorBufferBase.1797" = type { %"class.blink::WordMeasurement"*, i32, i32 }
%"class.blink::WordMeasurement" = type { %"class.blink::LineLayoutText", float, i32, i32, [4 x i8], %"class.WTF::HashSet.1798", %"class.blink::FloatRect" }
%"class.WTF::HashSet.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"class.blink::SimpleFontData"**, i32, i32, i32, [4 x i8] }>
%"class.blink::BreakingContext" = type { %"class.blink::BidiResolver"*, %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::LineLayoutBlockFlow", %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, %"class.blink::LineInfo"*, %"struct.blink::LayoutTextInfo"*, %"class.blink::LineWidth", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::MidpointState"*, %"class.blink::TrailingObjects" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.WTF::ListHashSetConstIterator" = type opaque
%"class.blink::LayoutRubyRun" = type { %"class.blink::LayoutBlockFlow" }
%"class.blink::TextRun" = type <{ %union.anon.1900, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.1900 = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::NonSharedCharacterBreakIterator" = type { i8, i8*, i32, i32, %"class.icu_69::BreakIterator"* }
%"class.blink::LayoutTextCombine" = type <{ %"class.blink::LayoutText", float, float, i8, [7 x i8] }>
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1851 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1851 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::LineLayoutInline" = type { %"class.blink::LineLayoutBoxModel" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1852 }
%union.anon.1852 = type { %"class.blink::LineBoxList" }
%"class.blink::LayoutSVGInlineText" = type { %"class.blink::LayoutText", float, %"class.blink::Font", %"class.WTF::HashMap.1901", %"class.WTF::Vector.1906" }
%"class.WTF::HashMap.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"struct.WTF::KeyValuePair.1905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1905" = type opaque
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"class.blink::SVGTextMetrics"*, i32, i32 }
%"class.blink::SVGTextMetrics" = type { float, float, i32 }
%"class.blink::IsolateTracker" = type { i32, i8, [3 x i8], %"class.blink::MidpointState", %"class.blink::BidiRunList"* }

$_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE = comdat any

$_ZN5blink15BreakingContext26InitializeForCurrentObjectEv = comdat any

$_ZN5blink15BreakingContext8HandleBRERNS_6EClearE = comdat any

$_ZN5blink15BreakingContext25HandleOutOfFlowPositionedERN3WTF6VectorINS_13LineLayoutBoxELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZN5blink15BreakingContext11HandleFloatEv = comdat any

$_ZN5blink15BreakingContext17HandleEmptyInlineEv = comdat any

$_ZN5blink15BreakingContext14HandleReplacedEv = comdat any

$_ZN5blink15BreakingContext10HandleTextERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERb = comdat any

$_ZN5blink15BreakingContext32CommitAndUpdateLineBreakIfNeededEv = comdat any

$_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE = comdat any

$_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv = comdat any

$_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14LineLayoutItemEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm = comdat any

$_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE = comdat any

$_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13LineLayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13LineLayoutBoxEEEmm = comdat any

$_ZN5blink24BorderPaddingMarginStartENS_16LineLayoutInlineE = comdat any

$_ZN5blink22BorderPaddingMarginEndENS_16LineLayoutInlineE = comdat any

$_ZN5blink36ShouldSkipWhitespaceAfterStartObjectENS_19LineLayoutBlockFlowENS_14LineLayoutItemERNS_13MidpointStateINS_14InlineIteratorEEE = comdat any

$_ZNK5blink14LineLayoutItem8StyleRefEb = comdat any

$_ZN5blink21LazyLineBreakIterator29ResetStringAndReleaseIteratorEN3WTF6StringERKNS1_12AtomicStringE = comdat any

$_ZN5blink15BreakingContext23PrepareForNextCharacterERKNS_14LineLayoutTextERbb = comdat any

$_ZN5blink15BreakingContext18CalculateWordWidthERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERNS_14LineLayoutTextEjRffRKNS_4FontEfDs = comdat any

$_ZN5blink15BreakingContext20CanBreakAtWhitespaceEbRNS_15WordMeasurementEbfRbbRfbbbbfRKNS_14LineLayoutTextERKNS_4FontEbf = comdat any

$_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink15BreakingContext34TrailingSpaceExceedsAvailableWidthEbRKNS_14LineLayoutTextERNS_15WordMeasurementEbbRKNS_4FontE = comdat any

$_ZN5blink15BreakingContext18TrailingSpacesHangEb = comdat any

$_ZN5blink15BreakingContext22SkipTrailingWhitespaceERNS_14InlineIteratorERKNS_8LineInfoE = comdat any

$_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15WordMeasurementEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_ = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE = comdat any

$_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE = comdat any

$_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN5blink11BidiContextD2Ev = comdat any

@__const._ZN5blink11LineBreaker13NextLineBreakERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_14LayoutTextInfoERN3WTF6VectorINS_15WordMeasurementELj64ENSB_18PartitionAllocatorEEE.context = private unnamed_addr constant { %"class.blink::BidiResolver"*, %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::LineLayoutBlockFlow", %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, %"class.blink::LineInfo"*, %"struct.blink::LayoutTextInfo"*, %"class.blink::LineWidth", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.blink::MidpointState"*, %"class.blink::TrailingObjects" } { %"class.blink::BidiResolver"* inttoptr (i64 -6148914691236517206 to %"class.blink::BidiResolver"*), %"class.blink::InlineIterator" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, i32 -1431655766, i32 -1431655766 }, %"class.blink::InlineIterator" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, i32 -1431655766, i32 -1431655766 }, %"class.blink::InlineIterator" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, i32 -1431655766, i32 -1431655766 }, %"class.blink::LineLayoutBlockFlow" { %"class.blink::LineLayoutBox" { %"class.blink::LineLayoutBoxModel" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } } }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) }, %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*), %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*), %"class.blink::LineInfo"* inttoptr (i64 -6148914691236517206 to %"class.blink::LineInfo"*), %"struct.blink::LayoutTextInfo"* inttoptr (i64 -6148914691236517206 to %"struct.blink::LayoutTextInfo"*), %"class.blink::LineWidth" <{ %"class.blink::LineLayoutBlockFlow" { %"class.blink::LineLayoutBox" { %"class.blink::LineLayoutBoxModel" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } } } }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::MidpointState"* inttoptr (i64 -6148914691236517206 to %"class.blink::MidpointState"*), %"class.blink::TrailingObjects" { %"class.blink::LineLayoutText" { %"class.blink::LineLayoutItem" { %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*) } }, %"class.WTF::Vector.1804" { %"class.WTF::VectorBuffer.1805" { %"class.WTF::VectorBufferBase.1806" { %"class.blink::LineLayoutItem"* inttoptr (i64 -6148914691236517206 to %"class.blink::LineLayoutItem"*), i32 -1431655766, i32 -1431655766 }, [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } } }, align 8
@.str = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiEmbedding]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14LineLayoutItemEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LineLayoutItem]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InlineIteratorEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InlineIterator]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13LineLayoutBoxEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LineLayoutBox]\00", align 1
@_ZN3WTF7unicodeL15kSpaceCharacterE = internal constant i16 32, align 2
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15WordMeasurementEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WordMeasurement]\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiIsolatedRun]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink7BidiRunENS2_13MidpointStateINS2_14InlineIteratorEEEEEEEPKcv = private unnamed_addr constant [129 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::BidiRun *, blink::MidpointState<blink::InlineIterator> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LineBreaker21SkipLeadingWhitespaceERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_9LineWidthE(%"class.blink::LineBreaker"* nocapture readonly, %"class.blink::BidiResolver"* dereferenceable(424), %"class.blink::LineInfo"* dereferenceable(12), %"class.blink::LineWidth"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 0, i32 1, i32 0
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %202, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 0
  %10 = bitcast %"class.blink::LineBreaker"* %0 to %"class.blink::LayoutBlockFlow"**
  %11 = bitcast %"class.blink::LineBreaker"* %0 to %"class.blink::LayoutBox"**
  %12 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LineWidth", %"class.blink::LineWidth"* %3, i64 0, i32 10
  %14 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 4, i32 3, i32 0
  %15 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 5
  %16 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 12, i32 0
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 12, i32 1
  %18 = bitcast %"struct.blink::BidiRun"** %17 to %"struct.blink::BidiCharacterRun"**
  %19 = bitcast %"struct.blink::BidiRun"** %16 to i8**
  %20 = bitcast %"struct.blink::BidiRun"** %17 to i8**
  %21 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 12, i32 3
  %22 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 4
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 0, i32 3
  %24 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 0, i32 2
  br label %26

26:                                               ; preds = %8, %199
  %27 = tail call zeroext i1 @_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE(%"class.blink::InlineIterator"* dereferenceable(24) %9, %"class.blink::LineInfo"* dereferenceable(12) %2, i32 0)
  br i1 %27, label %202, label %28

28:                                               ; preds = %26
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 113336795588871485128704
  %34 = icmp eq i96 %33, 75557863725914323419136
  br i1 %34, label %35, label %151

35:                                               ; preds = %28
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %37 = load i32, i32* %13, align 8
  %38 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %29, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 5, i32 0
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 0
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 1, i32 4, i32 0, i64 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 1, i32 4, i32 0, i64 4
  %48 = select i1 %45, i8* %46, i8* %47
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = bitcast %"class.blink::LayoutObject"* %38 to i1 (%"class.blink::LayoutObject"*)***
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 26
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %38) #9
  br i1 %55, label %59, label %56

56:                                               ; preds = %35
  %57 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBlockFlow"*
  %58 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBox"*
  br label %83

59:                                               ; preds = %35
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %61 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %60, align 8
  %62 = icmp eq %"struct.blink::FragmentData::RareData"* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %64, align 8
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi %"class.blink::PaintLayer"* [ %65, %63 ], [ null, %59 ]
  %68 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBlockFlow"*
  %69 = tail call i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %68, i32 %50, i32 %37) #9
  %70 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %67, i64 0, i32 10, i32 0
  store i32 %69, i32* %70, align 8
  %71 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %60, align 8
  %72 = icmp eq %"struct.blink::FragmentData::RareData"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %74, align 8
  br label %76

76:                                               ; preds = %73, %66
  %77 = phi %"class.blink::PaintLayer"* [ %75, %73 ], [ null, %66 ]
  %78 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %77, i64 0, i32 11, i32 0
  store i32 %50, i32* %78, align 4
  %79 = load i96, i96* %31, align 4
  %80 = trunc i96 %79 to i32
  %81 = icmp slt i32 %80, 0
  %82 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"* %82, i1 zeroext %81) #9
  br label %83

83:                                               ; preds = %76, %56
  %84 = phi %"class.blink::LayoutBox"* [ %58, %56 ], [ %82, %76 ]
  %85 = phi %"class.blink::LayoutBlockFlow"* [ %57, %56 ], [ %68, %76 ]
  tail call void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %85, %"class.blink::LayoutBox"* dereferenceable(216) %84, i32 %50, i32 %37) #9
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %87 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %86, align 8
  %88 = icmp eq %"struct.blink::FragmentData::RareData"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %90, align 8
  br label %92

92:                                               ; preds = %83, %89
  %93 = phi %"class.blink::PaintLayer"* [ %91, %89 ], [ null, %83 ]
  %94 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %93, i64 0, i32 11, i32 0
  store i32 %50, i32* %94, align 4
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 5, i32 0
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8
  %100 = lshr i160 %99, 37
  %101 = trunc i160 %100 to i32
  %102 = and i32 %101, 31
  switch i32 %102, label %172 [
    i32 0, label %103
    i32 25, label %103
    i32 19, label %103
    i32 17, label %103
    i32 15, label %103
    i32 5, label %103
    i32 3, label %103
    i32 24, label %103
  ]

103:                                              ; preds = %92, %92, %92, %92, %92, %92, %92, %92
  %104 = tail call noalias i8* @malloc(i64 40) #9
  %105 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %14, align 8
  %106 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %105, i64 0, i32 1
  %107 = load i16, i16* %106, align 4
  %108 = trunc i16 %107 to i8
  %109 = and i8 %108, 127
  %110 = load i32, i32* %15, align 8
  %111 = lshr i16 %107, 7
  %112 = and i16 %111, 31
  %113 = zext i16 %112 to i32
  %114 = lshr i16 %107, 12
  %115 = trunc i16 %114 to i8
  %116 = and i8 %115, 1
  store i8 %116, i8* %104, align 8
  %117 = getelementptr inbounds i8, i8* %104, i64 1
  %118 = getelementptr inbounds i8, i8* %104, i64 8
  %119 = bitcast i8* %118 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %119, align 8
  %120 = getelementptr inbounds i8, i8* %104, i64 16
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8
  %122 = getelementptr inbounds i8, i8* %104, i64 20
  %123 = bitcast i8* %122 to i32*
  store i32 1, i32* %123, align 4
  %124 = icmp eq i32 %110, 10
  %125 = select i1 %124, i32 %113, i32 %110
  store i8 %109, i8* %117, align 1
  %126 = and i8 %108, 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %103
  switch i32 %125, label %136 [
    i32 5, label %129
    i32 2, label %129
    i32 0, label %129
  ]

129:                                              ; preds = %128, %128, %128
  %130 = add nuw i8 %109, 1
  store i8 %130, i8* %117, align 1
  br label %136

131:                                              ; preds = %103
  switch i32 %125, label %136 [
    i32 1, label %132
    i32 5, label %134
    i32 2, label %134
  ]

132:                                              ; preds = %131
  %133 = add nuw i8 %109, 1
  store i8 %133, i8* %117, align 1
  br label %136

134:                                              ; preds = %131, %131
  %135 = add nuw i8 %109, 2
  store i8 %135, i8* %117, align 1
  br label %136

136:                                              ; preds = %128, %129, %131, %132, %134
  %137 = getelementptr inbounds i8, i8* %104, i64 24
  %138 = bitcast i8* %137 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %29, %"class.blink::LayoutObject"** %138, align 8
  %139 = getelementptr inbounds i8, i8* %104, i64 32
  %140 = bitcast i8* %139 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %140, align 8
  store i8 %116, i8* %104, align 8
  %141 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %16, align 8
  %142 = icmp eq %"struct.blink::BidiRun"* %141, null
  %143 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %18, align 8
  %144 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %143, i64 0, i32 2
  %145 = bitcast %"struct.blink::BidiCharacterRun"** %144 to i8**
  %146 = select i1 %142, i8** %19, i8** %145
  store i8* %104, i8** %146, align 8
  store i8* %104, i8** %20, align 8
  %147 = load i32, i32* %21, align 8
  %148 = add i32 %147, 1
  store i32 %148, i32* %21, align 8
  %149 = load i32, i32* %22, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %22, align 4
  br label %172

151:                                              ; preds = %28
  %152 = and i96 %32, 8388608
  %153 = icmp eq i96 %152, 0
  br i1 %153, label %172, label %154

154:                                              ; preds = %151
  %155 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %10, align 8
  %156 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBox"*
  %157 = tail call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %155, %"class.blink::LayoutBox"* dereferenceable(216) %156) #9
  %158 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %159 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 0, i32 0, i32 5, i32 0
  %160 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %160, i64 0, i32 0, i32 9
  %162 = bitcast [20 x i8]* %161 to i160*
  %163 = load i160, i160* %162, align 8
  %164 = and i160 %163, 15211807202738752817960438464512
  %165 = icmp eq i160 %164, 0
  %166 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 2, i32 1, i32 1, i32 0
  %167 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %158, i64 0, i32 2, i32 1, i32 0, i32 0
  %168 = select i1 %165, i32* %166, i32* %167
  %169 = load i32, i32* %168, align 4
  %170 = bitcast %"class.blink::LayoutBox"* %158 to %"class.blink::LayoutBlockFlow"*
  %171 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %170, i32 %169, %"class.blink::LineWidth"* %3) #9
  br label %172

172:                                              ; preds = %151, %92, %154, %136
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %174 = icmp eq %"class.blink::LayoutObject"* %173, null
  br i1 %174, label %202, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 4
  %177 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %176 to i96*
  %178 = load i96, i96* %177, align 4
  %179 = and i96 %178, 33554432
  %180 = icmp eq i96 %179, 0
  br i1 %180, label %196, label %181

181:                                              ; preds = %175
  %182 = load i32, i32* %23, align 4
  %183 = icmp ult i32 %182, 2147483647
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = add nuw nsw i32 %182, 1
  store i32 %185, i32* %23, align 4
  br label %186

186:                                              ; preds = %184, %181
  %187 = phi i32 [ %182, %181 ], [ %185, %184 ]
  %188 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 1, i32 4, i32 0, i64 4
  %189 = bitcast i8* %188 to %"class.WTF::StringImpl"**
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp ult i32 %187, %194
  br i1 %195, label %199, label %196

196:                                              ; preds = %192, %186, %175
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %198 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL28BidiNextSkippingEmptyInlinesINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_(%"class.blink::LayoutObject"* %197, %"class.blink::LayoutObject"* nonnull %173, %"class.blink::BidiResolver"* %1) #9
  store %"class.blink::LayoutObject"* %198, %"class.blink::LayoutObject"** %5, align 8
  store i32 0, i32* %23, align 4
  store i32 -1, i32* %25, align 8
  br label %199

199:                                              ; preds = %192, %196
  %200 = phi %"class.blink::LayoutObject"* [ %173, %192 ], [ %198, %196 ]
  %201 = icmp eq %"class.blink::LayoutObject"* %200, null
  br i1 %201, label %202, label %26

202:                                              ; preds = %172, %199, %26, %4
  %203 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %1, i64 0, i32 12
  %204 = tail call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %1, %"class.blink::BidiRunList"* dereferenceable(32) %203)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE(%"class.blink::InlineIterator"* dereferenceable(24), %"class.blink::LineInfo"* dereferenceable(12), i32) local_unnamed_addr #1 comdat {
  %4 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 33554432
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 1, i32 4, i32 0, i64 4
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %133, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %133, label %20

20:                                               ; preds = %3, %16
  %21 = and i96 %8, 8388608
  %22 = icmp ne i96 %21, 0
  %23 = and i96 %8, 113336795588871485128704
  %24 = icmp eq i96 %23, 75557863725914323419136
  %25 = or i1 %24, %22
  br i1 %25, label %133, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %28 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, i64 26
  %30 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %5) #9
  br i1 %31, label %32, label %41

32:                                               ; preds = %26
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %34 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %33) #9
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::LayoutObject"* %33 to %"class.blink::LayoutBoxModelObject"*
  %37 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv(%"class.blink::LayoutBoxModelObject"* %36) #9
  br i1 %37, label %41, label %38

38:                                               ; preds = %32, %35
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %40 = tail call zeroext i1 @_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE(%"class.blink::LayoutObject"* %39, %"class.blink::LineInfo"* dereferenceable(12) %1)
  br i1 %40, label %41, label %133

41:                                               ; preds = %26, %35, %38
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 5, i32 0
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 286720
  %49 = icmp eq i160 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %41
  %51 = icmp eq i32 %2, 1
  %52 = and i160 %47, 520192
  %53 = icmp eq i160 %52, 16384
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %133

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 2
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 3
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %133

63:                                               ; preds = %55, %41, %59
  %64 = bitcast %"class.blink::LayoutObject"* %42 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %42, i32 0) #9
  br i1 %68, label %133, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %133, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 33554432
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %133, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 1, i32 4, i32 0, i64 4
  %82 = bitcast i8* %81 to %"class.WTF::StringImpl"**
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %133, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, %71
  br i1 %88, label %89, label %133

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  br i1 %93, label %101, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.WTF::StringImpl"* %94 to i8*
  %97 = zext i32 %71 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  br label %113

101:                                              ; preds = %89
  %102 = bitcast %"class.WTF::StringImpl"* %94 to i16*
  %103 = zext i32 %71 to i64
  %104 = getelementptr inbounds i16, i16* %102, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = icmp eq i32 %2, 0
  %107 = icmp eq i16 %105, 12288
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 3
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %130, label %133

113:                                              ; preds = %95, %101
  %114 = phi i16 [ %105, %101 ], [ %100, %95 ]
  switch i16 %114, label %133 [
    i16 32, label %130
    i16 9, label %130
    i16 173, label %130
    i16 12288, label %130
    i16 10, label %115
  ]

115:                                              ; preds = %113
  %116 = bitcast %"class.blink::LayoutObject"* %72 to i1 (%"class.blink::LayoutObject"*, i32)***
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* nonnull %72, i32 65) #9
  br i1 %120, label %130, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 5, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 9
  %125 = bitcast [20 x i8]* %124 to i160*
  %126 = load i160, i160* %125, align 8
  %127 = lshr i160 %126, 12
  %128 = trunc i160 %127 to i32
  %129 = and i32 %128, 127
  switch i32 %129, label %133 [
    i32 16, label %130
    i32 1, label %130
  ]

130:                                              ; preds = %109, %121, %121, %115, %113, %113, %113, %113
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %132 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %131)
  br label %133

133:                                              ; preds = %109, %121, %74, %69, %85, %80, %50, %11, %113, %59, %130, %63, %38, %20, %16
  %134 = phi i1 [ false, %16 ], [ false, %20 ], [ false, %38 ], [ true, %63 ], [ true, %109 ], [ true, %121 ], [ %132, %130 ], [ true, %59 ], [ true, %113 ], [ false, %11 ], [ true, %50 ], [ true, %80 ], [ true, %85 ], [ true, %69 ], [ true, %74 ]
  ret i1 %134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %7 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 127
  %12 = ptrtoint %"class.blink::BidiContext"* %7 to i64
  %13 = icmp eq %"class.blink::BidiContext"* %7, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #9
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %41

32:                                               ; preds = %107, %21
  %33 = phi i64 [ %12, %21 ], [ %108, %107 ]
  %34 = inttoptr i64 %33 to %"class.blink::BidiContext"*
  %35 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 4
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 127
  %39 = zext i8 %11 to i32
  %40 = icmp ugt i8 %38, %11
  br i1 %40, label %111, label %115

41:                                               ; preds = %30, %107
  %42 = phi %"class.blink::BidiEmbedding"* [ %24, %30 ], [ %109, %107 ]
  %43 = phi i64 [ %12, %30 ], [ %108, %107 ]
  %44 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %72 [
    i32 16, label %46
    i32 14, label %66
  ]

46:                                               ; preds = %41
  %47 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %48 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 2, i32 0
  %49 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %48, align 8
  %50 = icmp eq %"class.blink::BidiContext"* %49, null
  br i1 %50, label %107, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %57

57:                                               ; preds = %55, %51
  %58 = ptrtoint %"class.blink::BidiContext"* %49 to i64
  %59 = icmp eq i64 %43, 0
  br i1 %59, label %107, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %107

64:                                               ; preds = %60
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %47) #9
  %65 = inttoptr i64 %43 to i8*
  call void @free(i8* %65) #9
  br label %107

66:                                               ; preds = %41
  %67 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %68 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %67, i64 0, i32 1
  %69 = load i16, i16* %68, align 4
  %70 = trunc i16 %69 to i8
  %71 = and i8 %70, 127
  br label %79

72:                                               ; preds = %41
  %73 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %74 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %73, i64 0, i32 1
  %75 = load i16, i16* %74, align 4
  %76 = trunc i16 %75 to i8
  %77 = and i8 %76, 127
  switch i32 %45, label %85 [
    i32 12, label %78
    i32 15, label %79
  ]

78:                                               ; preds = %72
  br label %85

79:                                               ; preds = %72, %66
  %80 = phi i8 [ %71, %66 ], [ %77, %72 ]
  %81 = phi %"class.blink::BidiContext"* [ %67, %66 ], [ %73, %72 ]
  %82 = phi i1 [ false, %66 ], [ true, %72 ]
  %83 = add nuw i8 %80, 1
  %84 = or i8 %83, 1
  br label %89

85:                                               ; preds = %72, %78
  %86 = phi i1 [ true, %78 ], [ false, %72 ]
  %87 = add nuw i8 %77, 2
  %88 = and i8 %87, -2
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi %"class.blink::BidiContext"* [ %81, %79 ], [ %73, %85 ]
  %91 = phi i1 [ %82, %79 ], [ %86, %85 ]
  %92 = phi i32 [ 1, %79 ], [ 0, %85 ]
  %93 = phi i8 [ %84, %79 ], [ %88, %85 ]
  %94 = icmp ult i8 %93, 125
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %93, i32 %92, i1 zeroext %91, i32 %97, %"class.blink::BidiContext"* %90) #9
  %99 = ptrtoint %"class.blink::BidiContext"* %98 to i64
  %100 = icmp eq %"class.blink::BidiContext"* %90, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw sub i32* %102, i32 1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %90) #9
  %106 = bitcast %"class.blink::BidiContext"* %90 to i8*
  call void @free(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %101, %95, %64, %60, %57, %89, %46
  %108 = phi i64 [ %43, %46 ], [ %43, %89 ], [ %58, %57 ], [ %58, %60 ], [ %58, %64 ], [ %99, %95 ], [ %99, %101 ], [ %99, %105 ]
  %109 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 1
  %110 = icmp eq %"class.blink::BidiEmbedding"* %109, %28
  br i1 %110, label %32, label %41

111:                                              ; preds = %32
  %112 = and i32 %39, 1
  %113 = and i8 %37, 1
  %114 = zext i8 %113 to i32
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %112, i32 %114)
  br label %119

115:                                              ; preds = %32
  %116 = icmp ult i8 %38, %11
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = and i32 %39, 1
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %118)
  br label %119

119:                                              ; preds = %115, %117, %111
  %120 = icmp eq i64 %33, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #9
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #9
  br label %128

128:                                              ; preds = %119, %121, %125
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %130 = bitcast %class.scoped_refptr.1717* %129 to i64*
  %131 = getelementptr inbounds %class.scoped_refptr.1717, %class.scoped_refptr.1717* %129, i64 0, i32 0
  %132 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %131, align 8
  store i64 %33, i64* %130, align 8
  %133 = icmp eq %"class.blink::BidiContext"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw sub i32* %135, i32 1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %132) #9
  %139 = bitcast %"class.blink::BidiContext"* %132 to i8*
  call void @free(i8* %139) #9
  br label %140

140:                                              ; preds = %128, %134, %138
  %141 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %25, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i32 0, i32* %25, align 4
  br label %148

148:                                              ; preds = %147, %144
  %149 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %151 = ptrtoint i8* %150 to i64
  %152 = bitcast %"class.WTF::Vector.1728"* %22 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  store i32 8, i32* %141, align 8
  %153 = bitcast i8* %150 to %"class.blink::BidiEmbedding"*
  %154 = icmp eq %"class.blink::BidiEmbedding"* %149, %153
  br i1 %154, label %157, label %155, !prof !3

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %22, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1729"* %156, %"class.blink::BidiEmbedding"* %149) #9
  br label %157

157:                                              ; preds = %140, %148, %155
  %158 = icmp ne i8 %11, %38
  br i1 %120, label %165, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw sub i32* %160, i32 1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %34) #9
  %164 = inttoptr i64 %33 to i8*
  call void @free(i8* %164) #9
  br label %165

165:                                              ; preds = %157, %159, %163
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LineBreaker5ResetEv(%"class.blink::LineBreaker"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = bitcast %"class.WTF::Vector.1712"* %2 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.WTF::Vector.1712"* %2 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #9
  br label %15

15:                                               ; preds = %1, %11
  %16 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 1
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %0, i64 0, i32 2
  store i32 0, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LineBreaker13NextLineBreakERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_14LayoutTextInfoERN3WTF6VectorINS_15WordMeasurementELj64ENSB_18PartitionAllocatorEEE(%"class.blink::InlineIterator"* noalias sret, %"class.blink::LineBreaker"*, %"class.blink::BidiResolver"* dereferenceable(424), %"class.blink::LineInfo"* dereferenceable(12), %"struct.blink::LayoutTextInfo"* dereferenceable(80), %"class.WTF::Vector.1795"* dereferenceable(4112)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::LineWidth", align 8
  %8 = alloca %"class.blink::BreakingContext", align 8
  %9 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  %19 = bitcast %"class.WTF::Vector.1712"* %9 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.WTF::Vector.1712"* %9 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store i32 0, i32* %10, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %20) #9
  br label %22

22:                                               ; preds = %6, %18
  %23 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 1
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 2
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = icmp ne i32 %26, 0
  %28 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %3, i64 0, i32 0
  %29 = load i8, i8* %28, align 4, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::LineBreaker"* %1 to %"class.blink::LayoutBlockFlow"**
  %33 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %32, align 8
  %34 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow28CanContainFirstFormattedLineEv(%"class.blink::LayoutBlockFlow"* %33) #9
  %35 = load i8, i8* %28, align 4, !range !2
  %36 = icmp ne i8 %35, 0
  br label %37

37:                                               ; preds = %22, %31
  %38 = phi i1 [ false, %22 ], [ %36, %31 ]
  %39 = phi i1 [ false, %22 ], [ %34, %31 ]
  %40 = bitcast %"class.blink::LineWidth"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.blink::LineWidth", %"class.blink::LineWidth"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::LineWidth", %"class.blink::LineWidth"* %7, i64 0, i32 1
  %43 = getelementptr inbounds %"class.blink::LineWidth", %"class.blink::LineWidth"* %7, i64 0, i32 5, i32 0
  %44 = bitcast float* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 16, i1 false)
  %45 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 -86, i64 24, i1 false)
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %48 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %3, i64 0, i32 3
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  br i1 %39, label %63, label %51

51:                                               ; preds = %37
  %52 = load i8, i8* %48, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %58, i64 0, i32 19
  %60 = load i16, i16* %59, align 4
  %61 = trunc i16 %60 to i8
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63

63:                                               ; preds = %54, %37
  br label %64

64:                                               ; preds = %51, %54, %63
  %65 = phi i32 [ 1, %63 ], [ 0, %54 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %69, i64 0, i32 19
  %71 = load i16, i16* %70, align 4
  %72 = lshr i16 %71, 8
  %73 = and i16 %72, 1
  %74 = zext i16 %73 to i32
  %75 = xor i32 %65, %74
  call void @_ZN5blink9LineWidthC1ENS_19LineLayoutBlockFlowEbNS_15IndentTextOrNotE(%"class.blink::LineWidth"* nonnull %7, %"class.blink::LayoutObject"* %47, i1 zeroext %38, i32 %75) #9
  call void @_ZN5blink11LineBreaker21SkipLeadingWhitespaceERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_9LineWidthE(%"class.blink::LineBreaker"* %1, %"class.blink::BidiResolver"* dereferenceable(424) %2, %"class.blink::LineInfo"* dereferenceable(12) %3, %"class.blink::LineWidth"* nonnull dereferenceable(48) %7)
  %76 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = icmp eq %"class.blink::LayoutObject"* %77, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %64
  %80 = bitcast %"class.blink::InlineIterator"* %0 to i8*
  %81 = bitcast %"class.blink::BidiResolver"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 24, i1 false)
  br label %280

82:                                               ; preds = %64
  %83 = bitcast %"class.blink::BreakingContext"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %83) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 bitcast ({ %"class.blink::BidiResolver"*, %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::LineLayoutBlockFlow", %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*, %"class.blink::LineInfo"*, %"struct.blink::LayoutTextInfo"*, %"class.blink::LineWidth", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.blink::MidpointState"*, %"class.blink::TrailingObjects" }* @__const._ZN5blink11LineBreaker13NextLineBreakERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_14LayoutTextInfoERN3WTF6VectorINS_15WordMeasurementELj64ENSB_18PartitionAllocatorEEE.context to i8*), i64 280, i1 false)
  %84 = bitcast %"class.blink::LineBreaker"* %1 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = inttoptr i64 %85 to %"class.blink::LayoutObject"*
  %87 = zext i1 %27 to i8
  %88 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 0
  store %"class.blink::BidiResolver"* %2, %"class.blink::BidiResolver"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 1
  %90 = bitcast %"class.blink::InlineIterator"* %89 to i8*
  %91 = bitcast %"class.blink::BidiResolver"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #9
  %92 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 2
  %93 = bitcast %"class.blink::InlineIterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %91, i64 24, i1 false) #9
  %94 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 3
  %95 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 3, i32 2
  %96 = bitcast %"class.blink::InlineIterator"* %94 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #9
  store i32 -1, i32* %95, align 8
  %97 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 3, i32 3
  store i32 0, i32* %97, align 4
  %98 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 4
  %99 = bitcast %"class.blink::LineLayoutBlockFlow"* %98 to i64*
  store i64 %85, i64* %99, align 8
  %100 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 1, i32 1, i32 0
  %101 = bitcast %"class.blink::LayoutObject"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 5, i32 0
  %104 = bitcast %"class.blink::LayoutObject"** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 6, i32 0
  %106 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 8
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %86, i64 0, i32 5, i32 0
  %108 = bitcast %"class.blink::ComputedStyle"** %107 to i64*
  %109 = bitcast %"class.blink::LayoutObject"** %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #9
  %110 = load i64, i64* %108, align 8
  %111 = bitcast %"class.blink::ComputedStyle"** %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 9
  store %"class.blink::LineInfo"* %3, %"class.blink::LineInfo"** %112, align 8
  %113 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 10
  store %"struct.blink::LayoutTextInfo"* %4, %"struct.blink::LayoutTextInfo"** %113, align 8
  %114 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11
  %115 = bitcast %"class.blink::LineWidth"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %40, i64 48, i1 false) #9
  %116 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 12
  store i32 1, i32* %116, align 8
  %117 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 13
  store i32 1, i32* %117, align 4
  %118 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 14
  store i8 0, i8* %118, align 8
  %119 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 15
  store i8 1, i8* %119, align 1
  %120 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 16
  store i8 0, i8* %120, align 2
  %121 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 17
  store i8 0, i8* %121, align 1
  %122 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 18
  store i8 0, i8* %122, align 4
  %123 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 23
  store i8 %87, i8* %123, align 4
  %124 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 24
  store i8 1, i8* %124, align 1
  %125 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 25
  store i8 0, i8* %125, align 2
  %126 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 26
  store i8 0, i8* %126, align 1
  %127 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 27
  store i8 1, i8* %127, align 8
  %128 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 28
  store i8 0, i8* %128, align 1
  %129 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 29
  %130 = load i8, i8* %48, align 1, !range !2
  store i8 %130, i8* %129, align 2
  %131 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 30
  store i8 0, i8* %131, align 1
  %132 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 31
  %133 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 13
  store %"class.blink::MidpointState"* %133, %"class.blink::MidpointState"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 32, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %134, align 8
  %135 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 32, i32 1
  %136 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 32, i32 1, i32 0, i32 1, i64 0
  %137 = bitcast %"class.WTF::Vector.1804"* %135 to i8**
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 32, i32 1, i32 0, i32 0, i32 1
  store i32 4, i32* %138, align 8
  %139 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %139, align 4
  store i8 0, i8* %48, align 1
  %140 = icmp eq i64 %102, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %82
  %142 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11, i32 2
  %143 = load float, float* %142, align 4
  %144 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11, i32 1
  %145 = load float, float* %144, align 8
  br label %240

146:                                              ; preds = %82
  %147 = bitcast %"class.blink::LayoutObject"** %105 to i64*
  %148 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 1, i32 3
  %149 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 1, i32 2
  %150 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11, i32 1
  %151 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11, i32 2
  br label %152

152:                                              ; preds = %146, %233
  call void @_ZN5blink15BreakingContext26InitializeForCurrentObjectEv(%"class.blink::BreakingContext"* nonnull %8)
  %153 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %154 = bitcast %"class.blink::LayoutObject"* %153 to i1 (%"class.blink::LayoutObject"*, i32)***
  %155 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, i64 92
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %156, align 8
  %158 = call zeroext i1 %157(%"class.blink::LayoutObject"* %153, i32 0) #9
  br i1 %158, label %159, label %160

159:                                              ; preds = %152
  call void @_ZN5blink15BreakingContext8HandleBRERNS_6EClearE(%"class.blink::BreakingContext"* nonnull %8, i32* dereferenceable(4) %24)
  br label %194

160:                                              ; preds = %152
  %161 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %161, i64 0, i32 4
  %163 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %162 to i96*
  %164 = load i96, i96* %163, align 4
  %165 = and i96 %164, 113336795588871485128704
  %166 = icmp eq i96 %165, 75557863725914323419136
  br i1 %166, label %167, label %168

167:                                              ; preds = %160
  call void @_ZN5blink15BreakingContext25HandleOutOfFlowPositionedERN3WTF6VectorINS_13LineLayoutBoxELj0ENS1_18PartitionAllocatorEEE(%"class.blink::BreakingContext"* nonnull %8, %"class.WTF::Vector.1712"* dereferenceable(16) %9)
  br label %194

168:                                              ; preds = %160
  %169 = and i96 %164, 8388608
  %170 = icmp eq i96 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  call void @_ZN5blink15BreakingContext11HandleFloatEv(%"class.blink::BreakingContext"* nonnull %8)
  br label %194

172:                                              ; preds = %168
  %173 = bitcast %"class.blink::LayoutObject"* %161 to i1 (%"class.blink::LayoutObject"*)***
  %174 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %173, align 8
  %175 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %174, i64 26
  %176 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %175, align 8
  %177 = call zeroext i1 %176(%"class.blink::LayoutObject"* %161) #9
  br i1 %177, label %178, label %179

178:                                              ; preds = %172
  call void @_ZN5blink15BreakingContext17HandleEmptyInlineEv(%"class.blink::BreakingContext"* nonnull %8)
  br label %194

179:                                              ; preds = %172
  %180 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %181 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %180, i64 0, i32 4
  %182 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %181 to i96*
  %183 = load i96, i96* %182, align 4
  %184 = and i96 %183, 1073741824
  %185 = icmp eq i96 %184, 0
  br i1 %185, label %187, label %186

186:                                              ; preds = %179
  call void @_ZN5blink15BreakingContext14HandleReplacedEv(%"class.blink::BreakingContext"* nonnull %8)
  br label %194

187:                                              ; preds = %179
  %188 = and i96 %183, 33554432
  %189 = icmp eq i96 %188, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %187
  %191 = call zeroext i1 @_ZN5blink15BreakingContext10HandleTextERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERb(%"class.blink::BreakingContext"* nonnull %8, %"class.WTF::Vector.1795"* dereferenceable(4112) %5, i8* dereferenceable(1) %23)
  br i1 %191, label %192, label %194

192:                                              ; preds = %190
  %193 = bitcast %"class.blink::InlineIterator"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %93, i64 24, i1 false) #9
  br label %268

194:                                              ; preds = %187, %167, %178, %190, %186, %171, %159
  %195 = load i8, i8* %131, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %198, label %197

197:                                              ; preds = %194
  call void @_ZN5blink15BreakingContext15HandleEndOfLineEv(%"class.blink::InlineIterator"* sret %0, %"class.blink::BreakingContext"* nonnull %8) #9
  br label %268

198:                                              ; preds = %194
  call void @_ZN5blink15BreakingContext32CommitAndUpdateLineBreakIfNeededEv(%"class.blink::BreakingContext"* nonnull %8)
  %199 = load i8, i8* %131, align 1, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  call void @_ZN5blink15BreakingContext15HandleEndOfLineEv(%"class.blink::InlineIterator"* sret %0, %"class.blink::BreakingContext"* nonnull %8) #9
  br label %268

202:                                              ; preds = %198
  %203 = load i64, i64* %147, align 8
  store i64 %203, i64* %101, align 8
  store i32 0, i32* %148, align 4
  store i32 -1, i32* %149, align 8
  %204 = load float, float* %150, align 8
  %205 = fcmp une float %204, 0.000000e+00
  %206 = load float, float* %151, align 4
  br i1 %205, label %219, label %207

207:                                              ; preds = %202
  %208 = fmul float %206, 6.400000e+01
  %209 = call float @llvm.ceil.f32(float %208) #9
  %210 = fcmp ult float %209, 0xC1E0000000000000
  %211 = fcmp ugt float %209, 0x41DFFFFFE0000000
  %212 = fcmp ogt float %209, 0xC1E0000000000000
  %213 = select i1 %212, float %209, float 0xC1E0000000000000
  %214 = fptosi float %213 to i32
  %215 = select i1 %210, i32 0, i32 2147483647
  %216 = select i1 %211, i32 %215, i32 %214
  %217 = sitofp i32 %216 to float
  %218 = fmul float %217, 1.562500e-02
  store float %218, float* %151, align 4
  br label %233

219:                                              ; preds = %202
  %220 = fadd float %204, %206
  %221 = fmul float %220, 6.400000e+01
  %222 = call float @llvm.ceil.f32(float %221) #9
  %223 = fcmp ult float %222, 0xC1E0000000000000
  %224 = fcmp ugt float %222, 0x41DFFFFFE0000000
  %225 = fcmp ogt float %222, 0xC1E0000000000000
  %226 = select i1 %225, float %222, float 0xC1E0000000000000
  %227 = fptosi float %226 to i32
  %228 = select i1 %223, i32 0, i32 2147483647
  %229 = select i1 %224, i32 %228, i32 %227
  %230 = sitofp i32 %229 to float
  %231 = fmul float %230, 1.562500e-02
  %232 = fsub float %231, %206
  store float %232, float* %150, align 8
  br label %233

233:                                              ; preds = %207, %219
  %234 = phi float [ %204, %207 ], [ %232, %219 ]
  %235 = phi float [ %218, %207 ], [ %206, %219 ]
  store i8 0, i8* %119, align 1
  %236 = icmp eq i64 %203, 0
  br i1 %236, label %237, label %152

237:                                              ; preds = %233
  %238 = load i32, i32* %117, align 4
  %239 = icmp eq i32 %238, 16
  br label %240

240:                                              ; preds = %141, %237
  %241 = phi i1 [ false, %141 ], [ %239, %237 ]
  %242 = phi float [ %145, %141 ], [ %234, %237 ]
  %243 = phi float [ %143, %141 ], [ %235, %237 ]
  %244 = fadd float %243, %242
  %245 = fmul float %244, 6.400000e+01
  %246 = call float @llvm.floor.f32(float %245) #9
  %247 = fcmp ult float %246, 0xC1E0000000000000
  %248 = fcmp ugt float %246, 0x41DFFFFFE0000000
  %249 = fcmp ogt float %246, 0xC1E0000000000000
  %250 = select i1 %249, float %246, float 0xC1E0000000000000
  %251 = fptosi float %250 to i32
  %252 = select i1 %247, i32 0, i32 2147483647
  %253 = select i1 %248, i32 %252, i32 %251
  %254 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 11, i32 7, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = sitofp i32 %255 to float
  %257 = fmul float %256, 1.562500e-02
  %258 = fadd float %257, 1.562500e-02
  %259 = sitofp i32 %253 to float
  %260 = fmul float %259, 1.562500e-02
  %261 = fcmp ole float %260, %258
  %262 = or i1 %241, %261
  br i1 %262, label %263, label %267

263:                                              ; preds = %240
  %264 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %264, align 8
  %265 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 2, i32 3
  store i32 0, i32* %265, align 4
  %266 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %8, i64 0, i32 2, i32 2
  store i32 -1, i32* %266, align 8
  br label %267

267:                                              ; preds = %240, %263
  call void @_ZN5blink15BreakingContext15HandleEndOfLineEv(%"class.blink::InlineIterator"* sret %0, %"class.blink::BreakingContext"* nonnull %8) #9
  br label %268

268:                                              ; preds = %267, %201, %197, %192
  %269 = load i32, i32* %139, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %272, label %271, !prof !4

271:                                              ; preds = %268
  store i32 0, i32* %139, align 4
  br label %272

272:                                              ; preds = %271, %268
  %273 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %135, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %273, align 8
  %275 = bitcast i8* %136 to %"class.blink::LineLayoutItem"*
  %276 = icmp eq %"class.blink::LineLayoutItem"* %274, %275
  br i1 %276, label %279, label %277, !prof !3

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %135, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1805"* %278, %"class.blink::LineLayoutItem"* %274) #9
  br label %279

279:                                              ; preds = %272, %277
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %83) #9
  br label %280

280:                                              ; preds = %279, %79
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #9
  ret void
}

declare void @_ZN5blink9LineWidthC1ENS_19LineLayoutBlockFlowEbNS_15IndentTextOrNotE(%"class.blink::LineWidth"*, %"class.blink::LayoutObject"*, i1 zeroext, i32) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext26InitializeForCurrentObjectEv(%"class.blink::BreakingContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %11, label %65, label %12

12:                                               ; preds = %1, %64
  %13 = phi %"class.blink::LayoutObject"* [ %47, %64 ], [ %3, %1 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 113336795588871485128704
  %18 = icmp eq i96 %17, 75557863725914323419136
  %19 = and i96 %16, 1115684864
  %20 = icmp ne i96 %19, 0
  %21 = or i1 %20, %18
  br i1 %21, label %33, label %22

22:                                               ; preds = %12
  %23 = bitcast %"class.blink::LayoutObject"* %13 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %24 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %24, i64 13
  %26 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %25, align 8
  %27 = tail call %"class.blink::LayoutObjectChildList"* %26(%"class.blink::LayoutObject"* nonnull %13) #9
  %28 = icmp eq %"class.blink::LayoutObjectChildList"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %27, i64 0, i32 0
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %33, label %46

33:                                               ; preds = %29, %22, %12
  %34 = icmp eq %"class.blink::LayoutObject"* %13, %10
  br i1 %34, label %65, label %35

35:                                               ; preds = %33, %40
  %36 = phi %"class.blink::LayoutObject"* [ %42, %40 ], [ %13, %33 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 9
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = icmp ne %"class.blink::LayoutObject"* %42, null
  %44 = icmp ne %"class.blink::LayoutObject"* %42, %10
  %45 = and i1 %43, %44
  br i1 %45, label %35, label %65

46:                                               ; preds = %35, %29
  %47 = phi %"class.blink::LayoutObject"* [ %31, %29 ], [ %38, %35 ]
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %49 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %48 to i96*
  %50 = load i96, i96* %49, align 4
  %51 = and i96 %50, 113336795588871485128704
  %52 = icmp eq i96 %51, 75557863725914323419136
  %53 = and i96 %50, 1115684864
  %54 = icmp ne i96 %53, 0
  %55 = or i1 %54, %52
  br i1 %55, label %67, label %56

56:                                               ; preds = %46
  %57 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %47) #9
  br i1 %57, label %58, label %64

58:                                               ; preds = %56
  %59 = bitcast %"class.blink::LayoutObject"* %47 to i1 (%"class.blink::LayoutObject"*)***
  %60 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %60, i64 26
  %62 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* nonnull %47) #9
  br i1 %63, label %67, label %64

64:                                               ; preds = %58, %56
  br label %12

65:                                               ; preds = %33, %40, %1
  %66 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %66, align 8
  br label %81

67:                                               ; preds = %46, %58
  %68 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  store %"class.blink::LayoutObject"* %47, %"class.blink::LayoutObject"** %68, align 8
  %69 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 7
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 7
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = tail call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* nonnull %72, %"class.blink::LayoutObject"* %77) #9
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 24
  store i8 1, i8* %80, align 1
  br label %81

81:                                               ; preds = %65, %70, %67, %74, %79
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %83 = bitcast %"class.blink::LayoutObject"* %82 to i1 (%"class.blink::LayoutObject"*)***
  %84 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %83, align 8
  %85 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %84, i64 26
  %86 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.blink::LayoutObject"* %82) #9
  br i1 %87, label %93, label %88

88:                                               ; preds = %81
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 7
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 5, i32 0
  br label %93

93:                                               ; preds = %81, %88
  %94 = phi %"class.blink::ComputedStyle"** [ %92, %88 ], [ %7, %81 ]
  %95 = bitcast %"class.blink::ComputedStyle"** %94 to %"class.blink::ComputedStyleBase"**
  %96 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %96, i64 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8
  %100 = lshr i160 %99, 12
  %101 = trunc i160 %100 to i32
  %102 = and i32 %101, 127
  %103 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  store i32 %102, i32* %103, align 8
  %104 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 5, i32 0
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = bitcast %"class.blink::LayoutObject"* %105 to i1 (%"class.blink::LayoutObject"*)***
  %107 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %107, i64 26
  %109 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.blink::LayoutObject"* %105) #9
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  br i1 %110, label %115, label %112

112:                                              ; preds = %93
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 7
  %114 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, align 8
  br label %115

115:                                              ; preds = %93, %112
  %116 = phi %"class.blink::LayoutObject"* [ %114, %112 ], [ %111, %93 ]
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %116, i64 0, i32 5, i32 0
  %118 = bitcast %"class.blink::ComputedStyle"** %117 to %"class.blink::ComputedStyleBase"**
  %119 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %119, i64 0, i32 9
  %121 = bitcast [20 x i8]* %120 to i160*
  %122 = load i160, i160* %121, align 8
  %123 = lshr i160 %122, 12
  %124 = trunc i160 %123 to i32
  %125 = and i32 %124, 127
  %126 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 13
  store i32 %125, i32* %126, align 4
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %128 = bitcast %"class.blink::LayoutObject"* %127 to i1 (%"class.blink::LayoutObject"*, i32)***
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, i64 92
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, align 8
  %132 = tail call zeroext i1 %131(%"class.blink::LayoutObject"* %127, i32 65) #9
  %133 = load i32, i32* %103, align 8
  %134 = and i32 %133, 18
  %135 = icmp eq i32 %134, 0
  %136 = xor i1 %132, true
  %137 = and i1 %135, %136
  %138 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %139 = zext i1 %137 to i8
  store i8 %139, i8* %138, align 2
  %140 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 26
  %141 = load i8, i8* %140, align 1, !range !2
  %142 = icmp ne i8 %141, 0
  %143 = or i1 %137, %142
  %144 = zext i1 %143 to i8
  store i8 %144, i8* %140, align 1
  br i1 %132, label %150, label %145

145:                                              ; preds = %115
  %146 = icmp ne i32 %133, 1
  %147 = icmp ne i32 %133, 16
  %148 = and i1 %146, %147
  %149 = zext i1 %148 to i8
  br label %150

150:                                              ; preds = %115, %145
  %151 = phi i8 [ %149, %145 ], [ 0, %115 ]
  %152 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  store i8 %151, i8* %152, align 8
  %153 = and i32 %133, 70
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %156 = zext i1 %154 to i8
  store i8 %156, i8* %155, align 1
  br i1 %154, label %157, label %164

157:                                              ; preds = %150
  %158 = load i32, i32* %126, align 4
  %159 = and i32 %158, 70
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  store i8 0, i8* %162, align 1
  %163 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  store i8 0, i8* %163, align 4
  br label %164

164:                                              ; preds = %161, %157, %150
  %165 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 22
  store i32 %166, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 21
  store i8 0, i8* %168, align 1
  %169 = icmp eq i32 %133, 64
  br i1 %169, label %170, label %174

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %172 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %171, align 8
  %173 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %172, i64 0, i32 1, i32 8
  store i32 3, i32* %173, align 8
  br label %174

174:                                              ; preds = %170, %164
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext8HandleBRERNS_6EClearE(%"class.blink::BreakingContext"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.blink::InlineIterator", align 8
  %4 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %7 = load float, float* %6, align 8
  %8 = fadd float %5, %7
  %9 = fmul float %8, 6.400000e+01
  %10 = tail call float @llvm.floor.f32(float %9) #9
  %11 = fcmp ult float %10, 0xC1E0000000000000
  %12 = fcmp ugt float %10, 0x41DFFFFFE0000000
  %13 = fcmp ogt float %10, 0xC1E0000000000000
  %14 = select i1 %13, float %10, float 0xC1E0000000000000
  %15 = fptosi float %14 to i32
  %16 = select i1 %11, i32 0, i32 2147483647
  %17 = select i1 %12, i32 %16, i32 %15
  %18 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = fmul float %20, 1.562500e-02
  %22 = fadd float %21, 1.562500e-02
  %23 = sitofp i32 %17 to float
  %24 = fmul float %23, 1.562500e-02
  %25 = fcmp ugt float %24, %22
  br i1 %25, label %176, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %28, %"class.blink::LayoutObject"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %31, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %32, label %111, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %35 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %34 to i96*
  %36 = load i96, i96* %35, align 4
  %37 = and i96 %36, 33554432
  %38 = icmp eq i96 %37, 0
  br i1 %38, label %48, label %39

39:                                               ; preds = %33
  store i32 1, i32* %30, align 4
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 1, i32 4, i32 0, i64 4
  %41 = bitcast i8* %40 to %"class.WTF::StringImpl"**
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp ugt i32 %46, 1
  br i1 %47, label %111, label %48

48:                                               ; preds = %33, %39, %44
  %49 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  br label %51

51:                                               ; preds = %103, %48
  %52 = phi %"class.blink::LayoutObject"* [ %28, %48 ], [ %86, %103 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 113336795588871485128704
  %57 = icmp eq i96 %56, 75557863725914323419136
  %58 = and i96 %55, 1115684864
  %59 = icmp ne i96 %58, 0
  %60 = or i1 %59, %57
  br i1 %60, label %72, label %61

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::LayoutObject"* %52 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %63 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %63, i64 13
  %65 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %64, align 8
  %66 = tail call %"class.blink::LayoutObjectChildList"* %65(%"class.blink::LayoutObject"* nonnull %52) #9
  %67 = icmp eq %"class.blink::LayoutObjectChildList"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %66, i64 0, i32 0
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %70, null
  br i1 %71, label %72, label %85

72:                                               ; preds = %68, %61, %51
  %73 = icmp eq %"class.blink::LayoutObject"* %52, %50
  br i1 %73, label %108, label %74

74:                                               ; preds = %72, %79
  %75 = phi %"class.blink::LayoutObject"* [ %81, %79 ], [ %52, %72 ]
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 9
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %78 = icmp eq %"class.blink::LayoutObject"* %77, null
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 7
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %80, align 8
  %82 = icmp ne %"class.blink::LayoutObject"* %81, null
  %83 = icmp ne %"class.blink::LayoutObject"* %81, %50
  %84 = and i1 %82, %83
  br i1 %84, label %74, label %108

85:                                               ; preds = %74, %68
  %86 = phi %"class.blink::LayoutObject"* [ %70, %68 ], [ %77, %74 ]
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %86, i64 0, i32 4
  %88 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %87 to i96*
  %89 = load i96, i96* %88, align 4
  %90 = and i96 %89, 113336795588871485128704
  %91 = icmp eq i96 %90, 75557863725914323419136
  %92 = and i96 %89, 1115684864
  %93 = icmp ne i96 %92, 0
  %94 = or i1 %93, %91
  br i1 %94, label %106, label %95

95:                                               ; preds = %85
  %96 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %86) #9
  br i1 %96, label %97, label %103

97:                                               ; preds = %95
  %98 = bitcast %"class.blink::LayoutObject"* %86 to i1 (%"class.blink::LayoutObject"*)***
  %99 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %99, i64 26
  %101 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* nonnull %86) #9
  br i1 %102, label %104, label %103

103:                                              ; preds = %97, %95
  br label %51

104:                                              ; preds = %97
  %105 = ptrtoint %"class.blink::LayoutObject"* %86 to i64
  br label %108

106:                                              ; preds = %85
  %107 = ptrtoint %"class.blink::LayoutObject"* %86 to i64
  br label %108

108:                                              ; preds = %72, %79, %104, %106
  %109 = phi i64 [ %105, %104 ], [ %107, %106 ], [ 0, %79 ], [ 0, %72 ]
  %110 = inttoptr i64 %109 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %110, %"class.blink::LayoutObject"** %29, align 8
  store i32 0, i32* %30, align 4
  store i32 -1, i32* %31, align 8
  br label %111

111:                                              ; preds = %26, %44, %108
  %112 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 29
  %113 = load i8, i8* %112, align 2, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %119, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %117 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %117, i64 0, i32 2
  store i8 0, i8* %118, align 2
  br label %119

119:                                              ; preds = %111, %115
  %120 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %121 = bitcast %"class.blink::TrailingObjects"* %120 to i64*
  store i64 0, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %122, align 4
  %123 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %124 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %124, i64 0, i32 3
  store i8 1, i8* %125, align 1
  %126 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %127 = load i8, i8* %126, align 2, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 9
  %133 = bitcast [20 x i8]* %132 to i160*
  %134 = load i160, i160* %133, align 8
  %135 = and i160 %134, 2066035336255469780992
  %136 = icmp eq i160 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %139 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %138, align 8
  %140 = bitcast %"class.blink::InlineIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #9
  %141 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 0, i32 0
  %142 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 2
  %144 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 3
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %141, align 8
  store %"class.blink::LayoutObject"* %28, %"class.blink::LayoutObject"** %142, align 8
  store i32 -1, i32* %143, align 8
  store i32 0, i32* %144, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %139, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %3) #9
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %139, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #9
  br label %145

145:                                              ; preds = %129, %119, %137
  %146 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %123, align 8
  %147 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %146, i64 0, i32 2
  %148 = load i8, i8* %147, align 2, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %176

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8
  %156 = lshr i160 %155, 68
  %157 = trunc i160 %156 to i32
  %158 = and i32 %157, 7
  %159 = add nsw i32 %158, -3
  %160 = icmp ult i32 %159, 2
  br i1 %160, label %161, label %174

161:                                              ; preds = %150
  %162 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %163, i64 0, i32 5, i32 0
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  %169 = and i160 %168, 41538374868278621028243970633760768
  %170 = icmp eq i160 %169, 0
  %171 = icmp ne i32 %158, 3
  %172 = xor i1 %171, %170
  %173 = select i1 %172, i32 1, i32 2
  br label %174

174:                                              ; preds = %150, %161
  %175 = phi i32 [ %173, %161 ], [ %158, %150 ]
  store i32 %175, i32* %1, align 4
  br label %176

176:                                              ; preds = %145, %2, %174
  %177 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %177, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext25HandleOutOfFlowPositionedERN3WTF6VectorINS_13LineLayoutBoxELj0ENS1_18PartitionAllocatorEEE(%"class.blink::BreakingContext"*, %"class.WTF::Vector.1712"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.blink::InlineIterator", align 8
  %4 = alloca %"class.blink::LineLayoutItem", align 8
  %5 = alloca %"class.blink::LineLayoutBox", align 8
  %6 = bitcast %"class.blink::LineLayoutBox"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %9 = bitcast %"class.blink::LayoutObject"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::LineLayoutBox"* %5 to i64*
  store i64 %10, i64* %11, align 8
  %12 = inttoptr i64 %10 to %"class.blink::LayoutObject"*
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = lshr i160 %17, 37
  %19 = trunc i160 %18 to i32
  %20 = and i32 %19, 31
  %21 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  switch i32 %20, label %22 [
    i32 0, label %61
    i32 25, label %61
    i32 19, label %61
    i32 17, label %61
    i32 15, label %61
    i32 5, label %61
    i32 3, label %61
    i32 24, label %61
  ]

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4
  %24 = bitcast %"class.blink::LineLayoutBlockFlow"* %23 to %"class.blink::LayoutBlock"**
  %25 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %25, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 41538374868278621028243970633760768
  %32 = icmp eq i160 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %25) #9
  br label %57

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %25, i64 0, i32 0
  %37 = and i160 %30, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 0
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %25, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %25, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %41 = select i1 %38, i32* %39, i32* %40
  %42 = load i32, i32* %41, align 4
  %43 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %25) #9
  %44 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %36) #9
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %44) #9
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !4
  %51 = icmp sgt i32 %50, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %50) #9
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !4
  br label %57

57:                                               ; preds = %33, %35
  %58 = phi i32 [ %34, %33 ], [ %56, %35 ]
  %59 = bitcast %"class.blink::LineLayoutBlockFlow"* %23 to %"class.blink::LayoutBlockFlow"**
  %60 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %59, align 8
  tail call void @_ZN5blink15LayoutBlockFlow31SetStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %60, %"class.blink::LayoutBox"* dereferenceable(216) %21, i32 %58) #9
  br label %86

61:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %62 = inttoptr i64 %10 to %"class.blink::LayoutBoxModelObject"*
  %63 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %62, i64 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %63, align 8
  %65 = icmp eq %"struct.blink::FragmentData::RareData"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %67, align 8
  br label %69

69:                                               ; preds = %61, %66
  %70 = phi %"class.blink::PaintLayer"* [ %68, %66 ], [ null, %61 ]
  %71 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0
  %72 = bitcast %"class.blink::LineLayoutBox"* %71 to %"class.blink::LayoutBox"**
  %73 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 0, i32 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 15211807202738752817960438464512
  %80 = icmp eq i160 %79, 0
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 2, i32 1, i32 1, i32 0
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %73, i64 0, i32 2, i32 1, i32 0, i32 0
  %83 = select i1 %80, i32* %81, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %70, i64 0, i32 11, i32 0
  store i32 %84, i32* %85, align 4
  br label %86

86:                                               ; preds = %69, %57
  %87 = phi i1 [ true, %69 ], [ false, %57 ]
  %88 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %89 = bitcast %"class.blink::LayoutObject"* %88 to i1 (%"class.blink::LayoutObject"*)***
  %90 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, i64 26
  %92 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* %88) #9
  %94 = or i1 %87, %93
  br i1 %94, label %95, label %134

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %97 = load i8, i8* %96, align 2, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %101 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %100, align 8
  %102 = bitcast %"class.blink::InlineIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #9
  %103 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 2
  %106 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 3
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %103, align 8
  %107 = bitcast %"class.blink::LayoutObject"** %104 to i64*
  store i64 %10, i64* %107, align 8
  store i32 -1, i32* %105, align 8
  store i32 0, i32* %106, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %101, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %3) #9
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %101, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #9
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  br label %109

109:                                              ; preds = %95, %99
  %110 = phi %"class.blink::LayoutObject"* [ %12, %95 ], [ %108, %99 ]
  %111 = bitcast %"class.blink::LineLayoutItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %112 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %4, i64 0, i32 0
  store %"class.blink::LayoutObject"* %110, %"class.blink::LayoutObject"** %112, align 8
  %113 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 0, i32 0, i32 0
  %114 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %113, align 8
  %115 = icmp eq %"class.blink::LayoutObject"* %114, null
  %116 = ptrtoint %"class.blink::LayoutObject"* %110 to i64
  br i1 %115, label %133, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1
  %119 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %120, %122
  br i1 %123, label %132, label %124, !prof !4

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %118, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %125, align 8
  %127 = zext i32 %120 to i64
  %128 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %126, i64 %127
  %129 = bitcast %"class.blink::LineLayoutItem"* %128 to i64*
  store i64 %116, i64* %129, align 8
  %130 = load i32, i32* %119, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %119, align 4
  br label %133

132:                                              ; preds = %117
  call void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1804"* %118, %"class.blink::LineLayoutItem"* nonnull dereferenceable(8) %4) #9
  br label %133

133:                                              ; preds = %109, %124, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  br label %134

134:                                              ; preds = %86, %133
  br i1 %93, label %151, label %135

135:                                              ; preds = %134
  %136 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %150, label %141, !prof !4

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %1, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %142, align 8
  %144 = zext i32 %137 to i64
  %145 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %143, i64 %144
  %146 = bitcast %"class.blink::LineLayoutBox"* %145 to i64*
  %147 = load i64, i64* %11, align 8
  store i64 %147, i64* %146, align 8
  %148 = load i32, i32* %136, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %136, align 4
  br label %151

150:                                              ; preds = %135
  call void @_ZN3WTF6VectorIN5blink13LineLayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1712"* %1, %"class.blink::LineLayoutBox"* nonnull dereferenceable(8) %5) #9
  br label %151

151:                                              ; preds = %150, %141, %134
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %153 = call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %152, i1 zeroext true, i1 zeroext true, i32 0)
  %154 = sitofp i32 %153 to float
  %155 = fmul float %154, 1.562500e-02
  %156 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %157 = load float, float* %156, align 8
  %158 = fadd float %157, %155
  store float %158, float* %156, align 8
  %159 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %160 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %159, align 8
  %161 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %160, i64 0, i32 1, i32 3, i64 0
  store i16 0, i16* %161, align 8
  %162 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %160, i64 0, i32 1, i32 3, i64 1
  store i16 0, i16* %162, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext11HandleFloatEv(%"class.blink::BreakingContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::LineLayoutBlockFlow"* %4 to %"class.blink::LayoutBlockFlow"**
  %6 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %7 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutBox"*
  %8 = tail call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %6, %"class.blink::LayoutBox"* dereferenceable(216) %7) #9
  %9 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 27
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %213, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, 16
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %50

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::LineLayoutBlockFlow"* %4 to %"class.blink::LayoutBox"**
  %19 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %19, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %19, i64 0, i32 2, i32 1, i32 1, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %19, i64 0, i32 2, i32 1, i32 0, i32 0
  %29 = select i1 %26, i32* %27, i32* %28
  %30 = load i32, i32* %29, align 4
  %31 = bitcast %"class.blink::LayoutBox"* %19 to %"class.blink::LayoutBlockFlow"*
  %32 = tail call %"class.blink::FloatingObject"* @_ZNK5blink15LayoutBlockFlow15LastPlacedFloatEPN3WTF24ListHashSetConstIteratorINS1_11ListHashSetINSt3__110unique_ptrINS_14FloatingObjectENS4_14default_deleteIS6_EEEELm4ENS_27FloatingObjectHashFunctionsENS1_28MallocedListHashSetAllocatorIS9_Lj4EEEEEEE(%"class.blink::LayoutBlockFlow"* %31, %"class.WTF::ListHashSetConstIterator"* null) #9
  %33 = icmp eq %"class.blink::FloatingObject"* %32, null
  %34 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  br i1 %33, label %47, label %35

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = trunc i96 %38 to i32
  %40 = icmp slt i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %32, i64 0, i32 2, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %32, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = select i1 %40, i32* %41, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %30, %44
  %46 = select i1 %45, i32 %44, i32 %30
  br label %47

47:                                               ; preds = %17, %35
  %48 = phi i32 [ %46, %35 ], [ %30, %17 ]
  %49 = tail call i32 @_ZN5blink15LayoutBlockFlow22PositionAndLayoutFloatERNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %34, %"class.blink::FloatingObject"* dereferenceable(40) %8, i32 %48) #9
  br label %50

50:                                               ; preds = %12, %47
  %51 = tail call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %3, i1 zeroext false, i1 zeroext true, i32 1)
  %52 = sitofp i32 %51 to float
  %53 = fmul float %52, 1.562500e-02
  %54 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %55 = load float, float* %54, align 8
  %56 = fadd float %55, %53
  store float %56, float* %54, align 8
  %57 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %5, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = trunc i96 %60 to i32
  %62 = icmp slt i32 %61, 0
  %63 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %8, i64 0, i32 2, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %8, i64 0, i32 2, i32 1, i32 1, i32 0
  %65 = select i1 %62, i32* %63, i32* %64
  %66 = load i32, i32* %65, align 4
  %67 = sitofp i32 %66 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %70 = load float, float* %69, align 4
  %71 = fadd float %56, %70
  %72 = fadd float %71, %68
  %73 = fmul float %72, 6.400000e+01
  %74 = tail call float @llvm.floor.f32(float %73) #9
  %75 = fcmp ult float %74, 0xC1E0000000000000
  %76 = fcmp ugt float %74, 0x41DFFFFFE0000000
  %77 = fcmp ogt float %74, 0xC1E0000000000000
  %78 = select i1 %77, float %74, float 0xC1E0000000000000
  %79 = fptosi float %78 to i32
  %80 = select i1 %75, i32 0, i32 2147483647
  %81 = select i1 %76, i32 %80, i32 %79
  %82 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 4
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, 6.400000e+01
  %85 = tail call float @llvm.ceil.f32(float %84) #9
  %86 = fcmp ult float %85, 0xC1E0000000000000
  %87 = fcmp ugt float %85, 0x41DFFFFFE0000000
  %88 = fcmp ogt float %85, 0xC1E0000000000000
  %89 = select i1 %88, float %85, float 0xC1E0000000000000
  %90 = fptosi float %89 to i32
  %91 = select i1 %86, i32 0, i32 2147483647
  %92 = select i1 %87, i32 %91, i32 %90
  %93 = icmp sgt i32 %92, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %81, i32 %92) #9
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !4
  %99 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %98, %100
  br i1 %101, label %209, label %102

102:                                              ; preds = %50
  %103 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %105 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %105, i64 0, i32 0, i32 9
  %107 = bitcast [20 x i8]* %106 to i160*
  %108 = load i160, i160* %107, align 8
  %109 = and i160 %108, 15211807202738752817960438464512
  %110 = icmp eq i160 %109, 0
  %111 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %57, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %112 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %57, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %113 = select i1 %110, i32* %111, i32* %112
  %114 = load i32, i32* %113, align 4
  %115 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %57, i32 %114, %"class.blink::LineWidth"* %103) #9
  %116 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %117 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %116, align 8
  %118 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %119 = icmp ne %"class.blink::LayoutObject"* %117, %118
  %120 = icmp eq %"class.blink::LayoutObject"* %117, null
  %121 = or i1 %120, %119
  br i1 %121, label %210, label %122

122:                                              ; preds = %102
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 0, i32 4
  %124 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %123 to i96*
  %125 = load i96, i96* %124, align 4
  %126 = and i96 %125, 33554432
  %127 = icmp eq i96 %126, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  %130 = load i32, i32* %129, align 4
  %131 = icmp ult i32 %130, 2147483647
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = add nuw nsw i32 %130, 1
  store i32 %133, i32* %129, align 4
  br label %134

134:                                              ; preds = %132, %128
  %135 = phi i32 [ %130, %128 ], [ %133, %132 ]
  %136 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %117, i64 1, i32 4, i32 0, i64 4
  %137 = bitcast i8* %136 to %"class.WTF::StringImpl"**
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = icmp ult i32 %135, %142
  br i1 %143, label %210, label %144

144:                                              ; preds = %122, %134, %140
  %145 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %145, align 8
  br label %147

147:                                              ; preds = %199, %144
  %148 = phi %"class.blink::LayoutObject"* [ %117, %144 ], [ %182, %199 ]
  %149 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %148, i64 0, i32 4
  %150 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %149 to i96*
  %151 = load i96, i96* %150, align 4
  %152 = and i96 %151, 113336795588871485128704
  %153 = icmp eq i96 %152, 75557863725914323419136
  %154 = and i96 %151, 1115684864
  %155 = icmp ne i96 %154, 0
  %156 = or i1 %155, %153
  br i1 %156, label %168, label %157

157:                                              ; preds = %147
  %158 = bitcast %"class.blink::LayoutObject"* %148 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %159 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %159, i64 13
  %161 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %160, align 8
  %162 = tail call %"class.blink::LayoutObjectChildList"* %161(%"class.blink::LayoutObject"* nonnull %148) #9
  %163 = icmp eq %"class.blink::LayoutObjectChildList"* %162, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %162, i64 0, i32 0
  %166 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %165, align 8
  %167 = icmp eq %"class.blink::LayoutObject"* %166, null
  br i1 %167, label %168, label %181

168:                                              ; preds = %164, %157, %147
  %169 = icmp eq %"class.blink::LayoutObject"* %148, %146
  br i1 %169, label %204, label %170

170:                                              ; preds = %168, %175
  %171 = phi %"class.blink::LayoutObject"* [ %177, %175 ], [ %148, %168 ]
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %171, i64 0, i32 9
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  %174 = icmp eq %"class.blink::LayoutObject"* %173, null
  br i1 %174, label %175, label %181

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %171, i64 0, i32 7
  %177 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %176, align 8
  %178 = icmp ne %"class.blink::LayoutObject"* %177, null
  %179 = icmp ne %"class.blink::LayoutObject"* %177, %146
  %180 = and i1 %178, %179
  br i1 %180, label %170, label %204

181:                                              ; preds = %170, %164
  %182 = phi %"class.blink::LayoutObject"* [ %166, %164 ], [ %173, %170 ]
  %183 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %182, i64 0, i32 4
  %184 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %183 to i96*
  %185 = load i96, i96* %184, align 4
  %186 = and i96 %185, 113336795588871485128704
  %187 = icmp eq i96 %186, 75557863725914323419136
  %188 = and i96 %185, 1115684864
  %189 = icmp ne i96 %188, 0
  %190 = or i1 %189, %187
  br i1 %190, label %202, label %191

191:                                              ; preds = %181
  %192 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %182) #9
  br i1 %192, label %193, label %199

193:                                              ; preds = %191
  %194 = bitcast %"class.blink::LayoutObject"* %182 to i1 (%"class.blink::LayoutObject"*)***
  %195 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %195, i64 26
  %197 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.blink::LayoutObject"* nonnull %182) #9
  br i1 %198, label %200, label %199

199:                                              ; preds = %193, %191
  br label %147

200:                                              ; preds = %193
  %201 = ptrtoint %"class.blink::LayoutObject"* %182 to i64
  br label %204

202:                                              ; preds = %181
  %203 = ptrtoint %"class.blink::LayoutObject"* %182 to i64
  br label %204

204:                                              ; preds = %168, %175, %200, %202
  %205 = phi i64 [ %201, %200 ], [ %203, %202 ], [ 0, %175 ], [ 0, %168 ]
  %206 = inttoptr i64 %205 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %206, %"class.blink::LayoutObject"** %116, align 8
  %207 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %207, align 4
  %208 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %208, align 8
  br label %210

209:                                              ; preds = %50
  store i8 0, i8* %9, align 8
  br label %210

210:                                              ; preds = %102, %204, %140, %209
  %211 = load float, float* %54, align 8
  %212 = fsub float %211, %53
  store float %212, float* %54, align 8
  br label %213

213:                                              ; preds = %1, %210
  %214 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %215 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %214, align 8
  %216 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %215, i64 0, i32 1, i32 3, i64 1
  %217 = load i16, i16* %216, align 2
  %218 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %215, i64 0, i32 1, i32 3, i64 0
  store i16 %217, i16* %218, align 8
  store i16 -3, i16* %216, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext17HandleEmptyInlineEv(%"class.blink::BreakingContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::InlineIterator", align 8
  %3 = alloca %"class.blink::LineLayoutItem", align 8
  %4 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %5) #9
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBoxModelObject"*
  %9 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv(%"class.blink::LayoutBoxModelObject"* %8) #9
  br i1 %9, label %14, label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %12 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %11, align 8
  %13 = tail call zeroext i1 @_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE(%"class.blink::LayoutObject"* %5, %"class.blink::LineInfo"* dereferenceable(12) %12)
  br i1 %13, label %18, label %85

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %16 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %16, i64 0, i32 2
  store i8 0, i8* %17, align 2
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %20 = load i8, i8* %19, align 2, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %36, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %24 = bitcast %"class.blink::TrailingObjects"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %27 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %26, align 8
  %28 = bitcast %"class.blink::LayoutObject"** %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::InlineIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 2
  %34 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 3
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %31, align 8
  %35 = bitcast %"class.blink::LayoutObject"** %32 to i64*
  store i64 %29, i64* %35, align 8
  store i32 -1, i32* %33, align 8
  store i32 0, i32* %34, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %27, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %2) #9
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %27, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  br label %85

36:                                               ; preds = %18
  %37 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 8
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 286720
  %43 = icmp eq i160 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 0
  %46 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %46, i64 0, i32 0, i32 1, i32 0
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %50 = icmp eq %"class.blink::LayoutObject"* %48, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %55 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink36ShouldSkipWhitespaceAfterStartObjectENS_19LineLayoutBlockFlowENS_14LineLayoutItemERNS_13MidpointStateINS_14InlineIteratorEEE(%"class.blink::LayoutObject"* %53, %"class.blink::LayoutObject"* %48, %"class.blink::MidpointState"* dereferenceable(32) %55)
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  store i8 1, i8* %59, align 4
  store i8 1, i8* %19, align 2
  br label %85

60:                                               ; preds = %36, %44, %51
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %62 = bitcast %"class.blink::LineLayoutItem"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %61, %"class.blink::LayoutObject"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 0, i32 0, i32 0
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutObject"* %65, null
  %67 = ptrtoint %"class.blink::LayoutObject"* %61 to i64
  br i1 %66, label %84, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1
  %70 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %83, label %75, !prof !4

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %69, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %76, align 8
  %78 = zext i32 %71 to i64
  %79 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %77, i64 %78
  %80 = bitcast %"class.blink::LineLayoutItem"* %79 to i64*
  store i64 %67, i64* %80, align 8
  %81 = load i32, i32* %70, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %70, align 4
  br label %84

83:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1804"* %69, %"class.blink::LineLayoutItem"* nonnull dereferenceable(8) %3) #9
  br label %84

84:                                               ; preds = %60, %75, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  br label %85

85:                                               ; preds = %22, %84, %57, %10
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %87 = call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %86, i1 zeroext true, i1 zeroext true, i32 0)
  %88 = call i32 @_ZN5blink24BorderPaddingMarginStartENS_16LineLayoutInlineE(%"class.blink::LayoutObject"* %5)
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %88) #9
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !4
  %95 = call i32 @_ZN5blink22BorderPaddingMarginEndENS_16LineLayoutInlineE(%"class.blink::LayoutObject"* %5)
  %96 = icmp slt i32 %95, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %95) #9
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !4
  %102 = sitofp i32 %101 to float
  %103 = fmul float %102, 1.562500e-02
  %104 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %105 = load float, float* %104, align 8
  %106 = fadd float %105, %103
  store float %106, float* %104, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext14HandleReplacedEv(%"class.blink::BreakingContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.blink::InlineIterator", align 8
  %3 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 15
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 0
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1, i32 4, i32 0, i64 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1, i32 4, i32 0, i64 4
  %19 = select i1 %16, i8* %17, i8* %18
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  tail call void @_ZN5blink9LineWidth20UpdateAvailableWidthENS_10LayoutUnitE(%"class.blink::LineWidth"* %9, i32 %21) #9
  br label %22

22:                                               ; preds = %1, %8
  %23 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %24 = load i8, i8* %23, align 2, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 13
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 18
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %22, %26
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %33 = bitcast %"class.blink::LayoutObject"* %32 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %32, i32 42) #9
  br i1 %37, label %38, label %45

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::LayoutObject"** %3 to %"class.blink::LayoutRubyRun"**
  %40 = load %"class.blink::LayoutRubyRun"*, %"class.blink::LayoutRubyRun"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %42 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %42, i64 0, i32 1
  %44 = tail call zeroext i1 @_ZNK5blink13LayoutRubyRun14CanBreakBeforeERKNS_21LazyLineBreakIteratorE(%"class.blink::LayoutRubyRun"* %40, %"class.blink::LazyLineBreakIterator"* dereferenceable(64) %43) #9
  br i1 %44, label %45, label %53

45:                                               ; preds = %31, %38
  %46 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %46) #9
  %47 = bitcast %"class.blink::LayoutObject"** %3 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %50 = bitcast %"class.blink::LayoutObject"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %52, align 8
  br label %53

53:                                               ; preds = %26, %45, %38
  %54 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %55 = load i8, i8* %54, align 2, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %59 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %58, align 8
  %60 = bitcast %"class.blink::InlineIterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #9
  %61 = bitcast %"class.blink::LayoutObject"** %3 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 1, i32 0
  %65 = bitcast %"class.blink::LayoutObject"** %64 to i64*
  store i64 %62, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 2
  store i32 -1, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 3
  store i32 0, i32* %67, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %59, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %2) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #9
  br label %68

68:                                               ; preds = %53, %57
  %69 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %70 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %70, i64 0, i32 2
  store i8 0, i8* %71, align 2
  store i8 0, i8* %54, align 2
  %72 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %75 = bitcast %"class.blink::TrailingObjects"* %74 to i64*
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4
  %78 = bitcast %"class.blink::LineLayoutBlockFlow"* %77 to %"class.blink::LayoutBlock"**
  %79 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1, i32 4, i32 0, i64 4
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = lshr i64 %82, 32
  %84 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %79, i64 0, i32 0, i32 0, i32 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = trunc i96 %86 to i32
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i64 %82, i64 %83
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %79, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %92 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %91, align 8
  %93 = icmp eq %"class.blink::ComputedStyle"* %92, null
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %94, align 8
  %96 = select i1 %93, %"class.blink::ComputedStyle"* %95, %"class.blink::ComputedStyle"* %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8, !noalias !5
  %100 = bitcast %"class.blink::LayoutObject"* %4 to i8*
  %101 = and i160 %99, 15211807202738752817960438464512
  %102 = icmp eq i160 %101, 0
  %103 = and i160 %99, 41538374868278621028243970633760768
  %104 = icmp eq i160 %103, 0
  %105 = select i1 %104, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %106 = select i1 %104, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %107 = select i1 %102, { i64, i64 } %106, { i64, i64 } %105
  %108 = select i1 %102, { i64, i64 } %106, { i64, i64 } %105
  %109 = extractvalue { i64, i64 } %107, 0
  %110 = extractvalue { i64, i64 } %108, 1
  %111 = getelementptr inbounds i8, i8* %100, i64 %110
  %112 = bitcast i8* %111 to %"class.blink::LayoutBoxModelObject"*
  %113 = and i64 %109, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %68
  %116 = bitcast i8* %111 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = add i64 %109, -1
  %119 = getelementptr i8, i8* %117, i64 %118
  %120 = bitcast i8* %119 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %120, align 8
  br label %124

122:                                              ; preds = %68
  %123 = inttoptr i64 %109 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %124

124:                                              ; preds = %115, %122
  %125 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %121, %115 ], [ %123, %122 ]
  %126 = call i32 %125(%"class.blink::LayoutBoxModelObject"* %112) #9
  %127 = icmp slt i32 %126, 0
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %126) #9
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !4
  %133 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %78, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %133, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %135 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %134, align 8
  %136 = icmp eq %"class.blink::ComputedStyle"* %135, null
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %94, align 8
  %138 = select i1 %136, %"class.blink::ComputedStyle"* %137, %"class.blink::ComputedStyle"* %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %138, i64 0, i32 0, i32 9
  %140 = bitcast [20 x i8]* %139 to i160*
  %141 = load i160, i160* %140, align 8, !noalias !8
  %142 = and i160 %141, 15211807202738752817960438464512
  %143 = icmp eq i160 %142, 0
  %144 = and i160 %141, 41538374868278621028243970633760768
  %145 = icmp eq i160 %144, 0
  %146 = select i1 %145, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %147 = select i1 %145, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %148 = select i1 %143, { i64, i64 } %147, { i64, i64 } %146
  %149 = select i1 %143, { i64, i64 } %147, { i64, i64 } %146
  %150 = extractvalue { i64, i64 } %148, 0
  %151 = extractvalue { i64, i64 } %149, 1
  %152 = getelementptr inbounds i8, i8* %100, i64 %151
  %153 = bitcast i8* %152 to %"class.blink::LayoutBoxModelObject"*
  %154 = and i64 %150, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %163, label %156

156:                                              ; preds = %124
  %157 = bitcast i8* %152 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = add i64 %150, -1
  %160 = getelementptr i8, i8* %158, i64 %159
  %161 = bitcast i8* %160 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %162 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %161, align 8
  br label %165

163:                                              ; preds = %124
  %164 = inttoptr i64 %150 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %165

165:                                              ; preds = %156, %163
  %166 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %162, %156 ], [ %164, %163 ]
  %167 = call i32 %166(%"class.blink::LayoutBoxModelObject"* %153) #9
  %168 = icmp slt i32 %167, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %132, i32 %167) #9
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !4
  %174 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %175 = call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %174, i1 zeroext true, i1 zeroext true, i32 0)
  %176 = icmp slt i32 %175, 0
  %177 = select i1 %176, i32 -2147483648, i32 2147483647
  %178 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %175) #9
  %179 = extractvalue { i32, i1 } %178, 1
  %180 = extractvalue { i32, i1 } %178, 0
  %181 = select i1 %179, i32 %177, i32 %180, !prof !4
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %183 = bitcast %"class.blink::LayoutObject"* %182 to i1 (%"class.blink::LayoutObject"*, i32)***
  %184 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %183, align 8
  %185 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %184, i64 92
  %186 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %185, align 8
  %187 = call zeroext i1 %186(%"class.blink::LayoutObject"* %182, i32 15) #9
  br i1 %187, label %198, label %188

188:                                              ; preds = %165
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %183, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %189, i64 92
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutObject"* %182, i32 13) #9
  br i1 %192, label %198, label %193

193:                                              ; preds = %188
  %194 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %183, align 8
  %195 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %194, i64 92
  %196 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %195, align 8
  %197 = call zeroext i1 %196(%"class.blink::LayoutObject"* %182, i32 36) #9
  br i1 %197, label %198, label %217

198:                                              ; preds = %165, %188, %193
  %199 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 8
  %200 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %200, i64 0, i32 0, i32 9
  %202 = bitcast [20 x i8]* %201 to i160*
  %203 = load i160, i160* %202, align 8
  %204 = and i160 %203, 286720
  %205 = icmp eq i160 %204, 0
  br i1 %205, label %206, label %214

206:                                              ; preds = %198
  %207 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %207, align 8
  %209 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %210 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %211 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %210, align 8
  %212 = call zeroext i1 @_ZN5blink36ShouldSkipWhitespaceAfterStartObjectENS_19LineLayoutBlockFlowENS_14LineLayoutItemERNS_13MidpointStateINS_14InlineIteratorEEE(%"class.blink::LayoutObject"* %208, %"class.blink::LayoutObject"* %209, %"class.blink::MidpointState"* dereferenceable(32) %211)
  br i1 %212, label %213, label %214

213:                                              ; preds = %206
  store i8 1, i8* %72, align 1
  store i8 1, i8* %73, align 4
  store i8 1, i8* %54, align 2
  br label %214

214:                                              ; preds = %198, %213, %206
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %216 = call zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"* %215) #9
  br i1 %216, label %217, label %223

217:                                              ; preds = %193, %214
  %218 = sitofp i32 %181 to float
  %219 = fmul float %218, 1.562500e-02
  %220 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %221 = load float, float* %220, align 8
  %222 = fadd float %219, %221
  store float %222, float* %220, align 8
  br label %223

223:                                              ; preds = %217, %214
  %224 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %225 = bitcast %"class.blink::LayoutObject"* %224 to i1 (%"class.blink::LayoutObject"*, i32)***
  %226 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %225, align 8
  %227 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %226, i64 92
  %228 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %227, align 8
  %229 = call zeroext i1 %228(%"class.blink::LayoutObject"* %224, i32 42) #9
  br i1 %229, label %230, label %237

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  %232 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %233 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 5, i32 0
  %234 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %236 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %235, align 8
  call void @_ZN5blink9LineWidth13ApplyOverhangENS_17LineLayoutRubyRunENS_14LineLayoutItemES2_(%"class.blink::LineWidth"* %231, %"class.blink::LayoutObject"* %232, %"class.blink::LayoutObject"* %234, %"class.blink::LayoutObject"* %236) #9
  br label %237

237:                                              ; preds = %230, %223
  %238 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %239 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %238, align 8
  %240 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %239, i64 0, i32 1, i32 3, i64 1
  %241 = load i16, i16* %240, align 2
  %242 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %239, i64 0, i32 1, i32 3, i64 0
  store i16 %241, i16* %242, align 8
  store i16 -3, i16* %240, align 2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15BreakingContext10HandleTextERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERb(%"class.blink::BreakingContext"*, %"class.WTF::Vector.1795"* dereferenceable(4112), i8* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.blink::TextRun", align 8
  %5 = alloca %"class.blink::TextRun", align 8
  %6 = alloca %"class.blink::LazyLineBreakIterator", align 8
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca %"class.blink::FloatPoint", align 4
  %9 = alloca %"class.blink::TextRun", align 8
  %10 = alloca %"class.blink::TextRun", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::InlineIterator", align 8
  %13 = alloca %"class.blink::InlineIterator", align 8
  %14 = alloca %"class.blink::InlineIterator", align 8
  %15 = alloca %"class.blink::InlineIterator", align 8
  %16 = alloca %"class.blink::TextRun", align 8
  %17 = alloca %"class.blink::NonSharedCharacterBreakIterator", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.blink::TextRun", align 8
  %20 = alloca %"class.blink::TextRun", align 8
  %21 = alloca %"class.blink::TextRun", align 8
  %22 = alloca %"class.blink::TextRun", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.blink::TextRun", align 8
  %25 = alloca %"class.blink::TextRun", align 8
  %26 = alloca %"class.blink::LazyLineBreakIterator", align 8
  %27 = alloca %"class.blink::TextRun", align 8
  %28 = alloca %"class.blink::FloatPoint", align 4
  %29 = alloca %"class.blink::LineLayoutText", align 8
  %30 = alloca i8, align 1
  %31 = alloca float, align 4
  %32 = alloca %"class.WTF::AtomicString", align 8
  %33 = alloca %"class.blink::TextRun", align 8
  %34 = alloca float, align 4
  %35 = alloca %"class.blink::InlineIterator", align 8
  %36 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 23
  store i8 0, i8* %40, align 4
  br label %41

41:                                               ; preds = %3, %39
  %42 = bitcast %"class.blink::LineLayoutText"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  %43 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %29, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %45 = bitcast %"class.blink::LayoutObject"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::LineLayoutText"* %29 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %49 = load i8, i8* %48, align 2, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 13
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 18
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %58 = load i8, i8* %57, align 2, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %61) #9
  %62 = load i64, i64* %45, align 8
  %63 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %64 = bitcast %"class.blink::LayoutObject"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %66, align 8
  br label %67

67:                                               ; preds = %56, %41, %60, %51
  %68 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %29, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %70 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %70, i64 0, i32 0
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp ne i8 %72, 0
  %74 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %68, i1 zeroext %73)
  %75 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %76, i64 0, i32 1, i32 0, i32 0
  %78 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %78, i64 0, i32 1
  %80 = load i32, i32* %36, align 4
  %81 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %84, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %86, i64 0, i32 1, i32 0, i32 9
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  %90 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %91 = load float, float* %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 1, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %93, i64 0, i32 23
  %95 = bitcast [5 x i8]* %94 to i40*
  %96 = load i40, i40* %95, align 8
  %97 = and i40 %96, 3221225472
  %98 = icmp ne i40 %97, 3221225472
  %99 = and i40 %96, 786432
  %100 = icmp eq i40 %99, 0
  %101 = and i1 %98, %100
  br i1 %101, label %119, label %102

102:                                              ; preds = %67
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = and i160 %105, 73728
  %107 = icmp eq i160 %106, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %102
  %109 = load i8, i8* %48, align 2, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %113 = load float, float* %112, align 4
  %114 = fcmp une float %113, 0.000000e+00
  br i1 %114, label %115, label %119

115:                                              ; preds = %108, %111
  %116 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 2
  br label %119

119:                                              ; preds = %67, %111, %115, %102
  %120 = phi i1 [ false, %102 ], [ true, %111 ], [ %118, %115 ], [ false, %67 ]
  %121 = load i8, i8* %48, align 2, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %129, label %123

123:                                              ; preds = %119
  %124 = and i40 %96, 896
  %125 = icmp eq i40 %124, 640
  %126 = icmp eq i40 %97, 1073741824
  %127 = or i1 %125, %126
  %128 = icmp eq i40 %97, 2147483648
  br label %129

129:                                              ; preds = %119, %123
  %130 = phi i1 [ %127, %123 ], [ false, %119 ]
  %131 = phi i1 [ %125, %123 ], [ false, %119 ]
  %132 = phi i1 [ %128, %123 ], [ false, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #9
  store i8 -86, i8* %30, align 1
  %133 = and i40 %96, 4294967296
  %134 = icmp eq i40 %133, 0
  br i1 %134, label %149, label %135

135:                                              ; preds = %129
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %137 = bitcast %"class.blink::LayoutObject"* %136 to i1 (%"class.blink::LayoutObject"*)***
  %138 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %137, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %138, i64 81
  %140 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, align 8
  %141 = call zeroext i1 %140(%"class.blink::LayoutObject"* %136) #9
  br i1 %141, label %142, label %149

142:                                              ; preds = %135
  %143 = bitcast %"class.blink::LineLayoutText"* %29 to %"class.blink::LayoutTextCombine"**
  %144 = load %"class.blink::LayoutTextCombine"*, %"class.blink::LayoutTextCombine"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutTextCombine", %"class.blink::LayoutTextCombine"* %144, i64 0, i32 3
  %146 = load i8, i8* %145, align 8
  %147 = and i8 %146, 1
  %148 = icmp ne i8 %147, 0
  br label %149

149:                                              ; preds = %129, %142, %135
  %150 = phi i1 [ false, %135 ], [ false, %129 ], [ %148, %142 ]
  %151 = zext i1 %150 to i8
  store i8 %151, i8* %30, align 1
  %152 = load i8, i8* %48, align 2, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  %155 = call %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"* %74) #9
  br label %156

156:                                              ; preds = %149, %154
  %157 = phi %"class.blink::Hyphenation"* [ %155, %154 ], [ null, %149 ]
  %158 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 1, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %159, i64 0, i32 23
  %161 = bitcast [5 x i8]* %160 to i40*
  %162 = load i40, i40* %161, align 8
  %163 = and i40 %162, 196608
  %164 = icmp eq i40 %163, 0
  %165 = bitcast float* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #9
  store float 0.000000e+00, float* %31, align 4
  %166 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %167 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %166, i64 0, i32 2
  %168 = load i8, i8* %167, align 2, !range !2
  %169 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %170 = bitcast %"class.blink::LayoutObject"* %169 to i1 (%"class.blink::LayoutObject"*, i32)***
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %170, align 8
  %172 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, i64 92
  %173 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, align 8
  %174 = call zeroext i1 %173(%"class.blink::LayoutObject"* %169, i32 65) #9
  %175 = xor i1 %174, true
  %176 = and i1 %132, %175
  %177 = and i1 %130, %175
  %178 = and i1 %120, %175
  %179 = zext i1 %178 to i8
  %180 = select i1 %176, i32 3, i32 0
  %181 = xor i1 %131, true
  %182 = and i1 %177, %181
  %183 = select i1 %182, i32 1, i32 2
  %184 = or i1 %177, %178
  %185 = zext i1 %184 to i8
  %186 = bitcast %"class.blink::LineLayoutText"* %29 to %"class.blink::LayoutText"**
  %187 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %186, align 8
  %188 = bitcast %"class.blink::LayoutText"* %187 to i1 (%"class.blink::LayoutText"*)***
  %189 = load i1 (%"class.blink::LayoutText"*)**, i1 (%"class.blink::LayoutText"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %189, i64 107
  %191 = load i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutText"* %187) #9
  br i1 %192, label %193, label %199

193:                                              ; preds = %156
  call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %89) #9
  %194 = load i64, i64* %45, align 8
  %195 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %196 = bitcast %"class.blink::LayoutObject"** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %197, align 4
  %198 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %198, align 8
  br label %199

199:                                              ; preds = %193, %156
  %200 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 10
  %201 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %202 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %201, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %202, align 8
  %204 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %205 = icmp eq %"class.blink::LayoutObject"* %203, %204
  br i1 %205, label %254, label %206

206:                                              ; preds = %199
  %207 = ptrtoint %"class.blink::LayoutObject"* %204 to i64
  %208 = bitcast %"struct.blink::LayoutTextInfo"* %201 to i64*
  store i64 %207, i64* %208, align 8
  %209 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %210 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %209, i64 0, i32 2
  store %"class.blink::Font"* %79, %"class.blink::Font"** %210, align 8
  %211 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %212 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %211, i64 0, i32 1
  %213 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %186, align 8
  %214 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %213, i64 0, i32 7, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #9
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !4

231:                                              ; preds = %222
  call void @llvm.trap() #9
  unreachable

232:                                              ; preds = %222
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %223, align 4
  br label %234

234:                                              ; preds = %206, %217, %232
  %235 = bitcast %"class.WTF::AtomicString"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #9
  %236 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %74) #9
  %237 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %237, align 8
  call void @_ZN5blink21LazyLineBreakIterator29ResetStringAndReleaseIteratorEN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::LazyLineBreakIterator"* %212, %"class.WTF::StringImpl"* %215, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %32)
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %234
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #9
  br label %253

253:                                              ; preds = %234, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #9
  br label %259

254:                                              ; preds = %199
  %255 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %201, i64 0, i32 2
  %256 = load %"class.blink::Font"*, %"class.blink::Font"** %255, align 8
  %257 = icmp eq %"class.blink::Font"* %256, %79
  br i1 %257, label %259, label %258

258:                                              ; preds = %254
  store %"class.blink::Font"* %79, %"class.blink::Font"** %255, align 8
  br label %259

259:                                              ; preds = %254, %258, %253
  %260 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %79, i64 0, i32 0
  %261 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %78, i64 0, i32 1, i32 0, i32 12, i32 0
  %262 = bitcast %"struct.blink::FontDescription::BitFields"* %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = and i64 %263, 8589934592
  %265 = icmp eq i64 %264, 0
  %266 = bitcast %"class.blink::TextRun"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %266) #9
  br i1 %265, label %276, label %267

267:                                              ; preds = %259
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %74, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = lshr i160 %270, 115
  %272 = trunc i160 %271 to i8
  %273 = and i8 %272, 1
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %33, %"class.blink::Font"* dereferenceable(88) %79, i16* nonnull @_ZN3WTF7unicodeL15kSpaceCharacterE, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %74, i8 zeroext %273) #9
  %274 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %33, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  %275 = fadd float %88, %274
  br label %276

276:                                              ; preds = %259, %267
  %277 = phi float [ %275, %267 ], [ 0.000000e+00, %259 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %266) #9
  %278 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %279 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %278, i64 0, i32 1, i32 3, i64 1
  %280 = load i16, i16* %279, align 2
  %281 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %278, i64 0, i32 1, i32 3, i64 0
  %282 = load i16, i16* %281, align 8
  %283 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %186, align 8
  %284 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %283, i64 0, i32 7, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %2103, label %287

287:                                              ; preds = %276
  %288 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %289 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 20
  %290 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %291 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 19
  %292 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  %293 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 15
  %294 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 21
  %295 = zext i1 %181 to i8
  %296 = zext i1 %177 to i8
  %297 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %298 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 4
  %299 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 0
  %300 = bitcast %"class.blink::TextRun"* %19 to i8*
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %78, i64 0, i32 1, i32 0, i32 5
  %302 = getelementptr inbounds %"class.blink::NonSharedCharacterBreakIterator", %"class.blink::NonSharedCharacterBreakIterator"* %17, i64 0, i32 0
  %303 = bitcast %"class.WTF::StringView"* %18 to i8*
  %304 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %306 = bitcast i8** %305 to %"class.WTF::StringImpl"**
  %307 = bitcast %"class.WTF::StringView"* %18 to i64*
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %309 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %310 = bitcast %"class.blink::TextRun"* %16 to i8*
  %311 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 3
  %312 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 4
  %313 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 5
  %314 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 6, i64 0
  %315 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 6, i64 1
  %316 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7, i32 0
  %317 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7, i32 1
  %318 = bitcast i8* %317 to i64*
  %319 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %16, i64 0, i32 7
  %320 = bitcast %"struct.blink::TabSize"* %319 to i40*
  %321 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %322 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %323 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  %324 = xor i1 %164, true
  %325 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %326 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %327 = bitcast %"class.blink::InlineIterator"* %14 to i8*
  %328 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %14, i64 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %14, i64 0, i32 1, i32 0
  %330 = bitcast %"class.blink::LayoutObject"** %329 to i64*
  %331 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %14, i64 0, i32 2
  %332 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %14, i64 0, i32 3
  %333 = bitcast float* %34 to i8*
  %334 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 23
  %335 = icmp eq %"class.blink::Hyphenation"* %157, null
  %336 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %337 = bitcast %"class.blink::TextRun"* %9 to i8*
  %338 = bitcast %"class.blink::TextRun"* %10 to i8*
  %339 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 3
  %340 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 4
  %341 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 5
  %342 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 0
  %343 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 1
  %344 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 0
  %345 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 1
  %346 = bitcast i8* %345 to i64*
  %347 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7
  %348 = bitcast %"struct.blink::TabSize"* %347 to i40*
  %349 = bitcast %"class.WTF::StringView"* %11 to i8*
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %351 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  %352 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %353 = bitcast i8** %352 to i16**
  %354 = bitcast %"class.WTF::StringView"* %11 to i64*
  %355 = bitcast %"class.blink::Hyphenation"* %157 to i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)***
  %356 = bitcast %"class.blink::LazyLineBreakIterator"* %6 to i8*
  %357 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 0, i32 0, i32 0
  %358 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %359 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 2
  %360 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 5, i32 0
  %361 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 5, i32 1
  %362 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 6
  %363 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 7
  %364 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 8
  %365 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 3, i64 0
  %366 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %6, i64 0, i32 3, i64 1
  %367 = bitcast %"class.blink::TextRun"* %4 to i8*
  %368 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 3
  %369 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 4
  %370 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 5
  %371 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 0
  %372 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 6, i64 1
  %373 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 0
  %374 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7, i32 1
  %375 = bitcast i8* %374 to i64*
  %376 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %4, i64 0, i32 7
  %377 = bitcast %"struct.blink::TabSize"* %376 to i40*
  %378 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %379 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  %380 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  %381 = bitcast %"class.blink::TextRun"* %7 to i8*
  %382 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 3
  %383 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 4
  %384 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  %385 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 0
  %386 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 1
  %387 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 0
  %388 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 1
  %389 = bitcast i8* %388 to i64*
  %390 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7
  %391 = bitcast %"struct.blink::TabSize"* %390 to i40*
  %392 = bitcast %"class.blink::FloatPoint"* %8 to i8*
  %393 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 0, i32 0
  %394 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %8, i64 0, i32 1
  %395 = bitcast %"class.blink::TextRun"* %5 to i8*
  %396 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 3
  %397 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 4
  %398 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 5
  %399 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 6, i64 0
  %400 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 6, i64 1
  %401 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7, i32 0
  %402 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7, i32 1
  %403 = bitcast i8* %402 to i64*
  %404 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %5, i64 0, i32 7
  %405 = bitcast %"struct.blink::TabSize"* %404 to i40*
  %406 = fcmp une float %88, 0.000000e+00
  %407 = bitcast %"class.blink::LayoutObject"** %378 to i64*
  %408 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 3
  %409 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %410 = bitcast %"class.blink::InlineIterator"* %35 to i8*
  %411 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %35, i64 0, i32 2
  %412 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %35, i64 0, i32 3
  %413 = bitcast %"class.blink::InlineIterator"* %15 to i8*
  %414 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %15, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %15, i64 0, i32 1, i32 0
  %416 = bitcast %"class.blink::LayoutObject"** %415 to i64*
  %417 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %15, i64 0, i32 2
  %418 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %15, i64 0, i32 3
  %419 = load i32, i32* %36, align 4
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = icmp ult i32 %419, %421
  br i1 %422, label %427, label %2094

423:                                              ; preds = %2088
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2092, i64 0, i32 1
  %425 = load i32, i32* %424, align 4
  %426 = icmp ult i32 %2089, %425
  br i1 %426, label %427, label %2094

427:                                              ; preds = %287, %423
  %428 = phi float [ %776, %423 ], [ 0.000000e+00, %287 ]
  %429 = phi float [ %2083, %423 ], [ %91, %287 ]
  %430 = phi i32 [ %778, %423 ], [ -1, %287 ]
  %431 = phi i32 [ %779, %423 ], [ 0, %287 ]
  %432 = phi i16 [ %487, %423 ], [ %280, %287 ]
  %433 = phi i32 [ %2082, %423 ], [ %80, %287 ]
  %434 = phi i8 [ %2081, %423 ], [ %168, %287 ]
  %435 = phi i8 [ %2080, %423 ], [ %185, %287 ]
  %436 = phi float [ %2079, %423 ], [ 0.000000e+00, %287 ]
  %437 = phi i8 [ %2078, %423 ], [ 0, %287 ]
  %438 = phi i8 [ %2077, %423 ], [ %179, %287 ]
  %439 = phi float [ %2076, %423 ], [ 0.000000e+00, %287 ]
  %440 = phi float [ %2075, %423 ], [ 0.000000e+00, %287 ]
  %441 = phi i32 [ %2089, %423 ], [ %419, %287 ]
  %442 = load i8, i8* %288, align 1, !range !2
  store i8 %442, i8* %289, align 2
  %443 = load i8, i8* %290, align 4, !range !2
  store i8 %443, i8* %291, align 1
  %444 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %445 = icmp eq %"class.blink::LayoutObject"* %444, null
  br i1 %445, label %480, label %446

446:                                              ; preds = %427
  %447 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %444, i64 0, i32 4
  %448 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %447 to i96*
  %449 = load i96, i96* %448, align 4
  %450 = and i96 %449, 33554432
  %451 = icmp eq i96 %450, 0
  br i1 %451, label %480, label %452

452:                                              ; preds = %446
  %453 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %444, i64 1, i32 4, i32 0, i64 4
  %454 = bitcast i8* %453 to %"class.WTF::StringImpl"**
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %454, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %480, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 1
  %459 = load i32, i32* %458, align 4
  %460 = icmp ugt i32 %459, %441
  br i1 %460, label %461, label %480

461:                                              ; preds = %457
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 1
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 1
  br i1 %465, label %473, label %467

467:                                              ; preds = %461
  %468 = bitcast %"class.WTF::StringImpl"* %466 to i8*
  %469 = zext i32 %441 to i64
  %470 = getelementptr inbounds i8, i8* %468, i64 %469
  %471 = load i8, i8* %470, align 1
  %472 = zext i8 %471 to i16
  br label %478

473:                                              ; preds = %461
  %474 = bitcast %"class.WTF::StringImpl"* %466 to i16*
  %475 = zext i32 %441 to i64
  %476 = getelementptr inbounds i16, i16* %474, i64 %475
  %477 = load i16, i16* %476, align 2
  br label %478

478:                                              ; preds = %467, %473
  %479 = phi i16 [ %472, %467 ], [ %477, %473 ]
  switch i16 %479, label %480 [
    i16 32, label %486
    i16 9, label %486
  ]

480:                                              ; preds = %452, %457, %427, %446, %478
  %481 = phi i16 [ %479, %478 ], [ 0, %446 ], [ 0, %427 ], [ 0, %457 ], [ 0, %452 ]
  %482 = load i8, i8* %292, align 8, !range !2
  %483 = icmp eq i8 %482, 0
  %484 = icmp eq i16 %481, 10
  %485 = and i1 %484, %483
  br label %486

486:                                              ; preds = %478, %478, %480
  %487 = phi i16 [ %479, %478 ], [ %481, %480 ], [ %479, %478 ]
  %488 = phi i1 [ true, %478 ], [ %485, %480 ], [ true, %478 ]
  %489 = zext i1 %488 to i8
  store i8 %489, i8* %288, align 1
  %490 = icmp eq i16 %487, 12288
  %491 = or i1 %490, %488
  %492 = zext i1 %491 to i8
  store i8 %492, i8* %290, align 4
  %493 = load i8, i8* %293, align 1, !range !2
  %494 = icmp ne i8 %493, 0
  %495 = and i1 %488, %494
  %496 = icmp eq i8 %442, 0
  %497 = and i1 %496, %495
  br i1 %497, label %498, label %499

498:                                              ; preds = %486
  store i8 %295, i8* %294, align 1
  br label %499

499:                                              ; preds = %486, %498
  %500 = phi i8 [ %296, %498 ], [ %435, %486 ]
  %501 = phi i8 [ 0, %498 ], [ %438, %486 ]
  %502 = load i8, i8* %297, align 1, !range !2
  %503 = icmp eq i8 %502, 0
  %504 = xor i1 %488, true
  %505 = or i1 %503, %504
  br i1 %505, label %506, label %509

506:                                              ; preds = %499
  %507 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %508 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %507, i64 0, i32 2
  store i8 0, i8* %508, align 2
  store float 0.000000e+00, float* %298, align 4
  br label %509

509:                                              ; preds = %499, %506
  %510 = icmp eq i16 %487, 173
  br i1 %510, label %511, label %636

511:                                              ; preds = %509
  %512 = load i8, i8* %48, align 2, !range !2
  %513 = icmp eq i8 %512, 0
  %514 = load float, float* %31, align 4
  %515 = fcmp une float %514, 0.000000e+00
  %516 = or i1 %513, %515
  %517 = or i1 %164, %516
  br i1 %517, label %636, label %518

518:                                              ; preds = %511
  %519 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %299, align 8
  %520 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %519, i64 0, i32 0, i32 3
  %521 = load i32, i32* %520, align 4
  %522 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %519, i64 0, i32 0, i32 1, i32 0
  %523 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %522, align 8
  %524 = icmp eq %"class.blink::LayoutObject"* %523, null
  br i1 %524, label %622, label %525

525:                                              ; preds = %518
  %526 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %523, i64 0, i32 4
  %527 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %526 to i96*
  %528 = load i96, i96* %527, align 4
  %529 = and i96 %528, 33554432
  %530 = icmp eq i96 %529, 0
  br i1 %530, label %596, label %531

531:                                              ; preds = %525
  %532 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %523, i64 1, i32 4, i32 0, i64 4
  %533 = bitcast i8* %532 to %"class.WTF::StringImpl"**
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %533, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %596, label %536

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 1
  %538 = load i32, i32* %537, align 4
  %539 = icmp ugt i32 %538, %521
  br i1 %539, label %540, label %596

540:                                              ; preds = %536
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 1
  %544 = icmp eq i32 %543, 0
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 1
  br i1 %544, label %552, label %546

546:                                              ; preds = %540
  %547 = bitcast %"class.WTF::StringImpl"* %545 to i8*
  %548 = zext i32 %521 to i64
  %549 = getelementptr inbounds i8, i8* %547, i64 %548
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  br label %591

552:                                              ; preds = %540
  %553 = bitcast %"class.WTF::StringImpl"* %545 to i16*
  %554 = zext i32 %521 to i64
  %555 = getelementptr inbounds i16, i16* %553, i64 %554
  %556 = load i16, i16* %555, align 2
  %557 = zext i16 %556 to i32
  %558 = and i32 %557, 63488
  %559 = icmp eq i32 %558, 55296
  br i1 %559, label %560, label %591

560:                                              ; preds = %552
  %561 = and i32 %557, 1024
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %577

563:                                              ; preds = %560
  %564 = add nuw i32 %521, 1
  %565 = icmp eq i32 %564, %538
  br i1 %565, label %591, label %566

566:                                              ; preds = %563
  %567 = zext i32 %564 to i64
  %568 = getelementptr inbounds i16, i16* %553, i64 %567
  %569 = load i16, i16* %568, align 2
  %570 = zext i16 %569 to i32
  %571 = and i32 %570, 64512
  %572 = icmp eq i32 %571, 56320
  br i1 %572, label %573, label %591

573:                                              ; preds = %566
  %574 = shl nuw nsw i32 %557, 10
  %575 = add nsw i32 %574, -56613888
  %576 = add nsw i32 %575, %570
  br label %591

577:                                              ; preds = %560
  %578 = icmp eq i32 %521, 0
  br i1 %578, label %591, label %579

579:                                              ; preds = %577
  %580 = add i32 %521, -1
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds i16, i16* %553, i64 %581
  %583 = load i16, i16* %582, align 2
  %584 = zext i16 %583 to i32
  %585 = and i32 %584, 64512
  %586 = icmp eq i32 %585, 55296
  br i1 %586, label %587, label %591

587:                                              ; preds = %579
  %588 = shl nuw nsw i32 %584, 10
  %589 = add nuw nsw i32 %557, -56613888
  %590 = add nsw i32 %589, %588
  br label %591

591:                                              ; preds = %587, %579, %577, %573, %566, %563, %552, %546
  %592 = phi i32 [ %551, %546 ], [ %557, %552 ], [ %576, %573 ], [ %557, %566 ], [ %557, %563 ], [ %590, %587 ], [ %557, %579 ], [ %557, %577 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %596, label %594

594:                                              ; preds = %591
  %595 = call i32 @u_charDirection_69(i32 %592) #9
  br label %622

596:                                              ; preds = %591, %536, %531, %525
  %597 = bitcast %"class.blink::LayoutObject"* %523 to i1 (%"class.blink::LayoutObject"*, i32)***
  %598 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %597, align 8
  %599 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %598, i64 92
  %600 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %599, align 8
  %601 = call zeroext i1 %600(%"class.blink::LayoutObject"* nonnull %523, i32 15) #9
  br i1 %601, label %612, label %602

602:                                              ; preds = %596
  %603 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %597, align 8
  %604 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %603, i64 92
  %605 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %604, align 8
  %606 = call zeroext i1 %605(%"class.blink::LayoutObject"* nonnull %523, i32 13) #9
  br i1 %606, label %612, label %607

607:                                              ; preds = %602
  %608 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %597, align 8
  %609 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %608, i64 92
  %610 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %609, align 8
  %611 = call zeroext i1 %610(%"class.blink::LayoutObject"* nonnull %523, i32 36) #9
  br i1 %611, label %612, label %622

612:                                              ; preds = %607, %602, %596
  %613 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %522, align 8
  %614 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %613, i64 0, i32 5, i32 0
  %615 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %614, align 8
  %616 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %615, i64 0, i32 0, i32 9
  %617 = bitcast [20 x i8]* %616 to i160*
  %618 = load i160, i160* %617, align 8
  %619 = lshr i160 %618, 115
  %620 = trunc i160 %619 to i32
  %621 = and i32 %620, 1
  br label %622

622:                                              ; preds = %518, %594, %607, %612
  %623 = phi i32 [ %621, %612 ], [ %595, %594 ], [ 10, %607 ], [ 10, %518 ]
  %624 = icmp eq i32 %623, 1
  %625 = icmp eq i32 %623, 13
  %626 = or i1 %624, %625
  %627 = zext i1 %626 to i8
  %628 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %186, align 8
  %629 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %628, i64 0, i32 0, i32 5, i32 0
  %630 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %629, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %300) #9
  %631 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %630) #9
  %632 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %631, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %19, %"class.blink::Font"* dereferenceable(88) %79, %"class.WTF::String"* dereferenceable(8) %632, %"class.blink::ComputedStyle"* dereferenceable(104) %630, i8 zeroext %627, i32 0) #9
  %633 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %19, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %300) #9
  store float %633, float* %31, align 4
  %634 = load float, float* %90, align 8
  %635 = fadd float %633, %634
  store float %635, float* %90, align 8
  br label %636

636:                                              ; preds = %511, %622, %509
  %637 = and i8 %500, 1
  %638 = icmp ne i8 %637, 0
  %639 = and i8 %437, 1
  %640 = icmp eq i8 %639, 0
  %641 = and i1 %640, %638
  br i1 %641, label %642, label %775

642:                                              ; preds = %636
  %643 = load i32, i32* %36, align 4
  %644 = icmp ult i32 %643, %431
  br i1 %644, label %775, label %645

645:                                              ; preds = %642
  %646 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %647 = load float, float* %301, align 4
  %648 = fmul float %647, 2.000000e+00
  %649 = fadd float %428, %429
  %650 = bitcast %"class.blink::LayoutObject"* %646 to %"class.blink::LayoutText"*
  %651 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %646, i64 1, i32 4, i32 0, i64 4
  %652 = bitcast i8* %651 to %"class.WTF::StringImpl"**
  %653 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %653, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 1
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %682

658:                                              ; preds = %645
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %302) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %302, i8 -86, i64 32, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #9
  %659 = icmp eq %"class.WTF::StringImpl"* %653, null
  br i1 %659, label %660, label %662

660:                                              ; preds = %658
  store i8* null, i8** %305, align 8
  %661 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %661, i64* %307, align 8
  br label %666

662:                                              ; preds = %658
  store %"class.WTF::StringImpl"* %653, %"class.WTF::StringImpl"** %304, align 8
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %653, i64 0, i32 1
  %664 = load i32, i32* %663, align 4
  %665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %653, i64 1
  store %"class.WTF::StringImpl"* %665, %"class.WTF::StringImpl"** %306, align 8
  br label %666

666:                                              ; preds = %662, %660
  %667 = phi i32 [ %664, %662 ], [ 0, %660 ]
  store i32 %667, i32* %308, align 8
  call void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #9
  %668 = load i32, i32* %36, align 4
  %669 = call i32 @_ZNK5blink31NonSharedCharacterBreakIterator9FollowingEi(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %17, i32 %668) #9
  %670 = icmp eq i32 %669, -1
  br i1 %670, label %671, label %677

671:                                              ; preds = %666
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %677, label %674

674:                                              ; preds = %671
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 1
  %676 = load i32, i32* %675, align 4
  br label %677

677:                                              ; preds = %674, %671, %666
  %678 = phi i32 [ %669, %666 ], [ %676, %674 ], [ 0, %671 ]
  %679 = load i32, i32* %36, align 4
  %680 = sub i32 %678, %679
  call void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %302) #9
  %681 = load i32, i32* %36, align 4
  br label %682

682:                                              ; preds = %677, %645
  %683 = phi i32 [ %681, %677 ], [ %643, %645 ]
  %684 = phi i32 [ %678, %677 ], [ %431, %645 ]
  %685 = phi i32 [ %680, %677 ], [ 1, %645 ]
  %686 = load float, float* %309, align 4
  %687 = fadd float %649, %686
  %688 = load i8, i8* %297, align 1, !range !2
  %689 = icmp eq i32 %683, 0
  br i1 %689, label %690, label %703

690:                                              ; preds = %682
  %691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %692 = icmp eq %"class.WTF::StringImpl"* %691, null
  br i1 %692, label %696, label %693

693:                                              ; preds = %690
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %691, i64 0, i32 1
  %695 = load i32, i32* %694, align 4
  br label %696

696:                                              ; preds = %693, %690
  %697 = phi i32 [ %695, %693 ], [ 0, %690 ]
  %698 = icmp eq i32 %697, %685
  br i1 %698, label %699, label %703

699:                                              ; preds = %696
  %700 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %646, i64 0, i32 5, i32 0
  %701 = bitcast %"class.blink::ComputedStyle"** %700 to %"class.blink::ComputedStyleBase"**
  %702 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %701, align 8
  br label %715

703:                                              ; preds = %696, %682
  %704 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %646, i64 0, i32 5, i32 0
  %705 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %704, align 8
  %706 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %705, i64 0, i32 0, i32 1, i32 0, i32 0
  %707 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %706, align 8
  %708 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %707, i64 0, i32 23
  %709 = bitcast [5 x i8]* %708 to i40*
  %710 = load i40, i40* %709, align 8
  %711 = and i40 %710, 4294967296
  %712 = icmp eq i40 %711, 0
  br i1 %712, label %736, label %713

713:                                              ; preds = %703
  %714 = bitcast %"class.blink::ComputedStyle"* %705 to %"class.blink::ComputedStyleBase"*
  br label %715

715:                                              ; preds = %713, %699
  %716 = phi %"class.blink::ComputedStyleBase"* [ %702, %699 ], [ %714, %713 ]
  %717 = fmul float %687, 6.400000e+01
  %718 = fcmp ult float %717, 0xC1E0000000000000
  %719 = fcmp ugt float %717, 0x41DFFFFFE0000000
  %720 = fcmp ogt float %717, 0xC1E0000000000000
  %721 = select i1 %720, float %717, float 0xC1E0000000000000
  %722 = fptosi float %721 to i32
  %723 = select i1 %718, i32 0, i32 2147483647
  %724 = select i1 %719, i32 %723, i32 %722
  %725 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %716, i64 0, i32 9
  %726 = bitcast [20 x i8]* %725 to i160*
  %727 = load i160, i160* %726, align 8
  %728 = lshr i160 %727, 115
  %729 = trunc i160 %728 to i8
  %730 = and i8 %729, 1
  %731 = bitcast %"class.blink::LayoutObject"* %646 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %732 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %731, align 8
  %733 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %732, i64 111
  %734 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %733, align 8
  %735 = call float %734(%"class.blink::LayoutText"* %650, i32 %683, i32 %685, %"class.blink::Font"* dereferenceable(88) %79, i32 %724, i8 zeroext %730, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #9
  br label %752

736:                                              ; preds = %703
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %310) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %310, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %311, align 8
  store float 0xFFFFFFFFE0000000, float* %312, align 4
  store i16 -21846, i16* %313, align 8
  store i8 -86, i8* %314, align 2
  store i8 -86, i8* %315, align 1
  store float 0xFFFFFFFFE0000000, float* %316, align 4
  store i64 -6148914691236517206, i64* %318, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %16, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %646, i32 %683, i32 %685, %"class.blink::ComputedStyle"* dereferenceable(104) %705) #9
  %737 = bitcast %"class.blink::ComputedStyle"** %704 to %"class.blink::ComputedStyleBase"**
  %738 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %737, align 8
  %739 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %738, i64 0, i32 1, i32 0, i32 0
  %740 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %739, align 8
  %741 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %740, i64 0, i32 15
  %742 = bitcast %"struct.blink::TabSize"* %741 to i64*
  %743 = load i64, i64* %742, align 4
  %744 = load i16, i16* %313, align 8
  %745 = shl nuw nsw i8 %688, 3
  %746 = xor i8 %745, 8
  %747 = zext i8 %746 to i16
  %748 = and i16 %744, -9
  %749 = or i16 %748, %747
  store i16 %749, i16* %313, align 8
  %750 = trunc i64 %743 to i40
  store i40 %750, i40* %320, align 4
  store float %687, float* %311, align 8
  %751 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %16, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %310) #9
  br label %752

752:                                              ; preds = %736, %715
  %753 = phi float [ %735, %715 ], [ %751, %736 ]
  %754 = load float, float* %309, align 4
  %755 = fadd float %649, %754
  %756 = fadd float %753, %755
  %757 = load i32, i32* %321, align 4
  %758 = sitofp i32 %757 to float
  %759 = fmul float %758, 1.562500e-02
  %760 = fadd float %648, %759
  %761 = fcmp ugt float %756, %760
  br i1 %761, label %762, label %775

762:                                              ; preds = %752
  br i1 %177, label %763, label %773

763:                                              ; preds = %762
  %764 = load i32, i32* %36, align 4
  %765 = icmp slt i32 %430, %764
  br i1 %765, label %766, label %770

766:                                              ; preds = %763
  %767 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %768 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %767, i64 0, i32 1
  %769 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* %768, i32 %764, i32 1) #9
  br label %770

770:                                              ; preds = %766, %763
  %771 = phi i32 [ %769, %766 ], [ %430, %763 ]
  %772 = icmp eq i32 %771, %764
  br i1 %772, label %773, label %775

773:                                              ; preds = %770, %762
  %774 = phi i32 [ %764, %770 ], [ %430, %762 ]
  br label %775

775:                                              ; preds = %773, %770, %752, %642, %636
  %776 = phi float [ %428, %642 ], [ %428, %636 ], [ %753, %752 ], [ %753, %770 ], [ %753, %773 ]
  %777 = phi float [ %429, %642 ], [ %429, %636 ], [ %649, %752 ], [ %649, %770 ], [ %649, %773 ]
  %778 = phi i32 [ %430, %642 ], [ %430, %636 ], [ %430, %752 ], [ %771, %770 ], [ %774, %773 ]
  %779 = phi i32 [ %431, %642 ], [ %431, %636 ], [ %684, %752 ], [ %684, %770 ], [ %684, %773 ]
  %780 = phi i8 [ %437, %642 ], [ %437, %636 ], [ 0, %752 ], [ 0, %770 ], [ 1, %773 ]
  %781 = load i32, i32* %322, align 8
  %782 = icmp eq i16 %487, 10
  br i1 %782, label %843, label %783

783:                                              ; preds = %775
  %784 = load i32, i32* %323, align 8
  %785 = icmp eq i32 %784, 2
  br i1 %785, label %843, label %786

786:                                              ; preds = %783
  %787 = load i8, i8* %293, align 1, !range !2
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %789, label %843

789:                                              ; preds = %786
  %790 = load i32, i32* %36, align 4
  %791 = icmp slt i32 %781, %790
  br i1 %791, label %792, label %796

792:                                              ; preds = %789
  %793 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  %794 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %793, i64 0, i32 1
  %795 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* %794, i32 %790, i32 %180) #9
  br label %796

796:                                              ; preds = %789, %792
  %797 = phi i32 [ %795, %792 ], [ %781, %789 ]
  %798 = icmp ne i32 %797, %790
  %799 = or i1 %798, %324
  %800 = xor i1 %798, true
  br i1 %799, label %843, label %801

801:                                              ; preds = %796
  %802 = load i32, i32* %36, align 4
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %840, label %804

804:                                              ; preds = %801
  %805 = add i32 %802, -1
  %806 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %807 = icmp eq %"class.blink::LayoutObject"* %806, null
  br i1 %807, label %840, label %808

808:                                              ; preds = %804
  %809 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %806, i64 0, i32 4
  %810 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %809 to i96*
  %811 = load i96, i96* %810, align 4
  %812 = and i96 %811, 33554432
  %813 = icmp eq i96 %812, 0
  br i1 %813, label %840, label %814

814:                                              ; preds = %808
  %815 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %806, i64 1, i32 4, i32 0, i64 4
  %816 = bitcast i8* %815 to %"class.WTF::StringImpl"**
  %817 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %816, align 8
  %818 = icmp eq %"class.WTF::StringImpl"* %817, null
  br i1 %818, label %840, label %819

819:                                              ; preds = %814
  %820 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 1
  %821 = load i32, i32* %820, align 4
  %822 = icmp ugt i32 %821, %805
  br i1 %822, label %823, label %840

823:                                              ; preds = %819
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load atomic i32, i32* %824 monotonic, align 4
  %826 = and i32 %825, 1
  %827 = icmp eq i32 %826, 0
  %828 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %817, i64 1
  br i1 %827, label %835, label %829

829:                                              ; preds = %823
  %830 = bitcast %"class.WTF::StringImpl"* %828 to i8*
  %831 = zext i32 %805 to i64
  %832 = getelementptr inbounds i8, i8* %830, i64 %831
  %833 = load i8, i8* %832, align 1
  %834 = zext i8 %833 to i16
  br label %840

835:                                              ; preds = %823
  %836 = bitcast %"class.WTF::StringImpl"* %828 to i16*
  %837 = zext i32 %805 to i64
  %838 = getelementptr inbounds i16, i16* %836, i64 %837
  %839 = load i16, i16* %838, align 2
  br label %840

840:                                              ; preds = %801, %804, %808, %814, %819, %829, %835
  %841 = phi i16 [ 0, %801 ], [ 0, %808 ], [ 0, %804 ], [ 0, %819 ], [ %834, %829 ], [ %839, %835 ], [ 0, %814 ]
  %842 = icmp ne i16 %841, 173
  br label %843

843:                                              ; preds = %796, %786, %783, %840, %775
  %844 = phi i32 [ %781, %775 ], [ %781, %783 ], [ %797, %796 ], [ %790, %840 ], [ %781, %786 ]
  %845 = phi i1 [ true, %775 ], [ false, %783 ], [ %800, %796 ], [ %842, %840 ], [ false, %786 ]
  store i32 %844, i32* %322, align 8
  %846 = xor i1 %845, true
  %847 = and i8 %780, 1
  %848 = icmp eq i8 %847, 0
  %849 = and i1 %848, %846
  %850 = load i8, i8* %325, align 2, !range !2
  %851 = icmp eq i8 %850, 0
  br i1 %849, label %852, label %863

852:                                              ; preds = %843
  br i1 %851, label %857, label %853

853:                                              ; preds = %852
  store i8 0, i8* %325, align 2
  %854 = load i32, i32* %36, align 4
  %855 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %326, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #9
  %856 = load i64, i64* %45, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %414, align 8
  store i64 %856, i64* %416, align 8
  store i32 -1, i32* %417, align 8
  store i32 %854, i32* %418, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %855, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #9
  br label %857

857:                                              ; preds = %852, %853
  %858 = phi i32 [ %433, %852 ], [ %854, %853 ]
  %859 = phi float [ %439, %852 ], [ 0.000000e+00, %853 ]
  %860 = phi float [ %440, %852 ], [ 0.000000e+00, %853 ]
  %861 = load i8, i8* %291, align 1, !range !2
  %862 = icmp ne i8 %861, 0
  call void @_ZN5blink15BreakingContext23PrepareForNextCharacterERKNS_14LineLayoutTextERbb(%"class.blink::BreakingContext"* %0, %"class.blink::LineLayoutText"* nonnull dereferenceable(8) %29, i8* nonnull dereferenceable(1) %30, i1 zeroext %862)
  store i8 0, i8* %293, align 1
  br label %2074

863:                                              ; preds = %843
  br i1 %851, label %871, label %864

864:                                              ; preds = %863
  %865 = load i8, i8* %288, align 1, !range !2
  %866 = icmp eq i8 %865, 0
  br i1 %866, label %867, label %2074

867:                                              ; preds = %864
  store i8 0, i8* %325, align 2
  %868 = load i32, i32* %36, align 4
  %869 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %326, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %327) #9
  %870 = load i64, i64* %45, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %328, align 8
  store i64 %870, i64* %330, align 8
  store i32 -1, i32* %331, align 8
  store i32 %868, i32* %332, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %869, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %327) #9
  br label %871

871:                                              ; preds = %863, %867
  %872 = phi i32 [ %868, %867 ], [ %433, %863 ]
  %873 = phi i1 [ true, %867 ], [ false, %863 ]
  %874 = phi float [ 0.000000e+00, %867 ], [ %439, %863 ]
  %875 = phi float [ 0.000000e+00, %867 ], [ %440, %863 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %333) #9
  store float 0xFFFFFFFFE0000000, float* %34, align 4
  %876 = call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZN5blink15BreakingContext18CalculateWordWidthERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERNS_14LineLayoutTextEjRffRKNS_4FontEfDs(%"class.blink::BreakingContext"* %0, %"class.WTF::Vector.1795"* dereferenceable(4112) %1, %"class.blink::LineLayoutText"* nonnull dereferenceable(8) %29, i32 %872, float* nonnull dereferenceable(4) %34, float %874, %"class.blink::Font"* dereferenceable(88) %79, float %277, i16 zeroext %487)
  %877 = load float, float* %34, align 4
  %878 = fadd float %875, %877
  store float %878, float* %34, align 4
  %879 = load float, float* %90, align 8
  %880 = fadd float %878, %879
  store float %880, float* %90, align 8
  %881 = load i8, i8* %297, align 1, !range !2
  %882 = icmp eq i8 %881, 0
  br i1 %882, label %892, label %883

883:                                              ; preds = %871
  %884 = load i8, i8* %291, align 1, !range !2
  %885 = icmp eq i8 %884, 0
  br i1 %885, label %892, label %886

886:                                              ; preds = %883
  %887 = load i8, i8* %290, align 4, !range !2
  %888 = icmp ne i8 %887, 0
  %889 = fcmp une float %878, 0.000000e+00
  %890 = and i1 %889, %888
  br i1 %890, label %891, label %892

891:                                              ; preds = %886
  store float %878, float* %298, align 4
  br label %892

892:                                              ; preds = %883, %871, %891, %886
  %893 = load i8, i8* %334, align 4, !range !2
  %894 = icmp eq i8 %893, 0
  br i1 %894, label %895, label %902

895:                                              ; preds = %892
  %896 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %897 = call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %896, i1 zeroext true, i1 zeroext false, i32 0)
  %898 = sitofp i32 %897 to float
  %899 = fmul float %898, 1.562500e-02
  %900 = load float, float* %90, align 8
  %901 = fadd float %900, %899
  store float %901, float* %90, align 8
  store i8 1, i8* %334, align 4
  br label %902

902:                                              ; preds = %892, %895
  %903 = phi float [ %880, %892 ], [ %901, %895 ]
  %904 = load float, float* %309, align 4
  %905 = fadd float %904, %903
  %906 = fmul float %905, 6.400000e+01
  %907 = call float @llvm.floor.f32(float %906) #9
  %908 = fcmp ult float %907, 0xC1E0000000000000
  %909 = fcmp ugt float %907, 0x41DFFFFFE0000000
  %910 = fcmp ogt float %907, 0xC1E0000000000000
  %911 = select i1 %910, float %907, float 0xC1E0000000000000
  %912 = fptosi float %911 to i32
  %913 = select i1 %908, i32 0, i32 2147483647
  %914 = select i1 %909, i32 %913, i32 %912
  %915 = load i32, i32* %321, align 4
  %916 = sitofp i32 %915 to float
  %917 = fmul float %916, 1.562500e-02
  %918 = fadd float %917, 1.562500e-02
  %919 = sitofp i32 %914 to float
  %920 = fmul float %919, 1.562500e-02
  %921 = fcmp ugt float %920, %918
  br i1 %921, label %922, label %1842

922:                                              ; preds = %902
  br i1 %335, label %1206, label %923

923:                                              ; preds = %922
  %924 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %336, align 8
  %925 = icmp eq %"class.blink::LayoutObject"* %924, null
  %926 = and i8 %434, 1
  %927 = icmp eq i8 %926, 0
  %928 = and i1 %927, %925
  br i1 %928, label %929, label %946

929:                                              ; preds = %923
  %930 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %931 = load i32, i32* %36, align 4
  %932 = bitcast %"class.blink::LayoutObject"* %930 to %"class.blink::LayoutText"*
  %933 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %930, i64 1, i32 4, i32 0, i64 4
  %934 = bitcast i8* %933 to %"class.WTF::StringImpl"**
  %935 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %934, align 8
  %936 = icmp eq %"class.WTF::StringImpl"* %935, null
  br i1 %936, label %940, label %937

937:                                              ; preds = %929
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %935, i64 0, i32 1
  %939 = load i32, i32* %938, align 4
  br label %940

940:                                              ; preds = %929, %937
  %941 = phi i32 [ %939, %937 ], [ 0, %929 ]
  %942 = sub i32 %941, %931
  %943 = call zeroext i1 @_ZNK5blink10LayoutText22ContainsOnlyWhitespaceEjj(%"class.blink::LayoutText"* %932, i32 %931, i32 %942) #9
  br i1 %943, label %1206, label %944

944:                                              ; preds = %940
  %945 = load float, float* %90, align 8
  br label %946

946:                                              ; preds = %944, %923
  %947 = phi float [ %945, %944 ], [ %903, %923 ]
  %948 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 1
  %949 = load float, float* %948, align 8
  %950 = fsub float %947, %949
  store float %950, float* %90, align 8
  %951 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %952 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 2
  %953 = load i32, i32* %952, align 4
  %954 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 3
  %955 = load i32, i32* %954, align 8
  %956 = sub i32 %955, %953
  %957 = icmp ult i32 %956, 3
  br i1 %957, label %1187, label %958

958:                                              ; preds = %946
  %959 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %299, align 8
  %960 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %959, i64 0, i32 0, i32 3
  %961 = load i32, i32* %960, align 4
  %962 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %959, i64 0, i32 0, i32 1, i32 0
  %963 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %962, align 8
  %964 = icmp eq %"class.blink::LayoutObject"* %963, null
  br i1 %964, label %1062, label %965

965:                                              ; preds = %958
  %966 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %963, i64 0, i32 4
  %967 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %966 to i96*
  %968 = load i96, i96* %967, align 4
  %969 = and i96 %968, 33554432
  %970 = icmp eq i96 %969, 0
  br i1 %970, label %1036, label %971

971:                                              ; preds = %965
  %972 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %963, i64 1, i32 4, i32 0, i64 4
  %973 = bitcast i8* %972 to %"class.WTF::StringImpl"**
  %974 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %973, align 8
  %975 = icmp eq %"class.WTF::StringImpl"* %974, null
  br i1 %975, label %1036, label %976

976:                                              ; preds = %971
  %977 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 1
  %978 = load i32, i32* %977, align 4
  %979 = icmp ugt i32 %978, %961
  br i1 %979, label %980, label %1036

980:                                              ; preds = %976
  %981 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %982 = load atomic i32, i32* %981 monotonic, align 4
  %983 = and i32 %982, 1
  %984 = icmp eq i32 %983, 0
  %985 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %974, i64 1
  br i1 %984, label %992, label %986

986:                                              ; preds = %980
  %987 = bitcast %"class.WTF::StringImpl"* %985 to i8*
  %988 = zext i32 %961 to i64
  %989 = getelementptr inbounds i8, i8* %987, i64 %988
  %990 = load i8, i8* %989, align 1
  %991 = zext i8 %990 to i32
  br label %1031

992:                                              ; preds = %980
  %993 = bitcast %"class.WTF::StringImpl"* %985 to i16*
  %994 = zext i32 %961 to i64
  %995 = getelementptr inbounds i16, i16* %993, i64 %994
  %996 = load i16, i16* %995, align 2
  %997 = zext i16 %996 to i32
  %998 = and i32 %997, 63488
  %999 = icmp eq i32 %998, 55296
  br i1 %999, label %1000, label %1031

1000:                                             ; preds = %992
  %1001 = and i32 %997, 1024
  %1002 = icmp eq i32 %1001, 0
  br i1 %1002, label %1003, label %1017

1003:                                             ; preds = %1000
  %1004 = add nuw i32 %961, 1
  %1005 = icmp eq i32 %1004, %978
  br i1 %1005, label %1031, label %1006

1006:                                             ; preds = %1003
  %1007 = zext i32 %1004 to i64
  %1008 = getelementptr inbounds i16, i16* %993, i64 %1007
  %1009 = load i16, i16* %1008, align 2
  %1010 = zext i16 %1009 to i32
  %1011 = and i32 %1010, 64512
  %1012 = icmp eq i32 %1011, 56320
  br i1 %1012, label %1013, label %1031

1013:                                             ; preds = %1006
  %1014 = shl nuw nsw i32 %997, 10
  %1015 = add nsw i32 %1014, -56613888
  %1016 = add nsw i32 %1015, %1010
  br label %1031

1017:                                             ; preds = %1000
  %1018 = icmp eq i32 %961, 0
  br i1 %1018, label %1031, label %1019

1019:                                             ; preds = %1017
  %1020 = add i32 %961, -1
  %1021 = zext i32 %1020 to i64
  %1022 = getelementptr inbounds i16, i16* %993, i64 %1021
  %1023 = load i16, i16* %1022, align 2
  %1024 = zext i16 %1023 to i32
  %1025 = and i32 %1024, 64512
  %1026 = icmp eq i32 %1025, 55296
  br i1 %1026, label %1027, label %1031

1027:                                             ; preds = %1019
  %1028 = shl nuw nsw i32 %1024, 10
  %1029 = add nuw nsw i32 %997, -56613888
  %1030 = add nsw i32 %1029, %1028
  br label %1031

1031:                                             ; preds = %1027, %1019, %1017, %1013, %1006, %1003, %992, %986
  %1032 = phi i32 [ %991, %986 ], [ %997, %992 ], [ %1016, %1013 ], [ %997, %1006 ], [ %997, %1003 ], [ %1030, %1027 ], [ %997, %1019 ], [ %997, %1017 ]
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1036, label %1034

1034:                                             ; preds = %1031
  %1035 = call i32 @u_charDirection_69(i32 %1032) #9
  br label %1062

1036:                                             ; preds = %1031, %976, %971, %965
  %1037 = bitcast %"class.blink::LayoutObject"* %963 to i1 (%"class.blink::LayoutObject"*, i32)***
  %1038 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %1037, align 8
  %1039 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1038, i64 92
  %1040 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1039, align 8
  %1041 = call zeroext i1 %1040(%"class.blink::LayoutObject"* nonnull %963, i32 15) #9
  br i1 %1041, label %1052, label %1042

1042:                                             ; preds = %1036
  %1043 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %1037, align 8
  %1044 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1043, i64 92
  %1045 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1044, align 8
  %1046 = call zeroext i1 %1045(%"class.blink::LayoutObject"* nonnull %963, i32 13) #9
  br i1 %1046, label %1052, label %1047

1047:                                             ; preds = %1042
  %1048 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %1037, align 8
  %1049 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1048, i64 92
  %1050 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1049, align 8
  %1051 = call zeroext i1 %1050(%"class.blink::LayoutObject"* nonnull %963, i32 36) #9
  br i1 %1051, label %1052, label %1062

1052:                                             ; preds = %1047, %1042, %1036
  %1053 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %962, align 8
  %1054 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1053, i64 0, i32 5, i32 0
  %1055 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1054, align 8
  %1056 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1055, i64 0, i32 0, i32 9
  %1057 = bitcast [20 x i8]* %1056 to i160*
  %1058 = load i160, i160* %1057, align 8
  %1059 = lshr i160 %1058, 115
  %1060 = trunc i160 %1059 to i32
  %1061 = and i32 %1060, 1
  br label %1062

1062:                                             ; preds = %1052, %1047, %1034, %958
  %1063 = phi i32 [ %1061, %1052 ], [ %1035, %1034 ], [ 10, %1047 ], [ 10, %958 ]
  %1064 = icmp eq i32 %1063, 1
  %1065 = icmp eq i32 %1063, 13
  %1066 = or i1 %1064, %1065
  %1067 = zext i1 %1066 to i8
  %1068 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %951, i64 0, i32 5, i32 0
  %1069 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1068, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %337) #9
  %1070 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %1069) #9
  %1071 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1070, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %9, %"class.blink::Font"* dereferenceable(88) %79, %"class.WTF::String"* dereferenceable(8) %1071, %"class.blink::ComputedStyle"* dereferenceable(104) %1069, i8 zeroext %1067, i32 0) #9
  %1072 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %9, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %337) #9
  %1073 = load i32, i32* %321, align 4
  %1074 = sitofp i32 %1073 to float
  %1075 = fmul float %1074, 1.562500e-02
  %1076 = load float, float* %309, align 4
  %1077 = load float, float* %90, align 8
  %1078 = fadd float %1076, %1077
  %1079 = fsub float %1075, %1078
  %1080 = fsub float %1079, %1072
  %1081 = fsub float %1080, %875
  %1082 = call i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"* %260) #9
  %1083 = sitofp i32 %1082 to float
  %1084 = fcmp ugt float %1081, %1083
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1062
  %1086 = load float, float* %90, align 8
  br label %1187

1087:                                             ; preds = %1062
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %339, align 8
  store float 0xFFFFFFFFE0000000, float* %340, align 4
  store i16 -21846, i16* %341, align 8
  store i8 -86, i8* %342, align 2
  store i8 -86, i8* %343, align 1
  store float 0xFFFFFFFFE0000000, float* %344, align 4
  store i64 -6148914691236517206, i64* %346, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %10, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %951, i32 %953, i32 %956, %"class.blink::ComputedStyle"* dereferenceable(104) %74) #9
  %1088 = load i8, i8* %297, align 1, !range !2
  %1089 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %1090 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1089, i64 0, i32 15
  %1091 = bitcast %"struct.blink::TabSize"* %1090 to i64*
  %1092 = load i64, i64* %1091, align 4
  %1093 = load i16, i16* %341, align 8
  %1094 = shl nuw nsw i8 %1088, 3
  %1095 = xor i8 %1094, 8
  %1096 = zext i8 %1095 to i16
  %1097 = and i16 %1093, -9
  %1098 = or i16 %1097, %1096
  store i16 %1098, i16* %341, align 8
  %1099 = trunc i64 %1092 to i40
  store i40 %1099, i40* %348, align 4
  %1100 = load float, float* %309, align 4
  %1101 = load float, float* %90, align 8
  %1102 = fadd float %1100, %1101
  store float %1102, float* %339, align 8
  %1103 = call i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %10, float %1081, i32 0, i32 0) #9
  %1104 = icmp ult i32 %1103, 2
  br i1 %1104, label %1191, label %1105

1105:                                             ; preds = %1087
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %349) #9
  %1106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %951, i64 1, i32 4, i32 0, i64 4
  %1107 = bitcast i8* %1106 to %"class.WTF::StringImpl"**
  %1108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1107, align 8
  %1109 = icmp eq %"class.WTF::StringImpl"* %1108, null
  br i1 %1109, label %1124, label %1110

1110:                                             ; preds = %1105
  store i32 %956, i32* %350, align 8
  store %"class.WTF::StringImpl"* %1108, %"class.WTF::StringImpl"** %351, align 8
  %1111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1112 = load atomic i32, i32* %1111 monotonic, align 4
  %1113 = and i32 %1112, 1
  %1114 = icmp eq i32 %1113, 0
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1108, i64 1
  br i1 %1114, label %1120, label %1116

1116:                                             ; preds = %1110
  %1117 = bitcast %"class.WTF::StringImpl"* %1115 to i8*
  %1118 = zext i32 %953 to i64
  %1119 = getelementptr inbounds i8, i8* %1117, i64 %1118
  store i8* %1119, i8** %352, align 8
  br label %1126

1120:                                             ; preds = %1110
  %1121 = bitcast %"class.WTF::StringImpl"* %1115 to i16*
  %1122 = zext i32 %953 to i64
  %1123 = getelementptr inbounds i16, i16* %1121, i64 %1122
  store i16* %1123, i16** %353, align 8
  br label %1126

1124:                                             ; preds = %1105
  store i32 0, i32* %350, align 8
  store i8* null, i8** %352, align 8
  %1125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1125, i64* %354, align 8
  br label %1126

1126:                                             ; preds = %1124, %1120, %1116
  %1127 = add i32 %956, -2
  %1128 = icmp ult i32 %1127, %1103
  %1129 = select i1 %1128, i32 %1127, i32 %1103
  %1130 = add nuw i32 %1129, 1
  %1131 = load i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)**, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*** %355, align 8
  %1132 = getelementptr inbounds i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)** %1131, i64 2
  %1133 = load i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)** %1132, align 8
  %1134 = call i32 %1133(%"class.blink::Hyphenation"* nonnull %157, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, i32 %1130) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %349) #9
  %1135 = icmp ult i32 %1134, 2
  br i1 %1135, label %1191, label %1136

1136:                                             ; preds = %1126
  %1137 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 3
  %1138 = add i32 %1134, %953
  %1139 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font17GetCharacterRangeERKNS_7TextRunEjj(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %10, i32 0, i32 %1134) #9
  %1140 = extractvalue { <2 x float>, <2 x float> } %1139, 0
  %1141 = extractelement <2 x float> %1140, i32 1
  %1142 = extractelement <2 x float> %1140, i32 0
  %1143 = fsub float %1141, %1142
  store i32 %1138, i32* %1137, align 8
  store float %1143, float* %948, align 8
  %1144 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %1145 = load i32, i32* %322, align 8
  store i32 %1138, i32* %36, align 4
  %1146 = icmp eq %"class.blink::LayoutObject"* %1144, null
  br i1 %1146, label %1181, label %1147

1147:                                             ; preds = %1136
  %1148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1144, i64 0, i32 4
  %1149 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1148 to i96*
  %1150 = load i96, i96* %1149, align 4
  %1151 = and i96 %1150, 33554432
  %1152 = icmp eq i96 %1151, 0
  br i1 %1152, label %1181, label %1153

1153:                                             ; preds = %1147
  %1154 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1144, i64 1, i32 4, i32 0, i64 4
  %1155 = bitcast i8* %1154 to %"class.WTF::StringImpl"**
  %1156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1155, align 8
  %1157 = icmp eq %"class.WTF::StringImpl"* %1156, null
  br i1 %1157, label %1181, label %1158

1158:                                             ; preds = %1153
  %1159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1156, i64 0, i32 1
  %1160 = load i32, i32* %1159, align 4
  %1161 = icmp ugt i32 %1160, %1138
  br i1 %1161, label %1162, label %1181

1162:                                             ; preds = %1158
  %1163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1164 = load atomic i32, i32* %1163 monotonic, align 4
  %1165 = and i32 %1164, 1
  %1166 = icmp eq i32 %1165, 0
  %1167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1156, i64 1
  br i1 %1166, label %1174, label %1168

1168:                                             ; preds = %1162
  %1169 = bitcast %"class.WTF::StringImpl"* %1167 to i8*
  %1170 = zext i32 %1138 to i64
  %1171 = getelementptr inbounds i8, i8* %1169, i64 %1170
  %1172 = load i8, i8* %1171, align 1
  %1173 = zext i8 %1172 to i16
  br label %1179

1174:                                             ; preds = %1162
  %1175 = bitcast %"class.WTF::StringImpl"* %1167 to i16*
  %1176 = zext i32 %1138 to i64
  %1177 = getelementptr inbounds i16, i16* %1175, i64 %1176
  %1178 = load i16, i16* %1177, align 2
  br label %1179

1179:                                             ; preds = %1174, %1168
  %1180 = phi i16 [ %1173, %1168 ], [ %1178, %1174 ]
  switch i16 %1180, label %1181 [
    i16 32, label %1195
    i16 9, label %1195
  ]

1181:                                             ; preds = %1179, %1158, %1153, %1147, %1136
  %1182 = phi i16 [ %1180, %1179 ], [ 0, %1147 ], [ 0, %1136 ], [ 0, %1158 ], [ 0, %1153 ]
  %1183 = load i8, i8* %292, align 8, !range !2
  %1184 = icmp eq i8 %1183, 0
  %1185 = icmp eq i16 %1182, 10
  %1186 = and i1 %1185, %1184
  br label %1195

1187:                                             ; preds = %1085, %946
  %1188 = phi float [ %1086, %1085 ], [ %950, %946 ]
  %1189 = load float, float* %948, align 8
  %1190 = fadd float %1189, %1188
  store float %1190, float* %90, align 8
  br label %1206

1191:                                             ; preds = %1087, %1126
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #9
  %1192 = load float, float* %948, align 8
  %1193 = load float, float* %90, align 8
  %1194 = fadd float %1192, %1193
  store float %1194, float* %90, align 8
  br label %1206

1195:                                             ; preds = %1181, %1179, %1179
  %1196 = phi i16 [ %1180, %1179 ], [ %1182, %1181 ], [ %1180, %1179 ]
  %1197 = phi i1 [ true, %1179 ], [ %1186, %1181 ], [ true, %1179 ]
  %1198 = zext i1 %1197 to i8
  store i8 %1198, i8* %288, align 1
  %1199 = icmp eq i16 %1196, 12288
  %1200 = or i1 %1199, %1197
  %1201 = zext i1 %1200 to i8
  store i8 %1201, i8* %290, align 4
  store %"class.blink::LayoutObject"* %1144, %"class.blink::LayoutObject"** %378, align 8
  store i32 %1138, i32* %379, align 4
  store i32 %1145, i32* %380, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #9
  %1202 = load float, float* %948, align 8
  %1203 = load float, float* %90, align 8
  %1204 = fadd float %1202, %1203
  store float %1204, float* %90, align 8
  store i8 1, i8* %2, align 1
  %1205 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  br label %2063

1206:                                             ; preds = %940, %1191, %1187, %922
  br i1 %638, label %1207, label %1842

1207:                                             ; preds = %1206
  %1208 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 1
  %1209 = load float, float* %1208, align 8
  %1210 = load float, float* %90, align 8
  %1211 = fsub float %1210, %1209
  store float %1211, float* %90, align 8
  %1212 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %1213 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 2
  %1214 = load i32, i32* %1213, align 4
  %1215 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 3
  %1216 = load i32, i32* %1215, align 8
  %1217 = sub nsw i32 %1216, %1214
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1837, label %1219

1219:                                             ; preds = %1207
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %356) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 -86, i64 64, i1 false) #9
  %1220 = bitcast %"class.blink::LayoutObject"* %1212 to %"class.blink::LayoutText"*
  %1221 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 1, i32 4, i32 0, i64 4
  %1222 = bitcast i8* %1221 to %"class.WTF::StringImpl"**
  %1223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  %1224 = icmp eq %"class.WTF::StringImpl"* %1223, null
  br i1 %1224, label %1242, label %1225

1225:                                             ; preds = %1219
  %1226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1227 = load atomic i32, i32* %1226 monotonic, align 4
  %1228 = and i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  br i1 %1229, label %1230, label %1244

1230:                                             ; preds = %1225
  %1231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 0
  %1232 = load i32, i32* %1231, align 4
  %1233 = zext i32 %1232 to i33
  %1234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1233, i33 1) #9
  %1235 = extractvalue { i33, i1 } %1234, 1
  %1236 = extractvalue { i33, i1 } %1234, 0
  %1237 = icmp slt i33 %1236, 0
  %1238 = or i1 %1235, %1237
  br i1 %1238, label %1239, label %1240, !prof !4

1239:                                             ; preds = %1230
  call void @llvm.trap() #9
  unreachable

1240:                                             ; preds = %1230
  %1241 = trunc i33 %1236 to i32
  store i32 %1241, i32* %1231, align 4
  br label %1244

1242:                                             ; preds = %1219
  %1243 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %74) #9
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %357, align 8
  br label %1261

1244:                                             ; preds = %1240, %1225
  %1245 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %74) #9
  store %"class.WTF::StringImpl"* %1223, %"class.WTF::StringImpl"** %357, align 8
  %1246 = load atomic i32, i32* %1226 monotonic, align 4
  %1247 = and i32 %1246, 2
  %1248 = icmp eq i32 %1247, 0
  br i1 %1248, label %1249, label %1261

1249:                                             ; preds = %1244
  %1250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 0
  %1251 = load i32, i32* %1250, align 4
  %1252 = zext i32 %1251 to i33
  %1253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1252, i33 1) #9
  %1254 = extractvalue { i33, i1 } %1253, 1
  %1255 = extractvalue { i33, i1 } %1253, 0
  %1256 = icmp slt i33 %1255, 0
  %1257 = or i1 %1254, %1256
  br i1 %1257, label %1258, label %1259, !prof !4

1258:                                             ; preds = %1249
  call void @llvm.trap() #9
  unreachable

1259:                                             ; preds = %1249
  %1260 = trunc i33 %1255 to i32
  store i32 %1260, i32* %1250, align 4
  br label %1261

1261:                                             ; preds = %1259, %1244, %1242
  %1262 = phi %"class.WTF::StringImpl"* [ %1245, %1259 ], [ %1245, %1244 ], [ %1243, %1242 ]
  store %"class.WTF::StringImpl"* %1262, %"class.WTF::StringImpl"** %358, align 8
  %1263 = icmp eq %"class.WTF::StringImpl"* %1262, null
  br i1 %1263, label %1281, label %1264

1264:                                             ; preds = %1261
  %1265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1266 = load atomic i32, i32* %1265 monotonic, align 4
  %1267 = and i32 %1266, 2
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1281

1269:                                             ; preds = %1264
  %1270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1262, i64 0, i32 0
  %1271 = load i32, i32* %1270, align 4
  %1272 = zext i32 %1271 to i33
  %1273 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1272, i33 1) #9
  %1274 = extractvalue { i33, i1 } %1273, 1
  %1275 = extractvalue { i33, i1 } %1273, 0
  %1276 = icmp slt i33 %1275, 0
  %1277 = or i1 %1274, %1276
  br i1 %1277, label %1278, label %1279, !prof !4

1278:                                             ; preds = %1269
  call void @llvm.trap() #9
  unreachable

1279:                                             ; preds = %1269
  %1280 = trunc i33 %1275 to i32
  store i32 %1280, i32* %1270, align 4
  br label %1281

1281:                                             ; preds = %1279, %1264, %1261
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %359, align 8
  store i16* null, i16** %360, align 8
  store i32 0, i32* %361, align 8
  store i32 0, i32* %362, align 8
  store i32 %183, i32* %363, align 4
  store i32 0, i32* %364, align 8
  store i16 0, i16* %365, align 8
  store i16 0, i16* %366, align 2
  br i1 %1224, label %1295, label %1282

1282:                                             ; preds = %1281
  %1283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load atomic i32, i32* %1283 monotonic, align 4
  %1285 = and i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 0
  %1288 = load i32, i32* %1287, align 4
  br i1 %1286, label %1289, label %1291

1289:                                             ; preds = %1282
  %1290 = add i32 %1288, -1
  store i32 %1290, i32* %1287, align 4
  br label %1291

1291:                                             ; preds = %1289, %1282
  %1292 = phi i32 [ %1290, %1289 ], [ %1288, %1282 ]
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1295

1294:                                             ; preds = %1291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1223) #9
  br label %1295

1295:                                             ; preds = %1294, %1291, %1281
  br i1 %1263, label %1309, label %1296

1296:                                             ; preds = %1295
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1298 = load atomic i32, i32* %1297 monotonic, align 4
  %1299 = and i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1262, i64 0, i32 0
  %1302 = load i32, i32* %1301, align 4
  br i1 %1300, label %1303, label %1305

1303:                                             ; preds = %1296
  %1304 = add i32 %1302, -1
  store i32 %1304, i32* %1301, align 4
  br label %1305

1305:                                             ; preds = %1303, %1296
  %1306 = phi i32 [ %1304, %1303 ], [ %1302, %1296 ]
  %1307 = icmp eq i32 %1306, 0
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1262) #9
  br label %1309

1309:                                             ; preds = %1308, %1305, %1295
  %1310 = load i32, i32* %323, align 8
  %1311 = icmp eq i32 %1310, 64
  br i1 %1311, label %1312, label %1313

1312:                                             ; preds = %1309
  store i32 3, i32* %364, align 8
  br label %1313

1313:                                             ; preds = %1312, %1309
  %1314 = load i32, i32* %321, align 4
  %1315 = sitofp i32 %1314 to float
  %1316 = fmul float %1315, 1.562500e-02
  %1317 = load float, float* %309, align 4
  %1318 = load float, float* %90, align 8
  %1319 = fadd float %1317, %1318
  %1320 = fsub float %1316, %1319
  %1321 = fcmp ugt float %1320, 1.562500e-02
  br i1 %1321, label %1515, label %1322

1322:                                             ; preds = %1313
  %1323 = load i32, i32* %1213, align 4
  %1324 = fcmp une float %1319, 0.000000e+00
  br i1 %1324, label %1325, label %1361

1325:                                             ; preds = %1322
  %1326 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 8
  %1327 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1326, align 8
  %1328 = icmp eq %"class.blink::LayoutObject"* %1327, null
  br i1 %1328, label %1329, label %1364

1329:                                             ; preds = %1325
  %1330 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 7
  %1331 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1330, align 8
  %1332 = icmp eq %"class.blink::LayoutObject"* %1331, null
  br i1 %1332, label %1361, label %1333

1333:                                             ; preds = %1329
  %1334 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1331, i64 0, i32 7
  %1335 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1334, align 8
  %1336 = icmp eq %"class.blink::LayoutObject"* %1335, null
  br i1 %1336, label %1361, label %1337

1337:                                             ; preds = %1333
  %1338 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1335, i64 0, i32 5, i32 0
  %1339 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1338, align 8
  %1340 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1339, i64 0, i32 0, i32 9
  %1341 = bitcast [20 x i8]* %1340 to i160*
  %1342 = load i160, i160* %1341, align 8
  %1343 = and i160 %1342, 73728
  %1344 = icmp eq i160 %1343, 0
  br i1 %1344, label %1345, label %1361

1345:                                             ; preds = %1337
  %1346 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1339, i64 0, i32 0, i32 1, i32 0, i32 0
  %1347 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1346, align 8
  %1348 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1347, i64 0, i32 23
  %1349 = bitcast [5 x i8]* %1348 to i40*
  %1350 = load i40, i40* %1349, align 8
  %1351 = and i40 %1350, 3221225472
  %1352 = icmp ne i40 %1351, 3221225472
  %1353 = and i40 %1350, 786432
  %1354 = icmp eq i40 %1353, 0
  %1355 = and i1 %1352, %1354
  %1356 = fcmp une float %1317, 0.000000e+00
  %1357 = or i1 %1356, %1355
  %1358 = icmp eq i40 %1351, 1073741824
  %1359 = xor i1 %1357, true
  %1360 = or i1 %1358, %1359
  br i1 %1360, label %1364, label %1361

1361:                                             ; preds = %1345, %1337, %1333, %1329, %1322
  %1362 = add nsw i32 %1323, 1
  %1363 = call i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"* nonnull %6, i32 %1362) #9
  br label %1364

1364:                                             ; preds = %1361, %1345, %1325
  %1365 = phi i32 [ %1363, %1361 ], [ %1323, %1345 ], [ %1323, %1325 ]
  %1366 = load i32, i32* %1215, align 8
  %1367 = icmp slt i32 %1365, %1366
  br i1 %1367, label %1368, label %1796

1368:                                             ; preds = %1364
  %1369 = sub nsw i32 %1365, %1323
  %1370 = load float, float* %309, align 4
  %1371 = load float, float* %90, align 8
  %1372 = fadd float %1370, %1371
  %1373 = load i8, i8* %297, align 1, !range !2
  %1374 = icmp eq i32 %1323, 0
  br i1 %1374, label %1375, label %1388

1375:                                             ; preds = %1368
  %1376 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  %1377 = icmp eq %"class.WTF::StringImpl"* %1376, null
  br i1 %1377, label %1381, label %1378

1378:                                             ; preds = %1375
  %1379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1376, i64 0, i32 1
  %1380 = load i32, i32* %1379, align 4
  br label %1381

1381:                                             ; preds = %1378, %1375
  %1382 = phi i32 [ %1380, %1378 ], [ 0, %1375 ]
  %1383 = icmp eq i32 %1382, %1369
  br i1 %1383, label %1384, label %1388

1384:                                             ; preds = %1381
  %1385 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 5, i32 0
  %1386 = bitcast %"class.blink::ComputedStyle"** %1385 to %"class.blink::ComputedStyleBase"**
  %1387 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1386, align 8
  br label %1400

1388:                                             ; preds = %1381, %1368
  %1389 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 5, i32 0
  %1390 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1389, align 8
  %1391 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1390, i64 0, i32 0, i32 1, i32 0, i32 0
  %1392 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1391, align 8
  %1393 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1392, i64 0, i32 23
  %1394 = bitcast [5 x i8]* %1393 to i40*
  %1395 = load i40, i40* %1394, align 8
  %1396 = and i40 %1395, 4294967296
  %1397 = icmp eq i40 %1396, 0
  br i1 %1397, label %1421, label %1398

1398:                                             ; preds = %1388
  %1399 = bitcast %"class.blink::ComputedStyle"* %1390 to %"class.blink::ComputedStyleBase"*
  br label %1400

1400:                                             ; preds = %1398, %1384
  %1401 = phi %"class.blink::ComputedStyleBase"* [ %1387, %1384 ], [ %1399, %1398 ]
  %1402 = fmul float %1372, 6.400000e+01
  %1403 = fcmp ult float %1402, 0xC1E0000000000000
  %1404 = fcmp ugt float %1402, 0x41DFFFFFE0000000
  %1405 = fcmp ogt float %1402, 0xC1E0000000000000
  %1406 = select i1 %1405, float %1402, float 0xC1E0000000000000
  %1407 = fptosi float %1406 to i32
  %1408 = select i1 %1403, i32 0, i32 2147483647
  %1409 = select i1 %1404, i32 %1408, i32 %1407
  %1410 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1401, i64 0, i32 9
  %1411 = bitcast [20 x i8]* %1410 to i160*
  %1412 = load i160, i160* %1411, align 8
  %1413 = lshr i160 %1412, 115
  %1414 = trunc i160 %1413 to i8
  %1415 = and i8 %1414, 1
  %1416 = bitcast %"class.blink::LayoutObject"* %1212 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %1417 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %1416, align 8
  %1418 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %1417, i64 111
  %1419 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %1418, align 8
  %1420 = call float %1419(%"class.blink::LayoutText"* %1220, i32 %1323, i32 %1369, %"class.blink::Font"* dereferenceable(88) %79, i32 %1409, i8 zeroext %1415, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #9
  br label %1437

1421:                                             ; preds = %1388
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %367) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %368, align 8
  store float 0xFFFFFFFFE0000000, float* %369, align 4
  store i16 -21846, i16* %370, align 8
  store i8 -86, i8* %371, align 2
  store i8 -86, i8* %372, align 1
  store float 0xFFFFFFFFE0000000, float* %373, align 4
  store i64 -6148914691236517206, i64* %375, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %4, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %1212, i32 %1323, i32 %1369, %"class.blink::ComputedStyle"* dereferenceable(104) %1390) #9
  %1422 = bitcast %"class.blink::ComputedStyle"** %1389 to %"class.blink::ComputedStyleBase"**
  %1423 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1422, align 8
  %1424 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1423, i64 0, i32 1, i32 0, i32 0
  %1425 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1424, align 8
  %1426 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1425, i64 0, i32 15
  %1427 = bitcast %"struct.blink::TabSize"* %1426 to i64*
  %1428 = load i64, i64* %1427, align 4
  %1429 = load i16, i16* %370, align 8
  %1430 = shl nuw nsw i8 %1373, 3
  %1431 = xor i8 %1430, 8
  %1432 = zext i8 %1431 to i16
  %1433 = and i16 %1429, -9
  %1434 = or i16 %1433, %1432
  store i16 %1434, i16* %370, align 8
  %1435 = trunc i64 %1428 to i40
  store i40 %1435, i40* %377, align 4
  store float %1372, float* %368, align 8
  %1436 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %4, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %367) #9
  br label %1437

1437:                                             ; preds = %1421, %1400
  %1438 = phi float [ %1420, %1400 ], [ %1436, %1421 ]
  %1439 = load float, float* %309, align 4
  %1440 = load float, float* %90, align 8
  %1441 = fadd float %1439, %1440
  %1442 = fadd float %1438, %1441
  %1443 = fmul float %1442, 6.400000e+01
  %1444 = call float @llvm.floor.f32(float %1443) #9
  %1445 = fcmp ult float %1444, 0xC1E0000000000000
  %1446 = fcmp ugt float %1444, 0x41DFFFFFE0000000
  %1447 = fcmp ogt float %1444, 0xC1E0000000000000
  %1448 = select i1 %1447, float %1444, float 0xC1E0000000000000
  %1449 = fptosi float %1448 to i32
  %1450 = select i1 %1445, i32 0, i32 2147483647
  %1451 = select i1 %1446, i32 %1450, i32 %1449
  %1452 = load i32, i32* %321, align 4
  %1453 = sitofp i32 %1452 to float
  %1454 = fmul float %1453, 1.562500e-02
  %1455 = fadd float %1454, 1.562500e-02
  %1456 = sitofp i32 %1451 to float
  %1457 = fmul float %1456, 1.562500e-02
  %1458 = fcmp ugt float %1457, %1455
  br i1 %1458, label %1459, label %1464

1459:                                             ; preds = %1437
  %1460 = fcmp une float %1439, 0.000000e+00
  br i1 %1460, label %1796, label %1461

1461:                                             ; preds = %1459
  %1462 = load i8, i8* %294, align 1, !range !2
  %1463 = icmp eq i8 %1462, 0
  br i1 %1463, label %1464, label %1796

1464:                                             ; preds = %1461, %1437
  store i32 %1365, i32* %1215, align 8
  store float %1438, float* %1208, align 8
  %1465 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %1466 = load i32, i32* %322, align 8
  store i32 %1365, i32* %36, align 4
  %1467 = icmp eq %"class.blink::LayoutObject"* %1465, null
  br i1 %1467, label %1502, label %1468

1468:                                             ; preds = %1464
  %1469 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1465, i64 0, i32 4
  %1470 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1469 to i96*
  %1471 = load i96, i96* %1470, align 4
  %1472 = and i96 %1471, 33554432
  %1473 = icmp eq i96 %1472, 0
  br i1 %1473, label %1502, label %1474

1474:                                             ; preds = %1468
  %1475 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1465, i64 1, i32 4, i32 0, i64 4
  %1476 = bitcast i8* %1475 to %"class.WTF::StringImpl"**
  %1477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1476, align 8
  %1478 = icmp eq %"class.WTF::StringImpl"* %1477, null
  br i1 %1478, label %1502, label %1479

1479:                                             ; preds = %1474
  %1480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1477, i64 0, i32 1
  %1481 = load i32, i32* %1480, align 4
  %1482 = icmp ugt i32 %1481, %1365
  br i1 %1482, label %1483, label %1502

1483:                                             ; preds = %1479
  %1484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1485 = load atomic i32, i32* %1484 monotonic, align 4
  %1486 = and i32 %1485, 1
  %1487 = icmp eq i32 %1486, 0
  %1488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1477, i64 1
  br i1 %1487, label %1495, label %1489

1489:                                             ; preds = %1483
  %1490 = bitcast %"class.WTF::StringImpl"* %1488 to i8*
  %1491 = zext i32 %1365 to i64
  %1492 = getelementptr inbounds i8, i8* %1490, i64 %1491
  %1493 = load i8, i8* %1492, align 1
  %1494 = zext i8 %1493 to i16
  br label %1500

1495:                                             ; preds = %1483
  %1496 = bitcast %"class.WTF::StringImpl"* %1488 to i16*
  %1497 = zext i32 %1365 to i64
  %1498 = getelementptr inbounds i16, i16* %1496, i64 %1497
  %1499 = load i16, i16* %1498, align 2
  br label %1500

1500:                                             ; preds = %1495, %1489
  %1501 = phi i16 [ %1494, %1489 ], [ %1499, %1495 ]
  switch i16 %1501, label %1502 [
    i16 32, label %1508
    i16 9, label %1508
  ]

1502:                                             ; preds = %1500, %1479, %1474, %1468, %1464
  %1503 = phi i16 [ %1501, %1500 ], [ 0, %1468 ], [ 0, %1464 ], [ 0, %1479 ], [ 0, %1474 ]
  %1504 = load i8, i8* %292, align 8, !range !2
  %1505 = icmp eq i8 %1504, 0
  %1506 = icmp eq i16 %1503, 10
  %1507 = and i1 %1506, %1505
  br label %1508

1508:                                             ; preds = %1502, %1500, %1500
  %1509 = phi i16 [ %1501, %1500 ], [ %1503, %1502 ], [ %1501, %1500 ]
  %1510 = phi i1 [ true, %1500 ], [ %1507, %1502 ], [ true, %1500 ]
  %1511 = zext i1 %1510 to i8
  store i8 %1511, i8* %288, align 1
  %1512 = icmp eq i16 %1509, 12288
  %1513 = or i1 %1512, %1510
  %1514 = zext i1 %1513 to i8
  store i8 %1514, i8* %290, align 4
  store %"class.blink::LayoutObject"* %1465, %"class.blink::LayoutObject"** %378, align 8
  store i32 %1365, i32* %379, align 4
  store i32 %1466, i32* %380, align 8
  br label %1796

1515:                                             ; preds = %1313
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %381) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %381, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %382, align 8
  store float 0xFFFFFFFFE0000000, float* %383, align 4
  store i16 -21846, i16* %384, align 8
  store i8 -86, i8* %385, align 2
  store i8 -86, i8* %386, align 1
  store float 0xFFFFFFFFE0000000, float* %387, align 4
  store i64 -6148914691236517206, i64* %389, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %7, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %1212, i32 %1214, i32 %1217, %"class.blink::ComputedStyle"* dereferenceable(104) %74) #9
  %1516 = load i8, i8* %297, align 1, !range !2
  %1517 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %1518 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1517, i64 0, i32 15
  %1519 = bitcast %"struct.blink::TabSize"* %1518 to i64*
  %1520 = load i64, i64* %1519, align 4
  %1521 = load i16, i16* %384, align 8
  %1522 = shl nuw nsw i8 %1516, 3
  %1523 = xor i8 %1522, 8
  %1524 = zext i8 %1523 to i16
  %1525 = and i16 %1521, -9
  %1526 = or i16 %1525, %1524
  store i16 %1526, i16* %384, align 8
  %1527 = trunc i64 %1520 to i40
  store i40 %1527, i40* %391, align 4
  %1528 = load float, float* %309, align 4
  %1529 = load float, float* %90, align 8
  %1530 = fadd float %1528, %1529
  store float %1530, float* %382, align 8
  %1531 = fadd float %1320, 1.562500e-02
  %1532 = and i16 %1521, 16
  %1533 = icmp eq i16 %1532, 0
  %1534 = load float, float* %1208, align 8
  %1535 = fsub float %1534, %1531
  %1536 = select i1 %1533, float %1531, float %1535
  %1537 = call i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %7, float %1536, i32 0, i32 0) #9
  %1538 = icmp eq i32 %1537, 0
  br i1 %1538, label %1544, label %1539

1539:                                             ; preds = %1515
  %1540 = add nsw i32 %1537, %1214
  %1541 = call i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"* nonnull %6, i32 %1540, i32 %1214) #9
  %1542 = sub nsw i32 %1541, %1214
  %1543 = icmp eq i32 %1542, 0
  br i1 %1543, label %1544, label %1740

1544:                                             ; preds = %1539, %1515
  %1545 = load i32, i32* %1213, align 4
  %1546 = load float, float* %309, align 4
  %1547 = load float, float* %90, align 8
  %1548 = fadd float %1546, %1547
  %1549 = fcmp une float %1548, 0.000000e+00
  br i1 %1549, label %1550, label %1586

1550:                                             ; preds = %1544
  %1551 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 8
  %1552 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1551, align 8
  %1553 = icmp eq %"class.blink::LayoutObject"* %1552, null
  br i1 %1553, label %1554, label %1589

1554:                                             ; preds = %1550
  %1555 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 7
  %1556 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1555, align 8
  %1557 = icmp eq %"class.blink::LayoutObject"* %1556, null
  br i1 %1557, label %1586, label %1558

1558:                                             ; preds = %1554
  %1559 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1556, i64 0, i32 7
  %1560 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1559, align 8
  %1561 = icmp eq %"class.blink::LayoutObject"* %1560, null
  br i1 %1561, label %1586, label %1562

1562:                                             ; preds = %1558
  %1563 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1560, i64 0, i32 5, i32 0
  %1564 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1563, align 8
  %1565 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1564, i64 0, i32 0, i32 9
  %1566 = bitcast [20 x i8]* %1565 to i160*
  %1567 = load i160, i160* %1566, align 8
  %1568 = and i160 %1567, 73728
  %1569 = icmp eq i160 %1568, 0
  br i1 %1569, label %1570, label %1586

1570:                                             ; preds = %1562
  %1571 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1564, i64 0, i32 0, i32 1, i32 0, i32 0
  %1572 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1571, align 8
  %1573 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1572, i64 0, i32 23
  %1574 = bitcast [5 x i8]* %1573 to i40*
  %1575 = load i40, i40* %1574, align 8
  %1576 = and i40 %1575, 3221225472
  %1577 = icmp ne i40 %1576, 3221225472
  %1578 = and i40 %1575, 786432
  %1579 = icmp eq i40 %1578, 0
  %1580 = and i1 %1577, %1579
  %1581 = fcmp une float %1546, 0.000000e+00
  %1582 = or i1 %1581, %1580
  %1583 = icmp eq i40 %1576, 1073741824
  %1584 = xor i1 %1582, true
  %1585 = or i1 %1583, %1584
  br i1 %1585, label %1589, label %1586

1586:                                             ; preds = %1570, %1562, %1558, %1554, %1544
  %1587 = add nsw i32 %1545, 1
  %1588 = call i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"* nonnull %6, i32 %1587) #9
  br label %1589

1589:                                             ; preds = %1586, %1570, %1550
  %1590 = phi i32 [ %1588, %1586 ], [ %1545, %1570 ], [ %1545, %1550 ]
  %1591 = load i32, i32* %1215, align 8
  %1592 = icmp slt i32 %1590, %1591
  br i1 %1592, label %1593, label %1794

1593:                                             ; preds = %1589
  %1594 = sub nsw i32 %1590, %1545
  %1595 = load float, float* %309, align 4
  %1596 = load float, float* %90, align 8
  %1597 = fadd float %1595, %1596
  %1598 = load i8, i8* %297, align 1, !range !2
  %1599 = icmp eq i32 %1545, 0
  br i1 %1599, label %1600, label %1613

1600:                                             ; preds = %1593
  %1601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  %1602 = icmp eq %"class.WTF::StringImpl"* %1601, null
  br i1 %1602, label %1606, label %1603

1603:                                             ; preds = %1600
  %1604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1601, i64 0, i32 1
  %1605 = load i32, i32* %1604, align 4
  br label %1606

1606:                                             ; preds = %1603, %1600
  %1607 = phi i32 [ %1605, %1603 ], [ 0, %1600 ]
  %1608 = icmp eq i32 %1607, %1594
  br i1 %1608, label %1609, label %1613

1609:                                             ; preds = %1606
  %1610 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 5, i32 0
  %1611 = bitcast %"class.blink::ComputedStyle"** %1610 to %"class.blink::ComputedStyleBase"**
  %1612 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1611, align 8
  br label %1625

1613:                                             ; preds = %1606, %1593
  %1614 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1212, i64 0, i32 5, i32 0
  %1615 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1614, align 8
  %1616 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1615, i64 0, i32 0, i32 1, i32 0, i32 0
  %1617 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1616, align 8
  %1618 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1617, i64 0, i32 23
  %1619 = bitcast [5 x i8]* %1618 to i40*
  %1620 = load i40, i40* %1619, align 8
  %1621 = and i40 %1620, 4294967296
  %1622 = icmp eq i40 %1621, 0
  br i1 %1622, label %1646, label %1623

1623:                                             ; preds = %1613
  %1624 = bitcast %"class.blink::ComputedStyle"* %1615 to %"class.blink::ComputedStyleBase"*
  br label %1625

1625:                                             ; preds = %1623, %1609
  %1626 = phi %"class.blink::ComputedStyleBase"* [ %1612, %1609 ], [ %1624, %1623 ]
  %1627 = fmul float %1597, 6.400000e+01
  %1628 = fcmp ult float %1627, 0xC1E0000000000000
  %1629 = fcmp ugt float %1627, 0x41DFFFFFE0000000
  %1630 = fcmp ogt float %1627, 0xC1E0000000000000
  %1631 = select i1 %1630, float %1627, float 0xC1E0000000000000
  %1632 = fptosi float %1631 to i32
  %1633 = select i1 %1628, i32 0, i32 2147483647
  %1634 = select i1 %1629, i32 %1633, i32 %1632
  %1635 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1626, i64 0, i32 9
  %1636 = bitcast [20 x i8]* %1635 to i160*
  %1637 = load i160, i160* %1636, align 8
  %1638 = lshr i160 %1637, 115
  %1639 = trunc i160 %1638 to i8
  %1640 = and i8 %1639, 1
  %1641 = bitcast %"class.blink::LayoutObject"* %1212 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %1642 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %1641, align 8
  %1643 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %1642, i64 111
  %1644 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %1643, align 8
  %1645 = call float %1644(%"class.blink::LayoutText"* %1220, i32 %1545, i32 %1594, %"class.blink::Font"* dereferenceable(88) %79, i32 %1634, i8 zeroext %1640, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #9
  br label %1662

1646:                                             ; preds = %1613
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %395) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %396, align 8
  store float 0xFFFFFFFFE0000000, float* %397, align 4
  store i16 -21846, i16* %398, align 8
  store i8 -86, i8* %399, align 2
  store i8 -86, i8* %400, align 1
  store float 0xFFFFFFFFE0000000, float* %401, align 4
  store i64 -6148914691236517206, i64* %403, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %5, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %1212, i32 %1545, i32 %1594, %"class.blink::ComputedStyle"* dereferenceable(104) %1615) #9
  %1647 = bitcast %"class.blink::ComputedStyle"** %1614 to %"class.blink::ComputedStyleBase"**
  %1648 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %1647, align 8
  %1649 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %1648, i64 0, i32 1, i32 0, i32 0
  %1650 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %1649, align 8
  %1651 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %1650, i64 0, i32 15
  %1652 = bitcast %"struct.blink::TabSize"* %1651 to i64*
  %1653 = load i64, i64* %1652, align 4
  %1654 = load i16, i16* %398, align 8
  %1655 = shl nuw nsw i8 %1598, 3
  %1656 = xor i8 %1655, 8
  %1657 = zext i8 %1656 to i16
  %1658 = and i16 %1654, -9
  %1659 = or i16 %1658, %1657
  store i16 %1659, i16* %398, align 8
  %1660 = trunc i64 %1653 to i40
  store i40 %1660, i40* %405, align 4
  store float %1597, float* %396, align 8
  %1661 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %5, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %395) #9
  br label %1662

1662:                                             ; preds = %1646, %1625
  %1663 = phi float [ %1645, %1625 ], [ %1661, %1646 ]
  %1664 = load float, float* %309, align 4
  %1665 = load float, float* %90, align 8
  %1666 = fadd float %1664, %1665
  %1667 = fadd float %1663, %1666
  %1668 = fmul float %1667, 6.400000e+01
  %1669 = call float @llvm.floor.f32(float %1668) #9
  %1670 = fcmp ult float %1669, 0xC1E0000000000000
  %1671 = fcmp ugt float %1669, 0x41DFFFFFE0000000
  %1672 = fcmp ogt float %1669, 0xC1E0000000000000
  %1673 = select i1 %1672, float %1669, float 0xC1E0000000000000
  %1674 = fptosi float %1673 to i32
  %1675 = select i1 %1670, i32 0, i32 2147483647
  %1676 = select i1 %1671, i32 %1675, i32 %1674
  %1677 = load i32, i32* %321, align 4
  %1678 = sitofp i32 %1677 to float
  %1679 = fmul float %1678, 1.562500e-02
  %1680 = fadd float %1679, 1.562500e-02
  %1681 = sitofp i32 %1676 to float
  %1682 = fmul float %1681, 1.562500e-02
  %1683 = fcmp ugt float %1682, %1680
  br i1 %1683, label %1684, label %1689

1684:                                             ; preds = %1662
  %1685 = fcmp une float %1664, 0.000000e+00
  br i1 %1685, label %1794, label %1686

1686:                                             ; preds = %1684
  %1687 = load i8, i8* %294, align 1, !range !2
  %1688 = icmp eq i8 %1687, 0
  br i1 %1688, label %1689, label %1794

1689:                                             ; preds = %1686, %1662
  store i32 %1590, i32* %1215, align 8
  store float %1663, float* %1208, align 8
  %1690 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %1691 = load i32, i32* %322, align 8
  store i32 %1590, i32* %36, align 4
  %1692 = icmp eq %"class.blink::LayoutObject"* %1690, null
  br i1 %1692, label %1727, label %1693

1693:                                             ; preds = %1689
  %1694 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1690, i64 0, i32 4
  %1695 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1694 to i96*
  %1696 = load i96, i96* %1695, align 4
  %1697 = and i96 %1696, 33554432
  %1698 = icmp eq i96 %1697, 0
  br i1 %1698, label %1727, label %1699

1699:                                             ; preds = %1693
  %1700 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1690, i64 1, i32 4, i32 0, i64 4
  %1701 = bitcast i8* %1700 to %"class.WTF::StringImpl"**
  %1702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1701, align 8
  %1703 = icmp eq %"class.WTF::StringImpl"* %1702, null
  br i1 %1703, label %1727, label %1704

1704:                                             ; preds = %1699
  %1705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1702, i64 0, i32 1
  %1706 = load i32, i32* %1705, align 4
  %1707 = icmp ugt i32 %1706, %1590
  br i1 %1707, label %1708, label %1727

1708:                                             ; preds = %1704
  %1709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1710 = load atomic i32, i32* %1709 monotonic, align 4
  %1711 = and i32 %1710, 1
  %1712 = icmp eq i32 %1711, 0
  %1713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1702, i64 1
  br i1 %1712, label %1720, label %1714

1714:                                             ; preds = %1708
  %1715 = bitcast %"class.WTF::StringImpl"* %1713 to i8*
  %1716 = zext i32 %1590 to i64
  %1717 = getelementptr inbounds i8, i8* %1715, i64 %1716
  %1718 = load i8, i8* %1717, align 1
  %1719 = zext i8 %1718 to i16
  br label %1725

1720:                                             ; preds = %1708
  %1721 = bitcast %"class.WTF::StringImpl"* %1713 to i16*
  %1722 = zext i32 %1590 to i64
  %1723 = getelementptr inbounds i16, i16* %1721, i64 %1722
  %1724 = load i16, i16* %1723, align 2
  br label %1725

1725:                                             ; preds = %1720, %1714
  %1726 = phi i16 [ %1719, %1714 ], [ %1724, %1720 ]
  switch i16 %1726, label %1727 [
    i16 32, label %1733
    i16 9, label %1733
  ]

1727:                                             ; preds = %1725, %1704, %1699, %1693, %1689
  %1728 = phi i16 [ %1726, %1725 ], [ 0, %1693 ], [ 0, %1689 ], [ 0, %1704 ], [ 0, %1699 ]
  %1729 = load i8, i8* %292, align 8, !range !2
  %1730 = icmp eq i8 %1729, 0
  %1731 = icmp eq i16 %1728, 10
  %1732 = and i1 %1731, %1730
  br label %1733

1733:                                             ; preds = %1727, %1725, %1725
  %1734 = phi i16 [ %1726, %1725 ], [ %1728, %1727 ], [ %1726, %1725 ]
  %1735 = phi i1 [ true, %1725 ], [ %1732, %1727 ], [ true, %1725 ]
  %1736 = zext i1 %1735 to i8
  store i8 %1736, i8* %288, align 1
  %1737 = icmp eq i16 %1734, 12288
  %1738 = or i1 %1737, %1735
  %1739 = zext i1 %1738 to i8
  store i8 %1739, i8* %290, align 4
  store %"class.blink::LayoutObject"* %1690, %"class.blink::LayoutObject"** %378, align 8
  store i32 %1590, i32* %379, align 4
  store i32 %1691, i32* %380, align 8
  br label %1794

1740:                                             ; preds = %1539
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %392) #9
  store float 0.000000e+00, float* %393, align 4
  store float 0.000000e+00, float* %394, align 4
  %1741 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %7, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %8, float 0.000000e+00, i32 0, i32 %1542) #9
  %1742 = extractvalue { <2 x float>, <2 x float> } %1741, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392) #9
  %1743 = extractelement <2 x float> %1742, i32 0
  store i32 %1541, i32* %1215, align 8
  store float %1743, float* %1208, align 8
  %1744 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %1745 = load i32, i32* %322, align 8
  store i32 %1541, i32* %36, align 4
  %1746 = icmp eq %"class.blink::LayoutObject"* %1744, null
  br i1 %1746, label %1781, label %1747

1747:                                             ; preds = %1740
  %1748 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1744, i64 0, i32 4
  %1749 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1748 to i96*
  %1750 = load i96, i96* %1749, align 4
  %1751 = and i96 %1750, 33554432
  %1752 = icmp eq i96 %1751, 0
  br i1 %1752, label %1781, label %1753

1753:                                             ; preds = %1747
  %1754 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1744, i64 1, i32 4, i32 0, i64 4
  %1755 = bitcast i8* %1754 to %"class.WTF::StringImpl"**
  %1756 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1755, align 8
  %1757 = icmp eq %"class.WTF::StringImpl"* %1756, null
  br i1 %1757, label %1781, label %1758

1758:                                             ; preds = %1753
  %1759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1756, i64 0, i32 1
  %1760 = load i32, i32* %1759, align 4
  %1761 = icmp ugt i32 %1760, %1541
  br i1 %1761, label %1762, label %1781

1762:                                             ; preds = %1758
  %1763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1756, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1764 = load atomic i32, i32* %1763 monotonic, align 4
  %1765 = and i32 %1764, 1
  %1766 = icmp eq i32 %1765, 0
  %1767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1756, i64 1
  br i1 %1766, label %1774, label %1768

1768:                                             ; preds = %1762
  %1769 = bitcast %"class.WTF::StringImpl"* %1767 to i8*
  %1770 = zext i32 %1541 to i64
  %1771 = getelementptr inbounds i8, i8* %1769, i64 %1770
  %1772 = load i8, i8* %1771, align 1
  %1773 = zext i8 %1772 to i16
  br label %1779

1774:                                             ; preds = %1762
  %1775 = bitcast %"class.WTF::StringImpl"* %1767 to i16*
  %1776 = zext i32 %1541 to i64
  %1777 = getelementptr inbounds i16, i16* %1775, i64 %1776
  %1778 = load i16, i16* %1777, align 2
  br label %1779

1779:                                             ; preds = %1774, %1768
  %1780 = phi i16 [ %1773, %1768 ], [ %1778, %1774 ]
  switch i16 %1780, label %1781 [
    i16 32, label %1787
    i16 9, label %1787
  ]

1781:                                             ; preds = %1779, %1758, %1753, %1747, %1740
  %1782 = phi i16 [ %1780, %1779 ], [ 0, %1747 ], [ 0, %1740 ], [ 0, %1758 ], [ 0, %1753 ]
  %1783 = load i8, i8* %292, align 8, !range !2
  %1784 = icmp eq i8 %1783, 0
  %1785 = icmp eq i16 %1782, 10
  %1786 = and i1 %1785, %1784
  br label %1787

1787:                                             ; preds = %1781, %1779, %1779
  %1788 = phi i16 [ %1780, %1779 ], [ %1782, %1781 ], [ %1780, %1779 ]
  %1789 = phi i1 [ true, %1779 ], [ %1786, %1781 ], [ true, %1779 ]
  %1790 = zext i1 %1789 to i8
  store i8 %1790, i8* %288, align 1
  %1791 = icmp eq i16 %1788, 12288
  %1792 = or i1 %1791, %1789
  %1793 = zext i1 %1792 to i8
  store i8 %1793, i8* %290, align 4
  store %"class.blink::LayoutObject"* %1744, %"class.blink::LayoutObject"** %378, align 8
  store i32 %1541, i32* %379, align 4
  store i32 %1745, i32* %380, align 8
  br label %1794

1794:                                             ; preds = %1787, %1733, %1686, %1684, %1589
  %1795 = phi i1 [ true, %1787 ], [ false, %1589 ], [ true, %1733 ], [ false, %1686 ], [ false, %1684 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %381) #9
  br label %1796

1796:                                             ; preds = %1794, %1508, %1461, %1459, %1364
  %1797 = phi i1 [ %1795, %1794 ], [ false, %1364 ], [ true, %1508 ], [ false, %1461 ], [ false, %1459 ]
  %1798 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %359, align 8
  %1799 = icmp eq %"class.icu_69::BreakIterator"* %1798, null
  br i1 %1799, label %1801, label %1800

1800:                                             ; preds = %1796
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %1798) #9
  br label %1801

1801:                                             ; preds = %1800, %1796
  %1802 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %1803 = icmp eq %"class.WTF::StringImpl"* %1802, null
  br i1 %1803, label %1817, label %1804

1804:                                             ; preds = %1801
  %1805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1802, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1806 = load atomic i32, i32* %1805 monotonic, align 4
  %1807 = and i32 %1806, 2
  %1808 = icmp eq i32 %1807, 0
  %1809 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1802, i64 0, i32 0
  %1810 = load i32, i32* %1809, align 4
  br i1 %1808, label %1811, label %1813

1811:                                             ; preds = %1804
  %1812 = add i32 %1810, -1
  store i32 %1812, i32* %1809, align 4
  br label %1813

1813:                                             ; preds = %1811, %1804
  %1814 = phi i32 [ %1812, %1811 ], [ %1810, %1804 ]
  %1815 = icmp eq i32 %1814, 0
  br i1 %1815, label %1816, label %1817

1816:                                             ; preds = %1813
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1802) #9
  br label %1817

1817:                                             ; preds = %1816, %1813, %1801
  %1818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %1819 = icmp eq %"class.WTF::StringImpl"* %1818, null
  br i1 %1819, label %1833, label %1820

1820:                                             ; preds = %1817
  %1821 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1822 = load atomic i32, i32* %1821 monotonic, align 4
  %1823 = and i32 %1822, 2
  %1824 = icmp eq i32 %1823, 0
  %1825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1818, i64 0, i32 0
  %1826 = load i32, i32* %1825, align 4
  br i1 %1824, label %1827, label %1829

1827:                                             ; preds = %1820
  %1828 = add i32 %1826, -1
  store i32 %1828, i32* %1825, align 4
  br label %1829

1829:                                             ; preds = %1827, %1820
  %1830 = phi i32 [ %1828, %1827 ], [ %1826, %1820 ]
  %1831 = icmp eq i32 %1830, 0
  br i1 %1831, label %1832, label %1833

1832:                                             ; preds = %1829
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1818) #9
  br label %1833

1833:                                             ; preds = %1817, %1829, %1832
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %356) #9
  br i1 %1797, label %1834, label %1837

1834:                                             ; preds = %1833
  %1835 = load float, float* %1208, align 8
  %1836 = fadd float %875, %1835
  store float %1836, float* %34, align 4
  br label %1837

1837:                                             ; preds = %1207, %1834, %1833
  %1838 = phi i8 [ 1, %1834 ], [ 0, %1833 ], [ 0, %1207 ]
  %1839 = load float, float* %1208, align 8
  %1840 = load float, float* %90, align 8
  %1841 = fadd float %1839, %1840
  store float %1841, float* %90, align 8
  br label %1842

1842:                                             ; preds = %902, %1206, %1837
  %1843 = phi i8 [ 0, %902 ], [ %1838, %1837 ], [ 0, %1206 ]
  %1844 = load float, float* %309, align 4
  %1845 = fcmp une float %1844, 0.000000e+00
  br i1 %1845, label %1883, label %1846

1846:                                             ; preds = %1842
  %1847 = load i8, i8* %48, align 2, !range !2
  %1848 = icmp eq i8 %1847, 0
  br i1 %1848, label %1883, label %1849

1849:                                             ; preds = %1846
  %1850 = load float, float* %90, align 8
  %1851 = fadd float %1844, %1850
  %1852 = fmul float %1851, 6.400000e+01
  %1853 = call float @llvm.floor.f32(float %1852) #9
  %1854 = fcmp ult float %1853, 0xC1E0000000000000
  %1855 = fcmp ugt float %1853, 0x41DFFFFFE0000000
  %1856 = fcmp ogt float %1853, 0xC1E0000000000000
  %1857 = select i1 %1856, float %1853, float 0xC1E0000000000000
  %1858 = fptosi float %1857 to i32
  %1859 = select i1 %1854, i32 0, i32 2147483647
  %1860 = select i1 %1855, i32 %1859, i32 %1858
  %1861 = load i32, i32* %321, align 4
  %1862 = sitofp i32 %1861 to float
  %1863 = fmul float %1862, 1.562500e-02
  %1864 = fadd float %1863, 1.562500e-02
  %1865 = sitofp i32 %1860 to float
  %1866 = fmul float %1865, 1.562500e-02
  %1867 = fcmp ole float %1866, %1864
  %1868 = fcmp une float %436, 0.000000e+00
  %1869 = or i1 %1868, %1867
  br i1 %1869, label %1883, label %1870

1870:                                             ; preds = %1849
  %1871 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %1872 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1871, i64 0, i32 0
  %1873 = load i8, i8* %1872, align 4, !range !2
  %1874 = icmp ne i8 %1873, 0
  call void @_ZN5blink9LineWidth14FitBelowFloatsEb(%"class.blink::LineWidth"* %89, i1 zeroext %1874) #9
  %1875 = and i8 %1843, 1
  %1876 = icmp eq i8 %1875, 0
  br i1 %1876, label %1883, label %1877

1877:                                             ; preds = %1870
  %1878 = load i32, i32* %321, align 4
  %1879 = sitofp i32 %1878 to float
  %1880 = fmul float %1879, 1.562500e-02
  %1881 = fcmp une float %1863, %1880
  br i1 %1881, label %1882, label %1883

1882:                                             ; preds = %1877
  br label %1883

1883:                                             ; preds = %1877, %1882, %1870, %1846, %1849, %1842
  %1884 = phi i8 [ %1843, %1842 ], [ %1843, %1849 ], [ %1843, %1846 ], [ 0, %1882 ], [ %1843, %1877 ], [ %1843, %1870 ]
  br i1 %406, label %1885, label %1888

1885:                                             ; preds = %1883
  %1886 = load i8, i8* %288, align 1, !range !2
  %1887 = icmp ne i8 %1886, 0
  br label %1888

1888:                                             ; preds = %1885, %1883
  %1889 = phi i1 [ false, %1883 ], [ %1887, %1885 ]
  %1890 = and i8 %501, 1
  %1891 = icmp ne i8 %1890, 0
  %1892 = and i8 %1884, 1
  %1893 = icmp ne i8 %1892, 0
  %1894 = load i8, i8* %291, align 1, !range !2
  %1895 = icmp ne i8 %1894, 0
  %1896 = load float, float* %34, align 4
  %1897 = call zeroext i1 @_ZN5blink15BreakingContext20CanBreakAtWhitespaceEbRNS_15WordMeasurementEbfRbbRfbbbbfRKNS_14LineLayoutTextERKNS_4FontEbf(%"class.blink::BreakingContext"* %0, i1 zeroext %1891, %"class.blink::WordMeasurement"* dereferenceable(64) %876, i1 zeroext %873, float %776, i8* dereferenceable(1) %2, i1 zeroext %164, float* nonnull dereferenceable(4) %31, i1 zeroext %845, i1 zeroext %1893, i1 zeroext %638, i1 zeroext %1895, float %1896, %"class.blink::LineLayoutText"* nonnull dereferenceable(8) %29, %"class.blink::Font"* dereferenceable(88) %79, i1 zeroext %1889, float %88)
  br i1 %1897, label %2066, label %1898

1898:                                             ; preds = %1888
  br i1 %782, label %1899, label %2017

1899:                                             ; preds = %1898
  %1900 = load i8, i8* %292, align 8, !range !2
  %1901 = icmp eq i8 %1900, 0
  br i1 %1901, label %2017, label %1902

1902:                                             ; preds = %1899
  br i1 %873, label %1924, label %1903

1903:                                             ; preds = %1902
  %1904 = load i32, i32* %36, align 4
  %1905 = icmp eq i32 %1904, 0
  br i1 %1905, label %1926, label %1906

1906:                                             ; preds = %1903
  %1907 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %326, align 8
  %1908 = bitcast %"class.blink::InlineIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1908) #9
  %1909 = load i64, i64* %45, align 8
  %1910 = add i32 %1904, -1
  %1911 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %12, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %1911, align 8
  %1912 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %12, i64 0, i32 1, i32 0
  %1913 = bitcast %"class.blink::LayoutObject"** %1912 to i64*
  store i64 %1909, i64* %1913, align 8
  %1914 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %12, i64 0, i32 2
  store i32 -1, i32* %1914, align 8
  %1915 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %12, i64 0, i32 3
  store i32 %1910, i32* %1915, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %1907, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1908) #9
  %1916 = bitcast %"class.blink::InlineIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1916) #9
  %1917 = load i64, i64* %45, align 8
  %1918 = load i32, i32* %36, align 4
  %1919 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %13, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %1919, align 8
  %1920 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %13, i64 0, i32 1, i32 0
  %1921 = bitcast %"class.blink::LayoutObject"** %1920 to i64*
  store i64 %1917, i64* %1921, align 8
  %1922 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %13, i64 0, i32 2
  store i32 -1, i32* %1922, align 8
  %1923 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %13, i64 0, i32 3
  store i32 %1918, i32* %1923, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %1907, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1916) #9
  br label %1924

1924:                                             ; preds = %1902, %1906
  %1925 = load i32, i32* %36, align 4
  br label %1926

1926:                                             ; preds = %1924, %1903
  %1927 = phi i32 [ %1925, %1924 ], [ 0, %1903 ]
  %1928 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %1929 = load i32, i32* %322, align 8
  store %"class.blink::LayoutObject"* %1928, %"class.blink::LayoutObject"** %378, align 8
  store i32 %1927, i32* %379, align 4
  store i32 %1929, i32* %380, align 8
  %1930 = icmp eq %"class.blink::LayoutObject"* %1928, null
  br i1 %1930, label %2014, label %1931

1931:                                             ; preds = %1926
  %1932 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1928, i64 0, i32 4
  %1933 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1932 to i96*
  %1934 = load i96, i96* %1933, align 4
  %1935 = and i96 %1934, 33554432
  %1936 = icmp eq i96 %1935, 0
  br i1 %1936, label %1951, label %1937

1937:                                             ; preds = %1931
  %1938 = icmp ult i32 %1927, 2147483647
  br i1 %1938, label %1939, label %1941

1939:                                             ; preds = %1937
  %1940 = add nuw nsw i32 %1927, 1
  store i32 %1940, i32* %379, align 4
  br label %1941

1941:                                             ; preds = %1939, %1937
  %1942 = phi i32 [ %1927, %1937 ], [ %1940, %1939 ]
  %1943 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1928, i64 1, i32 4, i32 0, i64 4
  %1944 = bitcast i8* %1943 to %"class.WTF::StringImpl"**
  %1945 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1944, align 8
  %1946 = icmp eq %"class.WTF::StringImpl"* %1945, null
  br i1 %1946, label %1951, label %1947

1947:                                             ; preds = %1941
  %1948 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1945, i64 0, i32 1
  %1949 = load i32, i32* %1948, align 4
  %1950 = icmp ult i32 %1942, %1949
  br i1 %1950, label %2014, label %1951

1951:                                             ; preds = %1931, %1941, %1947
  %1952 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 0, i32 0
  %1953 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1952, align 8
  br label %1954

1954:                                             ; preds = %2006, %1951
  %1955 = phi %"class.blink::LayoutObject"* [ %1928, %1951 ], [ %1989, %2006 ]
  %1956 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1955, i64 0, i32 4
  %1957 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1956 to i96*
  %1958 = load i96, i96* %1957, align 4
  %1959 = and i96 %1958, 113336795588871485128704
  %1960 = icmp eq i96 %1959, 75557863725914323419136
  %1961 = and i96 %1958, 1115684864
  %1962 = icmp ne i96 %1961, 0
  %1963 = or i1 %1962, %1960
  br i1 %1963, label %1975, label %1964

1964:                                             ; preds = %1954
  %1965 = bitcast %"class.blink::LayoutObject"* %1955 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %1966 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %1965, align 8
  %1967 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %1966, i64 13
  %1968 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %1967, align 8
  %1969 = call %"class.blink::LayoutObjectChildList"* %1968(%"class.blink::LayoutObject"* nonnull %1955) #9
  %1970 = icmp eq %"class.blink::LayoutObjectChildList"* %1969, null
  br i1 %1970, label %1975, label %1971

1971:                                             ; preds = %1964
  %1972 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %1969, i64 0, i32 0
  %1973 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1972, align 8
  %1974 = icmp eq %"class.blink::LayoutObject"* %1973, null
  br i1 %1974, label %1975, label %1988

1975:                                             ; preds = %1971, %1964, %1954
  %1976 = icmp eq %"class.blink::LayoutObject"* %1955, %1953
  br i1 %1976, label %2011, label %1977

1977:                                             ; preds = %1975, %1982
  %1978 = phi %"class.blink::LayoutObject"* [ %1984, %1982 ], [ %1955, %1975 ]
  %1979 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1978, i64 0, i32 9
  %1980 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1979, align 8
  %1981 = icmp eq %"class.blink::LayoutObject"* %1980, null
  br i1 %1981, label %1982, label %1988

1982:                                             ; preds = %1977
  %1983 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1978, i64 0, i32 7
  %1984 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1983, align 8
  %1985 = icmp ne %"class.blink::LayoutObject"* %1984, null
  %1986 = icmp ne %"class.blink::LayoutObject"* %1984, %1953
  %1987 = and i1 %1985, %1986
  br i1 %1987, label %1977, label %2011

1988:                                             ; preds = %1977, %1971
  %1989 = phi %"class.blink::LayoutObject"* [ %1973, %1971 ], [ %1980, %1977 ]
  %1990 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1989, i64 0, i32 4
  %1991 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1990 to i96*
  %1992 = load i96, i96* %1991, align 4
  %1993 = and i96 %1992, 113336795588871485128704
  %1994 = icmp eq i96 %1993, 75557863725914323419136
  %1995 = and i96 %1992, 1115684864
  %1996 = icmp ne i96 %1995, 0
  %1997 = or i1 %1996, %1994
  br i1 %1997, label %2009, label %1998

1998:                                             ; preds = %1988
  %1999 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %1989) #9
  br i1 %1999, label %2000, label %2006

2000:                                             ; preds = %1998
  %2001 = bitcast %"class.blink::LayoutObject"* %1989 to i1 (%"class.blink::LayoutObject"*)***
  %2002 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %2001, align 8
  %2003 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %2002, i64 26
  %2004 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %2003, align 8
  %2005 = call zeroext i1 %2004(%"class.blink::LayoutObject"* nonnull %1989) #9
  br i1 %2005, label %2007, label %2006

2006:                                             ; preds = %2000, %1998
  br label %1954

2007:                                             ; preds = %2000
  %2008 = ptrtoint %"class.blink::LayoutObject"* %1989 to i64
  br label %2011

2009:                                             ; preds = %1988
  %2010 = ptrtoint %"class.blink::LayoutObject"* %1989 to i64
  br label %2011

2011:                                             ; preds = %1975, %1982, %2007, %2009
  %2012 = phi i64 [ %2008, %2007 ], [ %2010, %2009 ], [ 0, %1982 ], [ 0, %1975 ]
  %2013 = inttoptr i64 %2012 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %2013, %"class.blink::LayoutObject"** %378, align 8
  store i32 0, i32* %379, align 4
  store i32 -1, i32* %380, align 8
  br label %2014

2014:                                             ; preds = %1926, %1947, %2011
  %2015 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %2016 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2015, i64 0, i32 3
  br label %2063

2017:                                             ; preds = %1899, %1898
  %2018 = load i8, i8* %48, align 2, !range !2
  %2019 = icmp eq i8 %2018, 0
  %2020 = or i1 %2019, %846
  br i1 %2020, label %2026, label %2021

2021:                                             ; preds = %2017
  call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %89) #9
  %2022 = load i64, i64* %45, align 8
  %2023 = load i32, i32* %36, align 4
  %2024 = load i32, i32* %322, align 8
  store i64 %2022, i64* %407, align 8
  store i32 %2023, i32* %379, align 4
  store i32 %2024, i32* %380, align 8
  store i8 %295, i8* %294, align 1
  %2025 = load float, float* %34, align 4
  br label %2026

2026:                                             ; preds = %2017, %2021
  %2027 = phi float [ %777, %2017 ], [ 0.000000e+00, %2021 ]
  %2028 = phi i8 [ %500, %2017 ], [ %296, %2021 ]
  %2029 = phi float [ %436, %2017 ], [ %2025, %2021 ]
  %2030 = phi i8 [ %501, %2017 ], [ 0, %2021 ]
  br i1 %845, label %2031, label %2041

2031:                                             ; preds = %2026
  %2032 = select i1 %1889, float %88, float 0.000000e+00
  br i1 %1889, label %2033, label %2038

2033:                                             ; preds = %2031
  %2034 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %876, i64 0, i32 1
  %2035 = load float, float* %2034, align 8
  %2036 = fcmp une float %2035, 0.000000e+00
  br i1 %2036, label %2037, label %2038

2037:                                             ; preds = %2033
  br label %2038

2038:                                             ; preds = %2031, %2033, %2037
  %2039 = phi float [ %88, %2037 ], [ 0.000000e+00, %2033 ], [ 0.000000e+00, %2031 ]
  %2040 = load i32, i32* %36, align 4
  br label %2041

2041:                                             ; preds = %2038, %2026
  %2042 = phi i32 [ %2040, %2038 ], [ %872, %2026 ]
  %2043 = phi float [ %2039, %2038 ], [ %874, %2026 ]
  %2044 = phi float [ %2032, %2038 ], [ %875, %2026 ]
  %2045 = load i8, i8* %325, align 2, !range !2
  %2046 = icmp eq i8 %2045, 0
  br i1 %2046, label %2047, label %2068

2047:                                             ; preds = %2041
  %2048 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %2049 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2048, i64 0, i32 0, i32 9
  %2050 = bitcast [20 x i8]* %2049 to i160*
  %2051 = load i160, i160* %2050, align 8
  %2052 = and i160 %2051, 286720
  %2053 = icmp eq i160 %2052, 0
  br i1 %2053, label %2054, label %2068

2054:                                             ; preds = %2047
  %2055 = load i8, i8* %288, align 1, !range !2
  %2056 = icmp eq i8 %2055, 0
  br i1 %2056, label %2068, label %2057

2057:                                             ; preds = %2054
  %2058 = load i8, i8* %289, align 2, !range !2
  %2059 = icmp eq i8 %2058, 0
  br i1 %2059, label %2068, label %2060

2060:                                             ; preds = %2057
  store i8 1, i8* %325, align 2
  %2061 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %326, align 8
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %2061, %"class.blink::InlineIterator"* dereferenceable(24) %408) #9
  %2062 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %326, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %410) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %410, i8 0, i64 16, i1 false) #9
  store i32 -1, i32* %411, align 8
  store i32 0, i32* %412, align 4
  call void @_ZN5blink15TrailingObjects33UpdateMidpointsForTrailingObjectsERNS_13MidpointStateINS_14InlineIteratorEEERKS2_NS0_23CollapseFirstSpaceOrNotE(%"class.blink::TrailingObjects"* %409, %"class.blink::MidpointState"* dereferenceable(32) %2062, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %35, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %410) #9
  br label %2068

2063:                                             ; preds = %1195, %2014
  %2064 = phi i8* [ %2016, %2014 ], [ %1205, %1195 ]
  %2065 = phi i1 [ true, %2014 ], [ false, %1195 ]
  store i8 1, i8* %2064, align 1
  br label %2066

2066:                                             ; preds = %1888, %2063
  %2067 = phi i1 [ %2065, %2063 ], [ false, %1888 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %333) #9
  br label %3477

2068:                                             ; preds = %2047, %2060, %2041, %2054, %2057
  %2069 = load i8, i8* %291, align 1, !range !2
  %2070 = icmp ne i8 %2069, 0
  call void @_ZN5blink15BreakingContext23PrepareForNextCharacterERKNS_14LineLayoutTextERbb(%"class.blink::BreakingContext"* %0, %"class.blink::LineLayoutText"* nonnull dereferenceable(8) %29, i8* nonnull dereferenceable(1) %30, i1 zeroext %2070)
  store i8 0, i8* %293, align 1
  %2071 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %69, align 8
  %2072 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2071, i64 0, i32 2
  %2073 = load i8, i8* %2072, align 2, !range !2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %333) #9
  br label %2074

2074:                                             ; preds = %864, %857, %2068
  %2075 = phi float [ %2044, %2068 ], [ 0.000000e+00, %864 ], [ %860, %857 ]
  %2076 = phi float [ %2043, %2068 ], [ %439, %864 ], [ %859, %857 ]
  %2077 = phi i8 [ %2030, %2068 ], [ %501, %864 ], [ %501, %857 ]
  %2078 = phi i8 [ %1884, %2068 ], [ %780, %864 ], [ %780, %857 ]
  %2079 = phi float [ %2029, %2068 ], [ %436, %864 ], [ %436, %857 ]
  %2080 = phi i8 [ %2028, %2068 ], [ %500, %864 ], [ %500, %857 ]
  %2081 = phi i8 [ %2073, %2068 ], [ %434, %864 ], [ %434, %857 ]
  %2082 = phi i32 [ %2042, %2068 ], [ %433, %864 ], [ %858, %857 ]
  %2083 = phi float [ %2027, %2068 ], [ %777, %864 ], [ %777, %857 ]
  %2084 = load i32, i32* %36, align 4
  %2085 = icmp ult i32 %2084, 2147483647
  br i1 %2085, label %2086, label %2088

2086:                                             ; preds = %2074
  %2087 = add nuw nsw i32 %2084, 1
  store i32 %2087, i32* %36, align 4
  br label %2088

2088:                                             ; preds = %2074, %2086
  %2089 = phi i32 [ %2084, %2074 ], [ %2087, %2086 ]
  %2090 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %186, align 8
  %2091 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %2090, i64 0, i32 7, i32 0, i32 0
  %2092 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2091, align 8
  %2093 = icmp eq %"class.WTF::StringImpl"* %2092, null
  br i1 %2093, label %2094, label %423

2094:                                             ; preds = %423, %2088, %287
  %2095 = phi i16 [ %280, %287 ], [ %487, %2088 ], [ %487, %423 ]
  %2096 = phi i16 [ %282, %287 ], [ %432, %2088 ], [ %432, %423 ]
  %2097 = phi i32 [ %80, %287 ], [ %2082, %2088 ], [ %2082, %423 ]
  %2098 = phi i8 [ %168, %287 ], [ %2081, %2088 ], [ %2081, %423 ]
  %2099 = phi i8 [ %185, %287 ], [ %2080, %2088 ], [ %2080, %423 ]
  %2100 = phi float [ 0.000000e+00, %287 ], [ %2076, %2088 ], [ %2076, %423 ]
  %2101 = phi float [ 0.000000e+00, %287 ], [ %2075, %2088 ], [ %2075, %423 ]
  %2102 = load %"struct.blink::LayoutTextInfo"*, %"struct.blink::LayoutTextInfo"** %200, align 8
  br label %2103

2103:                                             ; preds = %2094, %276
  %2104 = phi %"struct.blink::LayoutTextInfo"* [ %278, %276 ], [ %2102, %2094 ]
  %2105 = phi i16 [ %280, %276 ], [ %2095, %2094 ]
  %2106 = phi i16 [ %282, %276 ], [ %2096, %2094 ]
  %2107 = phi i32 [ %80, %276 ], [ %2097, %2094 ]
  %2108 = phi i8 [ %168, %276 ], [ %2098, %2094 ]
  %2109 = phi i8 [ %185, %276 ], [ %2099, %2094 ]
  %2110 = phi float [ 0.000000e+00, %276 ], [ %2100, %2094 ]
  %2111 = phi float [ 0.000000e+00, %276 ], [ %2101, %2094 ]
  %2112 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %2104, i64 0, i32 1, i32 3, i64 0
  store i16 %2106, i16* %2112, align 8
  %2113 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %2104, i64 0, i32 1, i32 3, i64 1
  store i16 %2105, i16* %2113, align 2
  %2114 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 2
  %2115 = load i32, i32* %2114, align 4
  %2116 = add i32 %2115, 1
  %2117 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 1
  %2118 = load i32, i32* %2117, align 8
  %2119 = icmp ult i32 %2118, %2116
  br i1 %2119, label %2125, label %2120

2120:                                             ; preds = %2103
  %2121 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 0
  %2122 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %2121, align 8
  %2123 = zext i32 %2116 to i64
  %2124 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2122, i64 %2123
  br label %2132

2125:                                             ; preds = %2103
  call void @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1795"* %1, i32 %2116) #9
  %2126 = load i32, i32* %2114, align 4
  %2127 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 0
  %2128 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %2127, align 8
  %2129 = zext i32 %2116 to i64
  %2130 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2128, i64 %2129
  %2131 = icmp eq i32 %2126, %2116
  br i1 %2131, label %2212, label %2132

2132:                                             ; preds = %2120, %2125
  %2133 = phi %"class.blink::WordMeasurement"* [ %2124, %2120 ], [ %2130, %2125 ]
  %2134 = phi %"class.blink::WordMeasurement"* [ %2122, %2120 ], [ %2128, %2125 ]
  %2135 = phi i32 [ %2115, %2120 ], [ %2126, %2125 ]
  %2136 = ptrtoint %"class.blink::WordMeasurement"* %2134 to i64
  %2137 = zext i32 %2135 to i64
  %2138 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2134, i64 %2137
  %2139 = xor i64 %2137, -1
  %2140 = getelementptr %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2133, i64 %2139, i32 0, i32 0, i32 0
  %2141 = ptrtoint %"class.blink::LayoutObject"** %2140 to i64
  %2142 = sub i64 %2141, %2136
  %2143 = lshr i64 %2142, 6
  %2144 = add nuw nsw i64 %2143, 1
  %2145 = and i64 %2144, 7
  %2146 = icmp eq i64 %2145, 0
  br i1 %2146, label %2158, label %2147

2147:                                             ; preds = %2132, %2147
  %2148 = phi %"class.blink::WordMeasurement"* [ %2155, %2147 ], [ %2138, %2132 ]
  %2149 = phi i64 [ %2156, %2147 ], [ %2145, %2132 ]
  %2150 = bitcast %"class.blink::WordMeasurement"* %2148 to i8*
  %2151 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2148, i64 0, i32 5
  %2152 = bitcast %"class.WTF::HashSet.1798"* %2151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2152, i8 0, i64 20, i1 false) #9
  %2153 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2148, i64 0, i32 6
  %2154 = bitcast %"class.blink::FloatRect"* %2153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2154, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2150, i8 0, i64 20, i1 false) #9
  %2155 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2148, i64 1
  %2156 = add i64 %2149, -1
  %2157 = icmp eq i64 %2156, 0
  br i1 %2157, label %2158, label %2147, !llvm.loop !11

2158:                                             ; preds = %2147, %2132
  %2159 = phi %"class.blink::WordMeasurement"* [ %2138, %2132 ], [ %2155, %2147 ]
  %2160 = icmp ult i64 %2142, 448
  br i1 %2160, label %2212, label %2161

2161:                                             ; preds = %2158, %2161
  %2162 = phi %"class.blink::WordMeasurement"* [ %2210, %2161 ], [ %2159, %2158 ]
  %2163 = bitcast %"class.blink::WordMeasurement"* %2162 to i8*
  %2164 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 0, i32 5
  %2165 = bitcast %"class.WTF::HashSet.1798"* %2164 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2165, i8 0, i64 20, i1 false) #9
  %2166 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 0, i32 6
  %2167 = bitcast %"class.blink::FloatRect"* %2166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2167, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2163, i8 0, i64 20, i1 false) #9
  %2168 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 1
  %2169 = bitcast %"class.blink::WordMeasurement"* %2168 to i8*
  %2170 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 1, i32 5
  %2171 = bitcast %"class.WTF::HashSet.1798"* %2170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2171, i8 0, i64 20, i1 false) #9
  %2172 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 1, i32 6
  %2173 = bitcast %"class.blink::FloatRect"* %2172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2173, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2169, i8 0, i64 20, i1 false) #9
  %2174 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 2
  %2175 = bitcast %"class.blink::WordMeasurement"* %2174 to i8*
  %2176 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 2, i32 5
  %2177 = bitcast %"class.WTF::HashSet.1798"* %2176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2177, i8 0, i64 20, i1 false) #9
  %2178 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 2, i32 6
  %2179 = bitcast %"class.blink::FloatRect"* %2178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2179, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2175, i8 0, i64 20, i1 false) #9
  %2180 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 3
  %2181 = bitcast %"class.blink::WordMeasurement"* %2180 to i8*
  %2182 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 3, i32 5
  %2183 = bitcast %"class.WTF::HashSet.1798"* %2182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2183, i8 0, i64 20, i1 false) #9
  %2184 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 3, i32 6
  %2185 = bitcast %"class.blink::FloatRect"* %2184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2185, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2181, i8 0, i64 20, i1 false) #9
  %2186 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 4
  %2187 = bitcast %"class.blink::WordMeasurement"* %2186 to i8*
  %2188 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 4, i32 5
  %2189 = bitcast %"class.WTF::HashSet.1798"* %2188 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2189, i8 0, i64 20, i1 false) #9
  %2190 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 4, i32 6
  %2191 = bitcast %"class.blink::FloatRect"* %2190 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2191, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2187, i8 0, i64 20, i1 false) #9
  %2192 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 5
  %2193 = bitcast %"class.blink::WordMeasurement"* %2192 to i8*
  %2194 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 5, i32 5
  %2195 = bitcast %"class.WTF::HashSet.1798"* %2194 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2195, i8 0, i64 20, i1 false) #9
  %2196 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 5, i32 6
  %2197 = bitcast %"class.blink::FloatRect"* %2196 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2197, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2193, i8 0, i64 20, i1 false) #9
  %2198 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 6
  %2199 = bitcast %"class.blink::WordMeasurement"* %2198 to i8*
  %2200 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 6, i32 5
  %2201 = bitcast %"class.WTF::HashSet.1798"* %2200 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2201, i8 0, i64 20, i1 false) #9
  %2202 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 6, i32 6
  %2203 = bitcast %"class.blink::FloatRect"* %2202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2203, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2199, i8 0, i64 20, i1 false) #9
  %2204 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 7
  %2205 = bitcast %"class.blink::WordMeasurement"* %2204 to i8*
  %2206 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 7, i32 5
  %2207 = bitcast %"class.WTF::HashSet.1798"* %2206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2207, i8 0, i64 20, i1 false) #9
  %2208 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 7, i32 6
  %2209 = bitcast %"class.blink::FloatRect"* %2208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2209, i8 0, i64 16, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %2205, i8 0, i64 20, i1 false) #9
  %2210 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2162, i64 8
  %2211 = icmp eq %"class.blink::WordMeasurement"* %2210, %2133
  br i1 %2211, label %2212, label %2161

2212:                                             ; preds = %2158, %2161, %2125
  store i32 %2116, i32* %2114, align 4
  %2213 = call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1795"* %1, i32 %2115) #9
  %2214 = bitcast %"class.blink::WordMeasurement"* %2213 to i64*
  %2215 = load i64, i64* %47, align 8
  store i64 %2215, i64* %2214, align 8
  %2216 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 2
  store i32 %2107, i32* %2216, align 4
  %2217 = load i32, i32* %36, align 4
  %2218 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 3
  store i32 %2217, i32* %2218, align 8
  %2219 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %2220 = load i8, i8* %2219, align 2, !range !2
  %2221 = icmp eq i8 %2220, 0
  br i1 %2221, label %2222, label %2321

2222:                                             ; preds = %2212
  %2223 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %2224 = load i32, i32* %36, align 4
  %2225 = sub i32 %2224, %2107
  %2226 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %2227 = load float, float* %2226, align 4
  %2228 = load float, float* %90, align 8
  %2229 = fadd float %2227, %2228
  %2230 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %2231 = load i8, i8* %2230, align 1, !range !2
  %2232 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 5
  %2233 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 6
  %2234 = icmp eq i32 %2107, 0
  br i1 %2234, label %2235, label %2250

2235:                                             ; preds = %2222
  %2236 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2223, i64 1, i32 4, i32 0, i64 4
  %2237 = bitcast i8* %2236 to %"class.WTF::StringImpl"**
  %2238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2237, align 8
  %2239 = icmp eq %"class.WTF::StringImpl"* %2238, null
  br i1 %2239, label %2243, label %2240

2240:                                             ; preds = %2235
  %2241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2238, i64 0, i32 1
  %2242 = load i32, i32* %2241, align 4
  br label %2243

2243:                                             ; preds = %2240, %2235
  %2244 = phi i32 [ %2242, %2240 ], [ 0, %2235 ]
  %2245 = icmp eq i32 %2244, %2225
  br i1 %2245, label %2246, label %2250

2246:                                             ; preds = %2243
  %2247 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2223, i64 0, i32 5, i32 0
  %2248 = bitcast %"class.blink::ComputedStyle"** %2247 to %"class.blink::ComputedStyleBase"**
  %2249 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %2248, align 8
  br label %2262

2250:                                             ; preds = %2243, %2222
  %2251 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2223, i64 0, i32 5, i32 0
  %2252 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2251, align 8
  %2253 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2252, i64 0, i32 0, i32 1, i32 0, i32 0
  %2254 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %2253, align 8
  %2255 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %2254, i64 0, i32 23
  %2256 = bitcast [5 x i8]* %2255 to i40*
  %2257 = load i40, i40* %2256, align 8
  %2258 = and i40 %2257, 4294967296
  %2259 = icmp eq i40 %2258, 0
  br i1 %2259, label %2284, label %2260

2260:                                             ; preds = %2250
  %2261 = bitcast %"class.blink::ComputedStyle"* %2252 to %"class.blink::ComputedStyleBase"*
  br label %2262

2262:                                             ; preds = %2260, %2246
  %2263 = phi %"class.blink::ComputedStyleBase"* [ %2249, %2246 ], [ %2261, %2260 ]
  %2264 = fmul float %2229, 6.400000e+01
  %2265 = fcmp ult float %2264, 0xC1E0000000000000
  %2266 = fcmp ugt float %2264, 0x41DFFFFFE0000000
  %2267 = fcmp ogt float %2264, 0xC1E0000000000000
  %2268 = select i1 %2267, float %2264, float 0xC1E0000000000000
  %2269 = fptosi float %2268 to i32
  %2270 = select i1 %2265, i32 0, i32 2147483647
  %2271 = select i1 %2266, i32 %2270, i32 %2269
  %2272 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %2263, i64 0, i32 9
  %2273 = bitcast [20 x i8]* %2272 to i160*
  %2274 = load i160, i160* %2273, align 8
  %2275 = lshr i160 %2274, 115
  %2276 = trunc i160 %2275 to i8
  %2277 = and i8 %2276, 1
  %2278 = bitcast %"class.blink::LayoutObject"* %2223 to %"class.blink::LayoutText"*
  %2279 = bitcast %"class.blink::LayoutObject"* %2223 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %2280 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %2279, align 8
  %2281 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %2280, i64 111
  %2282 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %2281, align 8
  %2283 = call float %2282(%"class.blink::LayoutText"* %2278, i32 %2107, i32 %2225, %"class.blink::Font"* dereferenceable(88) %79, i32 %2271, i8 zeroext %2277, %"class.WTF::HashSet.1798"* %2232, %"class.blink::FloatRect"* %2233, float 0.000000e+00) #9
  br label %2311

2284:                                             ; preds = %2250
  %2285 = bitcast %"class.blink::TextRun"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2285) #9
  %2286 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2285, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %2286, align 8
  %2287 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %2287, align 4
  %2288 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 5
  store i16 -21846, i16* %2288, align 8
  %2289 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 6, i64 0
  store i8 -86, i8* %2289, align 2
  %2290 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 6, i64 1
  store i8 -86, i8* %2290, align 1
  %2291 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %2291, align 4
  %2292 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 7, i32 1
  %2293 = bitcast i8* %2292 to i64*
  store i64 -6148914691236517206, i64* %2293, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %20, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %2223, i32 %2107, i32 %2225, %"class.blink::ComputedStyle"* dereferenceable(104) %2252) #9
  %2294 = bitcast %"class.blink::ComputedStyle"** %2251 to %"class.blink::ComputedStyleBase"**
  %2295 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %2294, align 8
  %2296 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %2295, i64 0, i32 1, i32 0, i32 0
  %2297 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %2296, align 8
  %2298 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %2297, i64 0, i32 15
  %2299 = bitcast %"struct.blink::TabSize"* %2298 to i64*
  %2300 = load i64, i64* %2299, align 4
  %2301 = load i16, i16* %2288, align 8
  %2302 = shl nuw nsw i8 %2231, 3
  %2303 = xor i8 %2302, 8
  %2304 = zext i8 %2303 to i16
  %2305 = and i16 %2301, -9
  %2306 = or i16 %2305, %2304
  store i16 %2306, i16* %2288, align 8
  %2307 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %20, i64 0, i32 7
  %2308 = bitcast %"struct.blink::TabSize"* %2307 to i40*
  %2309 = trunc i64 %2300 to i40
  store i40 %2309, i40* %2308, align 4
  store float %2229, float* %2286, align 8
  %2310 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %20, %"class.WTF::HashSet.1798"* %2232, %"class.blink::FloatRect"* %2233) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2285) #9
  br label %2311

2311:                                             ; preds = %2262, %2284
  %2312 = phi float [ %2283, %2262 ], [ %2310, %2284 ]
  %2313 = fadd float %2110, %2312
  %2314 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 1
  store float %2313, float* %2314, align 8
  %2315 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2233, i64 0, i32 0, i32 0
  %2316 = load float, float* %2315, align 4
  %2317 = fadd float %2110, %2316
  store float %2317, float* %2315, align 4
  %2318 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 6, i32 0, i32 1
  %2319 = load float, float* %2318, align 4
  %2320 = fadd float %2319, 0.000000e+00
  store float %2320, float* %2318, align 4
  br label %2321

2321:                                             ; preds = %2212, %2311
  %2322 = phi float [ 0.000000e+00, %2212 ], [ %2312, %2311 ]
  %2323 = fadd float %2111, %2322
  %2324 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %2325 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 23
  %2326 = load i8, i8* %2325, align 4, !range !2
  %2327 = icmp eq i8 %2326, 0
  %2328 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 24
  %2329 = load i8, i8* %2328, align 1, !range !2
  %2330 = icmp ne i8 %2329, 0
  %2331 = call i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"* %2324, i1 zeroext %2327, i1 zeroext %2330, i32 0)
  %2332 = sitofp i32 %2331 to float
  %2333 = fmul float %2332, 1.562500e-02
  %2334 = fadd float %2323, %2333
  %2335 = load float, float* %90, align 8
  %2336 = fadd float %2335, %2334
  store float %2336, float* %90, align 8
  %2337 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %2338 = load i8, i8* %2337, align 1, !range !2
  %2339 = icmp eq i8 %2338, 0
  br i1 %2339, label %2348, label %2340

2340:                                             ; preds = %2321
  %2341 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %2342 = load i8, i8* %2341, align 4, !range !2
  %2343 = icmp ne i8 %2342, 0
  %2344 = fcmp une float %2323, 0.000000e+00
  %2345 = and i1 %2344, %2343
  br i1 %2345, label %2346, label %2348

2346:                                             ; preds = %2340
  %2347 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 4
  store float %2334, float* %2347, align 4
  br label %2348

2348:                                             ; preds = %2321, %2346, %2340
  store i8 0, i8* %2328, align 1
  %2349 = load i8, i8* %2219, align 2, !range !2
  %2350 = icmp eq i8 %2349, 0
  br i1 %2350, label %2351, label %3477

2351:                                             ; preds = %2348
  %2352 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %2353 = load float, float* %2352, align 4
  %2354 = fadd float %2336, %2353
  %2355 = fmul float %2354, 6.400000e+01
  %2356 = call float @llvm.floor.f32(float %2355) #9
  %2357 = fcmp ult float %2356, 0xC1E0000000000000
  %2358 = fcmp ugt float %2356, 0x41DFFFFFE0000000
  %2359 = fcmp ogt float %2356, 0xC1E0000000000000
  %2360 = select i1 %2359, float %2356, float 0xC1E0000000000000
  %2361 = fptosi float %2360 to i32
  %2362 = select i1 %2357, i32 0, i32 2147483647
  %2363 = select i1 %2358, i32 %2362, i32 %2361
  %2364 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %2365 = load i32, i32* %2364, align 4
  %2366 = sitofp i32 %2365 to float
  %2367 = fmul float %2366, 1.562500e-02
  %2368 = fadd float %2367, 1.562500e-02
  %2369 = sitofp i32 %2363 to float
  %2370 = fmul float %2369, 1.562500e-02
  %2371 = fcmp ugt float %2370, %2368
  br i1 %2371, label %2372, label %3477

2372:                                             ; preds = %2351
  %2373 = icmp eq %"class.blink::Hyphenation"* %157, null
  br i1 %2373, label %2658, label %2374

2374:                                             ; preds = %2372
  %2375 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %2376 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2375, align 8
  %2377 = icmp eq %"class.blink::LayoutObject"* %2376, null
  %2378 = and i8 %2108, 1
  %2379 = icmp eq i8 %2378, 0
  %2380 = and i1 %2379, %2377
  br i1 %2380, label %2658, label %2381

2381:                                             ; preds = %2374
  %2382 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 1
  %2383 = load float, float* %2382, align 8
  %2384 = fsub float %2336, %2383
  store float %2384, float* %90, align 8
  %2385 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %2386 = load i32, i32* %2216, align 4
  %2387 = load i32, i32* %2218, align 8
  %2388 = sub i32 %2387, %2386
  %2389 = icmp ult i32 %2388, 3
  br i1 %2389, label %2654, label %2390

2390:                                             ; preds = %2381
  %2391 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 0
  %2392 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %2391, align 8
  %2393 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2392, i64 0, i32 0, i32 3
  %2394 = load i32, i32* %2393, align 4
  %2395 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2392, i64 0, i32 0, i32 1, i32 0
  %2396 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2395, align 8
  %2397 = icmp eq %"class.blink::LayoutObject"* %2396, null
  br i1 %2397, label %2495, label %2398

2398:                                             ; preds = %2390
  %2399 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2396, i64 0, i32 4
  %2400 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2399 to i96*
  %2401 = load i96, i96* %2400, align 4
  %2402 = and i96 %2401, 33554432
  %2403 = icmp eq i96 %2402, 0
  br i1 %2403, label %2469, label %2404

2404:                                             ; preds = %2398
  %2405 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2396, i64 1, i32 4, i32 0, i64 4
  %2406 = bitcast i8* %2405 to %"class.WTF::StringImpl"**
  %2407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2406, align 8
  %2408 = icmp eq %"class.WTF::StringImpl"* %2407, null
  br i1 %2408, label %2469, label %2409

2409:                                             ; preds = %2404
  %2410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2407, i64 0, i32 1
  %2411 = load i32, i32* %2410, align 4
  %2412 = icmp ugt i32 %2411, %2394
  br i1 %2412, label %2413, label %2469

2413:                                             ; preds = %2409
  %2414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2415 = load atomic i32, i32* %2414 monotonic, align 4
  %2416 = and i32 %2415, 1
  %2417 = icmp eq i32 %2416, 0
  %2418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2407, i64 1
  br i1 %2417, label %2425, label %2419

2419:                                             ; preds = %2413
  %2420 = bitcast %"class.WTF::StringImpl"* %2418 to i8*
  %2421 = zext i32 %2394 to i64
  %2422 = getelementptr inbounds i8, i8* %2420, i64 %2421
  %2423 = load i8, i8* %2422, align 1
  %2424 = zext i8 %2423 to i32
  br label %2464

2425:                                             ; preds = %2413
  %2426 = bitcast %"class.WTF::StringImpl"* %2418 to i16*
  %2427 = zext i32 %2394 to i64
  %2428 = getelementptr inbounds i16, i16* %2426, i64 %2427
  %2429 = load i16, i16* %2428, align 2
  %2430 = zext i16 %2429 to i32
  %2431 = and i32 %2430, 63488
  %2432 = icmp eq i32 %2431, 55296
  br i1 %2432, label %2433, label %2464

2433:                                             ; preds = %2425
  %2434 = and i32 %2430, 1024
  %2435 = icmp eq i32 %2434, 0
  br i1 %2435, label %2436, label %2450

2436:                                             ; preds = %2433
  %2437 = add nuw i32 %2394, 1
  %2438 = icmp eq i32 %2437, %2411
  br i1 %2438, label %2464, label %2439

2439:                                             ; preds = %2436
  %2440 = zext i32 %2437 to i64
  %2441 = getelementptr inbounds i16, i16* %2426, i64 %2440
  %2442 = load i16, i16* %2441, align 2
  %2443 = zext i16 %2442 to i32
  %2444 = and i32 %2443, 64512
  %2445 = icmp eq i32 %2444, 56320
  br i1 %2445, label %2446, label %2464

2446:                                             ; preds = %2439
  %2447 = shl nuw nsw i32 %2430, 10
  %2448 = add nsw i32 %2447, -56613888
  %2449 = add nsw i32 %2448, %2443
  br label %2464

2450:                                             ; preds = %2433
  %2451 = icmp eq i32 %2394, 0
  br i1 %2451, label %2464, label %2452

2452:                                             ; preds = %2450
  %2453 = add i32 %2394, -1
  %2454 = zext i32 %2453 to i64
  %2455 = getelementptr inbounds i16, i16* %2426, i64 %2454
  %2456 = load i16, i16* %2455, align 2
  %2457 = zext i16 %2456 to i32
  %2458 = and i32 %2457, 64512
  %2459 = icmp eq i32 %2458, 55296
  br i1 %2459, label %2460, label %2464

2460:                                             ; preds = %2452
  %2461 = shl nuw nsw i32 %2457, 10
  %2462 = add nuw nsw i32 %2430, -56613888
  %2463 = add nsw i32 %2462, %2461
  br label %2464

2464:                                             ; preds = %2460, %2452, %2450, %2446, %2439, %2436, %2425, %2419
  %2465 = phi i32 [ %2424, %2419 ], [ %2430, %2425 ], [ %2449, %2446 ], [ %2430, %2439 ], [ %2430, %2436 ], [ %2463, %2460 ], [ %2430, %2452 ], [ %2430, %2450 ]
  %2466 = icmp eq i32 %2465, 0
  br i1 %2466, label %2469, label %2467

2467:                                             ; preds = %2464
  %2468 = call i32 @u_charDirection_69(i32 %2465) #9
  br label %2495

2469:                                             ; preds = %2464, %2409, %2404, %2398
  %2470 = bitcast %"class.blink::LayoutObject"* %2396 to i1 (%"class.blink::LayoutObject"*, i32)***
  %2471 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %2470, align 8
  %2472 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2471, i64 92
  %2473 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2472, align 8
  %2474 = call zeroext i1 %2473(%"class.blink::LayoutObject"* nonnull %2396, i32 15) #9
  br i1 %2474, label %2485, label %2475

2475:                                             ; preds = %2469
  %2476 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %2470, align 8
  %2477 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2476, i64 92
  %2478 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2477, align 8
  %2479 = call zeroext i1 %2478(%"class.blink::LayoutObject"* nonnull %2396, i32 13) #9
  br i1 %2479, label %2485, label %2480

2480:                                             ; preds = %2475
  %2481 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %2470, align 8
  %2482 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2481, i64 92
  %2483 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %2482, align 8
  %2484 = call zeroext i1 %2483(%"class.blink::LayoutObject"* nonnull %2396, i32 36) #9
  br i1 %2484, label %2485, label %2495

2485:                                             ; preds = %2480, %2475, %2469
  %2486 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2395, align 8
  %2487 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2486, i64 0, i32 5, i32 0
  %2488 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2487, align 8
  %2489 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2488, i64 0, i32 0, i32 9
  %2490 = bitcast [20 x i8]* %2489 to i160*
  %2491 = load i160, i160* %2490, align 8
  %2492 = lshr i160 %2491, 115
  %2493 = trunc i160 %2492 to i32
  %2494 = and i32 %2493, 1
  br label %2495

2495:                                             ; preds = %2485, %2480, %2467, %2390
  %2496 = phi i32 [ %2494, %2485 ], [ %2468, %2467 ], [ 10, %2480 ], [ 10, %2390 ]
  %2497 = icmp eq i32 %2496, 1
  %2498 = icmp eq i32 %2496, 13
  %2499 = or i1 %2497, %2498
  %2500 = zext i1 %2499 to i8
  %2501 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2385, i64 0, i32 5, i32 0
  %2502 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2501, align 8
  %2503 = bitcast %"class.blink::TextRun"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2503) #9
  %2504 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %2502) #9
  %2505 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2504, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %21, %"class.blink::Font"* dereferenceable(88) %79, %"class.WTF::String"* dereferenceable(8) %2505, %"class.blink::ComputedStyle"* dereferenceable(104) %2502, i8 zeroext %2500, i32 0) #9
  %2506 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %21, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2503) #9
  %2507 = load i32, i32* %2364, align 4
  %2508 = sitofp i32 %2507 to float
  %2509 = fmul float %2508, 1.562500e-02
  %2510 = load float, float* %2352, align 4
  %2511 = load float, float* %90, align 8
  %2512 = fadd float %2510, %2511
  %2513 = fsub float %2509, %2512
  %2514 = fsub float %2513, %2506
  %2515 = fsub float %2514, %2111
  %2516 = call i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"* %260) #9
  %2517 = sitofp i32 %2516 to float
  %2518 = fcmp ugt float %2515, %2517
  br i1 %2518, label %2519, label %2654

2519:                                             ; preds = %2495
  %2520 = bitcast %"class.blink::TextRun"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2520) #9
  %2521 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2520, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %2521, align 8
  %2522 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %2522, align 4
  %2523 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 5
  store i16 -21846, i16* %2523, align 8
  %2524 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 0
  store i8 -86, i8* %2524, align 2
  %2525 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 6, i64 1
  store i8 -86, i8* %2525, align 1
  %2526 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %2526, align 4
  %2527 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7, i32 1
  %2528 = bitcast i8* %2527 to i64*
  store i64 -6148914691236517206, i64* %2528, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %22, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %2385, i32 %2386, i32 %2388, %"class.blink::ComputedStyle"* dereferenceable(104) %74) #9
  %2529 = load i8, i8* %2337, align 1, !range !2
  %2530 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %2531 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %2530, i64 0, i32 15
  %2532 = bitcast %"struct.blink::TabSize"* %2531 to i64*
  %2533 = load i64, i64* %2532, align 4
  %2534 = load i16, i16* %2523, align 8
  %2535 = shl nuw nsw i8 %2529, 3
  %2536 = xor i8 %2535, 8
  %2537 = zext i8 %2536 to i16
  %2538 = and i16 %2534, -9
  %2539 = or i16 %2538, %2537
  store i16 %2539, i16* %2523, align 8
  %2540 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %22, i64 0, i32 7
  %2541 = bitcast %"struct.blink::TabSize"* %2540 to i40*
  %2542 = trunc i64 %2533 to i40
  store i40 %2542, i40* %2541, align 4
  %2543 = load float, float* %2352, align 4
  %2544 = load float, float* %90, align 8
  %2545 = fadd float %2543, %2544
  store float %2545, float* %2521, align 8
  %2546 = call i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %22, float %2515, i32 0, i32 0) #9
  %2547 = icmp ult i32 %2546, 2
  br i1 %2547, label %2640, label %2548

2548:                                             ; preds = %2519
  %2549 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2549) #9
  %2550 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2385, i64 1, i32 4, i32 0, i64 4
  %2551 = bitcast i8* %2550 to %"class.WTF::StringImpl"**
  %2552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2551, align 8
  %2553 = icmp eq %"class.WTF::StringImpl"* %2552, null
  %2554 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  br i1 %2553, label %2573, label %2555

2555:                                             ; preds = %2548
  store i32 %2388, i32* %2554, align 8
  %2556 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 0
  store %"class.WTF::StringImpl"* %2552, %"class.WTF::StringImpl"** %2556, align 8
  %2557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2558 = load atomic i32, i32* %2557 monotonic, align 4
  %2559 = and i32 %2558, 1
  %2560 = icmp eq i32 %2559, 0
  %2561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2552, i64 1
  br i1 %2560, label %2567, label %2562

2562:                                             ; preds = %2555
  %2563 = bitcast %"class.WTF::StringImpl"* %2561 to i8*
  %2564 = zext i32 %2386 to i64
  %2565 = getelementptr inbounds i8, i8* %2563, i64 %2564
  %2566 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* %2565, i8** %2566, align 8
  br label %2577

2567:                                             ; preds = %2555
  %2568 = bitcast %"class.WTF::StringImpl"* %2561 to i16*
  %2569 = zext i32 %2386 to i64
  %2570 = getelementptr inbounds i16, i16* %2568, i64 %2569
  %2571 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %2572 = bitcast i8** %2571 to i16**
  store i16* %2570, i16** %2572, align 8
  br label %2577

2573:                                             ; preds = %2548
  store i32 0, i32* %2554, align 8
  %2574 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* null, i8** %2574, align 8
  %2575 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %2576 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %2575, i64* %2576, align 8
  br label %2577

2577:                                             ; preds = %2573, %2567, %2562
  %2578 = add i32 %2388, -2
  %2579 = icmp ult i32 %2578, %2546
  %2580 = select i1 %2579, i32 %2578, i32 %2546
  %2581 = add nuw i32 %2580, 1
  %2582 = bitcast %"class.blink::Hyphenation"* %157 to i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)***
  %2583 = load i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)**, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*** %2582, align 8
  %2584 = getelementptr inbounds i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)** %2583, i64 2
  %2585 = load i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)*, i32 (%"class.blink::Hyphenation"*, %"class.WTF::StringView"*, i32)** %2584, align 8
  %2586 = call i32 %2585(%"class.blink::Hyphenation"* nonnull %157, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, i32 %2581) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2549) #9
  %2587 = icmp ult i32 %2586, 2
  br i1 %2587, label %2640, label %2588

2588:                                             ; preds = %2577
  %2589 = add i32 %2586, %2386
  %2590 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font17GetCharacterRangeERKNS_7TextRunEjj(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %22, i32 0, i32 %2586) #9
  %2591 = extractvalue { <2 x float>, <2 x float> } %2590, 0
  %2592 = extractelement <2 x float> %2591, i32 1
  %2593 = extractelement <2 x float> %2591, i32 0
  %2594 = fsub float %2592, %2593
  store i32 %2589, i32* %2218, align 8
  store float %2594, float* %2382, align 8
  %2595 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %2596 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %2597 = load i32, i32* %2596, align 8
  store i32 %2589, i32* %36, align 4
  %2598 = icmp eq %"class.blink::LayoutObject"* %2595, null
  br i1 %2598, label %2633, label %2599

2599:                                             ; preds = %2588
  %2600 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2595, i64 0, i32 4
  %2601 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2600 to i96*
  %2602 = load i96, i96* %2601, align 4
  %2603 = and i96 %2602, 33554432
  %2604 = icmp eq i96 %2603, 0
  br i1 %2604, label %2633, label %2605

2605:                                             ; preds = %2599
  %2606 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2595, i64 1, i32 4, i32 0, i64 4
  %2607 = bitcast i8* %2606 to %"class.WTF::StringImpl"**
  %2608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2607, align 8
  %2609 = icmp eq %"class.WTF::StringImpl"* %2608, null
  br i1 %2609, label %2633, label %2610

2610:                                             ; preds = %2605
  %2611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2608, i64 0, i32 1
  %2612 = load i32, i32* %2611, align 4
  %2613 = icmp ugt i32 %2612, %2589
  br i1 %2613, label %2614, label %2633

2614:                                             ; preds = %2610
  %2615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2616 = load atomic i32, i32* %2615 monotonic, align 4
  %2617 = and i32 %2616, 1
  %2618 = icmp eq i32 %2617, 0
  %2619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2608, i64 1
  br i1 %2618, label %2626, label %2620

2620:                                             ; preds = %2614
  %2621 = bitcast %"class.WTF::StringImpl"* %2619 to i8*
  %2622 = zext i32 %2589 to i64
  %2623 = getelementptr inbounds i8, i8* %2621, i64 %2622
  %2624 = load i8, i8* %2623, align 1
  %2625 = zext i8 %2624 to i16
  br label %2631

2626:                                             ; preds = %2614
  %2627 = bitcast %"class.WTF::StringImpl"* %2619 to i16*
  %2628 = zext i32 %2589 to i64
  %2629 = getelementptr inbounds i16, i16* %2627, i64 %2628
  %2630 = load i16, i16* %2629, align 2
  br label %2631

2631:                                             ; preds = %2626, %2620
  %2632 = phi i16 [ %2625, %2620 ], [ %2630, %2626 ]
  switch i16 %2632, label %2633 [
    i16 32, label %2641
    i16 9, label %2641
  ]

2633:                                             ; preds = %2631, %2610, %2605, %2599, %2588
  %2634 = phi i16 [ %2632, %2631 ], [ 0, %2599 ], [ 0, %2588 ], [ 0, %2610 ], [ 0, %2605 ]
  %2635 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  %2636 = load i8, i8* %2635, align 8, !range !2
  %2637 = icmp eq i8 %2636, 0
  %2638 = icmp eq i16 %2634, 10
  %2639 = and i1 %2638, %2637
  br label %2641

2640:                                             ; preds = %2519, %2577
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2520) #9
  br label %2654

2641:                                             ; preds = %2633, %2631, %2631
  %2642 = phi i16 [ %2632, %2631 ], [ %2634, %2633 ], [ %2632, %2631 ]
  %2643 = phi i1 [ true, %2631 ], [ %2639, %2633 ], [ true, %2631 ]
  %2644 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %2645 = zext i1 %2643 to i8
  store i8 %2645, i8* %2644, align 1
  %2646 = icmp eq i16 %2642, 12288
  %2647 = or i1 %2646, %2643
  %2648 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %2649 = zext i1 %2647 to i8
  store i8 %2649, i8* %2648, align 4
  %2650 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %2595, %"class.blink::LayoutObject"** %2650, align 8
  %2651 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %2589, i32* %2651, align 4
  %2652 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %2597, i32* %2652, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2520) #9
  store i8 1, i8* %2, align 1
  %2653 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %2653, align 1
  br label %2654

2654:                                             ; preds = %2495, %2381, %2640, %2641
  %2655 = load float, float* %2382, align 8
  %2656 = load float, float* %90, align 8
  %2657 = fadd float %2655, %2656
  store float %2657, float* %90, align 8
  br label %2658

2658:                                             ; preds = %2374, %2372, %2654
  %2659 = load i8, i8* %2, align 1, !range !2
  %2660 = icmp eq i8 %2659, 0
  br i1 %2660, label %2661, label %3477

2661:                                             ; preds = %2658
  %2662 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 0
  %2663 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %2662, align 8
  %2664 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  %2665 = load i32, i32* %2664, align 4
  %2666 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2663, i64 0, i32 0, i32 3
  %2667 = load i32, i32* %2666, align 4
  %2668 = icmp eq i32 %2665, %2667
  br i1 %2668, label %2669, label %2675

2669:                                             ; preds = %2661
  %2670 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %2671 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2670, align 8
  %2672 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2663, i64 0, i32 0, i32 1, i32 0
  %2673 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2672, align 8
  %2674 = icmp eq %"class.blink::LayoutObject"* %2671, %2673
  br i1 %2674, label %2714, label %2675

2675:                                             ; preds = %2669, %2661
  %2676 = icmp eq i32 %2665, 0
  br i1 %2676, label %2760, label %2677

2677:                                             ; preds = %2675
  %2678 = add i32 %2665, -1
  %2679 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %2680 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2679, align 8
  %2681 = icmp eq %"class.blink::LayoutObject"* %2680, null
  br i1 %2681, label %2760, label %2682

2682:                                             ; preds = %2677
  %2683 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2680, i64 0, i32 4
  %2684 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2683 to i96*
  %2685 = load i96, i96* %2684, align 4
  %2686 = and i96 %2685, 33554432
  %2687 = icmp eq i96 %2686, 0
  br i1 %2687, label %2760, label %2688

2688:                                             ; preds = %2682
  %2689 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2680, i64 1, i32 4, i32 0, i64 4
  %2690 = bitcast i8* %2689 to %"class.WTF::StringImpl"**
  %2691 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2690, align 8
  %2692 = icmp eq %"class.WTF::StringImpl"* %2691, null
  br i1 %2692, label %2760, label %2693

2693:                                             ; preds = %2688
  %2694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2691, i64 0, i32 1
  %2695 = load i32, i32* %2694, align 4
  %2696 = icmp ugt i32 %2695, %2678
  br i1 %2696, label %2697, label %2760

2697:                                             ; preds = %2693
  %2698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2691, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2699 = load atomic i32, i32* %2698 monotonic, align 4
  %2700 = and i32 %2699, 1
  %2701 = icmp eq i32 %2700, 0
  %2702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2691, i64 1
  br i1 %2701, label %2709, label %2703

2703:                                             ; preds = %2697
  %2704 = bitcast %"class.WTF::StringImpl"* %2702 to i8*
  %2705 = zext i32 %2678 to i64
  %2706 = getelementptr inbounds i8, i8* %2704, i64 %2705
  %2707 = load i8, i8* %2706, align 1
  %2708 = zext i8 %2707 to i16
  br label %2753

2709:                                             ; preds = %2697
  %2710 = bitcast %"class.WTF::StringImpl"* %2702 to i16*
  %2711 = zext i32 %2678 to i64
  %2712 = getelementptr inbounds i16, i16* %2710, i64 %2711
  %2713 = load i16, i16* %2712, align 2
  br label %2753

2714:                                             ; preds = %2669
  %2715 = load i32, i32* %36, align 4
  %2716 = icmp eq i32 %2715, 0
  br i1 %2716, label %2760, label %2717

2717:                                             ; preds = %2714
  %2718 = add i32 %2715, -1
  %2719 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %2720 = icmp eq %"class.blink::LayoutObject"* %2719, null
  br i1 %2720, label %2760, label %2721

2721:                                             ; preds = %2717
  %2722 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2719, i64 0, i32 4
  %2723 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2722 to i96*
  %2724 = load i96, i96* %2723, align 4
  %2725 = and i96 %2724, 33554432
  %2726 = icmp eq i96 %2725, 0
  br i1 %2726, label %2760, label %2727

2727:                                             ; preds = %2721
  %2728 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2719, i64 1, i32 4, i32 0, i64 4
  %2729 = bitcast i8* %2728 to %"class.WTF::StringImpl"**
  %2730 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2729, align 8
  %2731 = icmp eq %"class.WTF::StringImpl"* %2730, null
  br i1 %2731, label %2760, label %2732

2732:                                             ; preds = %2727
  %2733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2730, i64 0, i32 1
  %2734 = load i32, i32* %2733, align 4
  %2735 = icmp ugt i32 %2734, %2718
  br i1 %2735, label %2736, label %2760

2736:                                             ; preds = %2732
  %2737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2730, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2738 = load atomic i32, i32* %2737 monotonic, align 4
  %2739 = and i32 %2738, 1
  %2740 = icmp eq i32 %2739, 0
  %2741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2730, i64 1
  br i1 %2740, label %2748, label %2742

2742:                                             ; preds = %2736
  %2743 = bitcast %"class.WTF::StringImpl"* %2741 to i8*
  %2744 = zext i32 %2718 to i64
  %2745 = getelementptr inbounds i8, i8* %2743, i64 %2744
  %2746 = load i8, i8* %2745, align 1
  %2747 = zext i8 %2746 to i16
  br label %2753

2748:                                             ; preds = %2736
  %2749 = bitcast %"class.WTF::StringImpl"* %2741 to i16*
  %2750 = zext i32 %2718 to i64
  %2751 = getelementptr inbounds i16, i16* %2749, i64 %2750
  %2752 = load i16, i16* %2751, align 2
  br label %2753

2753:                                             ; preds = %2703, %2709, %2742, %2748
  %2754 = phi i16 [ %2708, %2703 ], [ %2713, %2709 ], [ %2747, %2742 ], [ %2752, %2748 ]
  %2755 = icmp ne i16 %2754, 173
  %2756 = or i1 %164, %2755
  br i1 %2756, label %2760, label %2757

2757:                                             ; preds = %2753
  store i8 1, i8* %2, align 1
  %2758 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %2758, align 1
  %2759 = load i8, i8* %2, align 1, !range !2
  br label %2760

2760:                                             ; preds = %2727, %2732, %2717, %2721, %2714, %2688, %2693, %2677, %2682, %2675, %2753, %2757
  %2761 = phi i8 [ 0, %2727 ], [ 0, %2732 ], [ 0, %2717 ], [ 0, %2721 ], [ 0, %2714 ], [ 0, %2688 ], [ 0, %2693 ], [ 0, %2677 ], [ 0, %2682 ], [ 0, %2675 ], [ 0, %2753 ], [ %2759, %2757 ]
  %2762 = icmp ne i8 %2761, 0
  %2763 = and i8 %2109, 1
  %2764 = icmp eq i8 %2763, 0
  %2765 = or i1 %2764, %2762
  br i1 %2765, label %3477, label %2766

2766:                                             ; preds = %2760
  %2767 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2213, i64 0, i32 1
  %2768 = load float, float* %2767, align 8
  %2769 = load float, float* %90, align 8
  %2770 = fsub float %2769, %2768
  store float %2770, float* %90, align 8
  %2771 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %2772 = load i32, i32* %2216, align 4
  %2773 = load i32, i32* %2218, align 8
  %2774 = sub nsw i32 %2773, %2772
  %2775 = icmp eq i32 %2774, 0
  br i1 %2775, label %2776, label %2779

2776:                                             ; preds = %2766
  %2777 = load float, float* %2767, align 8
  %2778 = fadd float %2777, %2770
  store float %2778, float* %90, align 8
  br label %3472

2779:                                             ; preds = %2766
  %2780 = bitcast %"class.blink::LazyLineBreakIterator"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2780) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2780, i8 -86, i64 64, i1 false) #9
  %2781 = bitcast %"class.blink::LayoutObject"* %2771 to %"class.blink::LayoutText"*
  %2782 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 1, i32 4, i32 0, i64 4
  %2783 = bitcast i8* %2782 to %"class.WTF::StringImpl"**
  %2784 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2783, align 8
  %2785 = icmp eq %"class.WTF::StringImpl"* %2784, null
  br i1 %2785, label %2803, label %2786

2786:                                             ; preds = %2779
  %2787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2784, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2788 = load atomic i32, i32* %2787 monotonic, align 4
  %2789 = and i32 %2788, 2
  %2790 = icmp eq i32 %2789, 0
  br i1 %2790, label %2791, label %2806

2791:                                             ; preds = %2786
  %2792 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2784, i64 0, i32 0
  %2793 = load i32, i32* %2792, align 4
  %2794 = zext i32 %2793 to i33
  %2795 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2794, i33 1) #9
  %2796 = extractvalue { i33, i1 } %2795, 1
  %2797 = extractvalue { i33, i1 } %2795, 0
  %2798 = icmp slt i33 %2797, 0
  %2799 = or i1 %2796, %2798
  br i1 %2799, label %2800, label %2801, !prof !4

2800:                                             ; preds = %2791
  call void @llvm.trap() #9
  unreachable

2801:                                             ; preds = %2791
  %2802 = trunc i33 %2797 to i32
  store i32 %2802, i32* %2792, align 4
  br label %2806

2803:                                             ; preds = %2779
  %2804 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %74) #9
  %2805 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2805, align 8
  br label %2824

2806:                                             ; preds = %2801, %2786
  %2807 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %74) #9
  %2808 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2784, %"class.WTF::StringImpl"** %2808, align 8
  %2809 = load atomic i32, i32* %2787 monotonic, align 4
  %2810 = and i32 %2809, 2
  %2811 = icmp eq i32 %2810, 0
  br i1 %2811, label %2812, label %2824

2812:                                             ; preds = %2806
  %2813 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2784, i64 0, i32 0
  %2814 = load i32, i32* %2813, align 4
  %2815 = zext i32 %2814 to i33
  %2816 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2815, i33 1) #9
  %2817 = extractvalue { i33, i1 } %2816, 1
  %2818 = extractvalue { i33, i1 } %2816, 0
  %2819 = icmp slt i33 %2818, 0
  %2820 = or i1 %2817, %2819
  br i1 %2820, label %2821, label %2822, !prof !4

2821:                                             ; preds = %2812
  call void @llvm.trap() #9
  unreachable

2822:                                             ; preds = %2812
  %2823 = trunc i33 %2818 to i32
  store i32 %2823, i32* %2813, align 4
  br label %2824

2824:                                             ; preds = %2822, %2806, %2803
  %2825 = phi %"class.WTF::StringImpl"** [ %2808, %2822 ], [ %2808, %2806 ], [ %2805, %2803 ]
  %2826 = phi %"class.WTF::StringImpl"* [ %2807, %2822 ], [ %2807, %2806 ], [ %2804, %2803 ]
  %2827 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2826, %"class.WTF::StringImpl"** %2827, align 8
  %2828 = icmp eq %"class.WTF::StringImpl"* %2826, null
  br i1 %2828, label %2846, label %2829

2829:                                             ; preds = %2824
  %2830 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2826, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2831 = load atomic i32, i32* %2830 monotonic, align 4
  %2832 = and i32 %2831, 2
  %2833 = icmp eq i32 %2832, 0
  br i1 %2833, label %2834, label %2846

2834:                                             ; preds = %2829
  %2835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2826, i64 0, i32 0
  %2836 = load i32, i32* %2835, align 4
  %2837 = zext i32 %2836 to i33
  %2838 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2837, i33 1) #9
  %2839 = extractvalue { i33, i1 } %2838, 1
  %2840 = extractvalue { i33, i1 } %2838, 0
  %2841 = icmp slt i33 %2840, 0
  %2842 = or i1 %2839, %2841
  br i1 %2842, label %2843, label %2844, !prof !4

2843:                                             ; preds = %2834
  call void @llvm.trap() #9
  unreachable

2844:                                             ; preds = %2834
  %2845 = trunc i33 %2840 to i32
  store i32 %2845, i32* %2835, align 4
  br label %2846

2846:                                             ; preds = %2844, %2829, %2824
  %2847 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 2
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %2847, align 8
  %2848 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 5, i32 0
  store i16* null, i16** %2848, align 8
  %2849 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 5, i32 1
  store i32 0, i32* %2849, align 8
  %2850 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 6
  store i32 0, i32* %2850, align 8
  %2851 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 7
  store i32 %183, i32* %2851, align 4
  %2852 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 8
  store i32 0, i32* %2852, align 8
  %2853 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 3, i64 0
  store i16 0, i16* %2853, align 8
  %2854 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %26, i64 0, i32 3, i64 1
  store i16 0, i16* %2854, align 2
  br i1 %2785, label %2868, label %2855

2855:                                             ; preds = %2846
  %2856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2784, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2857 = load atomic i32, i32* %2856 monotonic, align 4
  %2858 = and i32 %2857, 2
  %2859 = icmp eq i32 %2858, 0
  %2860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2784, i64 0, i32 0
  %2861 = load i32, i32* %2860, align 4
  br i1 %2859, label %2862, label %2864

2862:                                             ; preds = %2855
  %2863 = add i32 %2861, -1
  store i32 %2863, i32* %2860, align 4
  br label %2864

2864:                                             ; preds = %2862, %2855
  %2865 = phi i32 [ %2863, %2862 ], [ %2861, %2855 ]
  %2866 = icmp eq i32 %2865, 0
  br i1 %2866, label %2867, label %2868

2867:                                             ; preds = %2864
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2784) #9
  br label %2868

2868:                                             ; preds = %2867, %2864, %2846
  br i1 %2828, label %2882, label %2869

2869:                                             ; preds = %2868
  %2870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2826, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2871 = load atomic i32, i32* %2870 monotonic, align 4
  %2872 = and i32 %2871, 2
  %2873 = icmp eq i32 %2872, 0
  %2874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2826, i64 0, i32 0
  %2875 = load i32, i32* %2874, align 4
  br i1 %2873, label %2876, label %2878

2876:                                             ; preds = %2869
  %2877 = add i32 %2875, -1
  store i32 %2877, i32* %2874, align 4
  br label %2878

2878:                                             ; preds = %2876, %2869
  %2879 = phi i32 [ %2877, %2876 ], [ %2875, %2869 ]
  %2880 = icmp eq i32 %2879, 0
  br i1 %2880, label %2881, label %2882

2881:                                             ; preds = %2878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2826) #9
  br label %2882

2882:                                             ; preds = %2881, %2878, %2868
  %2883 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  %2884 = load i32, i32* %2883, align 8
  %2885 = icmp eq i32 %2884, 64
  br i1 %2885, label %2886, label %2887

2886:                                             ; preds = %2882
  store i32 3, i32* %2852, align 8
  br label %2887

2887:                                             ; preds = %2886, %2882
  %2888 = load i32, i32* %2364, align 4
  %2889 = sitofp i32 %2888 to float
  %2890 = fmul float %2889, 1.562500e-02
  %2891 = load float, float* %2352, align 4
  %2892 = load float, float* %90, align 8
  %2893 = fadd float %2891, %2892
  %2894 = fsub float %2890, %2893
  %2895 = fcmp ugt float %2894, 1.562500e-02
  br i1 %2895, label %3108, label %2896

2896:                                             ; preds = %2887
  %2897 = load i32, i32* %2216, align 4
  %2898 = fcmp une float %2893, 0.000000e+00
  br i1 %2898, label %2899, label %2935

2899:                                             ; preds = %2896
  %2900 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 8
  %2901 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2900, align 8
  %2902 = icmp eq %"class.blink::LayoutObject"* %2901, null
  br i1 %2902, label %2903, label %2938

2903:                                             ; preds = %2899
  %2904 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 7
  %2905 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2904, align 8
  %2906 = icmp eq %"class.blink::LayoutObject"* %2905, null
  br i1 %2906, label %2935, label %2907

2907:                                             ; preds = %2903
  %2908 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2905, i64 0, i32 7
  %2909 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2908, align 8
  %2910 = icmp eq %"class.blink::LayoutObject"* %2909, null
  br i1 %2910, label %2935, label %2911

2911:                                             ; preds = %2907
  %2912 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2909, i64 0, i32 5, i32 0
  %2913 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2912, align 8
  %2914 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2913, i64 0, i32 0, i32 9
  %2915 = bitcast [20 x i8]* %2914 to i160*
  %2916 = load i160, i160* %2915, align 8
  %2917 = and i160 %2916, 73728
  %2918 = icmp eq i160 %2917, 0
  br i1 %2918, label %2919, label %2935

2919:                                             ; preds = %2911
  %2920 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2913, i64 0, i32 0, i32 1, i32 0, i32 0
  %2921 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %2920, align 8
  %2922 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %2921, i64 0, i32 23
  %2923 = bitcast [5 x i8]* %2922 to i40*
  %2924 = load i40, i40* %2923, align 8
  %2925 = and i40 %2924, 3221225472
  %2926 = icmp ne i40 %2925, 3221225472
  %2927 = and i40 %2924, 786432
  %2928 = icmp eq i40 %2927, 0
  %2929 = and i1 %2926, %2928
  %2930 = fcmp une float %2891, 0.000000e+00
  %2931 = or i1 %2930, %2929
  %2932 = icmp eq i40 %2925, 1073741824
  %2933 = xor i1 %2931, true
  %2934 = or i1 %2932, %2933
  br i1 %2934, label %2938, label %2935

2935:                                             ; preds = %2919, %2911, %2907, %2903, %2896
  %2936 = add nsw i32 %2897, 1
  %2937 = call i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"* nonnull %26, i32 %2936) #9
  br label %2938

2938:                                             ; preds = %2935, %2919, %2899
  %2939 = phi i32 [ %2937, %2935 ], [ %2897, %2919 ], [ %2897, %2899 ]
  %2940 = load i32, i32* %2218, align 8
  %2941 = icmp slt i32 %2939, %2940
  br i1 %2941, label %2942, label %3429

2942:                                             ; preds = %2938
  %2943 = sub nsw i32 %2939, %2897
  %2944 = load float, float* %2352, align 4
  %2945 = load float, float* %90, align 8
  %2946 = fadd float %2944, %2945
  %2947 = load i8, i8* %2337, align 1, !range !2
  %2948 = icmp eq i32 %2897, 0
  br i1 %2948, label %2949, label %2962

2949:                                             ; preds = %2942
  %2950 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2783, align 8
  %2951 = icmp eq %"class.WTF::StringImpl"* %2950, null
  br i1 %2951, label %2955, label %2952

2952:                                             ; preds = %2949
  %2953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2950, i64 0, i32 1
  %2954 = load i32, i32* %2953, align 4
  br label %2955

2955:                                             ; preds = %2952, %2949
  %2956 = phi i32 [ %2954, %2952 ], [ 0, %2949 ]
  %2957 = icmp eq i32 %2956, %2943
  br i1 %2957, label %2958, label %2962

2958:                                             ; preds = %2955
  %2959 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 5, i32 0
  %2960 = bitcast %"class.blink::ComputedStyle"** %2959 to %"class.blink::ComputedStyleBase"**
  %2961 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %2960, align 8
  br label %2974

2962:                                             ; preds = %2955, %2942
  %2963 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 5, i32 0
  %2964 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2963, align 8
  %2965 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2964, i64 0, i32 0, i32 1, i32 0, i32 0
  %2966 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %2965, align 8
  %2967 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %2966, i64 0, i32 23
  %2968 = bitcast [5 x i8]* %2967 to i40*
  %2969 = load i40, i40* %2968, align 8
  %2970 = and i40 %2969, 4294967296
  %2971 = icmp eq i40 %2970, 0
  br i1 %2971, label %2995, label %2972

2972:                                             ; preds = %2962
  %2973 = bitcast %"class.blink::ComputedStyle"* %2964 to %"class.blink::ComputedStyleBase"*
  br label %2974

2974:                                             ; preds = %2972, %2958
  %2975 = phi %"class.blink::ComputedStyleBase"* [ %2961, %2958 ], [ %2973, %2972 ]
  %2976 = fmul float %2946, 6.400000e+01
  %2977 = fcmp ult float %2976, 0xC1E0000000000000
  %2978 = fcmp ugt float %2976, 0x41DFFFFFE0000000
  %2979 = fcmp ogt float %2976, 0xC1E0000000000000
  %2980 = select i1 %2979, float %2976, float 0xC1E0000000000000
  %2981 = fptosi float %2980 to i32
  %2982 = select i1 %2977, i32 0, i32 2147483647
  %2983 = select i1 %2978, i32 %2982, i32 %2981
  %2984 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %2975, i64 0, i32 9
  %2985 = bitcast [20 x i8]* %2984 to i160*
  %2986 = load i160, i160* %2985, align 8
  %2987 = lshr i160 %2986, 115
  %2988 = trunc i160 %2987 to i8
  %2989 = and i8 %2988, 1
  %2990 = bitcast %"class.blink::LayoutObject"* %2771 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %2991 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %2990, align 8
  %2992 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %2991, i64 111
  %2993 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %2992, align 8
  %2994 = call float %2993(%"class.blink::LayoutText"* %2781, i32 %2897, i32 %2943, %"class.blink::Font"* dereferenceable(88) %79, i32 %2983, i8 zeroext %2989, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #9
  br label %3022

2995:                                             ; preds = %2962
  %2996 = bitcast %"class.blink::TextRun"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2996) #9
  %2997 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2996, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %2997, align 8
  %2998 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %2998, align 4
  %2999 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 5
  store i16 -21846, i16* %2999, align 8
  %3000 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 6, i64 0
  store i8 -86, i8* %3000, align 2
  %3001 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 6, i64 1
  store i8 -86, i8* %3001, align 1
  %3002 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %3002, align 4
  %3003 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 7, i32 1
  %3004 = bitcast i8* %3003 to i64*
  store i64 -6148914691236517206, i64* %3004, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %24, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %2771, i32 %2897, i32 %2943, %"class.blink::ComputedStyle"* dereferenceable(104) %2964) #9
  %3005 = bitcast %"class.blink::ComputedStyle"** %2963 to %"class.blink::ComputedStyleBase"**
  %3006 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3005, align 8
  %3007 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %3006, i64 0, i32 1, i32 0, i32 0
  %3008 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3007, align 8
  %3009 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %3008, i64 0, i32 15
  %3010 = bitcast %"struct.blink::TabSize"* %3009 to i64*
  %3011 = load i64, i64* %3010, align 4
  %3012 = load i16, i16* %2999, align 8
  %3013 = shl nuw nsw i8 %2947, 3
  %3014 = xor i8 %3013, 8
  %3015 = zext i8 %3014 to i16
  %3016 = and i16 %3012, -9
  %3017 = or i16 %3016, %3015
  store i16 %3017, i16* %2999, align 8
  %3018 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %24, i64 0, i32 7
  %3019 = bitcast %"struct.blink::TabSize"* %3018 to i40*
  %3020 = trunc i64 %3011 to i40
  store i40 %3020, i40* %3019, align 4
  store float %2946, float* %2997, align 8
  %3021 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %24, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2996) #9
  br label %3022

3022:                                             ; preds = %2995, %2974
  %3023 = phi float [ %2994, %2974 ], [ %3021, %2995 ]
  %3024 = load float, float* %2352, align 4
  %3025 = load float, float* %90, align 8
  %3026 = fadd float %3024, %3025
  %3027 = fadd float %3023, %3026
  %3028 = fmul float %3027, 6.400000e+01
  %3029 = call float @llvm.floor.f32(float %3028) #9
  %3030 = fcmp ult float %3029, 0xC1E0000000000000
  %3031 = fcmp ugt float %3029, 0x41DFFFFFE0000000
  %3032 = fcmp ogt float %3029, 0xC1E0000000000000
  %3033 = select i1 %3032, float %3029, float 0xC1E0000000000000
  %3034 = fptosi float %3033 to i32
  %3035 = select i1 %3030, i32 0, i32 2147483647
  %3036 = select i1 %3031, i32 %3035, i32 %3034
  %3037 = load i32, i32* %2364, align 4
  %3038 = sitofp i32 %3037 to float
  %3039 = fmul float %3038, 1.562500e-02
  %3040 = fadd float %3039, 1.562500e-02
  %3041 = sitofp i32 %3036 to float
  %3042 = fmul float %3041, 1.562500e-02
  %3043 = fcmp ugt float %3042, %3040
  br i1 %3043, label %3044, label %3050

3044:                                             ; preds = %3022
  %3045 = fcmp une float %3024, 0.000000e+00
  br i1 %3045, label %3429, label %3046

3046:                                             ; preds = %3044
  %3047 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 21
  %3048 = load i8, i8* %3047, align 1, !range !2
  %3049 = icmp eq i8 %3048, 0
  br i1 %3049, label %3050, label %3429

3050:                                             ; preds = %3046, %3022
  store i32 %2939, i32* %2218, align 8
  store float %3023, float* %2767, align 8
  %3051 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %3052 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %3053 = load i32, i32* %3052, align 8
  store i32 %2939, i32* %36, align 4
  %3054 = icmp eq %"class.blink::LayoutObject"* %3051, null
  br i1 %3054, label %3089, label %3055

3055:                                             ; preds = %3050
  %3056 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3051, i64 0, i32 4
  %3057 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3056 to i96*
  %3058 = load i96, i96* %3057, align 4
  %3059 = and i96 %3058, 33554432
  %3060 = icmp eq i96 %3059, 0
  br i1 %3060, label %3089, label %3061

3061:                                             ; preds = %3055
  %3062 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3051, i64 1, i32 4, i32 0, i64 4
  %3063 = bitcast i8* %3062 to %"class.WTF::StringImpl"**
  %3064 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3063, align 8
  %3065 = icmp eq %"class.WTF::StringImpl"* %3064, null
  br i1 %3065, label %3089, label %3066

3066:                                             ; preds = %3061
  %3067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3064, i64 0, i32 1
  %3068 = load i32, i32* %3067, align 4
  %3069 = icmp ugt i32 %3068, %2939
  br i1 %3069, label %3070, label %3089

3070:                                             ; preds = %3066
  %3071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3064, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3072 = load atomic i32, i32* %3071 monotonic, align 4
  %3073 = and i32 %3072, 1
  %3074 = icmp eq i32 %3073, 0
  %3075 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3064, i64 1
  br i1 %3074, label %3082, label %3076

3076:                                             ; preds = %3070
  %3077 = bitcast %"class.WTF::StringImpl"* %3075 to i8*
  %3078 = zext i32 %2939 to i64
  %3079 = getelementptr inbounds i8, i8* %3077, i64 %3078
  %3080 = load i8, i8* %3079, align 1
  %3081 = zext i8 %3080 to i16
  br label %3087

3082:                                             ; preds = %3070
  %3083 = bitcast %"class.WTF::StringImpl"* %3075 to i16*
  %3084 = zext i32 %2939 to i64
  %3085 = getelementptr inbounds i16, i16* %3083, i64 %3084
  %3086 = load i16, i16* %3085, align 2
  br label %3087

3087:                                             ; preds = %3082, %3076
  %3088 = phi i16 [ %3081, %3076 ], [ %3086, %3082 ]
  switch i16 %3088, label %3089 [
    i16 32, label %3096
    i16 9, label %3096
  ]

3089:                                             ; preds = %3087, %3066, %3061, %3055, %3050
  %3090 = phi i16 [ %3088, %3087 ], [ 0, %3055 ], [ 0, %3050 ], [ 0, %3066 ], [ 0, %3061 ]
  %3091 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  %3092 = load i8, i8* %3091, align 8, !range !2
  %3093 = icmp eq i8 %3092, 0
  %3094 = icmp eq i16 %3090, 10
  %3095 = and i1 %3094, %3093
  br label %3096

3096:                                             ; preds = %3089, %3087, %3087
  %3097 = phi i16 [ %3088, %3087 ], [ %3090, %3089 ], [ %3088, %3087 ]
  %3098 = phi i1 [ true, %3087 ], [ %3095, %3089 ], [ true, %3087 ]
  %3099 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %3100 = zext i1 %3098 to i8
  store i8 %3100, i8* %3099, align 1
  %3101 = icmp eq i16 %3097, 12288
  %3102 = or i1 %3101, %3098
  %3103 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %3104 = zext i1 %3102 to i8
  store i8 %3104, i8* %3103, align 4
  %3105 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %3051, %"class.blink::LayoutObject"** %3105, align 8
  %3106 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %2939, i32* %3106, align 4
  %3107 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %3053, i32* %3107, align 8
  br label %3429

3108:                                             ; preds = %2887
  %3109 = bitcast %"class.blink::TextRun"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3109) #9
  %3110 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3109, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %3110, align 8
  %3111 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %3111, align 4
  %3112 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 5
  store i16 -21846, i16* %3112, align 8
  %3113 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 6, i64 0
  store i8 -86, i8* %3113, align 2
  %3114 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 6, i64 1
  store i8 -86, i8* %3114, align 1
  %3115 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %3115, align 4
  %3116 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 7, i32 1
  %3117 = bitcast i8* %3116 to i64*
  store i64 -6148914691236517206, i64* %3117, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %27, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %2771, i32 %2772, i32 %2774, %"class.blink::ComputedStyle"* dereferenceable(104) %74) #9
  %3118 = load i8, i8* %2337, align 1, !range !2
  %3119 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %3120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %3119, i64 0, i32 15
  %3121 = bitcast %"struct.blink::TabSize"* %3120 to i64*
  %3122 = load i64, i64* %3121, align 4
  %3123 = load i16, i16* %3112, align 8
  %3124 = shl nuw nsw i8 %3118, 3
  %3125 = xor i8 %3124, 8
  %3126 = zext i8 %3125 to i16
  %3127 = and i16 %3123, -9
  %3128 = or i16 %3127, %3126
  store i16 %3128, i16* %3112, align 8
  %3129 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %27, i64 0, i32 7
  %3130 = bitcast %"struct.blink::TabSize"* %3129 to i40*
  %3131 = trunc i64 %3122 to i40
  store i40 %3131, i40* %3130, align 4
  %3132 = load float, float* %2352, align 4
  %3133 = load float, float* %90, align 8
  %3134 = fadd float %3132, %3133
  store float %3134, float* %3110, align 8
  %3135 = fadd float %2894, 1.562500e-02
  %3136 = and i16 %3123, 16
  %3137 = icmp eq i16 %3136, 0
  %3138 = load float, float* %2767, align 8
  %3139 = fsub float %3138, %3135
  %3140 = select i1 %3137, float %3135, float %3139
  %3141 = call i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %27, float %3140, i32 0, i32 0) #9
  %3142 = icmp eq i32 %3141, 0
  br i1 %3142, label %3148, label %3143

3143:                                             ; preds = %3108
  %3144 = add nsw i32 %3141, %2772
  %3145 = call i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"* nonnull %26, i32 %3144, i32 %2772) #9
  %3146 = sub nsw i32 %3145, %2772
  %3147 = icmp eq i32 %3146, 0
  br i1 %3147, label %3148, label %3363

3148:                                             ; preds = %3143, %3108
  %3149 = load i32, i32* %2216, align 4
  %3150 = load float, float* %2352, align 4
  %3151 = load float, float* %90, align 8
  %3152 = fadd float %3150, %3151
  %3153 = fcmp une float %3152, 0.000000e+00
  br i1 %3153, label %3154, label %3190

3154:                                             ; preds = %3148
  %3155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 8
  %3156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3155, align 8
  %3157 = icmp eq %"class.blink::LayoutObject"* %3156, null
  br i1 %3157, label %3158, label %3193

3158:                                             ; preds = %3154
  %3159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 7
  %3160 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3159, align 8
  %3161 = icmp eq %"class.blink::LayoutObject"* %3160, null
  br i1 %3161, label %3190, label %3162

3162:                                             ; preds = %3158
  %3163 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3160, i64 0, i32 7
  %3164 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3163, align 8
  %3165 = icmp eq %"class.blink::LayoutObject"* %3164, null
  br i1 %3165, label %3190, label %3166

3166:                                             ; preds = %3162
  %3167 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3164, i64 0, i32 5, i32 0
  %3168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3167, align 8
  %3169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3168, i64 0, i32 0, i32 9
  %3170 = bitcast [20 x i8]* %3169 to i160*
  %3171 = load i160, i160* %3170, align 8
  %3172 = and i160 %3171, 73728
  %3173 = icmp eq i160 %3172, 0
  br i1 %3173, label %3174, label %3190

3174:                                             ; preds = %3166
  %3175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3168, i64 0, i32 0, i32 1, i32 0, i32 0
  %3176 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3175, align 8
  %3177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %3176, i64 0, i32 23
  %3178 = bitcast [5 x i8]* %3177 to i40*
  %3179 = load i40, i40* %3178, align 8
  %3180 = and i40 %3179, 3221225472
  %3181 = icmp ne i40 %3180, 3221225472
  %3182 = and i40 %3179, 786432
  %3183 = icmp eq i40 %3182, 0
  %3184 = and i1 %3181, %3183
  %3185 = fcmp une float %3150, 0.000000e+00
  %3186 = or i1 %3185, %3184
  %3187 = icmp eq i40 %3180, 1073741824
  %3188 = xor i1 %3186, true
  %3189 = or i1 %3187, %3188
  br i1 %3189, label %3193, label %3190

3190:                                             ; preds = %3174, %3166, %3162, %3158, %3148
  %3191 = add nsw i32 %3149, 1
  %3192 = call i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"* nonnull %26, i32 %3191) #9
  br label %3193

3193:                                             ; preds = %3190, %3174, %3154
  %3194 = phi i32 [ %3192, %3190 ], [ %3149, %3174 ], [ %3149, %3154 ]
  %3195 = load i32, i32* %2218, align 8
  %3196 = icmp slt i32 %3194, %3195
  br i1 %3196, label %3197, label %3427

3197:                                             ; preds = %3193
  %3198 = sub nsw i32 %3194, %3149
  %3199 = load float, float* %2352, align 4
  %3200 = load float, float* %90, align 8
  %3201 = fadd float %3199, %3200
  %3202 = load i8, i8* %2337, align 1, !range !2
  %3203 = icmp eq i32 %3149, 0
  br i1 %3203, label %3204, label %3217

3204:                                             ; preds = %3197
  %3205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2783, align 8
  %3206 = icmp eq %"class.WTF::StringImpl"* %3205, null
  br i1 %3206, label %3210, label %3207

3207:                                             ; preds = %3204
  %3208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3205, i64 0, i32 1
  %3209 = load i32, i32* %3208, align 4
  br label %3210

3210:                                             ; preds = %3207, %3204
  %3211 = phi i32 [ %3209, %3207 ], [ 0, %3204 ]
  %3212 = icmp eq i32 %3211, %3198
  br i1 %3212, label %3213, label %3217

3213:                                             ; preds = %3210
  %3214 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 5, i32 0
  %3215 = bitcast %"class.blink::ComputedStyle"** %3214 to %"class.blink::ComputedStyleBase"**
  %3216 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3215, align 8
  br label %3229

3217:                                             ; preds = %3210, %3197
  %3218 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2771, i64 0, i32 5, i32 0
  %3219 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3218, align 8
  %3220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3219, i64 0, i32 0, i32 1, i32 0, i32 0
  %3221 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3220, align 8
  %3222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %3221, i64 0, i32 23
  %3223 = bitcast [5 x i8]* %3222 to i40*
  %3224 = load i40, i40* %3223, align 8
  %3225 = and i40 %3224, 4294967296
  %3226 = icmp eq i40 %3225, 0
  br i1 %3226, label %3250, label %3227

3227:                                             ; preds = %3217
  %3228 = bitcast %"class.blink::ComputedStyle"* %3219 to %"class.blink::ComputedStyleBase"*
  br label %3229

3229:                                             ; preds = %3227, %3213
  %3230 = phi %"class.blink::ComputedStyleBase"* [ %3216, %3213 ], [ %3228, %3227 ]
  %3231 = fmul float %3201, 6.400000e+01
  %3232 = fcmp ult float %3231, 0xC1E0000000000000
  %3233 = fcmp ugt float %3231, 0x41DFFFFFE0000000
  %3234 = fcmp ogt float %3231, 0xC1E0000000000000
  %3235 = select i1 %3234, float %3231, float 0xC1E0000000000000
  %3236 = fptosi float %3235 to i32
  %3237 = select i1 %3232, i32 0, i32 2147483647
  %3238 = select i1 %3233, i32 %3237, i32 %3236
  %3239 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %3230, i64 0, i32 9
  %3240 = bitcast [20 x i8]* %3239 to i160*
  %3241 = load i160, i160* %3240, align 8
  %3242 = lshr i160 %3241, 115
  %3243 = trunc i160 %3242 to i8
  %3244 = and i8 %3243, 1
  %3245 = bitcast %"class.blink::LayoutObject"* %2771 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %3246 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %3245, align 8
  %3247 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %3246, i64 111
  %3248 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %3247, align 8
  %3249 = call float %3248(%"class.blink::LayoutText"* %2781, i32 %3149, i32 %3198, %"class.blink::Font"* dereferenceable(88) %79, i32 %3238, i8 zeroext %3244, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #9
  br label %3277

3250:                                             ; preds = %3217
  %3251 = bitcast %"class.blink::TextRun"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3251) #9
  %3252 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3251, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %3252, align 8
  %3253 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %3253, align 4
  %3254 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 5
  store i16 -21846, i16* %3254, align 8
  %3255 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 6, i64 0
  store i8 -86, i8* %3255, align 2
  %3256 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 6, i64 1
  store i8 -86, i8* %3256, align 1
  %3257 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %3257, align 4
  %3258 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 7, i32 1
  %3259 = bitcast i8* %3258 to i64*
  store i64 -6148914691236517206, i64* %3259, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %25, %"class.blink::Font"* dereferenceable(88) %79, %"class.blink::LayoutObject"* %2771, i32 %3149, i32 %3198, %"class.blink::ComputedStyle"* dereferenceable(104) %3219) #9
  %3260 = bitcast %"class.blink::ComputedStyle"** %3218 to %"class.blink::ComputedStyleBase"**
  %3261 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3260, align 8
  %3262 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %3261, i64 0, i32 1, i32 0, i32 0
  %3263 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %3262, align 8
  %3264 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %3263, i64 0, i32 15
  %3265 = bitcast %"struct.blink::TabSize"* %3264 to i64*
  %3266 = load i64, i64* %3265, align 4
  %3267 = load i16, i16* %3254, align 8
  %3268 = shl nuw nsw i8 %3202, 3
  %3269 = xor i8 %3268, 8
  %3270 = zext i8 %3269 to i16
  %3271 = and i16 %3267, -9
  %3272 = or i16 %3271, %3270
  store i16 %3272, i16* %3254, align 8
  %3273 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %25, i64 0, i32 7
  %3274 = bitcast %"struct.blink::TabSize"* %3273 to i40*
  %3275 = trunc i64 %3266 to i40
  store i40 %3275, i40* %3274, align 4
  store float %3201, float* %3252, align 8
  %3276 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %25, %"class.WTF::HashSet.1798"* null, %"class.blink::FloatRect"* null) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3251) #9
  br label %3277

3277:                                             ; preds = %3250, %3229
  %3278 = phi float [ %3249, %3229 ], [ %3276, %3250 ]
  %3279 = load float, float* %2352, align 4
  %3280 = load float, float* %90, align 8
  %3281 = fadd float %3279, %3280
  %3282 = fadd float %3278, %3281
  %3283 = fmul float %3282, 6.400000e+01
  %3284 = call float @llvm.floor.f32(float %3283) #9
  %3285 = fcmp ult float %3284, 0xC1E0000000000000
  %3286 = fcmp ugt float %3284, 0x41DFFFFFE0000000
  %3287 = fcmp ogt float %3284, 0xC1E0000000000000
  %3288 = select i1 %3287, float %3284, float 0xC1E0000000000000
  %3289 = fptosi float %3288 to i32
  %3290 = select i1 %3285, i32 0, i32 2147483647
  %3291 = select i1 %3286, i32 %3290, i32 %3289
  %3292 = load i32, i32* %2364, align 4
  %3293 = sitofp i32 %3292 to float
  %3294 = fmul float %3293, 1.562500e-02
  %3295 = fadd float %3294, 1.562500e-02
  %3296 = sitofp i32 %3291 to float
  %3297 = fmul float %3296, 1.562500e-02
  %3298 = fcmp ugt float %3297, %3295
  br i1 %3298, label %3299, label %3305

3299:                                             ; preds = %3277
  %3300 = fcmp une float %3279, 0.000000e+00
  br i1 %3300, label %3427, label %3301

3301:                                             ; preds = %3299
  %3302 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 21
  %3303 = load i8, i8* %3302, align 1, !range !2
  %3304 = icmp eq i8 %3303, 0
  br i1 %3304, label %3305, label %3427

3305:                                             ; preds = %3301, %3277
  store i32 %3194, i32* %2218, align 8
  store float %3278, float* %2767, align 8
  %3306 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %3307 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %3308 = load i32, i32* %3307, align 8
  store i32 %3194, i32* %36, align 4
  %3309 = icmp eq %"class.blink::LayoutObject"* %3306, null
  br i1 %3309, label %3344, label %3310

3310:                                             ; preds = %3305
  %3311 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3306, i64 0, i32 4
  %3312 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3311 to i96*
  %3313 = load i96, i96* %3312, align 4
  %3314 = and i96 %3313, 33554432
  %3315 = icmp eq i96 %3314, 0
  br i1 %3315, label %3344, label %3316

3316:                                             ; preds = %3310
  %3317 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3306, i64 1, i32 4, i32 0, i64 4
  %3318 = bitcast i8* %3317 to %"class.WTF::StringImpl"**
  %3319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3318, align 8
  %3320 = icmp eq %"class.WTF::StringImpl"* %3319, null
  br i1 %3320, label %3344, label %3321

3321:                                             ; preds = %3316
  %3322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3319, i64 0, i32 1
  %3323 = load i32, i32* %3322, align 4
  %3324 = icmp ugt i32 %3323, %3194
  br i1 %3324, label %3325, label %3344

3325:                                             ; preds = %3321
  %3326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3327 = load atomic i32, i32* %3326 monotonic, align 4
  %3328 = and i32 %3327, 1
  %3329 = icmp eq i32 %3328, 0
  %3330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3319, i64 1
  br i1 %3329, label %3337, label %3331

3331:                                             ; preds = %3325
  %3332 = bitcast %"class.WTF::StringImpl"* %3330 to i8*
  %3333 = zext i32 %3194 to i64
  %3334 = getelementptr inbounds i8, i8* %3332, i64 %3333
  %3335 = load i8, i8* %3334, align 1
  %3336 = zext i8 %3335 to i16
  br label %3342

3337:                                             ; preds = %3325
  %3338 = bitcast %"class.WTF::StringImpl"* %3330 to i16*
  %3339 = zext i32 %3194 to i64
  %3340 = getelementptr inbounds i16, i16* %3338, i64 %3339
  %3341 = load i16, i16* %3340, align 2
  br label %3342

3342:                                             ; preds = %3337, %3331
  %3343 = phi i16 [ %3336, %3331 ], [ %3341, %3337 ]
  switch i16 %3343, label %3344 [
    i16 32, label %3351
    i16 9, label %3351
  ]

3344:                                             ; preds = %3342, %3321, %3316, %3310, %3305
  %3345 = phi i16 [ %3343, %3342 ], [ 0, %3310 ], [ 0, %3305 ], [ 0, %3321 ], [ 0, %3316 ]
  %3346 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  %3347 = load i8, i8* %3346, align 8, !range !2
  %3348 = icmp eq i8 %3347, 0
  %3349 = icmp eq i16 %3345, 10
  %3350 = and i1 %3349, %3348
  br label %3351

3351:                                             ; preds = %3344, %3342, %3342
  %3352 = phi i16 [ %3343, %3342 ], [ %3345, %3344 ], [ %3343, %3342 ]
  %3353 = phi i1 [ true, %3342 ], [ %3350, %3344 ], [ true, %3342 ]
  %3354 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %3355 = zext i1 %3353 to i8
  store i8 %3355, i8* %3354, align 1
  %3356 = icmp eq i16 %3352, 12288
  %3357 = or i1 %3356, %3353
  %3358 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %3359 = zext i1 %3357 to i8
  store i8 %3359, i8* %3358, align 4
  %3360 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %3306, %"class.blink::LayoutObject"** %3360, align 8
  %3361 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %3194, i32* %3361, align 4
  %3362 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %3308, i32* %3362, align 8
  br label %3427

3363:                                             ; preds = %3143
  %3364 = bitcast %"class.blink::FloatPoint"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3364) #9
  %3365 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %28, i64 0, i32 0
  store float 0.000000e+00, float* %3365, align 4
  %3366 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %28, i64 0, i32 1
  store float 0.000000e+00, float* %3366, align 4
  %3367 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %79, %"class.blink::TextRun"* nonnull dereferenceable(40) %27, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %28, float 0.000000e+00, i32 0, i32 %3146) #9
  %3368 = extractvalue { <2 x float>, <2 x float> } %3367, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3364) #9
  %3369 = extractelement <2 x float> %3368, i32 0
  store i32 %3145, i32* %2218, align 8
  store float %3369, float* %2767, align 8
  %3370 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %3371 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %3372 = load i32, i32* %3371, align 8
  store i32 %3145, i32* %36, align 4
  %3373 = icmp eq %"class.blink::LayoutObject"* %3370, null
  br i1 %3373, label %3408, label %3374

3374:                                             ; preds = %3363
  %3375 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3370, i64 0, i32 4
  %3376 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3375 to i96*
  %3377 = load i96, i96* %3376, align 4
  %3378 = and i96 %3377, 33554432
  %3379 = icmp eq i96 %3378, 0
  br i1 %3379, label %3408, label %3380

3380:                                             ; preds = %3374
  %3381 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3370, i64 1, i32 4, i32 0, i64 4
  %3382 = bitcast i8* %3381 to %"class.WTF::StringImpl"**
  %3383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3382, align 8
  %3384 = icmp eq %"class.WTF::StringImpl"* %3383, null
  br i1 %3384, label %3408, label %3385

3385:                                             ; preds = %3380
  %3386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3383, i64 0, i32 1
  %3387 = load i32, i32* %3386, align 4
  %3388 = icmp ugt i32 %3387, %3145
  br i1 %3388, label %3389, label %3408

3389:                                             ; preds = %3385
  %3390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3391 = load atomic i32, i32* %3390 monotonic, align 4
  %3392 = and i32 %3391, 1
  %3393 = icmp eq i32 %3392, 0
  %3394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3383, i64 1
  br i1 %3393, label %3401, label %3395

3395:                                             ; preds = %3389
  %3396 = bitcast %"class.WTF::StringImpl"* %3394 to i8*
  %3397 = zext i32 %3145 to i64
  %3398 = getelementptr inbounds i8, i8* %3396, i64 %3397
  %3399 = load i8, i8* %3398, align 1
  %3400 = zext i8 %3399 to i16
  br label %3406

3401:                                             ; preds = %3389
  %3402 = bitcast %"class.WTF::StringImpl"* %3394 to i16*
  %3403 = zext i32 %3145 to i64
  %3404 = getelementptr inbounds i16, i16* %3402, i64 %3403
  %3405 = load i16, i16* %3404, align 2
  br label %3406

3406:                                             ; preds = %3401, %3395
  %3407 = phi i16 [ %3400, %3395 ], [ %3405, %3401 ]
  switch i16 %3407, label %3408 [
    i16 32, label %3415
    i16 9, label %3415
  ]

3408:                                             ; preds = %3406, %3385, %3380, %3374, %3363
  %3409 = phi i16 [ %3407, %3406 ], [ 0, %3374 ], [ 0, %3363 ], [ 0, %3385 ], [ 0, %3380 ]
  %3410 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 14
  %3411 = load i8, i8* %3410, align 8, !range !2
  %3412 = icmp eq i8 %3411, 0
  %3413 = icmp eq i16 %3409, 10
  %3414 = and i1 %3413, %3412
  br label %3415

3415:                                             ; preds = %3408, %3406, %3406
  %3416 = phi i16 [ %3407, %3406 ], [ %3409, %3408 ], [ %3407, %3406 ]
  %3417 = phi i1 [ true, %3406 ], [ %3414, %3408 ], [ true, %3406 ]
  %3418 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %3419 = zext i1 %3417 to i8
  store i8 %3419, i8* %3418, align 1
  %3420 = icmp eq i16 %3416, 12288
  %3421 = or i1 %3420, %3417
  %3422 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %3423 = zext i1 %3421 to i8
  store i8 %3423, i8* %3422, align 4
  %3424 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %3370, %"class.blink::LayoutObject"** %3424, align 8
  %3425 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %3145, i32* %3425, align 4
  %3426 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %3372, i32* %3426, align 8
  br label %3427

3427:                                             ; preds = %3415, %3351, %3301, %3299, %3193
  %3428 = phi i1 [ true, %3415 ], [ false, %3193 ], [ true, %3351 ], [ false, %3301 ], [ false, %3299 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3109) #9
  br label %3429

3429:                                             ; preds = %3427, %3096, %3046, %3044, %2938
  %3430 = phi i1 [ %3428, %3427 ], [ false, %2938 ], [ true, %3096 ], [ false, %3046 ], [ false, %3044 ]
  %3431 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %2847, align 8
  %3432 = icmp eq %"class.icu_69::BreakIterator"* %3431, null
  br i1 %3432, label %3434, label %3433

3433:                                             ; preds = %3429
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %3431) #9
  br label %3434

3434:                                             ; preds = %3433, %3429
  %3435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2827, align 8
  %3436 = icmp eq %"class.WTF::StringImpl"* %3435, null
  br i1 %3436, label %3450, label %3437

3437:                                             ; preds = %3434
  %3438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3439 = load atomic i32, i32* %3438 monotonic, align 4
  %3440 = and i32 %3439, 2
  %3441 = icmp eq i32 %3440, 0
  %3442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3435, i64 0, i32 0
  %3443 = load i32, i32* %3442, align 4
  br i1 %3441, label %3444, label %3446

3444:                                             ; preds = %3437
  %3445 = add i32 %3443, -1
  store i32 %3445, i32* %3442, align 4
  br label %3446

3446:                                             ; preds = %3444, %3437
  %3447 = phi i32 [ %3445, %3444 ], [ %3443, %3437 ]
  %3448 = icmp eq i32 %3447, 0
  br i1 %3448, label %3449, label %3450

3449:                                             ; preds = %3446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3435) #9
  br label %3450

3450:                                             ; preds = %3449, %3446, %3434
  %3451 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2825, align 8
  %3452 = icmp eq %"class.WTF::StringImpl"* %3451, null
  br i1 %3452, label %3466, label %3453

3453:                                             ; preds = %3450
  %3454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3451, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3455 = load atomic i32, i32* %3454 monotonic, align 4
  %3456 = and i32 %3455, 2
  %3457 = icmp eq i32 %3456, 0
  %3458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3451, i64 0, i32 0
  %3459 = load i32, i32* %3458, align 4
  br i1 %3457, label %3460, label %3462

3460:                                             ; preds = %3453
  %3461 = add i32 %3459, -1
  store i32 %3461, i32* %3458, align 4
  br label %3462

3462:                                             ; preds = %3460, %3453
  %3463 = phi i32 [ %3461, %3460 ], [ %3459, %3453 ]
  %3464 = icmp eq i32 %3463, 0
  br i1 %3464, label %3465, label %3466

3465:                                             ; preds = %3462
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3451) #9
  br label %3466

3466:                                             ; preds = %3450, %3462, %3465
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2780) #9
  %3467 = load float, float* %2767, align 8
  %3468 = load float, float* %90, align 8
  %3469 = fadd float %3467, %3468
  store float %3469, float* %90, align 8
  br i1 %3430, label %3470, label %3472

3470:                                             ; preds = %3466
  call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %89) #9
  %3471 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %3471, align 1
  br label %3477

3472:                                             ; preds = %2776, %3466
  %3473 = load float, float* %2352, align 4
  %3474 = fcmp une float %3473, 0.000000e+00
  br i1 %3474, label %3475, label %3477

3475:                                             ; preds = %3472
  %3476 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %3476, align 1
  br label %3477

3477:                                             ; preds = %2658, %2351, %3470, %3475, %3472, %2348, %2760, %2066
  %3478 = phi i1 [ %2067, %2066 ], [ false, %2760 ], [ false, %2348 ], [ false, %3472 ], [ false, %3475 ], [ false, %3470 ], [ false, %2351 ], [ false, %2658 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  ret i1 %3478
}

declare void @_ZN5blink15BreakingContext15HandleEndOfLineEv(%"class.blink::InlineIterator"* sret, %"class.blink::BreakingContext"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext32CommitAndUpdateLineBreakIfNeededEv(%"class.blink::BreakingContext"*) local_unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11
  %5 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %6 = load float, float* %5, align 4
  %7 = fcmp une float %6, 0.000000e+00
  br i1 %7, label %8, label %84

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %10 = load float, float* %9, align 8
  %11 = fadd float %6, %10
  %12 = fmul float %11, 6.400000e+01
  %13 = tail call float @llvm.floor.f32(float %12) #9
  %14 = fcmp ult float %13, 0xC1E0000000000000
  %15 = fcmp ugt float %13, 0x41DFFFFFE0000000
  %16 = fcmp ogt float %13, 0xC1E0000000000000
  %17 = select i1 %16, float %13, float 0xC1E0000000000000
  %18 = fptosi float %17 to i32
  %19 = select i1 %14, i32 0, i32 2147483647
  %20 = select i1 %15, i32 %19, i32 %18
  %21 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = fmul float %23, 1.562500e-02
  %25 = fadd float %24, 1.562500e-02
  %26 = sitofp i32 %20 to float
  %27 = fmul float %26, 1.562500e-02
  %28 = fcmp ugt float %27, %25
  br i1 %28, label %29, label %84

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %84, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 16
  br i1 %36, label %37, label %84

37:                                               ; preds = %33
  %38 = fadd float %11, 0.000000e+00
  %39 = fmul float %38, 6.400000e+01
  %40 = tail call float @llvm.floor.f32(float %39) #9
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  %48 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 4
  %49 = load float, float* %48, align 4
  %50 = fmul float %49, 6.400000e+01
  %51 = tail call float @llvm.ceil.f32(float %50) #9
  %52 = fcmp ult float %51, 0xC1E0000000000000
  %53 = fcmp ugt float %51, 0x41DFFFFFE0000000
  %54 = fcmp ogt float %51, 0xC1E0000000000000
  %55 = select i1 %54, float %51, float 0xC1E0000000000000
  %56 = fptosi float %55 to i32
  %57 = select i1 %52, i32 0, i32 2147483647
  %58 = select i1 %53, i32 %57, i32 %56
  %59 = icmp sgt i32 %58, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %58) #9
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !4
  %65 = icmp sgt i32 %64, %22
  br i1 %65, label %266, label %66

66:                                               ; preds = %37
  %67 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp eq %"class.blink::LayoutObject"* %68, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 5, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = and i160 %75, 73728
  %77 = icmp eq i160 %76, 0
  br i1 %77, label %78, label %266

78:                                               ; preds = %66, %70
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %4) #9
  %79 = bitcast %"class.blink::LayoutObject"** %67 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::LayoutObject"** %30 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %83, align 8
  br label %266

84:                                               ; preds = %29, %8, %1, %33
  %85 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6
  %86 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %85, i64 0, i32 0
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %262, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 4
  %93 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %92 to i96*
  %94 = load i96, i96* %93, align 4
  %95 = and i96 %94, 33554432
  %96 = icmp eq i96 %95, 0
  br i1 %96, label %262, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 4
  %99 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %98 to i96*
  %100 = load i96, i96* %99, align 4
  %101 = and i96 %100, 33554432
  %102 = icmp eq i96 %101, 0
  br i1 %102, label %262, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::LayoutObject"* %87 to i1 (%"class.blink::LayoutObject"*, i32)***
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, i64 92
  %107 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.blink::LayoutObject"* nonnull %87, i32 0) #9
  br i1 %108, label %262, label %109

109:                                              ; preds = %103
  %110 = load i8, i8* %2, align 2, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %123

112:                                              ; preds = %109
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 5, i32 0
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8
  %119 = and i160 %118, 73728
  %120 = icmp eq i160 %119, 0
  br i1 %120, label %121, label %262

121:                                              ; preds = %112
  %122 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutText"*
  br label %131

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %125 = load i8, i8* %124, align 1, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %266

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::LineLayoutItem"* %85 to %"class.blink::LayoutText"**
  %129 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %129, i64 0, i32 0
  br label %131

131:                                              ; preds = %121, %127
  %132 = phi %"class.blink::LayoutObject"* [ %130, %127 ], [ %113, %121 ]
  %133 = phi %"class.blink::LayoutText"* [ %129, %127 ], [ %122, %121 ]
  %134 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %133, i64 0, i32 7, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %186, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %186, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 1
  br i1 %145, label %151, label %147

147:                                              ; preds = %141
  %148 = bitcast %"class.WTF::StringImpl"* %146 to i8*
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i16
  br label %154

151:                                              ; preds = %141
  %152 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  %153 = load i16, i16* %152, align 2
  br label %154

154:                                              ; preds = %147, %151
  %155 = phi i16 [ %150, %147 ], [ %153, %151 ]
  %156 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %157 = load i8, i8* %156, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %183

159:                                              ; preds = %154
  switch i16 %155, label %182 [
    i16 32, label %183
    i16 9, label %183
    i16 10, label %160
  ]

160:                                              ; preds = %159
  %161 = bitcast %"class.blink::LayoutObject"* %132 to i1 (%"class.blink::LayoutObject"*, i32)***
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %161, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %162, i64 92
  %164 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.blink::LayoutObject"* %132, i32 65) #9
  br i1 %165, label %179, label %166

166:                                              ; preds = %160
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %168 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %167, i64 0, i32 5, i32 0
  %169 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %169, i64 0, i32 0, i32 9
  %171 = bitcast [20 x i8]* %170 to i160*
  %172 = load i160, i160* %171, align 8
  %173 = lshr i160 %172, 12
  %174 = trunc i160 %173 to i32
  %175 = and i32 %174, 127
  %176 = icmp ne i32 %175, 1
  %177 = icmp ne i32 %175, 16
  %178 = and i1 %176, %177
  br label %179

179:                                              ; preds = %160, %166
  %180 = phi i1 [ %178, %166 ], [ false, %160 ]
  %181 = xor i1 %180, true
  br label %183

182:                                              ; preds = %159
  br label %183

183:                                              ; preds = %159, %159, %182, %154, %179
  %184 = phi i1 [ false, %154 ], [ true, %159 ], [ %181, %179 ], [ true, %159 ], [ false, %182 ]
  %185 = zext i1 %184 to i8
  br label %193

186:                                              ; preds = %131, %137
  %187 = bitcast %"class.blink::LayoutText"* %133 to i1 (%"class.blink::LayoutText"*)***
  %188 = load i1 (%"class.blink::LayoutText"*)**, i1 (%"class.blink::LayoutText"*)*** %187, align 8
  %189 = getelementptr inbounds i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %188, i64 107
  %190 = load i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %189, align 8
  %191 = tail call zeroext i1 %190(%"class.blink::LayoutText"* %133) #9
  %192 = select i1 %191, i8 1, i8 %3
  br label %193

193:                                              ; preds = %186, %183
  %194 = phi i8 [ %185, %183 ], [ %192, %186 ]
  %195 = load float, float* %5, align 4
  %196 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %197 = load float, float* %196, align 8
  %198 = fadd float %195, %197
  %199 = fmul float %198, 6.400000e+01
  %200 = tail call float @llvm.floor.f32(float %199) #9
  %201 = fcmp ult float %200, 0xC1E0000000000000
  %202 = fcmp ugt float %200, 0x41DFFFFFE0000000
  %203 = fcmp ogt float %200, 0xC1E0000000000000
  %204 = select i1 %203, float %200, float 0xC1E0000000000000
  %205 = fptosi float %204 to i32
  %206 = select i1 %201, i32 0, i32 2147483647
  %207 = select i1 %202, i32 %206, i32 %205
  %208 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = sitofp i32 %209 to float
  %211 = fmul float %210, 1.562500e-02
  %212 = fadd float %211, 1.562500e-02
  %213 = sitofp i32 %207 to float
  %214 = fmul float %213, 1.562500e-02
  %215 = fcmp ole float %214, %212
  %216 = fcmp une float %195, 0.000000e+00
  %217 = or i1 %216, %215
  br i1 %217, label %233, label %218

218:                                              ; preds = %193
  %219 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %220 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %220, i64 0, i32 0
  %222 = load i8, i8* %221, align 4, !range !2
  %223 = icmp ne i8 %222, 0
  tail call void @_ZN5blink9LineWidth14FitBelowFloatsEb(%"class.blink::LineWidth"* %4, i1 zeroext %223) #9
  %224 = load float, float* %5, align 4
  %225 = load float, float* %196, align 8
  %226 = load i32, i32* %208, align 4
  %227 = fadd float %224, %225
  %228 = fmul float %227, 6.400000e+01
  %229 = tail call float @llvm.floor.f32(float %228) #9
  %230 = sitofp i32 %226 to float
  %231 = fmul float %230, 1.562500e-02
  %232 = fadd float %231, 1.562500e-02
  br label %233

233:                                              ; preds = %218, %193
  %234 = phi float [ %232, %218 ], [ %212, %193 ]
  %235 = phi float [ %229, %218 ], [ %200, %193 ]
  %236 = fcmp ult float %235, 0xC1E0000000000000
  %237 = fcmp ugt float %235, 0x41DFFFFFE0000000
  %238 = fcmp ogt float %235, 0xC1E0000000000000
  %239 = select i1 %238, float %235, float 0xC1E0000000000000
  %240 = fptosi float %239 to i32
  %241 = select i1 %236, i32 0, i32 2147483647
  %242 = select i1 %237, i32 %241, i32 %240
  %243 = sitofp i32 %242 to float
  %244 = fmul float %243, 1.562500e-02
  %245 = fcmp ugt float %244, %234
  br i1 %245, label %246, label %252

246:                                              ; preds = %233
  %247 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 26
  %248 = load i8, i8* %247, align 1, !range !2
  %249 = icmp ne i8 %248, 0
  %250 = icmp eq i8 %194, 0
  %251 = or i1 %250, %249
  br i1 %251, label %262, label %254

252:                                              ; preds = %233
  %253 = icmp eq i8 %194, 0
  br i1 %253, label %397, label %254

254:                                              ; preds = %246, %252
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %4) #9
  %255 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %256 = bitcast %"class.blink::LayoutObject"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %259 = bitcast %"class.blink::LayoutObject"** %258 to i64*
  store i64 %257, i64* %259, align 8
  %260 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %260, align 4
  %261 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %261, align 8
  br label %266

262:                                              ; preds = %97, %89, %84, %103, %246, %112
  %263 = phi i8 [ %3, %112 ], [ %194, %246 ], [ %3, %103 ], [ %3, %97 ], [ %3, %89 ], [ %3, %84 ]
  %264 = and i8 %263, 1
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %397, label %266

266:                                              ; preds = %37, %254, %123, %70, %78, %262
  %267 = load float, float* %5, align 4
  %268 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %269 = load float, float* %268, align 8
  %270 = fadd float %267, %269
  %271 = fmul float %270, 6.400000e+01
  %272 = tail call float @llvm.floor.f32(float %271) #9
  %273 = fcmp ult float %272, 0xC1E0000000000000
  %274 = fcmp ugt float %272, 0x41DFFFFFE0000000
  %275 = fcmp ogt float %272, 0xC1E0000000000000
  %276 = select i1 %275, float %272, float 0xC1E0000000000000
  %277 = fptosi float %276 to i32
  %278 = select i1 %273, i32 0, i32 2147483647
  %279 = select i1 %274, i32 %278, i32 %277
  %280 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = sitofp i32 %281 to float
  %283 = fmul float %282, 1.562500e-02
  %284 = fadd float %283, 1.562500e-02
  %285 = sitofp i32 %279 to float
  %286 = fmul float %285, 1.562500e-02
  %287 = fcmp ugt float %286, %284
  br i1 %287, label %288, label %397

288:                                              ; preds = %266
  %289 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %290 = load i8, i8* %289, align 1, !range !2
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %294 = load i8, i8* %293, align 2, !range !2
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %298 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %298, i64 0, i32 0, i32 9
  %300 = bitcast [20 x i8]* %299 to i160*
  %301 = load i160, i160* %300, align 8
  %302 = and i160 %301, 286720
  %303 = icmp eq i160 %302, 0
  br i1 %303, label %304, label %308

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %306 = bitcast %"class.blink::TrailingObjects"* %305 to i64*
  store i64 0, i64* %306, align 8
  %307 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %307, align 4
  br label %308

308:                                              ; preds = %292, %288, %304, %296
  %309 = fadd float %270, 0.000000e+00
  %310 = fmul float %309, 6.400000e+01
  %311 = tail call float @llvm.floor.f32(float %310) #9
  %312 = fcmp ult float %311, 0xC1E0000000000000
  %313 = fcmp ugt float %311, 0x41DFFFFFE0000000
  %314 = fcmp ogt float %311, 0xC1E0000000000000
  %315 = select i1 %314, float %311, float 0xC1E0000000000000
  %316 = fptosi float %315 to i32
  %317 = select i1 %312, i32 0, i32 2147483647
  %318 = select i1 %313, i32 %317, i32 %316
  %319 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 4
  %320 = load float, float* %319, align 4
  %321 = fmul float %320, 6.400000e+01
  %322 = tail call float @llvm.ceil.f32(float %321) #9
  %323 = fcmp ult float %322, 0xC1E0000000000000
  %324 = fcmp ugt float %322, 0x41DFFFFFE0000000
  %325 = fcmp ogt float %322, 0xC1E0000000000000
  %326 = select i1 %325, float %322, float 0xC1E0000000000000
  %327 = fptosi float %326 to i32
  %328 = select i1 %323, i32 0, i32 2147483647
  %329 = select i1 %324, i32 %328, i32 %327
  %330 = icmp sgt i32 %329, -1
  %331 = select i1 %330, i32 -2147483648, i32 2147483647
  %332 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %318, i32 %329) #9
  %333 = extractvalue { i32, i1 } %332, 1
  %334 = extractvalue { i32, i1 } %332, 0
  %335 = select i1 %333, i32 %331, i32 %334, !prof !4
  %336 = icmp sgt i32 %335, %281
  br i1 %336, label %365, label %337

337:                                              ; preds = %308
  %338 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %339 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %338, align 8
  %340 = icmp eq %"class.blink::LayoutObject"* %339, null
  br i1 %340, label %365, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %339, i64 0, i32 4
  %343 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %342 to i96*
  %344 = load i96, i96* %343, align 4
  %345 = and i96 %344, 8388608
  %346 = icmp eq i96 %345, 0
  br i1 %346, label %365, label %347

347:                                              ; preds = %341
  %348 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %349 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %349, i64 0, i32 4
  %351 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %350 to i96*
  %352 = load i96, i96* %351, align 4
  %353 = and i96 %352, 33554432
  %354 = icmp eq i96 %353, 0
  br i1 %354, label %365, label %355

355:                                              ; preds = %347
  %356 = bitcast %"class.blink::LayoutObject"* %349 to %"class.blink::LayoutText"*
  %357 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* %356) #9
  br i1 %357, label %358, label %365

358:                                              ; preds = %355
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %4) #9
  %359 = bitcast %"class.blink::LayoutObject"** %338 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %362 = bitcast %"class.blink::LayoutObject"** %361 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %363, align 4
  %364 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %364, align 8
  br label %365

365:                                              ; preds = %347, %341, %337, %308, %358, %355
  %366 = load float, float* %5, align 4
  %367 = fcmp une float %366, 0.000000e+00
  br i1 %367, label %368, label %370

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %369, align 1
  br label %489

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %372 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %372, i64 0, i32 0
  %374 = load i8, i8* %373, align 4, !range !2
  %375 = icmp ne i8 %374, 0
  tail call void @_ZN5blink9LineWidth14FitBelowFloatsEb(%"class.blink::LineWidth"* %4, i1 zeroext %375) #9
  %376 = load float, float* %5, align 4
  %377 = load float, float* %268, align 8
  %378 = fadd float %376, %377
  %379 = fmul float %378, 6.400000e+01
  %380 = tail call float @llvm.floor.f32(float %379) #9
  %381 = fcmp ult float %380, 0xC1E0000000000000
  %382 = fcmp ugt float %380, 0x41DFFFFFE0000000
  %383 = fcmp ogt float %380, 0xC1E0000000000000
  %384 = select i1 %383, float %380, float 0xC1E0000000000000
  %385 = fptosi float %384 to i32
  %386 = select i1 %381, i32 0, i32 2147483647
  %387 = select i1 %382, i32 %386, i32 %385
  %388 = load i32, i32* %280, align 4
  %389 = sitofp i32 %388 to float
  %390 = fmul float %389, 1.562500e-02
  %391 = fadd float %390, 1.562500e-02
  %392 = sitofp i32 %387 to float
  %393 = fmul float %392, 1.562500e-02
  %394 = fcmp ugt float %393, %391
  br i1 %394, label %395, label %435

395:                                              ; preds = %370
  %396 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %396, align 1
  br label %489

397:                                              ; preds = %266, %252, %262
  %398 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 8
  %399 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %398, align 8
  %400 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %399, i64 0, i32 0, i32 9
  %401 = bitcast [20 x i8]* %400 to i160*
  %402 = load i160, i160* %401, align 8
  %403 = and i160 %402, 73728
  %404 = icmp eq i160 %403, 0
  br i1 %404, label %405, label %435

405:                                              ; preds = %397
  %406 = load float, float* %5, align 4
  %407 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %408 = load float, float* %407, align 8
  %409 = fadd float %406, %408
  %410 = fmul float %409, 6.400000e+01
  %411 = tail call float @llvm.floor.f32(float %410) #9
  %412 = fcmp ult float %411, 0xC1E0000000000000
  %413 = fcmp ugt float %411, 0x41DFFFFFE0000000
  %414 = fcmp ogt float %411, 0xC1E0000000000000
  %415 = select i1 %414, float %411, float 0xC1E0000000000000
  %416 = fptosi float %415 to i32
  %417 = select i1 %412, i32 0, i32 2147483647
  %418 = select i1 %413, i32 %417, i32 %416
  %419 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %420 = load i32, i32* %419, align 4
  %421 = sitofp i32 %420 to float
  %422 = fmul float %421, 1.562500e-02
  %423 = fadd float %422, 1.562500e-02
  %424 = sitofp i32 %418 to float
  %425 = fmul float %424, 1.562500e-02
  %426 = fcmp ole float %425, %423
  %427 = fcmp une float %406, 0.000000e+00
  %428 = or i1 %427, %426
  br i1 %428, label %435, label %429

429:                                              ; preds = %405
  %430 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %431 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %430, align 8
  %432 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %431, i64 0, i32 0
  %433 = load i8, i8* %432, align 4, !range !2
  %434 = icmp ne i8 %433, 0
  tail call void @_ZN5blink9LineWidth14FitBelowFloatsEb(%"class.blink::LineWidth"* %4, i1 zeroext %434) #9
  br label %435

435:                                              ; preds = %370, %397, %405, %429
  %436 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %437 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %437, i64 0, i32 4
  %439 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %438 to i96*
  %440 = load i96, i96* %439, align 4
  %441 = and i96 %440, 8388608
  %442 = icmp ne i96 %441, 0
  %443 = and i96 %440, 113336795588871485128704
  %444 = icmp eq i96 %443, 75557863725914323419136
  %445 = or i1 %444, %442
  br i1 %445, label %489, label %446

446:                                              ; preds = %435
  %447 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 5, i32 0
  store %"class.blink::LayoutObject"* %437, %"class.blink::LayoutObject"** %447, align 8
  %448 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 5, i32 0
  %449 = load i96, i96* %439, align 4
  %450 = and i96 %449, 1073741824
  %451 = icmp eq i96 %450, 0
  br i1 %451, label %489, label %452

452:                                              ; preds = %446
  %453 = load i8, i8* %2, align 2, !range !2
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %489, label %455

455:                                              ; preds = %452
  %456 = bitcast %"class.blink::LayoutObject"* %437 to i1 (%"class.blink::LayoutObject"*, i32)***
  %457 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %456, align 8
  %458 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %457, i64 92
  %459 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %458, align 8
  %460 = tail call zeroext i1 %459(%"class.blink::LayoutObject"* %437, i32 15) #9
  br i1 %460, label %471, label %461

461:                                              ; preds = %455
  %462 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %456, align 8
  %463 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %462, i64 92
  %464 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %463, align 8
  %465 = tail call zeroext i1 %464(%"class.blink::LayoutObject"* %437, i32 13) #9
  br i1 %465, label %471, label %466

466:                                              ; preds = %461
  %467 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %456, align 8
  %468 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %467, i64 92
  %469 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %468, align 8
  %470 = tail call zeroext i1 %469(%"class.blink::LayoutObject"* %437, i32 36) #9
  br i1 %470, label %471, label %474

471:                                              ; preds = %455, %461, %466
  %472 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %448, align 8
  %473 = tail call zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"* %472) #9
  br i1 %473, label %474, label %489

474:                                              ; preds = %471, %466
  %475 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %448, align 8
  %476 = bitcast %"class.blink::LayoutObject"* %475 to i1 (%"class.blink::LayoutObject"*, i32)***
  %477 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %476, align 8
  %478 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %477, i64 92
  %479 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %478, align 8
  %480 = tail call zeroext i1 %479(%"class.blink::LayoutObject"* %475, i32 42) #9
  br i1 %480, label %489, label %481

481:                                              ; preds = %474
  tail call void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"* %4) #9
  %482 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 6, i32 0
  %483 = bitcast %"class.blink::LayoutObject"** %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %486 = bitcast %"class.blink::LayoutObject"** %485 to i64*
  store i64 %484, i64* %486, align 8
  %487 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %487, align 4
  %488 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %488, align 8
  br label %489

489:                                              ; preds = %446, %452, %471, %481, %435, %474, %395, %368
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE(%"class.blink::LayoutObject"*, %"class.blink::LineInfo"* dereferenceable(12)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.blink::LineLayoutInline", align 8
  %4 = alloca %"class.blink::LineLayoutItem", align 8
  %5 = alloca %"class.blink::Length", align 4
  %6 = alloca %"class.blink::Length", align 4
  %7 = getelementptr inbounds %"class.blink::LineLayoutInline", %"class.blink::LineLayoutInline"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %7, align 8
  %8 = bitcast %"class.blink::LineLayoutItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LineLayoutInline", %"class.blink::LineLayoutInline"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::LineLayoutItem"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %2
  %19 = inttoptr i64 %13 to %"class.blink::LayoutObject"*
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %19, %18 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %18, %2
  %31 = phi %"class.blink::Node"* [ %16, %2 ], [ %21, %18 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 33
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %114

39:                                               ; preds = %30
  %40 = bitcast %"class.blink::Length"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %10, i1 zeroext %43)
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %5, %"class.blink::ComputedStyle"* %44) #9
  %45 = bitcast %"class.blink::Length"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  %46 = load i8, i8* %41, align 4, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %4, i1 zeroext %47)
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %6, %"class.blink::ComputedStyle"* %48) #9
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %104

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %101

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %82, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = bitcast %"class.blink::Length"* %5 to float*
  %67 = load float, float* %66, align 4
  %68 = bitcast float %67 to i32
  %69 = sitofp i32 %68 to float
  %70 = select i1 %65, float %69, float %67
  %71 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %72 = load i8, i8* %71, align 2, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = bitcast %"class.blink::Length"* %6 to float*
  %75 = load float, float* %74, align 4
  %76 = bitcast float %75 to i32
  %77 = sitofp i32 %76 to float
  %78 = select i1 %73, float %77, float %75
  %79 = fcmp oeq float %70, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %62
  %81 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nonnull %5, %"class.blink::Length"* nonnull dereferenceable(8) %6) #9
  br i1 %81, label %82, label %101

82:                                               ; preds = %80, %60, %62
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 5, i32 0
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 9
  %93 = bitcast [20 x i8]* %92 to i160*
  %94 = load i160, i160* %93, align 8
  %95 = xor i160 %94, %88
  %96 = and i160 %95, 276701161105643274240
  %97 = icmp eq i160 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %82
  %99 = call zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"* %91, %"class.blink::ComputedStyle"* dereferenceable(104) %85) #9
  %100 = xor i1 %99, true
  br label %101

101:                                              ; preds = %98, %82, %54, %80
  %102 = phi i1 [ true, %54 ], [ true, %80 ], [ true, %82 ], [ %100, %98 ]
  %103 = load i8, i8* %51, align 1
  br label %104

104:                                              ; preds = %101, %39
  %105 = phi i8 [ %103, %101 ], [ %52, %39 ]
  %106 = phi i1 [ %102, %101 ], [ true, %39 ]
  %107 = icmp eq i8 %105, 8
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #9
  br label %109

109:                                              ; preds = %104, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  %110 = load i8, i8* %49, align 1
  %111 = icmp eq i8 %110, 8
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #9
  br label %113

113:                                              ; preds = %112, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %114

114:                                              ; preds = %113, %30
  %115 = phi i1 [ false, %30 ], [ %106, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"*) unnamed_addr #0 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %3 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %3, i64 26
  %5 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::LayoutObject"* %0) #9
  br i1 %6, label %7, label %36

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 1
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %7, %31
  %13 = phi i64 [ %34, %31 ], [ %10, %7 ]
  %14 = inttoptr i64 %13 to %"class.blink::LayoutObject"*
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 8388608
  %19 = icmp ne i96 %18, 0
  %20 = and i96 %17, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = or i1 %21, %19
  br i1 %22, label %31, label %23

23:                                               ; preds = %12
  %24 = and i96 %17, 33554432
  %25 = icmp eq i96 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = inttoptr i64 %13 to %"class.blink::LayoutText"*
  %28 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* %27) #9
  br i1 %28, label %31, label %29

29:                                               ; preds = %23, %26
  %30 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %14)
  br i1 %30, label %31, label %36

31:                                               ; preds = %29, %26, %12
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 9
  %33 = bitcast %"class.blink::LayoutObject"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %12

36:                                               ; preds = %29, %31, %7, %1
  %37 = phi i1 [ false, %1 ], [ true, %7 ], [ false, %29 ], [ true, %31 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv(%"class.blink::LayoutBoxModelObject"* %0)
  br i1 %2, label %69, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8, !noalias !13
  %9 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %10 = and i160 %8, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = and i160 %8, 41538374868278621028243970633760768
  %13 = icmp eq i160 %12, 0
  %14 = select i1 %13, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %15 = select i1 %13, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %16 = select i1 %11, { i64, i64 } %15, { i64, i64 } %14
  %17 = select i1 %11, { i64, i64 } %15, { i64, i64 } %14
  %18 = extractvalue { i64, i64 } %16, 0
  %19 = extractvalue { i64, i64 } %17, 1
  %20 = getelementptr inbounds i8, i8* %9, i64 %19
  %21 = bitcast i8* %20 to %"class.blink::LayoutBoxModelObject"*
  %22 = and i64 %18, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %3
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %18, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %3
  %32 = inttoptr i64 %18 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %24, %31
  %34 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = tail call i32 %34(%"class.blink::LayoutBoxModelObject"* %21) #9
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %69

37:                                               ; preds = %33
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8, !noalias !16
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 0
  %44 = and i160 %41, 41538374868278621028243970633760768
  %45 = icmp eq i160 %44, 0
  %46 = select i1 %45, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %47 = select i1 %45, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %48 = select i1 %43, { i64, i64 } %47, { i64, i64 } %46
  %49 = select i1 %43, { i64, i64 } %47, { i64, i64 } %46
  %50 = extractvalue { i64, i64 } %48, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = getelementptr inbounds i8, i8* %9, i64 %51
  %53 = bitcast i8* %52 to %"class.blink::LayoutBoxModelObject"*
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %37
  %57 = bitcast i8* %52 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = add i64 %50, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = bitcast i8* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, align 8
  br label %65

63:                                               ; preds = %37
  %64 = inttoptr i64 %50 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %65

65:                                               ; preds = %56, %63
  %66 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %62, %56 ], [ %64, %63 ]
  %67 = tail call i32 %66(%"class.blink::LayoutBoxModelObject"* %53) #9
  %68 = icmp ne i32 %67, 0
  br label %69

69:                                               ; preds = %33, %65, %1
  %70 = phi i1 [ true, %33 ], [ true, %1 ], [ %68, %65 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !19
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !19
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #9
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %131

35:                                               ; preds = %31
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !22
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8, !noalias !22
  %40 = and i160 %39, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = and i160 %39, 41538374868278621028243970633760768
  %43 = icmp eq i160 %42, 0
  %44 = select i1 %43, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %45 = select i1 %43, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %46 = select i1 %41, { i64, i64 } %45, { i64, i64 } %44
  %47 = select i1 %41, { i64, i64 } %45, { i64, i64 } %44
  %48 = extractvalue { i64, i64 } %46, 0
  %49 = extractvalue { i64, i64 } %47, 1
  %50 = getelementptr inbounds i8, i8* %7, i64 %49
  %51 = bitcast i8* %50 to %"class.blink::LayoutBoxModelObject"*
  %52 = and i64 %48, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %35
  %55 = bitcast i8* %50 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = add i64 %48, -1
  %58 = getelementptr i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %60 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %59, align 8
  br label %63

61:                                               ; preds = %35
  %62 = inttoptr i64 %48 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %63

63:                                               ; preds = %54, %61
  %64 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %60, %54 ], [ %62, %61 ]
  %65 = tail call i32 %64(%"class.blink::LayoutBoxModelObject"* %51) #9
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %131

67:                                               ; preds = %63
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !25
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8, !noalias !25
  %72 = and i160 %71, 15211807202738752817960438464512
  %73 = icmp eq i160 %72, 0
  %74 = and i160 %71, 41538374868278621028243970633760768
  %75 = icmp eq i160 %74, 0
  %76 = select i1 %75, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %77 = select i1 %75, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %78 = select i1 %73, { i64, i64 } %77, { i64, i64 } %76
  %79 = select i1 %73, { i64, i64 } %77, { i64, i64 } %76
  %80 = extractvalue { i64, i64 } %78, 0
  %81 = extractvalue { i64, i64 } %79, 1
  %82 = getelementptr inbounds i8, i8* %7, i64 %81
  %83 = bitcast i8* %82 to %"class.blink::LayoutBoxModelObject"*
  %84 = and i64 %80, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %67
  %87 = bitcast i8* %82 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = add i64 %80, -1
  %90 = getelementptr i8, i8* %88, i64 %89
  %91 = bitcast i8* %90 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %92 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %91, align 8
  br label %95

93:                                               ; preds = %67
  %94 = inttoptr i64 %80 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %95

95:                                               ; preds = %86, %93
  %96 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %92, %86 ], [ %94, %93 ]
  %97 = tail call i32 %96(%"class.blink::LayoutBoxModelObject"* %83) #9
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %131

99:                                               ; preds = %95
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !28
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8, !noalias !28
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  %106 = and i160 %103, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  %108 = select i1 %107, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %109 = select i1 %107, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %110 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %111 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %112 = extractvalue { i64, i64 } %110, 0
  %113 = extractvalue { i64, i64 } %111, 1
  %114 = getelementptr inbounds i8, i8* %7, i64 %113
  %115 = bitcast i8* %114 to %"class.blink::LayoutBoxModelObject"*
  %116 = and i64 %112, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %99
  %119 = bitcast i8* %114 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = add i64 %112, -1
  %122 = getelementptr i8, i8* %120, i64 %121
  %123 = bitcast i8* %122 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %124 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %123, align 8
  br label %127

125:                                              ; preds = %99
  %126 = inttoptr i64 %112 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %127

127:                                              ; preds = %118, %125
  %128 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %124, %118 ], [ %126, %125 ]
  %129 = tail call i32 %128(%"class.blink::LayoutBoxModelObject"* %115) #9
  %130 = icmp ne i32 %129, 0
  br label %131

131:                                              ; preds = %95, %63, %31, %127
  %132 = phi i1 [ true, %95 ], [ true, %63 ], [ true, %31 ], [ %130, %127 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #9
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"*) local_unnamed_addr #3

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

declare i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::LineWidth"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutObject"* @_ZN5blinkL28BidiNextSkippingEmptyInlinesINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"*) unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %7, label %236, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %"class.blink::LayoutObject"* %1 to i64
  %10 = icmp ne %"class.blink::BidiResolver"* %2, null
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  %12 = bitcast i64* %4 to %"class.blink::BidiEmbedding"*
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19
  %14 = bitcast i64* %4 to i8*
  %15 = bitcast i64* %4 to i32*
  %16 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %12, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12
  %21 = icmp eq %"class.blink::BidiResolver"* %2, null
  %22 = bitcast i64* %6 to %"class.blink::BidiEmbedding"*
  %23 = bitcast i64* %6 to i8*
  %24 = bitcast i64* %6 to i32*
  %25 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %22, i64 0, i32 1
  %26 = bitcast i64* %5 to %"class.blink::BidiEmbedding"*
  %27 = bitcast i64* %5 to i8*
  %28 = bitcast i64* %5 to i32*
  %29 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %26, i64 0, i32 1
  br label %30

30:                                               ; preds = %231, %8
  %31 = phi %"class.blink::LayoutObject"* [ %1, %8 ], [ %213, %231 ]
  %32 = phi i64 [ %9, %8 ], [ %214, %231 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 113336795588871485128704
  %37 = icmp eq i96 %36, 75557863725914323419136
  %38 = and i96 %35, 1115684864
  %39 = icmp ne i96 %38, 0
  %40 = or i1 %39, %37
  br i1 %40, label %104, label %41

41:                                               ; preds = %30
  %42 = inttoptr i64 %32 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %43 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %43, i64 13
  %45 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %44, align 8
  %46 = call %"class.blink::LayoutObjectChildList"* %45(%"class.blink::LayoutObject"* nonnull %31) #9
  %47 = icmp eq %"class.blink::LayoutObjectChildList"* %46, null
  br i1 %47, label %104, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %46, i64 0, i32 0
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp ne %"class.blink::LayoutObject"* %50, null
  %52 = and i1 %10, %51
  br i1 %52, label %53, label %102

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*)***
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 26
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %50) #9
  br i1 %58, label %59, label %102

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 5, i32 0
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8
  %65 = lshr i160 %64, 86
  %66 = trunc i160 %65 to i32
  %67 = and i32 %66, 7
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %59
  %70 = add nsw i32 %67, -3
  %71 = icmp ult i32 %70, 3
  %72 = and i160 %64, 2854495385411919762116571938898990272765493248
  %73 = icmp eq i160 %72, 0
  %74 = and i1 %73, %71
  br i1 %74, label %75, label %79

75:                                               ; preds = %69
  %76 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %20) #9
  %77 = load i32, i32* %11, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %11, align 8
  br label %102

79:                                               ; preds = %69
  %80 = load i32, i32* %11, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %102

82:                                               ; preds = %79
  %83 = icmp eq i32 %67, 1
  %84 = and i160 %64, 41538374868278621028243970633760768
  %85 = icmp ne i160 %84, 0
  %86 = select i1 %85, i32 14, i32 11
  %87 = select i1 %85, i32 15, i32 12
  %88 = select i1 %83, i32 %86, i32 %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  store i32 %88, i32* %15, align 8
  store i32 0, i32* %16, align 4
  %89 = load i32, i32* %17, align 4
  %90 = load i32, i32* %18, align 8
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %100, label %92, !prof !4

92:                                               ; preds = %82
  %93 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %19, align 8
  %94 = zext i32 %89 to i64
  %95 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %93, i64 %94
  %96 = bitcast %"class.blink::BidiEmbedding"* %95 to i64*
  %97 = load i64, i64* %4, align 8
  store i64 %97, i64* %96, align 4
  %98 = load i32, i32* %17, align 4
  %99 = add i32 %98, 1
  store i32 %99, i32* %17, align 4
  br label %101

100:                                              ; preds = %82
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1728"* %13, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %12) #9
  br label %101

101:                                              ; preds = %100, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %102

102:                                              ; preds = %79, %48, %53, %59, %75, %101
  %103 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %103, label %104, label %212

104:                                              ; preds = %41, %30, %102
  %105 = icmp ne %"class.blink::LayoutObject"* %31, null
  %106 = icmp ne %"class.blink::LayoutObject"* %31, %0
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %236

108:                                              ; preds = %104, %206
  %109 = phi %"class.blink::LayoutObject"* [ %208, %206 ], [ %31, %104 ]
  br i1 %21, label %152, label %110

110:                                              ; preds = %108
  %111 = bitcast %"class.blink::LayoutObject"* %109 to i1 (%"class.blink::LayoutObject"*)***
  %112 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %112, i64 26
  %114 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %113, align 8
  %115 = call zeroext i1 %114(%"class.blink::LayoutObject"* nonnull %109) #9
  br i1 %115, label %116, label %152

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 5, i32 0
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 541598767187353870268366848
  %123 = icmp eq i160 %122, 0
  br i1 %123, label %152, label %124

124:                                              ; preds = %116
  %125 = lshr i160 %121, 86
  %126 = trunc i160 %125 to i32
  %127 = and i32 %126, 7
  %128 = add nsw i32 %127, -3
  %129 = icmp ult i32 %128, 3
  %130 = and i160 %121, 2854495385411919762116571938898990272765493248
  %131 = icmp eq i160 %130, 0
  %132 = and i1 %131, %129
  %133 = load i32, i32* %11, align 8
  br i1 %132, label %134, label %136

134:                                              ; preds = %124
  %135 = add i32 %133, -1
  store i32 %135, i32* %11, align 8
  br label %152

136:                                              ; preds = %124
  %137 = icmp eq i32 %133, 0
  br i1 %137, label %138, label %152

138:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  store i32 16, i32* %24, align 8
  store i32 0, i32* %25, align 4
  %139 = load i32, i32* %17, align 4
  %140 = load i32, i32* %18, align 8
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %150, label %142, !prof !4

142:                                              ; preds = %138
  %143 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %19, align 8
  %144 = zext i32 %139 to i64
  %145 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %143, i64 %144
  %146 = bitcast %"class.blink::BidiEmbedding"* %145 to i64*
  %147 = load i64, i64* %6, align 8
  store i64 %147, i64* %146, align 4
  %148 = load i32, i32* %17, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %17, align 4
  br label %151

150:                                              ; preds = %138
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1728"* %13, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %22) #9
  br label %151

151:                                              ; preds = %150, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %152

152:                                              ; preds = %108, %151, %136, %134, %116, %110
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 9
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = icmp eq %"class.blink::LayoutObject"* %154, null
  br i1 %155, label %206, label %156

156:                                              ; preds = %152
  br i1 %21, label %212, label %157

157:                                              ; preds = %156
  %158 = bitcast %"class.blink::LayoutObject"* %154 to i1 (%"class.blink::LayoutObject"*)***
  %159 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %158, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %159, i64 26
  %161 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %160, align 8
  %162 = call zeroext i1 %161(%"class.blink::LayoutObject"* nonnull %154) #9
  br i1 %162, label %163, label %212

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 5, i32 0
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  %169 = lshr i160 %168, 86
  %170 = trunc i160 %169 to i32
  %171 = and i32 %170, 7
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %212, label %173

173:                                              ; preds = %163
  %174 = add nsw i32 %171, -3
  %175 = icmp ult i32 %174, 3
  %176 = and i160 %168, 2854495385411919762116571938898990272765493248
  %177 = icmp eq i160 %176, 0
  %178 = and i1 %177, %175
  br i1 %178, label %179, label %183

179:                                              ; preds = %173
  %180 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %20) #9
  %181 = load i32, i32* %11, align 8
  %182 = add i32 %181, 1
  store i32 %182, i32* %11, align 8
  br label %212

183:                                              ; preds = %173
  %184 = load i32, i32* %11, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %212

186:                                              ; preds = %183
  %187 = icmp eq i32 %171, 1
  %188 = and i160 %168, 41538374868278621028243970633760768
  %189 = icmp ne i160 %188, 0
  %190 = select i1 %189, i32 14, i32 11
  %191 = select i1 %189, i32 15, i32 12
  %192 = select i1 %187, i32 %190, i32 %191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  store i32 %192, i32* %28, align 8
  store i32 0, i32* %29, align 4
  %193 = load i32, i32* %17, align 4
  %194 = load i32, i32* %18, align 8
  %195 = icmp eq i32 %193, %194
  br i1 %195, label %204, label %196, !prof !4

196:                                              ; preds = %186
  %197 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %19, align 8
  %198 = zext i32 %193 to i64
  %199 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %197, i64 %198
  %200 = bitcast %"class.blink::BidiEmbedding"* %199 to i64*
  %201 = load i64, i64* %5, align 8
  store i64 %201, i64* %200, align 4
  %202 = load i32, i32* %17, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %17, align 4
  br label %205

204:                                              ; preds = %186
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1728"* %13, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %26) #9
  br label %205

205:                                              ; preds = %204, %196
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %212

206:                                              ; preds = %152
  %207 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 7
  %208 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %207, align 8
  %209 = icmp ne %"class.blink::LayoutObject"* %208, null
  %210 = icmp ne %"class.blink::LayoutObject"* %208, %0
  %211 = and i1 %209, %210
  br i1 %211, label %108, label %236

212:                                              ; preds = %205, %179, %163, %157, %156, %183, %102
  %213 = phi %"class.blink::LayoutObject"* [ %50, %102 ], [ %154, %183 ], [ %154, %156 ], [ %154, %157 ], [ %154, %163 ], [ %154, %179 ], [ %154, %205 ]
  %214 = ptrtoint %"class.blink::LayoutObject"* %213 to i64
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %213, i64 0, i32 4
  %216 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %215 to i96*
  %217 = load i96, i96* %216, align 4
  %218 = and i96 %217, 113336795588871485128704
  %219 = icmp eq i96 %218, 75557863725914323419136
  %220 = and i96 %217, 1115684864
  %221 = icmp ne i96 %220, 0
  %222 = or i1 %221, %219
  br i1 %222, label %232, label %223

223:                                              ; preds = %212
  %224 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %213) #9
  br i1 %224, label %225, label %231

225:                                              ; preds = %223
  %226 = bitcast %"class.blink::LayoutObject"* %213 to i1 (%"class.blink::LayoutObject"*)***
  %227 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %226, align 8
  %228 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %227, i64 26
  %229 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %228, align 8
  %230 = call zeroext i1 %229(%"class.blink::LayoutObject"* nonnull %213) #9
  br i1 %230, label %234, label %231

231:                                              ; preds = %225, %223
  br label %30

232:                                              ; preds = %212
  %233 = ptrtoint %"class.blink::LayoutObject"* %213 to i64
  br label %236

234:                                              ; preds = %225
  %235 = ptrtoint %"class.blink::LayoutObject"* %213 to i64
  br label %236

236:                                              ; preds = %232, %234, %104, %206, %3
  %237 = phi i64 [ 0, %3 ], [ 0, %206 ], [ %233, %232 ], [ %235, %234 ], [ 0, %104 ]
  %238 = inttoptr i64 %237 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %238
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1728"*, %"class.blink::BidiEmbedding"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %8 = icmp ugt %"class.blink::BidiEmbedding"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %7, i64 %10
  %12 = icmp ugt %"class.blink::BidiEmbedding"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1728"* %0, i32 %5) #9
  %14 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::BidiEmbedding"* %1 to i64
  %17 = ptrtoint %"class.blink::BidiEmbedding"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1728"* %0, i32 %5) #9
  %20 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::BidiEmbedding"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::BidiEmbedding"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %23, i64 %26
  %28 = bitcast %"class.blink::BidiEmbedding"* %24 to i64*
  %29 = bitcast %"class.blink::BidiEmbedding"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1728"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %31, align 8
  %33 = icmp eq %"class.blink::BidiEmbedding"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1728"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1728"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1728"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1728"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %5, align 8
  %7 = icmp eq %"class.blink::BidiEmbedding"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::BidiEmbedding"*
  %10 = icmp eq %"class.blink::BidiEmbedding"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1728"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1728"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::BidiEmbedding"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1729"* %19, %"class.blink::BidiEmbedding"* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::BidiEmbedding"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::BidiEmbedding"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #9
  %46 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::BidiEmbedding"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::BidiEmbedding"*
  %51 = icmp eq %"class.blink::BidiEmbedding"* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1729"* %53, %"class.blink::BidiEmbedding"* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1728"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1728", %"class.WTF::Vector.1728"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1729"*, %"class.blink::BidiEmbedding"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::BidiEmbedding"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow28CanContainFirstFormattedLineEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1804"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %31, align 8
  %33 = icmp eq %"class.blink::LineLayoutItem"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14LineLayoutItemEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14LineLayoutItemEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1804"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1804"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1804"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1804"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %5, align 8
  %7 = icmp eq %"class.blink::LineLayoutItem"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LineLayoutItem"*
  %10 = icmp eq %"class.blink::LineLayoutItem"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1804"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1804"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LineLayoutItem"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #9
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1805"* %19, %"class.blink::LineLayoutItem"* nonnull %6) #9
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14LineLayoutItemEEEmm(i64 %30) #9
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14LineLayoutItemEEEPKcv, i64 0, i64 0)) #9
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LineLayoutItem"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LineLayoutItem"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #9
  %46 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LineLayoutItem"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LineLayoutItem"*
  %51 = icmp eq %"class.blink::LineLayoutItem"* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1805"* %53, %"class.blink::LineLayoutItem"* %48) #9
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1804"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14LineLayoutItemEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1805"*, %"class.blink::LineLayoutItem"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::LineLayoutItem"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"*, %"class.blink::InlineIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ugt i32 %4, %6
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = add i32 %6, 10
  %10 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %9
  br i1 %12, label %13, label %52

13:                                               ; preds = %8
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !3

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %23, align 8
  %25 = icmp eq %"class.blink::InlineIterator"* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InlineIteratorEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.blink::MidpointState"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 24
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = udiv i64 %27, 24
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::InlineIterator"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::InlineIterator"* %37 to i8*
  br i1 %40, label %42, label %48, !prof !3

42:                                               ; preds = %34
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %45, i1 false) #9
  %46 = bitcast %"class.blink::MidpointState"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #9
  %50 = bitcast %"class.blink::MidpointState"* %0 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %8
  %53 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %53, align 8
  %55 = load i32, i32* %3, align 4
  %56 = zext i32 %9 to i64
  %57 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 %56
  %58 = icmp eq i32 %55, %9
  br i1 %58, label %69, label %59

59:                                               ; preds = %52
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 %60
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi %"class.blink::InlineIterator"* [ %67, %62 ], [ %61, %59 ]
  %64 = bitcast %"class.blink::InlineIterator"* %63 to i8*
  %65 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %63, i64 0, i32 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9
  store i32 -1, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %63, i64 0, i32 3
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %63, i64 1
  %68 = icmp eq %"class.blink::InlineIterator"* %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %52
  store i32 %9, i32* %3, align 4
  %70 = load i32, i32* %5, align 8
  br label %71

71:                                               ; preds = %2, %69
  %72 = phi i32 [ %6, %2 ], [ %70, %69 ]
  %73 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %73, align 8
  %75 = add i32 %72, 1
  store i32 %75, i32* %5, align 8
  %76 = zext i32 %72 to i64
  %77 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %74, i64 %76
  %78 = bitcast %"class.blink::InlineIterator"* %77 to i8*
  %79 = bitcast %"class.blink::InlineIterator"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink39InlineLogicalWidthFromAncestorsIfNeededENS_14LineLayoutItemEbbNS_21CollapsibleWhiteSpaceE(%"class.blink::LayoutObject"*, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #1 comdat {
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %6 = bitcast %"class.blink::LayoutObject"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = inttoptr i64 %7 to %"class.blink::LayoutObject"*
  %9 = inttoptr i64 %7 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 26
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #9
  br i1 %13, label %14, label %116

14:                                               ; preds = %4
  %15 = zext i1 %2 to i8
  %16 = zext i1 %1 to i8
  %17 = ptrtoint %"class.blink::LayoutObject"* %0 to i64
  %18 = icmp eq i32 %3, 1
  br label %19

19:                                               ; preds = %14, %103
  %20 = phi %"class.blink::LayoutObject"* [ %8, %14 ], [ %110, %103 ]
  %21 = phi i64 [ %7, %14 ], [ %109, %103 ]
  %22 = phi i32 [ 1, %14 ], [ %27, %103 ]
  %23 = phi i32 [ 0, %14 ], [ %106, %103 ]
  %24 = phi i64 [ %17, %14 ], [ %21, %103 ]
  %25 = phi i8 [ %15, %14 ], [ %105, %103 ]
  %26 = phi i8 [ %16, %14 ], [ %104, %103 ]
  %27 = add nuw nsw i32 %22, 1
  %28 = icmp eq i32 %22, 200
  br i1 %28, label %116, label %29

29:                                               ; preds = %19
  %30 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %20)
  br i1 %30, label %103, label %31

31:                                               ; preds = %29
  %32 = icmp eq i8 %26, 0
  br i1 %32, label %65, label %33

33:                                               ; preds = %31
  %34 = inttoptr i64 %24 to %"class.blink::LayoutObject"*
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 8
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %57, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 33554432
  %43 = icmp eq i96 %42, 0
  br i1 %43, label %65, label %44

44:                                               ; preds = %38
  br i1 %18, label %45, label %48

45:                                               ; preds = %44
  %46 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutText"*
  %47 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* nonnull %46) #9
  br i1 %47, label %57, label %48

48:                                               ; preds = %45, %44
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 1, i32 4, i32 0, i64 4
  %50 = bitcast i8* %49 to %"class.WTF::StringImpl"**
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %33, %45, %53, %48
  %58 = tail call i32 @_ZN5blink24BorderPaddingMarginStartENS_16LineLayoutInlineE(%"class.blink::LayoutObject"* %20)
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %58) #9
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !4
  br label %65

65:                                               ; preds = %53, %38, %31, %57
  %66 = phi i8 [ 0, %31 ], [ %26, %57 ], [ 0, %38 ], [ 0, %53 ]
  %67 = phi i32 [ %23, %31 ], [ %64, %57 ], [ %23, %38 ], [ %23, %53 ]
  %68 = icmp eq i8 %25, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %65
  %70 = inttoptr i64 %24 to %"class.blink::LayoutObject"*
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 9
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %93, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 33554432
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %101, label %80

80:                                               ; preds = %74
  br i1 %18, label %81, label %84

81:                                               ; preds = %80
  %82 = bitcast %"class.blink::LayoutObject"* %72 to %"class.blink::LayoutText"*
  %83 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* nonnull %82) #9
  br i1 %83, label %93, label %84

84:                                               ; preds = %81, %80
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 1, i32 4, i32 0, i64 4
  %86 = bitcast i8* %85 to %"class.WTF::StringImpl"**
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %101

93:                                               ; preds = %84, %89, %81, %69
  %94 = tail call i32 @_ZN5blink22BorderPaddingMarginEndENS_16LineLayoutInlineE(%"class.blink::LayoutObject"* %20)
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %94) #9
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !4
  br label %103

101:                                              ; preds = %89, %74, %65
  %102 = icmp eq i8 %66, 0
  br i1 %102, label %116, label %103

103:                                              ; preds = %93, %101, %29
  %104 = phi i8 [ %26, %29 ], [ %66, %101 ], [ %66, %93 ]
  %105 = phi i8 [ %25, %29 ], [ 0, %101 ], [ %25, %93 ]
  %106 = phi i32 [ %23, %29 ], [ %67, %101 ], [ %100, %93 ]
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %108 = bitcast %"class.blink::LayoutObject"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = inttoptr i64 %109 to %"class.blink::LayoutObject"*
  %111 = inttoptr i64 %109 to i1 (%"class.blink::LayoutObject"*)***
  %112 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %112, i64 26
  %114 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* %110) #9
  br i1 %115, label %19, label %116

116:                                              ; preds = %103, %101, %19, %4
  %117 = phi i32 [ 0, %4 ], [ %67, %101 ], [ %23, %19 ], [ %106, %103 ]
  ret i32 %117
}

declare void @_ZN5blink15LayoutBlockFlow31SetStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1190036353683150593851392
  %14 = icmp eq i160 %13, 340010386766614455386112
  %15 = and i96 %4, 8589934592
  %16 = icmp eq i96 %15, 0
  %17 = or i1 %14, %16
  br i1 %6, label %18, label %78

18:                                               ; preds = %1
  br i1 %17, label %43, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #9
  %22 = icmp eq %"class.blink::PaintLayerScrollableArea"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #9
  %25 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 3
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %30, align 8
  %32 = icmp eq %"class.blink::Scrollbar"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %29, %23
  %34 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #9
  %35 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %40, align 8
  %42 = icmp eq %"class.blink::Scrollbar"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %33, %18
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 270215977642229760
  %49 = icmp eq i160 %48, 0
  br label %50

50:                                               ; preds = %19, %29, %39, %43
  %51 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %19 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 124
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #9
  br i1 %51, label %69, label %58

58:                                               ; preds = %50
  %59 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #9
  %60 = extractvalue { i64, i64 } %59, 1
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %62) #9
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !4
  br label %69

69:                                               ; preds = %50, %58
  %70 = phi i32 [ %68, %58 ], [ %57, %50 ]
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, i64 120
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %52) #9
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %74) #9
  br label %137

78:                                               ; preds = %1
  br i1 %17, label %103, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %81 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #9
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #9
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 3
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 1, i32 0, i32 0
  %91 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %90, align 8
  %92 = icmp eq %"class.blink::Scrollbar"* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %89, %83
  %94 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #9
  %95 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 3
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %100, align 8
  %102 = icmp eq %"class.blink::Scrollbar"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %93, %78
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = and i160 %107, 270215977642229760
  %109 = icmp eq i160 %108, 0
  br label %110

110:                                              ; preds = %79, %89, %99, %103
  %111 = phi i1 [ false, %99 ], [ false, %89 ], [ false, %79 ], [ %109, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %113 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %112) #9
  br i1 %111, label %128, label %118

118:                                              ; preds = %110
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #9
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %121) #9
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !4
  br label %128

128:                                              ; preds = %110, %118
  %129 = phi i32 [ %127, %118 ], [ %117, %110 ]
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, i64 118
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %112) #9
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %133) #9
  br label %137

137:                                              ; preds = %128, %69
  %138 = phi { i32, i1 } [ %136, %128 ], [ %77, %69 ]
  %139 = phi i32 [ %135, %128 ], [ %76, %69 ]
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = extractvalue { i32, i1 } %138, 0
  %142 = select i1 %140, i32 %139, i32 %141
  ret i32 %142
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #3

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #9
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #9
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #9
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #9
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #9
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #9
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #9
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #9
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #9
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #9
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1804"*, %"class.blink::LineLayoutItem"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1804", %"class.WTF::Vector.1804"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %6, align 8
  %8 = icmp ugt %"class.blink::LineLayoutItem"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %7, i64 %10
  %12 = icmp ugt %"class.blink::LineLayoutItem"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1804"* %0, i32 %5) #9
  %14 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::LineLayoutItem"* %1 to i64
  %17 = ptrtoint %"class.blink::LineLayoutItem"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink14LineLayoutItemELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1804"* %0, i32 %5) #9
  %20 = load %"class.blink::LineLayoutItem"*, %"class.blink::LineLayoutItem"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::LineLayoutItem"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::LineLayoutItem"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %23, i64 %26
  %28 = bitcast %"class.blink::LineLayoutItem"* %24 to i64*
  %29 = bitcast %"class.blink::LineLayoutItem"* %27 to i64*
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13LineLayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.1712"*, %"class.blink::LineLayoutBox"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %6, align 8
  %8 = icmp ugt %"class.blink::LineLayoutBox"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %7, i64 %10
  %12 = icmp ugt %"class.blink::LineLayoutBox"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LineLayoutBox"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13LineLayoutBoxEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13LineLayoutBoxEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LineLayoutBox"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LineLayoutBox"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LineLayoutBox"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.1712"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LineLayoutBox"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LineLayoutBox"* %1 to i64
  %56 = ptrtoint %"class.blink::LineLayoutBox"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1712", %"class.WTF::Vector.1712"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LineLayoutBox"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13LineLayoutBoxEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13LineLayoutBoxEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LineLayoutBox"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LineLayoutBox"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.1712"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.1712"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LineLayoutBox"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LineLayoutBox"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LineLayoutBox"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LineLayoutBox"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %100, i64 %103
  %105 = bitcast %"class.blink::LineLayoutBox"* %101 to i64*
  %106 = bitcast %"class.blink::LineLayoutBox"* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13LineLayoutBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink24BorderPaddingMarginStartENS_16LineLayoutInlineE(%"class.blink::LayoutObject"*) local_unnamed_addr #1 comdat {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !31
  %7 = bitcast %"class.blink::LayoutObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #9
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !34
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !34
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #9
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #9
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !4
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !37
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !37
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #9
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #9
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  ret i32 %105
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink22BorderPaddingMarginEndENS_16LineLayoutInlineE(%"class.blink::LayoutObject"*) local_unnamed_addr #1 comdat {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !40
  %7 = bitcast %"class.blink::LayoutObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #9
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !43
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !43
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #9
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #9
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !4
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !46
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !46
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #9
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #9
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  ret i32 %105
}

declare %"class.blink::FloatingObject"* @_ZNK5blink15LayoutBlockFlow15LastPlacedFloatEPN3WTF24ListHashSetConstIteratorINS1_11ListHashSetINSt3__110unique_ptrINS_14FloatingObjectENS4_14default_deleteIS6_EEEELm4ENS_27FloatingObjectHashFunctionsENS1_28MallocedListHashSetAllocatorIS9_Lj4EEEEEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::ListHashSetConstIterator"*) local_unnamed_addr #3

declare i32 @_ZN5blink15LayoutBlockFlow22PositionAndLayoutFloatERNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"* dereferenceable(40), i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink36ShouldSkipWhitespaceAfterStartObjectENS_19LineLayoutBlockFlowENS_14LineLayoutItemERNS_13MidpointStateINS_14InlineIteratorEEE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::MidpointState"* dereferenceable(32)) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.blink::InlineIterator", align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %5, label %262, label %6

6:                                                ; preds = %3, %58
  %7 = phi %"class.blink::LayoutObject"* [ %41, %58 ], [ %1, %3 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 113336795588871485128704
  %12 = icmp eq i96 %11, 75557863725914323419136
  %13 = and i96 %10, 1115684864
  %14 = icmp ne i96 %13, 0
  %15 = or i1 %14, %12
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %18 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %18, i64 13
  %20 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %19, align 8
  %21 = tail call %"class.blink::LayoutObjectChildList"* %20(%"class.blink::LayoutObject"* nonnull %7) #9
  %22 = icmp eq %"class.blink::LayoutObjectChildList"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %21, i64 0, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %27, label %40

27:                                               ; preds = %23, %16, %6
  %28 = icmp eq %"class.blink::LayoutObject"* %7, %0
  br i1 %28, label %262, label %29

29:                                               ; preds = %27, %34
  %30 = phi %"class.blink::LayoutObject"* [ %36, %34 ], [ %7, %27 ]
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 9
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutObject"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp ne %"class.blink::LayoutObject"* %36, null
  %38 = icmp ne %"class.blink::LayoutObject"* %36, %0
  %39 = and i1 %37, %38
  br i1 %39, label %29, label %262

40:                                               ; preds = %29, %23
  %41 = phi %"class.blink::LayoutObject"* [ %25, %23 ], [ %32, %29 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 4
  %43 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %42 to i96*
  %44 = load i96, i96* %43, align 4
  %45 = and i96 %44, 113336795588871485128704
  %46 = icmp eq i96 %45, 75557863725914323419136
  %47 = and i96 %44, 1115684864
  %48 = icmp ne i96 %47, 0
  %49 = or i1 %48, %46
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %41) #9
  br i1 %51, label %52, label %58

52:                                               ; preds = %50
  %53 = bitcast %"class.blink::LayoutObject"* %41 to i1 (%"class.blink::LayoutObject"*)***
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 26
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* nonnull %41) #9
  br i1 %57, label %59, label %58

58:                                               ; preds = %52, %50
  br label %6

59:                                               ; preds = %40, %52
  %60 = icmp eq %"class.blink::LayoutObject"* %41, null
  br i1 %60, label %262, label %61

61:                                               ; preds = %59, %128
  %62 = phi %"class.blink::LayoutObject"* [ %108, %128 ], [ %41, %59 ]
  %63 = ptrtoint %"class.blink::LayoutObject"* %62 to i64
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 8388608
  %68 = icmp ne i96 %67, 0
  %69 = and i96 %66, 113336795588871485128704
  %70 = icmp eq i96 %69, 75557863725914323419136
  %71 = or i1 %70, %68
  br i1 %71, label %74, label %72

72:                                               ; preds = %61
  %73 = ptrtoint %"class.blink::LayoutObject"* %62 to i64
  br label %130

74:                                               ; preds = %61, %126
  %75 = phi i96 [ %127, %126 ], [ %66, %61 ]
  %76 = phi %"class.blink::LayoutObject"* [ %108, %126 ], [ %62, %61 ]
  %77 = phi i64 [ %109, %126 ], [ %63, %61 ]
  %78 = and i96 %75, 113336795588871485128704
  %79 = icmp eq i96 %78, 75557863725914323419136
  %80 = and i96 %75, 1115684864
  %81 = icmp ne i96 %80, 0
  %82 = or i1 %81, %79
  br i1 %82, label %94, label %83

83:                                               ; preds = %74
  %84 = inttoptr i64 %77 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %85 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %85, i64 13
  %87 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %86, align 8
  %88 = tail call %"class.blink::LayoutObjectChildList"* %87(%"class.blink::LayoutObject"* nonnull %76) #9
  %89 = icmp eq %"class.blink::LayoutObjectChildList"* %88, null
  br i1 %89, label %94, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %88, i64 0, i32 0
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = icmp eq %"class.blink::LayoutObject"* %92, null
  br i1 %93, label %94, label %107

94:                                               ; preds = %90, %83, %74
  %95 = icmp eq %"class.blink::LayoutObject"* %76, %0
  br i1 %95, label %262, label %96

96:                                               ; preds = %94, %101
  %97 = phi %"class.blink::LayoutObject"* [ %103, %101 ], [ %76, %94 ]
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 9
  %99 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutObject"* %99, null
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 7
  %103 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, align 8
  %104 = icmp ne %"class.blink::LayoutObject"* %103, null
  %105 = icmp ne %"class.blink::LayoutObject"* %103, %0
  %106 = and i1 %104, %105
  br i1 %106, label %96, label %262

107:                                              ; preds = %96, %90
  %108 = phi %"class.blink::LayoutObject"* [ %92, %90 ], [ %99, %96 ]
  %109 = ptrtoint %"class.blink::LayoutObject"* %108 to i64
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 4
  %111 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %110 to i96*
  %112 = load i96, i96* %111, align 4
  %113 = and i96 %112, 113336795588871485128704
  %114 = icmp eq i96 %113, 75557863725914323419136
  %115 = and i96 %112, 1115684864
  %116 = icmp ne i96 %115, 0
  %117 = or i1 %116, %114
  br i1 %117, label %128, label %118

118:                                              ; preds = %107
  %119 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %108) #9
  br i1 %119, label %120, label %126

120:                                              ; preds = %118
  %121 = bitcast %"class.blink::LayoutObject"* %108 to i1 (%"class.blink::LayoutObject"*)***
  %122 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %122, i64 26
  %124 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.blink::LayoutObject"* nonnull %108) #9
  br i1 %125, label %128, label %126

126:                                              ; preds = %120, %118
  %127 = load i96, i96* %111, align 4
  br label %74

128:                                              ; preds = %107, %120
  %129 = icmp eq %"class.blink::LayoutObject"* %108, null
  br i1 %129, label %262, label %61

130:                                              ; preds = %72, %201
  %131 = phi %"class.blink::LayoutObject"* [ %202, %201 ], [ %62, %72 ]
  %132 = phi i64 [ %203, %201 ], [ %73, %72 ]
  %133 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %131)
  br i1 %133, label %134, label %205

134:                                              ; preds = %130
  %135 = inttoptr i64 %132 to %"class.blink::LayoutInline"*
  %136 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %135, i64 0, i32 1, i32 0
  %137 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %136, align 8
  %138 = icmp eq %"class.blink::LayoutObject"* %137, null
  br i1 %138, label %139, label %201

139:                                              ; preds = %134, %193
  %140 = phi %"class.blink::LayoutObject"* [ %175, %193 ], [ %131, %134 ]
  %141 = phi i64 [ %176, %193 ], [ %132, %134 ]
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 113336795588871485128704
  %146 = icmp eq i96 %145, 75557863725914323419136
  %147 = and i96 %144, 1115684864
  %148 = icmp ne i96 %147, 0
  %149 = or i1 %148, %146
  br i1 %149, label %161, label %150

150:                                              ; preds = %139
  %151 = inttoptr i64 %141 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %152 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %151, align 8
  %153 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %152, i64 13
  %154 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %153, align 8
  %155 = tail call %"class.blink::LayoutObjectChildList"* %154(%"class.blink::LayoutObject"* nonnull %140) #9
  %156 = icmp eq %"class.blink::LayoutObjectChildList"* %155, null
  br i1 %156, label %161, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %155, i64 0, i32 0
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %158, align 8
  %160 = icmp eq %"class.blink::LayoutObject"* %159, null
  br i1 %160, label %161, label %174

161:                                              ; preds = %157, %150, %139
  %162 = icmp eq %"class.blink::LayoutObject"* %140, %0
  br i1 %162, label %198, label %163

163:                                              ; preds = %161, %168
  %164 = phi %"class.blink::LayoutObject"* [ %170, %168 ], [ %140, %161 ]
  %165 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 9
  %166 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %165, align 8
  %167 = icmp eq %"class.blink::LayoutObject"* %166, null
  br i1 %167, label %168, label %174

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 7
  %170 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %169, align 8
  %171 = icmp ne %"class.blink::LayoutObject"* %170, null
  %172 = icmp ne %"class.blink::LayoutObject"* %170, %0
  %173 = and i1 %171, %172
  br i1 %173, label %163, label %198

174:                                              ; preds = %163, %157
  %175 = phi %"class.blink::LayoutObject"* [ %159, %157 ], [ %166, %163 ]
  %176 = ptrtoint %"class.blink::LayoutObject"* %175 to i64
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 0, i32 4
  %178 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %177 to i96*
  %179 = load i96, i96* %178, align 4
  %180 = and i96 %179, 113336795588871485128704
  %181 = icmp eq i96 %180, 75557863725914323419136
  %182 = and i96 %179, 1115684864
  %183 = icmp ne i96 %182, 0
  %184 = or i1 %183, %181
  br i1 %184, label %196, label %185

185:                                              ; preds = %174
  %186 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %175) #9
  br i1 %186, label %187, label %193

187:                                              ; preds = %185
  %188 = bitcast %"class.blink::LayoutObject"* %175 to i1 (%"class.blink::LayoutObject"*)***
  %189 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %189, i64 26
  %191 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %190, align 8
  %192 = tail call zeroext i1 %191(%"class.blink::LayoutObject"* nonnull %175) #9
  br i1 %192, label %194, label %193

193:                                              ; preds = %187, %185
  br label %139

194:                                              ; preds = %187
  %195 = ptrtoint %"class.blink::LayoutObject"* %175 to i64
  br label %198

196:                                              ; preds = %174
  %197 = ptrtoint %"class.blink::LayoutObject"* %175 to i64
  br label %198

198:                                              ; preds = %161, %168, %194, %196
  %199 = phi i64 [ %195, %194 ], [ %197, %196 ], [ 0, %168 ], [ 0, %161 ]
  %200 = inttoptr i64 %199 to %"class.blink::LayoutObject"*
  br label %201

201:                                              ; preds = %134, %198
  %202 = phi %"class.blink::LayoutObject"* [ %200, %198 ], [ %137, %134 ]
  %203 = ptrtoint %"class.blink::LayoutObject"* %202 to i64
  %204 = icmp eq %"class.blink::LayoutObject"* %202, null
  br i1 %204, label %262, label %130

205:                                              ; preds = %130
  %206 = inttoptr i64 %132 to i1 (%"class.blink::LayoutObject"*, i32)***
  %207 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %206, align 8
  %208 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %207, i64 92
  %209 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %208, align 8
  %210 = tail call zeroext i1 %209(%"class.blink::LayoutObject"* nonnull %131, i32 0) #9
  br i1 %210, label %262, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 4
  %213 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %212 to i96*
  %214 = load i96, i96* %213, align 4
  %215 = and i96 %214, 33554432
  %216 = icmp eq i96 %215, 0
  br i1 %216, label %262, label %217

217:                                              ; preds = %211
  %218 = inttoptr i64 %132 to %"class.blink::LayoutText"*
  %219 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %218, i64 0, i32 7, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = icmp eq %"class.WTF::StringImpl"* %220, null
  br i1 %221, label %262, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %262, label %226

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 1
  br i1 %230, label %236, label %232

232:                                              ; preds = %226
  %233 = bitcast %"class.WTF::StringImpl"* %231 to i8*
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i16
  br label %239

236:                                              ; preds = %226
  %237 = bitcast %"class.WTF::StringImpl"* %231 to i16*
  %238 = load i16, i16* %237, align 2
  br label %239

239:                                              ; preds = %232, %236
  %240 = phi i16 [ %235, %232 ], [ %238, %236 ]
  %241 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 5, i32 0
  %242 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %241, align 8
  switch i16 %240, label %262 [
    i16 32, label %250
    i16 9, label %250
    i16 10, label %243
  ]

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %242, i64 0, i32 0, i32 9
  %245 = bitcast [20 x i8]* %244 to i160*
  %246 = load i160, i160* %245, align 8
  %247 = lshr i160 %246, 12
  %248 = trunc i160 %247 to i32
  %249 = and i32 %248, 127
  switch i32 %249, label %262 [
    i32 16, label %256
    i32 1, label %256
  ]

250:                                              ; preds = %239, %239
  %251 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %242, i64 0, i32 0, i32 9
  %252 = bitcast [20 x i8]* %251 to i160*
  %253 = load i160, i160* %252, align 8
  %254 = and i160 %253, 286720
  %255 = icmp eq i160 %254, 0
  br i1 %255, label %256, label %262

256:                                              ; preds = %243, %243, %250
  %257 = bitcast %"class.blink::InlineIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #9
  %258 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %258, align 8
  %259 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 1, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %259, align 8
  %260 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 2
  store i32 -1, i32* %260, align 8
  %261 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 3
  store i32 0, i32* %261, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %2, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #9
  br label %262

262:                                              ; preds = %27, %34, %128, %94, %101, %201, %3, %59, %211, %243, %239, %217, %205, %250, %222, %256
  %263 = phi i1 [ true, %256 ], [ false, %222 ], [ false, %243 ], [ false, %250 ], [ false, %211 ], [ false, %205 ], [ false, %217 ], [ false, %239 ], [ false, %59 ], [ false, %3 ], [ false, %201 ], [ false, %101 ], [ false, %94 ], [ false, %128 ], [ false, %34 ], [ false, %27 ]
  ret i1 %263
}

declare void @_ZN5blink9LineWidth20UpdateAvailableWidthENS_10LayoutUnitE(%"class.blink::LineWidth"*, i32) local_unnamed_addr #3

declare void @_ZN5blink9LineWidth6CommitEv(%"class.blink::LineWidth"*) local_unnamed_addr #3

declare void @_ZN5blink9LineWidth13ApplyOverhangENS_17LineLayoutRubyRunENS_14LineLayoutItemES2_(%"class.blink::LineWidth"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13LayoutRubyRun14CanBreakBeforeERKNS_21LazyLineBreakIteratorE(%"class.blink::LayoutRubyRun"*, %"class.blink::LazyLineBreakIterator"* dereferenceable(64)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #9
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21LazyLineBreakIterator29ResetStringAndReleaseIteratorEN3WTF6StringERKNS1_12AtomicStringE(%"class.blink::LazyLineBreakIterator"*, %"class.WTF::StringImpl"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %3
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.blink::LazyLineBreakIterator"* %0 to i64*
  %25 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #9
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !4

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %41
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::AtomicString"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %83

83:                                               ; preds = %64, %79, %82
  %84 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 2
  %85 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %84, align 8
  %86 = icmp eq %"class.icu_69::BreakIterator"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %85) #9
  br label %88

88:                                               ; preds = %83, %87
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %84, align 8
  %89 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 0
  store i16* null, i16** %89, align 8
  %90 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %90, align 8
  br i1 %4, label %104, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #9
  br label %104

104:                                              ; preds = %88, %100, %103
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*) local_unnamed_addr #3

declare void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), i16*, i32, %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext23PrepareForNextCharacterERKNS_14LineLayoutTextERbb(%"class.blink::BreakingContext"*, %"class.blink::LineLayoutText"* dereferenceable(8), i8* dereferenceable(1), i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %5 = alloca %"class.blink::InlineIterator", align 8
  %6 = alloca %"class.blink::InlineIterator", align 8
  %7 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8, i32 65) #9
  br i1 %13, label %14, label %44

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %44, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::LineLayoutText"* %1 to %"class.blink::LayoutSVGInlineText"**
  %20 = load %"class.blink::LayoutSVGInlineText"*, %"class.blink::LayoutSVGInlineText"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink19LayoutSVGInlineText27CharacterStartsNewTextChunkEi(%"class.blink::LayoutSVGInlineText"* %20, i32 %16) #9
  br i1 %21, label %22, label %44

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %24 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %23, align 8
  %25 = bitcast %"class.blink::InlineIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %27 = bitcast %"class.blink::LayoutObject"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load i32, i32* %15, align 4
  %30 = add i32 %29, -1
  %31 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 1, i32 0
  %33 = bitcast %"class.blink::LayoutObject"** %32 to i64*
  store i64 %28, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 2
  store i32 -1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 3
  store i32 %30, i32* %35, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %24, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  %36 = bitcast %"class.blink::InlineIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %37 = load i64, i64* %27, align 8
  %38 = load i32, i32* %15, align 4
  %39 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %6, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %6, i64 0, i32 1, i32 0
  %41 = bitcast %"class.blink::LayoutObject"** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %6, i64 0, i32 2
  store i32 -1, i32* %42, align 8
  %43 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %6, i64 0, i32 3
  store i32 %38, i32* %43, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %24, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  br label %44

44:                                               ; preds = %14, %18, %22, %4
  %45 = load i8, i8* %2, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::LineLayoutText"* %1 to %"class.blink::LayoutText"**
  %49 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %49, i64 0, i32 7, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %47, %53
  %57 = phi i32 [ %55, %53 ], [ 0, %47 ]
  %58 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  store i32 %57, i32* %58, align 8
  store i8 0, i8* %2, align 1
  br label %59

59:                                               ; preds = %44, %56
  %60 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 20
  %65 = load i8, i8* %64, align 2, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %69 = bitcast %"class.blink::LayoutObject"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 3, i32 1, i32 0
  %72 = bitcast %"class.blink::LayoutObject"** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 3, i32 3
  store i32 %74, i32* %75, align 4
  br label %76

76:                                               ; preds = %63, %59, %67
  %77 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 18
  %78 = load i8, i8* %77, align 4, !range !2
  %79 = icmp ne i8 %78, 0
  %80 = xor i1 %3, true
  %81 = or i1 %79, %80
  br i1 %81, label %114, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %84 = load i8, i8* %83, align 2, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %114, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8
  %92 = and i160 %91, 278528
  %93 = icmp eq i160 %92, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 1, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %96, i64 0, i32 23
  %98 = bitcast [5 x i8]* %97 to i40*
  %99 = load i40, i40* %98, align 8
  %100 = and i40 %99, 896
  %101 = icmp eq i40 %100, 512
  br i1 %101, label %102, label %114

102:                                              ; preds = %86, %94
  %103 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %104 = bitcast %"class.blink::LayoutObject"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %109 = load i32, i32* %108, align 8
  %110 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %111 = bitcast %"class.blink::LayoutObject"** %110 to i64*
  store i64 %105, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %107, i32* %112, align 4
  %113 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %109, i32* %113, align 8
  br label %114

114:                                              ; preds = %76, %82, %94, %102
  %115 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %116 = load i8, i8* %115, align 1, !range !2
  %117 = icmp eq i8 %116, 0
  %118 = or i1 %62, %117
  br i1 %118, label %129, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %121 = load i8, i8* %120, align 2, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %125 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %126 = bitcast %"class.blink::LayoutObject"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::TrailingObjects"* %124 to i64*
  store i64 %127, i64* %128, align 8
  br label %142

129:                                              ; preds = %114, %119
  %130 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %131, i64 0, i32 0, i32 9
  %133 = bitcast [20 x i8]* %132 to i160*
  %134 = load i160, i160* %133, align 8
  %135 = and i160 %134, 286720
  %136 = icmp ne i160 %135, 0
  %137 = or i1 %62, %136
  br i1 %137, label %138, label %142

138:                                              ; preds = %129
  %139 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32
  %140 = bitcast %"class.blink::TrailingObjects"* %139 to i64*
  store i64 0, i64* %140, align 8
  %141 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 32, i32 1, i32 0, i32 0, i32 2
  store i32 0, i32* %141, align 4
  br label %142

142:                                              ; preds = %129, %138, %123
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::WordMeasurement"* @_ZN5blink15BreakingContext18CalculateWordWidthERN3WTF6VectorINS_15WordMeasurementELj64ENS1_18PartitionAllocatorEEERNS_14LineLayoutTextEjRffRKNS_4FontEfDs(%"class.blink::BreakingContext"*, %"class.WTF::Vector.1795"* dereferenceable(4112), %"class.blink::LineLayoutText"* dereferenceable(8), i32, float* dereferenceable(4), float, %"class.blink::Font"* dereferenceable(88), float, i16 zeroext) local_unnamed_addr #1 comdat align 2 {
  %10 = alloca %"class.blink::TextRun", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, 1
  %15 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %16, %14
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %19, align 8
  %21 = zext i32 %14 to i64
  %22 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %20, i64 %21
  br label %30

23:                                               ; preds = %9
  tail call void @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1795"* %1, i32 %14) #9
  %24 = load i32, i32* %12, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %25, align 8
  %27 = zext i32 %14 to i64
  %28 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %26, i64 %27
  %29 = icmp eq i32 %24, %14
  br i1 %29, label %110, label %30

30:                                               ; preds = %18, %23
  %31 = phi %"class.blink::WordMeasurement"* [ %22, %18 ], [ %28, %23 ]
  %32 = phi %"class.blink::WordMeasurement"* [ %20, %18 ], [ %26, %23 ]
  %33 = phi i32 [ %13, %18 ], [ %24, %23 ]
  %34 = ptrtoint %"class.blink::WordMeasurement"* %32 to i64
  %35 = zext i32 %33 to i64
  %36 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %32, i64 %35
  %37 = xor i64 %35, -1
  %38 = getelementptr %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %31, i64 %37, i32 0, i32 0, i32 0
  %39 = ptrtoint %"class.blink::LayoutObject"** %38 to i64
  %40 = sub i64 %39, %34
  %41 = lshr i64 %40, 6
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %30, %45
  %46 = phi %"class.blink::WordMeasurement"* [ %53, %45 ], [ %36, %30 ]
  %47 = phi i64 [ %54, %45 ], [ %43, %30 ]
  %48 = bitcast %"class.blink::WordMeasurement"* %46 to i8*
  %49 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %46, i64 0, i32 5
  %50 = bitcast %"class.WTF::HashSet.1798"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 20, i1 false) #9
  %51 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %46, i64 0, i32 6
  %52 = bitcast %"class.blink::FloatRect"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 20, i1 false) #9
  %53 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %46, i64 1
  %54 = add i64 %47, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %45, !llvm.loop !49

56:                                               ; preds = %45, %30
  %57 = phi %"class.blink::WordMeasurement"* [ %36, %30 ], [ %53, %45 ]
  %58 = icmp ult i64 %40, 448
  br i1 %58, label %110, label %59

59:                                               ; preds = %56, %59
  %60 = phi %"class.blink::WordMeasurement"* [ %108, %59 ], [ %57, %56 ]
  %61 = bitcast %"class.blink::WordMeasurement"* %60 to i8*
  %62 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 0, i32 5
  %63 = bitcast %"class.WTF::HashSet.1798"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 20, i1 false) #9
  %64 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 0, i32 6
  %65 = bitcast %"class.blink::FloatRect"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 20, i1 false) #9
  %66 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 1
  %67 = bitcast %"class.blink::WordMeasurement"* %66 to i8*
  %68 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 1, i32 5
  %69 = bitcast %"class.WTF::HashSet.1798"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 20, i1 false) #9
  %70 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 1, i32 6
  %71 = bitcast %"class.blink::FloatRect"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %71, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 20, i1 false) #9
  %72 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 2
  %73 = bitcast %"class.blink::WordMeasurement"* %72 to i8*
  %74 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 2, i32 5
  %75 = bitcast %"class.WTF::HashSet.1798"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 20, i1 false) #9
  %76 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 2, i32 6
  %77 = bitcast %"class.blink::FloatRect"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 20, i1 false) #9
  %78 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 3
  %79 = bitcast %"class.blink::WordMeasurement"* %78 to i8*
  %80 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 3, i32 5
  %81 = bitcast %"class.WTF::HashSet.1798"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 20, i1 false) #9
  %82 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 3, i32 6
  %83 = bitcast %"class.blink::FloatRect"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 20, i1 false) #9
  %84 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 4
  %85 = bitcast %"class.blink::WordMeasurement"* %84 to i8*
  %86 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 4, i32 5
  %87 = bitcast %"class.WTF::HashSet.1798"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 20, i1 false) #9
  %88 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 4, i32 6
  %89 = bitcast %"class.blink::FloatRect"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 20, i1 false) #9
  %90 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 5
  %91 = bitcast %"class.blink::WordMeasurement"* %90 to i8*
  %92 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 5, i32 5
  %93 = bitcast %"class.WTF::HashSet.1798"* %92 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 20, i1 false) #9
  %94 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 5, i32 6
  %95 = bitcast %"class.blink::FloatRect"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 20, i1 false) #9
  %96 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 6
  %97 = bitcast %"class.blink::WordMeasurement"* %96 to i8*
  %98 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 6, i32 5
  %99 = bitcast %"class.WTF::HashSet.1798"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 20, i1 false) #9
  %100 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 6, i32 6
  %101 = bitcast %"class.blink::FloatRect"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %101, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 20, i1 false) #9
  %102 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 7
  %103 = bitcast %"class.blink::WordMeasurement"* %102 to i8*
  %104 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 7, i32 5
  %105 = bitcast %"class.WTF::HashSet.1798"* %104 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 20, i1 false) #9
  %106 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 7, i32 6
  %107 = bitcast %"class.blink::FloatRect"* %106 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %107, i8 0, i64 16, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 20, i1 false) #9
  %108 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %60, i64 8
  %109 = icmp eq %"class.blink::WordMeasurement"* %108, %31
  br i1 %109, label %110, label %59

110:                                              ; preds = %56, %59, %23
  store i32 %14, i32* %12, align 4
  %111 = tail call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1795"* %1, i32 %13) #9
  %112 = bitcast %"class.blink::LineLayoutText"* %2 to i64*
  %113 = bitcast %"class.blink::WordMeasurement"* %111 to i64*
  %114 = load i64, i64* %112, align 8
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 3
  store i32 %116, i32* %117, align 8
  %118 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 2
  store i32 %3, i32* %118, align 4
  %119 = fcmp une float %7, 0.000000e+00
  %120 = icmp eq i16 %8, 32
  %121 = and i1 %119, %120
  %122 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %2, i64 0, i32 0, i32 0
  %123 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %122, align 8
  %124 = load i32, i32* %115, align 4
  br i1 %121, label %125, label %217

125:                                              ; preds = %110
  %126 = sub i32 1, %3
  %127 = add i32 %126, %124
  %128 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %129 = load float, float* %128, align 4
  %130 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %131 = load float, float* %130, align 8
  %132 = fadd float %129, %131
  %133 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %134 = load i8, i8* %133, align 1, !range !2
  %135 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 5
  %136 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 6
  %137 = icmp eq i32 %3, 0
  br i1 %137, label %138, label %153

138:                                              ; preds = %125
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 1, i32 4, i32 0, i64 4
  %140 = bitcast i8* %139 to %"class.WTF::StringImpl"**
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  br label %146

146:                                              ; preds = %143, %138
  %147 = phi i32 [ %145, %143 ], [ 0, %138 ]
  %148 = icmp eq i32 %147, %127
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 0, i32 5, i32 0
  %151 = bitcast %"class.blink::ComputedStyle"** %150 to %"class.blink::ComputedStyleBase"**
  %152 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %151, align 8
  br label %165

153:                                              ; preds = %146, %125
  %154 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 0, i32 5, i32 0
  %155 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %155, i64 0, i32 0, i32 1, i32 0, i32 0
  %157 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %157, i64 0, i32 23
  %159 = bitcast [5 x i8]* %158 to i40*
  %160 = load i40, i40* %159, align 8
  %161 = and i40 %160, 4294967296
  %162 = icmp eq i40 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %153
  %164 = bitcast %"class.blink::ComputedStyle"* %155 to %"class.blink::ComputedStyleBase"*
  br label %165

165:                                              ; preds = %163, %149
  %166 = phi %"class.blink::ComputedStyleBase"* [ %152, %149 ], [ %164, %163 ]
  %167 = fmul float %132, 6.400000e+01
  %168 = fcmp ult float %167, 0xC1E0000000000000
  %169 = fcmp ugt float %167, 0x41DFFFFFE0000000
  %170 = fcmp ogt float %167, 0xC1E0000000000000
  %171 = select i1 %170, float %167, float 0xC1E0000000000000
  %172 = fptosi float %171 to i32
  %173 = select i1 %168, i32 0, i32 2147483647
  %174 = select i1 %169, i32 %173, i32 %172
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %166, i64 0, i32 9
  %176 = bitcast [20 x i8]* %175 to i160*
  %177 = load i160, i160* %176, align 8
  %178 = lshr i160 %177, 115
  %179 = trunc i160 %178 to i8
  %180 = and i8 %179, 1
  %181 = bitcast %"class.blink::LayoutObject"* %123 to %"class.blink::LayoutText"*
  %182 = bitcast %"class.blink::LayoutObject"* %123 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %183 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %182, align 8
  %184 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %183, i64 111
  %185 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %184, align 8
  %186 = tail call float %185(%"class.blink::LayoutText"* %181, i32 %3, i32 %127, %"class.blink::Font"* dereferenceable(88) %6, i32 %174, i8 zeroext %180, %"class.WTF::HashSet.1798"* %135, %"class.blink::FloatRect"* %136, float 0.000000e+00) #9
  br label %214

187:                                              ; preds = %153
  %188 = bitcast %"class.blink::TextRun"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %188) #9
  %189 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %189, align 8
  %190 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %190, align 4
  %191 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 5
  store i16 -21846, i16* %191, align 8
  %192 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 0
  store i8 -86, i8* %192, align 2
  %193 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 6, i64 1
  store i8 -86, i8* %193, align 1
  %194 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %194, align 4
  %195 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7, i32 1
  %196 = bitcast i8* %195 to i64*
  store i64 -6148914691236517206, i64* %196, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %10, %"class.blink::Font"* dereferenceable(88) %6, %"class.blink::LayoutObject"* %123, i32 %3, i32 %127, %"class.blink::ComputedStyle"* dereferenceable(104) %155) #9
  %197 = bitcast %"class.blink::ComputedStyle"** %154 to %"class.blink::ComputedStyleBase"**
  %198 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %198, i64 0, i32 1, i32 0, i32 0
  %200 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %200, i64 0, i32 15
  %202 = bitcast %"struct.blink::TabSize"* %201 to i64*
  %203 = load i64, i64* %202, align 4
  %204 = load i16, i16* %191, align 8
  %205 = shl nuw nsw i8 %134, 3
  %206 = xor i8 %205, 8
  %207 = zext i8 %206 to i16
  %208 = and i16 %204, -9
  %209 = or i16 %208, %207
  store i16 %209, i16* %191, align 8
  %210 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %10, i64 0, i32 7
  %211 = bitcast %"struct.blink::TabSize"* %210 to i40*
  %212 = trunc i64 %203 to i40
  store i40 %212, i40* %211, align 4
  store float %132, float* %189, align 8
  %213 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %6, %"class.blink::TextRun"* nonnull dereferenceable(40) %10, %"class.WTF::HashSet.1798"* %135, %"class.blink::FloatRect"* %136) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %188) #9
  br label %214

214:                                              ; preds = %165, %187
  %215 = phi float [ %186, %165 ], [ %213, %187 ]
  %216 = fsub float %215, %7
  br label %305

217:                                              ; preds = %110
  %218 = sub i32 %124, %3
  %219 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %220 = load float, float* %219, align 4
  %221 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %222 = load float, float* %221, align 8
  %223 = fadd float %220, %222
  %224 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %225 = load i8, i8* %224, align 1, !range !2
  %226 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 5
  %227 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 6
  %228 = icmp eq i32 %3, 0
  br i1 %228, label %229, label %244

229:                                              ; preds = %217
  %230 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 1, i32 4, i32 0, i64 4
  %231 = bitcast i8* %230 to %"class.WTF::StringImpl"**
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %234, %229
  %238 = phi i32 [ %236, %234 ], [ 0, %229 ]
  %239 = icmp eq i32 %238, %218
  br i1 %239, label %240, label %244

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 0, i32 5, i32 0
  %242 = bitcast %"class.blink::ComputedStyle"** %241 to %"class.blink::ComputedStyleBase"**
  %243 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %242, align 8
  br label %256

244:                                              ; preds = %237, %217
  %245 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %123, i64 0, i32 5, i32 0
  %246 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %246, i64 0, i32 0, i32 1, i32 0, i32 0
  %248 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %248, i64 0, i32 23
  %250 = bitcast [5 x i8]* %249 to i40*
  %251 = load i40, i40* %250, align 8
  %252 = and i40 %251, 4294967296
  %253 = icmp eq i40 %252, 0
  br i1 %253, label %278, label %254

254:                                              ; preds = %244
  %255 = bitcast %"class.blink::ComputedStyle"* %246 to %"class.blink::ComputedStyleBase"*
  br label %256

256:                                              ; preds = %254, %240
  %257 = phi %"class.blink::ComputedStyleBase"* [ %243, %240 ], [ %255, %254 ]
  %258 = fmul float %223, 6.400000e+01
  %259 = fcmp ult float %258, 0xC1E0000000000000
  %260 = fcmp ugt float %258, 0x41DFFFFFE0000000
  %261 = fcmp ogt float %258, 0xC1E0000000000000
  %262 = select i1 %261, float %258, float 0xC1E0000000000000
  %263 = fptosi float %262 to i32
  %264 = select i1 %259, i32 0, i32 2147483647
  %265 = select i1 %260, i32 %264, i32 %263
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %257, i64 0, i32 9
  %267 = bitcast [20 x i8]* %266 to i160*
  %268 = load i160, i160* %267, align 8
  %269 = lshr i160 %268, 115
  %270 = trunc i160 %269 to i8
  %271 = and i8 %270, 1
  %272 = bitcast %"class.blink::LayoutObject"* %123 to %"class.blink::LayoutText"*
  %273 = bitcast %"class.blink::LayoutObject"* %123 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %274 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %273, align 8
  %275 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %274, i64 111
  %276 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %275, align 8
  %277 = tail call float %276(%"class.blink::LayoutText"* %272, i32 %3, i32 %218, %"class.blink::Font"* dereferenceable(88) %6, i32 %265, i8 zeroext %271, %"class.WTF::HashSet.1798"* %226, %"class.blink::FloatRect"* %227, float 0.000000e+00) #9
  br label %305

278:                                              ; preds = %244
  %279 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %279) #9
  %280 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %280, align 8
  %281 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %281, align 4
  %282 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 5
  store i16 -21846, i16* %282, align 8
  %283 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 0
  store i8 -86, i8* %283, align 2
  %284 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 1
  store i8 -86, i8* %284, align 1
  %285 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %285, align 4
  %286 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 1
  %287 = bitcast i8* %286 to i64*
  store i64 -6148914691236517206, i64* %287, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::Font"* dereferenceable(88) %6, %"class.blink::LayoutObject"* %123, i32 %3, i32 %218, %"class.blink::ComputedStyle"* dereferenceable(104) %246) #9
  %288 = bitcast %"class.blink::ComputedStyle"** %245 to %"class.blink::ComputedStyleBase"**
  %289 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %289, i64 0, i32 1, i32 0, i32 0
  %291 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %290, align 8
  %292 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %291, i64 0, i32 15
  %293 = bitcast %"struct.blink::TabSize"* %292 to i64*
  %294 = load i64, i64* %293, align 4
  %295 = load i16, i16* %282, align 8
  %296 = shl nuw nsw i8 %225, 3
  %297 = xor i8 %296, 8
  %298 = zext i8 %297 to i16
  %299 = and i16 %295, -9
  %300 = or i16 %299, %298
  store i16 %300, i16* %282, align 8
  %301 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7
  %302 = bitcast %"struct.blink::TabSize"* %301 to i40*
  %303 = trunc i64 %294 to i40
  store i40 %303, i40* %302, align 4
  store float %223, float* %280, align 8
  %304 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %6, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.WTF::HashSet.1798"* %226, %"class.blink::FloatRect"* %227) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %279) #9
  br label %305

305:                                              ; preds = %278, %256, %214
  %306 = phi float [ %216, %214 ], [ %277, %256 ], [ %304, %278 ]
  store float %306, float* %4, align 4
  %307 = fadd float %306, %5
  %308 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 1
  store float %307, float* %308, align 8
  %309 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 6, i32 0, i32 0
  %310 = load float, float* %309, align 4
  %311 = fadd float %310, %5
  store float %311, float* %309, align 4
  %312 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %111, i64 0, i32 6, i32 0, i32 1
  %313 = load float, float* %312, align 4
  %314 = fadd float %313, 0.000000e+00
  store float %314, float* %312, align 4
  ret %"class.blink::WordMeasurement"* %111
}

declare void @_ZN5blink9LineWidth14FitBelowFloatsEb(%"class.blink::LineWidth"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15BreakingContext20CanBreakAtWhitespaceEbRNS_15WordMeasurementEbfRbbRfbbbbfRKNS_14LineLayoutTextERKNS_4FontEbf(%"class.blink::BreakingContext"*, i1 zeroext, %"class.blink::WordMeasurement"* dereferenceable(64), i1 zeroext, float, i8* dereferenceable(1), i1 zeroext, float* dereferenceable(4), i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, float, %"class.blink::LineLayoutText"* dereferenceable(8), %"class.blink::Font"* dereferenceable(88), i1 zeroext, float) local_unnamed_addr #1 comdat align 2 {
  %18 = alloca %"class.blink::InlineIterator", align 8
  %19 = alloca %"class.blink::InlineIterator", align 8
  %20 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 25
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = or i1 %22, %1
  br i1 %23, label %24, label %390

24:                                               ; preds = %17
  br i1 %9, label %51, label %25

25:                                               ; preds = %24
  %26 = fcmp une float %16, 0.000000e+00
  %27 = tail call zeroext i1 @_ZN5blink15BreakingContext34TrailingSpaceExceedsAvailableWidthEbRKNS_14LineLayoutTextERNS_15WordMeasurementEbbRKNS_4FontE(%"class.blink::BreakingContext"* %0, i1 zeroext %10, %"class.blink::LineLayoutText"* dereferenceable(8) %13, %"class.blink::WordMeasurement"* dereferenceable(64) %2, i1 zeroext %15, i1 zeroext %26, %"class.blink::Font"* dereferenceable(88) %14)
  br i1 %27, label %51, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %32 = load float, float* %31, align 8
  %33 = fadd float %30, %32
  %34 = fmul float %33, 6.400000e+01
  %35 = tail call float @llvm.floor.f32(float %34) #9
  %36 = fcmp ult float %35, 0xC1E0000000000000
  %37 = fcmp ugt float %35, 0x41DFFFFFE0000000
  %38 = fcmp ogt float %35, 0xC1E0000000000000
  %39 = select i1 %38, float %35, float 0xC1E0000000000000
  %40 = fptosi float %39 to i32
  %41 = select i1 %36, i32 0, i32 2147483647
  %42 = select i1 %37, i32 %41, i32 %40
  %43 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  %47 = fadd float %46, 1.562500e-02
  %48 = sitofp i32 %42 to float
  %49 = fmul float %48, 1.562500e-02
  %50 = fcmp ugt float %49, %47
  br i1 %50, label %51, label %381

51:                                               ; preds = %28, %25, %24
  %52 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1
  %53 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %52, i64 0, i32 0
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %250, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::LayoutObject"* %54 to i1 (%"class.blink::LayoutObject"*, i32)***
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* nonnull %54, i32 65) #9
  br i1 %61, label %250, label %62

62:                                               ; preds = %56
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8
  %69 = lshr i160 %68, 12
  %70 = trunc i160 %69 to i32
  %71 = and i32 %70, 127
  %72 = bitcast %"class.blink::LayoutObject"* %63 to %"class.blink::LayoutText"*
  switch i32 %71, label %73 [
    i32 16, label %250
    i32 1, label %250
  ]

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = and i96 %76, 33554432
  %78 = icmp eq i96 %77, 0
  br i1 %78, label %250, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.blink::LineLayoutItem"* %52 to %"class.blink::LayoutText"**
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 1, i32 4, i32 0, i64 4
  %82 = bitcast i8* %81 to %"class.WTF::StringImpl"**
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %250, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %250, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.blink::LayoutObject"* %63 to i1 (%"class.blink::LayoutText"*)***
  %91 = load i1 (%"class.blink::LayoutText"*)**, i1 (%"class.blink::LayoutText"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %91, i64 107
  %93 = load i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutText"* %72) #9
  br i1 %94, label %250, label %95

95:                                               ; preds = %89
  %96 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %80, align 8
  %97 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %96, i64 0, i32 7, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  %102 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %96, i64 0, i32 0
  br i1 %101, label %250, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp ugt i32 %105, %98
  br i1 %106, label %107, label %250

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 1
  br i1 %111, label %119, label %113

113:                                              ; preds = %107
  %114 = bitcast %"class.WTF::StringImpl"* %112 to i8*
  %115 = zext i32 %98 to i64
  %116 = getelementptr inbounds i8, i8* %114, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i16
  br label %124

119:                                              ; preds = %107
  %120 = bitcast %"class.WTF::StringImpl"* %112 to i16*
  %121 = zext i32 %98 to i64
  %122 = getelementptr inbounds i16, i16* %120, i64 %121
  %123 = load i16, i16* %122, align 2
  br label %124

124:                                              ; preds = %113, %119
  %125 = phi i16 [ %118, %113 ], [ %123, %119 ]
  %126 = icmp eq i16 %125, 10
  br i1 %126, label %127, label %250

127:                                              ; preds = %124
  br i1 %3, label %155, label %128

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %155, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 31
  %134 = load %"class.blink::MidpointState"*, %"class.blink::MidpointState"** %133, align 8
  %135 = bitcast %"class.blink::InlineIterator"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #9
  %136 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %137 = bitcast %"class.blink::LayoutObject"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = add i32 %130, -1
  %140 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %140, align 8
  %141 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 1, i32 0
  %142 = bitcast %"class.blink::LayoutObject"** %141 to i64*
  store i64 %138, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 2
  store i32 -1, i32* %143, align 8
  %144 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 3
  store i32 %139, i32* %144, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %134, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %18) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #9
  %145 = bitcast %"class.blink::InlineIterator"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #9
  %146 = load i64, i64* %137, align 8
  %147 = load i32, i32* %129, align 4
  %148 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %19, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %148, align 8
  %149 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %19, i64 0, i32 1, i32 0
  %150 = bitcast %"class.blink::LayoutObject"** %149 to i64*
  store i64 %146, i64* %150, align 8
  %151 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %19, i64 0, i32 2
  store i32 -1, i32* %151, align 8
  %152 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %19, i64 0, i32 3
  store i32 %147, i32* %152, align 4
  call void @_ZN5blink13MidpointStateINS_14InlineIteratorEE11AddMidpointERKS1_(%"class.blink::MidpointState"* %134, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %19) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #9
  %153 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  br label %155

155:                                              ; preds = %128, %132, %127
  %156 = phi %"class.blink::LayoutObject"* [ %102, %128 ], [ %154, %132 ], [ %102, %127 ]
  %157 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %158 = icmp eq %"class.blink::LayoutObject"* %156, null
  br i1 %158, label %244, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 4
  %161 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %160 to i96*
  %162 = load i96, i96* %161, align 4
  %163 = and i96 %162, 33554432
  %164 = icmp eq i96 %163, 0
  br i1 %164, label %180, label %165

165:                                              ; preds = %159
  %166 = load i32, i32* %97, align 4
  %167 = icmp ult i32 %166, 2147483647
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = add nuw nsw i32 %166, 1
  store i32 %169, i32* %97, align 4
  br label %170

170:                                              ; preds = %168, %165
  %171 = phi i32 [ %166, %165 ], [ %169, %168 ]
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 1, i32 4, i32 0, i64 4
  %173 = bitcast i8* %172 to %"class.WTF::StringImpl"**
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %180, label %176

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %174, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp ult i32 %171, %178
  br i1 %179, label %244, label %180

180:                                              ; preds = %159, %170, %176
  %181 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %181, align 8
  br label %183

183:                                              ; preds = %235, %180
  %184 = phi %"class.blink::LayoutObject"* [ %156, %180 ], [ %218, %235 ]
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %184, i64 0, i32 4
  %186 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %185 to i96*
  %187 = load i96, i96* %186, align 4
  %188 = and i96 %187, 113336795588871485128704
  %189 = icmp eq i96 %188, 75557863725914323419136
  %190 = and i96 %187, 1115684864
  %191 = icmp ne i96 %190, 0
  %192 = or i1 %191, %189
  br i1 %192, label %204, label %193

193:                                              ; preds = %183
  %194 = bitcast %"class.blink::LayoutObject"* %184 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %195 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %194, align 8
  %196 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %195, i64 13
  %197 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %196, align 8
  %198 = call %"class.blink::LayoutObjectChildList"* %197(%"class.blink::LayoutObject"* nonnull %184) #9
  %199 = icmp eq %"class.blink::LayoutObjectChildList"* %198, null
  br i1 %199, label %204, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %198, i64 0, i32 0
  %202 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %201, align 8
  %203 = icmp eq %"class.blink::LayoutObject"* %202, null
  br i1 %203, label %204, label %217

204:                                              ; preds = %200, %193, %183
  %205 = icmp eq %"class.blink::LayoutObject"* %184, %182
  br i1 %205, label %240, label %206

206:                                              ; preds = %204, %211
  %207 = phi %"class.blink::LayoutObject"* [ %213, %211 ], [ %184, %204 ]
  %208 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %207, i64 0, i32 9
  %209 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %208, align 8
  %210 = icmp eq %"class.blink::LayoutObject"* %209, null
  br i1 %210, label %211, label %217

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %207, i64 0, i32 7
  %213 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %212, align 8
  %214 = icmp ne %"class.blink::LayoutObject"* %213, null
  %215 = icmp ne %"class.blink::LayoutObject"* %213, %182
  %216 = and i1 %214, %215
  br i1 %216, label %206, label %240

217:                                              ; preds = %206, %200
  %218 = phi %"class.blink::LayoutObject"* [ %202, %200 ], [ %209, %206 ]
  %219 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %218, i64 0, i32 4
  %220 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %219 to i96*
  %221 = load i96, i96* %220, align 4
  %222 = and i96 %221, 113336795588871485128704
  %223 = icmp eq i96 %222, 75557863725914323419136
  %224 = and i96 %221, 1115684864
  %225 = icmp ne i96 %224, 0
  %226 = or i1 %225, %223
  br i1 %226, label %238, label %227

227:                                              ; preds = %217
  %228 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %218) #9
  br i1 %228, label %229, label %235

229:                                              ; preds = %227
  %230 = bitcast %"class.blink::LayoutObject"* %218 to i1 (%"class.blink::LayoutObject"*)***
  %231 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %230, align 8
  %232 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %231, i64 26
  %233 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %232, align 8
  %234 = call zeroext i1 %233(%"class.blink::LayoutObject"* nonnull %218) #9
  br i1 %234, label %236, label %235

235:                                              ; preds = %229, %227
  br label %183

236:                                              ; preds = %229
  %237 = ptrtoint %"class.blink::LayoutObject"* %218 to i64
  br label %240

238:                                              ; preds = %217
  %239 = ptrtoint %"class.blink::LayoutObject"* %218 to i64
  br label %240

240:                                              ; preds = %204, %211, %236, %238
  %241 = phi i64 [ %237, %236 ], [ %239, %238 ], [ 0, %211 ], [ 0, %204 ]
  %242 = inttoptr i64 %241 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %242, %"class.blink::LayoutObject"** %157, align 8
  store i32 0, i32* %97, align 4
  %243 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %243, align 8
  br label %244

244:                                              ; preds = %155, %176, %240
  %245 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %246 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %246, i64 0, i32 3
  store i8 1, i8* %247, align 1
  %248 = load i32, i32* %97, align 4
  %249 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2, i64 0, i32 3
  store i32 %248, i32* %249, align 8
  br label %250

250:                                              ; preds = %95, %103, %79, %56, %51, %62, %62, %73, %85, %89, %244, %124
  %251 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 0
  %252 = load %"class.blink::BidiResolver"*, %"class.blink::BidiResolver"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %252, i64 0, i32 0, i32 3
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %254, %256
  br i1 %257, label %258, label %264

258:                                              ; preds = %250
  %259 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %260 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %252, i64 0, i32 0, i32 1, i32 0
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %261, align 8
  %263 = icmp eq %"class.blink::LayoutObject"* %260, %262
  br i1 %263, label %303, label %264

264:                                              ; preds = %258, %250
  %265 = icmp eq i32 %254, 0
  br i1 %265, label %365, label %266

266:                                              ; preds = %264
  %267 = add i32 %254, -1
  %268 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %269 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %268, align 8
  %270 = icmp eq %"class.blink::LayoutObject"* %269, null
  br i1 %270, label %353, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %269, i64 0, i32 4
  %273 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %272 to i96*
  %274 = load i96, i96* %273, align 4
  %275 = and i96 %274, 33554432
  %276 = icmp eq i96 %275, 0
  br i1 %276, label %353, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %269, i64 1, i32 4, i32 0, i64 4
  %279 = bitcast i8* %278 to %"class.WTF::StringImpl"**
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %353, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = icmp ugt i32 %284, %267
  br i1 %285, label %286, label %353

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 1
  br i1 %290, label %298, label %292

292:                                              ; preds = %286
  %293 = bitcast %"class.WTF::StringImpl"* %291 to i8*
  %294 = zext i32 %267 to i64
  %295 = getelementptr inbounds i8, i8* %293, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i16
  br label %344

298:                                              ; preds = %286
  %299 = bitcast %"class.WTF::StringImpl"* %291 to i16*
  %300 = zext i32 %267 to i64
  %301 = getelementptr inbounds i16, i16* %299, i64 %300
  %302 = load i16, i16* %301, align 2
  br label %344

303:                                              ; preds = %258
  %304 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %305 = load i32, i32* %304, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %350, label %307

307:                                              ; preds = %303
  %308 = add i32 %305, -1
  %309 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %310 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %309, align 8
  %311 = icmp eq %"class.blink::LayoutObject"* %310, null
  br i1 %311, label %350, label %312

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %310, i64 0, i32 4
  %314 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %313 to i96*
  %315 = load i96, i96* %314, align 4
  %316 = and i96 %315, 33554432
  %317 = icmp eq i96 %316, 0
  br i1 %317, label %350, label %318

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %310, i64 1, i32 4, i32 0, i64 4
  %320 = bitcast i8* %319 to %"class.WTF::StringImpl"**
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %350, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 4
  %326 = icmp ugt i32 %325, %308
  br i1 %326, label %327, label %350

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 1
  br i1 %331, label %339, label %333

333:                                              ; preds = %327
  %334 = bitcast %"class.WTF::StringImpl"* %332 to i8*
  %335 = zext i32 %308 to i64
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = zext i8 %337 to i16
  br label %344

339:                                              ; preds = %327
  %340 = bitcast %"class.WTF::StringImpl"* %332 to i16*
  %341 = zext i32 %308 to i64
  %342 = getelementptr inbounds i16, i16* %340, i64 %341
  %343 = load i16, i16* %342, align 2
  br label %344

344:                                              ; preds = %292, %298, %333, %339
  %345 = phi i16 [ %297, %292 ], [ %302, %298 ], [ %338, %333 ], [ %343, %339 ]
  %346 = icmp ne i16 %345, 173
  %347 = or i1 %346, %6
  br i1 %347, label %350, label %348

348:                                              ; preds = %344
  store i8 1, i8* %5, align 1
  %349 = load i32, i32* %253, align 4
  br label %350

350:                                              ; preds = %318, %323, %307, %312, %303, %344, %348
  %351 = phi i32 [ %254, %318 ], [ %254, %323 ], [ %254, %307 ], [ %254, %312 ], [ %254, %303 ], [ %254, %344 ], [ %349, %348 ]
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %365, label %353

353:                                              ; preds = %271, %266, %282, %277, %350
  %354 = phi i32 [ %351, %350 ], [ %254, %277 ], [ %254, %282 ], [ %254, %266 ], [ %254, %271 ]
  %355 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2, i64 0, i32 3
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %354, %356
  br i1 %357, label %365, label %358

358:                                              ; preds = %353
  %359 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %2, i64 0, i32 1
  %360 = load float, float* %359, align 8
  %361 = fcmp oeq float %360, 0.000000e+00
  %362 = fcmp une float %4, 0.000000e+00
  %363 = and i1 %362, %361
  br i1 %363, label %364, label %365

364:                                              ; preds = %358
  store i32 %354, i32* %355, align 8
  store float %4, float* %359, align 8
  br label %365

365:                                              ; preds = %264, %353, %350, %358, %364
  %366 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 16
  %367 = load i8, i8* %366, align 2, !range !2
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %369, label %379

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %371 = load i8, i8* %370, align 1, !range !2
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %379, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %375 = load i8, i8* %374, align 1, !range !2
  %376 = icmp eq i8 %375, 0
  %377 = xor i1 %11, true
  %378 = or i1 %376, %377
  br i1 %378, label %379, label %390

379:                                              ; preds = %373, %369, %365
  %380 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 30
  store i8 1, i8* %380, align 1
  br label %390

381:                                              ; preds = %28
  br i1 %8, label %384, label %382

382:                                              ; preds = %381
  %383 = fsub float %32, %12
  store float %383, float* %31, align 8
  br label %384

384:                                              ; preds = %381, %382
  %385 = phi float [ %32, %381 ], [ %383, %382 ]
  %386 = load float, float* %7, align 4
  %387 = fcmp une float %386, 0.000000e+00
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = fsub float %385, %386
  store float %389, float* %31, align 8
  store float 0.000000e+00, float* %7, align 4
  br label %390

390:                                              ; preds = %388, %384, %373, %17, %379
  %391 = phi i1 [ true, %379 ], [ false, %17 ], [ false, %373 ], [ false, %384 ], [ false, %388 ]
  ret i1 %391
}

declare void @_ZN5blink15TrailingObjects33UpdateMidpointsForTrailingObjectsERNS_13MidpointStateINS_14InlineIteratorEEERKS2_NS0_23CollapseFirstSpaceOrNotE(%"class.blink::TrailingObjects"*, %"class.blink::MidpointState"* dereferenceable(32), %"class.blink::InlineIterator"* dereferenceable(24), i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #3

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext, i32) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare i32 @u_charDirection_69(i32) local_unnamed_addr #3

declare void @_ZN5blink31NonSharedCharacterBreakIteratorC1ERKN3WTF10StringViewE(%"class.blink::NonSharedCharacterBreakIterator"*, %"class.WTF::StringView"* dereferenceable(24)) unnamed_addr #3

declare i32 @_ZNK5blink31NonSharedCharacterBreakIterator9FollowingEi(%"class.blink::NonSharedCharacterBreakIterator"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink31NonSharedCharacterBreakIteratorD1Ev(%"class.blink::NonSharedCharacterBreakIterator"*) unnamed_addr #4

declare i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::WordMeasurement"* @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %24, i64 %25
  ret %"class.blink::WordMeasurement"* %26
}

declare zeroext i1 @_ZNK5blink19LayoutSVGInlineText27CharacterStartsNewTextChunkEi(%"class.blink::LayoutSVGInlineText"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink10LayoutText22ContainsOnlyWhitespaceEjj(%"class.blink::LayoutText"*, i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink15FontDescription29MinimumPrefixWidthToHyphenateEv(%"class.blink::FontDescription"*) local_unnamed_addr #3

declare void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.blink::LayoutObject"*, i32, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

declare i32 @_ZNK5blink4Font17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), float, i32, i32) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink4Font17GetCharacterRangeERKNS_7TextRunEjj(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.blink::FloatPoint"* dereferenceable(8), float, i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEj(%"class.blink::LazyLineBreakIterator"*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15BreakingContext34TrailingSpaceExceedsAvailableWidthEbRKNS_14LineLayoutTextERNS_15WordMeasurementEbbRKNS_4FontE(%"class.blink::BreakingContext"*, i1 zeroext, %"class.blink::LineLayoutText"* dereferenceable(8), %"class.blink::WordMeasurement"* dereferenceable(64), i1 zeroext, i1 zeroext, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1 comdat align 2 {
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = icmp eq %"class.blink::LayoutObject"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 33554432
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 1, i32 4, i32 0, i64 4
  %22 = bitcast i8* %21 to %"class.WTF::StringImpl"**
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ugt i32 %27, %10
  br i1 %28, label %29, label %46

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  br i1 %33, label %41, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.WTF::StringImpl"* %34 to i8*
  %37 = zext i32 %10 to i64
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  br label %46

41:                                               ; preds = %29
  %42 = bitcast %"class.WTF::StringImpl"* %34 to i16*
  %43 = zext i32 %10 to i64
  %44 = getelementptr inbounds i16, i16* %42, i64 %43
  %45 = load i16, i16* %44, align 2
  br label %46

46:                                               ; preds = %7, %14, %20, %25, %35, %41
  %47 = phi i16 [ 0, %14 ], [ 0, %7 ], [ 0, %25 ], [ %40, %35 ], [ %45, %41 ], [ 0, %20 ]
  %48 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 2
  %49 = load float, float* %48, align 4
  %50 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 1
  %51 = load float, float* %50, align 8
  %52 = fadd float %49, %51
  %53 = fmul float %52, 6.400000e+01
  %54 = tail call float @llvm.floor.f32(float %53) #9
  %55 = fcmp ult float %54, 0xC1E0000000000000
  %56 = fcmp ugt float %54, 0x41DFFFFFE0000000
  %57 = fcmp ogt float %54, 0xC1E0000000000000
  %58 = select i1 %57, float %54, float 0xC1E0000000000000
  %59 = fptosi float %58 to i32
  %60 = select i1 %55, i32 0, i32 2147483647
  %61 = select i1 %56, i32 %60, i32 %59
  %62 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 11, i32 7, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sitofp i32 %63 to float
  %65 = fmul float %64, 1.562500e-02
  %66 = fadd float %65, 1.562500e-02
  %67 = sitofp i32 %61 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = fcmp ugt float %68, %66
  br i1 %69, label %216, label %70

70:                                               ; preds = %46
  %71 = icmp eq i16 %47, 12288
  br i1 %71, label %92, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 17
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %216, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 7
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 278528
  %83 = icmp eq i160 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 1, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %86, i64 0, i32 23
  %88 = bitcast [5 x i8]* %87 to i40*
  %89 = load i40, i40* %88, align 8
  %90 = and i40 %89, 896
  %91 = icmp eq i40 %90, 512
  br i1 %91, label %92, label %216

92:                                               ; preds = %76, %84, %70
  %93 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %2, i64 0, i32 0, i32 0
  %94 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 28
  %96 = load i8, i8* %95, align 1, !range !2
  %97 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %3, i64 0, i32 5
  %98 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %3, i64 0, i32 6
  %99 = icmp eq i32 %10, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 1, i32 4, i32 0, i64 4
  %102 = bitcast i8* %101 to %"class.WTF::StringImpl"**
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 5, i32 0
  %111 = bitcast %"class.blink::ComputedStyle"** %110 to %"class.blink::ComputedStyleBase"**
  %112 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %111, align 8
  br label %125

113:                                              ; preds = %100, %105, %92
  %114 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 5, i32 0
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 1, i32 0, i32 0
  %117 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %117, i64 0, i32 23
  %119 = bitcast [5 x i8]* %118 to i40*
  %120 = load i40, i40* %119, align 8
  %121 = and i40 %120, 4294967296
  %122 = icmp eq i40 %121, 0
  br i1 %122, label %146, label %123

123:                                              ; preds = %113
  %124 = bitcast %"class.blink::ComputedStyle"* %115 to %"class.blink::ComputedStyleBase"*
  br label %125

125:                                              ; preds = %123, %109
  %126 = phi %"class.blink::ComputedStyleBase"* [ %112, %109 ], [ %124, %123 ]
  %127 = fcmp ult float %53, 0xC1E0000000000000
  %128 = fcmp ugt float %53, 0x41DFFFFFE0000000
  %129 = fcmp ogt float %53, 0xC1E0000000000000
  %130 = select i1 %129, float %53, float 0xC1E0000000000000
  %131 = fptosi float %130 to i32
  %132 = select i1 %127, i32 0, i32 2147483647
  %133 = select i1 %128, i32 %132, i32 %131
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %126, i64 0, i32 9
  %135 = bitcast [20 x i8]* %134 to i160*
  %136 = load i160, i160* %135, align 8
  %137 = lshr i160 %136, 115
  %138 = trunc i160 %137 to i8
  %139 = and i8 %138, 1
  %140 = bitcast %"class.blink::LayoutObject"* %94 to %"class.blink::LayoutText"*
  %141 = bitcast %"class.blink::LayoutObject"* %94 to float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)***
  %142 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*** %141, align 8
  %143 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %142, i64 111
  %144 = load float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, %"class.blink::Font"*, i32, i8, %"class.WTF::HashSet.1798"*, %"class.blink::FloatRect"*, float)** %143, align 8
  %145 = tail call float %144(%"class.blink::LayoutText"* %140, i32 %10, i32 1, %"class.blink::Font"* dereferenceable(88) %6, i32 %133, i8 zeroext %139, %"class.WTF::HashSet.1798"* %97, %"class.blink::FloatRect"* %98, float 0.000000e+00) #9
  br label %173

146:                                              ; preds = %113
  %147 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #9
  %148 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 16, i1 false) #9
  store float 0xFFFFFFFFE0000000, float* %148, align 8
  %149 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %149, align 4
  %150 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 5
  store i16 -21846, i16* %150, align 8
  %151 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 0
  store i8 -86, i8* %151, align 2
  %152 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 1
  store i8 -86, i8* %152, align 1
  %153 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %153, align 4
  %154 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 1
  %155 = bitcast i8* %154 to i64*
  store i64 -6148914691236517206, i64* %155, align 4
  call void @_ZN5blink16ConstructTextRunERKNS_4FontENS_14LineLayoutTextEjjRKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %8, %"class.blink::Font"* dereferenceable(88) %6, %"class.blink::LayoutObject"* %94, i32 %10, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %115) #9
  %156 = bitcast %"class.blink::ComputedStyle"** %114 to %"class.blink::ComputedStyleBase"**
  %157 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %157, i64 0, i32 1, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %159, i64 0, i32 15
  %161 = bitcast %"struct.blink::TabSize"* %160 to i64*
  %162 = load i64, i64* %161, align 4
  %163 = load i16, i16* %150, align 8
  %164 = shl nuw nsw i8 %96, 3
  %165 = xor i8 %164, 8
  %166 = zext i8 %165 to i16
  %167 = and i16 %163, -9
  %168 = or i16 %167, %166
  store i16 %168, i16* %150, align 8
  %169 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7
  %170 = bitcast %"struct.blink::TabSize"* %169 to i40*
  %171 = trunc i64 %162 to i40
  store i40 %171, i40* %170, align 4
  store float %52, float* %148, align 8
  %172 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %6, %"class.blink::TextRun"* nonnull dereferenceable(40) %8, %"class.WTF::HashSet.1798"* %97, %"class.blink::FloatRect"* %98) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #9
  br label %173

173:                                              ; preds = %125, %146
  %174 = phi float [ %145, %125 ], [ %172, %146 ]
  %175 = and i1 %4, %5
  %176 = uitofp i1 %175 to float
  %177 = fadd float %174, %176
  %178 = load float, float* %48, align 4
  %179 = load float, float* %50, align 8
  %180 = fadd float %178, %179
  %181 = fadd float %177, %180
  %182 = fmul float %181, 6.400000e+01
  %183 = call float @llvm.floor.f32(float %182) #9
  %184 = fcmp ult float %183, 0xC1E0000000000000
  %185 = fcmp ugt float %183, 0x41DFFFFFE0000000
  %186 = fcmp ogt float %183, 0xC1E0000000000000
  %187 = select i1 %186, float %183, float 0xC1E0000000000000
  %188 = fptosi float %187 to i32
  %189 = select i1 %184, i32 0, i32 2147483647
  %190 = select i1 %185, i32 %189, i32 %188
  %191 = load i32, i32* %62, align 4
  %192 = sitofp i32 %191 to float
  %193 = fmul float %192, 1.562500e-02
  %194 = fadd float %193, 1.562500e-02
  %195 = sitofp i32 %190 to float
  %196 = fmul float %195, 1.562500e-02
  %197 = fcmp ugt float %196, %194
  br i1 %197, label %198, label %216

198:                                              ; preds = %173
  %199 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 12
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 64
  br i1 %201, label %202, label %203

202:                                              ; preds = %198
  call void @_ZN5blink15BreakingContext18TrailingSpacesHangEb(%"class.blink::BreakingContext"* %0, i1 zeroext %1)
  br label %216

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2
  %205 = bitcast %"class.blink::LayoutObject"** %11 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = load i32, i32* %9, align 4
  %208 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %209 = load i32, i32* %208, align 8
  %210 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  %211 = bitcast %"class.blink::LayoutObject"** %210 to i64*
  store i64 %206, i64* %211, align 8
  %212 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %207, i32* %212, align 4
  %213 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %209, i32* %213, align 8
  %214 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 9
  %215 = load %"class.blink::LineInfo"*, %"class.blink::LineInfo"** %214, align 8
  call void @_ZN5blink15BreakingContext22SkipTrailingWhitespaceERNS_14InlineIteratorERKNS_8LineInfoE(%"class.blink::BreakingContext"* %0, %"class.blink::InlineIterator"* dereferenceable(24) %204, %"class.blink::LineInfo"* dereferenceable(12) %215)
  br label %216

216:                                              ; preds = %173, %46, %84, %72, %203, %202
  %217 = phi i1 [ true, %202 ], [ true, %203 ], [ false, %173 ], [ false, %72 ], [ false, %84 ], [ false, %46 ]
  ret i1 %217
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext18TrailingSpacesHangEb(%"class.blink::BreakingContext"*, i1 zeroext) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 21
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 19
  %7 = load i8, i8* %6, align 1, !range !2
  br i1 %5, label %10, label %8

8:                                                ; preds = %2
  %9 = icmp eq i8 %7, 0
  br i1 %9, label %108, label %10

10:                                               ; preds = %2, %8
  %11 = phi i8 [ 1, %8 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 1, i32 0
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 1, i32 0
  store %"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 3
  store i32 %15, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 2
  store i32 %17, i32* %20, align 8
  %21 = icmp ne i8 %11, 0
  %22 = or i1 %21, %1
  %23 = icmp eq %"class.blink::LayoutObject"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %108, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 33554432
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %25
  %32 = icmp ult i32 %15, 2147483647
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = add nuw nsw i32 %15, 1
  store i32 %34, i32* %19, align 4
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i32 [ %15, %31 ], [ %34, %33 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 1, i32 4, i32 0, i64 4
  %38 = bitcast i8* %37 to %"class.WTF::StringImpl"**
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %36, %43
  br i1 %44, label %108, label %45

45:                                               ; preds = %25, %35, %41
  %46 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  br label %48

48:                                               ; preds = %100, %45
  %49 = phi %"class.blink::LayoutObject"* [ %13, %45 ], [ %83, %100 ]
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 4
  %51 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %50 to i96*
  %52 = load i96, i96* %51, align 4
  %53 = and i96 %52, 113336795588871485128704
  %54 = icmp eq i96 %53, 75557863725914323419136
  %55 = and i96 %52, 1115684864
  %56 = icmp ne i96 %55, 0
  %57 = or i1 %56, %54
  br i1 %57, label %69, label %58

58:                                               ; preds = %48
  %59 = bitcast %"class.blink::LayoutObject"* %49 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %60 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %60, i64 13
  %62 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %61, align 8
  %63 = tail call %"class.blink::LayoutObjectChildList"* %62(%"class.blink::LayoutObject"* nonnull %49) #9
  %64 = icmp eq %"class.blink::LayoutObjectChildList"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %63, i64 0, i32 0
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = icmp eq %"class.blink::LayoutObject"* %67, null
  br i1 %68, label %69, label %82

69:                                               ; preds = %65, %58, %48
  %70 = icmp eq %"class.blink::LayoutObject"* %49, %47
  br i1 %70, label %105, label %71

71:                                               ; preds = %69, %76
  %72 = phi %"class.blink::LayoutObject"* [ %78, %76 ], [ %49, %69 ]
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 9
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 7
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp ne %"class.blink::LayoutObject"* %78, null
  %80 = icmp ne %"class.blink::LayoutObject"* %78, %47
  %81 = and i1 %79, %80
  br i1 %81, label %71, label %105

82:                                               ; preds = %71, %65
  %83 = phi %"class.blink::LayoutObject"* [ %67, %65 ], [ %74, %71 ]
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 4
  %85 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %84 to i96*
  %86 = load i96, i96* %85, align 4
  %87 = and i96 %86, 113336795588871485128704
  %88 = icmp eq i96 %87, 75557863725914323419136
  %89 = and i96 %86, 1115684864
  %90 = icmp ne i96 %89, 0
  %91 = or i1 %90, %88
  br i1 %91, label %103, label %92

92:                                               ; preds = %82
  %93 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %83) #9
  br i1 %93, label %94, label %100

94:                                               ; preds = %92
  %95 = bitcast %"class.blink::LayoutObject"* %83 to i1 (%"class.blink::LayoutObject"*)***
  %96 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %95, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, i64 26
  %98 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* nonnull %83) #9
  br i1 %99, label %101, label %100

100:                                              ; preds = %94, %92
  br label %48

101:                                              ; preds = %94
  %102 = ptrtoint %"class.blink::LayoutObject"* %83 to i64
  br label %105

103:                                              ; preds = %82
  %104 = ptrtoint %"class.blink::LayoutObject"* %83 to i64
  br label %105

105:                                              ; preds = %69, %76, %101, %103
  %106 = phi i64 [ %102, %101 ], [ %104, %103 ], [ 0, %76 ], [ 0, %69 ]
  %107 = inttoptr i64 %106 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %107, %"class.blink::LayoutObject"** %18, align 8
  store i32 0, i32* %19, align 4
  store i32 -1, i32* %20, align 8
  br label %108

108:                                              ; preds = %105, %41, %10, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15BreakingContext22SkipTrailingWhitespaceERNS_14InlineIteratorERKNS_8LineInfoE(%"class.blink::BreakingContext"*, %"class.blink::InlineIterator"* dereferenceable(24), %"class.blink::LineInfo"* dereferenceable(12)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %1, i64 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %6, label %178, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LineLayoutBlockFlow"* %8 to %"class.blink::LayoutBlockFlow"**
  %10 = getelementptr inbounds %"class.blink::BreakingContext", %"class.blink::BreakingContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %1, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %1, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %1, i64 0, i32 2
  br label %14

14:                                               ; preds = %7, %175
  %15 = tail call zeroext i1 @_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE(%"class.blink::InlineIterator"* dereferenceable(24) %1, %"class.blink::LineInfo"* dereferenceable(12) %2, i32 1)
  br i1 %15, label %178, label %16

16:                                               ; preds = %14
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 113336795588871485128704
  %22 = icmp eq i96 %21, 75557863725914323419136
  br i1 %22, label %23, label %82

23:                                               ; preds = %16
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %25 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %17, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 8
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 4
  %35 = select i1 %32, i8* %33, i8* %34
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 26
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %25) #9
  br i1 %42, label %46, label %43

43:                                               ; preds = %23
  %44 = bitcast %"class.blink::LayoutObject"* %24 to %"class.blink::LayoutBlockFlow"*
  %45 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBox"*
  br label %70

46:                                               ; preds = %23
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %47, align 8
  %49 = icmp eq %"struct.blink::FragmentData::RareData"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %51, align 8
  br label %53

53:                                               ; preds = %50, %46
  %54 = phi %"class.blink::PaintLayer"* [ %52, %50 ], [ null, %46 ]
  %55 = bitcast %"class.blink::LayoutObject"* %24 to %"class.blink::LayoutBlockFlow"*
  %56 = tail call i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %55, i32 %37, i32 0) #9
  %57 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %54, i64 0, i32 10, i32 0
  store i32 %56, i32* %57, align 8
  %58 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %47, align 8
  %59 = icmp eq %"struct.blink::FragmentData::RareData"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %61, align 8
  br label %63

63:                                               ; preds = %60, %53
  %64 = phi %"class.blink::PaintLayer"* [ %62, %60 ], [ null, %53 ]
  %65 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %64, i64 0, i32 11, i32 0
  store i32 %37, i32* %65, align 4
  %66 = load i96, i96* %19, align 4
  %67 = trunc i96 %66 to i32
  %68 = icmp slt i32 %67, 0
  %69 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"* %69, i1 zeroext %68) #9
  br label %70

70:                                               ; preds = %63, %43
  %71 = phi %"class.blink::LayoutBox"* [ %45, %43 ], [ %69, %63 ]
  %72 = phi %"class.blink::LayoutBlockFlow"* [ %44, %43 ], [ %55, %63 ]
  tail call void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %72, %"class.blink::LayoutBox"* dereferenceable(216) %71, i32 %37, i32 0) #9
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %73, align 8
  %75 = icmp eq %"struct.blink::FragmentData::RareData"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %77, align 8
  br label %79

79:                                               ; preds = %70, %76
  %80 = phi %"class.blink::PaintLayer"* [ %78, %76 ], [ null, %70 ]
  %81 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %80, i64 0, i32 11, i32 0
  store i32 %37, i32* %81, align 4
  br label %89

82:                                               ; preds = %16
  %83 = and i96 %20, 8388608
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %9, align 8
  %87 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBox"*
  %88 = tail call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %86, %"class.blink::LayoutBox"* dereferenceable(216) %87) #9
  br label %89

89:                                               ; preds = %82, %85, %79
  %90 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %91 = icmp eq %"class.blink::LayoutObject"* %90, null
  br i1 %91, label %178, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %90, i64 0, i32 4
  %94 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %93 to i96*
  %95 = load i96, i96* %94, align 4
  %96 = and i96 %95, 33554432
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92
  %99 = load i32, i32* %11, align 4
  %100 = icmp ult i32 %99, 2147483647
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = add nuw nsw i32 %99, 1
  store i32 %102, i32* %11, align 4
  br label %103

103:                                              ; preds = %101, %98
  %104 = phi i32 [ %99, %98 ], [ %102, %101 ]
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %90, i64 1, i32 4, i32 0, i64 4
  %106 = bitcast i8* %105 to %"class.WTF::StringImpl"**
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = icmp ult i32 %104, %111
  br i1 %112, label %175, label %113

113:                                              ; preds = %92, %103, %109
  %114 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  br label %115

115:                                              ; preds = %167, %113
  %116 = phi %"class.blink::LayoutObject"* [ %90, %113 ], [ %150, %167 ]
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %116, i64 0, i32 4
  %118 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %117 to i96*
  %119 = load i96, i96* %118, align 4
  %120 = and i96 %119, 113336795588871485128704
  %121 = icmp eq i96 %120, 75557863725914323419136
  %122 = and i96 %119, 1115684864
  %123 = icmp ne i96 %122, 0
  %124 = or i1 %123, %121
  br i1 %124, label %136, label %125

125:                                              ; preds = %115
  %126 = bitcast %"class.blink::LayoutObject"* %116 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %127 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %127, i64 13
  %129 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %128, align 8
  %130 = tail call %"class.blink::LayoutObjectChildList"* %129(%"class.blink::LayoutObject"* nonnull %116) #9
  %131 = icmp eq %"class.blink::LayoutObjectChildList"* %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %130, i64 0, i32 0
  %134 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  %135 = icmp eq %"class.blink::LayoutObject"* %134, null
  br i1 %135, label %136, label %149

136:                                              ; preds = %132, %125, %115
  %137 = icmp eq %"class.blink::LayoutObject"* %116, %114
  br i1 %137, label %172, label %138

138:                                              ; preds = %136, %143
  %139 = phi %"class.blink::LayoutObject"* [ %145, %143 ], [ %116, %136 ]
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 9
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = icmp eq %"class.blink::LayoutObject"* %141, null
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %139, i64 0, i32 7
  %145 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %144, align 8
  %146 = icmp ne %"class.blink::LayoutObject"* %145, null
  %147 = icmp ne %"class.blink::LayoutObject"* %145, %114
  %148 = and i1 %146, %147
  br i1 %148, label %138, label %172

149:                                              ; preds = %138, %132
  %150 = phi %"class.blink::LayoutObject"* [ %134, %132 ], [ %141, %138 ]
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %150, i64 0, i32 4
  %152 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %151 to i96*
  %153 = load i96, i96* %152, align 4
  %154 = and i96 %153, 113336795588871485128704
  %155 = icmp eq i96 %154, 75557863725914323419136
  %156 = and i96 %153, 1115684864
  %157 = icmp ne i96 %156, 0
  %158 = or i1 %157, %155
  br i1 %158, label %170, label %159

159:                                              ; preds = %149
  %160 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %150) #9
  br i1 %160, label %161, label %167

161:                                              ; preds = %159
  %162 = bitcast %"class.blink::LayoutObject"* %150 to i1 (%"class.blink::LayoutObject"*)***
  %163 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %162, align 8
  %164 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %163, i64 26
  %165 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %164, align 8
  %166 = tail call zeroext i1 %165(%"class.blink::LayoutObject"* nonnull %150) #9
  br i1 %166, label %168, label %167

167:                                              ; preds = %161, %159
  br label %115

168:                                              ; preds = %161
  %169 = ptrtoint %"class.blink::LayoutObject"* %150 to i64
  br label %172

170:                                              ; preds = %149
  %171 = ptrtoint %"class.blink::LayoutObject"* %150 to i64
  br label %172

172:                                              ; preds = %136, %143, %168, %170
  %173 = phi i64 [ %169, %168 ], [ %171, %170 ], [ 0, %143 ], [ 0, %136 ]
  %174 = inttoptr i64 %173 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %174, %"class.blink::LayoutObject"** %4, align 8
  store i32 0, i32* %11, align 4
  store i32 -1, i32* %13, align 8
  br label %175

175:                                              ; preds = %109, %172
  %176 = phi %"class.blink::LayoutObject"* [ %90, %109 ], [ %174, %172 ]
  %177 = icmp eq %"class.blink::LayoutObject"* %176, null
  br i1 %177, label %178, label %14

178:                                              ; preds = %89, %175, %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %31, align 8
  %33 = icmp eq %"class.blink::WordMeasurement"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 64
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15WordMeasurementEEEmm(i64 %37) #9
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15WordMeasurementEEEPKcv, i64 0, i64 0)) #9
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1795"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 6
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1795"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 64, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1795"* %0, i32 %27) #9
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1795"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 65
  br i1 %3, label %4, label %70

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %5, align 8
  %7 = icmp eq %"class.blink::WordMeasurement"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::WordMeasurement"*
  %10 = icmp eq %"class.blink::WordMeasurement"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1795"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %15, align 8
  br label %141

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.1795"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %69, label %26

26:                                               ; preds = %16, %65
  %27 = phi %"class.blink::WordMeasurement"* [ %67, %65 ], [ %6, %16 ]
  %28 = phi %"class.blink::WordMeasurement"* [ %66, %65 ], [ %9, %16 ]
  %29 = bitcast %"class.blink::WordMeasurement"* %28 to i8*
  %30 = bitcast %"class.blink::WordMeasurement"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 20, i1 false) #9
  %31 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 0, i32 5
  %32 = bitcast %"class.WTF::HashSet.1798"* %31 to i8*
  %33 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 5
  %34 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 0, i32 5, i32 0, i32 1
  %35 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 0, i32 5, i32 0, i32 2
  %36 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 0, i32 5, i32 0, i32 3
  %37 = bitcast %"class.WTF::HashSet.1798"* %33 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #9
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.WTF::HashSet.1798"* %31 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 5, i32 0, i32 1
  %41 = load i32, i32* %34, align 4
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %34, align 4
  store i32 %41, i32* %40, align 4
  %43 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 5, i32 0, i32 2
  %44 = load i32, i32* %35, align 4
  %45 = load i32, i32* %43, align 4
  store i32 %45, i32* %35, align 4
  store i32 %44, i32* %43, align 4
  %46 = load i32, i32* %36, align 8
  %47 = and i32 %46, 2147483647
  %48 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 5, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 2147483647
  %51 = and i32 %46, -2147483648
  %52 = or i32 %50, %51
  store i32 %52, i32* %36, align 8
  %53 = load i32, i32* %48, align 8
  %54 = and i32 %53, -2147483648
  %55 = or i32 %54, %47
  store i32 %55, i32* %48, align 8
  %56 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 0, i32 6
  %57 = bitcast %"class.blink::FloatRect"* %56 to i8*
  %58 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 6
  %59 = bitcast %"class.blink::FloatRect"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %59, i64 16, i1 false) #9
  %60 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %60, align 8
  %62 = icmp eq %"class.blink::SimpleFontData"** %61, null
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %26
  %64 = bitcast %"class.blink::SimpleFontData"** %61 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #9
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %60, align 8
  br label %65

65:                                               ; preds = %63, %26
  %66 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %28, i64 1
  %67 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %27, i64 1
  %68 = icmp eq %"class.blink::WordMeasurement"* %67, %20
  br i1 %68, label %69, label %26

69:                                               ; preds = %65, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1796"* %21, %"class.blink::WordMeasurement"* %6) #9
  br label %141

70:                                               ; preds = %2
  %71 = zext i32 %1 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15WordMeasurementEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15WordMeasurementEEEPKcv, i64 0, i64 0)) #9
  %74 = lshr i64 %72, 6
  %75 = ptrtoint i8* %73 to i64
  %76 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %76, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %77, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %130, label %83

83:                                               ; preds = %70
  %84 = bitcast i8* %73 to %"class.blink::WordMeasurement"*
  br label %85

85:                                               ; preds = %83, %124
  %86 = phi %"class.blink::WordMeasurement"* [ %126, %124 ], [ %77, %83 ]
  %87 = phi %"class.blink::WordMeasurement"* [ %125, %124 ], [ %84, %83 ]
  %88 = bitcast %"class.blink::WordMeasurement"* %87 to i8*
  %89 = bitcast %"class.blink::WordMeasurement"* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 20, i1 false) #9
  %90 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 0, i32 5
  %91 = bitcast %"class.WTF::HashSet.1798"* %90 to i8*
  %92 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 5
  %93 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 0, i32 5, i32 0, i32 1
  %94 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 0, i32 5, i32 0, i32 2
  %95 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 0, i32 5, i32 0, i32 3
  %96 = bitcast %"class.WTF::HashSet.1798"* %92 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 20, i1 false) #9
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.WTF::HashSet.1798"* %90 to i64*
  store atomic i64 0, i64* %96 monotonic, align 8
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 5, i32 0, i32 1
  %100 = load i32, i32* %93, align 4
  %101 = load i32, i32* %99, align 4
  store i32 %101, i32* %93, align 4
  store i32 %100, i32* %99, align 4
  %102 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 5, i32 0, i32 2
  %103 = load i32, i32* %94, align 4
  %104 = load i32, i32* %102, align 4
  store i32 %104, i32* %94, align 4
  store i32 %103, i32* %102, align 4
  %105 = load i32, i32* %95, align 8
  %106 = and i32 %105, 2147483647
  %107 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 5, i32 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = and i32 %108, 2147483647
  %110 = and i32 %105, -2147483648
  %111 = or i32 %109, %110
  store i32 %111, i32* %95, align 8
  %112 = load i32, i32* %107, align 8
  %113 = and i32 %112, -2147483648
  %114 = or i32 %113, %106
  store i32 %114, i32* %107, align 8
  %115 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 0, i32 6
  %116 = bitcast %"class.blink::FloatRect"* %115 to i8*
  %117 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 6
  %118 = bitcast %"class.blink::FloatRect"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %118, i64 16, i1 false) #9
  %119 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 0, i32 5, i32 0, i32 0
  %120 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %119, align 8
  %121 = icmp eq %"class.blink::SimpleFontData"** %120, null
  br i1 %121, label %124, label %122, !prof !3

122:                                              ; preds = %85
  %123 = bitcast %"class.blink::SimpleFontData"** %120 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %123) #9
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %119, align 8
  br label %124

124:                                              ; preds = %122, %85
  %125 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %87, i64 1
  %126 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %86, i64 1
  %127 = icmp eq %"class.blink::WordMeasurement"* %126, %81
  br i1 %127, label %128, label %85

128:                                              ; preds = %124
  %129 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %76, align 8
  br label %130

130:                                              ; preds = %128, %70
  %131 = phi %"class.blink::WordMeasurement"* [ %129, %128 ], [ %77, %70 ]
  %132 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 1, i64 0
  %133 = bitcast i8* %132 to %"class.blink::WordMeasurement"*
  %134 = icmp eq %"class.blink::WordMeasurement"* %131, %133
  br i1 %134, label %137, label %135, !prof !3

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1796"* %136, %"class.blink::WordMeasurement"* %131) #9
  br label %137

137:                                              ; preds = %130, %135
  %138 = bitcast %"class.WTF::Vector.1795"* %0 to i64*
  store atomic i64 %75, i64* %138 monotonic, align 8
  %139 = trunc i64 %74 to i32
  %140 = getelementptr inbounds %"class.WTF::Vector.1795", %"class.WTF::Vector.1795"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %139, i32* %140, align 8
  br label %141

141:                                              ; preds = %69, %137, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15WordMeasurementEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 33521664
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 33521664) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 6
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1796"*, %"class.blink::WordMeasurement"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.blink::WordMeasurement"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #9
  ret void
}

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext, i32, i1 zeroext, i32, %"class.blink::BidiContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %18, %20
  br i1 %21, label %66, label %22

22:                                               ; preds = %16, %8
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  %30 = zext i1 %29 to i32
  store i32 %30, i32* %23, align 8
  br label %31

31:                                               ; preds = %22, %26
  %32 = icmp eq i32 %3, 0
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 8
  br i1 %32, label %35, label %49

35:                                               ; preds = %31
  switch i32 %34, label %42 [
    i32 2, label %36
    i32 5, label %41
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  store i32 2, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

41:                                               ; preds = %35
  store i32 5, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq i32 %2, 0
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %23, align 8
  br label %63

49:                                               ; preds = %31
  switch i32 %34, label %56 [
    i32 5, label %62
    i32 2, label %50
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq i32 %2, 1
  %55 = or i1 %54, %53
  br i1 %55, label %62, label %63

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = icmp eq i32 %2, 1
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %63

62:                                               ; preds = %49, %56, %50
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %23, align 8
  br label %63

63:                                               ; preds = %50, %36, %56, %62, %40, %42, %48, %41
  %64 = bitcast %"class.blink::InlineIterator"* %9 to i8*
  %65 = bitcast %"class.blink::InlineIterator"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false)
  br label %66

66:                                               ; preds = %16, %4, %63
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %5, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::InlineIterator"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  %71 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %72, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1, i32 0
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %17, %19
  br i1 %20, label %55, label %21

21:                                               ; preds = %15, %7
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %22, align 8
  br label %30

30:                                               ; preds = %21, %25
  %31 = icmp eq i32 %2, 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 8
  br i1 %31, label %34, label %46

34:                                               ; preds = %30
  switch i32 %33, label %41 [
    i32 2, label %35
    i32 5, label %40
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  store i32 2, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

40:                                               ; preds = %34
  store i32 5, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %22, align 8
  br label %52

46:                                               ; preds = %30
  switch i32 %33, label %47 [
    i32 5, label %51
    i32 2, label %51
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46, %46, %47
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %22, align 8
  br label %52

52:                                               ; preds = %35, %41, %47, %51, %39, %45, %40
  %53 = bitcast %"class.blink::InlineIterator"* %8 to i8*
  %54 = bitcast %"class.blink::InlineIterator"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  br label %55

55:                                               ; preds = %15, %3, %52
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %4, align 8
  %56 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %2, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %59 = bitcast %"class.blink::InlineIterator"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false)
  %60 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %61, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.blink::IsolateTracker", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %356

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %356, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %356

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::IsolateTracker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 1, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %51, %22
  %25 = phi i32 [ 0, %22 ], [ %52, %51 ]
  %26 = phi %"class.blink::LayoutObject"* [ %20, %22 ], [ %54, %51 ]
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %26, %27
  br i1 %28, label %56, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::LayoutObject"* %26 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 26
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %26) #9
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = lshr i160 %40, 86
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 7
  %44 = add nsw i32 %43, -3
  %45 = icmp ult i32 %44, 3
  %46 = and i160 %40, 2854495385411919762116571938898990272765493248
  %47 = icmp eq i160 %46, 0
  %48 = and i1 %47, %45
  %49 = zext i1 %48 to i32
  %50 = add i32 %25, %49
  br label %51

51:                                               ; preds = %35, %29
  %52 = phi i32 [ %25, %29 ], [ %50, %35 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 7
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %56, label %24

56:                                               ; preds = %51, %24
  %57 = phi i32 [ %52, %51 ], [ %25, %24 ]
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  br label %59

59:                                               ; preds = %56, %16
  %60 = phi %"class.blink::LayoutObject"* [ null, %16 ], [ %58, %56 ]
  %61 = phi i32 [ 0, %16 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 0
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 1
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3
  %65 = bitcast %"class.blink::MidpointState"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 25, i1 false) #9
  %66 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 4
  store %"class.blink::BidiRunList"* %1, %"class.blink::BidiRunList"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 1, i32 0
  %70 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %70, label %240, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0
  %75 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 1
  %76 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 1
  %77 = bitcast i32* %75 to i8*
  %78 = bitcast i32* %76 to i8*
  br label %79

79:                                               ; preds = %238, %71
  %80 = phi i32 [ %68, %71 ], [ 0, %238 ]
  %81 = phi %"class.blink::LayoutObject"* [ %60, %71 ], [ %220, %238 ]
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %83 = icmp eq %"class.blink::LayoutObject"* %81, %82
  br i1 %83, label %240, label %84

84:                                               ; preds = %79
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %86 = icmp eq %"class.blink::LayoutObject"* %81, %85
  br i1 %86, label %240, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %62, align 8
  %89 = icmp eq i32 %88, 0
  %90 = bitcast %"class.blink::LayoutObject"* %81 to i32 (%"class.blink::LayoutObject"*)***
  %91 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %91, i64 74
  %93 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = call i32 %93(%"class.blink::LayoutObject"* nonnull %81) #9
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  br i1 %89, label %102, label %96

96:                                               ; preds = %87
  %97 = call dereferenceable(16) %"class.WTF::Vector.1718"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1718"* %73, %"class.WTF::Vector.1718"* dereferenceable(16) %74) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 9, i1 false) #9
  %98 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %90, align 8
  %99 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %98, i64 74
  %100 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %99, align 8
  %101 = call i32 %100(%"class.blink::LayoutObject"* nonnull %81) #9
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* nonnull %81, i32 %80, i32 %101, %"class.blink::LayoutObject"* %95, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 0, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3) #9
  br label %103

102:                                              ; preds = %87
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* nonnull %81, i32 %80, i32 %94, %"class.blink::LayoutObject"* %95, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 1, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3)
  br label %103

103:                                              ; preds = %96, %102
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  br label %105

105:                                              ; preds = %237, %103
  %106 = phi %"class.blink::LayoutObject"* [ %81, %103 ], [ %220, %237 ]
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 4
  %108 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %107 to i96*
  %109 = load i96, i96* %108, align 4
  %110 = and i96 %109, 113336795588871485128704
  %111 = icmp eq i96 %110, 75557863725914323419136
  %112 = and i96 %109, 1115684864
  %113 = icmp ne i96 %112, 0
  %114 = or i1 %113, %111
  br i1 %114, label %152, label %115

115:                                              ; preds = %105
  %116 = bitcast %"class.blink::LayoutObject"* %106 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %117 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %117, i64 13
  %119 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %118, align 8
  %120 = call %"class.blink::LayoutObjectChildList"* %119(%"class.blink::LayoutObject"* nonnull %106) #9
  %121 = icmp eq %"class.blink::LayoutObjectChildList"* %120, null
  br i1 %121, label %152, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %120, i64 0, i32 0
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutObject"* %124, null
  br i1 %125, label %152, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::LayoutObject"* %124 to i1 (%"class.blink::LayoutObject"*)***
  %128 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %128, i64 26
  %130 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %129, align 8
  %131 = call zeroext i1 %130(%"class.blink::LayoutObject"* nonnull %124) #9
  br i1 %131, label %132, label %219

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 541598767187353870268366848
  %139 = icmp eq i160 %138, 0
  br i1 %139, label %219, label %140

140:                                              ; preds = %132
  %141 = lshr i160 %137, 86
  %142 = trunc i160 %141 to i32
  %143 = and i32 %142, 7
  %144 = add nsw i32 %143, -3
  %145 = icmp ult i32 %144, 3
  %146 = and i160 %137, 2854495385411919762116571938898990272765493248
  %147 = icmp eq i160 %146, 0
  %148 = and i1 %147, %145
  br i1 %148, label %149, label %219

149:                                              ; preds = %140
  %150 = load i32, i32* %62, align 8
  %151 = add i32 %150, 1
  store i32 %151, i32* %62, align 8
  br label %219

152:                                              ; preds = %122, %115, %105
  %153 = icmp eq %"class.blink::LayoutObject"* %106, %104
  br i1 %153, label %240, label %154

154:                                              ; preds = %152, %213
  %155 = phi %"class.blink::LayoutObject"* [ %215, %213 ], [ %106, %152 ]
  %156 = bitcast %"class.blink::LayoutObject"* %155 to i1 (%"class.blink::LayoutObject"*)***
  %157 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %157, i64 26
  %159 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %158, align 8
  %160 = call zeroext i1 %159(%"class.blink::LayoutObject"* nonnull %155) #9
  br i1 %160, label %161, label %183

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 5, i32 0
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8
  %167 = and i160 %166, 541598767187353870268366848
  %168 = icmp eq i160 %167, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %161
  %170 = lshr i160 %166, 86
  %171 = trunc i160 %170 to i32
  %172 = and i32 %171, 7
  %173 = add nsw i32 %172, -3
  %174 = icmp ult i32 %173, 3
  %175 = and i160 %166, 2854495385411919762116571938898990272765493248
  %176 = icmp eq i160 %175, 0
  %177 = and i1 %176, %174
  br i1 %177, label %178, label %183

178:                                              ; preds = %169
  %179 = load i32, i32* %62, align 8
  %180 = add i32 %179, -1
  store i32 %180, i32* %62, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %178
  store i8 0, i8* %63, align 4
  br label %183

183:                                              ; preds = %182, %178, %169, %161, %154
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 9
  %185 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %184, align 8
  %186 = icmp eq %"class.blink::LayoutObject"* %185, null
  br i1 %186, label %213, label %187

187:                                              ; preds = %183
  %188 = bitcast %"class.blink::LayoutObject"* %185 to i1 (%"class.blink::LayoutObject"*)***
  %189 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %189, i64 26
  %191 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutObject"* nonnull %185) #9
  br i1 %192, label %193, label %219

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 0, i32 5, i32 0
  %195 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 9
  %197 = bitcast [20 x i8]* %196 to i160*
  %198 = load i160, i160* %197, align 8
  %199 = and i160 %198, 541598767187353870268366848
  %200 = icmp eq i160 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %193
  %202 = lshr i160 %198, 86
  %203 = trunc i160 %202 to i32
  %204 = and i32 %203, 7
  %205 = add nsw i32 %204, -3
  %206 = icmp ult i32 %205, 3
  %207 = and i160 %198, 2854495385411919762116571938898990272765493248
  %208 = icmp eq i160 %207, 0
  %209 = and i1 %208, %206
  br i1 %209, label %210, label %219

210:                                              ; preds = %201
  %211 = load i32, i32* %62, align 8
  %212 = add i32 %211, 1
  store i32 %212, i32* %62, align 8
  br label %219

213:                                              ; preds = %183
  %214 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 7
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %214, align 8
  %216 = icmp ne %"class.blink::LayoutObject"* %215, null
  %217 = icmp ne %"class.blink::LayoutObject"* %215, %104
  %218 = and i1 %216, %217
  br i1 %218, label %154, label %240

219:                                              ; preds = %210, %201, %193, %187, %149, %140, %132, %126
  %220 = phi %"class.blink::LayoutObject"* [ %185, %210 ], [ %185, %201 ], [ %185, %193 ], [ %185, %187 ], [ %124, %149 ], [ %124, %140 ], [ %124, %132 ], [ %124, %126 ]
  %221 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %220, i64 0, i32 4
  %222 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %221 to i96*
  %223 = load i96, i96* %222, align 4
  %224 = and i96 %223, 113336795588871485128704
  %225 = icmp eq i96 %224, 75557863725914323419136
  %226 = and i96 %223, 1115684864
  %227 = icmp ne i96 %226, 0
  %228 = or i1 %227, %225
  br i1 %228, label %238, label %229

229:                                              ; preds = %219
  %230 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %220) #9
  br i1 %230, label %231, label %237

231:                                              ; preds = %229
  %232 = bitcast %"class.blink::LayoutObject"* %220 to i1 (%"class.blink::LayoutObject"*)***
  %233 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %232, align 8
  %234 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %233, i64 26
  %235 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %234, align 8
  %236 = call zeroext i1 %235(%"class.blink::LayoutObject"* nonnull %220) #9
  br i1 %236, label %238, label %237

237:                                              ; preds = %231, %229
  br label %105

238:                                              ; preds = %219, %231
  %239 = icmp eq %"class.blink::LayoutObject"* %220, null
  br i1 %239, label %240, label %79

240:                                              ; preds = %79, %84, %238, %152, %213, %59
  %241 = phi %"class.blink::LayoutObject"* [ null, %59 ], [ null, %213 ], [ null, %152 ], [ %81, %79 ], [ %81, %84 ], [ null, %238 ]
  %242 = phi i32 [ %68, %59 ], [ 0, %213 ], [ 0, %152 ], [ %80, %79 ], [ %80, %84 ], [ 0, %238 ]
  %243 = phi i1 [ true, %59 ], [ true, %213 ], [ true, %152 ], [ false, %79 ], [ false, %84 ], [ true, %238 ]
  %244 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7, i32 1, i32 0
  %245 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %244, align 8
  %246 = icmp eq %"class.blink::LayoutObject"* %241, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br label %251

251:                                              ; preds = %247, %240
  %252 = phi i1 [ false, %240 ], [ %250, %247 ]
  %253 = or i1 %252, %243
  br i1 %253, label %298, label %254

254:                                              ; preds = %251
  %255 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %256 = icmp eq %"class.blink::LayoutObject"* %241, %255
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %259 = load i32, i32* %258, align 4
  br label %260

260:                                              ; preds = %254, %257
  %261 = phi i32 [ %259, %257 ], [ 2147483647, %254 ]
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %263 = icmp eq %"class.blink::LayoutObject"* %241, %262
  br i1 %263, label %264, label %269

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = icmp ugt i32 %266, %261
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  store i8 1, i8* %13, align 8
  br label %269

269:                                              ; preds = %260, %264, %268
  %270 = phi i32 [ %266, %268 ], [ %261, %264 ], [ %261, %260 ]
  %271 = bitcast %"class.blink::LayoutObject"* %241 to i32 (%"class.blink::LayoutObject"*)***
  %272 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %271, align 8
  %273 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %272, i64 74
  %274 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %273, align 8
  %275 = call i32 %274(%"class.blink::LayoutObject"* %241) #9
  %276 = load i32, i32* %62, align 8
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %292, label %278

278:                                              ; preds = %269
  %279 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %280 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %279, align 8
  %281 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0
  %282 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0
  %283 = call dereferenceable(16) %"class.WTF::Vector.1718"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1718"* %281, %"class.WTF::Vector.1718"* dereferenceable(16) %282) #9
  %284 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 1
  %285 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 1
  %286 = bitcast i32* %284 to i8*
  %287 = bitcast i32* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %287, i64 9, i1 false) #9
  %288 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %271, align 8
  %289 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %288, i64 74
  %290 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %289, align 8
  %291 = call i32 %290(%"class.blink::LayoutObject"* %241) #9
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* %241, i32 %242, i32 %291, %"class.blink::LayoutObject"* %280, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 0, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3) #9
  br label %298

292:                                              ; preds = %269
  %293 = icmp eq i32 %275, 0
  %294 = add i32 %270, 1
  %295 = select i1 %293, i32 0, i32 %294
  %296 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %297 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %296, align 8
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* %241, i32 %242, i32 %295, %"class.blink::LayoutObject"* %297, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 1, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3)
  br label %298

298:                                              ; preds = %278, %292, %251
  br i1 %252, label %299, label %300

299:                                              ; preds = %298
  store i8 1, i8* %13, align 8
  br label %300

300:                                              ; preds = %299, %298
  %301 = load i32, i32* %62, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %310, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 0, i32 0
  %305 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %304, align 8
  %306 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %307 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL28BidiNextSkippingEmptyInlinesINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_(%"class.blink::LayoutObject"* %305, %"class.blink::LayoutObject"* %306, %"class.blink::BidiResolver"* null) #9
  store %"class.blink::LayoutObject"* %307, %"class.blink::LayoutObject"** %9, align 8
  %308 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %308, align 4
  %309 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %309, align 8
  br label %342

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %312 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %311, align 8
  %313 = icmp eq %"class.blink::LayoutObject"* %312, null
  br i1 %313, label %342, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %312, i64 0, i32 4
  %316 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %315 to i96*
  %317 = load i96, i96* %316, align 4
  %318 = and i96 %317, 33554432
  %319 = icmp eq i96 %318, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = icmp ult i32 %322, 2147483647
  br i1 %323, label %324, label %326

324:                                              ; preds = %320
  %325 = add nuw nsw i32 %322, 1
  store i32 %325, i32* %321, align 4
  br label %326

326:                                              ; preds = %324, %320
  %327 = phi i32 [ %325, %324 ], [ %322, %320 ]
  %328 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %312, i64 1, i32 4, i32 0, i64 4
  %329 = bitcast i8* %328 to %"class.WTF::StringImpl"**
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %336, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = icmp ult i32 %327, %334
  br i1 %335, label %342, label %336

336:                                              ; preds = %314, %326, %332
  %337 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 0, i32 0
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %337, align 8
  %339 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL28BidiNextSkippingEmptyInlinesINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_(%"class.blink::LayoutObject"* %338, %"class.blink::LayoutObject"* nonnull %312, %"class.blink::BidiResolver"* null) #9
  store %"class.blink::LayoutObject"* %339, %"class.blink::LayoutObject"** %9, align 8
  %340 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %340, align 4
  %341 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %341, align 8
  br label %342

342:                                              ; preds = %310, %336, %332, %303
  %343 = bitcast %"class.blink::InlineIterator"* %18 to i8*
  %344 = bitcast %"class.blink::InlineIterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 24, i1 false)
  %345 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %346 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %345, align 8
  %347 = icmp eq %"class.blink::InlineIterator"* %346, null
  %348 = bitcast %"class.blink::InlineIterator"* %346 to i8*
  br i1 %347, label %355, label %349, !prof !3

349:                                              ; preds = %342
  %350 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353, !prof !4

353:                                              ; preds = %349
  store i32 0, i32* %350, align 4
  br label %354

354:                                              ; preds = %353, %349
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #9
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %345, align 8
  br label %355

355:                                              ; preds = %342, %354
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #9
  br label %356

356:                                              ; preds = %12, %2, %355, %7
  %357 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 10, i32* %357, align 8
  %358 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  store i32 10, i32* %358, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"* dereferenceable(424), i32, %"class.blink::IsolateTracker"* dereferenceable(48)) unnamed_addr #0 {
  %8 = icmp ugt i32 %1, %2
  br i1 %8, label %255, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8388608
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %255

15:                                               ; preds = %9
  %16 = and i96 %12, 113336795588871485128704
  %17 = icmp eq i96 %16, 75557863725914323419136
  br i1 %17, label %18, label %34

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 37
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 31
  switch i32 %26, label %27 [
    i32 0, label %34
    i32 25, label %34
    i32 19, label %34
    i32 17, label %34
    i32 15, label %34
    i32 5, label %34
    i32 3, label %34
    i32 24, label %34
  ]

27:                                               ; preds = %18
  %28 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %29 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*)***
  %30 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, i64 26
  %32 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %28) #9
  br i1 %33, label %34, label %255

34:                                               ; preds = %18, %18, %18, %18, %18, %18, %18, %18, %15, %27
  %35 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 2
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 1
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 0
  %38 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 3
  %39 = icmp eq i32 %5, 0
  %40 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 4, i32 3, i32 0
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 0
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 1
  %44 = bitcast %"struct.blink::BidiRun"** %43 to %"struct.blink::BidiCharacterRun"**
  %45 = bitcast %"struct.blink::BidiRun"** %42 to i8**
  %46 = bitcast %"struct.blink::BidiRun"** %43 to i8**
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 3
  br label %48

48:                                               ; preds = %141, %34
  %49 = phi i32 [ %1, %34 ], [ %142, %141 ]
  %50 = load i32, i32* %35, align 4
  %51 = load i32, i32* %36, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = tail call dereferenceable(24) %"class.blink::InlineIterator"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1718"* %37, i32 %50) #9
  %55 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 0, i32 1, i32 0
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %53, %48
  %60 = phi i32 [ %58, %53 ], [ 0, %48 ]
  %61 = phi %"class.blink::LayoutObject"* [ %56, %53 ], [ null, %48 ]
  %62 = load i8, i8* %38, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = icmp eq %"class.blink::LayoutObject"* %61, %0
  %66 = and i1 %52, %65
  br i1 %66, label %67, label %255

67:                                               ; preds = %64
  store i8 0, i8* %38, align 8
  %68 = load i32, i32* %35, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %35, align 4
  %70 = icmp ult i32 %60, %2
  br i1 %70, label %141, label %255

71:                                               ; preds = %59
  %72 = xor i1 %52, true
  %73 = icmp ne %"class.blink::LayoutObject"* %61, %0
  %74 = or i1 %73, %72
  br i1 %74, label %75, label %132

75:                                               ; preds = %71
  %76 = icmp ugt i32 %49, %2
  br i1 %76, label %255, label %77

77:                                               ; preds = %75, %130
  %78 = phi i32 [ %82, %130 ], [ %49, %75 ]
  %79 = sub i32 %2, %78
  %80 = icmp ugt i32 %79, 65535
  %81 = add i32 %78, 65535
  %82 = select i1 %80, i32 %81, i32 %2
  br i1 %39, label %83, label %84

83:                                               ; preds = %77
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %78, i32 %82, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #9
  br label %130

84:                                               ; preds = %77
  %85 = tail call noalias i8* @malloc(i64 40) #9
  %86 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %87 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %86, i64 0, i32 1
  %88 = load i16, i16* %87, align 4
  %89 = trunc i16 %88 to i8
  %90 = and i8 %89, 127
  %91 = load i32, i32* %41, align 8
  %92 = lshr i16 %88, 7
  %93 = and i16 %92, 31
  %94 = zext i16 %93 to i32
  %95 = lshr i16 %88, 12
  %96 = trunc i16 %95 to i8
  %97 = and i8 %96, 1
  store i8 %97, i8* %85, align 8
  %98 = getelementptr inbounds i8, i8* %85, i64 1
  %99 = getelementptr inbounds i8, i8* %85, i64 8
  %100 = bitcast i8* %99 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %100, align 8
  %101 = getelementptr inbounds i8, i8* %85, i64 16
  %102 = bitcast i8* %101 to i32*
  store i32 %78, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %85, i64 20
  %104 = bitcast i8* %103 to i32*
  store i32 %82, i32* %104, align 4
  %105 = icmp eq i32 %91, 10
  %106 = select i1 %105, i32 %94, i32 %91
  store i8 %90, i8* %98, align 1
  %107 = and i8 %89, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %84
  switch i32 %106, label %117 [
    i32 5, label %110
    i32 2, label %110
    i32 0, label %110
  ]

110:                                              ; preds = %109, %109, %109
  %111 = add nuw i8 %90, 1
  store i8 %111, i8* %98, align 1
  br label %117

112:                                              ; preds = %84
  switch i32 %106, label %117 [
    i32 1, label %113
    i32 5, label %115
    i32 2, label %115
  ]

113:                                              ; preds = %112
  %114 = add nuw i8 %90, 1
  store i8 %114, i8* %98, align 1
  br label %117

115:                                              ; preds = %112, %112
  %116 = add nuw i8 %90, 2
  store i8 %116, i8* %98, align 1
  br label %117

117:                                              ; preds = %115, %113, %112, %110, %109
  %118 = getelementptr inbounds i8, i8* %85, i64 24
  %119 = bitcast i8* %118 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %119, align 8
  %120 = getelementptr inbounds i8, i8* %85, i64 32
  %121 = bitcast i8* %120 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %121, align 8
  store i8 %97, i8* %85, align 8
  %122 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %123 = icmp eq %"struct.blink::BidiRun"* %122, null
  %124 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %125 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %124, i64 0, i32 2
  %126 = bitcast %"struct.blink::BidiCharacterRun"** %125 to i8**
  %127 = select i1 %123, i8** %45, i8** %126
  store i8* %85, i8** %127, align 8
  store i8* %85, i8** %46, align 8
  %128 = load i32, i32* %47, align 8
  %129 = add i32 %128, 1
  store i32 %129, i32* %47, align 8
  br label %130

130:                                              ; preds = %117, %83
  %131 = icmp ult i32 %82, %2
  br i1 %131, label %77, label %255

132:                                              ; preds = %71
  %133 = add i32 %60, 1
  %134 = icmp ugt i32 %133, %2
  br i1 %134, label %198, label %135

135:                                              ; preds = %132
  store i8 1, i8* %38, align 8
  %136 = load i32, i32* %35, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %35, align 4
  %138 = icmp eq i32 %60, -1
  br i1 %138, label %255, label %139

139:                                              ; preds = %135
  %140 = icmp ugt i32 %133, %49
  br i1 %140, label %143, label %141

141:                                              ; preds = %196, %139, %67
  %142 = phi i32 [ %60, %67 ], [ %133, %139 ], [ %133, %196 ]
  br label %48

143:                                              ; preds = %139, %196
  %144 = phi i32 [ %148, %196 ], [ %49, %139 ]
  %145 = sub i32 %133, %144
  %146 = icmp ugt i32 %145, 65535
  %147 = add i32 %144, 65535
  %148 = select i1 %146, i32 %147, i32 %133
  br i1 %39, label %149, label %150

149:                                              ; preds = %143
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %144, i32 %148, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #9
  br label %196

150:                                              ; preds = %143
  %151 = tail call noalias i8* @malloc(i64 40) #9
  %152 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %153 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %152, i64 0, i32 1
  %154 = load i16, i16* %153, align 4
  %155 = trunc i16 %154 to i8
  %156 = and i8 %155, 127
  %157 = load i32, i32* %41, align 8
  %158 = lshr i16 %154, 7
  %159 = and i16 %158, 31
  %160 = zext i16 %159 to i32
  %161 = lshr i16 %154, 12
  %162 = trunc i16 %161 to i8
  %163 = and i8 %162, 1
  store i8 %163, i8* %151, align 8
  %164 = getelementptr inbounds i8, i8* %151, i64 1
  %165 = getelementptr inbounds i8, i8* %151, i64 8
  %166 = bitcast i8* %165 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %166, align 8
  %167 = getelementptr inbounds i8, i8* %151, i64 16
  %168 = bitcast i8* %167 to i32*
  store i32 %144, i32* %168, align 8
  %169 = getelementptr inbounds i8, i8* %151, i64 20
  %170 = bitcast i8* %169 to i32*
  store i32 %148, i32* %170, align 4
  %171 = icmp eq i32 %157, 10
  %172 = select i1 %171, i32 %160, i32 %157
  store i8 %156, i8* %164, align 1
  %173 = and i8 %155, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %150
  switch i32 %172, label %183 [
    i32 5, label %176
    i32 2, label %176
    i32 0, label %176
  ]

176:                                              ; preds = %175, %175, %175
  %177 = add nuw i8 %156, 1
  store i8 %177, i8* %164, align 1
  br label %183

178:                                              ; preds = %150
  switch i32 %172, label %183 [
    i32 1, label %179
    i32 5, label %181
    i32 2, label %181
  ]

179:                                              ; preds = %178
  %180 = add nuw i8 %156, 1
  store i8 %180, i8* %164, align 1
  br label %183

181:                                              ; preds = %178, %178
  %182 = add nuw i8 %156, 2
  store i8 %182, i8* %164, align 1
  br label %183

183:                                              ; preds = %181, %179, %178, %176, %175
  %184 = getelementptr inbounds i8, i8* %151, i64 24
  %185 = bitcast i8* %184 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %185, align 8
  %186 = getelementptr inbounds i8, i8* %151, i64 32
  %187 = bitcast i8* %186 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %187, align 8
  store i8 %163, i8* %151, align 8
  %188 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %189 = icmp eq %"struct.blink::BidiRun"* %188, null
  %190 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %191 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %190, i64 0, i32 2
  %192 = bitcast %"struct.blink::BidiCharacterRun"** %191 to i8**
  %193 = select i1 %189, i8** %45, i8** %192
  store i8* %151, i8** %193, align 8
  store i8* %151, i8** %46, align 8
  %194 = load i32, i32* %47, align 8
  %195 = add i32 %194, 1
  store i32 %195, i32* %47, align 8
  br label %196

196:                                              ; preds = %183, %149
  %197 = icmp ult i32 %148, %133
  br i1 %197, label %143, label %141

198:                                              ; preds = %132
  %199 = icmp ugt i32 %49, %2
  br i1 %199, label %255, label %200

200:                                              ; preds = %198, %253
  %201 = phi i32 [ %205, %253 ], [ %49, %198 ]
  %202 = sub i32 %2, %201
  %203 = icmp ugt i32 %202, 65535
  %204 = add i32 %201, 65535
  %205 = select i1 %203, i32 %204, i32 %2
  br i1 %39, label %206, label %207

206:                                              ; preds = %200
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %201, i32 %205, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #9
  br label %253

207:                                              ; preds = %200
  %208 = tail call noalias i8* @malloc(i64 40) #9
  %209 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %210 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %209, i64 0, i32 1
  %211 = load i16, i16* %210, align 4
  %212 = trunc i16 %211 to i8
  %213 = and i8 %212, 127
  %214 = load i32, i32* %41, align 8
  %215 = lshr i16 %211, 7
  %216 = and i16 %215, 31
  %217 = zext i16 %216 to i32
  %218 = lshr i16 %211, 12
  %219 = trunc i16 %218 to i8
  %220 = and i8 %219, 1
  store i8 %220, i8* %208, align 8
  %221 = getelementptr inbounds i8, i8* %208, i64 1
  %222 = getelementptr inbounds i8, i8* %208, i64 8
  %223 = bitcast i8* %222 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %223, align 8
  %224 = getelementptr inbounds i8, i8* %208, i64 16
  %225 = bitcast i8* %224 to i32*
  store i32 %201, i32* %225, align 8
  %226 = getelementptr inbounds i8, i8* %208, i64 20
  %227 = bitcast i8* %226 to i32*
  store i32 %205, i32* %227, align 4
  %228 = icmp eq i32 %214, 10
  %229 = select i1 %228, i32 %217, i32 %214
  store i8 %213, i8* %221, align 1
  %230 = and i8 %212, 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %207
  switch i32 %229, label %240 [
    i32 5, label %233
    i32 2, label %233
    i32 0, label %233
  ]

233:                                              ; preds = %232, %232, %232
  %234 = add nuw i8 %213, 1
  store i8 %234, i8* %221, align 1
  br label %240

235:                                              ; preds = %207
  switch i32 %229, label %240 [
    i32 1, label %236
    i32 5, label %238
    i32 2, label %238
  ]

236:                                              ; preds = %235
  %237 = add nuw i8 %213, 1
  store i8 %237, i8* %221, align 1
  br label %240

238:                                              ; preds = %235, %235
  %239 = add nuw i8 %213, 2
  store i8 %239, i8* %221, align 1
  br label %240

240:                                              ; preds = %238, %236, %235, %233, %232
  %241 = getelementptr inbounds i8, i8* %208, i64 24
  %242 = bitcast i8* %241 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %242, align 8
  %243 = getelementptr inbounds i8, i8* %208, i64 32
  %244 = bitcast i8* %243 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %244, align 8
  store i8 %220, i8* %208, align 8
  %245 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %246 = icmp eq %"struct.blink::BidiRun"* %245, null
  %247 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %248 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %247, i64 0, i32 2
  %249 = bitcast %"struct.blink::BidiCharacterRun"** %248 to i8**
  %250 = select i1 %246, i8** %45, i8** %249
  store i8* %208, i8** %250, align 8
  store i8* %208, i8** %46, align 8
  %251 = load i32, i32* %47, align 8
  %252 = add i32 %251, 1
  store i32 %252, i32* %47, align 8
  br label %253

253:                                              ; preds = %240, %206
  %254 = icmp ult i32 %205, %2
  br i1 %254, label %200, label %255

255:                                              ; preds = %67, %135, %64, %253, %130, %27, %198, %75, %9, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.1718"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1718"*, %"class.WTF::Vector.1718"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.1718"* %1, %0
  br i1 %3, label %90, label %4, !prof !4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.1718"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.1718"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #9
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !3

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %31, align 8
  %33 = icmp eq %"class.blink::InlineIterator"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm(i64 %34) #9
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InlineIteratorEEEPKcv, i64 0, i64 0)) #9
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.1718"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = udiv i64 %35, 24
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = udiv i64 %35, 24
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"class.blink::InlineIterator"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"class.blink::InlineIterator"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !3

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = mul nuw nsw i64 %52, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %49, i64 %53, i1 false) #9
  %54 = bitcast %"class.WTF::Vector.1718"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #9
  %58 = bitcast %"class.WTF::Vector.1718"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.1718"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.1718"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = mul nuw nsw i64 %65, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %63, i64 %69, i1 false) #9
  %70 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %70, i64 %72
  %74 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %66, align 8
  %75 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %74, i64 %72
  %76 = icmp ne %"class.blink::InlineIterator"* %75, null
  %77 = icmp ne %"class.blink::InlineIterator"* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !3

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %70, i64 %81
  %83 = bitcast %"class.blink::InlineIterator"* %75 to i8*
  %84 = bitcast %"class.blink::InlineIterator"* %73 to i8*
  %85 = ptrtoint %"class.blink::InlineIterator"* %82 to i64
  %86 = ptrtoint %"class.blink::InlineIterator"* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* nonnull align 8 %84, i64 %87, i1 false) #9
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.1718"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::InlineIterator"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1718"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.1718", %"class.WTF::Vector.1718"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %24, i64 %25
  ret %"class.blink::InlineIterator"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"*, %"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"* dereferenceable(424)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"struct.blink::BidiRun"*, align 8
  %8 = alloca %"struct.blink::BidiIsolatedRun", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 8388608
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %130

14:                                               ; preds = %6
  %15 = and i96 %11, 113336795588871485128704
  %16 = icmp eq i96 %15, 75557863725914323419136
  br i1 %16, label %17, label %33

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = lshr i160 %22, 37
  %24 = trunc i160 %23 to i32
  %25 = and i32 %24, 31
  switch i32 %25, label %26 [
    i32 0, label %33
    i32 25, label %33
    i32 19, label %33
    i32 17, label %33
    i32 15, label %33
    i32 5, label %33
    i32 3, label %33
    i32 24, label %33
  ]

26:                                               ; preds = %17
  %27 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #9
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 26
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27) #9
  br i1 %32, label %33, label %130

33:                                               ; preds = %26, %17, %17, %17, %17, %17, %17, %17, %17, %14
  %34 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %0, i64 0, i32 1
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %130

37:                                               ; preds = %33
  %38 = ptrtoint %"class.blink::LayoutObject"* %4 to i64
  %39 = tail call noalias i8* @malloc(i64 40) #9
  %40 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 3, i32 0
  %41 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %41, i64 0, i32 1
  %43 = load i16, i16* %42, align 4
  %44 = trunc i16 %43 to i8
  %45 = and i8 %44, 127
  %46 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = lshr i16 %43, 7
  %49 = and i16 %48, 31
  %50 = zext i16 %49 to i32
  %51 = lshr i16 %43, 12
  %52 = trunc i16 %51 to i8
  %53 = and i8 %52, 1
  store i8 %53, i8* %39, align 8
  %54 = getelementptr inbounds i8, i8* %39, i64 1
  %55 = getelementptr inbounds i8, i8* %39, i64 8
  %56 = bitcast i8* %55 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %39, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 %2, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %39, i64 20
  %60 = bitcast i8* %59 to i32*
  store i32 %2, i32* %60, align 4
  %61 = icmp eq i32 %47, 10
  %62 = select i1 %61, i32 %50, i32 %47
  store i8 %45, i8* %54, align 1
  %63 = and i8 %44, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %37
  switch i32 %62, label %73 [
    i32 5, label %66
    i32 2, label %66
    i32 0, label %66
  ]

66:                                               ; preds = %65, %65, %65
  %67 = add nuw i8 %45, 1
  store i8 %67, i8* %54, align 1
  br label %73

68:                                               ; preds = %37
  switch i32 %62, label %73 [
    i32 1, label %69
    i32 5, label %71
    i32 2, label %71
  ]

69:                                               ; preds = %68
  %70 = add nuw i8 %45, 1
  store i8 %70, i8* %54, align 1
  br label %73

71:                                               ; preds = %68, %68
  %72 = add nuw i8 %45, 2
  store i8 %72, i8* %54, align 1
  br label %73

73:                                               ; preds = %71, %69, %68, %66, %65
  %74 = getelementptr inbounds i8, i8* %39, i64 24
  %75 = bitcast i8* %74 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %39, i64 32
  %77 = bitcast i8* %76 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %77, align 8
  store i8 %53, i8* %39, align 8
  %78 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 0
  %79 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %78, align 8
  %80 = icmp eq %"struct.blink::BidiRun"* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = bitcast %"struct.blink::BidiRun"** %78 to i8**
  store i8* %39, i8** %82, align 8
  br label %90

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %85 = bitcast %"struct.blink::BidiRun"** %84 to %"struct.blink::BidiCharacterRun"**
  %86 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %85, align 8
  %87 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %86, i64 0, i32 2
  %88 = bitcast %"struct.blink::BidiCharacterRun"** %87 to i8**
  store i8* %39, i8** %88, align 8
  %89 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  br label %90

90:                                               ; preds = %83, %81
  %91 = phi %"class.blink::BidiContext"* [ %41, %81 ], [ %89, %83 ]
  %92 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %93 = bitcast %"struct.blink::BidiRun"** %92 to i8**
  store i8* %39, i8** %93, align 8
  %94 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15
  %98 = bitcast %"struct.blink::BidiIsolatedRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %91, i64 0, i32 1
  %100 = load i16, i16* %99, align 4
  %101 = trunc i16 %100 to i8
  %102 = and i8 %101, 127
  %103 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %103, align 8
  %104 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 1
  %105 = bitcast %"class.blink::LineLayoutItem"* %104 to i64*
  store i64 %38, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 2
  %107 = bitcast %"struct.blink::BidiRun"** %106 to i8**
  store i8* %39, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 3
  store i32 %2, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 4
  store i8 %102, i8* %109, align 4
  %110 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %123, label %115, !prof !4

115:                                              ; preds = %90
  %116 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %97, i64 0, i32 0, i32 0, i32 0
  %117 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %116, align 8
  %118 = zext i32 %111 to i64
  %119 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %117, i64 %118
  %120 = bitcast %"struct.blink::BidiIsolatedRun"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %98, i64 32, i1 false) #9
  %121 = load i32, i32* %110, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %110, align 4
  br label %124

123:                                              ; preds = %90
  call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1723"* %97, %"struct.blink::BidiIsolatedRun"* nonnull dereferenceable(32) %8) #9
  br label %124

124:                                              ; preds = %115, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #9
  %125 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %0, i64 0, i32 3
  %126 = bitcast %"struct.blink::BidiRun"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9
  %127 = bitcast %"struct.blink::BidiRun"** %7 to i8**
  store i8* %39, i8** %127, align 8
  %128 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 20, i32 0
  %129 = call { %"struct.WTF::KeyValuePair.1737"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1734"* %128, %"struct.blink::BidiRun"** nonnull dereferenceable(8) %7, %"class.blink::MidpointState"* dereferenceable(32) %125) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #9
  store i8 1, i8* %34, align 4
  br label %130

130:                                              ; preds = %26, %6, %33, %124
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.1723"*, %"struct.blink::BidiIsolatedRun"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  %8 = icmp ugt %"struct.blink::BidiIsolatedRun"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::BidiIsolatedRun"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::BidiIsolatedRun"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %27) #9
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #9
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.1723"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::BidiIsolatedRun"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1723"* %0, i32 %22) #9
  %36 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::BidiIsolatedRun"* %1 to i64
  %39 = ptrtoint %"struct.blink::BidiIsolatedRun"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::BidiIsolatedRun"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.1723"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::BidiIsolatedRun"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1723"* %0, i32 %50) #9
  %64 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::BidiIsolatedRun"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::BidiIsolatedRun"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::BidiIsolatedRun"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %69, i64 %72
  %74 = bitcast %"struct.blink::BidiIsolatedRun"* %73 to i8*
  %75 = bitcast %"struct.blink::BidiIsolatedRun"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 32, i1 false) #9
  %76 = load i32, i32* %3, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1723"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.1723"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %4
  %15 = shl nuw nsw i64 %9, 5
  %16 = add nsw i64 %15, -32
  %17 = lshr exact i64 %16, 5
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %14, %21
  %22 = phi %"struct.blink::BidiIsolatedRun"* [ %28, %21 ], [ %6, %14 ]
  %23 = phi %"struct.blink::BidiIsolatedRun"* [ %27, %21 ], [ null, %14 ]
  %24 = phi i64 [ %29, %21 ], [ %19, %14 ]
  %25 = bitcast %"struct.blink::BidiIsolatedRun"* %23 to i8*
  %26 = bitcast %"struct.blink::BidiIsolatedRun"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false) #9
  %27 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %23, i64 1
  %28 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %22, i64 1
  %29 = add i64 %24, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %21, !llvm.loop !50

31:                                               ; preds = %21, %14
  %32 = phi %"struct.blink::BidiIsolatedRun"* [ %6, %14 ], [ %28, %21 ]
  %33 = phi %"struct.blink::BidiIsolatedRun"* [ null, %14 ], [ %27, %21 ]
  %34 = icmp ult i64 %16, 96
  br i1 %34, label %55, label %35

35:                                               ; preds = %31, %35
  %36 = phi %"struct.blink::BidiIsolatedRun"* [ %53, %35 ], [ %32, %31 ]
  %37 = phi %"struct.blink::BidiIsolatedRun"* [ %52, %35 ], [ %33, %31 ]
  %38 = bitcast %"struct.blink::BidiIsolatedRun"* %37 to i8*
  %39 = bitcast %"struct.blink::BidiIsolatedRun"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false) #9
  %40 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 1
  %41 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 1
  %42 = bitcast %"struct.blink::BidiIsolatedRun"* %40 to i8*
  %43 = bitcast %"struct.blink::BidiIsolatedRun"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false) #9
  %44 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 2
  %45 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 2
  %46 = bitcast %"struct.blink::BidiIsolatedRun"* %44 to i8*
  %47 = bitcast %"struct.blink::BidiIsolatedRun"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false) #9
  %48 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 3
  %49 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 3
  %50 = bitcast %"struct.blink::BidiIsolatedRun"* %48 to i8*
  %51 = bitcast %"struct.blink::BidiIsolatedRun"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false) #9
  %52 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 4
  %53 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 4
  %54 = icmp eq %"struct.blink::BidiIsolatedRun"* %53, %10
  br i1 %54, label %55, label %35

55:                                               ; preds = %31, %35, %4
  %56 = bitcast %"struct.blink::BidiIsolatedRun"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #9
  br label %122

57:                                               ; preds = %2
  %58 = zext i32 %1 to i64
  %59 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %58) #9
  %60 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #9
  %61 = lshr i64 %59, 5
  %62 = ptrtoint i8* %60 to i64
  %63 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %64, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %57
  %71 = bitcast %"struct.blink::BidiIsolatedRun"* %64 to i8*
  br label %117

72:                                               ; preds = %57
  %73 = bitcast i8* %60 to %"struct.blink::BidiIsolatedRun"*
  %74 = shl nuw nsw i64 %67, 5
  %75 = add nsw i64 %74, -32
  %76 = lshr exact i64 %75, 5
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %72, %80
  %81 = phi %"struct.blink::BidiIsolatedRun"* [ %87, %80 ], [ %64, %72 ]
  %82 = phi %"struct.blink::BidiIsolatedRun"* [ %86, %80 ], [ %73, %72 ]
  %83 = phi i64 [ %88, %80 ], [ %78, %72 ]
  %84 = bitcast %"struct.blink::BidiIsolatedRun"* %82 to i8*
  %85 = bitcast %"struct.blink::BidiIsolatedRun"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 32, i1 false) #9
  %86 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %82, i64 1
  %87 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %81, i64 1
  %88 = add i64 %83, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !51

90:                                               ; preds = %80, %72
  %91 = phi %"struct.blink::BidiIsolatedRun"* [ %64, %72 ], [ %87, %80 ]
  %92 = phi %"struct.blink::BidiIsolatedRun"* [ %73, %72 ], [ %86, %80 ]
  %93 = icmp ult i64 %75, 96
  br i1 %93, label %114, label %94

94:                                               ; preds = %90, %94
  %95 = phi %"struct.blink::BidiIsolatedRun"* [ %112, %94 ], [ %91, %90 ]
  %96 = phi %"struct.blink::BidiIsolatedRun"* [ %111, %94 ], [ %92, %90 ]
  %97 = bitcast %"struct.blink::BidiIsolatedRun"* %96 to i8*
  %98 = bitcast %"struct.blink::BidiIsolatedRun"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 32, i1 false) #9
  %99 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 1
  %100 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 1
  %101 = bitcast %"struct.blink::BidiIsolatedRun"* %99 to i8*
  %102 = bitcast %"struct.blink::BidiIsolatedRun"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 32, i1 false) #9
  %103 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 2
  %104 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 2
  %105 = bitcast %"struct.blink::BidiIsolatedRun"* %103 to i8*
  %106 = bitcast %"struct.blink::BidiIsolatedRun"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 32, i1 false) #9
  %107 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 3
  %108 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 3
  %109 = bitcast %"struct.blink::BidiIsolatedRun"* %107 to i8*
  %110 = bitcast %"struct.blink::BidiIsolatedRun"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 32, i1 false) #9
  %111 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 4
  %112 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 4
  %113 = icmp eq %"struct.blink::BidiIsolatedRun"* %112, %68
  br i1 %113, label %114, label %94

114:                                              ; preds = %94, %90
  %115 = bitcast %"class.WTF::Vector.1723"* %0 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %70, %114
  %118 = phi i8* [ %116, %114 ], [ %71, %70 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #9
  %119 = bitcast %"class.WTF::Vector.1723"* %0 to i64*
  store atomic i64 %62, i64* %119 monotonic, align 8
  %120 = trunc i64 %61 to i32
  %121 = getelementptr inbounds %"class.WTF::Vector.1723", %"class.WTF::Vector.1723"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %120, i32* %121, align 8
  br label %122

122:                                              ; preds = %117, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1737"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.1734"*, %"struct.blink::BidiRun"** dereferenceable(8), %"class.blink::MidpointState"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [9 x i8], align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.1737"*, %"struct.WTF::KeyValuePair.1737"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.1737"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.1737"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1734"* %0, %"struct.WTF::KeyValuePair.1737"* null)
  %10 = load %"struct.WTF::KeyValuePair.1737"*, %"struct.WTF::KeyValuePair.1737"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.1737"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"struct.blink::BidiRun"** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %40, i64 0, i32 0
  %42 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %41, align 8
  %43 = icmp eq %"struct.blink::BidiRun"* %42, null
  %44 = inttoptr i64 %18 to %"struct.blink::BidiRun"*
  br i1 %43, label %79, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %66
  %60 = phi %"struct.blink::BidiRun"* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.1737"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.1737"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"struct.blink::BidiRun"* %60, %44
  br i1 %65, label %120, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"struct.blink::BidiRun"* %60, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.1737"* %61, %"struct.WTF::KeyValuePair.1737"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %73, i64 0, i32 0
  %75 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %74, align 8
  %76 = icmp eq %"struct.blink::BidiRun"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.1737"* %68, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %11, %77
  %80 = phi %"struct.WTF::KeyValuePair.1737"* [ %73, %77 ], [ %40, %11 ]
  %81 = bitcast %"struct.WTF::KeyValuePair.1737"* %80 to i64*
  br label %98

82:                                               ; preds = %77
  %83 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %83)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 9, i1 false)
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %68, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"class.blink::MidpointState"* %84 to i64*
  %88 = bitcast %"struct.WTF::KeyValuePair.1737"* %68 to i64*
  store i64 0, i64* %88, align 8
  store atomic i64 0, i64* %87 monotonic, align 8
  store i32 0, i32* %85, align 4
  store i32 0, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %68, i64 0, i32 1, i32 1
  %90 = bitcast i32* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %83, i64 9, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %83)
  %91 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 2147483647
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = load i64, i64* %17, align 8
  br label %98

98:                                               ; preds = %79, %82
  %99 = phi i64* [ %81, %79 ], [ %88, %82 ]
  %100 = phi i64 [ %18, %79 ], [ %97, %82 ]
  %101 = phi %"struct.WTF::KeyValuePair.1737"* [ %80, %79 ], [ %68, %82 ]
  store i64 %100, i64* %99, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %101, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %2, i64 0, i32 0
  %104 = tail call dereferenceable(16) %"class.WTF::Vector.1718"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.1718"* %102, %"class.WTF::Vector.1718"* dereferenceable(16) %103) #9
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %101, i64 0, i32 1, i32 1
  %106 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %2, i64 0, i32 1
  %107 = bitcast i32* %105 to i8*
  %108 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 9, i1 false) #9
  %109 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %13, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %98
  %119 = tail call %"struct.WTF::KeyValuePair.1737"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1734"* %0, %"struct.WTF::KeyValuePair.1737"* %101)
  br label %120

120:                                              ; preds = %59, %98, %118
  %121 = phi i8 [ 1, %98 ], [ 1, %118 ], [ 0, %59 ]
  %122 = phi %"struct.WTF::KeyValuePair.1737"* [ %101, %98 ], [ %119, %118 ], [ %61, %59 ]
  %123 = insertvalue { %"struct.WTF::KeyValuePair.1737"*, i8 } undef, %"struct.WTF::KeyValuePair.1737"* %122, 0
  %124 = insertvalue { %"struct.WTF::KeyValuePair.1737"*, i8 } %123, i8 %121, 1
  ret { %"struct.WTF::KeyValuePair.1737"*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1737"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.1734"*, %"struct.WTF::KeyValuePair.1737"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [9 x i8], align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #9
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 40
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink7BidiRunENS2_13MidpointStateINS2_14InlineIteratorEEEEEEEPKcv, i64 0, i64 0)) #9
  %37 = bitcast i8* %36 to %"struct.WTF::KeyValuePair.1737"*
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %51, %41 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %37, i64 %42
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %40)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 9, i1 false)
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %37, i64 %42, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.blink::MidpointState"* %44 to i64*
  %48 = bitcast %"struct.WTF::KeyValuePair.1737"* %43 to i64*
  store i64 0, i64* %48, align 8
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %45, align 4
  store i32 0, i32* %46, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %37, i64 %42, i32 1, i32 1
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %40, i64 9, i1 false) #9
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %40)
  %51 = add nuw nsw i64 %42, 1
  %52 = icmp eq i64 %51, %34
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %32
  %54 = call %"struct.WTF::KeyValuePair.1737"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1734"* %0, %"struct.WTF::KeyValuePair.1737"* %37, i32 %33, %"struct.WTF::KeyValuePair.1737"* %1) #9
  ret %"struct.WTF::KeyValuePair.1737"* %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.1737"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.1734"*, %"struct.WTF::KeyValuePair.1737"*, i32, %"struct.WTF::KeyValuePair.1737"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1734", align 8
  %6 = bitcast %"class.WTF::HashTable.1734"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1734"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.1737"* %1, %"struct.WTF::KeyValuePair.1737"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1734"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1734"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.1737"*, %"struct.WTF::KeyValuePair.1737"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %22 to i64
  br label %66

24:                                               ; preds = %117
  %25 = bitcast %"class.WTF::HashTable.1734"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1734"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %118, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.1737"* [ null, %16 ], [ %121, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %119, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.1737"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %35, i64 %42, i32 0
  %44 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %43, align 8
  %45 = icmp eq %"struct.blink::BidiRun"* %44, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %47, align 8
  %49 = icmp eq %"class.blink::InlineIterator"* %48, null
  %50 = bitcast %"class.blink::InlineIterator"* %48 to i8*
  br i1 %49, label %57, label %51, !prof !3

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !4

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #9
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #9
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret %"struct.WTF::KeyValuePair.1737"* %33

66:                                               ; preds = %21, %117
  %67 = phi i64 [ %118, %117 ], [ %23, %21 ]
  %68 = phi i32 [ %119, %117 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.1737"* [ %120, %117 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.1737"* [ %121, %117 ], [ null, %21 ]
  %71 = phi i32 [ %122, %117 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.1737"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %117
    i64 0, label %117
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.1737"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1734"* nonnull %5, %"struct.blink::BidiRun"** dereferenceable(8) %77) #9
  %79 = extractvalue { %"struct.WTF::KeyValuePair.1737"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %80, align 8
  %82 = icmp eq %"class.blink::InlineIterator"* %81, null
  %83 = bitcast %"class.blink::InlineIterator"* %81 to i8*
  br i1 %82, label %90, label %84, !prof !3

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !4

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #9
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.1737"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::MidpointState"* %94 to i64*
  %98 = bitcast %"class.blink::MidpointState"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #9
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.blink::MidpointState"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %79, i64 0, i32 1, i32 1
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %69, i64 %72, i32 1, i32 1
  %109 = bitcast i32* %107 to i8*
  %110 = bitcast i32* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 9, i1 false) #9
  %111 = load %"struct.WTF::KeyValuePair.1737"*, %"struct.WTF::KeyValuePair.1737"** %15, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %111, i64 %72
  %113 = icmp eq %"struct.WTF::KeyValuePair.1737"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.1737"* %79, %"struct.WTF::KeyValuePair.1737"* %70
  %115 = load i32, i32* %12, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %111 to i64
  br label %117

117:                                              ; preds = %66, %66, %90
  %118 = phi i64 [ %67, %66 ], [ %116, %90 ], [ %67, %66 ]
  %119 = phi i32 [ %68, %66 ], [ %115, %90 ], [ %68, %66 ]
  %120 = phi %"struct.WTF::KeyValuePair.1737"* [ %69, %66 ], [ %111, %90 ], [ %69, %66 ]
  %121 = phi %"struct.WTF::KeyValuePair.1737"* [ %70, %66 ], [ %114, %90 ], [ %70, %66 ]
  %122 = add i32 %71, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1737"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.1734"*, %"struct.blink::BidiRun"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1737"*, %"struct.WTF::KeyValuePair.1737"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1734", %"class.WTF::HashTable.1734"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"struct.blink::BidiRun"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %32, i64 0, i32 0
  %35 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %34, align 8
  %36 = icmp eq %"struct.blink::BidiRun"* %35, null
  %37 = inttoptr i64 %10 to %"struct.blink::BidiRun"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.1737"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.1737"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.1737"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"struct.blink::BidiRun"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"struct.blink::BidiRun"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"struct.blink::BidiRun"* %63, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.1737"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.1737", %"struct.WTF::KeyValuePair.1737"* %75, i64 0, i32 0
  %78 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %77, align 8
  %79 = icmp eq %"struct.blink::BidiRun"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.1737"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.1737"*, i8 } undef, %"struct.WTF::KeyValuePair.1737"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.1737"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.1737"*, i8 } %85
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %2, align 8
  %4 = icmp eq %"class.blink::BidiContext"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %3) #9
  %10 = bitcast %"class.blink::BidiContext"* %3 to i8*
  tail call void @free(i8* %10) #9
  ret void

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !12}
!51 = distinct !{!51, !12}
